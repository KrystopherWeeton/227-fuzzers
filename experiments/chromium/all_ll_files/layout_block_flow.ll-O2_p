; ModuleID = '../../third_party/blink/renderer/core/layout/layout_block_flow.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_block_flow.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1807", %"class.std::__1::unique_ptr.1817" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1763, %"class.WTF::Vector.1764", %"class.std::__1::unique_ptr.1769", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1790, %"class.blink::Persistent.1791" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3242 }
%class.scoped_refptr.3242 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3243", %"class.WTF::Vector.630", %"class.WTF::Vector.3245", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3243" = type { %"class.base::RefCounted.3244" }
%"class.base::RefCounted.3244" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3245" = type { %"class.WTF::VectorBuffer.3246" }
%"class.WTF::VectorBuffer.3246" = type { %"class.WTF::VectorBufferBase.3247" }
%"class.WTF::VectorBufferBase.3247" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3248 }
%union.anon.3248 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.3233" }
%"class.blink::Member.3233" = type { %"class.blink::MemberBase.3234" }
%"class.blink::MemberBase.3234" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3235" }
%"class.blink::Member.3235" = type { %"class.blink::MemberBase.3236" }
%"class.blink::MemberBase.3236" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1646", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1623", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1648 }
%"class.WTF::RefCounted.1646" = type { %"class.base::RefCounted.1647" }
%"class.base::RefCounted.1647" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1623" = type { %"class.absl::optional_internal::optional_data.1624" }
%"class.absl::optional_internal::optional_data.1624" = type { %"class.absl::optional_internal::optional_data_base.1625" }
%"class.absl::optional_internal::optional_data_base.1625" = type { %"class.absl::optional_internal::optional_data_dtor_base.1626" }
%"class.absl::optional_internal::optional_data_dtor_base.1626" = type { i8, %union.anon.1627 }
%union.anon.1627 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1648 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1636", %"class.std::__1::map.1645"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1623" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1628", %"class.std::__1::__compressed_pair.1633" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1628" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"struct.std::__1::__compressed_pair_elem.1629" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1633" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1636" = type { %"class.std::__1::__tree.1637" }
%"class.std::__1::__tree.1637" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1638", %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1645" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1649" }
%"class.std::__1::unique_ptr.1649" = type { %"class.std::__1::__compressed_pair.1650" }
%"class.std::__1::__compressed_pair.1650" = type { %"struct.std::__1::__compressed_pair_elem.1651" }
%"struct.std::__1::__compressed_pair_elem.1651" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1652" }
%"class.WTF::Vector.1652" = type { %"class.WTF::VectorBuffer.1653" }
%"class.WTF::VectorBuffer.1653" = type { %"class.WTF::VectorBufferBase.1654" }
%"class.WTF::VectorBufferBase.1654" = type { %"class.mojo::StructPtr.1655"*, i32, i32 }
%"class.mojo::StructPtr.1655" = type { %"class.std::__1::unique_ptr.1656" }
%"class.std::__1::unique_ptr.1656" = type { %"class.std::__1::__compressed_pair.1657" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.1658" }
%"struct.std::__1::__compressed_pair_elem.1658" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1659", %"class.WTF::HashMap.1666", %"class.WTF::HashMap.1671", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1676", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1659" = type { %"class.std::__1::unique_ptr.1660" }
%"class.std::__1::unique_ptr.1660" = type { %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.1662" }
%"struct.std::__1::__compressed_pair_elem.1662" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1666" = type { %"class.WTF::HashTable.1667" }
%"class.WTF::HashTable.1667" = type <{ %"struct.WTF::KeyValuePair.1670"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1670" = type opaque
%"class.WTF::HashMap.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"struct.WTF::KeyValuePair.1675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1675" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1676" = type { %"class.std::__1::unique_ptr.1677" }
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1756" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1691", i32 }>
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1694", %"class.absl::optional.1695", %"class.absl::optional.1700", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1709", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1731", %"class.std::__1::map.1742", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1751", i8, %class.scoped_refptr.1705, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1752" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1694" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1695" = type { %"class.absl::optional_internal::optional_data.1696" }
%"class.absl::optional_internal::optional_data.1696" = type { %"class.absl::optional_internal::optional_data_base.1697" }
%"class.absl::optional_internal::optional_data_base.1697" = type { %"class.absl::optional_internal::optional_data_dtor_base.1698" }
%"class.absl::optional_internal::optional_data_dtor_base.1698" = type { i8, %union.anon.1699 }
%union.anon.1699 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1700" = type { %"class.absl::optional_internal::optional_data.1701" }
%"class.absl::optional_internal::optional_data.1701" = type { %"class.absl::optional_internal::optional_data_base.1702" }
%"class.absl::optional_internal::optional_data_base.1702" = type { %"class.absl::optional_internal::optional_data_dtor_base.1703" }
%"class.absl::optional_internal::optional_data_dtor_base.1703" = type { i8, %union.anon.1704 }
%union.anon.1704 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1705, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1706" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1706" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1707 }
%class.scoped_refptr.1707 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1762", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1705, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1762" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1708 }
%class.scoped_refptr.1708 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1712", %class.scoped_refptr.1713 }
%"class.base::RepeatingCallback.1712" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1713 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1714", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1714" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1718", %"class.std::__1::unique_ptr.1724", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1730" }
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1730" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1731" = type { %"class.std::__1::__tree.1732" }
%"class.std::__1::__tree.1732" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1733", %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1742" = type { %"class.std::__1::__tree.1743" }
%"class.std::__1::__tree.1743" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1744", %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1751" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1705 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1752" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1756" = type { %"class.std::__1::__compressed_pair.1757" }
%"class.std::__1::__compressed_pair.1757" = type { %"struct.std::__1::__compressed_pair_elem.1758" }
%"struct.std::__1::__compressed_pair_elem.1758" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3256 }
%class.scoped_refptr.3256 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3266" }
%"class.blink::Member.3266" = type { %"class.blink::MemberBase.3267" }
%"class.blink::MemberBase.3267" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3262" }
%"class.blink::MemberBase.3262" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3263" }
%"class.blink::MemberBase.3263" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3264" }
%"class.blink::MemberBase.3264" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3265" }
%"class.blink::MemberBase.3265" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3257", %"class.WTF::Vector.3257" }
%"class.WTF::Vector.3257" = type { %"class.WTF::VectorBuffer.3258" }
%"class.WTF::VectorBuffer.3258" = type { %"class.WTF::VectorBufferBase.3259" }
%"class.WTF::VectorBufferBase.3259" = type { %class.scoped_refptr.3256*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1848", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2092", %"class.std::__1::unique_ptr.2098", %class.scoped_refptr.1844, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2104", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::UntracedMember.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1852", %"class.blink::Member.1857", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1859", i8, i32, %"class.blink::Color", %"class.absl::optional.1862", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1869", %"class.std::__1::unique_ptr.1872", i32, [4 x i8], %"class.WTF::HashSet.1875", %"class.blink::Member.1882", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1884", %"class.blink::HeapHashSet.1891", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1899", i8, %"class.blink::Member.1905", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1917", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1931", i8, %"class.std::__1::unique_ptr.1937", %"class.std::__1::unique_ptr.2018", %"class.WTF::Vector.2024", i32, %class.scoped_refptr.2029, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2030", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::HeapHashSet.2036", %"class.blink::HeapHashSet.2043", %"class.std::__1::unique_ptr.2050", %"class.std::__1::unique_ptr.2057", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %class.scoped_refptr.1856*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1856 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2304", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2312", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2326", %"class.blink::FrameLoader", %"class.blink::Member.2347", %"class.blink::Member.343", %"class.blink::Member.2348", %"class.blink::Member.2378", %"class.blink::Member.2394", %"class.blink::Member.2396", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2398", %class.scoped_refptr.2622, %"class.blink::Member.2623", %"class.blink::Member.2625", %"class.blink::Member.2627", %"class.blink::Member.2629", %"class.blink::Member.2631", %"class.blink::Member.2635", %"class.blink::Member.2637", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2641", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2662", %"class.std::__1::unique_ptr.2663", %"class.absl::optional.2292", i32, [4 x i8], %"class.std::__1::unique_ptr.2669", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2677", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2682", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2687", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2690", %"class.blink::Member.2692", %"class.blink::Member.2694", %"class.blink::Member.2696", %"class.mojo::StructPtr.2699", %"class.blink::Member.2708", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2710", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2137", %"class.blink::Member.2139", %"class.blink::Member.2141", i8, i32, i8, i32, %"class.blink::Member.2274", %"class.blink::Member.2164", %"class.blink::FrameLifecycle", %"class.blink::Member.2135", %"class.blink::Member.2135", %"class.blink::Member.2135", %"class.blink::Member.2135", %"class.blink::Member.2135", %"class.blink::Member.2135", %"class.blink::Member.1857", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2285", i8, %"class.base::UnguessableToken", %"class.absl::optional.2287", %"class.absl::optional.2292", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2135", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2141" = type { %"class.blink::MemberBase.2142" }
%"class.blink::MemberBase.2142" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2135", %"class.blink::Member.2164", %"class.blink::Member.2166", %"class.blink::Member.2168", i8, %"class.WTF::Vector.2170" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2157" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2145" }
%"class.blink::HeapVector.2145" = type { %"class.WTF::Vector.2148" }
%"class.WTF::Vector.2148" = type { %"class.WTF::VectorBuffer.2149" }
%"class.WTF::VectorBuffer.2149" = type { %"class.WTF::VectorBufferBase.2150", [32 x i8] }
%"class.WTF::VectorBufferBase.2150" = type { %"struct.std::__1::pair.2151"*, i32, i32 }
%"struct.std::__1::pair.2151" = type { %"class.WTF::AtomicString", %"class.blink::Member.2152" }
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::HeapVector.2154"* }
%"class.blink::HeapVector.2154" = type opaque
%"class.std::__1::unique_ptr.2157" = type { %"class.std::__1::__compressed_pair.2158" }
%"class.std::__1::__compressed_pair.2158" = type { %"struct.std::__1::__compressed_pair_elem.2159" }
%"struct.std::__1::__compressed_pair_elem.2159" = type { %"class.WTF::Vector.2160"* }
%"class.WTF::Vector.2160" = type opaque
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2170" = type { %"class.WTF::VectorBuffer.2171" }
%"class.WTF::VectorBuffer.2171" = type { %"class.WTF::VectorBufferBase.2172" }
%"class.WTF::VectorBufferBase.2172" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2266" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2173, %"class.std::__1::unique_ptr.1691", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1705, i32 }>
%class.scoped_refptr.2173 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1705, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2232", %"class.absl::optional.2237", %"class.absl::optional.2190", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2257", i8, [7 x i8], %class.scoped_refptr.1705, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1714" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1705, %"class.std::__1::unique_ptr.2174", %"class.absl::optional.2184", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2190", %"class.std::__1::unique_ptr.2195", i8, i64, %class.scoped_refptr.2229, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2230", %"class.base::WeakPtrFactory.2231" }
%"class.std::__1::unique_ptr.2174" = type { %"class.std::__1::__compressed_pair.2175" }
%"class.std::__1::__compressed_pair.2175" = type { %"struct.std::__1::__compressed_pair_elem.2176" }
%"struct.std::__1::__compressed_pair_elem.2176" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1705, i8, %"class.mojo::ScopedHandleBase.2177", %class.scoped_refptr.2178, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2179", i8*, %"class.base::WeakPtrFactory.2180" }
%"class.mojo::ScopedHandleBase.2177" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2178 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2179" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2180" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2184" = type { %"class.absl::optional_internal::optional_data.2185" }
%"class.absl::optional_internal::optional_data.2185" = type { %"class.absl::optional_internal::optional_data_base.2186" }
%"class.absl::optional_internal::optional_data_base.2186" = type { %"class.absl::optional_internal::optional_data_dtor_base.2187" }
%"class.absl::optional_internal::optional_data_dtor_base.2187" = type { i8, %union.anon.2188 }
%union.anon.2188 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2189", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2189" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2195" = type { %"class.std::__1::__compressed_pair.2196" }
%"class.std::__1::__compressed_pair.2196" = type { %"struct.std::__1::__compressed_pair_elem.2197" }
%"struct.std::__1::__compressed_pair_elem.2197" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2198", i8, i64, %class.scoped_refptr.2199, %class.scoped_refptr.2224 }
%"class.base::RepeatingCallback.2198" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2199 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2200", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2202", %"class.std::__1::map.2213", i8, [7 x i8] }>
%"class.base::RefCounted.2200" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2201 }
%class.scoped_refptr.2201 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2202" = type { %"class.std::__1::__tree.2203" }
%"class.std::__1::__tree.2203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2204", %"class.std::__1::__compressed_pair.2208" }
%"class.std::__1::__compressed_pair.2204" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2213" = type { %"class.std::__1::__tree.2214" }
%"class.std::__1::__tree.2214" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2215", %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2224 = type { %"class.base::RefCountedData.2225"* }
%"class.base::RefCountedData.2225" = type opaque
%class.scoped_refptr.2229 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2230" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2231" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2232" = type { %"class.absl::optional_internal::optional_data.2233" }
%"class.absl::optional_internal::optional_data.2233" = type { %"class.absl::optional_internal::optional_data_base.2234" }
%"class.absl::optional_internal::optional_data_base.2234" = type { %"class.absl::optional_internal::optional_data_dtor_base.2235" }
%"class.absl::optional_internal::optional_data_dtor_base.2235" = type { i8, %union.anon.2236 }
%union.anon.2236 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2237" = type { %"class.absl::optional_internal::optional_data.2238" }
%"class.absl::optional_internal::optional_data.2238" = type { %"class.absl::optional_internal::optional_data_base.2239" }
%"class.absl::optional_internal::optional_data_base.2239" = type { %"class.absl::optional_internal::optional_data_dtor_base.2240" }
%"class.absl::optional_internal::optional_data_dtor_base.2240" = type { i8, [7 x i8], %union.anon.2241 }
%union.anon.2241 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2190" = type { %"class.absl::optional_internal::optional_data.2191" }
%"class.absl::optional_internal::optional_data.2191" = type { %"class.absl::optional_internal::optional_data_base.2192" }
%"class.absl::optional_internal::optional_data_base.2192" = type { %"class.absl::optional_internal::optional_data_dtor_base.2193" }
%"class.absl::optional_internal::optional_data_dtor_base.2193" = type { i8, %union.anon.2194 }
%union.anon.2194 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2242 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2242 = type { %"class.std::__1::map.2245" }
%"class.std::__1::map.2245" = type { %"class.std::__1::__tree.2246" }
%"class.std::__1::__tree.2246" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2247", %"class.std::__1::__compressed_pair.2251" }
%"class.std::__1::__compressed_pair.2247" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.2251" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2256"*, i64 }
%"class.std::__1::unique_ptr.2256" = type opaque
%"class.std::__1::map.2257" = type { %"class.std::__1::__tree.2258" }
%"class.std::__1::__tree.2258" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2259", %"class.std::__1::__compressed_pair.2263" }
%"class.std::__1::__compressed_pair.2259" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.2263" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2266" = type { %"class.std::__1::__compressed_pair.2267" }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.2268" }
%"struct.std::__1::__compressed_pair_elem.2268" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2274" = type { %"class.blink::MemberBase.2275" }
%"class.blink::MemberBase.2275" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2135", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2276" }
%"class.base::internal::flat_tree.2276" = type { %"class.std::__1::vector.2277" }
%"class.std::__1::vector.2277" = type { %"class.std::__1::__vector_base.2278" }
%"class.std::__1::__vector_base.2278" = type { %"struct.std::__1::pair.2279"*, %"struct.std::__1::pair.2279"*, %"class.std::__1::__compressed_pair.2280" }
%"struct.std::__1::pair.2279" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2280" = type { %"struct.std::__1::__compressed_pair_elem.2281" }
%"struct.std::__1::__compressed_pair_elem.2281" = type { %"struct.std::__1::pair.2279"* }
%"class.blink::Member.2285" = type { %"class.blink::MemberBase.2286" }
%"class.blink::MemberBase.2286" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2287" = type { %"class.absl::optional_internal::optional_data.2288" }
%"class.absl::optional_internal::optional_data.2288" = type { %"class.absl::optional_internal::optional_data_base.2289" }
%"class.absl::optional_internal::optional_data_base.2289" = type { %"class.absl::optional_internal::optional_data_dtor_base.2290" }
%"class.absl::optional_internal::optional_data_dtor_base.2290" = type { i8, %union.anon.2291 }
%union.anon.2291 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2297" }
%"class.blink::HeapHashSet.2297" = type { %"class.WTF::HashSet.2300" }
%"class.WTF::HashSet.2300" = type { %"class.WTF::HashTable.2301" }
%"class.WTF::HashTable.2301" = type <{ %"class.blink::WeakMember.2303"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2303" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2304" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2305" }
%"class.blink::HeapHashMap.2305" = type { %"class.WTF::HashMap.2308" }
%"class.WTF::HashMap.2308" = type { %"class.WTF::HashTable.2309" }
%"class.WTF::HashTable.2309" = type <{ %"struct.WTF::KeyValuePair.2311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2311" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2312" = type { %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.2314" }
%"struct.std::__1::__compressed_pair_elem.2314" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2315", %"class.base::WeakPtrFactory.2320" }
%"class.WTF::HashMap.2315" = type { %"class.WTF::HashTable.2316" }
%"class.WTF::HashTable.2316" = type <{ %"struct.WTF::KeyValuePair.2319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2319" = type opaque
%"class.base::WeakPtrFactory.2320" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2324" }
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3276" }
%"class.blink::WeakMember.3276" = type { %"class.blink::MemberBase.3277" }
%"class.blink::MemberBase.3277" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3278", i64, %"class.std::__1::map.3279", i8*, i64, %"class.base::WeakPtrFactory.3288" }
%"class.base::RepeatingCallback.3278" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3279" = type { %"class.std::__1::__tree.3280" }
%"class.std::__1::__tree.3280" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3281", %"class.std::__1::__compressed_pair.3285" }
%"class.std::__1::__compressed_pair.3281" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"class.std::__1::__compressed_pair.3285" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3288" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2326" = type { %"class.WTF::HashSet.2329" }
%"class.WTF::HashSet.2329" = type { %"class.WTF::HashTable.2330" }
%"class.WTF::HashTable.2330" = type <{ %"class.blink::WeakMember.2332"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2332" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1857", %"class.blink::Member.2333", %"class.blink::Member.2335", %"class.std::__1::unique_ptr.2337", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2343" }
%"class.blink::Member.2333" = type { %"class.blink::MemberBase.2334" }
%"class.blink::MemberBase.2334" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2335" = type { %"class.blink::MemberBase.2336" }
%"class.blink::MemberBase.2336" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2337" = type { %"class.std::__1::__compressed_pair.2338" }
%"class.std::__1::__compressed_pair.2338" = type { %"struct.std::__1::__compressed_pair_elem.2339" }
%"struct.std::__1::__compressed_pair_elem.2339" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::HashSet.2343" = type { %"class.WTF::HashTable.2344" }
%"class.WTF::HashTable.2344" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.1857", %"class.blink::Member.2352", %"class.blink::Member.2354", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.2356", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.2362", i8, [7 x i8] }>
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type opaque
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.2356" = type { %"class.std::__1::__compressed_pair.2357" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.2358" }
%"struct.std::__1::__compressed_pair_elem.2358" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.2366", %"class.blink::Member.318", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2368", %"class.blink::HeapVector.2370", i8, [7 x i8] }>
%"class.blink::Member.2368" = type { %"class.blink::MemberBase.2369" }
%"class.blink::MemberBase.2369" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2366" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2787" }
%"class.blink::WeakMember.2787" = type { %"class.blink::MemberBase.916" }
%"class.blink::HeapVector.2370" = type { %"class.WTF::Vector.2373" }
%"class.WTF::Vector.2373" = type { %"class.WTF::VectorBuffer.2374" }
%"class.WTF::VectorBuffer.2374" = type { %"class.WTF::VectorBufferBase.2375", [96 x i8] }
%"class.WTF::VectorBufferBase.2375" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1215" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1857", %"class.blink::Member.2382", %"class.blink::Member.2384", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2386", %"class.blink::Member.2392" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2382" = type { %"class.blink::MemberBase.2383" }
%"class.blink::MemberBase.2383" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2384" = type { %"class.blink::MemberBase.2385" }
%"class.blink::MemberBase.2385" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2386" = type { %"class.std::__1::__compressed_pair.2387" }
%"class.std::__1::__compressed_pair.2387" = type { %"struct.std::__1::__compressed_pair_elem.2388" }
%"struct.std::__1::__compressed_pair_elem.2388" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2392" = type { %"class.blink::MemberBase.2393" }
%"class.blink::MemberBase.2393" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2398" = type { %"class.blink::MemberBase.2399" }
%"class.blink::MemberBase.2399" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2402", %"class.blink::HeapListHashSet.2413", %"class.blink::HeapListHashSet.2424", %"class.blink::HeapListHashSet.2435", %"class.blink::HeapListHashSet.2446", %"class.blink::HeapListHashSet.2457", %"class.blink::HeapListHashSet.2468", %"class.blink::HeapListHashSet.2479", %"class.blink::HeapListHashSet.2490", %"class.blink::HeapListHashSet.2501", %"class.blink::HeapListHashSet.2512", %"class.blink::HeapListHashSet.2523", %"class.blink::HeapListHashSet.2534", %"class.blink::HeapListHashSet.2545", %"class.blink::HeapListHashSet.2556", %"class.blink::HeapListHashSet.2567", %"class.blink::HeapListHashSet.2578", %"class.blink::HeapListHashSet.2589", %"class.blink::HeapListHashSet.2600", %"class.blink::HeapListHashSet.2611" }
%"class.blink::HeapListHashSet.2402" = type { %"class.WTF::ListHashSet.base.2412", [7 x i8] }
%"class.WTF::ListHashSet.base.2412" = type <{ %"class.WTF::HashTable.2407", %"class.blink::Member.2409", %"class.blink::Member.2409", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2407" = type <{ %"class.blink::Member.2409"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2409" = type { %"class.blink::MemberBase.2410" }
%"class.blink::MemberBase.2410" = type { %"class.blink::HeapListHashSetNode.2411"* }
%"class.blink::HeapListHashSetNode.2411" = type { %"class.blink::Member.2625", %"class.blink::Member.2409", %"class.blink::Member.2409" }
%"class.blink::HeapListHashSet.2413" = type { %"class.WTF::ListHashSet.base.2423", [7 x i8] }
%"class.WTF::ListHashSet.base.2423" = type <{ %"class.WTF::HashTable.2418", %"class.blink::Member.2420", %"class.blink::Member.2420", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2418" = type <{ %"class.blink::Member.2420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2420" = type { %"class.blink::MemberBase.2421" }
%"class.blink::MemberBase.2421" = type { %"class.blink::HeapListHashSetNode.2422"* }
%"class.blink::HeapListHashSetNode.2422" = type { %"class.blink::Member.2783", %"class.blink::Member.2420", %"class.blink::Member.2420" }
%"class.blink::Member.2783" = type { %"class.blink::MemberBase.2784" }
%"class.blink::MemberBase.2784" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2424" = type { %"class.WTF::ListHashSet.base.2434", [7 x i8] }
%"class.WTF::ListHashSet.base.2434" = type <{ %"class.WTF::HashTable.2429", %"class.blink::Member.2431", %"class.blink::Member.2431", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2429" = type <{ %"class.blink::Member.2431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::HeapListHashSetNode.2433"* }
%"class.blink::HeapListHashSetNode.2433" = type { %"class.blink::Member.2779", %"class.blink::Member.2431", %"class.blink::Member.2431" }
%"class.blink::Member.2779" = type { %"class.blink::MemberBase.2780" }
%"class.blink::MemberBase.2780" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2435" = type { %"class.WTF::ListHashSet.base.2445", [7 x i8] }
%"class.WTF::ListHashSet.base.2445" = type <{ %"class.WTF::HashTable.2440", %"class.blink::Member.2442", %"class.blink::Member.2442", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2440" = type <{ %"class.blink::Member.2442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::HeapListHashSetNode.2444"* }
%"class.blink::HeapListHashSetNode.2444" = type { %"class.blink::Member.2775", %"class.blink::Member.2442", %"class.blink::Member.2442" }
%"class.blink::Member.2775" = type { %"class.blink::MemberBase.2776" }
%"class.blink::MemberBase.2776" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2446" = type { %"class.WTF::ListHashSet.base.2456", [7 x i8] }
%"class.WTF::ListHashSet.base.2456" = type <{ %"class.WTF::HashTable.2451", %"class.blink::Member.2453", %"class.blink::Member.2453", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2451" = type <{ %"class.blink::Member.2453"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::HeapListHashSetNode.2455"* }
%"class.blink::HeapListHashSetNode.2455" = type { %"class.blink::Member.2771", %"class.blink::Member.2453", %"class.blink::Member.2453" }
%"class.blink::Member.2771" = type { %"class.blink::MemberBase.2772" }
%"class.blink::MemberBase.2772" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2457" = type { %"class.WTF::ListHashSet.base.2467", [7 x i8] }
%"class.WTF::ListHashSet.base.2467" = type <{ %"class.WTF::HashTable.2462", %"class.blink::Member.2464", %"class.blink::Member.2464", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2462" = type <{ %"class.blink::Member.2464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2464" = type { %"class.blink::MemberBase.2465" }
%"class.blink::MemberBase.2465" = type { %"class.blink::HeapListHashSetNode.2466"* }
%"class.blink::HeapListHashSetNode.2466" = type { %"class.blink::Member.2767", %"class.blink::Member.2464", %"class.blink::Member.2464" }
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2468" = type { %"class.WTF::ListHashSet.base.2478", [7 x i8] }
%"class.WTF::ListHashSet.base.2478" = type <{ %"class.WTF::HashTable.2473", %"class.blink::Member.2475", %"class.blink::Member.2475", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2473" = type <{ %"class.blink::Member.2475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::HeapListHashSetNode.2477"* }
%"class.blink::HeapListHashSetNode.2477" = type { %"class.blink::Member.2763", %"class.blink::Member.2475", %"class.blink::Member.2475" }
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2479" = type { %"class.WTF::ListHashSet.base.2489", [7 x i8] }
%"class.WTF::ListHashSet.base.2489" = type <{ %"class.WTF::HashTable.2484", %"class.blink::Member.2486", %"class.blink::Member.2486", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2484" = type <{ %"class.blink::Member.2486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2486" = type { %"class.blink::MemberBase.2487" }
%"class.blink::MemberBase.2487" = type { %"class.blink::HeapListHashSetNode.2488"* }
%"class.blink::HeapListHashSetNode.2488" = type { %"class.blink::Member.2759", %"class.blink::Member.2486", %"class.blink::Member.2486" }
%"class.blink::Member.2759" = type { %"class.blink::MemberBase.2760" }
%"class.blink::MemberBase.2760" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2490" = type { %"class.WTF::ListHashSet.base.2500", [7 x i8] }
%"class.WTF::ListHashSet.base.2500" = type <{ %"class.WTF::HashTable.2495", %"class.blink::Member.2497", %"class.blink::Member.2497", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2495" = type <{ %"class.blink::Member.2497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::HeapListHashSetNode.2499"* }
%"class.blink::HeapListHashSetNode.2499" = type { %"class.blink::Member.2755", %"class.blink::Member.2497", %"class.blink::Member.2497" }
%"class.blink::Member.2755" = type { %"class.blink::MemberBase.2756" }
%"class.blink::MemberBase.2756" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2501" = type { %"class.WTF::ListHashSet.base.2511", [7 x i8] }
%"class.WTF::ListHashSet.base.2511" = type <{ %"class.WTF::HashTable.2506", %"class.blink::Member.2508", %"class.blink::Member.2508", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2506" = type <{ %"class.blink::Member.2508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::HeapListHashSetNode.2510"* }
%"class.blink::HeapListHashSetNode.2510" = type { %"class.blink::Member.2751", %"class.blink::Member.2508", %"class.blink::Member.2508" }
%"class.blink::Member.2751" = type { %"class.blink::MemberBase.2752" }
%"class.blink::MemberBase.2752" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2512" = type { %"class.WTF::ListHashSet.base.2522", [7 x i8] }
%"class.WTF::ListHashSet.base.2522" = type <{ %"class.WTF::HashTable.2517", %"class.blink::Member.2519", %"class.blink::Member.2519", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2517" = type <{ %"class.blink::Member.2519"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::HeapListHashSetNode.2521"* }
%"class.blink::HeapListHashSetNode.2521" = type { %"class.blink::Member.2629", %"class.blink::Member.2519", %"class.blink::Member.2519" }
%"class.blink::HeapListHashSet.2523" = type { %"class.WTF::ListHashSet.base.2533", [7 x i8] }
%"class.WTF::ListHashSet.base.2533" = type <{ %"class.WTF::HashTable.2528", %"class.blink::Member.2530", %"class.blink::Member.2530", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2528" = type <{ %"class.blink::Member.2530"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2530" = type { %"class.blink::MemberBase.2531" }
%"class.blink::MemberBase.2531" = type { %"class.blink::HeapListHashSetNode.2532"* }
%"class.blink::HeapListHashSetNode.2532" = type { %"class.blink::Member.2745", %"class.blink::Member.2530", %"class.blink::Member.2530" }
%"class.blink::Member.2745" = type { %"class.blink::MemberBase.2746" }
%"class.blink::MemberBase.2746" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2534" = type { %"class.WTF::ListHashSet.base.2544", [7 x i8] }
%"class.WTF::ListHashSet.base.2544" = type <{ %"class.WTF::HashTable.2539", %"class.blink::Member.2541", %"class.blink::Member.2541", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2539" = type <{ %"class.blink::Member.2541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2541" = type { %"class.blink::MemberBase.2542" }
%"class.blink::MemberBase.2542" = type { %"class.blink::HeapListHashSetNode.2543"* }
%"class.blink::HeapListHashSetNode.2543" = type { %"class.blink::Member.2741", %"class.blink::Member.2541", %"class.blink::Member.2541" }
%"class.blink::Member.2741" = type { %"class.blink::MemberBase.2742" }
%"class.blink::MemberBase.2742" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2545" = type { %"class.WTF::ListHashSet.base.2555", [7 x i8] }
%"class.WTF::ListHashSet.base.2555" = type <{ %"class.WTF::HashTable.2550", %"class.blink::Member.2552", %"class.blink::Member.2552", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2550" = type <{ %"class.blink::Member.2552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::HeapListHashSetNode.2554"* }
%"class.blink::HeapListHashSetNode.2554" = type { %"class.blink::Member.2737", %"class.blink::Member.2552", %"class.blink::Member.2552" }
%"class.blink::Member.2737" = type { %"class.blink::MemberBase.2738" }
%"class.blink::MemberBase.2738" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2556" = type { %"class.WTF::ListHashSet.base.2566", [7 x i8] }
%"class.WTF::ListHashSet.base.2566" = type <{ %"class.WTF::HashTable.2561", %"class.blink::Member.2563", %"class.blink::Member.2563", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2561" = type <{ %"class.blink::Member.2563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::HeapListHashSetNode.2565"* }
%"class.blink::HeapListHashSetNode.2565" = type { %"class.blink::Member.2733", %"class.blink::Member.2563", %"class.blink::Member.2563" }
%"class.blink::Member.2733" = type { %"class.blink::MemberBase.2734" }
%"class.blink::MemberBase.2734" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2567" = type { %"class.WTF::ListHashSet.base.2577", [7 x i8] }
%"class.WTF::ListHashSet.base.2577" = type <{ %"class.WTF::HashTable.2572", %"class.blink::Member.2574", %"class.blink::Member.2574", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2572" = type <{ %"class.blink::Member.2574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2574" = type { %"class.blink::MemberBase.2575" }
%"class.blink::MemberBase.2575" = type { %"class.blink::HeapListHashSetNode.2576"* }
%"class.blink::HeapListHashSetNode.2576" = type { %"class.blink::Member.2729", %"class.blink::Member.2574", %"class.blink::Member.2574" }
%"class.blink::Member.2729" = type { %"class.blink::MemberBase.2730" }
%"class.blink::MemberBase.2730" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2578" = type { %"class.WTF::ListHashSet.base.2588", [7 x i8] }
%"class.WTF::ListHashSet.base.2588" = type <{ %"class.WTF::HashTable.2583", %"class.blink::Member.2585", %"class.blink::Member.2585", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2583" = type <{ %"class.blink::Member.2585"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::HeapListHashSetNode.2587"* }
%"class.blink::HeapListHashSetNode.2587" = type { %"class.blink::Member.2725", %"class.blink::Member.2585", %"class.blink::Member.2585" }
%"class.blink::Member.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2589" = type { %"class.WTF::ListHashSet.base.2599", [7 x i8] }
%"class.WTF::ListHashSet.base.2599" = type <{ %"class.WTF::HashTable.2594", %"class.blink::Member.2596", %"class.blink::Member.2596", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2594" = type <{ %"class.blink::Member.2596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::HeapListHashSetNode.2598"* }
%"class.blink::HeapListHashSetNode.2598" = type { %"class.blink::Member.2721", %"class.blink::Member.2596", %"class.blink::Member.2596" }
%"class.blink::Member.2721" = type { %"class.blink::MemberBase.2722" }
%"class.blink::MemberBase.2722" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2600" = type { %"class.WTF::ListHashSet.base.2610", [7 x i8] }
%"class.WTF::ListHashSet.base.2610" = type <{ %"class.WTF::HashTable.2605", %"class.blink::Member.2607", %"class.blink::Member.2607", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2605" = type <{ %"class.blink::Member.2607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::HeapListHashSetNode.2609"* }
%"class.blink::HeapListHashSetNode.2609" = type { %"class.blink::Member.2631", %"class.blink::Member.2607", %"class.blink::Member.2607" }
%"class.blink::HeapListHashSet.2611" = type { %"class.WTF::ListHashSet.base.2621", [7 x i8] }
%"class.WTF::ListHashSet.base.2621" = type <{ %"class.WTF::HashTable.2616", %"class.blink::Member.2618", %"class.blink::Member.2618", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2616" = type <{ %"class.blink::Member.2618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::HeapListHashSetNode.2620"* }
%"class.blink::HeapListHashSetNode.2620" = type { %"class.blink::Member.2623", %"class.blink::Member.2618", %"class.blink::Member.2618" }
%class.scoped_refptr.2622 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2623" = type { %"class.blink::MemberBase.2624" }
%"class.blink::MemberBase.2624" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2639" }
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3291" }
%"class.mojo::Remote.3291" = type { %"class.mojo::internal::InterfacePtrState.3292" }
%"class.mojo::internal::InterfacePtrState.3292" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3293" }
%"class.std::__1::unique_ptr.3293" = type { %"class.std::__1::__compressed_pair.3294" }
%"class.std::__1::__compressed_pair.3294" = type { %"struct.std::__1::__compressed_pair_elem.3295" }
%"struct.std::__1::__compressed_pair_elem.3295" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2641" = type { %"class.std::__1::__compressed_pair.2642" }
%"class.std::__1::__compressed_pair.2642" = type { %"struct.std::__1::__compressed_pair_elem.2643" }
%"struct.std::__1::__compressed_pair_elem.2643" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2644, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2644 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2645", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2645" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2646" }
%"class.std::__1::vector.2646" = type { %"class.std::__1::__vector_base.2647" }
%"class.std::__1::__vector_base.2647" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2648" }
%"class.std::__1::__compressed_pair.2648" = type { %"struct.std::__1::__compressed_pair_elem.2649" }
%"struct.std::__1::__compressed_pair_elem.2649" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2653, i8, [7 x i8] }>
%class.scoped_refptr.2653 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2654", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2654" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2655" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2655" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2662" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2663" = type { %"class.std::__1::__compressed_pair.2664" }
%"class.std::__1::__compressed_pair.2664" = type { %"struct.std::__1::__compressed_pair_elem.2665" }
%"struct.std::__1::__compressed_pair_elem.2665" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2292" = type { %"class.absl::optional_internal::optional_data.2293" }
%"class.absl::optional_internal::optional_data.2293" = type { %"class.absl::optional_internal::optional_data_base.2294" }
%"class.absl::optional_internal::optional_data_base.2294" = type { %"class.absl::optional_internal::optional_data_dtor_base.2295" }
%"class.absl::optional_internal::optional_data_dtor_base.2295" = type { i8, %union.anon.2296 }
%union.anon.2296 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2669" = type { %"class.std::__1::__compressed_pair.2670" }
%"class.std::__1::__compressed_pair.2670" = type { %"struct.std::__1::__compressed_pair_elem.2671" }
%"struct.std::__1::__compressed_pair_elem.2671" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2675" }
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3301" }
%"class.mojo::AssociatedRemote.3301" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3302" }
%"class.mojo::internal::AssociatedInterfacePtrState.3302" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3303" }
%"class.std::__1::unique_ptr.3303" = type { %"class.std::__1::__compressed_pair.3304" }
%"class.std::__1::__compressed_pair.3304" = type { %"struct.std::__1::__compressed_pair_elem.3305" }
%"struct.std::__1::__compressed_pair_elem.3305" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2677" = type { %"class.blink::Member.2678" }
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3311" }
%"class.mojo::AssociatedRemote.3311" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3312" }
%"class.mojo::internal::AssociatedInterfacePtrState.3312" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3313" }
%"class.std::__1::unique_ptr.3313" = type { %"class.std::__1::__compressed_pair.3314" }
%"class.std::__1::__compressed_pair.3314" = type { %"struct.std::__1::__compressed_pair_elem.3315" }
%"struct.std::__1::__compressed_pair_elem.3315" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2680" }
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3321", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3321" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3322" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1691" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3322" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2682" = type { %"class.blink::Member.2683" }
%"class.blink::Member.2683" = type { %"class.blink::MemberBase.2684" }
%"class.blink::MemberBase.2684" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3325", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3326" }
%"class.blink::ThreadState::PrefinalizerRegistration.3325" = type { i8 }
%"class.mojo::AssociatedReceiver.3326" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3327" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3327" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2685" }
%"class.blink::Member.2685" = type { %"class.blink::MemberBase.2686" }
%"class.blink::MemberBase.2686" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3330", %"class.blink::Member.1857", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3330" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2173, %"class.std::__1::unique_ptr.1691", %"class.base::WeakPtrFactory.3331" }
%"class.base::WeakPtrFactory.3331" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2687" = type { %"class.blink::Member.2688" }
%"class.blink::Member.2688" = type { %"class.blink::MemberBase.2689" }
%"class.blink::MemberBase.2689" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3334", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3335" }
%"class.blink::ThreadState::PrefinalizerRegistration.3334" = type { i8 }
%"class.mojo::AssociatedReceiver.3335" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3336" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3336" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2692" = type { %"class.blink::MemberBase.2693" }
%"class.blink::MemberBase.2693" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2696" = type { %"class.blink::MemberBase.2697" }
%"class.blink::MemberBase.2697" = type { %"class.blink::HeapHashMap.2698"* }
%"class.blink::HeapHashMap.2698" = type opaque
%"class.mojo::StructPtr.2699" = type { %"class.std::__1::unique_ptr.2700" }
%"class.std::__1::unique_ptr.2700" = type { %"class.std::__1::__compressed_pair.2701" }
%"class.std::__1::__compressed_pair.2701" = type { %"struct.std::__1::__compressed_pair_elem.2702" }
%"struct.std::__1::__compressed_pair_elem.2702" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2703", %"class.mojo::InlinedStructPtr.2704" }
%"class.mojo::InlinedStructPtr.2703" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2704" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2708" = type { %"class.blink::MemberBase.2709" }
%"class.blink::MemberBase.2709" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2710" = type { %"class.absl::optional_internal::optional_data.2711" }
%"class.absl::optional_internal::optional_data.2711" = type { %"class.absl::optional_internal::optional_data_base.2712" }
%"class.absl::optional_internal::optional_data_base.2712" = type { %"class.absl::optional_internal::optional_data_dtor_base.2713" }
%"class.absl::optional_internal::optional_data_dtor_base.2713" = type { i8, %union.anon.2714 }
%union.anon.2714 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1859" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1860", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1860" = type { %"class.blink::MemberBase.1861" }
%"class.absl::optional.1862" = type { %"class.absl::optional_internal::optional_data.1863" }
%"class.absl::optional_internal::optional_data.1863" = type { %"class.absl::optional_internal::optional_data_base.1864" }
%"class.absl::optional_internal::optional_data_base.1864" = type { %"class.absl::optional_internal::optional_data_dtor_base.1865" }
%"class.absl::optional_internal::optional_data_dtor_base.1865" = type { i8, %union.anon.1866 }
%union.anon.1866 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HeapHashSet.1871"* }
%"class.blink::HeapHashSet.1871" = type opaque
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.WTF::HashSet.1875"* }
%"class.WTF::HashSet.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::Member.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1890" = type opaque
%"class.blink::HeapHashSet.1891" = type { %"class.WTF::HashSet.1894" }
%"class.WTF::HashSet.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"class.blink::Member.1897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2121", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2131", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2123", %"class.blink::Member.2125", %"class.blink::Member.2127", %"class.blink::Member.2129", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2131" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2132", { i64, i64 } }
%"class.blink::WeakMember.2132" = type { %"class.blink::MemberBase.1898" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1899" = type { %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1909", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"struct.WTF::KeyValuePair.1912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1912" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1913", i32, i32 }
%"class.WTF::Vector.1913" = type { %"class.WTF::VectorBuffer.1914" }
%"class.WTF::VectorBuffer.1914" = type { %"class.WTF::VectorBufferBase.1915" }
%"class.WTF::VectorBufferBase.1915" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1917" = type { %"class.WTF::LinkedHashSet.1920" }
%"class.WTF::LinkedHashSet.1920" = type { %"class.WTF::HashMap.1921", %"class.WTF::VectorBackedLinkedList.1925" }
%"class.WTF::HashMap.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"struct.WTF::KeyValuePair.1924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1924" = type opaque
%"class.WTF::VectorBackedLinkedList.1925" = type { %"class.WTF::Vector.1926", i32, i32 }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %"class.WTF::VectorBackedLinkedListNode.1929"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1929" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1937" = type { %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1940, %class.scoped_refptr.1940, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1995", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2000", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1940 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1941", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1948" }
%"class.WTF::RefCounted.1941" = type { %"class.base::RefCounted.1942" }
%"class.base::RefCounted.1942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1943", i32, [4 x i8] }>
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1948" = type { %"class.WTF::VectorBuffer.1949" }
%"class.WTF::VectorBuffer.1949" = type { %"class.WTF::VectorBufferBase.1950" }
%"class.WTF::VectorBufferBase.1950" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1951", %"class.std::__1::unique_ptr.1967", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1954", %"class.WTF::Vector.1959", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1970", %"class.absl::optional.1970" }
%"class.absl::optional.1970" = type { %"class.absl::optional_internal::optional_data.1971" }
%"class.absl::optional_internal::optional_data.1971" = type { %"class.absl::optional_internal::optional_data_base.1972" }
%"class.absl::optional_internal::optional_data_base.1972" = type { %"class.absl::optional_internal::optional_data_dtor_base.1973" }
%"class.absl::optional_internal::optional_data_dtor_base.1973" = type { i8, [3 x i8], %union.anon.1974 }
%union.anon.1974 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1948"*, %"class.absl::optional.1980", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1980" = type { %"class.absl::optional_internal::optional_data.1981" }
%"class.absl::optional_internal::optional_data.1981" = type { %"class.absl::optional_internal::optional_data_base.1982" }
%"class.absl::optional_internal::optional_data_base.1982" = type { %"class.absl::optional_internal::optional_data_dtor_base.1983" }
%"class.absl::optional_internal::optional_data_dtor_base.1983" = type { i8, %union.anon.1984 }
%union.anon.1984 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1985", %"class.WTF::Vector.1990" }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987", [128 x i8] }
%"class.WTF::VectorBufferBase.1987" = type { i32*, i32, i32 }
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992", [128 x i8] }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1995" = type { %"class.WTF::VectorBuffer.1996" }
%"class.WTF::VectorBuffer.1996" = type { %"class.WTF::VectorBufferBase.1997" }
%"class.WTF::VectorBufferBase.1997" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2005", %"class.WTF::Vector.2010" }
%"class.WTF::HashMap.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"struct.WTF::KeyValuePair.2009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2009" = type opaque
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2024" = type { %"class.WTF::VectorBuffer.2025" }
%"class.WTF::VectorBuffer.2025" = type { %"class.WTF::VectorBufferBase.2026" }
%"class.WTF::VectorBufferBase.2026" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2029 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2036" = type { %"class.WTF::HashSet.2039" }
%"class.WTF::HashSet.2039" = type { %"class.WTF::HashTable.2040" }
%"class.WTF::HashTable.2040" = type <{ %"class.blink::WeakMember.2042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2042" = type opaque
%"class.blink::HeapHashSet.2043" = type { %"class.WTF::HashSet.2046" }
%"class.WTF::HashSet.2046" = type { %"class.WTF::HashTable.2047" }
%"class.WTF::HashTable.2047" = type <{ %"class.blink::WeakMember.2049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2049" = type opaque
%"class.std::__1::unique_ptr.2050" = type { %"class.std::__1::__compressed_pair.2051" }
%"class.std::__1::__compressed_pair.2051" = type { %"struct.std::__1::__compressed_pair_elem.2052" }
%"struct.std::__1::__compressed_pair_elem.2052" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2053" }
%"class.base::time_internal::TimeBase.2053" = type { i64 }
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2060", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2060" = type { %"class.absl::optional_internal::optional_data.2061" }
%"class.absl::optional_internal::optional_data.2061" = type { %"class.absl::optional_internal::optional_data_base.2062" }
%"class.absl::optional_internal::optional_data_base.2062" = type { %"class.absl::optional_internal::optional_data_dtor_base.2063" }
%"class.absl::optional_internal::optional_data_dtor_base.2063" = type { i8, %union.anon.2064 }
%union.anon.2064 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.2068", %"class.WTF::PODIntervalTree.2081", i8, [7 x i8] }>
%"class.WTF::LinkedHashSet.2068" = type { %"class.WTF::HashMap.2069", %"class.WTF::VectorBackedLinkedList.2074" }
%"class.WTF::HashMap.2069" = type { %"class.WTF::HashTable.2070" }
%"class.WTF::HashTable.2070" = type <{ %"struct.WTF::KeyValuePair.2073"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2073" = type opaque
%"class.WTF::VectorBackedLinkedList.2074" = type { %"class.WTF::Vector.2075", i32, i32 }
%"class.WTF::Vector.2075" = type { %"class.WTF::VectorBuffer.2076" }
%"class.WTF::VectorBuffer.2076" = type { %"class.WTF::VectorBufferBase.2077" }
%"class.WTF::VectorBufferBase.2077" = type { %"class.WTF::VectorBackedLinkedListNode.2078"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2078" = type opaque
%"class.WTF::PODIntervalTree.2081" = type { %"class.WTF::PODRedBlackTree.base.2085", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.2085" = type <{ i32 (...)**, %class.scoped_refptr.2083, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.2083 = type { %"class.WTF::PODFreeListArena.2084"* }
%"class.WTF::PODFreeListArena.2084" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.std::__1::unique_ptr.2086" = type { %"class.std::__1::__compressed_pair.2087" }
%"class.std::__1::__compressed_pair.2087" = type { %"struct.std::__1::__compressed_pair_elem.2088" }
%"struct.std::__1::__compressed_pair_elem.2088" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2092" = type { %"class.std::__1::__compressed_pair.2093" }
%"class.std::__1::__compressed_pair.2093" = type { %"struct.std::__1::__compressed_pair_elem.2094" }
%"struct.std::__1::__compressed_pair_elem.2094" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type { %"class.WTF::Vector.3023" }
%"class.WTF::Vector.3023" = type { %"class.WTF::VectorBuffer.3024" }
%"class.WTF::VectorBuffer.3024" = type { %"class.WTF::VectorBufferBase.3025", [16 x i8] }
%"class.WTF::VectorBufferBase.3025" = type { %"struct.blink::NamedPagesMapper::Entry"*, i32, i32 }
%"struct.blink::NamedPagesMapper::Entry" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1844 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2104" = type { %"class.blink::PersistentBase.2105" }
%"class.blink::PersistentBase.2105" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2108", i64 }
%"class.blink::HeapVector.2108" = type { %"class.WTF::Vector.2111" }
%"class.WTF::Vector.2111" = type { %"class.WTF::VectorBuffer.2112" }
%"class.WTF::VectorBuffer.2112" = type { %"class.WTF::VectorBufferBase.2113", [368 x i8] }
%"class.WTF::VectorBufferBase.2113" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1897", i8, %"class.blink::Member.2114", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2114" = type { %"class.blink::MemberBase.2115" }
%"class.blink::MemberBase.2115" = type { %"class.blink::HeapLinkedHashSet.2116"* }
%"class.blink::HeapLinkedHashSet.2116" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.2995", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.2997", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.2995" = type { %"class.blink::MemberBase.2996" }
%"class.blink::MemberBase.2996" = type { %"class.blink::Document"* }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.WTF::Vector.2997" = type { %"class.WTF::VectorBuffer.2998" }
%"class.WTF::VectorBuffer.2998" = type { %"class.WTF::VectorBufferBase.2999" }
%"class.WTF::VectorBufferBase.2999" = type { %"class.std::__1::unique_ptr.3000"*, i32, i32 }
%"class.std::__1::unique_ptr.3000" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.3003", %"class.WTF::HashMap.3008", %"class.WTF::HashMap.3013", %"class.WTF::HashSet.3018" }
%"class.WTF::HashMap.3003" = type { %"class.WTF::HashTable.3004" }
%"class.WTF::HashTable.3004" = type <{ %"struct.WTF::KeyValuePair.3007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3007" = type opaque
%"class.WTF::HashMap.3008" = type { %"class.WTF::HashTable.3009" }
%"class.WTF::HashTable.3009" = type <{ %"struct.WTF::KeyValuePair.3012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3012" = type opaque
%"class.WTF::HashMap.3013" = type { %"class.WTF::HashTable.3014" }
%"class.WTF::HashTable.3014" = type <{ %"struct.WTF::KeyValuePair.3017"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3017" = type opaque
%"class.WTF::HashSet.3018" = type { %"class.WTF::HashTable.3019" }
%"class.WTF::HashTable.3019" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.3022"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.3022" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3237" }
%"class.WTF::Vector.3237" = type { %"class.WTF::VectorBuffer.3238" }
%"class.WTF::VectorBuffer.3238" = type { %"class.WTF::VectorBufferBase.3239" }
%"class.WTF::VectorBufferBase.3239" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2809", %"class.absl::optional.2809", %"class.absl::optional.2809" }
%"class.absl::optional.2809" = type { %"class.absl::optional_internal::optional_data.2810" }
%"class.absl::optional_internal::optional_data.2810" = type { %"class.absl::optional_internal::optional_data_base.2811" }
%"class.absl::optional_internal::optional_data_base.2811" = type { %"class.absl::optional_internal::optional_data_dtor_base.2812" }
%"class.absl::optional_internal::optional_data_dtor_base.2812" = type { i8, %union.anon.2813 }
%union.anon.2813 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3252" }
%"class.WTF::VectorBuffer.3252" = type { %"class.WTF::VectorBufferBase.3253", [32 x i8] }
%"class.WTF::VectorBufferBase.3253" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.3028", %"class.blink::Persistent.3034", %"class.std::__1::unique_ptr.3058", %"class.blink::CullRect", %"class.std::__1::unique_ptr.3074" }
%"class.std::__1::unique_ptr.3028" = type { %"class.std::__1::__compressed_pair.3029" }
%"class.std::__1::__compressed_pair.3029" = type { %"struct.std::__1::__compressed_pair_elem.3030" }
%"struct.std::__1::__compressed_pair_elem.3030" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.3034" = type { %"class.blink::PersistentBase.3035" }
%"class.blink::PersistentBase.3035" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3040", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.3053" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3038", %"class.blink::Member.1897", %"class.blink::Member.1897", i8, [7 x i8] }>
%"class.blink::Member.3038" = type { %"class.blink::MemberBase.3039" }
%"class.blink::MemberBase.3039" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2121", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3040" = type { %"class.std::__1::__compressed_pair.3041" }
%"class.std::__1::__compressed_pair.3041" = type { %"struct.std::__1::__compressed_pair_elem.3042" }
%"struct.std::__1::__compressed_pair_elem.3042" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3043", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1959" }
%"class.WTF::HashMap.3043" = type { %"class.WTF::HashTable.3044" }
%"class.WTF::HashTable.3044" = type <{ %"struct.WTF::KeyValuePair.3047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3047" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3051" }
%"class.blink::Member.3051" = type { %"class.blink::MemberBase.3052" }
%"class.blink::MemberBase.3052" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3051" }
%"class.absl::optional.3053" = type { %"class.absl::optional_internal::optional_data.3054" }
%"class.absl::optional_internal::optional_data.3054" = type { %"class.absl::optional_internal::optional_data_base.3055" }
%"class.absl::optional_internal::optional_data_base.3055" = type { %"class.absl::optional_internal::optional_data_dtor_base.3056" }
%"class.absl::optional_internal::optional_data_dtor_base.3056" = type { i8, %union.anon.3057 }
%union.anon.3057 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.3058" = type { %"class.std::__1::__compressed_pair.3059" }
%"class.std::__1::__compressed_pair.3059" = type { %"struct.std::__1::__compressed_pair_elem.3060" }
%"struct.std::__1::__compressed_pair_elem.3060" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.3061", %"class.WTF::Vector.3061", %"class.WTF::HashMap.3066", %"class.WTF::Vector.3061", i8, [7 x i8] }>
%"class.WTF::HashMap.3066" = type { %"class.WTF::HashTable.3067" }
%"class.WTF::HashTable.3067" = type <{ %"struct.WTF::KeyValuePair.3070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3070" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.3061" }
%"class.WTF::Vector.3061" = type { %"class.WTF::VectorBuffer.3062" }
%"class.WTF::VectorBuffer.3062" = type { %"class.WTF::VectorBufferBase.3063" }
%"class.WTF::VectorBufferBase.3063" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.3074" = type { %"class.std::__1::__compressed_pair.3075" }
%"class.std::__1::__compressed_pair.3075" = type { %"struct.std::__1::__compressed_pair_elem.3076" }
%"struct.std::__1::__compressed_pair_elem.3076" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.3077", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.3083", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.3089", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.3077" = type { %"class.std::__1::__compressed_pair.3078" }
%"class.std::__1::__compressed_pair.3078" = type { %"struct.std::__1::__compressed_pair_elem.3079" }
%"struct.std::__1::__compressed_pair_elem.3079" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.3083" = type { %"class.std::__1::__compressed_pair.3084" }
%"class.std::__1::__compressed_pair.3084" = type { %"struct.std::__1::__compressed_pair_elem.3085" }
%"struct.std::__1::__compressed_pair_elem.3085" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.3089" = type { %"class.blink::PersistentBase.3090" }
%"class.blink::PersistentBase.3090" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1763 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2800", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2948, %union.anon.2966, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2800" = type { %"class.base::RefCounted.2801" }
%"class.base::RefCounted.2801" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2802, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2802 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2803 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2803 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2837 }
%class.scoped_refptr.2837 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2838", [4 x i8], %"class.std::__1::unique_ptr.2840", i64, %"class.WTF::Vector.2844", %"class.WTF::Vector.2849", %"class.WTF::Vector.2855", %"class.WTF::Vector.2873", %class.scoped_refptr.1546, %"class.WTF::HashMap.2879", %"class.WTF::Vector.2884", %"class.WTF::Vector.2844", %"class.WTF::Vector.2890", %"class.WTF::HashMap.2895", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2838" = type { %"class.base::RefCountedThreadSafe.2839" }
%"class.base::RefCountedThreadSafe.2839" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2840" = type { %"class.std::__1::__compressed_pair.2841" }
%"class.std::__1::__compressed_pair.2841" = type { %"struct.std::__1::__compressed_pair_elem.2842" }
%"struct.std::__1::__compressed_pair_elem.2842" = type { i8* }
%"class.WTF::Vector.2849" = type { %"class.WTF::VectorBuffer.2850" }
%"class.WTF::VectorBuffer.2850" = type { %"class.WTF::VectorBufferBase.2851", [8 x i8] }
%"class.WTF::VectorBufferBase.2851" = type { %class.scoped_refptr.2852*, i32, i32 }
%class.scoped_refptr.2852 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2855" = type { %"class.WTF::VectorBuffer.2856" }
%"class.WTF::VectorBuffer.2856" = type { %"class.WTF::VectorBufferBase.2857" }
%"class.WTF::VectorBufferBase.2857" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2859", %"class.std::__1::unique_ptr.2865" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2858 }
%class.scoped_refptr.2858 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2859" = type { %"class.std::__1::__compressed_pair.2860" }
%"class.std::__1::__compressed_pair.2860" = type { %"struct.std::__1::__compressed_pair_elem.2861" }
%"struct.std::__1::__compressed_pair_elem.2861" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2865" = type { %"class.std::__1::__compressed_pair.2866" }
%"class.std::__1::__compressed_pair.2866" = type { %"struct.std::__1::__compressed_pair_elem.2867" }
%"struct.std::__1::__compressed_pair_elem.2867" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2873" = type { %"class.WTF::VectorBuffer.2874" }
%"class.WTF::VectorBuffer.2874" = type { %"class.WTF::VectorBufferBase.2875" }
%"class.WTF::VectorBufferBase.2875" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2876", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2876" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2879" = type { %"class.WTF::HashTable.2880" }
%"class.WTF::HashTable.2880" = type <{ %"struct.WTF::KeyValuePair.2883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2883" = type opaque
%"class.WTF::Vector.2884" = type { %"class.WTF::VectorBuffer.2885" }
%"class.WTF::VectorBuffer.2885" = type { %"class.WTF::VectorBufferBase.2886" }
%"class.WTF::VectorBufferBase.2886" = type { %"class.mojo::ScopedHandleBase.2887"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2887" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2844" = type { %"class.WTF::VectorBuffer.2845" }
%"class.WTF::VectorBuffer.2845" = type { %"class.WTF::VectorBufferBase.2846", [16 x i8] }
%"class.WTF::VectorBufferBase.2846" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2890" = type { %"class.WTF::VectorBuffer.2891" }
%"class.WTF::VectorBuffer.2891" = type { %"class.WTF::VectorBufferBase.2892" }
%"class.WTF::VectorBufferBase.2892" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2895" = type { %"class.WTF::HashTable.2896" }
%"class.WTF::HashTable.2896" = type <{ %"struct.WTF::KeyValuePair.2899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2899" = type { i8**, %"class.std::__1::unique_ptr.3268" }
%"class.std::__1::unique_ptr.3268" = type { %"class.std::__1::__compressed_pair.3269" }
%"class.std::__1::__compressed_pair.3269" = type { %"struct.std::__1::__compressed_pair_elem.3270" }
%"struct.std::__1::__compressed_pair_elem.3270" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2900" }
%"class.std::__1::unique_ptr.2900" = type { %"class.std::__1::__compressed_pair.2901" }
%"class.std::__1::__compressed_pair.2901" = type { %"struct.std::__1::__compressed_pair_elem.2902" }
%"struct.std::__1::__compressed_pair_elem.2902" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2903, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2920" }
%class.scoped_refptr.2903 = type { %"class.base::RefCountedData.2904"* }
%"class.base::RefCountedData.2904" = type { %"class.base::RefCountedThreadSafe.2905", %"class.WTF::Vector.2906" }
%"class.base::RefCountedThreadSafe.2905" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2906" = type { %"class.WTF::VectorBuffer.2907" }
%"class.WTF::VectorBuffer.2907" = type { %"class.WTF::VectorBufferBase.2908" }
%"class.WTF::VectorBufferBase.2908" = type { %class.scoped_refptr.2909*, i32, i32 }
%class.scoped_refptr.2909 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2910", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2912" }
%"class.WTF::RefCounted.2910" = type { %"class.base::RefCounted.2911" }
%"class.base::RefCounted.2911" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2912" = type { %"class.std::__1::__compressed_pair.2913" }
%"class.std::__1::__compressed_pair.2913" = type { %"struct.std::__1::__compressed_pair_elem.2914" }
%"struct.std::__1::__compressed_pair_elem.2914" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2920" = type { %"class.std::__1::__compressed_pair.2921" }
%"class.std::__1::__compressed_pair.2921" = type { %"struct.std::__1::__compressed_pair_elem.2922" }
%"struct.std::__1::__compressed_pair_elem.2922" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2923", %"class.WTF::Vector.2936", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2923" = type { %"class.WTF::VectorBuffer.2924" }
%"class.WTF::VectorBuffer.2924" = type { %"class.WTF::VectorBufferBase.2925", [320 x i8] }
%"class.WTF::VectorBufferBase.2925" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2926", %"class.WTF::Vector.2926", %class.scoped_refptr.2931, i8, [7 x i8] }>
%"class.WTF::Vector.2926" = type { %"class.WTF::VectorBuffer.2927" }
%"class.WTF::VectorBuffer.2927" = type { %"class.WTF::VectorBufferBase.2928", [8 x i8] }
%"class.WTF::VectorBufferBase.2928" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2931 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2932", %"class.WTF::Vector.2906", %"class.WTF::Vector.2906" }
%"class.WTF::RefCounted.2932" = type { %"class.base::RefCounted.2933" }
%"class.base::RefCounted.2933" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2936" = type { %"class.WTF::VectorBuffer.2937" }
%"class.WTF::VectorBuffer.2937" = type { %"class.WTF::VectorBufferBase.2938", [288 x i8] }
%"class.WTF::VectorBufferBase.2938" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2926", %"class.WTF::Vector.2926" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2939 }
%class.scoped_refptr.2939 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2948 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2949", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2951, %"class.std::__1::unique_ptr.2954" }
%"class.WTF::RefCounted.2949" = type { %"class.base::RefCounted.2950" }
%"class.base::RefCounted.2950" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2951 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2952", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2952" = type { %"class.base::RefCounted.2953" }
%"class.base::RefCounted.2953" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2954" = type { %"class.std::__1::__compressed_pair.2955" }
%"class.std::__1::__compressed_pair.2955" = type { %"struct.std::__1::__compressed_pair_elem.2956" }
%"struct.std::__1::__compressed_pair_elem.2956" = type { %"class.WTF::Vector.2957"* }
%"class.WTF::Vector.2957" = type { %"class.WTF::VectorBuffer.2958" }
%"class.WTF::VectorBuffer.2958" = type { %"class.WTF::VectorBufferBase.2959" }
%"class.WTF::VectorBufferBase.2959" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2960 }
%union.anon.2960 = type { %"class.blink::LineBoxList" }
%union.anon.2966 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2804", %class.scoped_refptr.2967, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2968, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2837, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2969", %"class.absl::optional.2985" }
%"class.absl::optional.2804" = type { %"class.absl::optional_internal::optional_data.2805" }
%"class.absl::optional_internal::optional_data.2805" = type { %"class.absl::optional_internal::optional_data_base.2806" }
%"class.absl::optional_internal::optional_data_base.2806" = type { %"class.absl::optional_internal::optional_data_dtor_base.2807" }
%"class.absl::optional_internal::optional_data_dtor_base.2807" = type { i8, %union.anon.2808 }
%union.anon.2808 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2967 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2990", [4 x i8], %union.anon.2992, %class.scoped_refptr.2967, i32, [4 x i8] }>
%"class.WTF::RefCounted.2990" = type { %"class.base::RefCounted.2991" }
%"class.base::RefCounted.2991" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2992 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2968 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2969" = type { %"class.std::__1::__compressed_pair.2970" }
%"class.std::__1::__compressed_pair.2970" = type { %"struct.std::__1::__compressed_pair_elem.2971" }
%"struct.std::__1::__compressed_pair_elem.2971" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2972", %"class.WTF::Vector.2977", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2972" = type { %"class.WTF::VectorBuffer.2973" }
%"class.WTF::VectorBuffer.2973" = type { %"class.WTF::VectorBufferBase.2974" }
%"class.WTF::VectorBufferBase.2974" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2977" = type { %"class.WTF::VectorBuffer.2978" }
%"class.WTF::VectorBuffer.2978" = type { %"class.WTF::VectorBufferBase.2979" }
%"class.WTF::VectorBufferBase.2979" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2985" = type { %"class.absl::optional_internal::optional_data.2986" }
%"class.absl::optional_internal::optional_data.2986" = type { %"class.absl::optional_internal::optional_data_base.2987" }
%"class.absl::optional_internal::optional_data_base.2987" = type { %"class.absl::optional_internal::optional_data_dtor_base.2988" }
%"class.absl::optional_internal::optional_data_dtor_base.2988" = type { i8, %union.anon.2989 }
%union.anon.2989 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [8 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %class.scoped_refptr.1763*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1772", %"class.absl::optional.1777", %"class.absl::optional.1782" }
%"class.absl::optional.1772" = type { %"class.absl::optional_internal::optional_data.1773" }
%"class.absl::optional_internal::optional_data.1773" = type { %"class.absl::optional_internal::optional_data_base.1774" }
%"class.absl::optional_internal::optional_data_base.1774" = type { %"class.absl::optional_internal::optional_data_dtor_base.1775" }
%"class.absl::optional_internal::optional_data_dtor_base.1775" = type { i8, %union.anon.1776 }
%union.anon.1776 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1777" = type { %"class.absl::optional_internal::optional_data.1778" }
%"class.absl::optional_internal::optional_data.1778" = type { %"class.absl::optional_internal::optional_data_base.1779" }
%"class.absl::optional_internal::optional_data_base.1779" = type { %"class.absl::optional_internal::optional_data_dtor_base.1780" }
%"class.absl::optional_internal::optional_data_dtor_base.1780" = type { i8, [3 x i8], %union.anon.1781 }
%union.anon.1781 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1782" = type { %"class.absl::optional_internal::optional_data.1783" }
%"class.absl::optional_internal::optional_data.1783" = type { %"class.absl::optional_internal::optional_data_base.1784" }
%"class.absl::optional_internal::optional_data_base.1784" = type { %"class.absl::optional_internal::optional_data_dtor_base.1785" }
%"class.absl::optional_internal::optional_data_dtor_base.1785" = type { i8, %union.anon.1786 }
%union.anon.1786 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1790 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1791" = type { %"class.blink::PersistentBase.1792" }
%"class.blink::PersistentBase.1792" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1795", %"struct.blink::PhysicalRect", %"class.blink::Member.1805" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type { %"class.blink::LayoutBox", %"class.blink::LayoutBox"* }
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.WTF::HashSet.1798"* }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1807" = type { %"class.blink::PersistentBase.1808" }
%"class.blink::PersistentBase.1808" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.2068", %"class.WTF::PODIntervalTree.2081", i8 }>
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.blink::LayoutMultiColumnSet" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2790", %"class.WTF::HashMap.2795", %"class.WTF::String" }
%"class.WTF::Vector.2790" = type { %"class.WTF::VectorBuffer.2791" }
%"class.WTF::VectorBuffer.2791" = type { %"class.WTF::VectorBufferBase.2792" }
%"class.WTF::VectorBufferBase.2792" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2795" = type { %"class.WTF::HashTable.2796" }
%"class.WTF::HashTable.2796" = type <{ %"struct.WTF::KeyValuePair.2799"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2799" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1820", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1820" = type { %"class.WTF::HashTable.1823", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1823" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1826", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1829, %"class.std::__1::unique_ptr.1830", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1829 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2788", i16, %class.scoped_refptr.1829 }
%"class.WTF::ThreadSafeRefCounted.2788" = type { %"class.base::RefCountedThreadSafe.2789" }
%"class.base::RefCountedThreadSafe.2789" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.WTF::Vector.1833"* }
%"class.WTF::Vector.1833" = type { %"class.WTF::VectorBuffer.1834" }
%"class.WTF::VectorBuffer.1834" = type { %"class.WTF::VectorBufferBase.1835" }
%"class.WTF::VectorBufferBase.1835" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1844, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::MarginInfo" = type { i16, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutAnalyzer::BlockScope" = type { %"class.blink::LayoutBlock"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::TextAutosizer::LayoutScope" = type { %"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"* }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.3345", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.3346", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.3345" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.3346" = type { %"class.absl::optional_internal::optional_data.3347" }
%"class.absl::optional_internal::optional_data.3347" = type { %"class.absl::optional_internal::optional_data_base.3348" }
%"class.absl::optional_internal::optional_data_base.3348" = type { %"class.absl::optional_internal::optional_data_dtor_base.3349" }
%"class.absl::optional_internal::optional_data_dtor_base.3349" = type { i8, %union.anon.3350 }
%union.anon.3350 = type { %"class.blink::FloatSize" }
%"class.WTF::HashMap.3097" = type { %"class.WTF::HashTable.3098" }
%"class.WTF::HashTable.3098" = type <{ %"struct.WTF::KeyValuePair.3101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3101" = type { %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1826" }
%"class.blink::BlockChildrenLayoutInfo" = type <{ %"class.blink::MultiColumnLayoutState", %"class.blink::MarginInfo", [4 x i8], %"class.WTF::AtomicString", %"class.blink::LayoutUnit", i32, i8, [7 x i8] }>
%"class.blink::MultiColumnLayoutState" = type { %"class.blink::LayoutMultiColumnSet"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LineWidth" = type <{ %"class.blink::LineLayoutBlockFlow", float, float, float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], i32, [4 x i8] }>
%"class.blink::LineLayoutBlockFlow" = type { %"class.blink::LineLayoutBox" }
%"class.blink::LineLayoutBox" = type { %"class.blink::LineLayoutBoxModel" }
%"class.blink::LineLayoutBoxModel" = type { %"class.blink::LineLayoutItem" }
%"class.blink::BlockFlowPaintInvalidator" = type { %"class.blink::LayoutBlockFlow"* }
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.WTF::Vector.3102" = type { %"class.WTF::VectorBuffer.3103" }
%"class.WTF::VectorBuffer.3103" = type { %"class.WTF::VectorBufferBase.3104" }
%"class.WTF::VectorBufferBase.3104" = type { %"class.blink::FloatQuad"*, i32, i32 }
%class.anon.3354 = type { %"class.blink::LayoutObject"*, i8** }
%"class.WTF::Vector.3107" = type { %"class.WTF::VectorBuffer.3108" }
%"class.WTF::VectorBuffer.3108" = type { %"class.WTF::VectorBufferBase.3109", [24 x i8] }
%"class.WTF::VectorBufferBase.3109" = type { %"class.blink::LayoutBlockFlow"**, i32, i32 }
%"class.WTF::ListHashSetConstIterator" = type { %"class.WTF::ListHashSet.1820"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.blink::ShapeOutsideInfo" = type <{ %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.3112", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::ShapeOutsideDeltas", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.3112" = type { %"class.std::__1::__compressed_pair.3113" }
%"class.std::__1::__compressed_pair.3113" = type { %"struct.std::__1::__compressed_pair_elem.3114" }
%"struct.std::__1::__compressed_pair_elem.3114" = type { %"class.blink::Shape"* }
%"class.blink::Shape" = type { i32 (...)**, i8, float }
%"class.blink::ShapeOutsideDeltas" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::VectorBackedLinkedListNode.3128" = type { i32, i32, %"class.blink::RootInlineBox"* }
%"class.WTF::LinkedHashSet.3118" = type { %"class.WTF::HashMap.3119", %"class.WTF::VectorBackedLinkedList.3124" }
%"class.WTF::HashMap.3119" = type { %"class.WTF::HashTable.3120" }
%"class.WTF::HashTable.3120" = type <{ %"struct.WTF::KeyValuePair.3123"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3123" = type <{ %"class.blink::RootInlineBox"*, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.3124" = type { %"class.WTF::Vector.3125", i32, i32 }
%"class.WTF::Vector.3125" = type { %"class.WTF::VectorBuffer.3126" }
%"class.WTF::VectorBuffer.3126" = type { %"class.WTF::VectorBufferBase.3127" }
%"class.WTF::VectorBufferBase.3127" = type { %"class.WTF::VectorBackedLinkedListNode.3128"*, i32, i32 }
%"class.blink::InlineWalker" = type <{ %"class.blink::LineLayoutBlockFlow", %"class.blink::LineLayoutItem", i8, [7 x i8] }>
%"class.WTF::HashMap.3131" = type { %"class.WTF::HashTable.3132" }
%"class.WTF::HashTable.3132" = type <{ %"struct.WTF::KeyValuePair.3135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3135" = type { %"class.blink::InlineTextBox"*, %"struct.std::__1::pair.3337" }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"struct.std::__1::pair.3337" = type { %"class.WTF::Vector.3338", %"struct.blink::GlyphOverflow" }
%"class.WTF::Vector.3338" = type { %"class.WTF::VectorBuffer.3339" }
%"class.WTF::VectorBuffer.3339" = type { %"class.WTF::VectorBufferBase.3340" }
%"class.WTF::VectorBufferBase.3340" = type { %"class.blink::SimpleFontData"**, i32, i32 }
%"struct.blink::GlyphOverflow" = type { float, float, float, float }
%"class.WTF::HashSet.3137" = type { %"class.WTF::HashTable.3138" }
%"class.WTF::HashTable.3138" = type <{ %"class.blink::RootInlineBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator" = type { %class.scoped_refptr.1763* }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.3146, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.3146 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.3147, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.3147 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.3148", %class.scoped_refptr.3150, i32, i32, i32, i32, float, i32, [0 x %struct.anon.3151] }
%"class.WTF::RefCounted.3148" = type { %"class.base::RefCounted.3149" }
%"class.base::RefCounted.3149" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3150 = type { %"class.blink::SimpleFontData"* }
%struct.anon.3151 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.3145 }
%union.anon.3145 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.WTF::Vector.3160" = type { %"class.WTF::VectorBuffer.3161" }
%"class.WTF::VectorBuffer.3161" = type { %"class.WTF::VectorBufferBase.3162" }
%"class.WTF::VectorBufferBase.3162" = type { %"struct.blink::PhysicalRect"*, i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3426", %"class.blink::Member.3428", %"class.blink::Member.3430", %"class.blink::Member.3449", %"class.blink::Member.3451" }
%"class.blink::Member.3426" = type { %"class.blink::MemberBase.3427" }
%"class.blink::MemberBase.3427" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3428" = type { %"class.blink::MemberBase.3429" }
%"class.blink::MemberBase.3429" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3430" = type { %"class.blink::MemberBase.3431" }
%"class.blink::MemberBase.3431" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3434", %"class.blink::HeapHashSet.3443" }
%"class.blink::HeapVector.3434" = type { %"class.WTF::Vector.3437" }
%"class.WTF::Vector.3437" = type { %"class.WTF::VectorBuffer.3438" }
%"class.WTF::VectorBuffer.3438" = type { %"class.WTF::VectorBufferBase.3439" }
%"class.WTF::VectorBufferBase.3439" = type { %"class.blink::Member.3440"*, i32, i32 }
%"class.blink::Member.3440" = type { %"class.blink::MemberBase.3441" }
%"class.blink::MemberBase.3441" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3443" = type { %"class.WTF::HashSet.3446" }
%"class.WTF::HashSet.3446" = type { %"class.WTF::HashTable.3447" }
%"class.WTF::HashTable.3447" = type <{ %"class.blink::Member.3440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3449" = type { %"class.blink::MemberBase.3450" }
%"class.blink::MemberBase.3450" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3451" = type { %"class.blink::MemberBase.3452" }
%"class.blink::MemberBase.3452" = type { %"class.blink::HeapHashSet.3453"* }
%"class.blink::HeapHashSet.3453" = type opaque
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"struct.blink::PaintInfo" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.3077", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.3205", %"class.std::__1::unique_ptr.3211", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.3165", %"class.std::__1::unique_ptr.3190", %"class.std::__1::unique_ptr.1811" }
%"class.WTF::Vector.3165" = type { %"class.WTF::VectorBuffer.3166" }
%"class.WTF::VectorBuffer.3166" = type { %"class.WTF::VectorBufferBase.3167" }
%"class.WTF::VectorBufferBase.3167" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.3168, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.3168 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.3169", float, %"class.blink::FloatRect", %"class.WTF::Vector.3171", %class.scoped_refptr.3150, %"class.std::__1::unique_ptr.3177", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.3169" = type { %"class.base::RefCounted.3170" }
%"class.base::RefCounted.3170" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3171" = type { %"class.WTF::VectorBuffer.3172" }
%"class.WTF::VectorBuffer.3172" = type { %"class.WTF::VectorBufferBase.3173" }
%"class.WTF::VectorBufferBase.3173" = type { %class.scoped_refptr.3174*, i32, i32 }
%class.scoped_refptr.3174 = type opaque
%"class.std::__1::unique_ptr.3177" = type { %"class.std::__1::__compressed_pair.3178" }
%"class.std::__1::__compressed_pair.3178" = type { %"struct.std::__1::__compressed_pair_elem.3179" }
%"struct.std::__1::__compressed_pair_elem.3179" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.3180", i32, float }
%"class.WTF::Vector.3180" = type { %"class.WTF::VectorBuffer.3181" }
%"class.WTF::VectorBuffer.3181" = type { %"class.WTF::VectorBufferBase.3182" }
%"class.WTF::VectorBufferBase.3182" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.3190" = type { %"class.std::__1::__compressed_pair.3191" }
%"class.std::__1::__compressed_pair.3191" = type { %"struct.std::__1::__compressed_pair_elem.3192" }
%"struct.std::__1::__compressed_pair_elem.3192" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.3193", %"class.WTF::Vector.3198" }
%"class.WTF::Vector.3193" = type { %"class.WTF::VectorBuffer.3194" }
%"class.WTF::VectorBuffer.3194" = type { %"class.WTF::VectorBufferBase.3195" }
%"class.WTF::VectorBufferBase.3195" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.3198" = type { %"class.WTF::VectorBuffer.3199" }
%"class.WTF::VectorBuffer.3199" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.3205" = type { %"class.std::__1::__compressed_pair.3206" }
%"class.std::__1::__compressed_pair.3206" = type { %"struct.std::__1::__compressed_pair_elem.3207" }
%"struct.std::__1::__compressed_pair_elem.3207" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.3211" = type { %"class.std::__1::__compressed_pair.3212" }
%"class.std::__1::__compressed_pair.3212" = type { %"struct.std::__1::__compressed_pair_elem.3213" }
%"struct.std::__1::__compressed_pair_elem.3213" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.3214", %"class.WTF::Vector.3220", %"class.WTF::Vector.3220", %"class.WTF::HashMap.3225" }
%"class.WTF::Vector.3214" = type { %"class.WTF::VectorBuffer.3215" }
%"class.WTF::VectorBuffer.3215" = type { %"class.WTF::VectorBufferBase.3216" }
%"class.WTF::VectorBufferBase.3216" = type { %"struct.std::__1::pair.3217"*, i32, i32 }
%"struct.std::__1::pair.3217" = type opaque
%"class.WTF::Vector.3220" = type { %"class.WTF::VectorBuffer.3221" }
%"class.WTF::VectorBuffer.3221" = type { %"class.WTF::VectorBufferBase.3222" }
%"class.WTF::VectorBufferBase.3222" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.3225" = type { %"class.WTF::HashTable.3226" }
%"class.WTF::HashTable.3226" = type <{ %"struct.WTF::KeyValuePair.3229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3229" = type opaque
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.3367" }
%"class.std::__1::list.3367" = type { %"class.std::__1::__list_imp.3368" }
%"class.std::__1::__list_imp.3368" = type { %"struct.std::__1::__list_node_base.3369", %"class.std::__1::__compressed_pair.3370" }
%"struct.std::__1::__list_node_base.3369" = type { %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"* }
%"class.std::__1::__compressed_pair.3370" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.3355", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.3355" = type { %"class.std::__1::__vector_base.3356" }
%"class.std::__1::__vector_base.3356" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.3362" }
%"class.std::__1::__compressed_pair.3362" = type { %"struct.std::__1::__compressed_pair_elem.3363" }
%"struct.std::__1::__compressed_pair_elem.3363" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.3357", i64, i64 }
%"class.std::__1::unique_ptr.3357" = type { %"class.std::__1::__compressed_pair.3358" }
%"class.std::__1::__compressed_pair.3358" = type { %"struct.std::__1::__compressed_pair_elem.2842" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.3369", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink9LayoutBox19ClientLogicalBottomEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN5blink15LayoutBlockFlow19InitMaxMarginValuesEv = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink9LayoutBox25LogicalLeftScrollbarWidthEv = comdat any

$_ZNK5blink15LayoutBlockFlow28StartOffsetForAvoidingFloatsENS_10LayoutUnitES1_ = comdat any

$_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE = comdat any

$_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_ = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE = comdat any

$_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE6insertIS3_EENS7_9AddResultEOT_ = comdat any

$_ZN5blink12InlineWalker7AdvanceEv = comdat any

$_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv = comdat any

$_ZNK5blink15LayoutBlockFlow7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF12VectorBufferIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutBlockFlowEEEmm = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxES0_EEEEmm = comdat any

$_ZN3WTF22VectorBackedLinkedListIPN5blink13RootInlineBoxENS_18PartitionAllocatorEE6insertIS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_ = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink15LayoutBlockFlow33can_propagate_float_into_sibling_E = hidden local_unnamed_addr global i8 0, align 1
@_ZTVN5blink15LayoutBlockFlowE = hidden unnamed_addr constant { [223 x i8*], [7 x i8*] } { [223 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlowD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlowD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"*, i32)* @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3160"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i8)* @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"*, i32)* @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"*)* @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i32)* @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, i1)* @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE to i8*), i8* bitcast (%"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i1)* @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZThn8_N5blink15LayoutBlockFlowD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZThn8_N5blink15LayoutBlockFlowD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/core/layout/layout_block_flow.cc\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"!first_child || first_child->IsBox()\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"!next_sibling || next_sibling->IsBox()\00", align 1
@_ZN5blink26layout_invalidation_reason25kAncestorMarginCollapsingE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason12kStyleChangeE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason27kChildAnonymousBlockChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"!floating_object.IsPlaced()\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"!SelfNeedsLayout()\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"!NeedsLayout() || ChildLayoutBlockedByDisplayLock()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E = external local_unnamed_addr global i32, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.8 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E = external local_unnamed_addr global i8, align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"LayoutBlockFlow\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBox *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENSt3__110unique_ptrINS2_14FloatingObjectENS5_14default_deleteIS7_EEEEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::LayoutBox *, std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> > >]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FloatQuad]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutBlockFlowEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBlockFlow *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [128 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<blink::RootInlineBox *, WTF::PartitionAllocator>]\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink13RootInlineBoxEjEEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::RootInlineBox *, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13RootInlineBoxEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RootInlineBox *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PhysicalRect]\00", align 1
@switch.table._ZN5blink15LayoutBlockFlow36InsertForcedBreakBeforeChildIfNeededERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoE = private unnamed_addr constant [9 x i32] [i32 0, i32 1, i32 7, i32 7, i32 4, i32 7, i32 6, i32 7, i32 8], align 4

@_ZN5blink15LayoutBlockFlowC1EPNS_13ContainerNodeE = hidden unnamed_addr alias void (%"class.blink::LayoutBlockFlow"*, %"class.blink::ContainerNode"*), void (%"class.blink::LayoutBlockFlow"*, %"class.blink::ContainerNode"*)* @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE
@_ZN5blink15LayoutBlockFlowD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutBlockFlow"*), void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlowD2Ev
@_ZN5blink10MarginInfoC1EPNS_15LayoutBlockFlowENS_10LayoutUnitES3_ = hidden unnamed_addr alias void (%"class.blink::MarginInfo"*, %"class.blink::LayoutBlockFlow"*, i32, i32), void (%"class.blink::MarginInfo"*, %"class.blink::LayoutBlockFlow"*, i32, i32)* @_ZN5blink10MarginInfoC2EPNS_15LayoutBlockFlowENS_10LayoutUnitES3_
@_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC1EPKS0_ = hidden unnamed_addr alias void (%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::LayoutBlockFlow"*), void (%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_
@_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataD1Ev = hidden unnamed_addr alias void (%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*), void (%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*)* @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"*, %"class.blink::ContainerNode"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"* %3, %"class.blink::ContainerNode"* %1) #16
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink15LayoutBlockFlowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink15LayoutBlockFlowE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = bitcast %"class.blink::LineBoxList"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false)
  %9 = load i96, i96* %7, align 4
  %10 = or i96 %9, 17592186044416
  store i96 %10, i96* %7, align 4
  ret void
}

declare void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutBlockFlow"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink15LayoutBlockFlowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink15LayoutBlockFlowE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  store %"class.blink::FloatingObjects"* null, %"class.blink::FloatingObjects"** %3, align 8
  %5 = icmp eq %"class.blink::FloatingObjects"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %4) #16
  %7 = bitcast %"class.blink::FloatingObjects"* %4 to i8*
  tail call void @free(i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %10 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %11 = icmp eq %"class.blink::PersistentNode"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %8
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #16
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #16
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::PersistentNode"* %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %25, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %25, %"class.blink::PersistentNode"** %26, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  br label %31

31:                                               ; preds = %8, %19
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %32) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink15LayoutBlockFlowD1Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 -1, i32 3
  %3 = bitcast %"class.std::__1::unique_ptr.1817"* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlowD0Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %0) #16
  %2 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink15LayoutBlockFlowD0Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 -1, i32 3
  %3 = bitcast %"class.std::__1::unique_ptr.1817"* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %3) #16
  %4 = bitcast %"class.std::__1::unique_ptr.1817"* %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlockFlow"* @_ZN5blink15LayoutBlockFlow15CreateAnonymousEPNS_8DocumentE13scoped_refptrINS_13ComputedStyleEENS_12LegacyLayoutE(%"class.blink::Document"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %5 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #16
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  store %"class.blink::Node"* %4, %"class.blink::Node"** %7, align 8
  %8 = icmp eq %"class.blink::ComputedStyle"* %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %6, %"class.blink::ComputedStyle"* null, i32 1) #16
  br label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #16
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %6, %"class.blink::ComputedStyle"* nonnull %1, i32 1) #16
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"* %12) #16
  br label %13

13:                                               ; preds = %9, %10
  ret %"class.blink::LayoutBlockFlow"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, null
  br i1 %6, label %103, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, i64 0, i32 3
  %9 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %9, null
  br i1 %10, label %103, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8, !noalias !3
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8, !noalias !3
  %19 = lshr i160 %18, 102
  %20 = trunc i160 %19 to i8
  %21 = and i8 %20, 3
  %22 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %21, label %23 [
    i8 0, label %32
    i8 1, label %24
  ]

23:                                               ; preds = %11
  br label %24

24:                                               ; preds = %23, %11
  %25 = phi { i64, i64 } [ { i64 993, i64 0 }, %23 ], [ { i64 1001, i64 0 }, %11 ]
  %26 = extractvalue { i64, i64 } %25, 0
  %27 = extractvalue { i64, i64 } %25, 1
  %28 = getelementptr inbounds i8, i8* %22, i64 %27
  %29 = bitcast i8* %28 to %"class.blink::LayoutBoxModelObject"*
  %30 = and i64 %26, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %24, %11
  %33 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %24 ], [ %13, %11 ]
  %34 = phi i8* [ %28, %24 ], [ %22, %11 ]
  %35 = phi i64 [ %26, %24 ], [ 977, %11 ]
  %36 = bitcast i8* %34 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %35, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %40, align 8
  br label %44

42:                                               ; preds = %24
  %43 = inttoptr i64 %26 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %44

44:                                               ; preds = %32, %42
  %45 = phi %"class.blink::LayoutBoxModelObject"* [ %33, %32 ], [ %29, %42 ]
  %46 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %41, %32 ], [ %43, %42 ]
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %45) #16
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8, !noalias !6
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8, !noalias !6
  %52 = lshr i160 %51, 102
  %53 = trunc i160 %52 to i8
  %54 = and i8 %53, 3
  switch i8 %54, label %55 [
    i8 0, label %64
    i8 1, label %56
  ]

55:                                               ; preds = %44
  br label %56

56:                                               ; preds = %55, %44
  %57 = phi { i64, i64 } [ { i64 961, i64 0 }, %55 ], [ { i64 969, i64 0 }, %44 ]
  %58 = extractvalue { i64, i64 } %57, 0
  %59 = extractvalue { i64, i64 } %57, 1
  %60 = getelementptr inbounds i8, i8* %22, i64 %59
  %61 = bitcast i8* %60 to %"class.blink::LayoutBoxModelObject"*
  %62 = and i64 %58, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %56, %44
  %65 = phi %"class.blink::LayoutBoxModelObject"* [ %61, %56 ], [ %13, %44 ]
  %66 = phi i8* [ %60, %56 ], [ %22, %44 ]
  %67 = phi i64 [ %58, %56 ], [ 945, %44 ]
  %68 = bitcast i8* %66 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = add i64 %67, -1
  %71 = getelementptr i8, i8* %69, i64 %70
  %72 = bitcast i8* %71 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  br label %76

74:                                               ; preds = %56
  %75 = inttoptr i64 %58 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %76

76:                                               ; preds = %64, %74
  %77 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %64 ], [ %61, %74 ]
  %78 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %73, %64 ], [ %75, %74 ]
  %79 = tail call i32 %78(%"class.blink::LayoutBoxModelObject"* %77) #16
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %79) #16
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %87 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %86 to i96*
  %88 = load i96, i96* %87, align 4
  %89 = trunc i96 %88 to i32
  %90 = icmp slt i32 %89, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %85
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  store i32 %85, i32* %92, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %12) #16
  br label %101

96:                                               ; preds = %76
  %97 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, %85
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  store i32 %85, i32* %97, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %12) #16
  br label %101

101:                                              ; preds = %91, %95, %96, %100
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread13LayoutColumnsERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %9, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2) #16
  tail call void @_ZN5blink15LayoutBlockFlow36DetermineLogicalLeftPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %12)
  %102 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %103

103:                                              ; preds = %3, %7, %101
  %104 = phi %"class.blink::LayoutObject"* [ %102, %101 ], [ null, %7 ], [ null, %3 ]
  ret %"class.blink::LayoutObject"* %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21SetLogicalTopForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = trunc i96 %6 to i32
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  store i32 %2, i32* %10, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #16
  br label %19

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %2
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  store i32 %2, i32* %15, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #16
  br label %19

19:                                               ; preds = %18, %14, %13, %9
  ret void
}

declare void @_ZN5blink27LayoutMultiColumnFlowThread13LayoutColumnsERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow36DetermineLogicalLeftPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8, !noalias !9
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8, !noalias !9
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  %15 = and i160 %13, 15211807202738752817960438464512
  %16 = icmp eq i160 %15, 0
  %17 = and i160 %13, 41538374868278621028243970633760768
  %18 = icmp eq i160 %17, 0
  %19 = select i1 %18, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %20 = select i1 %18, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %21 = select i1 %16, { i64, i64 } %20, { i64, i64 } %19
  %22 = select i1 %16, { i64, i64 } %20, { i64, i64 } %19
  %23 = extractvalue { i64, i64 } %21, 0
  %24 = extractvalue { i64, i64 } %22, 1
  %25 = getelementptr inbounds i8, i8* %14, i64 %24
  %26 = bitcast i8* %25 to %"class.blink::LayoutBoxModelObject"*
  %27 = and i64 %23, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %2
  %30 = bitcast i8* %25 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = add i64 %23, -1
  %33 = getelementptr i8, i8* %31, i64 %32
  %34 = bitcast i8* %33 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %35 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, align 8
  br label %38

36:                                               ; preds = %2
  %37 = inttoptr i64 %23 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %38

38:                                               ; preds = %29, %36
  %39 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %35, %29 ], [ %37, %36 ]
  %40 = tail call i32 %39(%"class.blink::LayoutBoxModelObject"* %26) #16
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8, !noalias !12
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8, !noalias !12
  %45 = and i160 %44, 15211807202738752817960438464512
  %46 = icmp eq i160 %45, 0
  %47 = and i160 %44, 41538374868278621028243970633760768
  %48 = icmp eq i160 %47, 0
  %49 = select i1 %48, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %50 = select i1 %48, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %51 = select i1 %46, { i64, i64 } %50, { i64, i64 } %49
  %52 = select i1 %46, { i64, i64 } %50, { i64, i64 } %49
  %53 = extractvalue { i64, i64 } %51, 0
  %54 = extractvalue { i64, i64 } %52, 1
  %55 = getelementptr inbounds i8, i8* %14, i64 %54
  %56 = bitcast i8* %55 to %"class.blink::LayoutBoxModelObject"*
  %57 = and i64 %53, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %38
  %60 = bitcast i8* %55 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = add i64 %53, -1
  %63 = getelementptr i8, i8* %61, i64 %62
  %64 = bitcast i8* %63 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %65 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %64, align 8
  br label %68

66:                                               ; preds = %38
  %67 = inttoptr i64 %53 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %68

68:                                               ; preds = %59, %66
  %69 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %65, %59 ], [ %67, %66 ]
  %70 = tail call i32 %69(%"class.blink::LayoutBoxModelObject"* %56) #16
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %70) #16
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  %77 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %8)
  %78 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %79 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %78) #16
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %79) #16
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %87 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %86, align 8
  %88 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %87, i64 172
  %89 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.blink::LayoutBox"* %78) #16
  %91 = tail call i32 @_ZNK5blink9LayoutBox25LogicalLeftScrollbarWidthEv(%"class.blink::LayoutBox"* %78)
  br i1 %90, label %92, label %96

92:                                               ; preds = %68
  %93 = icmp sgt i32 %91, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %76, i32 %91) #16
  br label %100

96:                                               ; preds = %68
  %97 = icmp slt i32 %91, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %91) #16
  br label %100

100:                                              ; preds = %96, %92
  %101 = phi { i32, i1 } [ %99, %96 ], [ %95, %92 ]
  %102 = phi i32 [ %98, %96 ], [ %94, %92 ]
  %103 = extractvalue { i32, i1 } %101, 1
  %104 = extractvalue { i32, i1 } %101, 0
  %105 = select i1 %103, i32 %102, i32 %104
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %107 = icmp eq %"class.blink::ComputedStyle"* %106, null
  %108 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  %110 = select i1 %107, %"class.blink::ComputedStyle"* %109, %"class.blink::ComputedStyle"* %106
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %112 = bitcast [20 x i8]* %111 to i160*
  %113 = load i160, i160* %112, align 8, !noalias !15
  %114 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %115 = and i160 %113, 15211807202738752817960438464512
  %116 = icmp eq i160 %115, 0
  %117 = and i160 %113, 41538374868278621028243970633760768
  %118 = icmp eq i160 %117, 0
  %119 = select i1 %118, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %120 = select i1 %118, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %121 = select i1 %116, { i64, i64 } %120, { i64, i64 } %119
  %122 = select i1 %116, { i64, i64 } %120, { i64, i64 } %119
  %123 = extractvalue { i64, i64 } %121, 0
  %124 = extractvalue { i64, i64 } %122, 1
  %125 = getelementptr inbounds i8, i8* %114, i64 %124
  %126 = bitcast i8* %125 to %"class.blink::LayoutBoxModelObject"*
  %127 = and i64 %123, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %100
  %130 = bitcast i8* %125 to i8**
  %131 = load i8*, i8** %130, align 8
  %132 = add i64 %123, -1
  %133 = getelementptr i8, i8* %131, i64 %132
  %134 = bitcast i8* %133 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %135 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %134, align 8
  br label %138

136:                                              ; preds = %100
  %137 = inttoptr i64 %123 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %138

138:                                              ; preds = %129, %136
  %139 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %135, %129 ], [ %137, %136 ]
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %126) #16
  %141 = icmp slt i32 %140, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %140) #16
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !2
  %147 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBox"*)***
  %148 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %147, align 8
  %149 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %148, i64 182
  %150 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %149, align 8
  %151 = tail call zeroext i1 %150(%"class.blink::LayoutBox"* %1) #16
  br i1 %151, label %152, label %220

152:                                              ; preds = %138
  %153 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %153, align 8
  %155 = icmp eq %"class.blink::FloatingObjects"* %154, null
  br i1 %155, label %220, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %154, i64 0, i32 0, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %220, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %162 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %161 to i96*
  %163 = load i96, i96* %162, align 4
  %164 = trunc i96 %163 to i32
  %165 = icmp slt i32 %164, 0
  %166 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %167 = bitcast %"class.blink::LayoutRect"* %166 to i64*
  %168 = load i64, i64* %167, align 4
  %169 = lshr i64 %168, 32
  %170 = select i1 %165, i64 %169, i64 %168
  %171 = trunc i64 %170 to i32
  %172 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %173 = bitcast %"class.blink::LayoutSize"* %172 to i64*
  %174 = load i64, i64* %173, align 4
  %175 = lshr i64 %174, 32
  %176 = select i1 %165, i64 %175, i64 %174
  %177 = trunc i64 %176 to i32
  %178 = tail call i32 @_ZNK5blink15LayoutBlockFlow28StartOffsetForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %171, i32 %177)
  %179 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %180 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %179, i64 0, i32 0, i32 9
  %181 = bitcast [20 x i8]* %180 to i160*
  %182 = load i160, i160* %181, align 8
  %183 = and i160 %182, 4323455642275676160
  %184 = icmp eq i160 %183, 1729382256910270464
  br i1 %184, label %208, label %185

185:                                              ; preds = %160
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  %187 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187)
  %188 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188)
  %189 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189)
  %190 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190)
  %191 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %186, i64 0, i32 0, i32 7, i32 0, i32 0
  %192 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %191, align 8, !noalias !18
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %192, i64 0, i32 12
  %194 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %192, i64 0, i32 11
  %195 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %192, i64 0, i32 9
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %192, i64 0, i32 10
  store %"class.blink::Length"* %193, %"class.blink::Length"** %3, align 8, !alias.scope !18
  store %"class.blink::Length"* %194, %"class.blink::Length"** %4, align 8, !alias.scope !18
  store %"class.blink::Length"* %195, %"class.blink::Length"** %5, align 8, !alias.scope !18
  store %"class.blink::Length"* %196, %"class.blink::Length"** %6, align 8, !alias.scope !18
  %197 = and i160 %182, 15211807202738752817960438464512
  %198 = icmp eq i160 %197, 0
  %199 = and i160 %182, 41538374868278621028243970633760768
  %200 = icmp eq i160 %199, 0
  %201 = select i1 %200, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %202 = select i1 %200, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %203 = select i1 %198, %"class.blink::Length"** %201, %"class.blink::Length"** %202
  %204 = load %"class.blink::Length"*, %"class.blink::Length"** %203, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190)
  %205 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %204, i64 0, i32 2
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %185, %160
  %209 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %178, i32 %140) #16
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %142, i32 %211, !prof !2
  %213 = icmp slt i32 %146, %212
  %214 = select i1 %213, i32 %212, i32 %146
  br label %220

215:                                              ; preds = %185
  %216 = icmp sgt i32 %178, %76
  br i1 %216, label %217, label %220

217:                                              ; preds = %215
  %218 = icmp slt i32 %146, %178
  %219 = select i1 %218, i32 %178, i32 %146
  br label %220

220:                                              ; preds = %208, %217, %215, %156, %152, %138
  %221 = phi i32 [ %146, %156 ], [ %146, %152 ], [ %146, %138 ], [ %146, %215 ], [ %219, %217 ], [ %214, %208 ]
  %222 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %223 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %222, i64 0, i32 0, i32 9
  %224 = bitcast [20 x i8]* %223 to i160*
  %225 = load i160, i160* %224, align 8
  %226 = and i160 %225, 41538374868278621028243970633760768
  %227 = icmp eq i160 %226, 0
  br i1 %227, label %228, label %233

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %230 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %229 to i96*
  %231 = load i96, i96* %230, align 4
  %232 = trunc i96 %231 to i32
  br label %257

233:                                              ; preds = %220
  %234 = icmp sgt i32 %221, -1
  %235 = select i1 %234, i32 -2147483648, i32 2147483647
  %236 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %85, i32 %221) #16
  %237 = extractvalue { i32, i1 } %236, 1
  %238 = extractvalue { i32, i1 } %236, 0
  %239 = select i1 %237, i32 %235, i32 %238, !prof !2
  %240 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %241 = bitcast %"class.blink::LayoutSize"* %240 to i64*
  %242 = load i64, i64* %241, align 4
  %243 = lshr i64 %242, 32
  %244 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %245 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %244 to i96*
  %246 = load i96, i96* %245, align 4
  %247 = trunc i96 %246 to i32
  %248 = icmp slt i32 %247, 0
  %249 = select i1 %248, i64 %242, i64 %243
  %250 = trunc i64 %249 to i32
  %251 = icmp sgt i32 %250, -1
  %252 = select i1 %251, i32 -2147483648, i32 2147483647
  %253 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %239, i32 %250) #16
  %254 = extractvalue { i32, i1 } %253, 1
  %255 = extractvalue { i32, i1 } %253, 0
  %256 = select i1 %254, i32 %252, i32 %255, !prof !2
  br label %257

257:                                              ; preds = %228, %233
  %258 = phi i32 [ %232, %228 ], [ %247, %233 ]
  %259 = phi i32 [ %221, %228 ], [ %256, %233 ]
  %260 = bitcast i64* %7 to %"class.blink::LayoutPoint"*
  %261 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #16
  %262 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %263 = bitcast %"class.blink::LayoutRect"* %262 to i64*
  %264 = load i64, i64* %263, align 4
  store i64 %264, i64* %7, align 8
  %265 = icmp slt i32 %258, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %257
  %267 = bitcast i64* %7 to i32*
  store i32 %259, i32* %267, align 8
  br label %270

268:                                              ; preds = %257
  %269 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %260, i64 0, i32 1, i32 0
  store i32 %259, i32* %269, align 4
  br label %270

270:                                              ; preds = %266, %268
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %260) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %3 = tail call zeroext i1 @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlock"* %2) #16
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, i64 0, i32 3
  %9 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread13NeedsNewWidthEv(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %9) #16
  br i1 %12, label %14, label %13

13:                                               ; preds = %1, %11, %7
  br label %14

14:                                               ; preds = %11, %13
  %15 = phi i1 [ %3, %13 ], [ true, %11 ]
  ret i1 %15
}

declare zeroext i1 @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink27LayoutMultiColumnFlowThread13NeedsNewWidthEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26SetBreakAtLineToAvoidWidowEi(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, null
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %9 = bitcast i8* %8 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %9, %"class.blink::LayoutBlockFlow"* %0) #16
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %3, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %9) #16
  %14 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %5, %2 ], [ %14, %7 ]
  %17 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, i64 0, i32 9
  store i32 %1, i32* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* @_ZN5blink15LayoutBlockFlow14EnsureRareDataEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %2, i64 0, i32 0
  %4 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %3, align 8
  %5 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %8 = bitcast i8* %7 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %8, %"class.blink::LayoutBlockFlow"* %0) #16
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %2, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %8) #16
  %13 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %3, align 8
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %13, %6 ], [ %4, %1 ]
  ret %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow29SetDidBreakAtLineToAvoidWidowEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 10
  %5 = load i8, i8* %4, align 8
  %6 = or i8 %5, 1
  store i8 %6, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow31ClearDidBreakAtLineToAvoidWidowEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 10
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, -2
  store i8 %8, i8* %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow34ClearShouldBreakAtLineToAvoidWidowEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 9
  store i32 -1, i32* %6, align 4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 63
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 28
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #16
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %15 = load i16, i16* %14, align 8
  %16 = and i16 %15, 32
  %17 = icmp ne i16 %16, 0
  br label %18

18:                                               ; preds = %1, %7
  %19 = phi i1 [ %17, %7 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow28CheckIfIsSelfCollapsingBlockEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %4 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %4, i64 182
  %6 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %7, label %235, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %20 = select i1 %17, i32* %18, i32* %19
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %235, label %23

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 6
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 7
  %28 = select i1 %17, %"class.blink::Length"* %26, %"class.blink::Length"* %27
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %28, i64 0, i32 2
  %30 = load i8, i8* %29, align 1
  switch i8 %30, label %31 [
    i8 12, label %45
    i8 8, label %235
  ]

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %28, i64 0, i32 3
  %33 = load i8, i8* %32, align 2, !range !21
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.blink::Length"* %28 to float*
  %37 = load float, float* %36, align 4
  br label %42

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %28, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  br label %42

42:                                               ; preds = %35, %38
  %43 = phi float [ %37, %35 ], [ %41, %38 ]
  %44 = fcmp ogt float %43, 0.000000e+00
  br i1 %44, label %235, label %45

45:                                               ; preds = %23, %42
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 8
  %48 = select i1 %17, %"class.blink::Length"* %46, %"class.blink::Length"* %47
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  switch i8 %50, label %104 [
    i8 8, label %52
    i8 1, label %52
    i8 0, label %173
  ]

52:                                               ; preds = %45, %45
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %63

56:                                               ; preds = %52, %56
  %57 = phi %"class.blink::LayoutObject"* [ %59, %56 ], [ %2, %52 ]
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 7
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 6, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %56, label %63

63:                                               ; preds = %56, %52
  %64 = phi %"class.blink::Node"* [ %54, %52 ], [ %61, %56 ]
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %68, i64 0, i32 33
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %63
  %73 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %74 = icmp eq %"class.blink::LayoutBlock"* %73, null
  br i1 %74, label %120, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %73, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.blink::LayoutBlock"* %73 to i1 (%"class.blink::LayoutObject"*, i32)***
  %78 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, i64 92
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* %76, i32 55) #16
  br i1 %81, label %120, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %73, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8
  %88 = and i160 %87, 15211807202738752817960438464512
  %89 = icmp eq i160 %88, 0
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 5, i32 0, i32 0
  %91 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %91, i64 0, i32 3
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %91, i64 0, i32 8
  %94 = select i1 %89, %"class.blink::Length"* %92, %"class.blink::Length"* %93
  %95 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %94, i64 0, i32 2
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 2
  br i1 %97, label %104, label %98

98:                                               ; preds = %82
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, i64 92
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %76, i32 46) #16
  br i1 %102, label %104, label %120

103:                                              ; preds = %63
  br i1 %51, label %120, label %104

104:                                              ; preds = %45, %98, %82, %103
  %105 = load i8, i8* %49, align 1
  %106 = add i8 %105, -1
  %107 = icmp ult i8 %106, 2
  br i1 %107, label %108, label %235

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 3
  %110 = load i8, i8* %109, align 2, !range !21
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.blink::Length"* %48 to float*
  %114 = load float, float* %113, align 4
  %115 = fcmp oeq float %114, 0.000000e+00
  br i1 %115, label %120, label %235

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %235

120:                                              ; preds = %112, %72, %98, %75, %116, %103
  %121 = load i8, i8* %49, align 1
  %122 = icmp eq i8 %121, 2
  br i1 %122, label %123, label %173

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 3
  %125 = load i8, i8* %124, align 2, !range !21
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::Length"* %48 to float*
  %129 = load float, float* %128, align 4
  %130 = fcmp oeq float %129, 0.000000e+00
  br i1 %130, label %135, label %173

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %173

135:                                              ; preds = %127, %131
  %136 = load i96, i96* %10, align 4
  %137 = and i96 %136, 16777216
  %138 = icmp eq i96 %137, 0
  br i1 %138, label %173, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = icmp eq %"class.blink::LayoutObject"* %141, null
  br i1 %142, label %173, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.blink::LayoutObject"* %141 to i1 (%"class.blink::LayoutObject"*, i32)***
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %144, align 8
  %146 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, i64 92
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %146, align 8
  %148 = tail call zeroext i1 %147(%"class.blink::LayoutObject"* nonnull %141, i32 14) #16
  br i1 %148, label %149, label %173

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %151 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %150, align 8
  %152 = icmp eq %"class.blink::LayoutObject"* %151, null
  br i1 %152, label %173, label %153

153:                                              ; preds = %149
  %154 = bitcast %"class.blink::LayoutObject"* %151 to i1 (%"class.blink::LayoutObject"*, i32)***
  %155 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %154, align 8
  %156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %155, i64 92
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %156, align 8
  %158 = tail call zeroext i1 %157(%"class.blink::LayoutObject"* nonnull %151, i32 15) #16
  br i1 %158, label %169, label %159

159:                                              ; preds = %153
  %160 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %154, align 8
  %161 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %160, i64 92
  %162 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %161, align 8
  %163 = tail call zeroext i1 %162(%"class.blink::LayoutObject"* nonnull %151, i32 13) #16
  br i1 %163, label %169, label %164

164:                                              ; preds = %159
  %165 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %154, align 8
  %166 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %165, i64 92
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.blink::LayoutObject"* nonnull %151, i32 36) #16
  br i1 %168, label %169, label %173

169:                                              ; preds = %153, %159, %164
  %170 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %151, i64 0, i32 9
  %171 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %170, align 8
  %172 = icmp eq %"class.blink::LayoutObject"* %171, null
  br i1 %172, label %235, label %173

173:                                              ; preds = %45, %135, %127, %169, %149, %164, %139, %143, %131, %120
  %174 = load i96, i96* %10, align 4
  %175 = and i96 %174, 17592186044416
  %176 = icmp eq i96 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %179 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %178, align 8
  %180 = icmp eq %"class.blink::InlineFlowBox"* %179, null
  br label %235

181:                                              ; preds = %173
  %182 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %183 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %182, align 8
  %184 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %183, i64 13
  %185 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %184, align 8
  %186 = tail call %"class.blink::LayoutObjectChildList"* %185(%"class.blink::LayoutObject"* %2) #16
  %187 = icmp eq %"class.blink::LayoutObjectChildList"* %186, null
  br i1 %187, label %235, label %188

188:                                              ; preds = %181
  %189 = bitcast %"class.blink::LayoutObjectChildList"* %186 to %"class.blink::LayoutBox"**
  %190 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %189, align 8
  %191 = icmp eq %"class.blink::LayoutBox"* %190, null
  br i1 %191, label %235, label %192

192:                                              ; preds = %188, %230
  %193 = phi %"class.blink::LayoutBox"* [ %233, %230 ], [ %190, %188 ]
  %194 = bitcast %"class.blink::LayoutBox"* %193 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %195 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %193, i64 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %193, i64 0, i32 0, i32 0, i32 4
  %197 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %196 to i96*
  %198 = load i96, i96* %197, align 4
  %199 = and i96 %198, 8388608
  %200 = icmp ne i96 %199, 0
  %201 = and i96 %198, 113336795588871485128704
  %202 = icmp eq i96 %201, 75557863725914323419136
  %203 = or i1 %202, %200
  br i1 %203, label %230, label %204

204:                                              ; preds = %192
  %205 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %193, i64 0, i32 0, i32 0, i32 5, i32 0
  %206 = bitcast %"class.blink::ComputedStyle"** %205 to %"class.blink::ComputedStyleBase"**
  %207 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %207, i64 0, i32 3, i32 0, i32 0
  %209 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %209, i64 0, i32 2, i32 0, i32 0
  %211 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %211, i64 0, i32 2, i32 0, i32 0
  %213 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %213, i64 0, i32 45
  %215 = load i32, i32* %214, align 4
  %216 = and i32 %215, 536870912
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %224, label %218

218:                                              ; preds = %204
  %219 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %194, align 8
  %220 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %219, i64 44
  %221 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %220, align 8
  %222 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %221(%"class.blink::LayoutObject"* %195) #16
  %223 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %222, null
  br i1 %223, label %224, label %230

224:                                              ; preds = %218, %204
  %225 = bitcast %"class.blink::LayoutBox"* %193 to i1 (%"class.blink::LayoutBox"*)***
  %226 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %225, align 8
  %227 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %226, i64 154
  %228 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %227, align 8
  %229 = tail call zeroext i1 %228(%"class.blink::LayoutBox"* nonnull %193) #16
  br i1 %229, label %230, label %235

230:                                              ; preds = %218, %224, %192
  %231 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %193, i64 0, i32 0, i32 0, i32 9
  %232 = bitcast %"class.blink::LayoutObject"** %231 to %"class.blink::LayoutBox"**
  %233 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %232, align 8
  %234 = icmp eq %"class.blink::LayoutBox"* %233, null
  br i1 %234, label %235, label %192

235:                                              ; preds = %224, %230, %181, %188, %104, %1, %177, %169, %116, %42, %8, %112, %23
  %236 = phi i1 [ false, %1 ], [ false, %42 ], [ %180, %177 ], [ true, %169 ], [ false, %116 ], [ false, %8 ], [ false, %112 ], [ false, %23 ], [ false, %104 ], [ true, %188 ], [ true, %181 ], [ false, %224 ], [ true, %230 ]
  ret i1 %236
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutAnalyzer::BlockScope", align 8
  %4 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %5 = alloca %"class.blink::TextAutosizer::LayoutScope", align 8
  %6 = alloca %"class.blink::LayoutState", align 8
  %7 = alloca %"class.blink::LayoutState", align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %9, align 8
  %11 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %13, align 8
  store %"class.blink::NGOffsetMapping"* null, %"class.blink::NGOffsetMapping"** %13, align 8
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %14) #16
  %17 = bitcast %"class.blink::NGOffsetMapping"* %14 to i8*
  tail call void @free(i8* %17) #16
  br label %18

18:                                               ; preds = %2, %12, %16
  %19 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  br i1 %1, label %22, label %20

20:                                               ; preds = %18
  %21 = tail call zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"* %19) #16
  br i1 %21, label %195, label %22

22:                                               ; preds = %18, %20
  %23 = bitcast %"class.blink::LayoutAnalyzer::BlockScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = bitcast %"class.blink::LayoutAnalyzer::BlockScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer10BlockScopeC1ERKNS_11LayoutBlockE(%"class.blink::LayoutAnalyzer::BlockScope"* nonnull %3, %"class.blink::LayoutBlock"* dereferenceable(240) %19) #16
  %25 = bitcast %"class.blink::SubtreeLayoutScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %4, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %26, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %8) #16
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 0
  %35 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %37 = select i1 %34, i32* %35, i32* %36
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %41 = select i1 %34, i32* %39, i32* %40
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %44 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %44, i64 211
  %46 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %45, align 8
  %47 = call zeroext i1 %46(%"class.blink::LayoutBlockFlow"* %0) #16
  %48 = or i1 %47, %1
  %49 = zext i1 %48 to i8
  %50 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #16
  %51 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"* nonnull %5, %"class.blink::LayoutBlock"* %19, %"class.blink::SubtreeLayoutScope"* nonnull %4) #16
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 512
  %55 = icmp eq i16 %54, 0
  %56 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  %58 = load i96, i96* %57, align 4
  %59 = and i96 %58, 256
  %60 = icmp eq i96 %59, 0
  %61 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %9, align 8
  %62 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %22
  %64 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %61, i64 0, i32 3
  %65 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %64, align 8
  br label %66

66:                                               ; preds = %22, %63
  %67 = phi %"class.blink::LayoutMultiColumnFlowThread"* [ %65, %63 ], [ null, %22 ]
  %68 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %6, i64 0, i32 0
  %69 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %67, null
  br label %70

70:                                               ; preds = %112, %66
  %71 = phi i8 [ %49, %66 ], [ %101, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 56, i1 false)
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %6, %"class.blink::LayoutBox"* dereferenceable(216) %27, i1 zeroext %47) #16
  %72 = load i16, i16* %52, align 8
  %73 = and i16 %72, 512
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = and i16 %72, -513
  store i16 %76, i16* %52, align 8
  %77 = load i8, i8* %68, align 8
  %78 = or i8 %77, 4
  store i8 %78, i8* %68, align 8
  br label %79

79:                                               ; preds = %70, %75
  %80 = and i8 %71, 1
  %81 = icmp ne i8 %80, 0
  call void @_ZN5blink15LayoutBlockFlow14LayoutChildrenEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %81, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4)
  br i1 %60, label %82, label %100

82:                                               ; preds = %79
  %83 = load i96, i96* %57, align 4
  %84 = and i96 %83, 256
  %85 = icmp eq i96 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %82
  %87 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %89 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %43, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %89, i64 211
  %91 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %90, align 8
  %92 = call zeroext i1 %91(%"class.blink::LayoutBlockFlow"* %0) #16
  %93 = zext i1 %92 to i32
  %94 = zext i8 %80 to i32
  %95 = or i32 %93, %94
  %96 = icmp ne i32 %95, 0
  %97 = trunc i32 %95 to i8
  call void @_ZN5blink15LayoutBlockFlow14LayoutChildrenEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %96, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %4)
  %98 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %99 = add nsw i32 %98, -1
  store i32 %99, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  br label %100

100:                                              ; preds = %82, %79, %86
  %101 = phi i8 [ %71, %79 ], [ %97, %86 ], [ %71, %82 ]
  br i1 %69, label %105, label %102

102:                                              ; preds = %100
  %103 = call zeroext i1 @_ZN5blink27LayoutMultiColumnFlowThread12FinishLayoutEv(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %67) #16
  br i1 %103, label %105, label %104

104:                                              ; preds = %102
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %8, i32 1) #16
  br label %112

105:                                              ; preds = %100, %102
  %106 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %9, align 8
  %107 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, null
  br i1 %107, label %116, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, i64 0, i32 9
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, -1
  br i1 %111, label %112, label %116

112:                                              ; preds = %108, %104
  %113 = phi i96 [ 1180591620717411303432, %104 ], [ 274877906944, %108 ]
  %114 = load i96, i96* %57, align 4
  %115 = or i96 %114, %113
  store i96 %115, i96* %57, align 4
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #16
  br label %70

116:                                              ; preds = %105, %108
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #16
  %117 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %117) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 56, i1 false)
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %7, %"class.blink::LayoutBox"* dereferenceable(216) %27, i1 zeroext %47) #16
  br i1 %55, label %121, label %118

118:                                              ; preds = %116
  %119 = load i8, i8* %117, align 8
  %120 = or i8 %119, 4
  store i8 %120, i8* %117, align 8
  br label %121

121:                                              ; preds = %116, %118
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 15211807202738752817960438464512
  %127 = icmp eq i160 %126, 0
  %128 = select i1 %127, i32* %35, i32* %36
  %129 = load i32, i32* %128, align 4
  %130 = call i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"* %27)
  call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %27) #16
  %131 = load i96, i96* %57, align 4
  %132 = and i96 %131, 17592186044416
  %133 = icmp eq i96 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %121
  call void @_ZN5blink15LayoutBlockFlow32AddOverhangingFloatsFromChildrenENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, i32 %129)
  br label %135

135:                                              ; preds = %121, %134
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = and i160 %139, 15211807202738752817960438464512
  %141 = icmp eq i160 %140, 0
  %142 = select i1 %141, i32* %35, i32* %36
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, %38
  br i1 %144, label %145, label %166

145:                                              ; preds = %135
  %146 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %146, align 8
  %148 = icmp eq %"class.blink::Node"* %147, null
  br i1 %148, label %149, label %156

149:                                              ; preds = %145, %149
  %150 = phi %"class.blink::LayoutObject"* [ %152, %149 ], [ %8, %145 ]
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %150, i64 0, i32 7
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 6, i32 0, i32 0
  %154 = load %"class.blink::Node"*, %"class.blink::Node"** %153, align 8
  %155 = icmp eq %"class.blink::Node"* %154, null
  br i1 %155, label %149, label %156

156:                                              ; preds = %149, %145
  %157 = phi %"class.blink::Node"* [ %147, %145 ], [ %154, %149 ]
  %158 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %157, i64 0, i32 3, i32 0, i32 0
  %159 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %159, i64 0, i32 2, i32 0, i32 0
  %161 = load %"class.blink::Document"*, %"class.blink::Document"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %161, i64 0, i32 47, i32 0, i32 0
  %163 = load %"class.blink::Element"*, %"class.blink::Element"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %163, i64 0, i32 0, i32 0
  %165 = icmp eq %"class.blink::Node"* %164, %147
  br i1 %165, label %166, label %167

166:                                              ; preds = %135, %156
  br label %167

167:                                              ; preds = %166, %156
  %168 = phi i8 [ 1, %166 ], [ %101, %156 ]
  %169 = select i1 %141, i32* %39, i32* %40
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %42, %170
  %172 = select i1 %171, i32 0, i32 2
  %173 = and i8 %168, 1
  %174 = icmp ne i8 %173, 0
  %175 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlock"*, i1, i32)***
  %176 = load void (%"class.blink::LayoutBlock"*, i1, i32)**, void (%"class.blink::LayoutBlock"*, i1, i32)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i1, i32)*, void (%"class.blink::LayoutBlock"*, i1, i32)** %176, i64 199
  %178 = load void (%"class.blink::LayoutBlock"*, i1, i32)*, void (%"class.blink::LayoutBlock"*, i1, i32)** %177, align 8
  call void %178(%"class.blink::LayoutBlock"* %19, i1 zeroext %174, i32 %172) #16
  %179 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlockFlow"*, i32, i1)***
  %180 = load void (%"class.blink::LayoutBlockFlow"*, i32, i1)**, void (%"class.blink::LayoutBlockFlow"*, i32, i1)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, i32, i1)*, void (%"class.blink::LayoutBlockFlow"*, i32, i1)** %180, i64 207
  %182 = load void (%"class.blink::LayoutBlockFlow"*, i32, i1)*, void (%"class.blink::LayoutBlockFlow"*, i32, i1)** %181, align 8
  call void %182(%"class.blink::LayoutBlockFlow"* %0, i32 %130, i1 zeroext false) #16
  %183 = load i16, i16* %52, align 8
  %184 = and i16 %183, -65
  store i16 %184, i16* %52, align 8
  %185 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlock"*)***
  %186 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %186, i64 151
  %188 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %187, align 8
  call void %188(%"class.blink::LayoutBlock"* %19) #16
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %8)
  %189 = call zeroext i1 @_ZNK5blink15LayoutBlockFlow28CheckIfIsSelfCollapsingBlockEv(%"class.blink::LayoutBlockFlow"* %0)
  %190 = zext i1 %189 to i16
  %191 = load i16, i16* %52, align 8
  %192 = shl nuw nsw i16 %190, 5
  %193 = and i16 %191, -33
  %194 = or i16 %193, %192
  store i16 %194, i16* %52, align 8
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %117) #16
  call void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #16
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  call void @_ZN5blink14LayoutAnalyzer10BlockScopeD1Ev(%"class.blink::LayoutAnalyzer::BlockScope"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  br label %195

195:                                              ; preds = %20, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26ClearOffsetMappingIfNeededEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %6, align 8
  store %"class.blink::NGOffsetMapping"* null, %"class.blink::NGOffsetMapping"** %6, align 8
  %8 = icmp eq %"class.blink::NGOffsetMapping"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %7) #16
  %10 = bitcast %"class.blink::NGOffsetMapping"* %7 to i8*
  tail call void @free(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %9, %5
  ret void
}

declare zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink14LayoutAnalyzer10BlockScopeC1ERKNS_11LayoutBlockE(%"class.blink::LayoutAnalyzer::BlockScope"*, %"class.blink::LayoutBlock"* dereferenceable(240)) unnamed_addr #1

declare void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

declare void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"*, %"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow14LayoutChildrenEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15LayoutBlockFlow11ResetLayoutEv(%"class.blink::LayoutBlockFlow"* %0)
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !22

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #16
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #16
  br i1 %26, label %27, label %292

27:                                               ; preds = %25, %6, %12, %16, %3, %21
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8, !noalias !23
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8, !noalias !23
  %34 = lshr i160 %33, 102
  %35 = trunc i160 %34 to i8
  %36 = and i8 %35, 3
  %37 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %36, label %38 [
    i8 0, label %47
    i8 1, label %39
  ]

38:                                               ; preds = %27
  br label %39

39:                                               ; preds = %38, %27
  %40 = phi { i64, i64 } [ { i64 993, i64 0 }, %38 ], [ { i64 1001, i64 0 }, %27 ]
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  %44 = bitcast i8* %43 to %"class.blink::LayoutBoxModelObject"*
  %45 = and i64 %41, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %39, %27
  %48 = phi %"class.blink::LayoutBoxModelObject"* [ %44, %39 ], [ %28, %27 ]
  %49 = phi i8* [ %43, %39 ], [ %37, %27 ]
  %50 = phi i64 [ %41, %39 ], [ 977, %27 ]
  %51 = bitcast i8* %49 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = add i64 %50, -1
  %54 = getelementptr i8, i8* %52, i64 %53
  %55 = bitcast i8* %54 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  br label %59

57:                                               ; preds = %39
  %58 = inttoptr i64 %41 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %59

59:                                               ; preds = %47, %57
  %60 = phi %"class.blink::LayoutBoxModelObject"* [ %48, %47 ], [ %44, %57 ]
  %61 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %56, %47 ], [ %58, %57 ]
  %62 = tail call i32 %61(%"class.blink::LayoutBoxModelObject"* %60) #16
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8, !noalias !26
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %63, i64 0, i32 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8, !noalias !26
  %67 = lshr i160 %66, 102
  %68 = trunc i160 %67 to i8
  %69 = and i8 %68, 3
  switch i8 %69, label %70 [
    i8 0, label %79
    i8 1, label %71
  ]

70:                                               ; preds = %59
  br label %71

71:                                               ; preds = %70, %59
  %72 = phi { i64, i64 } [ { i64 961, i64 0 }, %70 ], [ { i64 969, i64 0 }, %59 ]
  %73 = extractvalue { i64, i64 } %72, 0
  %74 = extractvalue { i64, i64 } %72, 1
  %75 = getelementptr inbounds i8, i8* %37, i64 %74
  %76 = bitcast i8* %75 to %"class.blink::LayoutBoxModelObject"*
  %77 = and i64 %73, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %71, %59
  %80 = phi %"class.blink::LayoutBoxModelObject"* [ %76, %71 ], [ %28, %59 ]
  %81 = phi i8* [ %75, %71 ], [ %37, %59 ]
  %82 = phi i64 [ %73, %71 ], [ 945, %59 ]
  %83 = bitcast i8* %81 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = add i64 %82, -1
  %86 = getelementptr i8, i8* %84, i64 %85
  %87 = bitcast i8* %86 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %88 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %87, align 8
  br label %91

89:                                               ; preds = %71
  %90 = inttoptr i64 %73 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %91

91:                                               ; preds = %79, %89
  %92 = phi %"class.blink::LayoutBoxModelObject"* [ %80, %79 ], [ %76, %89 ]
  %93 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %88, %79 ], [ %90, %89 ]
  %94 = tail call i32 %93(%"class.blink::LayoutBoxModelObject"* %92) #16
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %94) #16
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !2
  %101 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8, !noalias !29
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %101, i64 0, i32 0, i32 9
  %103 = bitcast [20 x i8]* %102 to i160*
  %104 = load i160, i160* %103, align 8, !noalias !29
  %105 = lshr i160 %104, 102
  %106 = trunc i160 %105 to i8
  %107 = and i8 %106, 3
  switch i8 %107, label %108 [
    i8 0, label %117
    i8 1, label %109
  ]

108:                                              ; preds = %91
  br label %109

109:                                              ; preds = %108, %91
  %110 = phi { i64, i64 } [ { i64 1001, i64 0 }, %108 ], [ { i64 993, i64 0 }, %91 ]
  %111 = extractvalue { i64, i64 } %110, 0
  %112 = extractvalue { i64, i64 } %110, 1
  %113 = getelementptr inbounds i8, i8* %37, i64 %112
  %114 = bitcast i8* %113 to %"class.blink::LayoutBoxModelObject"*
  %115 = and i64 %111, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %127, label %117

117:                                              ; preds = %109, %91
  %118 = phi %"class.blink::LayoutBoxModelObject"* [ %114, %109 ], [ %28, %91 ]
  %119 = phi i8* [ %113, %109 ], [ %37, %91 ]
  %120 = phi i64 [ %111, %109 ], [ 985, %91 ]
  %121 = bitcast i8* %119 to i8**
  %122 = load i8*, i8** %121, align 8
  %123 = add i64 %120, -1
  %124 = getelementptr i8, i8* %122, i64 %123
  %125 = bitcast i8* %124 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %126 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %125, align 8
  br label %129

127:                                              ; preds = %109
  %128 = inttoptr i64 %111 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %129

129:                                              ; preds = %117, %127
  %130 = phi %"class.blink::LayoutBoxModelObject"* [ %118, %117 ], [ %114, %127 ]
  %131 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %126, %117 ], [ %128, %127 ]
  %132 = tail call i32 %131(%"class.blink::LayoutBoxModelObject"* %130) #16
  %133 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8, !noalias !32
  %134 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %133, i64 0, i32 0, i32 9
  %135 = bitcast [20 x i8]* %134 to i160*
  %136 = load i160, i160* %135, align 8, !noalias !32
  %137 = lshr i160 %136, 102
  %138 = trunc i160 %137 to i8
  %139 = and i8 %138, 3
  switch i8 %139, label %140 [
    i8 0, label %149
    i8 1, label %141
  ]

140:                                              ; preds = %129
  br label %141

141:                                              ; preds = %140, %129
  %142 = phi { i64, i64 } [ { i64 969, i64 0 }, %140 ], [ { i64 961, i64 0 }, %129 ]
  %143 = extractvalue { i64, i64 } %142, 0
  %144 = extractvalue { i64, i64 } %142, 1
  %145 = getelementptr inbounds i8, i8* %37, i64 %144
  %146 = bitcast i8* %145 to %"class.blink::LayoutBoxModelObject"*
  %147 = and i64 %143, 1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %141, %129
  %150 = phi %"class.blink::LayoutBoxModelObject"* [ %146, %141 ], [ %28, %129 ]
  %151 = phi i8* [ %145, %141 ], [ %37, %129 ]
  %152 = phi i64 [ %143, %141 ], [ 953, %129 ]
  %153 = bitcast i8* %151 to i8**
  %154 = load i8*, i8** %153, align 8
  %155 = add i64 %152, -1
  %156 = getelementptr i8, i8* %154, i64 %155
  %157 = bitcast i8* %156 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %158 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %157, align 8
  br label %161

159:                                              ; preds = %141
  %160 = inttoptr i64 %143 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %161

161:                                              ; preds = %149, %159
  %162 = phi %"class.blink::LayoutBoxModelObject"* [ %150, %149 ], [ %146, %159 ]
  %163 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %158, %149 ], [ %160, %159 ]
  %164 = tail call i32 %163(%"class.blink::LayoutBoxModelObject"* %162) #16
  %165 = icmp slt i32 %164, 0
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %132, i32 %164) #16
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !2
  %171 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %172 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %171)
  %173 = extractvalue { i64, i64 } %172, 1
  %174 = trunc i64 %173 to i32
  %175 = icmp slt i32 %174, 0
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %174) #16
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  %181 = lshr i64 %173, 32
  %182 = trunc i64 %181 to i32
  %183 = icmp slt i32 %182, 0
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %170, i32 %182) #16
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !2
  %189 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %189, i64 0, i32 0, i32 9
  %191 = bitcast [20 x i8]* %190 to i160*
  %192 = load i160, i160* %191, align 8
  %193 = and i160 %192, 15211807202738752817960438464512
  %194 = icmp eq i160 %193, 0
  br i1 %194, label %195, label %200

195:                                              ; preds = %161
  %196 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, %180
  br i1 %198, label %205, label %199

199:                                              ; preds = %195
  store i32 %180, i32* %196, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %171) #16
  br label %205

200:                                              ; preds = %161
  %201 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, %180
  br i1 %203, label %205, label %204

204:                                              ; preds = %200
  store i32 %180, i32* %201, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %171) #16
  br label %205

205:                                              ; preds = %195, %199, %200, %204
  %206 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %207 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %206 to i96*
  %208 = load i96, i96* %207, align 4
  %209 = and i96 %208, 17592186044416
  %210 = icmp eq i96 %209, 0
  br i1 %210, label %212, label %211

211:                                              ; preds = %205
  tail call void @_ZN5blink15LayoutBlockFlow20LayoutInlineChildrenEbNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %1, i32 %188) #16
  br label %213

212:                                              ; preds = %205
  tail call void @_ZN5blink15LayoutBlockFlow19LayoutBlockChildrenEbRNS_18SubtreeLayoutScopeENS_10LayoutUnitES3_(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %1, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2, i32 %180, i32 %188)
  br label %213

213:                                              ; preds = %212, %211
  %214 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %215 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %214, align 8
  %216 = icmp eq %"class.blink::FloatingObjects"* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %213
  %218 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %215, i32 3) #16
  br label %219

219:                                              ; preds = %213, %217
  %220 = phi i32 [ %218, %217 ], [ 0, %213 ]
  %221 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %221, i64 0, i32 0, i32 9
  %223 = bitcast [20 x i8]* %222 to i160*
  %224 = load i160, i160* %223, align 8
  %225 = and i160 %224, 15211807202738752817960438464512
  %226 = icmp eq i160 %225, 0
  %227 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %228 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %229 = select i1 %226, i32* %227, i32* %228
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %188, -1
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %230, i32 %188) #16
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !2
  %237 = icmp sgt i32 %220, %236
  br i1 %237, label %238, label %271

238:                                              ; preds = %219
  %239 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %240 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %239, align 8
  %241 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %240, i64 182
  %242 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %241, align 8
  %243 = tail call zeroext i1 %242(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %243, label %244, label %271

244:                                              ; preds = %238
  %245 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %214, align 8
  %246 = icmp eq %"class.blink::FloatingObjects"* %245, null
  br i1 %246, label %249, label %247

247:                                              ; preds = %244
  %248 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %245, i32 3) #16
  br label %249

249:                                              ; preds = %244, %247
  %250 = phi i32 [ %248, %247 ], [ 0, %244 ]
  %251 = icmp slt i32 %188, 0
  %252 = select i1 %251, i32 -2147483648, i32 2147483647
  %253 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %250, i32 %188) #16
  %254 = extractvalue { i32, i1 } %253, 1
  %255 = extractvalue { i32, i1 } %253, 0
  %256 = select i1 %254, i32 %252, i32 %255, !prof !2
  %257 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %257, i64 0, i32 0, i32 9
  %259 = bitcast [20 x i8]* %258 to i160*
  %260 = load i160, i160* %259, align 8
  %261 = and i160 %260, 15211807202738752817960438464512
  %262 = icmp eq i160 %261, 0
  br i1 %262, label %263, label %267

263:                                              ; preds = %249
  %264 = load i32, i32* %227, align 4
  %265 = icmp eq i32 %264, %256
  br i1 %265, label %271, label %266

266:                                              ; preds = %263
  store i32 %256, i32* %227, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %171) #16
  br label %271

267:                                              ; preds = %249
  %268 = load i32, i32* %228, align 4
  %269 = icmp eq i32 %268, %256
  br i1 %269, label %271, label %270

270:                                              ; preds = %267
  store i32 %256, i32* %228, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %171) #16
  br label %271

271:                                              ; preds = %219, %270, %267, %266, %263, %238
  %272 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %292, label %274

274:                                              ; preds = %271
  %275 = load i96, i96* %207, align 4
  %276 = and i96 %275, 16777216
  %277 = icmp eq i96 %276, 0
  br i1 %277, label %278, label %292

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %280 = load %"class.blink::Node"*, %"class.blink::Node"** %279, align 8
  %281 = icmp eq %"class.blink::Node"* %280, null
  br i1 %281, label %292, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %280, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 67108876
  %286 = icmp eq i32 %285, 67108864
  br i1 %286, label %287, label %292, !prof !22

287:                                              ; preds = %282
  %288 = bitcast %"class.blink::Node"* %280 to %"class.blink::Element"*
  %289 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %288) #16
  %290 = icmp eq %"class.blink::DisplayLockContext"* %289, null
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  tail call void @_ZN5blink18DisplayLockContext17DidLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %289) #16
  br label %292

292:                                              ; preds = %25, %291, %287, %282, %278, %274, %271
  ret void
}

declare zeroext i1 @_ZN5blink27LayoutMultiColumnFlowThread12FinishLayoutEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !35
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !35
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 993, i64 0 }, %12 ], [ { i64 1001, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 977, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #16
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 1190036353683150593851392
  %42 = icmp eq i160 %41, 340010386766614455386112
  br i1 %42, label %72, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8589934592
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %43
  %50 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #16
  %51 = icmp eq %"class.blink::PaintLayerScrollableArea"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %49
  %53 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #16
  %54 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 3
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %59, align 8
  %61 = icmp eq %"class.blink::Scrollbar"* %60, null
  br i1 %61, label %62, label %79

62:                                               ; preds = %58, %52
  %63 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #16
  %64 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 3
  %65 = load i8, i8* %64, align 8
  %66 = and i8 %65, 2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %69, align 8
  %71 = icmp eq %"class.blink::Scrollbar"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %33, %43, %62, %68
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 270215977642229760
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %49, %58, %68, %72
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 5070602400912917605986812821504
  %86 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #16
  %87 = extractvalue { i64, i64 } %86, 0
  %88 = lshr i64 %87, 32
  %89 = select i1 %85, i64 %88, i64 %87
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  br label %93

93:                                               ; preds = %79, %72
  %94 = phi i32 [ 0, %72 ], [ %90, %79 ]
  %95 = phi i32 [ 2147483647, %72 ], [ %92, %79 ]
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %94) #16
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = trunc i96 %102 to i32
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #16
  br label %109

107:                                              ; preds = %93
  %108 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #16
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i32 [ %106, %105 ], [ %108, %107 ]
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %110) #16
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !2
  ret i32 %116
}

declare void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow32AddOverhangingFloatsFromChildrenENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %94, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  br label %10

10:                                               ; preds = %7, %79
  %11 = phi %"class.blink::LayoutObject"* [ %5, %7 ], [ %83, %79 ]
  %12 = phi i8 [ 0, %7 ], [ %81, %79 ]
  %13 = phi %"class.blink::LayoutBlockFlow"* [ null, %7 ], [ %80, %79 ]
  %14 = bitcast %"class.blink::LayoutObject"* %11 to i1 (%"class.blink::LayoutObject"*)***
  %15 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %15, i64 24
  %17 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* nonnull %11) #16
  %19 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutBlockFlow"*
  br i1 %18, label %20, label %79

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 8388608
  %25 = icmp ne i96 %24, 0
  %26 = and i96 %23, 113336795588871485128704
  %27 = icmp eq i96 %26, 75557863725914323419136
  %28 = or i1 %27, %25
  br i1 %28, label %79, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 3, i32 1
  %31 = bitcast %"class.blink::DisplayItemClient.base"* %30 to %"class.blink::FloatingObjects"**
  %32 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %31, align 8
  %33 = icmp eq %"class.blink::FloatingObjects"* %32, null
  br i1 %33, label %79, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %32, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %79, label %38

38:                                               ; preds = %34
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 15211807202738752817960438464512
  %44 = icmp eq i160 %43, 0
  %45 = select i1 %44, i32* %8, i32* %9
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, %1
  br i1 %47, label %48, label %85

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 1, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i32*
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 1, i32 1, i32 1
  %59 = bitcast i8* %58 to i32*
  %60 = select i1 %55, i32* %57, i32* %59
  %61 = load i32, i32* %60, align 4
  %62 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %32, i32 3) #16
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %62) #16
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  %73 = and i160 %72, 15211807202738752817960438464512
  %74 = icmp eq i160 %73, 0
  %75 = select i1 %74, i32* %8, i32* %9
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %68, %76
  br i1 %77, label %78, label %87

78:                                               ; preds = %48
  tail call void @_ZN5blink15LayoutBlockFlow20AddOverhangingFloatsEPS0_b(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %19, i1 zeroext false)
  br label %79

79:                                               ; preds = %34, %10, %29, %78, %20
  %80 = phi %"class.blink::LayoutBlockFlow"* [ %19, %78 ], [ %13, %10 ], [ %13, %20 ], [ %13, %34 ], [ %13, %29 ]
  %81 = phi i8 [ 1, %78 ], [ %12, %10 ], [ %12, %20 ], [ %12, %34 ], [ %12, %29 ]
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 8
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %82, align 8
  %84 = icmp eq %"class.blink::LayoutObject"* %83, null
  br i1 %84, label %89, label %10

85:                                               ; preds = %38
  %86 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutBlockFlow"*
  br label %89

87:                                               ; preds = %48
  %88 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutBlockFlow"*
  br label %89

89:                                               ; preds = %79, %87, %85
  %90 = phi i8 [ %12, %85 ], [ %12, %87 ], [ %81, %79 ]
  %91 = phi %"class.blink::LayoutBlockFlow"* [ %86, %85 ], [ %88, %87 ], [ %80, %79 ]
  %92 = and i8 %90, 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %2, %89
  %95 = phi %"class.blink::LayoutBlockFlow"* [ %91, %89 ], [ null, %2 ]
  tail call void @_ZN5blink15LayoutBlockFlow26AddLowestFloatFromChildrenEPS0_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* %95)
  br label %96

96:                                               ; preds = %89, %94
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !22

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #16
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #16
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !22

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #16
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer10BlockScopeD1Ev(%"class.blink::LayoutAnalyzer::BlockScope"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow11ResetLayoutEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = icmp eq %"class.blink::LayoutObject"* %12, null
  br i1 %13, label %14, label %52

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 16777216
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = lshr i160 %25, 32
  %27 = trunc i160 %26 to i32
  %28 = and i32 %27, 31
  switch i32 %28, label %49 [
    i32 1, label %29
    i32 14, label %29
  ]

29:                                               ; preds = %20, %20
  %30 = and i160 %25, 2113929216
  %31 = icmp eq i160 %30, 0
  br i1 %31, label %32, label %49

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %34 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %34, i64 23
  %36 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %10) #16
  br i1 %37, label %38, label %49

38:                                               ; preds = %32
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %33, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 25
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %10) #16
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %10, i32 20) #16
  br i1 %48, label %49, label %52

49:                                               ; preds = %43, %20, %14, %29, %32, %38
  %50 = load i96, i96* %16, align 4
  %51 = or i96 %50, 17592186044416
  store i96 %51, i96* %16, align 4
  br label %52

52:                                               ; preds = %1, %43, %49
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, -35184372088833
  store i96 %56, i96* %54, align 4
  %57 = and i96 %55, 17592186044416
  %58 = icmp eq i96 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %52
  %60 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow29ShouldTruncateOverflowingTextEv(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @_ZN5blink15LayoutBlockFlow23DeleteEllipsisLineBoxesEv(%"class.blink::LayoutBlockFlow"* %0) #16
  br label %62

62:                                               ; preds = %52, %61, %59
  tail call void @_ZN5blink15LayoutBlockFlow26RebuildFloatsFromIntrudingEv(%"class.blink::LayoutBlockFlow"* %0)
  %63 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, i64 92
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* %10, i32 46) #16
  br i1 %67, label %130, label %68

68:                                               ; preds = %62
  tail call void @_ZN5blink15LayoutBlockFlow19InitMaxMarginValuesEv(%"class.blink::LayoutBlockFlow"* %0)
  %69 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = and i160 %73, 44601490397061246283071436545296723011960832
  %75 = icmp eq i160 %74, 0
  br i1 %75, label %96, label %76

76:                                               ; preds = %68
  %77 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = lshr i160 %73, 102
  %81 = trunc i160 %80 to i8
  %82 = and i8 %81, 3
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 7, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %83, align 8, !noalias !38
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 12
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 11
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 10
  store %"class.blink::Length"* %85, %"class.blink::Length"** %5, align 8, !alias.scope !38
  store %"class.blink::Length"* %86, %"class.blink::Length"** %6, align 8, !alias.scope !38
  store %"class.blink::Length"* %87, %"class.blink::Length"** %7, align 8, !alias.scope !38
  %88 = icmp eq i8 %82, 0
  %89 = icmp eq i8 %82, 1
  %90 = select i1 %89, %"class.blink::Length"** %6, %"class.blink::Length"** %7
  %91 = select i1 %88, %"class.blink::Length"** %5, %"class.blink::Length"** %90
  %92 = load %"class.blink::Length"*, %"class.blink::Length"** %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %92, i64 0, i32 1
  %94 = load i8, i8* %93, align 4, !range !21
  %95 = zext i8 %94 to i16
  br label %96

96:                                               ; preds = %68, %76
  %97 = phi i16 [ 0, %68 ], [ %95, %76 ]
  %98 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %99 = load i16, i16* %98, align 8
  %100 = and i16 %99, -2
  %101 = or i16 %100, %97
  store i16 %101, i16* %98, align 8
  %102 = load i160, i160* %72, align 8
  %103 = and i160 %102, 44601490397061246283071436545296723011960832
  %104 = icmp eq i160 %103, 0
  br i1 %104, label %126, label %105

105:                                              ; preds = %96
  %106 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  %108 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = lshr i160 %102, 102
  %110 = trunc i160 %109 to i8
  %111 = and i8 %110, 3
  %112 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 7, i32 0, i32 0
  %113 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %112, align 8, !noalias !41
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %113, i64 0, i32 11
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %113, i64 0, i32 9
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %113, i64 0, i32 10
  store %"class.blink::Length"* %114, %"class.blink::Length"** %2, align 8, !alias.scope !41
  store %"class.blink::Length"* %115, %"class.blink::Length"** %3, align 8, !alias.scope !41
  store %"class.blink::Length"* %116, %"class.blink::Length"** %4, align 8, !alias.scope !41
  %117 = icmp eq i8 %111, 0
  %118 = icmp eq i8 %111, 1
  %119 = select i1 %118, %"class.blink::Length"** %4, %"class.blink::Length"** %2
  %120 = select i1 %117, %"class.blink::Length"** %3, %"class.blink::Length"** %119
  %121 = load %"class.blink::Length"*, %"class.blink::Length"** %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  %122 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %121, i64 0, i32 1
  %123 = load i8, i8* %122, align 4, !range !21
  %124 = shl nuw nsw i8 %123, 1
  %125 = zext i8 %124 to i16
  br label %126

126:                                              ; preds = %96, %105
  %127 = phi i16 [ 0, %96 ], [ %125, %105 ]
  %128 = and i16 %101, -3
  %129 = or i16 %127, %128
  store i16 %129, i16* %98, align 8
  br label %130

130:                                              ; preds = %126, %62
  %131 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %132 = load %"class.blink::Node"*, %"class.blink::Node"** %131, align 8
  %133 = icmp eq %"class.blink::Node"* %132, null
  br i1 %133, label %134, label %141

134:                                              ; preds = %130, %134
  %135 = phi %"class.blink::LayoutObject"* [ %137, %134 ], [ %10, %130 ]
  %136 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %135, i64 0, i32 7
  %137 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %137, i64 0, i32 6, i32 0, i32 0
  %139 = load %"class.blink::Node"*, %"class.blink::Node"** %138, align 8
  %140 = icmp eq %"class.blink::Node"* %139, null
  br i1 %140, label %134, label %141

141:                                              ; preds = %134, %130
  %142 = phi %"class.blink::Node"* [ %132, %130 ], [ %139, %134 ]
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 3, i32 0, i32 0
  %144 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %144, i64 0, i32 2, i32 0, i32 0
  %146 = load %"class.blink::Document"*, %"class.blink::Document"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %146, i64 0, i32 113
  %148 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %148, i64 0, i32 3
  %150 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %150, i64 0, i32 0
  %152 = load i8, i8* %151, align 8
  %153 = and i8 %152, 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %232, label %155

155:                                              ; preds = %141
  %156 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %157 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %156, i64 0, i32 0
  %158 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %157, align 8
  %159 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %158, i64 0, i32 1, i32 0
  store i32 0, i32* %161, align 8
  %162 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %157, align 8
  %163 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %162, i64 0, i32 2, i32 0
  store i32 0, i32* %165, align 4
  br label %166

166:                                              ; preds = %155, %160, %164
  %167 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %168 = tail call i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"* %167) #16
  %169 = icmp eq i32 %168, 2
  br i1 %169, label %172, label %170

170:                                              ; preds = %166
  %171 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %167, i32 %168) #16
  br i1 %171, label %176, label %172

172:                                              ; preds = %170, %166
  %173 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %174 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %173, align 8
  %175 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %174, null
  br i1 %175, label %197, label %190

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %178 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %177, align 8
  %179 = trunc i32 %168 to i8
  %180 = and i8 %179, 15
  %181 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %178, null
  br i1 %181, label %182, label %190

182:                                              ; preds = %176
  %183 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %184 = bitcast i8* %183 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %184, %"class.blink::LayoutBlockFlow"* %0) #16
  %185 = getelementptr inbounds i8, i8* %183, i64 -4
  %186 = bitcast i8* %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = or i16 %187, 1
  store atomic i16 %188, i16* %186 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %156, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %184) #16
  %189 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %157, align 8
  br label %190

190:                                              ; preds = %182, %176, %172
  %191 = phi i8 [ %180, %182 ], [ %180, %176 ], [ 2, %172 ]
  %192 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %189, %182 ], [ %178, %176 ], [ %174, %172 ]
  %193 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %192, i64 0, i32 7
  %194 = load i8, i8* %193, align 8
  %195 = and i8 %194, -16
  %196 = or i8 %195, %191
  store i8 %196, i8* %193, align 8
  br label %197

197:                                              ; preds = %172, %190
  %198 = tail call i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"* %167) #16
  %199 = icmp eq i32 %198, 2
  br i1 %199, label %202, label %200

200:                                              ; preds = %197
  %201 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %167, i32 %198) #16
  br i1 %201, label %206, label %202

202:                                              ; preds = %200, %197
  %203 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %204 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %203, align 8
  %205 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %204, null
  br i1 %205, label %227, label %220

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %208 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %207, align 8
  %209 = trunc i32 %198 to i8
  %210 = shl i8 %209, 4
  %211 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %208, null
  br i1 %211, label %212, label %220

212:                                              ; preds = %206
  %213 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %214 = bitcast i8* %213 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %214, %"class.blink::LayoutBlockFlow"* %0) #16
  %215 = getelementptr inbounds i8, i8* %213, i64 -4
  %216 = bitcast i8* %215 to i16*
  %217 = load atomic i16, i16* %216 monotonic, align 2
  %218 = or i16 %217, 1
  store atomic i16 %218, i16* %216 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %156, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %214) #16
  %219 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %157, align 8
  br label %220

220:                                              ; preds = %212, %206, %202
  %221 = phi i8 [ %210, %212 ], [ %210, %206 ], [ 32, %202 ]
  %222 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %219, %212 ], [ %208, %206 ], [ %204, %202 ]
  %223 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %222, i64 0, i32 7
  %224 = load i8, i8* %223, align 8
  %225 = and i8 %224, 15
  %226 = or i8 %225, %221
  store i8 %226, i8* %223, align 8
  br label %227

227:                                              ; preds = %202, %220
  %228 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #16
  %229 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %229, align 8
  call void @_ZN5blink15LayoutBlockFlow26SetPropagatedStartPageNameERKN3WTF12AtomicStringE(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #16
  %230 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #16
  %231 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %231, align 8
  call void @_ZN5blink15LayoutBlockFlow24SetPropagatedEndPageNameERKN3WTF12AtomicStringE(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #16
  br label %232

232:                                              ; preds = %141, %227
  ret void
}

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow29ShouldTruncateOverflowingTextEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow23DeleteEllipsisLineBoxesEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26RebuildFloatsFromIntrudingEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.1798", align 8
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = alloca %"class.WTF::HashMap.3097", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::LayoutBox"*, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %15 = icmp eq %"class.blink::FloatingObjects"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = trunc i96 %19 to i32
  %21 = lshr i32 %20, 31
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %14, i64 0, i32 4
  store i8 %22, i8* %23, align 8
  br label %24

24:                                               ; preds = %1, %16
  %25 = bitcast %"class.WTF::HashSet.1798"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.WTF::HashSet.1798", %"class.WTF::HashSet.1798"* %2, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::HashSet.1798", %"class.WTF::HashSet.1798"* %2, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashSet.1798", %"class.WTF::HashSet.1798"* %2, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashSet.1798", %"class.WTF::HashSet.1798"* %2, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashSet.1798"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 20, i1 false) #16
  %31 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 17592186044416
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %36, label %63

36:                                               ; preds = %24
  %37 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %38 = icmp eq %"class.blink::FloatingObjects"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %37, i64 0, i32 0, i32 1
  %41 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %40, align 8
  %42 = icmp eq %"class.WTF::MallocedListHashSetNode"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::LayoutBox"** %3 to i8*
  %45 = bitcast %"class.blink::LayoutBox"** %3 to i64*
  %46 = getelementptr inbounds %"class.WTF::HashSet.1798", %"class.WTF::HashSet.1798"* %2, i64 0, i32 0
  br label %47

47:                                               ; preds = %43, %59
  %48 = phi %"class.WTF::MallocedListHashSetNode"* [ %41, %43 ], [ %61, %59 ]
  %49 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %50, i64 0, i32 3
  %52 = load i8, i8* %51, align 8
  %53 = and i8 %52, 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %56 = bitcast %"class.blink::FloatingObject"* %50 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %45, align 8
  %58 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.1799"* nonnull %46, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  br label %59

59:                                               ; preds = %47, %55
  %60 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %48, i64 0, i32 2
  %61 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %60, align 8
  %62 = icmp eq %"class.WTF::MallocedListHashSetNode"* %61, null
  br i1 %62, label %63, label %47

63:                                               ; preds = %59, %39, %36, %24
  %64 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %65 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %65, i64 182
  %67 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %68, label %111, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %69, %73
  %74 = phi %"class.blink::LayoutObject"* [ %76, %73 ], [ %12, %69 ]
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 7
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 6, i32 0, i32 0
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %77, align 8
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %73, label %80

80:                                               ; preds = %73, %69
  %81 = phi %"class.blink::Node"* [ %71, %69 ], [ %78, %73 ]
  %82 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %85, i64 0, i32 47, i32 0, i32 0
  %87 = load %"class.blink::Element"*, %"class.blink::Element"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %87, i64 0, i32 0, i32 0
  %89 = icmp eq %"class.blink::Node"* %88, %71
  br i1 %89, label %111, label %90

90:                                               ; preds = %80
  %91 = icmp eq %"class.blink::LayoutBlockFlow"* %0, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %90
  %93 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %94 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, i64 92
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, align 8
  %97 = call zeroext i1 %96(%"class.blink::LayoutObject"* %12, i32 55) #16
  br i1 %97, label %111, label %98

98:                                               ; preds = %90, %92
  %99 = load i96, i96* %32, align 4
  %100 = and i96 %99, 8388608
  %101 = icmp ne i96 %100, 0
  %102 = and i96 %99, 113336795588871485128704
  %103 = icmp eq i96 %102, 75557863725914323419136
  %104 = or i1 %103, %101
  br i1 %104, label %111, label %105

105:                                              ; preds = %98
  %106 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %107 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %107, i64 92
  %109 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, align 8
  %110 = call zeroext i1 %109(%"class.blink::LayoutObject"* %12, i32 46) #16
  br i1 %110, label %111, label %119

111:                                              ; preds = %105, %98, %92, %80, %63
  %112 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %113 = icmp eq %"class.blink::FloatingObjects"* %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  call void @_ZN5blink15FloatingObjects5ClearEv(%"class.blink::FloatingObjects"* nonnull %112) #16
  br label %115

115:                                              ; preds = %111, %114
  %116 = load i32, i32* %28, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %842, label %118

118:                                              ; preds = %115
  call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %842

119:                                              ; preds = %105
  %120 = bitcast %"class.WTF::HashMap.3097"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #16
  %121 = getelementptr inbounds %"class.WTF::HashMap.3097", %"class.WTF::HashMap.3097"* %4, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.WTF::HashMap.3097", %"class.WTF::HashMap.3097"* %4, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.WTF::HashMap.3097", %"class.WTF::HashMap.3097"* %4, i64 0, i32 0, i32 2
  %124 = getelementptr inbounds %"class.WTF::HashMap.3097", %"class.WTF::HashMap.3097"* %4, i64 0, i32 0, i32 3
  %125 = bitcast %"class.WTF::HashMap.3097"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 20, i1 false) #16
  %126 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %127 = icmp eq %"class.blink::FloatingObjects"* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %119
  %129 = load i96, i96* %32, align 4
  %130 = and i96 %129, 17592186044416
  %131 = icmp eq i96 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZN5blink15FloatingObjects21MoveAllToFloatInfoMapERN3WTF7HashMapIPNS_9LayoutBoxENSt3__110unique_ptrINS_14FloatingObjectENS5_14default_deleteIS7_EEEENS1_7PtrHashIS3_EENS1_10HashTraitsIS4_EENSD_ISA_EENS1_18PartitionAllocatorEEE(%"class.blink::FloatingObjects"* nonnull %126, %"class.WTF::HashMap.3097"* nonnull dereferenceable(24) %4) #16
  br label %134

133:                                              ; preds = %128
  call void @_ZN5blink15FloatingObjects5ClearEv(%"class.blink::FloatingObjects"* nonnull %126) #16
  br label %134

134:                                              ; preds = %119, %132, %133
  %135 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %136 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %135, align 8
  %137 = icmp eq %"class.blink::LayoutObject"* %136, null
  br i1 %137, label %817, label %138

138:                                              ; preds = %134
  %139 = bitcast %"class.blink::LayoutObject"* %136 to i1 (%"class.blink::LayoutObject"*)***
  %140 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %139, align 8
  %141 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %140, i64 24
  %142 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %141, align 8
  %143 = call zeroext i1 %142(%"class.blink::LayoutObject"* nonnull %136) #16
  %144 = bitcast %"class.blink::LayoutObject"* %136 to %"class.blink::LayoutBlockFlow"*
  br i1 %143, label %145, label %817

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = icmp eq %"class.blink::LayoutObject"* %147, null
  br i1 %148, label %222, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.blink::LayoutObject"* %147 to i1 (%"class.blink::LayoutObject"*)***
  %151 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, i64 23
  %153 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, align 8
  %154 = call zeroext i1 %153(%"class.blink::LayoutObject"* nonnull %147) #16
  %155 = bitcast %"class.blink::LayoutObject"* %147 to %"class.blink::LayoutBlock"*
  %156 = select i1 %154, %"class.blink::LayoutBlock"* %155, %"class.blink::LayoutBlock"* null
  %157 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %156, i64 0, i32 0
  %158 = bitcast %"class.blink::LayoutBlock"* %156 to i1 (%"class.blink::LayoutBox"*)***
  br label %159

159:                                              ; preds = %175, %149
  %160 = phi i8 [ 0, %149 ], [ %179, %175 ]
  %161 = phi %"class.blink::LayoutObject"* [ %147, %149 ], [ %181, %175 ]
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %161, i64 0, i32 4
  %163 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %162 to i96*
  %164 = load i96, i96* %163, align 4
  %165 = and i96 %164, 67108864
  %166 = icmp ne i96 %165, 0
  %167 = and i1 %154, %166
  br i1 %167, label %168, label %175

168:                                              ; preds = %159
  %169 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %158, align 8
  %170 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %169, i64 182
  %171 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %170, align 8
  %172 = call zeroext i1 %171(%"class.blink::LayoutBox"* %157) #16
  br i1 %172, label %173, label %183

173:                                              ; preds = %168
  %174 = load i96, i96* %163, align 4
  br label %175

175:                                              ; preds = %173, %159
  %176 = phi i96 [ %174, %173 ], [ %164, %159 ]
  %177 = and i96 %176, 8388608
  %178 = icmp eq i96 %177, 0
  %179 = select i1 %178, i8 %160, i8 1
  %180 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %161, i64 0, i32 8
  %181 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %180, align 8
  %182 = icmp eq %"class.blink::LayoutObject"* %181, null
  br i1 %182, label %183, label %159

183:                                              ; preds = %168, %175
  %184 = phi %"class.blink::LayoutBlock"* [ %156, %175 ], [ %155, %168 ]
  %185 = phi %"class.blink::LayoutObject"* [ null, %175 ], [ %161, %168 ]
  %186 = phi i8 [ %179, %175 ], [ %160, %168 ]
  %187 = phi i1 [ false, %175 ], [ true, %168 ]
  %188 = and i8 %186, 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %245

190:                                              ; preds = %183
  br i1 %187, label %191, label %222

191:                                              ; preds = %190
  %192 = bitcast %"class.blink::LayoutObject"* %185 to %"class.blink::LayoutBlockFlow"*
  %193 = bitcast %"class.blink::LayoutObject"* %185 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %194 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %194, i64 154
  %196 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %195, align 8
  %197 = call zeroext i1 %196(%"class.blink::LayoutBlockFlow"* nonnull %192) #16
  br i1 %197, label %222, label %198

198:                                              ; preds = %191
  %199 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %184, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %200 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %200, i64 0, i32 0, i32 9
  %202 = bitcast [20 x i8]* %201 to i160*
  %203 = load i160, i160* %202, align 8
  %204 = and i160 %203, 15211807202738752817960438464512
  %205 = icmp eq i160 %204, 0
  %206 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %184, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %207 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %184, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %208 = select i1 %205, i32* %206, i32* %207
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %211 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %211, i64 0, i32 0, i32 9
  %213 = bitcast [20 x i8]* %212 to i160*
  %214 = load i160, i160* %213, align 8
  %215 = and i160 %214, 15211807202738752817960438464512
  %216 = icmp eq i160 %215, 0
  %217 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %218 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %219 = select i1 %216, i32* %217, i32* %218
  %220 = load i32, i32* %219, align 4
  %221 = icmp sgt i32 %209, %220
  br i1 %221, label %222, label %262

222:                                              ; preds = %145, %198, %191, %190
  %223 = phi i1 [ true, %198 ], [ true, %191 ], [ false, %190 ], [ false, %145 ]
  %224 = phi %"class.blink::LayoutObject"* [ %185, %198 ], [ %185, %191 ], [ %185, %190 ], [ null, %145 ]
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %136, i64 3, i32 1
  %226 = bitcast %"class.blink::DisplayItemClient.base"* %225 to %"class.blink::FloatingObjects"**
  %227 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %226, align 8
  %228 = icmp eq %"class.blink::FloatingObjects"* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %222
  %230 = call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %227, i32 3) #16
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ 0, %222 ]
  %233 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %234 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 9
  %236 = bitcast [20 x i8]* %235 to i160*
  %237 = load i160, i160* %236, align 8
  %238 = and i160 %237, 15211807202738752817960438464512
  %239 = icmp eq i160 %238, 0
  %240 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %241 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %242 = select i1 %239, i32* %240, i32* %241
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %232, %243
  br i1 %244, label %245, label %261

245:                                              ; preds = %183, %231
  %246 = phi i1 [ %187, %183 ], [ %223, %231 ]
  %247 = phi %"class.blink::LayoutObject"* [ %185, %183 ], [ %224, %231 ]
  %248 = bitcast %"class.blink::LayoutObject"* %136 to %"class.blink::LayoutBlock"*
  %249 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* nonnull %248)
  %250 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %251 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %250, align 8
  %252 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %251, i64 0, i32 0, i32 9
  %253 = bitcast [20 x i8]* %252 to i160*
  %254 = load i160, i160* %253, align 8
  %255 = and i160 %254, 15211807202738752817960438464512
  %256 = icmp eq i160 %255, 0
  %257 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %258 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %259 = select i1 %256, i32* %257, i32* %258
  %260 = load i32, i32* %259, align 4
  call void @_ZN5blink15LayoutBlockFlow18AddIntrudingFloatsEPS0_NS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %144, i32 %249, i32 %260)
  br i1 %246, label %262, label %328

261:                                              ; preds = %231
  br i1 %223, label %262, label %328

262:                                              ; preds = %198, %245, %261
  %263 = phi %"class.blink::LayoutObject"* [ %224, %261 ], [ %247, %245 ], [ %185, %198 ]
  %264 = bitcast %"class.blink::LayoutObject"* %263 to %"class.blink::LayoutBlockFlow"*
  %265 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %266 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %266, i64 0, i32 0, i32 9
  %268 = bitcast [20 x i8]* %267 to i160*
  %269 = load i160, i160* %268, align 8
  %270 = and i160 %269, 15211807202738752817960438464512
  %271 = icmp eq i160 %270, 0
  %272 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %273 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %274 = select i1 %271, i32* %272, i32* %273
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %263, i64 0, i32 5, i32 0
  %277 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %276, align 8
  %278 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %277, i64 0, i32 0, i32 9
  %279 = bitcast [20 x i8]* %278 to i160*
  %280 = load i160, i160* %279, align 8
  %281 = and i160 %280, 15211807202738752817960438464512
  %282 = icmp eq i160 %281, 0
  %283 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %263, i64 1, i32 4
  %284 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %283 to i32*
  %285 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %263, i64 1, i32 1, i32 1
  %286 = bitcast i8* %285 to i32*
  %287 = select i1 %282, i32* %284, i32* %286
  %288 = load i32, i32* %287, align 4
  %289 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %263, i64 3, i32 1
  %290 = bitcast %"class.blink::DisplayItemClient.base"* %289 to %"class.blink::FloatingObjects"**
  %291 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %290, align 8
  %292 = icmp eq %"class.blink::FloatingObjects"* %291, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %262
  %294 = call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %291, i32 3) #16
  %295 = icmp slt i32 %294, 0
  %296 = select i1 %295, i32 -2147483648, i32 2147483647
  br label %297

297:                                              ; preds = %293, %262
  %298 = phi i32 [ 0, %262 ], [ %294, %293 ]
  %299 = phi i32 [ 2147483647, %262 ], [ %296, %293 ]
  %300 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %288, i32 %298) #16
  %301 = extractvalue { i32, i1 } %300, 1
  %302 = extractvalue { i32, i1 } %300, 0
  %303 = select i1 %301, i32 %299, i32 %302, !prof !2
  %304 = icmp slt i32 %275, %303
  br i1 %304, label %305, label %328

305:                                              ; preds = %297
  %306 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %265, align 8
  %307 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %306, i64 0, i32 0, i32 9
  %308 = bitcast [20 x i8]* %307 to i160*
  %309 = load i160, i160* %308, align 8
  %310 = and i160 %309, 15211807202738752817960438464512
  %311 = icmp eq i160 %310, 0
  %312 = select i1 %311, i32* %272, i32* %273
  %313 = load i32, i32* %312, align 4
  %314 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %276, align 8
  %315 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %314, i64 0, i32 0, i32 9
  %316 = bitcast [20 x i8]* %315 to i160*
  %317 = load i160, i160* %316, align 8
  %318 = and i160 %317, 15211807202738752817960438464512
  %319 = icmp eq i160 %318, 0
  %320 = select i1 %319, i32* %284, i32* %286
  %321 = load i32, i32* %320, align 4
  %322 = icmp sgt i32 %321, -1
  %323 = select i1 %322, i32 -2147483648, i32 2147483647
  %324 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %313, i32 %321) #16
  %325 = extractvalue { i32, i1 } %324, 1
  %326 = extractvalue { i32, i1 } %324, 0
  %327 = select i1 %325, i32 %323, i32 %326, !prof !2
  call void @_ZN5blink15LayoutBlockFlow18AddIntrudingFloatsEPS0_NS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %264, i32 0, i32 %327)
  br label %328

328:                                              ; preds = %245, %297, %305, %261
  %329 = load i96, i96* %32, align 4
  %330 = and i96 %329, 17592186044416
  %331 = icmp eq i96 %330, 0
  br i1 %331, label %691, label %332

332:                                              ; preds = %328
  %333 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %333)
  store i32 2147483647, i32* %5, align 4
  %334 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %334)
  store i32 -2147483648, i32* %6, align 4
  %335 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %336 = icmp eq %"class.blink::FloatingObjects"* %335, null
  br i1 %336, label %614, label %337

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %335, i64 0, i32 0, i32 1
  %339 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %338, align 8
  %340 = icmp eq %"class.WTF::MallocedListHashSetNode"* %339, null
  br i1 %340, label %614, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.WTF::HashMap.3097", %"class.WTF::HashMap.3097"* %4, i64 0, i32 0
  %343 = bitcast i32* %7 to i8*
  %344 = bitcast i32* %8 to i8*
  %345 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %346 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %347 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %348 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %349 = bitcast i32* %9 to i8*
  %350 = bitcast i32* %10 to i8*
  %351 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %352 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %353 = bitcast %"class.blink::LayoutBox"** %11 to i8*
  %354 = bitcast %"class.blink::LayoutBox"** %11 to i64*
  br label %355

355:                                              ; preds = %341, %608
  %356 = phi i32 [ 2147483647, %341 ], [ %609, %608 ]
  %357 = phi i32 [ -2147483648, %341 ], [ %610, %608 ]
  %358 = phi %"class.WTF::MallocedListHashSetNode"* [ %339, %341 ], [ %612, %608 ]
  %359 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %358, i64 0, i32 0, i32 0, i32 0, i32 0
  %360 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %359, align 8
  %361 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 0
  %362 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %361, align 8
  %363 = ptrtoint %"class.blink::LayoutBox"* %362 to i64
  %364 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %121, align 8
  %365 = icmp eq %"struct.WTF::KeyValuePair.3101"* %364, null
  br i1 %365, label %429, label %366

366:                                              ; preds = %355
  %367 = load i32, i32* %122, align 8
  %368 = add i32 %367, -1
  %369 = zext i32 %368 to i64
  %370 = shl i64 %363, 32
  %371 = xor i64 %370, -1
  %372 = add i64 %371, %363
  %373 = lshr i64 %372, 22
  %374 = xor i64 %373, %372
  %375 = shl i64 %374, 13
  %376 = xor i64 %375, -1
  %377 = add i64 %374, %376
  %378 = lshr i64 %377, 8
  %379 = xor i64 %378, %377
  %380 = mul i64 %379, 9
  %381 = lshr i64 %380, 15
  %382 = xor i64 %381, %380
  %383 = shl i64 %382, 27
  %384 = xor i64 %383, -1
  %385 = add i64 %382, %384
  %386 = lshr i64 %385, 31
  %387 = xor i64 %386, %385
  %388 = trunc i64 %387 to i32
  %389 = and i32 %368, %388
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %364, i64 %390
  %392 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %391, i64 0, i32 0
  %393 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %392, align 8
  %394 = icmp eq %"class.blink::LayoutBox"* %393, %362
  br i1 %394, label %423, label %395

395:                                              ; preds = %366
  %396 = xor i32 %388, -1
  %397 = lshr i32 %388, 23
  %398 = add i32 %397, %396
  %399 = shl i32 %398, 12
  %400 = xor i32 %399, %398
  %401 = lshr i32 %400, 7
  %402 = xor i32 %401, %400
  %403 = shl i32 %402, 2
  %404 = xor i32 %403, %402
  %405 = lshr i32 %404, 20
  %406 = xor i32 %405, %404
  %407 = or i32 %406, 1
  %408 = zext i32 %407 to i64
  br label %409

409:                                              ; preds = %414, %395
  %410 = phi %"class.blink::LayoutBox"* [ %393, %395 ], [ %421, %414 ]
  %411 = phi i64 [ %390, %395 ], [ %418, %414 ]
  %412 = phi i64 [ 0, %395 ], [ %416, %414 ]
  %413 = icmp eq %"class.blink::LayoutBox"* %410, null
  br i1 %413, label %429, label %414

414:                                              ; preds = %409
  %415 = icmp eq i64 %412, 0
  %416 = select i1 %415, i64 %408, i64 %412
  %417 = add i64 %416, %411
  %418 = and i64 %417, %369
  %419 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %364, i64 %418
  %420 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %419, i64 0, i32 0
  %421 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %420, align 8
  %422 = icmp eq %"class.blink::LayoutBox"* %421, %362
  br i1 %422, label %423, label %409

423:                                              ; preds = %414, %366
  %424 = phi %"struct.WTF::KeyValuePair.3101"* [ %391, %366 ], [ %419, %414 ]
  %425 = icmp eq %"struct.WTF::KeyValuePair.3101"* %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %423
  %427 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %424, i64 0, i32 1, i32 0, i32 0, i32 0
  %428 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %427, align 8
  br label %429

429:                                              ; preds = %409, %355, %423, %426
  %430 = phi %"class.blink::FloatingObject"* [ %428, %426 ], [ null, %423 ], [ null, %355 ], [ null, %409 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %343)
  store i32 -1431655766, i32* %7, align 4
  %431 = load i96, i96* %32, align 4
  %432 = trunc i96 %431 to i32
  %433 = icmp slt i32 %432, 0
  br i1 %433, label %434, label %442

434:                                              ; preds = %429
  %435 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 0, i32 1, i32 0
  %436 = load i32, i32* %435, align 4
  %437 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 1, i32 1, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = icmp slt i32 %438, 0
  %440 = select i1 %439, i32 -2147483648, i32 2147483647
  %441 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %436, i32 %438) #16
  br label %450

442:                                              ; preds = %429
  %443 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 0, i32 0, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 1, i32 0, i32 0
  %446 = load i32, i32* %445, align 4
  %447 = icmp slt i32 %446, 0
  %448 = select i1 %447, i32 -2147483648, i32 2147483647
  %449 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %444, i32 %446) #16
  br label %450

450:                                              ; preds = %434, %442
  %451 = phi { i32, i1 } [ %441, %434 ], [ %449, %442 ]
  %452 = phi i32 [ %440, %434 ], [ %448, %442 ]
  %453 = extractvalue { i32, i1 } %451, 1
  %454 = extractvalue { i32, i1 } %451, 0
  %455 = select i1 %453, i32 %452, i32 %454
  store i32 %455, i32* %7, align 4
  %456 = icmp eq %"class.blink::FloatingObject"* %430, null
  br i1 %456, label %605, label %457

457:                                              ; preds = %450
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344)
  store i32 -1431655766, i32* %8, align 4
  br i1 %433, label %458, label %466

458:                                              ; preds = %457
  %459 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 0, i32 1, i32 0
  %460 = load i32, i32* %459, align 4
  %461 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 1, i32 1, i32 0
  %462 = load i32, i32* %461, align 4
  %463 = icmp slt i32 %462, 0
  %464 = select i1 %463, i32 -2147483648, i32 2147483647
  %465 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %460, i32 %462) #16
  br label %474

466:                                              ; preds = %457
  %467 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 0, i32 0, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 1, i32 0, i32 0
  %470 = load i32, i32* %469, align 4
  %471 = icmp slt i32 %470, 0
  %472 = select i1 %471, i32 -2147483648, i32 2147483647
  %473 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %468, i32 %470) #16
  br label %474

474:                                              ; preds = %458, %466
  %475 = phi { i32, i1 } [ %465, %458 ], [ %473, %466 ]
  %476 = phi i32 [ %464, %458 ], [ %472, %466 ]
  %477 = extractvalue { i32, i1 } %475, 1
  %478 = extractvalue { i32, i1 } %475, 0
  %479 = select i1 %477, i32 %476, i32 %478
  store i32 %479, i32* %8, align 4
  %480 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 1, i32 0, i32 0
  %481 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 1, i32 1, i32 0
  %482 = select i1 %433, i32* %480, i32* %481
  %483 = load i32, i32* %482, align 4
  %484 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 1, i32 0, i32 0
  %485 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 1, i32 1, i32 0
  %486 = select i1 %433, i32* %484, i32* %485
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %483, %487
  br i1 %488, label %489, label %499

489:                                              ; preds = %474
  %490 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 0, i32 0, i32 0
  %491 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %360, i64 0, i32 2, i32 0, i32 1, i32 0
  %492 = select i1 %433, i32* %490, i32* %491
  %493 = load i32, i32* %492, align 4
  %494 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 0, i32 0, i32 0
  %495 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 2, i32 0, i32 1, i32 0
  %496 = select i1 %433, i32* %494, i32* %495
  %497 = load i32, i32* %496, align 4
  %498 = icmp eq i32 %493, %497
  br i1 %498, label %504, label %499

499:                                              ; preds = %489, %474
  store i32 0, i32* %5, align 4
  %500 = icmp slt i32 %455, %479
  %501 = select i1 %500, i32 %479, i32 %455
  %502 = icmp slt i32 %357, %501
  %503 = select i1 %502, i32 %501, i32 %357
  store i32 %503, i32* %6, align 4
  br label %551

504:                                              ; preds = %489
  %505 = icmp eq i32 %455, %479
  br i1 %505, label %523, label %506

506:                                              ; preds = %504
  %507 = icmp slt i32 %479, %455
  %508 = select i1 %507, %"class.blink::LayoutUnit"* %345, %"class.blink::LayoutUnit"* %346
  %509 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %508, i64 0, i32 0
  %510 = load i32, i32* %509, align 4
  %511 = icmp slt i32 %510, %356
  %512 = select i1 %511, %"class.blink::LayoutUnit"* %508, %"class.blink::LayoutUnit"* %347
  %513 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %512, i64 0, i32 0
  %514 = load i32, i32* %513, align 4
  store i32 %514, i32* %5, align 4
  %515 = icmp slt i32 %455, %479
  %516 = select i1 %515, %"class.blink::LayoutUnit"* %345, %"class.blink::LayoutUnit"* %346
  %517 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %516, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  %519 = icmp slt i32 %357, %518
  %520 = select i1 %519, %"class.blink::LayoutUnit"* %516, %"class.blink::LayoutUnit"* %348
  %521 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %520, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %6, align 4
  br label %523

523:                                              ; preds = %504, %506
  %524 = phi i32 [ %356, %504 ], [ %514, %506 ]
  %525 = phi i32 [ %357, %504 ], [ %522, %506 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %349)
  %526 = select i1 %433, i32* %491, i32* %490
  %527 = load i32, i32* %526, align 4
  store i32 %527, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %350)
  %528 = select i1 %433, i32* %495, i32* %494
  %529 = load i32, i32* %528, align 4
  store i32 %529, i32* %10, align 4
  %530 = icmp eq i32 %527, %529
  br i1 %530, label %548, label %531

531:                                              ; preds = %523
  %532 = icmp slt i32 %529, %527
  %533 = select i1 %532, %"class.blink::LayoutUnit"* %351, %"class.blink::LayoutUnit"* %352
  %534 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %533, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  %536 = icmp slt i32 %535, %524
  %537 = select i1 %536, %"class.blink::LayoutUnit"* %533, %"class.blink::LayoutUnit"* %347
  %538 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %537, i64 0, i32 0
  %539 = load i32, i32* %538, align 4
  store i32 %539, i32* %5, align 4
  %540 = icmp slt i32 %527, %529
  %541 = select i1 %540, %"class.blink::LayoutUnit"* %351, %"class.blink::LayoutUnit"* %352
  %542 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %541, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  %544 = icmp slt i32 %525, %543
  %545 = select i1 %544, %"class.blink::LayoutUnit"* %541, %"class.blink::LayoutUnit"* %348
  %546 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %545, i64 0, i32 0
  %547 = load i32, i32* %546, align 4
  store i32 %547, i32* %6, align 4
  br label %548

548:                                              ; preds = %523, %531
  %549 = phi i32 [ %524, %523 ], [ %539, %531 ]
  %550 = phi i32 [ %525, %523 ], [ %547, %531 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %350)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %349)
  br label %551

551:                                              ; preds = %548, %499
  %552 = phi i32 [ %549, %548 ], [ 0, %499 ]
  %553 = phi i32 [ %550, %548 ], [ %503, %499 ]
  %554 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %430, i64 0, i32 1
  %555 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %554, align 8
  %556 = icmp ne %"class.blink::RootInlineBox"* %555, null
  %557 = and i96 %431, 3
  %558 = icmp eq i96 %557, 0
  %559 = and i1 %556, %558
  br i1 %559, label %560, label %568

560:                                              ; preds = %551
  %561 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %555, i64 0, i32 0, i32 0
  %562 = bitcast %"class.blink::RootInlineBox"* %555 to void (%"class.blink::InlineBox"*)***
  %563 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %562, align 8
  %564 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %563, i64 28
  %565 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %564, align 8
  call void %565(%"class.blink::InlineBox"* %561) #16
  %566 = bitcast %"class.blink::FloatingObject"* %360 to i64*
  %567 = load i64, i64* %566, align 8
  br label %568

568:                                              ; preds = %551, %560
  %569 = phi i64 [ %363, %551 ], [ %567, %560 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #16
  store i64 %569, i64* %354, align 8
  %570 = call { %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"* } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3098"* nonnull %342, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %11) #16
  %571 = extractvalue { %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"* } %570, 0
  %572 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %121, align 8
  %573 = load i32, i32* %122, align 8
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %572, i64 %574
  %576 = icmp eq %"struct.WTF::KeyValuePair.3101"* %575, %571
  br i1 %576, label %604, label %577

577:                                              ; preds = %568
  %578 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %571, i64 0, i32 1, i32 0, i32 0, i32 0
  %579 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %578, align 8
  store %"class.blink::FloatingObject"* null, %"class.blink::FloatingObject"** %578, align 8
  %580 = icmp eq %"class.blink::FloatingObject"* %579, null
  br i1 %580, label %583, label %581

581:                                              ; preds = %577
  %582 = bitcast %"class.blink::FloatingObject"* %579 to i8*
  call void @free(i8* %582) #16
  br label %583

583:                                              ; preds = %581, %577
  %584 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %571, i64 0, i32 0
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %584, align 8
  %585 = load i32, i32* %124, align 8
  %586 = add i32 %585, 1
  %587 = and i32 %586, 2147483647
  %588 = and i32 %585, -2147483648
  %589 = or i32 %587, %588
  store i32 %589, i32* %124, align 8
  %590 = load i32, i32* %123, align 4
  %591 = add i32 %590, -1
  store i32 %591, i32* %123, align 4
  %592 = mul i32 %591, 6
  %593 = load i32, i32* %122, align 8
  %594 = icmp ult i32 %592, %593
  %595 = icmp ugt i32 %593, 8
  %596 = and i1 %594, %595
  br i1 %596, label %597, label %604

597:                                              ; preds = %583
  %598 = lshr i32 %593, 1
  %599 = zext i32 %598 to i64
  %600 = shl nuw nsw i64 %599, 4
  %601 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %600, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENSt3__110unique_ptrINS2_14FloatingObjectENS5_14default_deleteIS7_EEEEEEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %601, i8 0, i64 %600, i1 false) #16
  %602 = bitcast i8* %601 to %"struct.WTF::KeyValuePair.3101"*
  %603 = call %"struct.WTF::KeyValuePair.3101"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.3098"* nonnull %342, %"struct.WTF::KeyValuePair.3101"* %602, i32 %598, %"struct.WTF::KeyValuePair.3101"* null) #16
  br label %604

604:                                              ; preds = %568, %583, %597
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344)
  br label %608

605:                                              ; preds = %450
  store i32 0, i32* %5, align 4
  %606 = icmp slt i32 %357, %455
  %607 = select i1 %606, i32 %455, i32 %357
  store i32 %607, i32* %6, align 4
  br label %608

608:                                              ; preds = %605, %604
  %609 = phi i32 [ 0, %605 ], [ %552, %604 ]
  %610 = phi i32 [ %607, %605 ], [ %553, %604 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %343)
  %611 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %358, i64 0, i32 2
  %612 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %611, align 8
  %613 = icmp eq %"class.WTF::MallocedListHashSetNode"* %612, null
  br i1 %613, label %614, label %355

614:                                              ; preds = %608, %337, %332
  %615 = phi i32 [ -2147483648, %337 ], [ -2147483648, %332 ], [ %610, %608 ]
  %616 = phi i32 [ 2147483647, %337 ], [ 2147483647, %332 ], [ %609, %608 ]
  %617 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %121, align 8
  %618 = load i32, i32* %122, align 8
  %619 = zext i32 %618 to i64
  %620 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %617, i64 %619
  %621 = load i32, i32* %123, align 4
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %636, label %623

623:                                              ; preds = %614
  %624 = icmp eq i32 %618, 0
  br i1 %624, label %632, label %625

625:                                              ; preds = %623, %629
  %626 = phi %"struct.WTF::KeyValuePair.3101"* [ %630, %629 ], [ %617, %623 ]
  %627 = bitcast %"struct.WTF::KeyValuePair.3101"* %626 to i64*
  %628 = load i64, i64* %627, align 8
  switch i64 %628, label %632 [
    i64 -1, label %629
    i64 0, label %629
  ]

629:                                              ; preds = %625, %625
  %630 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %626, i64 1
  %631 = icmp eq %"struct.WTF::KeyValuePair.3101"* %630, %620
  br i1 %631, label %636, label %625

632:                                              ; preds = %625, %623
  %633 = phi %"struct.WTF::KeyValuePair.3101"* [ %617, %623 ], [ %626, %625 ]
  %634 = icmp eq %"struct.WTF::KeyValuePair.3101"* %633, %620
  br i1 %634, label %636, label %639

635:                                              ; preds = %677, %689, %686
  store i32 %679, i32* %5, align 4
  store i32 %678, i32* %6, align 4
  br label %636

636:                                              ; preds = %629, %614, %635, %632
  %637 = phi i32 [ %678, %635 ], [ %615, %632 ], [ %615, %614 ], [ %615, %629 ]
  %638 = phi i32 [ %679, %635 ], [ %616, %632 ], [ %616, %614 ], [ %616, %629 ]
  call void @_ZN5blink15LayoutBlockFlow26MarkLinesDirtyInBlockRangeENS_10LayoutUnitES1_PNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* %0, i32 %638, i32 %637, %"class.blink::RootInlineBox"* null) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %334)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %333)
  br label %817

639:                                              ; preds = %632, %689
  %640 = phi i32 [ %678, %689 ], [ %615, %632 ]
  %641 = phi i32 [ %679, %689 ], [ %616, %632 ]
  %642 = phi %"struct.WTF::KeyValuePair.3101"* [ %683, %689 ], [ %633, %632 ]
  %643 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %642, i64 0, i32 1, i32 0, i32 0, i32 0
  %644 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %643, align 8
  %645 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %644, i64 0, i32 3
  %646 = load i8, i8* %645, align 8
  %647 = and i8 %646, 8
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %649, label %677

649:                                              ; preds = %639
  %650 = load i96, i96* %32, align 4
  %651 = trunc i96 %650 to i32
  %652 = icmp slt i32 %651, 0
  br i1 %652, label %653, label %661

653:                                              ; preds = %649
  %654 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %644, i64 0, i32 2, i32 0, i32 1, i32 0
  %655 = load i32, i32* %654, align 4
  %656 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %644, i64 0, i32 2, i32 1, i32 1, i32 0
  %657 = load i32, i32* %656, align 4
  %658 = icmp slt i32 %657, 0
  %659 = select i1 %658, i32 -2147483648, i32 2147483647
  %660 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %655, i32 %657) #16
  br label %669

661:                                              ; preds = %649
  %662 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %644, i64 0, i32 2, i32 0, i32 0, i32 0
  %663 = load i32, i32* %662, align 4
  %664 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %644, i64 0, i32 2, i32 1, i32 0, i32 0
  %665 = load i32, i32* %664, align 4
  %666 = icmp slt i32 %665, 0
  %667 = select i1 %666, i32 -2147483648, i32 2147483647
  %668 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %663, i32 %665) #16
  br label %669

669:                                              ; preds = %653, %661
  %670 = phi { i32, i1 } [ %660, %653 ], [ %668, %661 ]
  %671 = phi i32 [ %659, %653 ], [ %667, %661 ]
  %672 = extractvalue { i32, i1 } %670, 1
  %673 = extractvalue { i32, i1 } %670, 0
  %674 = select i1 %672, i32 %671, i32 %673
  %675 = icmp slt i32 %640, %674
  %676 = select i1 %675, i32 %674, i32 %640
  br label %677

677:                                              ; preds = %639, %669
  %678 = phi i32 [ %640, %639 ], [ %676, %669 ]
  %679 = phi i32 [ %641, %639 ], [ 0, %669 ]
  %680 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %642, i64 1
  %681 = icmp eq %"struct.WTF::KeyValuePair.3101"* %680, %620
  br i1 %681, label %635, label %682

682:                                              ; preds = %677, %686
  %683 = phi %"struct.WTF::KeyValuePair.3101"* [ %687, %686 ], [ %680, %677 ]
  %684 = bitcast %"struct.WTF::KeyValuePair.3101"* %683 to i64*
  %685 = load i64, i64* %684, align 8
  switch i64 %685, label %689 [
    i64 -1, label %686
    i64 0, label %686
  ]

686:                                              ; preds = %682, %682
  %687 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %683, i64 1
  %688 = icmp eq %"struct.WTF::KeyValuePair.3101"* %687, %620
  br i1 %688, label %635, label %682

689:                                              ; preds = %682
  %690 = icmp eq %"struct.WTF::KeyValuePair.3101"* %683, %620
  br i1 %690, label %635, label %639

691:                                              ; preds = %328
  %692 = load i32, i32* %28, align 4
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %817, label %694

694:                                              ; preds = %691
  %695 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %696 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %695, i64 0, i32 0, i32 0, i32 2
  %697 = load i32, i32* %696, align 4
  %698 = icmp ult i32 %697, %692
  br i1 %698, label %699, label %700

699:                                              ; preds = %694
  call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %817

700:                                              ; preds = %694
  %701 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %695, i64 0, i32 0, i32 1
  %702 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %701, align 8
  %703 = icmp eq %"class.WTF::MallocedListHashSetNode"* %702, null
  br i1 %703, label %816, label %704

704:                                              ; preds = %700
  %705 = getelementptr inbounds %"class.WTF::HashSet.1798", %"class.WTF::HashSet.1798"* %2, i64 0, i32 0
  br label %706

706:                                              ; preds = %704, %810
  %707 = phi i32 [ %692, %704 ], [ %811, %810 ]
  %708 = phi i1 [ false, %704 ], [ %815, %810 ]
  %709 = phi %"class.WTF::MallocedListHashSetNode"* [ %702, %704 ], [ %813, %810 ]
  br i1 %708, label %817, label %711

710:                                              ; preds = %810
  br i1 %815, label %817, label %816

711:                                              ; preds = %706
  %712 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %709, i64 0, i32 0, i32 0, i32 0, i32 0
  %713 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %712, align 8
  %714 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %713, i64 0, i32 0
  %715 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %714, align 8
  %716 = ptrtoint %"class.blink::LayoutBox"* %715 to i64
  %717 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %26, align 8
  %718 = icmp eq %"class.blink::LayoutBox"** %717, null
  %719 = load i32, i32* %27, align 8
  br i1 %718, label %781, label %720

720:                                              ; preds = %711
  %721 = add i32 %719, -1
  %722 = zext i32 %721 to i64
  %723 = shl i64 %716, 32
  %724 = xor i64 %723, -1
  %725 = add i64 %724, %716
  %726 = lshr i64 %725, 22
  %727 = xor i64 %726, %725
  %728 = shl i64 %727, 13
  %729 = xor i64 %728, -1
  %730 = add i64 %727, %729
  %731 = lshr i64 %730, 8
  %732 = xor i64 %731, %730
  %733 = mul i64 %732, 9
  %734 = lshr i64 %733, 15
  %735 = xor i64 %734, %733
  %736 = shl i64 %735, 27
  %737 = xor i64 %736, -1
  %738 = add i64 %735, %737
  %739 = lshr i64 %738, 31
  %740 = xor i64 %739, %738
  %741 = trunc i64 %740 to i32
  %742 = and i32 %721, %741
  %743 = zext i32 %742 to i64
  %744 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %717, i64 %743
  %745 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %744, align 8
  %746 = icmp eq %"class.blink::LayoutBox"* %745, %715
  br i1 %746, label %776, label %747

747:                                              ; preds = %720
  %748 = xor i32 %741, -1
  %749 = lshr i32 %741, 23
  %750 = add i32 %749, %748
  %751 = shl i32 %750, 12
  %752 = xor i32 %751, %750
  %753 = lshr i32 %752, 7
  %754 = xor i32 %753, %752
  %755 = shl i32 %754, 2
  %756 = xor i32 %755, %754
  %757 = lshr i32 %756, 20
  %758 = xor i32 %757, %756
  %759 = or i32 %758, 1
  %760 = zext i32 %759 to i64
  br label %761

761:                                              ; preds = %766, %747
  %762 = phi %"class.blink::LayoutBox"* [ %745, %747 ], [ %772, %766 ]
  %763 = phi i64 [ %743, %747 ], [ %770, %766 ]
  %764 = phi i64 [ 0, %747 ], [ %768, %766 ]
  %765 = icmp eq %"class.blink::LayoutBox"* %762, null
  br i1 %765, label %781, label %766

766:                                              ; preds = %761
  %767 = icmp eq i64 %764, 0
  %768 = select i1 %767, i64 %760, i64 %764
  %769 = add i64 %768, %763
  %770 = and i64 %769, %722
  %771 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %717, i64 %770
  %772 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %771, align 8
  %773 = icmp eq %"class.blink::LayoutBox"* %772, %715
  br i1 %773, label %774, label %761

774:                                              ; preds = %766
  %775 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %717, i64 %770
  br label %776

776:                                              ; preds = %774, %720
  %777 = phi %"class.blink::LayoutBox"** [ %744, %720 ], [ %775, %774 ]
  %778 = icmp eq %"class.blink::LayoutBox"** %777, null
  br i1 %778, label %781, label %779

779:                                              ; preds = %776
  %780 = zext i32 %719 to i64
  br label %784

781:                                              ; preds = %761, %776, %711
  %782 = zext i32 %719 to i64
  %783 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %717, i64 %782
  br label %784

784:                                              ; preds = %779, %781
  %785 = phi i64 [ %780, %779 ], [ %782, %781 ]
  %786 = phi %"class.blink::LayoutBox"** [ %777, %779 ], [ %783, %781 ]
  %787 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %717, i64 %785
  %788 = icmp eq %"class.blink::LayoutBox"** %787, %786
  br i1 %788, label %810, label %789

789:                                              ; preds = %784
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %786, align 8
  %790 = load i32, i32* %29, align 8
  %791 = add i32 %790, 1
  %792 = and i32 %791, 2147483647
  %793 = and i32 %790, -2147483648
  %794 = or i32 %792, %793
  store i32 %794, i32* %29, align 8
  %795 = load i32, i32* %28, align 4
  %796 = add i32 %795, -1
  store i32 %796, i32* %28, align 4
  %797 = mul i32 %796, 6
  %798 = load i32, i32* %27, align 8
  %799 = icmp ult i32 %797, %798
  %800 = icmp ugt i32 %798, 8
  %801 = and i1 %799, %800
  br i1 %801, label %802, label %810

802:                                              ; preds = %789
  %803 = lshr i32 %798, 1
  %804 = zext i32 %803 to i64
  %805 = shl nuw nsw i64 %804, 3
  %806 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %805, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %806, i8 0, i64 %805, i1 false) #16
  %807 = bitcast i8* %806 to %"class.blink::LayoutBox"**
  %808 = call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.1799"* nonnull %705, %"class.blink::LayoutBox"** %807, i32 %803, %"class.blink::LayoutBox"** null) #16
  %809 = load i32, i32* %28, align 4
  br label %810

810:                                              ; preds = %784, %789, %802
  %811 = phi i32 [ %707, %784 ], [ %796, %789 ], [ %809, %802 ]
  %812 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %709, i64 0, i32 2
  %813 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %812, align 8
  %814 = icmp eq %"class.WTF::MallocedListHashSetNode"* %813, null
  %815 = icmp eq i32 %811, 0
  br i1 %814, label %710, label %706

816:                                              ; preds = %700, %710
  call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %817

817:                                              ; preds = %706, %138, %134, %710, %816, %636, %699, %691
  %818 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %121, align 8
  %819 = icmp eq %"struct.WTF::KeyValuePair.3101"* %818, null
  br i1 %819, label %841, label %820, !prof !44

820:                                              ; preds = %817
  %821 = load i32, i32* %122, align 8
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %839, label %823

823:                                              ; preds = %820
  %824 = zext i32 %821 to i64
  br label %825

825:                                              ; preds = %836, %823
  %826 = phi i64 [ 0, %823 ], [ %837, %836 ]
  %827 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %818, i64 %826, i32 0
  %828 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %827, align 8
  %829 = icmp eq %"class.blink::LayoutBox"* %828, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %829, label %836, label %830

830:                                              ; preds = %825
  %831 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %818, i64 %826, i32 1, i32 0, i32 0, i32 0
  %832 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %831, align 8
  store %"class.blink::FloatingObject"* null, %"class.blink::FloatingObject"** %831, align 8
  %833 = icmp eq %"class.blink::FloatingObject"* %832, null
  br i1 %833, label %836, label %834

834:                                              ; preds = %830
  %835 = bitcast %"class.blink::FloatingObject"* %832 to i8*
  call void @free(i8* %835) #16
  br label %836

836:                                              ; preds = %834, %830, %825
  %837 = add nuw nsw i64 %826, 1
  %838 = icmp eq i64 %837, %824
  br i1 %838, label %839, label %825

839:                                              ; preds = %836, %820
  %840 = bitcast %"struct.WTF::KeyValuePair.3101"* %818 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %840) #16
  store %"struct.WTF::KeyValuePair.3101"* null, %"struct.WTF::KeyValuePair.3101"** %121, align 8
  br label %841

841:                                              ; preds = %817, %839
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #16
  br label %842

842:                                              ; preds = %115, %118, %841
  %843 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %26, align 8
  %844 = icmp eq %"class.blink::LayoutBox"** %843, null
  br i1 %844, label %847, label %845, !prof !44

845:                                              ; preds = %842
  %846 = bitcast %"class.blink::LayoutBox"** %843 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %846) #16
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %26, align 8
  br label %847

847:                                              ; preds = %842, %845
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow19InitMaxMarginValuesEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %174, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8, !noalias !45
  %12 = lshr i160 %11, 102
  %13 = trunc i160 %12 to i8
  %14 = and i8 %13, 3
  %15 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %14, label %16 [
    i8 0, label %25
    i8 1, label %17
  ]

16:                                               ; preds = %5
  br label %17

17:                                               ; preds = %16, %5
  %18 = phi { i64, i64 } [ { i64 1033, i64 0 }, %16 ], [ { i64 1041, i64 0 }, %5 ]
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  %22 = bitcast i8* %21 to %"class.blink::LayoutBoxModelObject"*
  %23 = and i64 %19, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %17, %5
  %26 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %17 ], [ %6, %5 ]
  %27 = phi i8* [ %21, %17 ], [ %15, %5 ]
  %28 = phi i64 [ %19, %17 ], [ 1017, %5 ]
  %29 = bitcast i8* %27 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = add i64 %28, -1
  %32 = getelementptr i8, i8* %30, i64 %31
  %33 = bitcast i8* %32 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %33, align 8
  br label %37

35:                                               ; preds = %17
  %36 = inttoptr i64 %19 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %37

37:                                               ; preds = %25, %35
  %38 = phi %"class.blink::LayoutBoxModelObject"* [ %26, %25 ], [ %22, %35 ]
  %39 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %34, %25 ], [ %36, %35 ]
  %40 = tail call i32 %39(%"class.blink::LayoutBoxModelObject"* %38) #16
  %41 = icmp sgt i32 %40, 0
  %42 = select i1 %41, i32 %40, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8, !noalias !48
  %47 = lshr i160 %46, 102
  %48 = trunc i160 %47 to i8
  %49 = and i8 %48, 3
  switch i8 %49, label %50 [
    i8 0, label %59
    i8 1, label %51
  ]

50:                                               ; preds = %37
  br label %51

51:                                               ; preds = %50, %37
  %52 = phi { i64, i64 } [ { i64 1033, i64 0 }, %50 ], [ { i64 1041, i64 0 }, %37 ]
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = extractvalue { i64, i64 } %52, 1
  %55 = getelementptr inbounds i8, i8* %15, i64 %54
  %56 = bitcast i8* %55 to %"class.blink::LayoutBoxModelObject"*
  %57 = and i64 %53, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %51, %37
  %60 = phi %"class.blink::LayoutBoxModelObject"* [ %56, %51 ], [ %6, %37 ]
  %61 = phi i8* [ %55, %51 ], [ %15, %37 ]
  %62 = phi i64 [ %53, %51 ], [ 1017, %37 ]
  %63 = bitcast i8* %61 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = add i64 %62, -1
  %66 = getelementptr i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %68 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, align 8
  br label %71

69:                                               ; preds = %51
  %70 = inttoptr i64 %53 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %71

71:                                               ; preds = %69, %59
  %72 = phi %"class.blink::LayoutBoxModelObject"* [ %60, %59 ], [ %56, %69 ]
  %73 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %68, %59 ], [ %70, %69 ]
  %74 = tail call i32 %73(%"class.blink::LayoutBoxModelObject"* %72) #16
  %75 = tail call i1 @llvm.is.constant.i32(i32 %74) #16
  br i1 %75, label %76, label %80

76:                                               ; preds = %71
  %77 = sub i32 0, %74
  %78 = icmp eq i32 %77, -2147483648
  %79 = select i1 %78, i32 2147483647, i32 %77
  br label %85

80:                                               ; preds = %71
  %81 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %74) #16
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 2147483647, i32 %83
  br label %85

85:                                               ; preds = %76, %80
  %86 = phi i32 [ %79, %76 ], [ %84, %80 ]
  %87 = icmp sgt i32 %86, 0
  %88 = select i1 %87, i32 %86, i32 0
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8, !noalias !51
  %93 = lshr i160 %92, 102
  %94 = trunc i160 %93 to i8
  %95 = and i8 %94, 3
  switch i8 %95, label %96 [
    i8 0, label %105
    i8 1, label %97
  ]

96:                                               ; preds = %85
  br label %97

97:                                               ; preds = %96, %85
  %98 = phi { i64, i64 } [ { i64 1041, i64 0 }, %96 ], [ { i64 1033, i64 0 }, %85 ]
  %99 = extractvalue { i64, i64 } %98, 0
  %100 = extractvalue { i64, i64 } %98, 1
  %101 = getelementptr inbounds i8, i8* %15, i64 %100
  %102 = bitcast i8* %101 to %"class.blink::LayoutBoxModelObject"*
  %103 = and i64 %99, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %97, %85
  %106 = phi %"class.blink::LayoutBoxModelObject"* [ %102, %97 ], [ %6, %85 ]
  %107 = phi i8* [ %101, %97 ], [ %15, %85 ]
  %108 = phi i64 [ %99, %97 ], [ 1025, %85 ]
  %109 = bitcast i8* %107 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = add i64 %108, -1
  %112 = getelementptr i8, i8* %110, i64 %111
  %113 = bitcast i8* %112 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %113, align 8
  br label %117

115:                                              ; preds = %97
  %116 = inttoptr i64 %99 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %117

117:                                              ; preds = %105, %115
  %118 = phi %"class.blink::LayoutBoxModelObject"* [ %106, %105 ], [ %102, %115 ]
  %119 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %114, %105 ], [ %116, %115 ]
  %120 = tail call i32 %119(%"class.blink::LayoutBoxModelObject"* %118) #16
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 9
  %125 = bitcast [20 x i8]* %124 to i160*
  %126 = load i160, i160* %125, align 8, !noalias !54
  %127 = lshr i160 %126, 102
  %128 = trunc i160 %127 to i8
  %129 = and i8 %128, 3
  switch i8 %129, label %130 [
    i8 0, label %139
    i8 1, label %131
  ]

130:                                              ; preds = %117
  br label %131

131:                                              ; preds = %130, %117
  %132 = phi { i64, i64 } [ { i64 1041, i64 0 }, %130 ], [ { i64 1033, i64 0 }, %117 ]
  %133 = extractvalue { i64, i64 } %132, 0
  %134 = extractvalue { i64, i64 } %132, 1
  %135 = getelementptr inbounds i8, i8* %15, i64 %134
  %136 = bitcast i8* %135 to %"class.blink::LayoutBoxModelObject"*
  %137 = and i64 %133, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %131, %117
  %140 = phi %"class.blink::LayoutBoxModelObject"* [ %136, %131 ], [ %6, %117 ]
  %141 = phi i8* [ %135, %131 ], [ %15, %117 ]
  %142 = phi i64 [ %133, %131 ], [ 1025, %117 ]
  %143 = bitcast i8* %141 to i8**
  %144 = load i8*, i8** %143, align 8
  %145 = add i64 %142, -1
  %146 = getelementptr i8, i8* %144, i64 %145
  %147 = bitcast i8* %146 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %148 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %147, align 8
  br label %151

149:                                              ; preds = %131
  %150 = inttoptr i64 %133 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %151

151:                                              ; preds = %149, %139
  %152 = phi %"class.blink::LayoutBoxModelObject"* [ %140, %139 ], [ %136, %149 ]
  %153 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %148, %139 ], [ %150, %149 ]
  %154 = tail call i32 %153(%"class.blink::LayoutBoxModelObject"* %152) #16
  %155 = tail call i1 @llvm.is.constant.i32(i32 %154) #16
  br i1 %155, label %156, label %160

156:                                              ; preds = %151
  %157 = sub i32 0, %154
  %158 = icmp eq i32 %157, -2147483648
  %159 = select i1 %158, i32 2147483647, i32 %157
  br label %165

160:                                              ; preds = %151
  %161 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %154) #16
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 2147483647, i32 %163
  br label %165

165:                                              ; preds = %156, %160
  %166 = phi i32 [ %159, %156 ], [ %164, %160 ]
  %167 = icmp sgt i32 %166, 0
  %168 = select i1 %167, i32 %166, i32 0
  %169 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %170 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %169, i64 0, i32 0, i32 0, i32 0
  store i32 %42, i32* %170, align 8
  %171 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %169, i64 0, i32 0, i32 1, i32 0
  store i32 %88, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %169, i64 0, i32 0, i32 2, i32 0
  store i32 %122, i32* %172, align 8
  %173 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %169, i64 0, i32 0, i32 3, i32 0
  store i32 %168, i32* %173, align 4
  br label %174

174:                                              ; preds = %1, %165
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow37SetPaginationStrutPropagatedFromChildENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp sgt i32 %1, 0
  %5 = select i1 %4, i32 %1, i32 0
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %6, i64 0, i32 0
  %8 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %7, align 8
  %9 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %8, null
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  br i1 %4, label %11, label %24

11:                                               ; preds = %10
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %13 = bitcast i8* %12 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %13, %"class.blink::LayoutBlockFlow"* %0) #16
  %14 = getelementptr inbounds i8, i8* %12, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %6, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %13) #16
  %18 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %7, align 8
  %19 = load i32, i32* %3, align 4
  br label %20

20:                                               ; preds = %2, %11
  %21 = phi i32 [ %5, %2 ], [ %19, %11 ]
  %22 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %8, %2 ], [ %18, %11 ]
  %23 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %22, i64 0, i32 1, i32 0
  store i32 %21, i32* %23, align 8
  br label %24

24:                                               ; preds = %10, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow25SetFirstForcedBreakOffsetENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, null
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %7
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %11 = bitcast i8* %10 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %11, %"class.blink::LayoutBlockFlow"* %0) #16
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %3, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %11) #16
  %16 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  br label %17

17:                                               ; preds = %2, %9
  %18 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %5, %2 ], [ %16, %9 ]
  %19 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %18, i64 0, i32 2, i32 0
  store i32 %1, i32* %19, align 4
  br label %20

20:                                               ; preds = %7, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow14SetBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 2
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %5, i32 %1) #16
  br i1 %6, label %11, label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %8, align 8
  %10 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %9, null
  br i1 %10, label %34, label %27

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %12, align 8
  %14 = trunc i32 %1 to i8
  %15 = and i8 %14, 15
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %17 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %13, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %16, i64 0, i32 0
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %21 = bitcast i8* %20 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %21, %"class.blink::LayoutBlockFlow"* %0) #16
  %22 = getelementptr inbounds i8, i8* %20, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %16, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %21) #16
  %26 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %19, align 8
  br label %27

27:                                               ; preds = %7, %11, %18
  %28 = phi i8 [ %15, %18 ], [ %15, %11 ], [ 2, %7 ]
  %29 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %26, %18 ], [ %13, %11 ], [ %9, %7 ]
  %30 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %29, i64 0, i32 7
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, -16
  %33 = or i8 %32, %28
  store i8 %33, i8* %30, align 8
  br label %34

34:                                               ; preds = %7, %27
  ret void
}

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow13SetBreakAfterENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 2
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %5, i32 %1) #16
  br i1 %6, label %11, label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %8, align 8
  %10 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %9, null
  br i1 %10, label %34, label %27

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %12, align 8
  %14 = trunc i32 %1 to i8
  %15 = shl i8 %14, 4
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %17 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %13, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %16, i64 0, i32 0
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %21 = bitcast i8* %20 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %21, %"class.blink::LayoutBlockFlow"* %0) #16
  %22 = getelementptr inbounds i8, i8* %20, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %16, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %21) #16
  %26 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %19, align 8
  br label %27

27:                                               ; preds = %7, %11, %18
  %28 = phi i8 [ %15, %18 ], [ %15, %11 ], [ 32, %7 ]
  %29 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %26, %18 ], [ %13, %11 ], [ %9, %7 ]
  %30 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %29, i64 0, i32 7
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 15
  %33 = or i8 %32, %28
  store i8 %33, i8* %30, align 8
  br label %34

34:                                               ; preds = %7, %27
  ret void
}

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26SetPropagatedStartPageNameERKN3WTF12AtomicStringE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %11, align 8
  %13 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %12, null
  br i1 %13, label %76, label %31

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %18 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, i64 0, i32 5
  br label %36

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %17, i64 0, i32 0
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %24 = bitcast i8* %23 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %24, %"class.blink::LayoutBlockFlow"* %0) #16
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %17, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %24) #16
  %29 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %22, align 8
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  br label %31

31:                                               ; preds = %10, %21
  %32 = phi %"class.WTF::StringImpl"* [ %30, %21 ], [ %4, %10 ]
  %33 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %29, %21 ], [ %12, %10 ]
  %34 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %33, i64 0, i32 5
  %35 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %19, %31
  %37 = phi %"class.WTF::AtomicString"* [ %20, %19 ], [ %34, %31 ]
  %38 = phi %"class.WTF::StringImpl"* [ %4, %19 ], [ %32, %31 ]
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #16
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %36, %31
  %56 = phi %"class.WTF::AtomicString"* [ %37, %53 ], [ %37, %36 ], [ %34, %31 ]
  %57 = phi %"class.WTF::StringImpl"* [ %38, %53 ], [ %38, %36 ], [ null, %31 ]
  %58 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  %59 = bitcast %"class.WTF::AtomicString"* %56 to i64*
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %10, %75, %72, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow24SetPropagatedEndPageNameERKN3WTF12AtomicStringE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %11, align 8
  %13 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %12, null
  br i1 %13, label %76, label %31

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %18 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, i64 0, i32 6
  br label %36

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %17, i64 0, i32 0
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %24 = bitcast i8* %23 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %24, %"class.blink::LayoutBlockFlow"* %0) #16
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %17, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %24) #16
  %29 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %22, align 8
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  br label %31

31:                                               ; preds = %10, %21
  %32 = phi %"class.WTF::StringImpl"* [ %30, %21 ], [ %4, %10 ]
  %33 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %29, %21 ], [ %12, %10 ]
  %34 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %33, i64 0, i32 6
  %35 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %19, %31
  %37 = phi %"class.WTF::AtomicString"* [ %20, %19 ], [ %34, %31 ]
  %38 = phi %"class.WTF::StringImpl"* [ %4, %19 ], [ %32, %31 ]
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #16
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %36, %31
  %56 = phi %"class.WTF::AtomicString"* [ %37, %53 ], [ %37, %36 ], [ %34, %31 ]
  %57 = phi %"class.WTF::StringImpl"* [ %38, %53 ], [ %38, %36 ], [ null, %31 ]
  %58 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  %59 = bitcast %"class.WTF::AtomicString"* %56 to i64*
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %10, %75, %72, %55
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #16
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

declare void @_ZN5blink15LayoutBlockFlow20LayoutInlineChildrenEbNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow19LayoutBlockChildrenEbRNS_18SubtreeLayoutScopeENS_10LayoutUnitES3_(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::BlockChildrenLayoutInfo", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock45DirtyForLayoutFromPercentageHeightDescendantsERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlock"* %9, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2) #16
  %10 = bitcast %"class.blink::BlockChildrenLayoutInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 1
  %12 = bitcast %"class.blink::MarginInfo"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 0, i32 0
  store %"class.blink::LayoutMultiColumnSet"* null, %"class.blink::LayoutMultiColumnSet"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 1
  call void @_ZN5blink10MarginInfoC2EPNS_15LayoutBlockFlowENS_10LayoutUnitES3_(%"class.blink::MarginInfo"* %14, %"class.blink::LayoutBlockFlow"* %0, i32 %3, i32 %4) #16
  %15 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 5
  store i32 2, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 6
  store i8 1, i8* %18, align 8
  %19 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)***
  %20 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)**, %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)** %20, i64 218
  %22 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)** %21, align 8
  %23 = tail call %"class.blink::LayoutObject"* %22(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %1, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2) #16
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %215, label %27

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 67108864
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 1588, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #16
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  br label %36

36:                                               ; preds = %27, %33
  %37 = bitcast %"class.logging::CheckError"* %8 to i8*
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %14, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 1, i32 1, i32 0
  %43 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %6, i64 0, i32 1, i32 2, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %36, %213
  %46 = phi %"class.blink::LayoutObject"* [ %25, %36 ], [ %50, %213 ]
  %47 = phi %"class.blink::LayoutBox"* [ null, %36 ], [ %214, %213 ]
  %48 = bitcast %"class.blink::LayoutObject"* %46 to %"class.blink::LayoutBox"*
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 9
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 67108864
  %57 = icmp eq i96 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 1595, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #16
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %60

60:                                               ; preds = %52, %45, %58
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* nonnull %46) #16
  %61 = icmp eq %"class.blink::LayoutObject"* %23, %46
  br i1 %61, label %213, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.blink::LayoutObject"* %46 to i1 (%"class.blink::LayoutObject"*, i32)***
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, i64 92
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, align 8
  %67 = call zeroext i1 %66(%"class.blink::LayoutObject"* nonnull %46, i32 21) #16
  br i1 %67, label %68, label %82

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 2, i32 6
  %70 = bitcast %"class.blink::UntracedMember"* %69 to %"class.blink::LayoutObject"**
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 63
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* nonnull %46, i32 1) #16
  %80 = load i96, i96* %79, align 4
  %81 = or i96 %80, 1180591620717411303432
  store i96 %81, i96* %79, align 4
  br label %82

82:                                               ; preds = %62, %68, %77
  call void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %9, i1 zeroext %1, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %48) #16
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to i96*
  %85 = load i96, i96* %84, align 4
  %86 = and i96 %85, 113336795588871485128704
  %87 = icmp eq i96 %86, 75557863725914323419136
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %46, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  call void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %89, %"class.blink::LayoutBox"* nonnull %48) #16
  call void @_ZN5blink15LayoutBlockFlow21AdjustPositionedBlockERNS_9LayoutBoxERKNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %48, %"class.blink::BlockChildrenLayoutInfo"* nonnull dereferenceable(48) %6)
  br label %213

90:                                               ; preds = %82
  %91 = and i96 %85, 8388608
  %92 = icmp eq i96 %91, 0
  br i1 %92, label %124, label %93

93:                                               ; preds = %90
  %94 = call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %48)
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %95, i64 0, i32 0, i32 9
  %97 = bitcast [20 x i8]* %96 to i160*
  %98 = load i160, i160* %97, align 8
  %99 = and i160 %98, 15211807202738752817960438464512
  %100 = icmp eq i160 %99, 0
  %101 = select i1 %100, i32* %39, i32* %40
  %102 = load i32, i32* %101, align 4
  %103 = load i16, i16* %41, align 8
  %104 = and i16 %103, 34
  %105 = icmp eq i16 %104, 34
  br i1 %105, label %121, label %106

106:                                              ; preds = %93
  %107 = load i32, i32* %42, align 4
  %108 = load i32, i32* %43, align 8
  %109 = icmp sgt i32 %108, -1
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %107, i32 %108) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  %115 = icmp slt i32 %114, 0
  %116 = select i1 %115, i32 -2147483648, i32 2147483647
  %117 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %102, i32 %114) #16
  %118 = extractvalue { i32, i1 } %117, 1
  %119 = extractvalue { i32, i1 } %117, 0
  %120 = select i1 %118, i32 %116, i32 %119, !prof !2
  br label %121

121:                                              ; preds = %93, %106
  %122 = phi i32 [ %102, %93 ], [ %120, %106 ]
  %123 = call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %122, %"class.blink::LineWidth"* null) #16
  br label %213

124:                                              ; preds = %90
  %125 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 5, i32 0
  %126 = bitcast %"class.blink::ComputedStyle"** %125 to %"class.blink::ComputedStyleBase"**
  %127 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %127, i64 0, i32 3, i32 0, i32 0
  %129 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %129, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %131, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %133, i64 0, i32 45
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 536870912
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %212, label %138

138:                                              ; preds = %124
  %139 = bitcast %"class.blink::LayoutObject"* %46 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %140 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %139, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %140, i64 44
  %142 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %141, align 8
  %143 = call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %142(%"class.blink::LayoutObject"* nonnull %46) #16
  %144 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %143, null
  br i1 %144, label %212, label %145

145:                                              ; preds = %138
  %146 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %147 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %146, i64 0, i32 0, i32 9
  %148 = bitcast [20 x i8]* %147 to i160*
  %149 = load i160, i160* %148, align 8
  %150 = and i160 %149, 15211807202738752817960438464512
  %151 = icmp eq i160 %150, 0
  %152 = select i1 %151, i32* %39, i32* %40
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* %42, align 4
  %155 = load i32, i32* %43, align 8
  %156 = icmp sgt i32 %155, -1
  %157 = select i1 %156, i32 -2147483648, i32 2147483647
  %158 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %155) #16
  %159 = extractvalue { i32, i1 } %158, 1
  %160 = extractvalue { i32, i1 } %158, 0
  %161 = select i1 %159, i32 %157, i32 %160, !prof !2
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %161) #16
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !2
  br i1 %151, label %168, label %172

168:                                              ; preds = %145
  %169 = load i32, i32* %39, align 4
  %170 = icmp eq i32 %169, %167
  br i1 %170, label %176, label %171

171:                                              ; preds = %168
  store i32 %167, i32* %39, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %44) #16
  br label %176

172:                                              ; preds = %145
  %173 = load i32, i32* %40, align 4
  %174 = icmp eq i32 %173, %167
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  store i32 %167, i32* %40, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %44) #16
  br label %176

176:                                              ; preds = %168, %171, %172, %175
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 8
  %177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 2, i32 4, i32 0, i64 4
  %178 = bitcast i8* %177 to %"struct.blink::LayoutBoxRareData"**
  %179 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %178, align 8
  %180 = icmp eq %"struct.blink::LayoutBoxRareData"* %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %179, i64 0, i32 0
  %183 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %182, align 8
  br label %184

184:                                              ; preds = %176, %181
  %185 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %183, %181 ], [ null, %176 ]
  %186 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %185, i64 0, i32 0, i32 0, i32 0, i32 7
  %187 = bitcast %"class.blink::LayoutObject"** %186 to %"class.blink::LayoutBlockFlow"**
  %188 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %188, i64 0, i32 2, i32 0, i32 0
  %190 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %189, align 8
  %191 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %190, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %190, i64 0, i32 3
  %194 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %193, align 8
  br label %195

195:                                              ; preds = %184, %192
  %196 = phi %"class.blink::LayoutMultiColumnFlowThread"* [ %194, %192 ], [ null, %184 ]
  %197 = call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %44) #16
  %198 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %198, i64 0, i32 0, i32 9
  %200 = bitcast [20 x i8]* %199 to i160*
  %201 = load i160, i160* %200, align 8
  %202 = and i160 %201, 15211807202738752817960438464512
  %203 = icmp eq i160 %202, 0
  %204 = select i1 %203, i32* %39, i32* %40
  %205 = load i32, i32* %204, align 4
  %206 = icmp slt i32 %205, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  %208 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %197, i32 %205) #16
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !2
  call void @_ZN5blink27LayoutMultiColumnFlowThread17SkipColumnSpannerEPKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"* %196, %"class.blink::LayoutBox"* nonnull %48, i32 %211) #16
  br label %213

212:                                              ; preds = %138, %124
  call void @_ZN5blink15LayoutBlockFlow16LayoutBlockChildERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %48, %"class.blink::BlockChildrenLayoutInfo"* nonnull dereferenceable(48) %6)
  store i8 0, i8* %18, align 8
  br label %213

213:                                              ; preds = %60, %212, %195, %121, %88
  %214 = phi %"class.blink::LayoutBox"* [ %47, %88 ], [ %47, %121 ], [ %47, %195 ], [ %48, %212 ], [ %47, %60 ]
  br i1 %51, label %215, label %45

215:                                              ; preds = %213, %5
  %216 = phi %"class.blink::LayoutBox"* [ null, %5 ], [ %214, %213 ]
  call void @_ZN5blink15LayoutBlockFlow22HandleAfterSideOfBlockEPNS_9LayoutBoxENS_10LayoutUnitES3_RNS_10MarginInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* %216, i32 %3, i32 %4, %"class.blink::MarginInfo"* dereferenceable(12) %14)
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #16
  br label %232

232:                                              ; preds = %215, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow24LowestFloatLogicalBottomENS_6EClearE(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1
  %10 = icmp eq i32 %1, 2
  %11 = select i1 %10, i32 2, i32 3
  %12 = select i1 %9, i32 1, i32 %11
  %13 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %6, i32 %12) #16
  br label %14

14:                                               ; preds = %4, %2, %8
  %15 = phi i32 [ %13, %8 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow20AddOverhangingFloatsEPS0_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutSize", align 4
  %5 = alloca %"class.blink::LayoutSize", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %6, align 8
  %8 = icmp eq %"class.blink::FloatingObjects"* %7, null
  br i1 %8, label %331, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %331, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %15 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %15, i64 182
  %17 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutBlockFlow"* %1) #16
  br i1 %18, label %331, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %30 = select i1 %27, i32* %28, i32* %29
  %31 = load i32, i32* %30, align 4
  %32 = select i1 %27, i32* %29, i32* %28
  %33 = load i32, i32* %32, align 4
  %34 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %6, align 8
  %35 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %35, align 8
  %37 = icmp eq %"class.WTF::MallocedListHashSetNode"* %36, null
  br i1 %37, label %331, label %38

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = icmp sgt i32 %31, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 2147483647, i32 %31) #16
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %49 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %50 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.blink::LayoutSize"* %4 to i8*
  %53 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %4, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %4, i64 0, i32 1, i32 0
  %55 = bitcast %"class.blink::LayoutSize"* %5 to i8*
  %56 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %5, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %5, i64 0, i32 1, i32 0
  %58 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %31) #16
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 2147483647, i32 %60
  %62 = icmp eq i32 %60, -2147483648
  %63 = select i1 %62, i32 2147483647, i32 %60
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %33) #16
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 2147483647, i32 %66
  %68 = icmp eq i32 %66, -2147483648
  %69 = select i1 %68, i32 2147483647, i32 %66
  %70 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.1817", %"class.std::__1::unique_ptr.1817"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.1817"* %70 to i64*
  br label %73

73:                                               ; preds = %38, %327
  %74 = phi %"class.WTF::MallocedListHashSetNode"* [ %36, %38 ], [ %329, %327 ]
  %75 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %75, align 8
  %77 = load i96, i96* %40, align 4
  %78 = trunc i96 %77 to i32
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 2, i32 0, i32 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 2, i32 1, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %84) #16
  br label %96

88:                                               ; preds = %73
  %89 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 2, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 2, i32 1, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %92) #16
  br label %96

96:                                               ; preds = %80, %88
  %97 = phi { i32, i1 } [ %87, %80 ], [ %95, %88 ]
  %98 = phi i32 [ %86, %80 ], [ %94, %88 ]
  %99 = extractvalue { i32, i1 } %97, 1
  %100 = extractvalue { i32, i1 } %97, 0
  %101 = select i1 %99, i32 %98, i32 %100
  %102 = icmp slt i32 %46, %101
  %103 = select i1 %102, i32 %46, i32 %101
  %104 = icmp slt i32 %103, 0
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %103) #16
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  %110 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %112 = bitcast [20 x i8]* %111 to i160*
  %113 = load i160, i160* %112, align 8
  %114 = and i160 %113, 15211807202738752817960438464512
  %115 = icmp eq i160 %114, 0
  %116 = select i1 %115, i32* %49, i32* %50
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %109, %117
  br i1 %118, label %119, label %172

119:                                              ; preds = %96
  %120 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 0
  %121 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %120, align 8
  %122 = call zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* %121)
  br i1 %122, label %327, label %123

123:                                              ; preds = %119
  br i1 %79, label %124, label %129

124:                                              ; preds = %123
  %125 = call i1 @llvm.is.constant.i32(i32 %33) #16
  %126 = select i1 %125, i32 %69, i32 %67
  %127 = call i1 @llvm.is.constant.i32(i32 %31) #16
  %128 = select i1 %127, i32 %63, i32 %61
  br label %134

129:                                              ; preds = %123
  %130 = call i1 @llvm.is.constant.i32(i32 %31) #16
  %131 = select i1 %130, i32 %63, i32 %61
  %132 = call i1 @llvm.is.constant.i32(i32 %33) #16
  %133 = select i1 %132, i32 %69, i32 %67
  br label %134

134:                                              ; preds = %129, %124
  %135 = phi i32 [ %128, %124 ], [ %133, %129 ]
  %136 = phi i32 [ %126, %124 ], [ %131, %129 ]
  %137 = call %"class.blink::PaintLayer"* @_ZNK5blink9LayoutBox27EnclosingFloatPaintingLayerEv(%"class.blink::LayoutBox"* %121) #16
  %138 = call %"class.blink::PaintLayer"* @_ZNK5blink9LayoutBox27EnclosingFloatPaintingLayerEv(%"class.blink::LayoutBox"* %47) #16
  %139 = icmp eq %"class.blink::PaintLayer"* %137, %138
  br i1 %139, label %140, label %147

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 3
  %142 = load i8, i8* %141, align 8
  %143 = and i8 %142, 32
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  %146 = and i8 %142, -5
  store i8 %146, i8* %141, align 8
  br label %147

147:                                              ; preds = %140, %145, %134
  %148 = phi i1 [ false, %140 ], [ true, %145 ], [ false, %134 ]
  %149 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %71, align 8
  %150 = icmp eq %"class.blink::FloatingObjects"* %149, null
  br i1 %150, label %151, label %164

151:                                              ; preds = %147
  %152 = load i96, i96* %40, align 4
  %153 = trunc i96 %152 to i32
  %154 = icmp slt i32 %153, 0
  %155 = call noalias i8* @malloc(i64 144) #16
  %156 = bitcast i8* %155 to %"class.blink::FloatingObjects"*
  call void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"* %156, %"class.blink::LayoutBlockFlow"* %0, i1 zeroext %154) #16
  %157 = ptrtoint i8* %155 to i64
  %158 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %71, align 8
  store i64 %157, i64* %72, align 8
  %159 = icmp eq %"class.blink::FloatingObjects"* %158, null
  %160 = bitcast i8* %155 to %"class.blink::FloatingObjects"*
  br i1 %159, label %164, label %161

161:                                              ; preds = %151
  call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %158) #16
  %162 = bitcast %"class.blink::FloatingObjects"* %158 to i8*
  call void @free(i8* %162) #16
  %163 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %71, align 8
  br label %164

164:                                              ; preds = %147, %161, %151
  %165 = phi %"class.blink::FloatingObjects"* [ %149, %147 ], [ %163, %161 ], [ %160, %151 ]
  %166 = zext i32 %135 to i64
  %167 = shl nuw i64 %166, 32
  %168 = zext i32 %136 to i64
  %169 = or i64 %167, %168
  %170 = call %"class.blink::FloatingObject"* @_ZNK5blink14FloatingObject18CopyToNewContainerENS_10LayoutSizeEbb(%"class.blink::FloatingObject"* %76, i64 %169, i1 zeroext %148, i1 zeroext true) #16
  %171 = call %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects3AddENSt3__110unique_ptrINS_14FloatingObjectENS1_14default_deleteIS3_EEEE(%"class.blink::FloatingObjects"* %165, %"class.blink::FloatingObject"* %170) #16
  br label %327

172:                                              ; preds = %96
  br i1 %2, label %173, label %199

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 3
  %175 = load i8, i8* %174, align 8
  %176 = and i8 %175, 4
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %199

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 0
  %180 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %180, i64 0, i32 0
  %182 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %181) #16
  br i1 %182, label %199, label %183

183:                                              ; preds = %178
  %184 = load i8, i8* %174, align 8
  %185 = and i8 %184, 32
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %183
  %188 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %179, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %188, i64 0, i32 0, i32 0
  %190 = call zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"* %189, %"class.blink::LayoutObject"* %51) #16
  br i1 %190, label %191, label %199

191:                                              ; preds = %187
  %192 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %179, align 8
  %193 = call %"class.blink::PaintLayer"* @_ZNK5blink9LayoutBox27EnclosingFloatPaintingLayerEv(%"class.blink::LayoutBox"* %192) #16
  %194 = call %"class.blink::PaintLayer"* @_ZNK5blink9LayoutBox27EnclosingFloatPaintingLayerEv(%"class.blink::LayoutBox"* %20) #16
  %195 = icmp eq %"class.blink::PaintLayer"* %193, %194
  br i1 %195, label %196, label %199

196:                                              ; preds = %191
  %197 = load i8, i8* %174, align 8
  %198 = or i8 %197, 4
  store i8 %198, i8* %174, align 8
  br label %199

199:                                              ; preds = %183, %173, %196, %191, %187, %178, %172
  %200 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 3
  %201 = load i8, i8* %200, align 8
  %202 = and i8 %201, 8
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %327, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 0
  %206 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %205, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  %207 = call i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %76)
  %208 = load i96, i96* %40, align 4
  %209 = trunc i96 %208 to i32
  %210 = icmp slt i32 %209, 0
  %211 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %76, i64 0, i32 2, i32 0, i32 1, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %205, align 8
  br i1 %210, label %214, label %253

214:                                              ; preds = %204
  %215 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %213, i64 0, i32 0
  %216 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %217 = icmp eq %"class.blink::ComputedStyle"* %216, null
  %218 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %213, i64 0, i32 0, i32 0, i32 5, i32 0
  %219 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %218, align 8
  %220 = select i1 %217, %"class.blink::ComputedStyle"* %219, %"class.blink::ComputedStyle"* %216
  %221 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %220, i64 0, i32 0, i32 9
  %222 = bitcast [20 x i8]* %221 to i160*
  %223 = load i160, i160* %222, align 8, !noalias !57
  %224 = lshr i160 %223, 102
  %225 = trunc i160 %224 to i8
  %226 = and i8 %225, 3
  %227 = bitcast %"class.blink::LayoutBox"* %213 to i8*
  switch i8 %226, label %228 [
    i8 0, label %237
    i8 1, label %229
  ]

228:                                              ; preds = %214
  br label %229

229:                                              ; preds = %228, %214
  %230 = phi { i64, i64 } [ { i64 1033, i64 0 }, %228 ], [ { i64 1041, i64 0 }, %214 ]
  %231 = extractvalue { i64, i64 } %230, 0
  %232 = extractvalue { i64, i64 } %230, 1
  %233 = getelementptr inbounds i8, i8* %227, i64 %232
  %234 = bitcast i8* %233 to %"class.blink::LayoutBoxModelObject"*
  %235 = and i64 %231, 1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %247, label %237

237:                                              ; preds = %229, %214
  %238 = phi %"class.blink::LayoutBoxModelObject"* [ %234, %229 ], [ %215, %214 ]
  %239 = phi i8* [ %233, %229 ], [ %227, %214 ]
  %240 = phi i64 [ %231, %229 ], [ 1017, %214 ]
  %241 = bitcast i8* %239 to i8**
  %242 = load i8*, i8** %241, align 8
  %243 = add i64 %240, -1
  %244 = getelementptr i8, i8* %242, i64 %243
  %245 = bitcast i8* %244 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %246 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %245, align 8
  br label %249

247:                                              ; preds = %229
  %248 = inttoptr i64 %231 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %249

249:                                              ; preds = %247, %237
  %250 = phi %"class.blink::LayoutBoxModelObject"* [ %238, %237 ], [ %234, %247 ]
  %251 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %246, %237 ], [ %248, %247 ]
  %252 = call i32 %251(%"class.blink::LayoutBoxModelObject"* %250) #16
  br label %259

253:                                              ; preds = %204
  %254 = bitcast %"class.blink::LayoutBox"* %213 to i32 (%"class.blink::LayoutBox"*)***
  %255 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %254, align 8
  %256 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %255, i64 127
  %257 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %256, align 8
  %258 = call i32 %257(%"class.blink::LayoutBox"* %213) #16
  br label %259

259:                                              ; preds = %249, %253
  %260 = phi i32 [ %252, %249 ], [ %258, %253 ]
  %261 = icmp slt i32 %260, 0
  %262 = select i1 %261, i32 -2147483648, i32 2147483647
  %263 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %260) #16
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %262, i32 %265
  store i32 %207, i32* %53, align 4
  store i32 %266, i32* %54, align 4
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %206, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  %267 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %205, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #16
  %268 = call i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %76)
  %269 = load i96, i96* %40, align 4
  %270 = trunc i96 %269 to i32
  %271 = icmp slt i32 %270, 0
  %272 = load i32, i32* %211, align 4
  %273 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %205, align 8
  br i1 %271, label %274, label %313

274:                                              ; preds = %259
  %275 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %273, i64 0, i32 0
  %276 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %277 = icmp eq %"class.blink::ComputedStyle"* %276, null
  %278 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %273, i64 0, i32 0, i32 0, i32 5, i32 0
  %279 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %278, align 8
  %280 = select i1 %277, %"class.blink::ComputedStyle"* %279, %"class.blink::ComputedStyle"* %276
  %281 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %280, i64 0, i32 0, i32 9
  %282 = bitcast [20 x i8]* %281 to i160*
  %283 = load i160, i160* %282, align 8, !noalias !60
  %284 = lshr i160 %283, 102
  %285 = trunc i160 %284 to i8
  %286 = and i8 %285, 3
  %287 = bitcast %"class.blink::LayoutBox"* %273 to i8*
  switch i8 %286, label %288 [
    i8 0, label %297
    i8 1, label %289
  ]

288:                                              ; preds = %274
  br label %289

289:                                              ; preds = %288, %274
  %290 = phi { i64, i64 } [ { i64 1033, i64 0 }, %288 ], [ { i64 1041, i64 0 }, %274 ]
  %291 = extractvalue { i64, i64 } %290, 0
  %292 = extractvalue { i64, i64 } %290, 1
  %293 = getelementptr inbounds i8, i8* %287, i64 %292
  %294 = bitcast i8* %293 to %"class.blink::LayoutBoxModelObject"*
  %295 = and i64 %291, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %289, %274
  %298 = phi %"class.blink::LayoutBoxModelObject"* [ %294, %289 ], [ %275, %274 ]
  %299 = phi i8* [ %293, %289 ], [ %287, %274 ]
  %300 = phi i64 [ %291, %289 ], [ 1017, %274 ]
  %301 = bitcast i8* %299 to i8**
  %302 = load i8*, i8** %301, align 8
  %303 = add i64 %300, -1
  %304 = getelementptr i8, i8* %302, i64 %303
  %305 = bitcast i8* %304 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %306 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %305, align 8
  br label %309

307:                                              ; preds = %289
  %308 = inttoptr i64 %291 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %309

309:                                              ; preds = %307, %297
  %310 = phi %"class.blink::LayoutBoxModelObject"* [ %298, %297 ], [ %294, %307 ]
  %311 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %306, %297 ], [ %308, %307 ]
  %312 = call i32 %311(%"class.blink::LayoutBoxModelObject"* %310) #16
  br label %319

313:                                              ; preds = %259
  %314 = bitcast %"class.blink::LayoutBox"* %273 to i32 (%"class.blink::LayoutBox"*)***
  %315 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %314, align 8
  %316 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %315, i64 127
  %317 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %316, align 8
  %318 = call i32 %317(%"class.blink::LayoutBox"* %273) #16
  br label %319

319:                                              ; preds = %309, %313
  %320 = phi i32 [ %312, %309 ], [ %318, %313 ]
  %321 = icmp slt i32 %320, 0
  %322 = select i1 %321, i32 -2147483648, i32 2147483647
  %323 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %272, i32 %320) #16
  %324 = extractvalue { i32, i1 } %323, 1
  %325 = extractvalue { i32, i1 } %323, 0
  %326 = select i1 %324, i32 %322, i32 %325
  store i32 %268, i32* %56, align 4
  store i32 %326, i32* %57, align 4
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %267, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #16
  br label %327

327:                                              ; preds = %199, %319, %119, %164
  %328 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %74, i64 0, i32 2
  %329 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %328, align 8
  %330 = icmp eq %"class.WTF::MallocedListHashSetNode"* %329, null
  br i1 %330, label %331, label %73

331:                                              ; preds = %327, %19, %9, %3, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26AddLowestFloatFromChildrenEPS0_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::LayoutBlockFlow"* %1, null
  br i1 %3, label %97, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %97, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %97, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %14 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %14, i64 182
  %16 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutBlockFlow"* nonnull %1) #16
  br i1 %17, label %97, label %18

18:                                               ; preds = %12
  %19 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %20 = tail call %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects20LowestFloatingObjectEv(%"class.blink::FloatingObjects"* %19) #16
  %21 = icmp eq %"class.blink::FloatingObject"* %20, null
  br i1 %21, label %97, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %20, i64 0, i32 0
  %24 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, align 8
  %25 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* %24)
  br i1 %25, label %97, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 0
  %34 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %36 = select i1 %33, i32* %34, i32* %35
  %37 = load i32, i32* %36, align 4
  %38 = tail call i1 @llvm.is.constant.i32(i32 %37) #16
  br i1 %38, label %39, label %43

39:                                               ; preds = %26
  %40 = sub i32 0, %37
  %41 = icmp eq i32 %40, -2147483648
  %42 = select i1 %41, i32 2147483647, i32 %40
  br label %48

43:                                               ; preds = %26
  %44 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %37) #16
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 2147483647, i32 %46
  br label %48

48:                                               ; preds = %39, %43
  %49 = phi i32 [ %42, %39 ], [ %47, %43 ]
  %50 = select i1 %33, i32* %35, i32* %34
  %51 = load i32, i32* %50, align 4
  %52 = tail call i1 @llvm.is.constant.i32(i32 %51) #16
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = sub i32 0, %51
  %55 = icmp eq i32 %54, -2147483648
  %56 = select i1 %55, i32 2147483647, i32 %54
  br label %62

57:                                               ; preds = %48
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %51) #16
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 2147483647, i32 %60
  br label %62

62:                                               ; preds = %53, %57
  %63 = phi i32 [ %56, %53 ], [ %61, %57 ]
  %64 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = trunc i96 %66 to i32
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, i32 %49, i32 %63
  %70 = select i1 %68, i32 %63, i32 %49
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.1817", %"class.std::__1::unique_ptr.1817"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %72, align 8
  %74 = icmp eq %"class.blink::FloatingObjects"* %73, null
  br i1 %74, label %75, label %86

75:                                               ; preds = %62
  %76 = tail call noalias i8* @malloc(i64 144) #16
  %77 = bitcast i8* %76 to %"class.blink::FloatingObjects"*
  tail call void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"* %77, %"class.blink::LayoutBlockFlow"* %0, i1 zeroext %68) #16
  %78 = ptrtoint i8* %76 to i64
  %79 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %72, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.1817"* %71 to i64*
  store i64 %78, i64* %80, align 8
  %81 = icmp eq %"class.blink::FloatingObjects"* %79, null
  %82 = bitcast i8* %76 to %"class.blink::FloatingObjects"*
  br i1 %81, label %86, label %83

83:                                               ; preds = %75
  tail call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %79) #16
  %84 = bitcast %"class.blink::FloatingObjects"* %79 to i8*
  tail call void @free(i8* %84) #16
  %85 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %72, align 8
  br label %86

86:                                               ; preds = %62, %83, %75
  %87 = phi %"class.blink::FloatingObjects"* [ %73, %62 ], [ %85, %83 ], [ %82, %75 ]
  %88 = zext i32 %70 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %69 to i64
  %91 = or i64 %89, %90
  %92 = tail call %"class.blink::FloatingObject"* @_ZNK5blink14FloatingObject18CopyToNewContainerENS_10LayoutSizeEbb(%"class.blink::FloatingObject"* nonnull %20, i64 %91, i1 zeroext false, i1 zeroext true) #16
  %93 = tail call %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects3AddENSt3__110unique_ptrINS_14FloatingObjectENS1_14default_deleteIS3_EEEE(%"class.blink::FloatingObjects"* %87, %"class.blink::FloatingObject"* %92) #16
  %94 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %93, i64 0, i32 3
  %95 = load i8, i8* %94, align 8
  %96 = or i8 %95, 32
  store i8 %96, i8* %94, align 8
  br label %97

97:                                               ; preds = %8, %4, %86, %18, %22, %2, %12
  ret void
}

declare %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects20LowestFloatingObjectEv(%"class.blink::FloatingObjects"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBox"*) local_unnamed_addr #6 align 2 {
  %3 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %70, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %8, align 8
  %10 = icmp eq %"class.WTF::MallocedListHashSetNode"** %9, null
  br i1 %10, label %70, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = shl i64 %3, 32
  %17 = xor i64 %16, -1
  %18 = add i64 %17, %3
  %19 = lshr i64 %18, 22
  %20 = xor i64 %19, %18
  %21 = shl i64 %20, 13
  %22 = xor i64 %21, -1
  %23 = add i64 %20, %22
  %24 = lshr i64 %23, 8
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, 9
  %27 = lshr i64 %26, 15
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 27
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 31
  %33 = xor i64 %32, %31
  %34 = trunc i64 %33 to i32
  %35 = and i32 %14, %34
  %36 = zext i32 %35 to i64
  %37 = xor i32 %34, -1
  %38 = lshr i32 %34, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %62, %11
  %51 = phi i64 [ 0, %11 ], [ %64, %62 ]
  %52 = phi i64 [ %36, %11 ], [ %66, %62 ]
  %53 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, i64 %52
  %54 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %53, align 8
  %55 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %54 to i64
  switch i64 %55, label %56 [
    i64 0, label %70
    i64 -1, label %62
  ]

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %58, i64 0, i32 0
  %60 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutBox"* %60, %1
  br i1 %61, label %67, label %62

62:                                               ; preds = %56, %50
  %63 = icmp eq i64 %51, 0
  %64 = select i1 %63, i64 %49, i64 %51
  %65 = add i64 %64, %52
  %66 = and i64 %65, %15
  br label %50

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, i64 %52
  %69 = icmp ne %"class.WTF::MallocedListHashSetNode"** %68, null
  br label %70

70:                                               ; preds = %50, %2, %67, %7
  %71 = phi i1 [ false, %2 ], [ false, %7 ], [ %69, %67 ], [ false, %50 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21CreateFloatingObjectsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = tail call noalias i8* @malloc(i64 144) #16
  %8 = bitcast i8* %7 to %"class.blink::FloatingObjects"*
  tail call void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"* %8, %"class.blink::LayoutBlockFlow"* %0, i1 zeroext %6) #16
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1817", %"class.std::__1::unique_ptr.1817"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.1817"* %10 to i64*
  store i64 %9, i64* %13, align 8
  %14 = icmp eq %"class.blink::FloatingObjects"* %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  tail call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %12) #16
  %16 = bitcast %"class.blink::FloatingObjects"* %12 to i8*
  tail call void @free(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

declare %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects3AddENSt3__110unique_ptrINS_14FloatingObjectENS1_14default_deleteIS3_EEEE(%"class.blink::FloatingObjects"*, %"class.blink::FloatingObject"*) local_unnamed_addr #1

declare %"class.blink::FloatingObject"* @_ZNK5blink14FloatingObject18CopyToNewContainerENS_10LayoutSizeEbb(%"class.blink::FloatingObject"*, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !63
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !63
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #16
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !66
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !66
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #16
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #16
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !69
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !69
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #16
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #16
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !72
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !72
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #16
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #16
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox25LogicalLeftScrollbarWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #16
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %61, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 15211807202738752817960438464512
  %52 = icmp eq i160 %51, 0
  %53 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #16
  br i1 %52, label %54, label %58

54:                                               ; preds = %46
  %55 = extractvalue { i64, i64 } %53, 1
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  br label %61

58:                                               ; preds = %46
  %59 = extractvalue { i64, i64 } %53, 0
  %60 = trunc i64 %59 to i32
  br label %61

61:                                               ; preds = %39, %58, %54
  %62 = phi i32 [ %57, %54 ], [ %60, %58 ], [ 0, %39 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow28StartOffsetForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 41538374868278621028243970633760768
  %10 = icmp eq i160 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %13 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %12) #16
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %14, align 8
  %16 = icmp eq %"class.blink::FloatingObjects"* %15, null
  br i1 %16, label %57, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %15, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @_ZN5blink15FloatingObjects34LogicalLeftOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %15, i32 %13, i32 %1, i32 %2) #16
  br label %57

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %25 = and i160 %8, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %29 = select i1 %26, i32* %27, i32* %28
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %32 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %31) #16
  %33 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %24) #16
  %34 = icmp slt i32 %33, 0
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %33) #16
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  %40 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %40, align 8
  %42 = icmp eq %"class.blink::FloatingObjects"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %41, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call i32 @_ZN5blink15FloatingObjects35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %41, i32 %39, i32 %1, i32 %2) #16
  br label %49

49:                                               ; preds = %23, %43, %47
  %50 = phi i32 [ %48, %47 ], [ %39, %43 ], [ %39, %23 ]
  %51 = icmp sgt i32 %50, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %50) #16
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  br label %57

57:                                               ; preds = %21, %17, %11, %49
  %58 = phi i32 [ %56, %49 ], [ %22, %21 ], [ %13, %17 ], [ %13, %11 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow22SetLogicalLeftForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %8 = bitcast %"class.blink::LayoutRect"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  store i64 %9, i64* %4, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = bitcast i64* %4 to i32*
  store i32 %2, i32* %16, align 8
  br label %19

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %5, i64 0, i32 1, i32 0
  store i32 %2, i32* %18, align 4
  br label %19

19:                                               ; preds = %17, %15
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret void
}

declare void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"*, %"class.blink::LayoutPoint"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow42MarkDescendantsWithFloatsForLayoutIfNeededERS0_NS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBlockFlow"* dereferenceable(280), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %14, align 4
  %17 = select i1 %12, i32 %15, i32 %16
  %18 = icmp eq i32 %17, %2
  br i1 %18, label %33, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %21 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %21, i64 182
  %23 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutBlockFlow"* %1) #16
  br i1 %24, label %33, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %26, align 8
  %28 = icmp eq %"class.blink::FloatingObjects"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %27, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %55

33:                                               ; preds = %29, %4, %25, %19
  %34 = add i32 %2, -2147483647
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %55, label %36, !prof !2

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %38 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %38, i64 182
  %40 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutBlockFlow"* %1) #16
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %5) #16
  br i1 %43, label %44, label %56

44:                                               ; preds = %42, %36
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %45, align 8
  %47 = icmp eq %"class.blink::FloatingObjects"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %46, i32 3) #16
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi i32 [ %49, %48 ], [ 0, %44 ]
  %52 = icmp sgt i32 %51, %3
  %53 = select i1 %52, i32 %51, i32 %3
  %54 = icmp sgt i32 %53, %2
  br i1 %54, label %55, label %56

55:                                               ; preds = %29, %33, %50
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %1, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %56

56:                                               ; preds = %42, %55, %50
  ret void
}

declare zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 274877906944
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %11, align 8
  %13 = icmp eq %"class.blink::FloatingObjects"* %12, null
  br i1 %13, label %108, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %12, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %108, label %18

18:                                               ; preds = %14, %3
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 64
  %22 = icmp eq i16 %21, 0
  %23 = icmp ne %"class.blink::LayoutBox"* %1, null
  %24 = or i1 %23, %22
  br i1 %24, label %25, label %108

25:                                               ; preds = %18
  %26 = xor i1 %23, true
  %27 = zext i1 %26 to i16
  %28 = shl nuw nsw i16 %27, 6
  %29 = or i16 %21, %28
  %30 = and i16 %20, -65
  %31 = or i16 %29, %30
  store i16 %31, i16* %19, align 8
  %32 = xor i1 %2, true
  %33 = and i96 %7, 8
  %34 = icmp eq i96 %33, 0
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %4, i32 1) #16
  %35 = load i96, i96* %6, align 4
  %36 = or i96 %35, 1180591620717411303432
  store i96 %36, i96* %6, align 4
  %37 = and i1 %34, %32
  br i1 %37, label %38, label %39

38:                                               ; preds = %25
  tail call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %4, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #16
  br label %39

39:                                               ; preds = %25, %38
  br i1 %23, label %40, label %41

40:                                               ; preds = %39
  tail call void @_ZN5blink15LayoutBlockFlow20RemoveFloatingObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* nonnull %1)
  br label %41

41:                                               ; preds = %40, %39
  %42 = load i96, i96* %6, align 4
  %43 = and i96 %42, 17592186044416
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %45, label %108

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %48, label %108, label %49

49:                                               ; preds = %45, %104
  %50 = phi %"class.blink::LayoutObject"* [ %106, %104 ], [ %47, %45 ]
  br i1 %23, label %60, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 4
  %53 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %52 to i96*
  %54 = load i96, i96* %53, align 4
  %55 = and i96 %54, 8388608
  %56 = icmp ne i96 %55, 0
  %57 = and i96 %54, 113336795588871485128704
  %58 = icmp eq i96 %57, 75557863725914323419136
  %59 = or i1 %58, %56
  br i1 %59, label %104, label %60

60:                                               ; preds = %51, %49
  %61 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutObject"*)***
  %62 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %62, i64 23
  %64 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* nonnull %50) #16
  br i1 %65, label %66, label %104

66:                                               ; preds = %60
  %67 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %61, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %67, i64 24
  %69 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* nonnull %50) #16
  %71 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutBlockFlow"*
  br i1 %70, label %88, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutBox"*
  %74 = tail call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* nonnull %73) #16
  br i1 %74, label %75, label %104

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 4
  %77 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %76 to i96*
  %78 = load i96, i96* %77, align 4
  %79 = and i96 %78, 274877906944
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %104, label %81

81:                                               ; preds = %75
  %82 = and i96 %78, 8
  %83 = icmp eq i96 %82, 0
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* nonnull %50, i32 1) #16
  %84 = load i96, i96* %77, align 4
  %85 = or i96 %84, 1180591620717411303432
  store i96 %85, i96* %77, align 4
  %86 = and i1 %83, %32
  br i1 %86, label %87, label %104

87:                                               ; preds = %81
  tail call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %50, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #16
  br label %104

88:                                               ; preds = %66
  br i1 %23, label %89, label %91

89:                                               ; preds = %88
  %90 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nonnull %71, %"class.blink::LayoutBox"* nonnull %1)
  br i1 %90, label %103, label %100

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 3, i32 1
  %93 = bitcast %"class.blink::DisplayItemClient.base"* %92 to %"class.blink::FloatingObjects"**
  %94 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %93, align 8
  %95 = icmp eq %"class.blink::FloatingObjects"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %94, i64 0, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %96, %91, %89
  %101 = bitcast %"class.blink::LayoutObject"* %50 to %"class.blink::LayoutBox"*
  %102 = tail call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* nonnull %101) #16
  br i1 %102, label %103, label %104

103:                                              ; preds = %96, %100, %89
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* nonnull %71, %"class.blink::LayoutBox"* %1, i1 zeroext %2)
  br label %104

104:                                              ; preds = %75, %87, %81, %72, %103, %100, %51, %60
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 9
  %106 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %105, align 8
  %107 = icmp eq %"class.blink::LayoutObject"* %106, null
  br i1 %107, label %108, label %49

108:                                              ; preds = %104, %45, %41, %14, %10, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow29PositionAndLayoutOnceIfNeededERNS_9LayoutBoxENS_10LayoutUnitERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 1099511627776
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %4
  %15 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %8) #16
  %16 = icmp eq %"class.blink::LayoutFlowThread"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %3, i64 0, i32 0
  %19 = bitcast %"class.blink::LayoutFlowThread"* %15 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)***
  %20 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)** %20, i64 231
  %22 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::MultiColumnLayoutState"*)** %21, align 8
  tail call void %22(%"class.blink::LayoutFlowThread"* nonnull %15, %"class.blink::MultiColumnLayoutState"* dereferenceable(8) %18) #16
  br label %23

23:                                               ; preds = %4, %14, %17
  %24 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %3, i64 0, i32 4
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %26, align 8
  %28 = icmp eq %"class.blink::FloatingObjects"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %27, i32 3) #16
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i32 [ %30, %29 ], [ 0, %23 ]
  store i32 %32, i32* %5, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, %32
  %36 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %37 = select i1 %35, %"class.blink::LayoutUnit"* %36, %"class.blink::LayoutUnit"* %24
  %38 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %42 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, i64 24
  %44 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %40) #16
  %46 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %47 = icmp eq %"class.blink::LayoutBox"* %1, null
  %48 = xor i1 %45, true
  %49 = or i1 %47, %48
  br i1 %49, label %117, label %50

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1, i32 0, i32 0, i32 8
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::FloatingObjects"**
  %53 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %52, align 8
  %54 = icmp eq %"class.blink::FloatingObjects"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %53, i64 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %55, %50
  %60 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %26, align 8
  %61 = icmp eq %"class.blink::FloatingObjects"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %60, i64 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %62, %55
  %67 = load i32, i32* %33, align 4
  tail call void @_ZN5blink15LayoutBlockFlow42MarkDescendantsWithFloatsForLayoutIfNeededERS0_NS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull dereferenceable(280) %46, i32 %2, i32 %67)
  br label %68

68:                                               ; preds = %62, %59, %66
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %70, null
  br i1 %71, label %117, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 5, i32 0
  %74 = bitcast %"class.blink::ComputedStyle"** %73 to %"class.blink::ComputedStyleBase"**
  %75 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %75, i64 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %80 = bitcast %"class.blink::ComputedStyle"** %79 to %"class.blink::ComputedStyleBase"**
  %81 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %81, i64 0, i32 9
  %83 = bitcast [20 x i8]* %82 to i160*
  %84 = load i160, i160* %83, align 8
  %85 = xor i160 %84, %78
  %86 = and i160 %85, 15211807202738752817960438464512
  %87 = icmp eq i160 %86, 0
  br i1 %87, label %88, label %117

88:                                               ; preds = %72
  %89 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %52, align 8
  %90 = icmp eq %"class.blink::FloatingObjects"* %89, null
  br i1 %90, label %117, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %89, i64 0, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %117, label %95

95:                                               ; preds = %91
  %96 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  %97 = and i160 %84, 15211807202738752817960438464512
  %98 = icmp eq i160 %97, 0
  %99 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %100, align 4
  %103 = select i1 %98, i32 %101, i32 %102
  %104 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %89, i32 3) #16
  %105 = icmp slt i32 %104, 0
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %104) #16
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !2
  store i32 %110, i32* %6, align 4
  %111 = load i32, i32* %33, align 4
  %112 = icmp slt i32 %111, %110
  %113 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %114 = select i1 %112, %"class.blink::LayoutUnit"* %113, %"class.blink::LayoutUnit"* %24
  %115 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  store i32 %116, i32* %33, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  br label %117

117:                                              ; preds = %91, %72, %88, %68, %31, %95
  %118 = load i96, i96* %10, align 4
  %119 = trunc i96 %118 to i32
  %120 = icmp slt i32 %119, 0
  %121 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %122 = bitcast %"class.blink::LayoutRect"* %121 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = lshr i64 %123, 32
  %125 = select i1 %120, i64 %124, i64 %123
  %126 = trunc i64 %125 to i32
  br i1 %120, label %127, label %132

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, %2
  br i1 %130, label %137, label %131

131:                                              ; preds = %127
  store i32 %2, i32* %128, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #16
  br label %137

132:                                              ; preds = %117
  %133 = trunc i64 %123 to i32
  %134 = icmp eq i32 %133, %2
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 %2, i32* %136, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #16
  br label %137

137:                                              ; preds = %127, %131, %132, %135
  %138 = bitcast %"class.blink::SubtreeLayoutScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #16
  %139 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %139, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %7, %"class.blink::LayoutObject"* dereferenceable(88) %40) #16
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %141 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %140 to i96*
  %142 = load i96, i96* %141, align 4
  %143 = and i96 %142, 63
  %144 = icmp eq i96 %143, 0
  br i1 %144, label %169, label %145

145:                                              ; preds = %137
  %146 = and i96 %142, 3
  %147 = icmp eq i96 %146, 0
  br i1 %147, label %148, label %180

148:                                              ; preds = %145
  %149 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %150 = icmp ne i8 %149, 0
  %151 = and i96 %142, 16777216
  %152 = icmp eq i96 %151, 0
  %153 = and i1 %152, %150
  br i1 %153, label %154, label %180

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %156 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %180, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %156, i64 0, i32 1
  %160 = load i32, i32* %159, align 8
  %161 = and i32 %160, 67108876
  %162 = icmp eq i32 %161, 67108864
  br i1 %162, label %163, label %180, !prof !22

163:                                              ; preds = %158
  %164 = bitcast %"class.blink::Node"* %156 to %"class.blink::Element"*
  %165 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %164) #16
  %166 = icmp eq %"class.blink::DisplayLockContext"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %163
  %168 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %165) #16
  br i1 %168, label %180, label %169

169:                                              ; preds = %137, %167
  %170 = icmp eq i32 %126, %2
  br i1 %170, label %178, label %171

171:                                              ; preds = %169
  %172 = call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %1) #16
  br i1 %172, label %173, label %178

173:                                              ; preds = %171
  %174 = icmp sgt i32 %39, %2
  %175 = icmp sgt i32 %39, %126
  %176 = or i1 %174, %175
  br i1 %176, label %177, label %178

177:                                              ; preds = %173
  call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %7, %"class.blink::LayoutObject"* %40) #16
  br label %180

178:                                              ; preds = %169, %173, %171
  %179 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %179, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %7) #16
  br label %180

180:                                              ; preds = %154, %158, %148, %163, %145, %177, %178, %167
  %181 = load i96, i96* %141, align 4
  %182 = and i96 %181, 63
  %183 = icmp eq i96 %182, 0
  br i1 %183, label %213, label %184

184:                                              ; preds = %180
  %185 = and i96 %181, 3
  %186 = icmp eq i96 %185, 0
  br i1 %186, label %187, label %208

187:                                              ; preds = %184
  %188 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %189 = icmp ne i8 %188, 0
  %190 = and i96 %181, 16777216
  %191 = icmp eq i96 %190, 0
  %192 = and i1 %191, %189
  br i1 %192, label %193, label %208

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %195 = load %"class.blink::Node"*, %"class.blink::Node"** %194, align 8
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %208, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 67108876
  %201 = icmp eq i32 %200, 67108864
  br i1 %201, label %202, label %208, !prof !22

202:                                              ; preds = %197
  %203 = bitcast %"class.blink::Node"* %195 to %"class.blink::Element"*
  %204 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %203) #16
  %205 = icmp eq %"class.blink::DisplayLockContext"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %202
  %207 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %204) #16
  br i1 %207, label %208, label %213

208:                                              ; preds = %193, %197, %187, %202, %184, %206
  %209 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutBox"*)***
  %210 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %210, i64 54
  %212 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %211, align 8
  call void %212(%"class.blink::LayoutBox"* %1) #16
  br label %213

213:                                              ; preds = %180, %208, %206
  %214 = phi i1 [ true, %208 ], [ false, %206 ], [ false, %180 ]
  %215 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %216 = load %"class.blink::Node"*, %"class.blink::Node"** %215, align 8
  %217 = icmp eq %"class.blink::Node"* %216, null
  br i1 %217, label %218, label %225

218:                                              ; preds = %213, %218
  %219 = phi %"class.blink::LayoutObject"* [ %221, %218 ], [ %8, %213 ]
  %220 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %219, i64 0, i32 7
  %221 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %221, i64 0, i32 6, i32 0, i32 0
  %223 = load %"class.blink::Node"*, %"class.blink::Node"** %222, align 8
  %224 = icmp eq %"class.blink::Node"* %223, null
  br i1 %224, label %218, label %225

225:                                              ; preds = %218, %213
  %226 = phi %"class.blink::Node"* [ %216, %213 ], [ %223, %218 ]
  %227 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 0, i32 3, i32 0, i32 0
  %228 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %228, i64 0, i32 2, i32 0, i32 0
  %230 = load %"class.blink::Document"*, %"class.blink::Document"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %230, i64 0, i32 113
  %232 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %232, i64 0, i32 3
  %234 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %234, i64 0, i32 0
  %236 = load i8, i8* %235, align 8
  %237 = and i8 %236, 1
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %225
  %240 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"* %240, %"class.blink::LayoutBox"* dereferenceable(216) %1) #16
  br label %241

241:                                              ; preds = %225, %239
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #16
  ret i1 %214
}

declare void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow36InsertForcedBreakBeforeChildIfNeededERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::BlockChildrenLayoutInfo"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::StringImpl"*, align 8
  %6 = bitcast %"class.WTF::StringImpl"** %5 to %"class.WTF::AtomicString"*
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %3, %11
  %12 = phi %"class.blink::LayoutObject"* [ %14, %11 ], [ %7, %3 ]
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %11, label %18

18:                                               ; preds = %11, %3
  %19 = phi %"class.blink::Node"* [ %9, %3 ], [ %16, %11 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 113
  %25 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %25, i64 0, i32 3
  %27 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %26, align 8
  %28 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBox"* %1 to %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)***
  %31 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)**, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)** %31, i64 161
  %33 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)** %32, align 8
  %34 = tail call %"class.WTF::StringImpl"* %33(%"class.blink::LayoutBox"* %1) #16
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %29, align 8
  %35 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)**, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*** %30, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)** %36, i64 162
  %38 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)** %37, align 8
  %39 = tail call %"class.WTF::StringImpl"* %38(%"class.blink::LayoutBox"* %1) #16
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %5, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %34, null
  %41 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %27, i64 0, i32 6
  %42 = select i1 %40, %"class.WTF::AtomicString"* %41, %"class.WTF::AtomicString"* %4
  %43 = icmp eq %"class.WTF::StringImpl"* %39, null
  %44 = select i1 %43, %"class.WTF::AtomicString"* %41, %"class.WTF::AtomicString"* %6
  %45 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 3
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp ne %"class.WTF::StringImpl"* %47, %49
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %72, label %54

54:                                               ; preds = %18
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %72

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #16
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %59
  tail call void @llvm.trap() #16
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  br label %72

72:                                               ; preds = %69, %54, %18
  %73 = phi %"class.WTF::StringImpl"* [ %49, %18 ], [ %49, %54 ], [ %71, %69 ]
  %74 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %75 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  store i64 %74, i64* %75, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #16
  br label %90

90:                                               ; preds = %72, %86, %89
  %91 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 6
  %92 = load i8, i8* %91, align 8, !range !21
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %141, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBlockFlow"*)***
  %96 = load i32 (%"class.blink::LayoutBlockFlow"*)**, i32 (%"class.blink::LayoutBlockFlow"*)*** %95, align 8
  %97 = getelementptr inbounds i32 (%"class.blink::LayoutBlockFlow"*)*, i32 (%"class.blink::LayoutBlockFlow"*)** %96, i64 160
  %98 = load i32 (%"class.blink::LayoutBlockFlow"*)*, i32 (%"class.blink::LayoutBlockFlow"*)** %97, align 8
  %99 = tail call i32 %98(%"class.blink::LayoutBlockFlow"* %0) #16
  %100 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %101 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %101, i64 160
  %103 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %102, align 8
  %104 = tail call i32 %103(%"class.blink::LayoutBox"* %1) #16
  %105 = tail call i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32 %99, i32 %104) #16
  %106 = icmp eq i32 %105, 2
  br i1 %106, label %110, label %107

107:                                              ; preds = %94
  %108 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %109 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %108, i32 %105) #16
  br i1 %109, label %114, label %110

110:                                              ; preds = %107, %94
  %111 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %112 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %111, align 8
  %113 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %112, null
  br i1 %113, label %139, label %131

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %116 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %115, align 8
  %117 = trunc i32 %105 to i8
  %118 = and i8 %117, 15
  %119 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %120 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %116, null
  br i1 %120, label %121, label %131

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %119, i64 0, i32 0
  %123 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %124 = bitcast i8* %123 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %124, %"class.blink::LayoutBlockFlow"* %0) #16
  %125 = getelementptr inbounds i8, i8* %123, i64 -4
  %126 = bitcast i8* %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = or i16 %127, 1
  store atomic i16 %128, i16* %126 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %119, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %124) #16
  %129 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %122, align 8
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  br label %131

131:                                              ; preds = %121, %114, %110
  %132 = phi %"class.WTF::StringImpl"* [ %130, %121 ], [ %39, %114 ], [ %39, %110 ]
  %133 = phi i8 [ %118, %121 ], [ %118, %114 ], [ 2, %110 ]
  %134 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %129, %121 ], [ %116, %114 ], [ %112, %110 ]
  %135 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %134, i64 0, i32 7
  %136 = load i8, i8* %135, align 8
  %137 = and i8 %136, -16
  %138 = or i8 %137, %133
  store i8 %138, i8* %135, align 8
  br label %139

139:                                              ; preds = %110, %131
  %140 = phi %"class.WTF::StringImpl"* [ %39, %110 ], [ %132, %131 ]
  call void @_ZN5blink15LayoutBlockFlow26SetPropagatedStartPageNameERKN3WTF12AtomicStringE(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  br label %220

141:                                              ; preds = %90
  %142 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 5
  %143 = load i32, i32* %142, align 4
  %144 = tail call i32 @_ZNK5blink9LayoutBox21ClassABreakPointValueENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %143) #16
  br i1 %50, label %145, label %148

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %147 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %146, i32 6) #16
  br i1 %147, label %159, label %148

148:                                              ; preds = %145, %141
  %149 = icmp ult i32 %144, 9
  br i1 %149, label %150, label %220

150:                                              ; preds = %148
  %151 = trunc i32 %144 to i16
  %152 = lshr i16 467, %151
  %153 = and i16 %152, 1
  %154 = icmp eq i16 %153, 0
  br i1 %154, label %220, label %155

155:                                              ; preds = %150
  %156 = sext i32 %144 to i64
  %157 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table._ZN5blink15LayoutBlockFlow36InsertForcedBreakBeforeChildIfNeededERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoE, i64 0, i64 %156
  %158 = load i32, i32* %157, align 4
  br label %159

159:                                              ; preds = %155, %145
  %160 = phi i32 [ 6, %145 ], [ %158, %155 ]
  %161 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %161, align 4
  %162 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 2, i32 0
  store i32 0, i32* %162, align 4
  %163 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 9
  %167 = bitcast [20 x i8]* %166 to i160*
  %168 = load i160, i160* %167, align 8
  %169 = and i160 %168, 15211807202738752817960438464512
  %170 = icmp eq i160 %169, 0
  %171 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %172 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %173 = select i1 %170, i32* %171, i32* %172
  %174 = load i32, i32* %173, align 4
  %175 = tail call i32 @_ZN5blink15LayoutBlockFlow16ApplyForcedBreakENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"* %0, i32 %174, i32 %160)
  %176 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %164, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %176, i64 0, i32 0, i32 9
  %178 = bitcast [20 x i8]* %177 to i160*
  %179 = load i160, i160* %178, align 8
  %180 = and i160 %179, 15211807202738752817960438464512
  %181 = icmp eq i160 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %159
  %183 = load i32, i32* %171, align 4
  %184 = icmp eq i32 %183, %175
  br i1 %184, label %190, label %185

185:                                              ; preds = %182
  store i32 %175, i32* %171, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %163) #16
  br label %190

186:                                              ; preds = %159
  %187 = load i32, i32* %172, align 4
  %188 = icmp eq i32 %187, %175
  br i1 %188, label %190, label %189

189:                                              ; preds = %186
  store i32 %175, i32* %172, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %163) #16
  br label %190

190:                                              ; preds = %182, %185, %186, %189
  %191 = icmp sgt i32 %174, -1
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %175, i32 %174) #16
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !2
  tail call void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %196) #16
  br i1 %50, label %197, label %220

197:                                              ; preds = %190
  %198 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %199 = icmp eq %"class.blink::Node"* %198, null
  br i1 %199, label %200, label %207

200:                                              ; preds = %197, %200
  %201 = phi %"class.blink::LayoutObject"* [ %203, %200 ], [ %7, %197 ]
  %202 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %201, i64 0, i32 7
  %203 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %203, i64 0, i32 6, i32 0, i32 0
  %205 = load %"class.blink::Node"*, %"class.blink::Node"** %204, align 8
  %206 = icmp eq %"class.blink::Node"* %205, null
  br i1 %206, label %200, label %207

207:                                              ; preds = %200, %197
  %208 = phi %"class.blink::Node"* [ %198, %197 ], [ %205, %200 ]
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 0, i32 3, i32 0, i32 0
  %210 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %210, i64 0, i32 2, i32 0, i32 0
  %212 = load %"class.blink::Document"*, %"class.blink::Document"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %212, i64 0, i32 113
  %214 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %214, i64 0, i32 5, i32 0, i32 0, i32 0
  %216 = load %"class.blink::NamedPagesMapper"*, %"class.blink::NamedPagesMapper"** %215, align 8
  %217 = icmp eq %"class.blink::NamedPagesMapper"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %207
  %219 = tail call i32 @_ZNK5blink9LayoutBox17CurrentPageNumberENS_10LayoutUnitE(%"class.blink::LayoutBox"* %163, i32 %175) #16
  call void @_ZN5blink16NamedPagesMapper12AddNamedPageERKN3WTF12AtomicStringEi(%"class.blink::NamedPagesMapper"* nonnull %216, %"class.WTF::AtomicString"* dereferenceable(8) %42, i32 %219) #16
  br label %220

220:                                              ; preds = %150, %148, %190, %207, %218, %139
  %221 = phi %"class.WTF::StringImpl"* [ %39, %190 ], [ %39, %207 ], [ %39, %218 ], [ %39, %148 ], [ %140, %139 ], [ %39, %150 ]
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #16
  br label %236

236:                                              ; preds = %220, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #16
  br label %252

252:                                              ; preds = %236, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  ret void
}

declare i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox21ClassABreakPointValueENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow16ApplyForcedBreakENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %2, label %41 [
    i32 7, label %4
    i32 6, label %4
    i32 4, label %4
    i32 1, label %4
    i32 0, label %4
    i32 8, label %4
  ]

4:                                                ; preds = %3, %3, %3, %3, %3, %3
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %5) #16
  br i1 %6, label %7, label %41

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %5, i32 %1, i32 1) #16
  %9 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %5, i32 %1) #16
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %41, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %12, align 8
  %14 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %13, i64 0, i32 2, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %34

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %20, i64 0, i32 0
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %25 = bitcast i8* %24 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %25, %"class.blink::LayoutBlockFlow"* %0) #16
  %26 = getelementptr inbounds i8, i8* %24, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %20, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %25) #16
  %30 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %23, align 8
  br label %31

31:                                               ; preds = %15, %22
  %32 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %30, %22 ], [ %13, %15 ]
  %33 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %32, i64 0, i32 2, i32 0
  store i32 %1, i32* %33, align 4
  br label %34

34:                                               ; preds = %15, %31, %19
  %35 = icmp slt i32 %8, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %8) #16
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  br label %41

41:                                               ; preds = %34, %7, %4, %3
  %42 = phi i32 [ %1, %3 ], [ %1, %4 ], [ %40, %34 ], [ %1, %7 ]
  ret i32 %42
}

declare void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink16NamedPagesMapper12AddNamedPageERKN3WTF12AtomicStringEi(%"class.blink::NamedPagesMapper"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17CurrentPageNumberENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow16LayoutBlockChildERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::BlockFlowPaintInvalidator", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1
  %8 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %12 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %12, i64 24
  %14 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::LayoutObject"* %10) #16
  %16 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %17 = select i1 %15, %"class.blink::LayoutBlockFlow"* %16, %"class.blink::LayoutBlockFlow"* null
  br label %18

18:                                               ; preds = %3, %9
  %19 = phi %"class.blink::LayoutBlockFlow"* [ %17, %9 ], [ null, %3 ]
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %20, align 8
  %22 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  br label %66

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8, !noalias !75
  %33 = lshr i160 %32, 102
  %34 = trunc i160 %33 to i8
  %35 = and i8 %34, 3
  %36 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %35, label %37 [
    i8 0, label %46
    i8 1, label %38
  ]

37:                                               ; preds = %26
  br label %38

38:                                               ; preds = %37, %26
  %39 = phi { i64, i64 } [ { i64 1033, i64 0 }, %37 ], [ { i64 1041, i64 0 }, %26 ]
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  %42 = getelementptr inbounds i8, i8* %36, i64 %41
  %43 = bitcast i8* %42 to %"class.blink::LayoutBoxModelObject"*
  %44 = and i64 %40, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %38, %26
  %47 = phi %"class.blink::LayoutBoxModelObject"* [ %43, %38 ], [ %27, %26 ]
  %48 = phi i8* [ %42, %38 ], [ %36, %26 ]
  %49 = phi i64 [ %40, %38 ], [ 1017, %26 ]
  %50 = bitcast i8* %48 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = add i64 %49, -1
  %53 = getelementptr i8, i8* %51, i64 %52
  %54 = bitcast i8* %53 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %55 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, align 8
  br label %58

56:                                               ; preds = %38
  %57 = inttoptr i64 %40 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %58

58:                                               ; preds = %46, %56
  %59 = phi %"class.blink::LayoutBoxModelObject"* [ %47, %46 ], [ %43, %56 ]
  %60 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %55, %46 ], [ %57, %56 ]
  %61 = tail call i32 %60(%"class.blink::LayoutBoxModelObject"* %59) #16
  %62 = icmp sgt i32 %61, 0
  %63 = select i1 %62, i32 %61, i32 0
  %64 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %20, align 8
  %65 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %23, %58
  %67 = phi i32 [ %25, %23 ], [ %63, %58 ]
  %68 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %21, %23 ], [ %64, %58 ]
  %69 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %68, i64 0, i32 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  br label %118

71:                                               ; preds = %58
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8, !noalias !78
  %76 = lshr i160 %75, 102
  %77 = trunc i160 %76 to i8
  %78 = and i8 %77, 3
  switch i8 %78, label %79 [
    i8 0, label %88
    i8 1, label %80
  ]

79:                                               ; preds = %71
  br label %80

80:                                               ; preds = %79, %71
  %81 = phi { i64, i64 } [ { i64 1033, i64 0 }, %79 ], [ { i64 1041, i64 0 }, %71 ]
  %82 = extractvalue { i64, i64 } %81, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %36, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %80, %71
  %89 = phi %"class.blink::LayoutBoxModelObject"* [ %85, %80 ], [ %27, %71 ]
  %90 = phi i8* [ %84, %80 ], [ %36, %71 ]
  %91 = phi i64 [ %82, %80 ], [ 1017, %71 ]
  %92 = bitcast i8* %90 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = add i64 %91, -1
  %95 = getelementptr i8, i8* %93, i64 %94
  %96 = bitcast i8* %95 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %97 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %96, align 8
  br label %100

98:                                               ; preds = %80
  %99 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %100

100:                                              ; preds = %98, %88
  %101 = phi %"class.blink::LayoutBoxModelObject"* [ %89, %88 ], [ %85, %98 ]
  %102 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %97, %88 ], [ %99, %98 ]
  %103 = tail call i32 %102(%"class.blink::LayoutBoxModelObject"* %101) #16
  %104 = tail call i1 @llvm.is.constant.i32(i32 %103) #16
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = sub i32 0, %103
  %107 = icmp eq i32 %106, -2147483648
  %108 = select i1 %107, i32 2147483647, i32 %106
  br label %114

109:                                              ; preds = %100
  %110 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %103) #16
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 2147483647, i32 %112
  br label %114

114:                                              ; preds = %109, %105
  %115 = phi i32 [ %108, %105 ], [ %113, %109 ]
  %116 = icmp sgt i32 %115, 0
  %117 = select i1 %116, i32 %115, i32 0
  br label %118

118:                                              ; preds = %66, %114
  %119 = phi i32 [ %67, %66 ], [ %63, %114 ]
  %120 = phi i32 [ %70, %66 ], [ %117, %114 ]
  %121 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink9LayoutBox34ComputeAndSetBlockDirectionMarginsEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"* %121) #16
  %122 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #16
  %123 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %123, align 4
  %124 = call i32 @_ZN5blink15LayoutBlockFlow26EstimateLogicalTopPositionERNS_9LayoutBoxERKNS_23BlockChildrenLayoutInfoERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4)
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %126 = bitcast %"class.blink::LayoutRect"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %129 = bitcast %"class.blink::LayoutSize"* %128 to i64*
  %130 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %131 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %130 to i96*
  %132 = load i96, i96* %131, align 4
  %133 = and i96 %132, 1099511627776
  %134 = icmp eq i96 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %118
  %136 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %6) #16
  %137 = icmp eq %"class.blink::LayoutFlowThread"* %136, null
  br i1 %137, label %145, label %138

138:                                              ; preds = %135
  %139 = bitcast %"class.blink::LayoutFlowThread"* %136 to %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)***
  %140 = load %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)**, %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)*** %139, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)*, %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)** %140, i64 230
  %142 = load %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)*, %"class.blink::LayoutMultiColumnSet"* (%"class.blink::LayoutFlowThread"*)** %141, align 8
  %143 = tail call %"class.blink::LayoutMultiColumnSet"* %142(%"class.blink::LayoutFlowThread"* nonnull %136) #16
  %144 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 0, i32 0
  store %"class.blink::LayoutMultiColumnSet"* %143, %"class.blink::LayoutMultiColumnSet"** %144, align 8
  br label %145

145:                                              ; preds = %118, %135, %138
  %146 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow29PositionAndLayoutOnceIfNeededERNS_9LayoutBoxENS_10LayoutUnitERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %124, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2)
  %147 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %7, i64 0, i32 0
  %148 = load i16, i16* %147, align 4
  %149 = and i16 %148, 32
  %150 = icmp ne i16 %149, 0
  %151 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBox"*)***
  %152 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %151, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %152, i64 154
  %154 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %153, align 8
  %155 = tail call zeroext i1 %154(%"class.blink::LayoutBox"* %1) #16
  %156 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %157 = load %"class.blink::Node"*, %"class.blink::Node"** %156, align 8
  %158 = icmp eq %"class.blink::Node"* %157, null
  br i1 %158, label %159, label %166

159:                                              ; preds = %145, %159
  %160 = phi %"class.blink::LayoutObject"* [ %162, %159 ], [ %6, %145 ]
  %161 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %160, i64 0, i32 7
  %162 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %162, i64 0, i32 6, i32 0, i32 0
  %164 = load %"class.blink::Node"*, %"class.blink::Node"** %163, align 8
  %165 = icmp eq %"class.blink::Node"* %164, null
  br i1 %165, label %159, label %166

166:                                              ; preds = %159, %145
  %167 = phi %"class.blink::Node"* [ %157, %145 ], [ %164, %159 ]
  %168 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 0, i32 3, i32 0, i32 0
  %169 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %169, i64 0, i32 2, i32 0, i32 0
  %171 = load %"class.blink::Document"*, %"class.blink::Document"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %171, i64 0, i32 113
  %173 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %173, i64 0, i32 3
  %175 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %175, i64 0, i32 0
  %177 = load i8, i8* %176, align 8
  %178 = and i8 %177, 1
  %179 = icmp ne i8 %178, 0
  br i1 %179, label %180, label %187

180:                                              ; preds = %166
  %181 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %182 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %181, align 8
  %183 = icmp eq %"struct.blink::LayoutBoxRareData"* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %182, i64 0, i32 8, i32 0
  store i32 0, i32* %185, align 4
  br label %186

186:                                              ; preds = %180, %184
  tail call void @_ZN5blink15LayoutBlockFlow36InsertForcedBreakBeforeChildIfNeededERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2)
  br label %187

187:                                              ; preds = %186, %166
  %188 = tail call i32 @_ZN5blink15LayoutBlockFlow15CollapseMarginsERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoEb(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2, i1 zeroext %155)
  %189 = tail call i32 @_ZN5blink15LayoutBlockFlow19ClearFloatsIfNeededERNS_9LayoutBoxERNS_10MarginInfoENS_10LayoutUnitES5_S5_b(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::MarginInfo"* dereferenceable(12) %7, i32 %119, i32 %120, i32 %188, i1 zeroext %155)
  br i1 %179, label %190, label %199

190:                                              ; preds = %187
  %191 = load i32, i32* %123, align 4
  %192 = icmp eq i32 %191, %189
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow29PositionAndLayoutOnceIfNeededERNS_9LayoutBoxENS_10LayoutUnitERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %189, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2)
  br label %195

195:                                              ; preds = %190, %193
  %196 = icmp eq i32 %188, %189
  %197 = and i1 %150, %196
  %198 = tail call i32 @_ZN5blink15LayoutBlockFlow29AdjustBlockChildForPaginationENS_10LayoutUnitERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoEb(%"class.blink::LayoutBlockFlow"* %0, i32 %189, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2, i1 zeroext %197)
  br label %199

199:                                              ; preds = %195, %187
  %200 = phi i32 [ %198, %195 ], [ %189, %187 ]
  %201 = icmp eq i32 %200, %124
  br i1 %201, label %202, label %219

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %204 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %203 to i96*
  %205 = load i96, i96* %204, align 4
  %206 = and i96 %205, 63
  %207 = icmp eq i96 %206, 0
  br i1 %207, label %208, label %219

208:                                              ; preds = %202
  %209 = icmp ne %"class.blink::LayoutBlockFlow"* %19, null
  %210 = and i1 %209, %179
  br i1 %210, label %211, label %221

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %19, i64 0, i32 2, i32 0, i32 0
  %213 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %212, align 8
  %214 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %213, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %213, i64 0, i32 9
  %217 = load i32, i32* %216, align 4
  %218 = icmp sgt i32 %217, -1
  br i1 %218, label %219, label %221

219:                                              ; preds = %202, %199, %215
  %220 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow29PositionAndLayoutOnceIfNeededERNS_9LayoutBoxENS_10LayoutUnitERNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %200, %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48) %2)
  br label %221

221:                                              ; preds = %211, %219, %215, %208
  %222 = load i16, i16* %147, align 4
  %223 = and i16 %222, 8
  %224 = icmp ne i16 %223, 0
  %225 = or i1 %155, %224
  %226 = or i16 %222, 8
  %227 = select i1 %225, i16 %222, i16 %226
  %228 = and i16 %227, 32
  %229 = icmp eq i16 %228, 0
  %230 = or i1 %155, %229
  %231 = and i1 %225, %230
  br i1 %231, label %235, label %232

232:                                              ; preds = %221
  %233 = and i16 %227, -33
  %234 = select i1 %230, i16 %227, i16 %233
  store i16 %234, i16* %147, align 4
  br label %235

235:                                              ; preds = %221, %232
  tail call void @_ZN5blink15LayoutBlockFlow36DetermineLogicalLeftPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %236 = load i64, i64* %126, align 4
  %237 = trunc i64 %236 to i32
  %238 = lshr i64 %236, 32
  %239 = trunc i64 %238 to i32
  %240 = trunc i64 %127 to i32
  %241 = lshr i64 %127, 32
  %242 = trunc i64 %241 to i32
  %243 = icmp sgt i32 %240, -1
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %237, i32 %240) #16
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !2
  %249 = icmp sgt i32 %242, -1
  %250 = select i1 %249, i32 -2147483648, i32 2147483647
  %251 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %239, i32 %242) #16
  %252 = extractvalue { i32, i1 } %251, 1
  %253 = extractvalue { i32, i1 } %251, 0
  %254 = select i1 %252, i32 %250, i32 %253, !prof !2
  %255 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %257 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %257, i64 0, i32 0, i32 9
  %259 = bitcast [20 x i8]* %258 to i160*
  %260 = load i160, i160* %259, align 8
  %261 = and i160 %260, 15211807202738752817960438464512
  %262 = icmp eq i160 %261, 0
  %263 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %264 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %265 = select i1 %262, i32* %263, i32* %264
  %266 = load i32, i32* %265, align 4
  %267 = load i96, i96* %131, align 4
  %268 = trunc i96 %267 to i32
  %269 = icmp slt i32 %268, 0
  %270 = load i64, i64* %129, align 4
  %271 = lshr i64 %270, 32
  %272 = select i1 %269, i64 %271, i64 %270
  %273 = trunc i64 %272 to i32
  %274 = icmp slt i32 %273, 0
  %275 = select i1 %274, i32 -2147483648, i32 2147483647
  %276 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %266, i32 %273) #16
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = select i1 %277, i32 %275, i32 %278, !prof !2
  br i1 %262, label %280, label %284

280:                                              ; preds = %235
  %281 = load i32, i32* %263, align 4
  %282 = icmp eq i32 %281, %279
  br i1 %282, label %288, label %283

283:                                              ; preds = %280
  store i32 %279, i32* %263, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %255) #16
  br label %288

284:                                              ; preds = %235
  %285 = load i32, i32* %264, align 4
  %286 = icmp eq i32 %285, %279
  br i1 %286, label %288, label %287

287:                                              ; preds = %284
  store i32 %279, i32* %264, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %255) #16
  br label %288

288:                                              ; preds = %280, %283, %284, %287
  %289 = icmp ne %"class.blink::LayoutBlockFlow"* %19, null
  br i1 %289, label %290, label %292

290:                                              ; preds = %288
  %291 = xor i1 %146, true
  tail call void @_ZN5blink15LayoutBlockFlow20AddOverhangingFloatsEPS0_b(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %19, i1 zeroext %291)
  br label %292

292:                                              ; preds = %290, %288
  %293 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %294 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %295 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %294, align 8
  %296 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %295, i64 24
  %297 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %296, align 8
  %298 = tail call zeroext i1 %297(%"class.blink::LayoutObject"* %293) #16
  %299 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %300 = select i1 %298, %"class.blink::LayoutBlockFlow"* %299, %"class.blink::LayoutBlockFlow"* null
  %301 = load i96, i96* %131, align 4
  %302 = and i96 %301, 3
  %303 = icmp eq i96 %302, 0
  br i1 %303, label %304, label %312

304:                                              ; preds = %292
  %305 = or i32 %254, %248
  %306 = icmp eq i32 %305, 0
  %307 = icmp eq %"class.blink::LayoutBlockFlow"* %300, null
  %308 = or i1 %306, %307
  br i1 %308, label %312, label %309

309:                                              ; preds = %304
  %310 = bitcast %"class.blink::BlockFlowPaintInvalidator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #16
  %311 = getelementptr inbounds %"class.blink::BlockFlowPaintInvalidator", %"class.blink::BlockFlowPaintInvalidator"* %5, i64 0, i32 0
  store %"class.blink::LayoutBlockFlow"* %300, %"class.blink::LayoutBlockFlow"** %311, align 8
  call void @_ZN5blink25BlockFlowPaintInvalidator43InvalidatePaintForOverhangingFloatsInternalENS0_24InvalidateDescendantModeE(%"class.blink::BlockFlowPaintInvalidator"* nonnull %5, i32 1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #16
  br label %312

312:                                              ; preds = %292, %304, %309
  br i1 %179, label %313, label %375

313:                                              ; preds = %312
  %314 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %315 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %314, align 8
  %316 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %315, i64 159
  %317 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %316, align 8
  %318 = call i32 %317(%"class.blink::LayoutBox"* %1) #16
  %319 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 5
  store i32 %318, i32* %319, align 4
  %320 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %321 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %321, i64 0, i32 0, i32 9
  %323 = bitcast [20 x i8]* %322 to i160*
  %324 = load i160, i160* %323, align 8
  %325 = and i160 %324, 15211807202738752817960438464512
  %326 = icmp eq i160 %325, 0
  %327 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %328 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %329 = load i32, i32* %327, align 4
  %330 = load i32, i32* %328, align 4
  %331 = select i1 %326, i32 %329, i32 %330
  %332 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %333 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %334 = load i32, i32* %332, align 4
  %335 = load i32, i32* %333, align 4
  %336 = select i1 %326, i32 %334, i32 %335
  %337 = icmp slt i32 %336, 0
  %338 = select i1 %337, i32 -2147483648, i32 2147483647
  %339 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %331, i32 %336) #16
  %340 = extractvalue { i32, i1 } %339, 1
  %341 = extractvalue { i32, i1 } %339, 0
  %342 = select i1 %340, i32 %338, i32 %341, !prof !2
  call void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"* %121, i32 %342) #16
  br i1 %289, label %343, label %375

343:                                              ; preds = %313
  %344 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %19, i64 0, i32 2, i32 0, i32 0
  %345 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %344, align 8
  %346 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %345, null
  br i1 %346, label %375, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %345, i64 0, i32 2, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %375, label %351

351:                                              ; preds = %347
  %352 = icmp slt i32 %200, 0
  %353 = select i1 %352, i32 -2147483648, i32 2147483647
  %354 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %349, i32 %200) #16
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 %353, i32 %356, !prof !2
  %358 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %359 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %358, i64 0, i32 0
  %360 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %359, align 8
  %361 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %360, null
  br i1 %361, label %362, label %372

362:                                              ; preds = %351
  %363 = icmp eq i32 %357, 0
  br i1 %363, label %375, label %364

364:                                              ; preds = %362
  %365 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %366 = bitcast i8* %365 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %366, %"class.blink::LayoutBlockFlow"* %0) #16
  %367 = getelementptr inbounds i8, i8* %365, i64 -4
  %368 = bitcast i8* %367 to i16*
  %369 = load atomic i16, i16* %368 monotonic, align 2
  %370 = or i16 %369, 1
  store atomic i16 %370, i16* %368 release, align 2
  call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %358, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %366) #16
  %371 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %359, align 8
  br label %372

372:                                              ; preds = %364, %351
  %373 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %360, %351 ], [ %371, %364 ]
  %374 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %373, i64 0, i32 2, i32 0
  store i32 %357, i32* %374, align 4
  br label %375

375:                                              ; preds = %347, %343, %362, %372, %313, %312
  %376 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %377 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %376, align 8
  %378 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %377, i64 92
  %379 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %378, align 8
  %380 = call zeroext i1 %379(%"class.blink::LayoutObject"* %293, i32 21) #16
  br i1 %380, label %381, label %411

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1
  %383 = bitcast %"class.blink::LayoutBox"* %382 to %"class.blink::LayoutBox"**
  %384 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %386 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %385, align 8
  %387 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %386, i64 0, i32 0, i32 9
  %388 = bitcast [20 x i8]* %387 to i160*
  %389 = load i160, i160* %388, align 8
  %390 = and i160 %389, 15211807202738752817960438464512
  %391 = icmp eq i160 %390, 0
  %392 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %393 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %394 = load i32, i32* %392, align 4
  %395 = load i32, i32* %393, align 4
  %396 = select i1 %391, i32 %394, i32 %395
  %397 = load i96, i96* %131, align 4
  %398 = trunc i96 %397 to i32
  %399 = icmp slt i32 %398, 0
  br i1 %399, label %400, label %405

400:                                              ; preds = %381
  %401 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %384, i64 0, i32 2, i32 0, i32 1, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, %396
  br i1 %403, label %410, label %404

404:                                              ; preds = %400
  store i32 %396, i32* %401, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %384) #16
  br label %410

405:                                              ; preds = %381
  %406 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %384, i64 0, i32 2, i32 0, i32 0, i32 0
  %407 = load i32, i32* %406, align 4
  %408 = icmp eq i32 %407, %396
  br i1 %408, label %410, label %409

409:                                              ; preds = %405
  store i32 %396, i32* %406, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %384) #16
  br label %410

410:                                              ; preds = %400, %404, %405, %409
  call void @_ZN5blink15LayoutBlockFlow36DetermineLogicalLeftPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %384) #16
  br label %411

411:                                              ; preds = %410, %375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #16
  ret void
}

declare void @_ZN5blink9LayoutBox34ComputeAndSetBlockDirectionMarginsEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow26EstimateLogicalTopPositionERNS_9LayoutBoxERKNS_23BlockChildrenLayoutInfoERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::BlockChildrenLayoutInfo"* nocapture readonly dereferenceable(48), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %24 = select i1 %21, i32* %22, i32* %23
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %5, align 4
  %26 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 0, i32* %27, align 4
  %28 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 0
  %31 = load i16, i16* %30, align 4
  %32 = and i16 %31, 34
  %33 = icmp eq i16 %32, 34
  br i1 %33, label %92, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 3
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  call void @_ZNK5blink15LayoutBlockFlow28MarginBeforeEstimateForChildERNS_9LayoutBoxERNS_10LayoutUnitES4_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7)
  %41 = load i32, i32* %27, align 4
  %42 = load i32, i32* %29, align 4
  br label %61

43:                                               ; preds = %34
  %44 = tail call { i64, i64 } @_ZNK5blink15LayoutBlockFlow20MarginValuesForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  store i32 %46, i32* %8, align 4
  %50 = icmp sgt i32 %46, 0
  %51 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %52 = select i1 %50, %"class.blink::LayoutUnit"* %51, %"class.blink::LayoutUnit"* %6
  %53 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  %55 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store i32 %48, i32* %9, align 4
  %56 = icmp sgt i32 %48, 0
  %57 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %58 = select i1 %56, %"class.blink::LayoutUnit"* %57, %"class.blink::LayoutUnit"* %7
  %59 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %29, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  br label %61

61:                                               ; preds = %43, %40
  %62 = phi i32 [ %60, %43 ], [ %42, %40 ]
  %63 = phi i32 [ %54, %43 ], [ %41, %40 ]
  %64 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  %65 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 1, i32 0
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %10, align 4
  %67 = icmp slt i32 %66, %63
  %68 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %69 = select i1 %67, %"class.blink::LayoutUnit"* %6, %"class.blink::LayoutUnit"* %68
  %70 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  %71 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 2, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %11, align 4
  %73 = icmp slt i32 %72, %62
  %74 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %75 = select i1 %73, %"class.blink::LayoutUnit"* %7, %"class.blink::LayoutUnit"* %74
  %76 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %75, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, -1
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %79) #16
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = icmp slt i32 %85, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %85) #16
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  store i32 %91, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  br label %92

92:                                               ; preds = %61, %4
  %93 = phi i32 [ %62, %61 ], [ 0, %4 ]
  %94 = phi i32 [ %63, %61 ], [ 0, %4 ]
  %95 = phi i32 [ %91, %61 ], [ %25, %4 ]
  %96 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %97 = load %"class.blink::Node"*, %"class.blink::Node"** %96, align 8
  %98 = icmp eq %"class.blink::Node"* %97, null
  br i1 %98, label %99, label %106

99:                                               ; preds = %92, %99
  %100 = phi %"class.blink::LayoutObject"* [ %102, %99 ], [ %12, %92 ]
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %100, i64 0, i32 7
  %102 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 6, i32 0, i32 0
  %104 = load %"class.blink::Node"*, %"class.blink::Node"** %103, align 8
  %105 = icmp eq %"class.blink::Node"* %104, null
  br i1 %105, label %99, label %106

106:                                              ; preds = %99, %92
  %107 = phi %"class.blink::Node"* [ %97, %92 ], [ %104, %99 ]
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %111, i64 0, i32 113
  %113 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %113, i64 0, i32 3
  %115 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %115, i64 0, i32 0
  %117 = load i8, i8* %116, align 8
  %118 = and i8 %117, 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %174, label %120

120:                                              ; preds = %106
  %121 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %14) #16
  br i1 %121, label %122, label %174

122:                                              ; preds = %120
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 9
  %125 = bitcast [20 x i8]* %124 to i160*
  %126 = load i160, i160* %125, align 8
  %127 = and i160 %126, 15211807202738752817960438464512
  %128 = icmp eq i160 %127, 0
  %129 = select i1 %128, i32* %22, i32* %23
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, -1
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %95, i32 %130) #16
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !2
  %137 = icmp slt i32 %136, 1
  br i1 %137, label %162, label %138

138:                                              ; preds = %122
  %139 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 5
  %140 = load i32, i32* %139, align 4
  %141 = tail call zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %140) #16
  br i1 %141, label %152, label %142

142:                                              ; preds = %138
  %143 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %14) #16
  %144 = icmp slt i32 %130, 0
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %130) #16
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !2
  %150 = icmp slt i32 %149, 1
  %151 = zext i1 %150 to i32
  br label %152

152:                                              ; preds = %142, %138
  %153 = phi i32 [ %151, %142 ], [ 1, %138 ]
  %154 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %14, i32 %130, i32 %153) #16
  %155 = icmp slt i32 %154, %136
  %156 = select i1 %155, i32 %154, i32 %136
  %157 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %158 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %157, i64 0, i32 0, i32 9
  %159 = bitcast [20 x i8]* %158 to i160*
  %160 = load i160, i160* %159, align 8
  %161 = and i160 %160, 15211807202738752817960438464512
  br label %162

162:                                              ; preds = %122, %152
  %163 = phi i160 [ %127, %122 ], [ %161, %152 ]
  %164 = phi i32 [ %136, %122 ], [ %156, %152 ]
  %165 = icmp eq i160 %163, 0
  %166 = select i1 %165, i32* %22, i32* %23
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %164, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %167, i32 %164) #16
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !2
  store i32 %173, i32* %5, align 4
  br label %174

174:                                              ; preds = %106, %162, %120
  %175 = phi i32 [ %95, %106 ], [ %173, %162 ], [ %95, %120 ]
  %176 = tail call i32 @_ZN5blink15LayoutBlockFlow13GetClearDeltaEPNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* %1, i32 %175)
  %177 = icmp slt i32 %176, 0
  %178 = select i1 %177, i32 -2147483648, i32 2147483647
  %179 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %175, i32 %176) #16
  %180 = extractvalue { i32, i1 } %179, 1
  %181 = extractvalue { i32, i1 } %179, 0
  %182 = select i1 %180, i32 %178, i32 %181, !prof !2
  store i32 %182, i32* %5, align 4
  %183 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %182, i32* %183, align 4
  %184 = load i8, i8* %116, align 8
  %185 = and i8 %184, 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %225, label %187

187:                                              ; preds = %174
  %188 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 6
  %189 = load i8, i8* %188, align 8, !range !21
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %225

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 5
  %193 = load i32, i32* %192, align 4
  %194 = tail call i32 @_ZNK5blink9LayoutBox21ClassABreakPointValueENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %193) #16
  switch i32 %194, label %195 [
    i32 7, label %197
    i32 6, label %197
    i32 4, label %197
    i32 1, label %197
    i32 0, label %197
    i32 8, label %197
  ]

195:                                              ; preds = %191
  %196 = tail call i32 @_ZNK5blink15LayoutBlockFlow26AdjustForUnsplittableChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %182)
  store i32 %196, i32* %5, align 4
  br label %225

197:                                              ; preds = %191, %191, %191, %191, %191, %191
  %198 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %198, i64 0, i32 0, i32 9
  %200 = bitcast [20 x i8]* %199 to i160*
  %201 = load i160, i160* %200, align 8
  %202 = and i160 %201, 15211807202738752817960438464512
  %203 = icmp eq i160 %202, 0
  %204 = select i1 %203, i32* %22, i32* %23
  %205 = load i32, i32* %204, align 4
  %206 = tail call i32 @_ZN5blink15LayoutBlockFlow16ApplyForcedBreakENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"* %0, i32 %205, i32 %194)
  %207 = icmp sgt i32 %93, -1
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %93) #16
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  %213 = icmp slt i32 %212, 0
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %212) #16
  %216 = extractvalue { i32, i1 } %215, 1
  %217 = extractvalue { i32, i1 } %215, 0
  %218 = select i1 %216, i32 %214, i32 %217, !prof !2
  store i32 %218, i32* %5, align 4
  %219 = load i32, i32* %183, align 4
  %220 = icmp slt i32 %219, %218
  %221 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %222 = select i1 %220, %"class.blink::LayoutUnit"* %221, %"class.blink::LayoutUnit"* %3
  %223 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br label %225

225:                                              ; preds = %195, %174, %187, %197
  %226 = phi i32 [ %224, %197 ], [ %182, %187 ], [ %182, %174 ], [ %196, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  ret i32 %226
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow15CollapseMarginsERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoEb(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::BlockChildrenLayoutInfo"* dereferenceable(48), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call { i64, i64 } @_ZNK5blink15LayoutBlockFlow20MarginValuesForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = extractvalue { i64, i64 } %6, 1
  br i1 %3, label %12, label %20

12:                                               ; preds = %4
  %13 = trunc i64 %11 to i32
  %14 = icmp slt i32 %8, %13
  %15 = select i1 %14, i32 %13, i32 %8
  %16 = lshr i64 %11, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp slt i32 %10, %17
  %19 = select i1 %18, i32 %17, i32 %10
  br label %20

20:                                               ; preds = %12, %4
  %21 = phi i32 [ %19, %12 ], [ %10, %4 ]
  %22 = phi i32 [ %15, %12 ], [ %8, %4 ]
  %23 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %24 = tail call zeroext i1 @_ZNK5blink11LayoutBlock20HasMarginBeforeQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %23, %"class.blink::LayoutBox"* %1) #16
  %25 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 0
  %26 = load i16, i16* %25, align 4
  %27 = and i16 %26, 34
  %28 = icmp eq i16 %27, 34
  br i1 %28, label %29, label %232

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %29, %33
  %34 = phi %"class.blink::LayoutObject"* [ %36, %33 ], [ %5, %29 ]
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 7
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %33, label %40

40:                                               ; preds = %33, %29
  %41 = phi %"class.blink::Node"* [ %31, %29 ], [ %38, %33 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 33
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %40
  %50 = and i16 %26, 16
  %51 = icmp eq i16 %50, 0
  %52 = xor i1 %24, true
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %166

54:                                               ; preds = %49, %40
  %55 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %56 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %55, align 8
  %57 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %56, i64 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %22, %60
  %62 = select i1 %61, i32 %60, i32 %22
  br label %105

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8, !noalias !81
  %70 = lshr i160 %69, 102
  %71 = trunc i160 %70 to i8
  %72 = and i8 %71, 3
  %73 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %72, label %74 [
    i8 0, label %83
    i8 1, label %75
  ]

74:                                               ; preds = %63
  br label %75

75:                                               ; preds = %74, %63
  %76 = phi { i64, i64 } [ { i64 1033, i64 0 }, %74 ], [ { i64 1041, i64 0 }, %63 ]
  %77 = extractvalue { i64, i64 } %76, 0
  %78 = extractvalue { i64, i64 } %76, 1
  %79 = getelementptr inbounds i8, i8* %73, i64 %78
  %80 = bitcast i8* %79 to %"class.blink::LayoutBoxModelObject"*
  %81 = and i64 %77, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %75, %63
  %84 = phi %"class.blink::LayoutBoxModelObject"* [ %80, %75 ], [ %64, %63 ]
  %85 = phi i8* [ %79, %75 ], [ %73, %63 ]
  %86 = phi i64 [ %77, %75 ], [ 1017, %63 ]
  %87 = bitcast i8* %85 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = add i64 %86, -1
  %90 = getelementptr i8, i8* %88, i64 %89
  %91 = bitcast i8* %90 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %92 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %91, align 8
  br label %95

93:                                               ; preds = %75
  %94 = inttoptr i64 %77 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %95

95:                                               ; preds = %83, %93
  %96 = phi %"class.blink::LayoutBoxModelObject"* [ %84, %83 ], [ %80, %93 ]
  %97 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %92, %83 ], [ %94, %93 ]
  %98 = tail call i32 %97(%"class.blink::LayoutBoxModelObject"* %96) #16
  %99 = icmp sgt i32 %98, 0
  %100 = select i1 %99, i32 %98, i32 0
  %101 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %55, align 8
  %102 = icmp slt i32 %22, %100
  %103 = select i1 %102, i32 %100, i32 %22
  %104 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %101, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %58, %95
  %106 = phi i32 [ %62, %58 ], [ %103, %95 ]
  %107 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %56, %58 ], [ %101, %95 ]
  %108 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %107, i64 0, i32 0, i32 1, i32 0
  %109 = load i32, i32* %108, align 4
  br label %160

110:                                              ; preds = %95
  %111 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8, !noalias !84
  %117 = lshr i160 %116, 102
  %118 = trunc i160 %117 to i8
  %119 = and i8 %118, 3
  %120 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %119, label %121 [
    i8 0, label %130
    i8 1, label %122
  ]

121:                                              ; preds = %110
  br label %122

122:                                              ; preds = %121, %110
  %123 = phi { i64, i64 } [ { i64 1033, i64 0 }, %121 ], [ { i64 1041, i64 0 }, %110 ]
  %124 = extractvalue { i64, i64 } %123, 0
  %125 = extractvalue { i64, i64 } %123, 1
  %126 = getelementptr inbounds i8, i8* %120, i64 %125
  %127 = bitcast i8* %126 to %"class.blink::LayoutBoxModelObject"*
  %128 = and i64 %124, 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %140, label %130

130:                                              ; preds = %122, %110
  %131 = phi %"class.blink::LayoutBoxModelObject"* [ %127, %122 ], [ %111, %110 ]
  %132 = phi i8* [ %126, %122 ], [ %120, %110 ]
  %133 = phi i64 [ %124, %122 ], [ 1017, %110 ]
  %134 = bitcast i8* %132 to i8**
  %135 = load i8*, i8** %134, align 8
  %136 = add i64 %133, -1
  %137 = getelementptr i8, i8* %135, i64 %136
  %138 = bitcast i8* %137 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %139 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %138, align 8
  br label %142

140:                                              ; preds = %122
  %141 = inttoptr i64 %124 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %142

142:                                              ; preds = %140, %130
  %143 = phi %"class.blink::LayoutBoxModelObject"* [ %131, %130 ], [ %127, %140 ]
  %144 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %139, %130 ], [ %141, %140 ]
  %145 = tail call i32 %144(%"class.blink::LayoutBoxModelObject"* %143) #16
  %146 = tail call i1 @llvm.is.constant.i32(i32 %145) #16
  br i1 %146, label %147, label %151

147:                                              ; preds = %142
  %148 = sub i32 0, %145
  %149 = icmp eq i32 %148, -2147483648
  %150 = select i1 %149, i32 2147483647, i32 %148
  br label %156

151:                                              ; preds = %142
  %152 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %145) #16
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 2147483647, i32 %154
  br label %156

156:                                              ; preds = %151, %147
  %157 = phi i32 [ %150, %147 ], [ %155, %151 ]
  %158 = icmp sgt i32 %157, 0
  %159 = select i1 %158, i32 %157, i32 0
  br label %160

160:                                              ; preds = %105, %156
  %161 = phi i32 [ %106, %105 ], [ %103, %156 ]
  %162 = phi i32 [ %109, %105 ], [ %159, %156 ]
  %163 = icmp slt i32 %21, %162
  %164 = select i1 %163, i32 %162, i32 %21
  tail call void @_ZN5blink15LayoutBlockFlow24SetMaxMarginBeforeValuesENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %161, i32 %164)
  %165 = load i16, i16* %25, align 4
  br label %166

166:                                              ; preds = %49, %160
  %167 = phi i16 [ %26, %49 ], [ %165, %160 ]
  %168 = and i16 %167, 512
  %169 = icmp ne i16 %168, 0
  %170 = or i1 %24, %169
  br i1 %170, label %185, label %171

171:                                              ; preds = %166
  %172 = icmp sgt i32 %21, -1
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %21) #16
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %181 = load i16, i16* %180, align 8
  %182 = and i16 %181, -2
  store i16 %182, i16* %180, align 8
  %183 = load i16, i16* %25, align 4
  %184 = or i16 %183, 512
  store i16 %184, i16* %25, align 4
  br label %185

185:                                              ; preds = %171, %166, %179
  %186 = phi i16 [ %167, %171 ], [ %167, %166 ], [ %184, %179 ]
  %187 = and i16 %186, 512
  %188 = icmp ne i16 %187, 0
  %189 = xor i1 %24, true
  %190 = or i1 %188, %189
  br i1 %190, label %232, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %194 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %194, i64 0, i32 0, i32 9
  %196 = bitcast [20 x i8]* %195 to i160*
  %197 = load i160, i160* %196, align 8, !noalias !87
  %198 = lshr i160 %197, 102
  %199 = trunc i160 %198 to i8
  %200 = and i8 %199, 3
  %201 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %200, label %202 [
    i8 0, label %211
    i8 1, label %203
  ]

202:                                              ; preds = %191
  br label %203

203:                                              ; preds = %202, %191
  %204 = phi { i64, i64 } [ { i64 1033, i64 0 }, %202 ], [ { i64 1041, i64 0 }, %191 ]
  %205 = extractvalue { i64, i64 } %204, 0
  %206 = extractvalue { i64, i64 } %204, 1
  %207 = getelementptr inbounds i8, i8* %201, i64 %206
  %208 = bitcast i8* %207 to %"class.blink::LayoutBoxModelObject"*
  %209 = and i64 %205, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %221, label %211

211:                                              ; preds = %203, %191
  %212 = phi %"class.blink::LayoutBoxModelObject"* [ %208, %203 ], [ %192, %191 ]
  %213 = phi i8* [ %207, %203 ], [ %201, %191 ]
  %214 = phi i64 [ %205, %203 ], [ 1017, %191 ]
  %215 = bitcast i8* %213 to i8**
  %216 = load i8*, i8** %215, align 8
  %217 = add i64 %214, -1
  %218 = getelementptr i8, i8* %216, i64 %217
  %219 = bitcast i8* %218 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %220 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %219, align 8
  br label %223

221:                                              ; preds = %203
  %222 = inttoptr i64 %205 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %223

223:                                              ; preds = %211, %221
  %224 = phi %"class.blink::LayoutBoxModelObject"* [ %212, %211 ], [ %208, %221 ]
  %225 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %220, %211 ], [ %222, %221 ]
  %226 = tail call i32 %225(%"class.blink::LayoutBoxModelObject"* %224) #16
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %232

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %230 = load i16, i16* %229, align 8
  %231 = or i16 %230, 1
  store i16 %231, i16* %229, align 8
  br label %232

232:                                              ; preds = %223, %185, %228, %20
  %233 = load i16, i16* %25, align 4
  %234 = and i16 %233, 48
  %235 = icmp eq i16 %234, 48
  br i1 %235, label %236, label %249

236:                                              ; preds = %232
  %237 = icmp sgt i32 %21, -1
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %21) #16
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %249, label %244

244:                                              ; preds = %236
  %245 = zext i1 %24 to i16
  %246 = shl nuw nsw i16 %245, 7
  %247 = and i16 %233, -129
  %248 = or i16 %247, %246
  store i16 %248, i16* %25, align 4
  br label %249

249:                                              ; preds = %236, %232, %244
  %250 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %251 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %252 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %252, i64 0, i32 0, i32 9
  %254 = bitcast [20 x i8]* %253 to i160*
  %255 = load i160, i160* %254, align 8
  %256 = and i160 %255, 15211807202738752817960438464512
  %257 = icmp eq i160 %256, 0
  %258 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %259 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %260 = select i1 %257, i32* %258, i32* %259
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %263 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 8
  %264 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %263, align 8
  %265 = icmp eq %"class.blink::LayoutObject"* %264, null
  br i1 %265, label %321, label %266

266:                                              ; preds = %249
  %267 = bitcast %"class.blink::LayoutObject"* %264 to i1 (%"class.blink::LayoutObject"*)***
  %268 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %267, align 8
  %269 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %268, i64 24
  %270 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %269, align 8
  %271 = tail call zeroext i1 %270(%"class.blink::LayoutObject"* nonnull %264) #16
  br i1 %271, label %272, label %321

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %264, i64 0, i32 4
  %274 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %273 to i96*
  %275 = load i96, i96* %274, align 4
  %276 = and i96 %275, 8388608
  %277 = icmp eq i96 %276, 0
  %278 = and i96 %275, 113336795588871485128704
  %279 = icmp ne i96 %278, 75557863725914323419136
  %280 = and i1 %277, %279
  %281 = load i16, i16* %25, align 4
  %282 = and i16 %281, 34
  %283 = icmp ne i16 %282, 34
  %284 = and i1 %280, %283
  %285 = and i16 %281, 1024
  %286 = icmp ne i16 %285, 0
  %287 = and i1 %286, %284
  br i1 %287, label %288, label %321

288:                                              ; preds = %272
  %289 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %290 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %289, i64 0, i32 0, i32 9
  %291 = bitcast [20 x i8]* %290 to i160*
  %292 = load i160, i160* %291, align 8
  %293 = and i160 %292, 15211807202738752817960438464512
  %294 = icmp eq i160 %293, 0
  %295 = select i1 %294, i32* %258, i32* %259
  %296 = load i32, i32* %295, align 4
  %297 = bitcast %"class.blink::LayoutObject"* %264 to %"class.blink::LayoutBox"*
  %298 = tail call { i64, i64 } @_ZNK5blink15LayoutBlockFlow20MarginValuesForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %297)
  %299 = extractvalue { i64, i64 } %298, 0
  %300 = trunc i64 %299 to i32
  %301 = icmp sgt i32 %300, -1
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  %303 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %296, i32 %300) #16
  %304 = extractvalue { i32, i1 } %303, 1
  %305 = extractvalue { i32, i1 } %303, 0
  %306 = select i1 %304, i32 %302, i32 %305, !prof !2
  %307 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %308 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %307, i64 0, i32 0, i32 9
  %309 = bitcast [20 x i8]* %308 to i160*
  %310 = load i160, i160* %309, align 8
  %311 = and i160 %310, 15211807202738752817960438464512
  %312 = icmp eq i160 %311, 0
  br i1 %312, label %313, label %317

313:                                              ; preds = %288
  %314 = load i32, i32* %258, align 4
  %315 = icmp eq i32 %314, %306
  br i1 %315, label %321, label %316

316:                                              ; preds = %313
  store i32 %306, i32* %258, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %321

317:                                              ; preds = %288
  %318 = load i32, i32* %259, align 4
  %319 = icmp eq i32 %318, %306
  br i1 %319, label %321, label %320

320:                                              ; preds = %317
  store i32 %306, i32* %259, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %321

321:                                              ; preds = %266, %272, %249, %320, %317, %316, %313
  %322 = phi i1 [ %280, %272 ], [ true, %313 ], [ true, %316 ], [ true, %317 ], [ true, %320 ], [ false, %266 ], [ false, %249 ]
  br i1 %3, label %323, label %365

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 1, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = icmp slt i32 %325, %8
  %327 = select i1 %326, i32 %8, i32 %325
  %328 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 2, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = icmp slt i32 %329, %10
  %331 = select i1 %330, i32 %10, i32 %329
  store i32 %327, i32* %324, align 4
  store i32 %331, i32* %328, align 4
  %332 = trunc i64 %11 to i32
  %333 = icmp slt i32 %327, %332
  br i1 %333, label %334, label %335

334:                                              ; preds = %323
  store i32 %332, i32* %324, align 4
  br label %335

335:                                              ; preds = %323, %334
  %336 = lshr i64 %11, 32
  %337 = trunc i64 %336 to i32
  %338 = icmp slt i32 %331, %337
  br i1 %338, label %339, label %340

339:                                              ; preds = %335
  store i32 %337, i32* %328, align 4
  br label %340

340:                                              ; preds = %335, %339
  %341 = load i16, i16* %25, align 4
  %342 = and i16 %341, 34
  %343 = icmp eq i16 %342, 34
  br i1 %343, label %462, label %344

344:                                              ; preds = %340
  %345 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %346 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %345, i64 0, i32 0, i32 9
  %347 = bitcast [20 x i8]* %346 to i160*
  %348 = load i160, i160* %347, align 8
  %349 = and i160 %348, 15211807202738752817960438464512
  %350 = icmp eq i160 %349, 0
  %351 = select i1 %350, i32* %258, i32* %259
  %352 = load i32, i32* %351, align 4
  %353 = icmp slt i32 %327, 0
  %354 = select i1 %353, i32 -2147483648, i32 2147483647
  %355 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %352, i32 %327) #16
  %356 = extractvalue { i32, i1 } %355, 1
  %357 = extractvalue { i32, i1 } %355, 0
  %358 = select i1 %356, i32 %354, i32 %357, !prof !2
  %359 = icmp sgt i32 %331, -1
  %360 = select i1 %359, i32 -2147483648, i32 2147483647
  %361 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %358, i32 %331) #16
  %362 = extractvalue { i32, i1 } %361, 1
  %363 = extractvalue { i32, i1 } %361, 0
  %364 = select i1 %362, i32 %360, i32 %363, !prof !2
  br label %462

365:                                              ; preds = %321
  %366 = load i16, i16* %25, align 4
  %367 = and i16 %366, 32
  %368 = icmp eq i16 %367, 0
  br i1 %368, label %395, label %369

369:                                              ; preds = %365
  %370 = and i16 %366, 2
  %371 = icmp eq i16 %370, 0
  br i1 %371, label %372, label %441

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %374 = load %"class.blink::Node"*, %"class.blink::Node"** %373, align 8
  %375 = icmp eq %"class.blink::Node"* %374, null
  br i1 %375, label %376, label %383

376:                                              ; preds = %372, %376
  %377 = phi %"class.blink::LayoutObject"* [ %379, %376 ], [ %5, %372 ]
  %378 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %377, i64 0, i32 7
  %379 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %379, i64 0, i32 6, i32 0, i32 0
  %381 = load %"class.blink::Node"*, %"class.blink::Node"** %380, align 8
  %382 = icmp eq %"class.blink::Node"* %381, null
  br i1 %382, label %376, label %383

383:                                              ; preds = %376, %372
  %384 = phi %"class.blink::Node"* [ %374, %372 ], [ %381, %376 ]
  %385 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %384, i64 0, i32 3, i32 0, i32 0
  %386 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %385, align 8
  %387 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %386, i64 0, i32 2, i32 0, i32 0
  %388 = load %"class.blink::Document"*, %"class.blink::Document"** %387, align 8
  %389 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %388, i64 0, i32 33
  %390 = load i32, i32* %389, align 8
  %391 = icmp eq i32 %390, 0
  %392 = and i16 %366, 144
  %393 = icmp eq i16 %392, 144
  %394 = and i1 %393, %391
  br i1 %394, label %441, label %395

395:                                              ; preds = %365, %383
  %396 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %397 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %396, i64 0, i32 0, i32 9
  %398 = bitcast [20 x i8]* %397 to i160*
  %399 = load i160, i160* %398, align 8
  %400 = and i160 %399, 15211807202738752817960438464512
  %401 = icmp eq i160 %400, 0
  %402 = select i1 %401, i32* %258, i32* %259
  %403 = load i32, i32* %402, align 4
  %404 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 1, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = icmp slt i32 %405, %22
  %407 = select i1 %406, i32 %22, i32 %405
  %408 = icmp slt i32 %407, 0
  %409 = select i1 %408, i32 -2147483648, i32 2147483647
  %410 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %403, i32 %407) #16
  %411 = extractvalue { i32, i1 } %410, 1
  %412 = extractvalue { i32, i1 } %410, 0
  %413 = select i1 %411, i32 %409, i32 %412, !prof !2
  %414 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 2, i32 0
  %415 = load i32, i32* %414, align 4
  %416 = icmp slt i32 %415, %21
  %417 = select i1 %416, i32 %21, i32 %415
  %418 = icmp sgt i32 %417, -1
  %419 = select i1 %418, i32 -2147483648, i32 2147483647
  %420 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %413, i32 %417) #16
  %421 = extractvalue { i32, i1 } %420, 1
  %422 = extractvalue { i32, i1 } %420, 0
  %423 = select i1 %421, i32 %419, i32 %422, !prof !2
  br i1 %401, label %424, label %428

424:                                              ; preds = %395
  %425 = load i32, i32* %258, align 4
  %426 = icmp eq i32 %425, %423
  br i1 %426, label %432, label %427

427:                                              ; preds = %424
  store i32 %423, i32* %258, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %432

428:                                              ; preds = %395
  %429 = load i32, i32* %259, align 4
  %430 = icmp eq i32 %429, %423
  br i1 %430, label %432, label %431

431:                                              ; preds = %428
  store i32 %423, i32* %259, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %432

432:                                              ; preds = %424, %427, %428, %431
  %433 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %434 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %433, i64 0, i32 0, i32 9
  %435 = bitcast [20 x i8]* %434 to i160*
  %436 = load i160, i160* %435, align 8
  %437 = and i160 %436, 15211807202738752817960438464512
  %438 = icmp eq i160 %437, 0
  %439 = select i1 %438, i32* %258, i32* %259
  %440 = load i32, i32* %439, align 4
  br label %441

441:                                              ; preds = %369, %383, %432
  %442 = phi i32 [ %261, %369 ], [ %440, %432 ], [ %261, %383 ]
  %443 = trunc i64 %11 to i32
  %444 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 1, i32 0
  store i32 %443, i32* %444, align 4
  %445 = lshr i64 %11, 32
  %446 = trunc i64 %445 to i32
  %447 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 2, i32 0
  store i32 %446, i32* %447, align 4
  %448 = icmp sgt i32 %446, -1
  %449 = select i1 %448, i32 -2147483648, i32 2147483647
  %450 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %443, i32 %446) #16
  %451 = extractvalue { i32, i1 } %450, 1
  %452 = extractvalue { i32, i1 } %450, 0
  %453 = select i1 %451, i32 %449, i32 %452, !prof !2
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %462, label %455

455:                                              ; preds = %441
  %456 = tail call zeroext i1 @_ZNK5blink11LayoutBlock19HasMarginAfterQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %23, %"class.blink::LayoutBox"* %1) #16
  %457 = zext i1 %456 to i16
  %458 = load i16, i16* %25, align 4
  %459 = shl nuw nsw i16 %457, 8
  %460 = and i16 %458, -257
  %461 = or i16 %460, %459
  store i16 %461, i16* %25, align 4
  br label %462

462:                                              ; preds = %441, %340, %344, %455
  %463 = phi i32 [ %442, %455 ], [ %442, %441 ], [ %261, %340 ], [ %364, %344 ]
  %464 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %465 = load %"class.blink::Node"*, %"class.blink::Node"** %464, align 8
  %466 = icmp eq %"class.blink::Node"* %465, null
  br i1 %466, label %467, label %474

467:                                              ; preds = %462, %467
  %468 = phi %"class.blink::LayoutObject"* [ %470, %467 ], [ %5, %462 ]
  %469 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %468, i64 0, i32 7
  %470 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %469, align 8
  %471 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %470, i64 0, i32 6, i32 0, i32 0
  %472 = load %"class.blink::Node"*, %"class.blink::Node"** %471, align 8
  %473 = icmp eq %"class.blink::Node"* %472, null
  br i1 %473, label %467, label %474

474:                                              ; preds = %467, %462
  %475 = phi %"class.blink::Node"* [ %465, %462 ], [ %472, %467 ]
  %476 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %475, i64 0, i32 3, i32 0, i32 0
  %477 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %476, align 8
  %478 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %477, i64 0, i32 2, i32 0, i32 0
  %479 = load %"class.blink::Document"*, %"class.blink::Document"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %479, i64 0, i32 113
  %481 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %480, align 8
  %482 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %481, i64 0, i32 3
  %483 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %482, align 8
  %484 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %483, i64 0, i32 0
  %485 = load i8, i8* %484, align 8
  %486 = and i8 %485, 1
  %487 = icmp eq i8 %486, 0
  br i1 %487, label %553, label %488

488:                                              ; preds = %474
  %489 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %250) #16
  br i1 %489, label %490, label %553

490:                                              ; preds = %488
  %491 = icmp sgt i32 %261, -1
  %492 = select i1 %491, i32 -2147483648, i32 2147483647
  %493 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %463, i32 %261) #16
  %494 = extractvalue { i32, i1 } %493, 1
  %495 = extractvalue { i32, i1 } %493, 0
  %496 = select i1 %494, i32 %492, i32 %495, !prof !2
  %497 = icmp slt i32 %496, 1
  br i1 %497, label %517, label %498

498:                                              ; preds = %490
  %499 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 5
  %500 = load i32, i32* %499, align 4
  %501 = tail call zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %500) #16
  br i1 %501, label %512, label %502

502:                                              ; preds = %498
  %503 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %250) #16
  %504 = icmp slt i32 %261, 0
  %505 = select i1 %504, i32 -2147483648, i32 2147483647
  %506 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %503, i32 %261) #16
  %507 = extractvalue { i32, i1 } %506, 1
  %508 = extractvalue { i32, i1 } %506, 0
  %509 = select i1 %507, i32 %505, i32 %508, !prof !2
  %510 = icmp slt i32 %509, 1
  %511 = zext i1 %510 to i32
  br label %512

512:                                              ; preds = %502, %498
  %513 = phi i32 [ %511, %502 ], [ 1, %498 ]
  %514 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %250, i32 %261, i32 %513) #16
  %515 = icmp slt i32 %514, %496
  %516 = select i1 %515, i32 %514, i32 %496
  br label %517

517:                                              ; preds = %490, %512
  %518 = phi i32 [ %516, %512 ], [ %496, %490 ]
  %519 = icmp slt i32 %518, 0
  %520 = select i1 %519, i32 -2147483648, i32 2147483647
  %521 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %261, i32 %518) #16
  %522 = extractvalue { i32, i1 } %521, 1
  %523 = extractvalue { i32, i1 } %521, 0
  %524 = select i1 %522, i32 %520, i32 %523, !prof !2
  %525 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %526 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %525, i64 0, i32 0, i32 9
  %527 = bitcast [20 x i8]* %526 to i160*
  %528 = load i160, i160* %527, align 8
  %529 = and i160 %528, 15211807202738752817960438464512
  %530 = icmp eq i160 %529, 0
  %531 = select i1 %530, i32* %258, i32* %259
  %532 = load i32, i32* %531, align 4
  %533 = icmp sgt i32 %463, -1
  %534 = select i1 %533, i32 -2147483648, i32 2147483647
  %535 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %524, i32 %463) #16
  %536 = extractvalue { i32, i1 } %535, 1
  %537 = extractvalue { i32, i1 } %535, 0
  %538 = select i1 %536, i32 %534, i32 %537, !prof !2
  %539 = icmp slt i32 %538, 0
  %540 = select i1 %539, i32 -2147483648, i32 2147483647
  %541 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %532, i32 %538) #16
  %542 = extractvalue { i32, i1 } %541, 1
  %543 = extractvalue { i32, i1 } %541, 0
  %544 = select i1 %542, i32 %540, i32 %543, !prof !2
  br i1 %530, label %545, label %549

545:                                              ; preds = %517
  %546 = load i32, i32* %258, align 4
  %547 = icmp eq i32 %546, %544
  br i1 %547, label %553, label %548

548:                                              ; preds = %545
  store i32 %544, i32* %258, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %553

549:                                              ; preds = %517
  %550 = load i32, i32* %259, align 4
  %551 = icmp eq i32 %550, %544
  br i1 %551, label %553, label %552

552:                                              ; preds = %549
  store i32 %544, i32* %259, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %553

553:                                              ; preds = %474, %552, %549, %548, %545, %488
  %554 = phi i32 [ %463, %488 ], [ %463, %474 ], [ %524, %545 ], [ %524, %548 ], [ %524, %549 ], [ %524, %552 ]
  %555 = icmp slt i32 %554, %261
  br i1 %555, label %556, label %710

556:                                              ; preds = %553
  %557 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %558 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %557, i64 0, i32 0, i32 9
  %559 = bitcast [20 x i8]* %558 to i160*
  %560 = load i160, i160* %559, align 8
  %561 = and i160 %560, 15211807202738752817960438464512
  %562 = icmp eq i160 %561, 0
  %563 = select i1 %562, i32* %258, i32* %259
  %564 = load i32, i32* %563, align 4
  br i1 %562, label %565, label %569

565:                                              ; preds = %556
  %566 = load i32, i32* %258, align 4
  %567 = icmp eq i32 %566, %554
  br i1 %567, label %573, label %568

568:                                              ; preds = %565
  store i32 %554, i32* %258, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %573

569:                                              ; preds = %556
  %570 = load i32, i32* %259, align 4
  %571 = icmp eq i32 %570, %554
  br i1 %571, label %573, label %572

572:                                              ; preds = %569
  store i32 %554, i32* %259, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %573

573:                                              ; preds = %565, %568, %569, %572
  %574 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %263, align 8
  %575 = icmp eq %"class.blink::LayoutObject"* %574, null
  br i1 %575, label %670, label %576

576:                                              ; preds = %573
  %577 = bitcast %"class.blink::LayoutObject"* %574 to i1 (%"class.blink::LayoutObject"*)***
  %578 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %577, align 8
  %579 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %578, i64 24
  %580 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %579, align 8
  %581 = tail call zeroext i1 %580(%"class.blink::LayoutObject"* nonnull %574) #16
  br label %582

582:                                              ; preds = %601, %576
  %583 = phi %"class.blink::LayoutObject"* [ %599, %601 ], [ %574, %576 ]
  %584 = phi i1 [ %606, %601 ], [ %581, %576 ]
  %585 = bitcast %"class.blink::LayoutObject"* %583 to %"class.blink::LayoutBlockFlow"*
  %586 = icmp eq %"class.blink::LayoutObject"* %583, null
  %587 = xor i1 %584, true
  %588 = or i1 %586, %587
  br i1 %588, label %597, label %589

589:                                              ; preds = %582
  %590 = bitcast %"class.blink::LayoutObject"* %583 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %591 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %590, align 8
  %592 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %591, i64 182
  %593 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %592, align 8
  %594 = tail call zeroext i1 %593(%"class.blink::LayoutBlockFlow"* nonnull %585) #16
  br i1 %594, label %597, label %595

595:                                              ; preds = %589
  %596 = bitcast %"class.blink::LayoutObject"* %583 to %"class.blink::LayoutBlockFlow"*
  br label %609

597:                                              ; preds = %589, %582
  %598 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %583, i64 0, i32 8
  %599 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %598, align 8
  %600 = icmp eq %"class.blink::LayoutObject"* %599, null
  br i1 %600, label %670, label %601

601:                                              ; preds = %597
  %602 = bitcast %"class.blink::LayoutObject"* %599 to i1 (%"class.blink::LayoutObject"*)***
  %603 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %602, align 8
  %604 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %603, i64 24
  %605 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %604, align 8
  %606 = tail call zeroext i1 %605(%"class.blink::LayoutObject"* nonnull %599) #16
  br label %582

607:                                              ; preds = %654
  %608 = bitcast %"class.blink::LayoutObject"* %648 to %"class.blink::LayoutBlockFlow"*
  br label %609

609:                                              ; preds = %595, %607
  %610 = phi %"class.blink::LayoutBlockFlow"* [ %608, %607 ], [ %596, %595 ]
  %611 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %610, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %612 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %611, align 8
  %613 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %612, i64 0, i32 0, i32 9
  %614 = bitcast [20 x i8]* %613 to i160*
  %615 = load i160, i160* %614, align 8
  %616 = and i160 %615, 15211807202738752817960438464512
  %617 = icmp eq i160 %616, 0
  %618 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %610, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %619 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %610, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %620 = select i1 %617, i32* %618, i32* %619
  %621 = load i32, i32* %620, align 4
  %622 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %610, i64 0, i32 3, i32 0, i32 0, i32 0
  %623 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %622, align 8
  %624 = icmp eq %"class.blink::FloatingObjects"* %623, null
  br i1 %624, label %629, label %625

625:                                              ; preds = %609
  %626 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %623, i32 3) #16
  %627 = icmp slt i32 %626, 0
  %628 = select i1 %627, i32 -2147483648, i32 2147483647
  br label %629

629:                                              ; preds = %625, %609
  %630 = phi i32 [ 0, %609 ], [ %626, %625 ]
  %631 = phi i32 [ 2147483647, %609 ], [ %628, %625 ]
  %632 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %621, i32 %630) #16
  %633 = extractvalue { i32, i1 } %632, 1
  %634 = extractvalue { i32, i1 } %632, 0
  %635 = select i1 %633, i32 %631, i32 %634, !prof !2
  %636 = icmp sgt i32 %635, %554
  br i1 %636, label %637, label %670

637:                                              ; preds = %629
  tail call void @_ZN5blink15LayoutBlockFlow20AddOverhangingFloatsEPS0_b(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %610, i1 zeroext false)
  %638 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %610, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %639 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %638, align 8
  %640 = icmp eq %"class.blink::LayoutObject"* %639, null
  br i1 %640, label %670, label %641

641:                                              ; preds = %637
  %642 = bitcast %"class.blink::LayoutObject"* %639 to i1 (%"class.blink::LayoutObject"*)***
  %643 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %642, align 8
  %644 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %643, i64 24
  %645 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %644, align 8
  %646 = tail call zeroext i1 %645(%"class.blink::LayoutObject"* nonnull %639) #16
  br label %647

647:                                              ; preds = %664, %641
  %648 = phi %"class.blink::LayoutObject"* [ %662, %664 ], [ %639, %641 ]
  %649 = phi i1 [ %669, %664 ], [ %646, %641 ]
  %650 = bitcast %"class.blink::LayoutObject"* %648 to %"class.blink::LayoutBlockFlow"*
  %651 = icmp eq %"class.blink::LayoutObject"* %648, null
  %652 = xor i1 %649, true
  %653 = or i1 %651, %652
  br i1 %653, label %660, label %654

654:                                              ; preds = %647
  %655 = bitcast %"class.blink::LayoutObject"* %648 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %656 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %655, align 8
  %657 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %656, i64 182
  %658 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %657, align 8
  %659 = tail call zeroext i1 %658(%"class.blink::LayoutBlockFlow"* nonnull %650) #16
  br i1 %659, label %660, label %607

660:                                              ; preds = %654, %647
  %661 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %648, i64 0, i32 8
  %662 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %661, align 8
  %663 = icmp eq %"class.blink::LayoutObject"* %662, null
  br i1 %663, label %670, label %664

664:                                              ; preds = %660
  %665 = bitcast %"class.blink::LayoutObject"* %662 to i1 (%"class.blink::LayoutObject"*)***
  %666 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %665, align 8
  %667 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %666, i64 24
  %668 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %667, align 8
  %669 = tail call zeroext i1 %668(%"class.blink::LayoutObject"* nonnull %662) #16
  br label %647

670:                                              ; preds = %597, %637, %629, %660, %573
  %671 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  %672 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %671, i64 0, i32 0, i32 9
  %673 = bitcast [20 x i8]* %672 to i160*
  %674 = load i160, i160* %673, align 8
  %675 = and i160 %674, 15211807202738752817960438464512
  %676 = icmp eq i160 %675, 0
  br i1 %676, label %677, label %681

677:                                              ; preds = %670
  %678 = load i32, i32* %258, align 4
  %679 = icmp eq i32 %678, %564
  br i1 %679, label %685, label %680

680:                                              ; preds = %677
  store i32 %564, i32* %258, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %685

681:                                              ; preds = %670
  %682 = load i32, i32* %259, align 4
  %683 = icmp eq i32 %682, %564
  br i1 %683, label %685, label %684

684:                                              ; preds = %681
  store i32 %564, i32* %259, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %250) #16
  br label %685

685:                                              ; preds = %684, %681, %680, %677
  %686 = and i1 %322, %555
  br i1 %686, label %687, label %710

687:                                              ; preds = %685
  %688 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %689 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %688, align 8
  %690 = icmp eq %"class.blink::FloatingObjects"* %689, null
  br i1 %690, label %710, label %691

691:                                              ; preds = %687
  %692 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %689, i64 0, i32 0, i32 0, i32 2
  %693 = load i32, i32* %692, align 4
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %710, label %695

695:                                              ; preds = %691
  %696 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBox"*)***
  %697 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %696, align 8
  %698 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %697, i64 182
  %699 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %698, align 8
  %700 = tail call zeroext i1 %699(%"class.blink::LayoutBox"* %1) #16
  br i1 %700, label %710, label %701

701:                                              ; preds = %695
  %702 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %688, align 8
  %703 = icmp eq %"class.blink::FloatingObjects"* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %701
  %705 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %702, i32 3) #16
  br label %706

706:                                              ; preds = %701, %704
  %707 = phi i32 [ %705, %704 ], [ 0, %701 ]
  %708 = icmp sgt i32 %707, %554
  br i1 %708, label %709, label %710

709:                                              ; preds = %706
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %262, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason25kAncestorMarginCollapsingE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #16
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %262, i8 zeroext 3) #16
  br label %710

710:                                              ; preds = %553, %691, %685, %687, %695, %706, %709
  ret i32 %554
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow19ClearFloatsIfNeededERNS_9LayoutBoxERNS_10MarginInfoENS_10LayoutUnitES5_S5_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::MarginInfo"* nocapture dereferenceable(12), i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = tail call i32 @_ZN5blink15LayoutBlockFlow13GetClearDeltaEPNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* %1, i32 %5)
  %9 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %2, i64 0, i32 0
  %10 = load i16, i16* %9, align 4
  %11 = and i16 %10, -1025
  store i16 %11, i16* %9, align 4
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %110, label %13

13:                                               ; preds = %7
  br i1 %6, label %14, label %69

14:                                               ; preds = %13
  %15 = or i16 %10, 1024
  store i16 %15, i16* %9, align 4
  %16 = tail call { i64, i64 } @_ZNK5blink15LayoutBlockFlow20MarginValuesForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = extractvalue { i64, i64 } %16, 1
  %22 = trunc i64 %21 to i32
  %23 = icmp slt i32 %18, %22
  %24 = select i1 %23, i32 %22, i32 %18
  %25 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %2, i64 0, i32 1, i32 0
  store i32 %24, i32* %25, align 4
  %26 = lshr i64 %21, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %20, %27
  %29 = select i1 %28, i32 %27, i32 %20
  %30 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %2, i64 0, i32 2, i32 0
  store i32 %29, i32* %30, align 4
  %31 = load i16, i16* %9, align 4
  %32 = and i16 %31, -9
  store i16 %32, i16* %9, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 15211807202738752817960438464512
  %40 = icmp eq i160 %39, 0
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load i32, i32* %41, align 4
  %44 = load i32, i32* %42, align 4
  %45 = select i1 %40, i32 %43, i32 %44
  %46 = icmp slt i32 %20, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %20) #16
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !2
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 15211807202738752817960438464512
  %58 = icmp eq i160 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %14
  %60 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %51
  br i1 %62, label %96, label %63

63:                                               ; preds = %59
  store i32 %51, i32* %60, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %33) #16
  br label %96

64:                                               ; preds = %14
  %65 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %51
  br i1 %67, label %96, label %68

68:                                               ; preds = %64
  store i32 %51, i32* %65, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %33) #16
  br label %96

69:                                               ; preds = %13
  %70 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8
  %76 = and i160 %75, 15211807202738752817960438464512
  %77 = icmp eq i160 %76, 0
  %78 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %79 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %80 = select i1 %77, i32* %78, i32* %79
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %8, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %8) #16
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  br i1 %77, label %88, label %92

88:                                               ; preds = %69
  %89 = load i32, i32* %78, align 4
  %90 = icmp eq i32 %89, %87
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  store i32 %87, i32* %78, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %70) #16
  br label %96

92:                                               ; preds = %69
  %93 = load i32, i32* %79, align 4
  %94 = icmp eq i32 %93, %87
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  store i32 %87, i32* %79, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %70) #16
  br label %96

96:                                               ; preds = %95, %92, %91, %88, %68, %64, %63, %59
  %97 = load i16, i16* %9, align 4
  %98 = and i16 %97, 34
  %99 = icmp eq i16 %98, 34
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  tail call void @_ZN5blink15LayoutBlockFlow24SetMaxMarginBeforeValuesENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %3, i32 %4)
  %101 = load i16, i16* %9, align 4
  %102 = and i16 %101, -33
  store i16 %102, i16* %9, align 4
  br label %103

103:                                              ; preds = %100, %96
  %104 = icmp slt i32 %8, 0
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %8) #16
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  br label %110

110:                                              ; preds = %7, %103
  %111 = phi i32 [ %109, %103 ], [ %5, %7 ]
  ret i32 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow29AdjustBlockChildForPaginationENS_10LayoutUnitERNS_9LayoutBoxERNS_23BlockChildrenLayoutInfoEb(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::BlockChildrenLayoutInfo"* nocapture readonly dereferenceable(48), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = icmp eq %"class.blink::LayoutBox"* %2, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*)***
  %11 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, i64 24
  %13 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* %9) #16
  %15 = bitcast %"class.blink::LayoutBox"* %2 to %"class.blink::LayoutBlockFlow"*
  br i1 %14, label %16, label %21

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 1, i32 0, i32 0, i32 6
  %18 = bitcast %"class.blink::UntracedMember"* %17 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %19 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %18, align 8
  %20 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16, %8, %5
  %22 = phi i1 [ true, %16 ], [ false, %8 ], [ false, %5 ]
  %23 = phi %"class.blink::LayoutBlockFlow"* [ %15, %16 ], [ null, %8 ], [ null, %5 ]
  %24 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  br label %31

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %19, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = icmp slt i32 %27, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  br label %31

31:                                               ; preds = %25, %21
  %32 = phi i8* [ %24, %21 ], [ %28, %25 ]
  %33 = phi i32 [ 0, %21 ], [ %27, %25 ]
  %34 = phi %"class.blink::LayoutBlockFlow"* [ %23, %21 ], [ %15, %25 ]
  %35 = phi i1 [ %22, %21 ], [ true, %25 ]
  %36 = phi i32 [ 2147483647, %21 ], [ %30, %25 ]
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %33) #16
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  store i32 %40, i32* %6, align 4
  %41 = tail call i32 @_ZNK5blink15LayoutBlockFlow26AdjustForUnsplittableChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 %1)
  %42 = icmp slt i32 %40, %41
  %43 = select i1 %42, i32 %41, i32 %40
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 12, i32 0, i32 0
  %45 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %44, align 8
  %46 = icmp eq %"struct.blink::LayoutBoxRareData"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %45, i64 0, i32 8, i32 0
  %49 = load i32, i32* %48, align 4
  br label %50

50:                                               ; preds = %31, %47
  %51 = phi i32 [ %49, %47 ], [ 0, %31 ]
  %52 = icmp sgt i32 %1, -1
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %1) #16
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = icmp slt i32 %51, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %51) #16
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %132, label %65

65:                                               ; preds = %50
  %66 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %3, i64 0, i32 6
  %67 = load i8, i8* %66, align 8, !range !21
  %68 = icmp eq i8 %67, 0
  %69 = xor i1 %4, true
  %70 = or i1 %68, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.blink::LayoutBox"* %2 to i32 (%"class.blink::LayoutBox"*, i32)***
  %73 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %73, i64 176
  %75 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %74, align 8
  %76 = tail call i32 %75(%"class.blink::LayoutBox"* %2, i32 0) #16
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %93

78:                                               ; preds = %71
  %79 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow21AllowsPaginationStrutEv(%"class.blink::LayoutBlockFlow"* %0)
  br i1 %79, label %93, label %80

80:                                               ; preds = %78, %65
  tail call void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"* %2, i32 %63) #16
  %81 = icmp sgt i32 %51, -1
  %82 = select i1 %81, i32 -2147483648, i32 2147483647
  %83 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %51) #16
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !2
  %87 = icmp slt i32 %86, 0
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %86) #16
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !2
  br label %132

93:                                               ; preds = %78, %71
  %94 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow21AllowsPaginationStrutEv(%"class.blink::LayoutBlockFlow"* %0)
  br i1 %94, label %95, label %127

95:                                               ; preds = %93
  %96 = icmp slt i32 %1, 0
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %1) #16
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !2
  %102 = icmp sgt i32 %101, 0
  %103 = select i1 %102, i32 %101, i32 0
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %105 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %104, i64 0, i32 0
  %106 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %105, align 8
  %107 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, null
  br i1 %107, label %108, label %117

108:                                              ; preds = %95
  br i1 %102, label %109, label %120

109:                                              ; preds = %108
  %110 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %111 = bitcast i8* %110 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %111, %"class.blink::LayoutBlockFlow"* %0) #16
  %112 = getelementptr inbounds i8, i8* %110, i64 -4
  %113 = bitcast i8* %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = or i16 %114, 1
  store atomic i16 %115, i16* %113 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %104, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %111) #16
  %116 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %105, align 8
  br label %117

117:                                              ; preds = %109, %95
  %118 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %106, %95 ], [ %116, %109 ]
  %119 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %118, i64 0, i32 1, i32 0
  store i32 %103, i32* %119, align 8
  br label %120

120:                                              ; preds = %108, %117
  br i1 %35, label %121, label %127

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %34, i64 0, i32 2, i32 0, i32 0
  %123 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %122, align 8
  %124 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %123, i64 0, i32 1, i32 0
  store i32 0, i32* %126, align 8
  br label %127

127:                                              ; preds = %125, %121, %120, %93
  %128 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %44, align 8
  %129 = icmp eq %"struct.blink::LayoutBoxRareData"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %128, i64 0, i32 8, i32 0
  store i32 0, i32* %131, align 4
  br label %132

132:                                              ; preds = %50, %130, %127, %80
  %133 = phi i32 [ %92, %80 ], [ %1, %50 ], [ %1, %127 ], [ %1, %130 ]
  %134 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8
  %140 = and i160 %139, 15211807202738752817960438464512
  %141 = icmp eq i160 %140, 0
  %142 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %143 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %144 = select i1 %141, i32* %142, i32* %143
  %145 = load i32, i32* %144, align 4
  %146 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %133, i32 %1) #16
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %53, i32 %148, !prof !2
  %150 = icmp slt i32 %149, 0
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %145, i32 %149) #16
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !2
  br i1 %141, label %156, label %160

156:                                              ; preds = %132
  %157 = load i32, i32* %142, align 4
  %158 = icmp eq i32 %157, %155
  br i1 %158, label %164, label %159

159:                                              ; preds = %156
  store i32 %155, i32* %142, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %134) #16
  br label %164

160:                                              ; preds = %132
  %161 = load i32, i32* %143, align 4
  %162 = icmp eq i32 %161, %155
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  store i32 %155, i32* %143, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %134) #16
  br label %164

164:                                              ; preds = %156, %159, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  ret i32 %133
}

declare void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow25PositionSpannerDescendantERNS_35LayoutMultiColumnSpannerPlaceholderE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* nocapture readonly dereferenceable(224)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 1
  %4 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder", %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  %16 = select i1 %11, i32 %14, i32 %15
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = trunc i96 %19 to i32
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %16
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  store i32 %16, i32* %23, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %4) #16
  br label %32

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %16
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  store i32 %16, i32* %28, align 4
  tail call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %4) #16
  br label %32

32:                                               ; preds = %22, %26, %27, %31
  tail call void @_ZN5blink15LayoutBlockFlow36DetermineLogicalLeftPositionForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow26AdjustForUnsplittableChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %5 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %5, i64 176
  %7 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::LayoutBox"* %1, i32 0) #16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %155, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = trunc i96 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %17 = bitcast %"class.blink::LayoutSize"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = lshr i64 %18, 32
  %20 = select i1 %15, i64 %19, i64 %18
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 8388608
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %115, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = icmp eq %"class.blink::ComputedStyle"* %31, null
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = select i1 %32, %"class.blink::ComputedStyle"* %34, %"class.blink::ComputedStyle"* %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8, !noalias !90
  %39 = lshr i160 %38, 102
  %40 = trunc i160 %39 to i8
  %41 = and i8 %40, 3
  %42 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %41, label %43 [
    i8 0, label %52
    i8 1, label %44
  ]

43:                                               ; preds = %28
  br label %44

44:                                               ; preds = %43, %28
  %45 = phi { i64, i64 } [ { i64 1033, i64 0 }, %43 ], [ { i64 1041, i64 0 }, %28 ]
  %46 = extractvalue { i64, i64 } %45, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %42, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %44, %28
  %53 = phi %"class.blink::LayoutBoxModelObject"* [ %49, %44 ], [ %29, %28 ]
  %54 = phi i8* [ %48, %44 ], [ %42, %28 ]
  %55 = phi i64 [ %46, %44 ], [ 1017, %28 ]
  %56 = bitcast i8* %54 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = add i64 %55, -1
  %59 = getelementptr i8, i8* %57, i64 %58
  %60 = bitcast i8* %59 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %61 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %60, align 8
  br label %64

62:                                               ; preds = %44
  %63 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %64

64:                                               ; preds = %52, %62
  %65 = phi %"class.blink::LayoutBoxModelObject"* [ %53, %52 ], [ %49, %62 ]
  %66 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %61, %52 ], [ %63, %62 ]
  %67 = tail call i32 %66(%"class.blink::LayoutBoxModelObject"* %65) #16
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %69 = icmp eq %"class.blink::ComputedStyle"* %68, null
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %71 = select i1 %69, %"class.blink::ComputedStyle"* %70, %"class.blink::ComputedStyle"* %68
  %72 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %71, i64 0, i32 0, i32 9
  %73 = bitcast [20 x i8]* %72 to i160*
  %74 = load i160, i160* %73, align 8, !noalias !93
  %75 = lshr i160 %74, 102
  %76 = trunc i160 %75 to i8
  %77 = and i8 %76, 3
  switch i8 %77, label %78 [
    i8 0, label %87
    i8 1, label %79
  ]

78:                                               ; preds = %64
  br label %79

79:                                               ; preds = %78, %64
  %80 = phi { i64, i64 } [ { i64 1041, i64 0 }, %78 ], [ { i64 1033, i64 0 }, %64 ]
  %81 = extractvalue { i64, i64 } %80, 0
  %82 = extractvalue { i64, i64 } %80, 1
  %83 = getelementptr inbounds i8, i8* %42, i64 %82
  %84 = bitcast i8* %83 to %"class.blink::LayoutBoxModelObject"*
  %85 = and i64 %81, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %79, %64
  %88 = phi %"class.blink::LayoutBoxModelObject"* [ %84, %79 ], [ %29, %64 ]
  %89 = phi i8* [ %83, %79 ], [ %42, %64 ]
  %90 = phi i64 [ %81, %79 ], [ 1025, %64 ]
  %91 = bitcast i8* %89 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = add i64 %90, -1
  %94 = getelementptr i8, i8* %92, i64 %93
  %95 = bitcast i8* %94 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %96 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %95, align 8
  br label %99

97:                                               ; preds = %79
  %98 = inttoptr i64 %81 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %99

99:                                               ; preds = %87, %97
  %100 = phi %"class.blink::LayoutBoxModelObject"* [ %88, %87 ], [ %84, %97 ]
  %101 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %96, %87 ], [ %98, %97 ]
  %102 = tail call i32 %101(%"class.blink::LayoutBoxModelObject"* %100) #16
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %102) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %108) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  br label %115

115:                                              ; preds = %10, %99
  %116 = phi i32 [ %114, %99 ], [ %21, %10 ]
  %117 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %118 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %117) #16
  br i1 %118, label %119, label %155

119:                                              ; preds = %115
  %120 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %117, i32 %2, i32 1) #16
  %121 = icmp slt i32 %120, %116
  br i1 %121, label %122, label %155

122:                                              ; preds = %119
  %123 = tail call i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %117, i32 %2, i32 %116) #16
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  %126 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %117, i32 %2) #16
  %127 = icmp eq i32 %120, %126
  br i1 %127, label %155, label %128

128:                                              ; preds = %122, %125
  %129 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %130 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %129, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %130, i64 24
  %132 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %131, align 8
  %133 = tail call zeroext i1 %132(%"class.blink::LayoutObject"* %22) #16
  %134 = icmp eq %"class.blink::LayoutBox"* %1, null
  %135 = xor i1 %133, true
  %136 = or i1 %134, %135
  br i1 %136, label %148, label %137

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1, i32 0, i32 0, i32 6
  %139 = bitcast %"class.blink::UntracedMember"* %138 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %140 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %139, align 8
  %141 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %140, i64 0, i32 2, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %120, %144
  %147 = or i1 %145, %146
  br i1 %147, label %148, label %155

148:                                              ; preds = %142, %137, %128
  %149 = icmp slt i32 %123, 0
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %123) #16
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !2
  br label %155

155:                                              ; preds = %142, %119, %115, %148, %125, %3
  %156 = phi i32 [ %2, %3 ], [ %2, %115 ], [ %2, %119 ], [ %154, %148 ], [ %2, %125 ], [ %2, %142 ]
  ret i32 %156
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow21AllowsPaginationStrutEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 113336795588871485128704
  %6 = icmp eq i96 %5, 75557863725914323419136
  br i1 %6, label %80, label %13

7:                                                ; preds = %43
  %8 = load i96, i96* %34, align 4
  br label %9

9:                                                ; preds = %7, %38
  %10 = phi i96 [ %8, %7 ], [ %35, %38 ]
  %11 = and i96 %10, 113336795588871485128704
  %12 = icmp eq i96 %11, 75557863725914323419136
  br i1 %12, label %80, label %13

13:                                               ; preds = %1, %9
  %14 = phi %"class.blink::LayoutBlockFlow"* [ %31, %9 ], [ %0, %1 ]
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::LayoutBlockFlow"* %14 to i1 (%"class.blink::LayoutObject"*)***
  %17 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %17, i64 25
  %19 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* %15) #16
  br i1 %20, label %80, label %21

21:                                               ; preds = %13
  %22 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %23 = icmp eq %"class.blink::LayoutBlock"* %22, null
  br i1 %23, label %80, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.blink::LayoutBlock"* %22 to i1 (%"class.blink::LayoutObject"*)***
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 24
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %25) #16
  %31 = bitcast %"class.blink::LayoutBlock"* %22 to %"class.blink::LayoutBlockFlow"*
  br i1 %30, label %32, label %80

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %22, i64 0, i32 0, i32 0, i32 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 17592186044416
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %38, label %80

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %40 = bitcast %"class.blink::LayoutObject"** %39 to %"class.blink::LayoutBox"**
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  br i1 %42, label %9, label %48

43:                                               ; preds = %71
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 0, i32 0, i32 8
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutBox"**
  %46 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutBox"* %46, null
  br i1 %47, label %7, label %48

48:                                               ; preds = %38, %43
  %49 = phi %"class.blink::LayoutBox"* [ %46, %43 ], [ %41, %38 ]
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 0, i32 0, i32 5, i32 0
  %51 = bitcast %"class.blink::ComputedStyle"** %50 to %"class.blink::ComputedStyleBase"**
  %52 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %58, i64 0, i32 45
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, 536870912
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 0, i32 0
  %65 = bitcast %"class.blink::LayoutBox"* %49 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %66 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %66, i64 44
  %68 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %67, align 8
  %69 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %68(%"class.blink::LayoutObject"* %64) #16
  %70 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %69, null
  br i1 %70, label %71, label %80

71:                                               ; preds = %63, %48
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 0, i32 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 8388608
  %76 = icmp ne i96 %75, 0
  %77 = and i96 %74, 113336795588871485128704
  %78 = icmp eq i96 %77, 75557863725914323419136
  %79 = or i1 %78, %76
  br i1 %79, label %43, label %80

80:                                               ; preds = %9, %13, %21, %24, %32, %63, %71, %1
  %81 = phi i1 [ false, %1 ], [ false, %63 ], [ true, %71 ], [ false, %9 ], [ false, %13 ], [ false, %21 ], [ false, %24 ], [ true, %32 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow34AdjustFloatLogicalTopForPaginationERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %6 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %6, i64 24
  %8 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::LayoutObject"* %4) #16
  %10 = icmp eq %"class.blink::LayoutBox"* %1, null
  %11 = xor i1 %9, true
  %12 = or i1 %10, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1, i32 0, i32 0, i32 6
  %15 = bitcast %"class.blink::UntracedMember"* %14 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %16 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %15, align 8
  %17 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %16, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 8
  br label %21

21:                                               ; preds = %18, %13, %3
  %22 = phi i32 [ 0, %3 ], [ %20, %18 ], [ 0, %13 ]
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = icmp eq %"class.blink::ComputedStyle"* %25, null
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = select i1 %26, %"class.blink::ComputedStyle"* %28, %"class.blink::ComputedStyle"* %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8, !noalias !96
  %33 = lshr i160 %32, 102
  %34 = trunc i160 %33 to i8
  %35 = and i8 %34, 3
  %36 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %35, label %37 [
    i8 0, label %46
    i8 1, label %38
  ]

37:                                               ; preds = %21
  br label %38

38:                                               ; preds = %37, %21
  %39 = phi { i64, i64 } [ { i64 1033, i64 0 }, %37 ], [ { i64 1041, i64 0 }, %21 ]
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  %42 = getelementptr inbounds i8, i8* %36, i64 %41
  %43 = bitcast i8* %42 to %"class.blink::LayoutBoxModelObject"*
  %44 = and i64 %40, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %38, %21
  %47 = phi %"class.blink::LayoutBoxModelObject"* [ %43, %38 ], [ %23, %21 ]
  %48 = phi i8* [ %42, %38 ], [ %36, %21 ]
  %49 = phi i64 [ %40, %38 ], [ 1017, %21 ]
  %50 = bitcast i8* %48 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = add i64 %49, -1
  %53 = getelementptr i8, i8* %51, i64 %52
  %54 = bitcast i8* %53 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %55 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, align 8
  br label %58

56:                                               ; preds = %38
  %57 = inttoptr i64 %40 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %58

58:                                               ; preds = %46, %56
  %59 = phi %"class.blink::LayoutBoxModelObject"* [ %47, %46 ], [ %43, %56 ]
  %60 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %55, %46 ], [ %57, %56 ]
  %61 = tail call i32 %60(%"class.blink::LayoutBoxModelObject"* %59) #16
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %78

63:                                               ; preds = %58
  %64 = icmp eq i32 %22, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %63
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %61) #16
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  br i1 %67, label %69, label %78

69:                                               ; preds = %65
  tail call void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 2147483647) #16
  br label %93

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %72 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %71) #16
  br i1 %72, label %73, label %81

73:                                               ; preds = %70
  %74 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %71, i32 %2, i32 1) #16
  %75 = icmp sgt i32 %74, %61
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = tail call i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %71, i32 %2, i32 %61) #16
  br label %78

78:                                               ; preds = %76, %65, %58
  %79 = phi i32 [ %68, %65 ], [ %22, %58 ], [ %77, %76 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %89

81:                                               ; preds = %73, %78, %70
  %82 = tail call i32 @_ZNK5blink15LayoutBlockFlow26AdjustForUnsplittableChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  %83 = icmp sgt i32 %2, -1
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %2) #16
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !2
  br label %89

89:                                               ; preds = %78, %81
  %90 = phi i32 [ %79, %78 ], [ %88, %81 ]
  tail call void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %90) #16
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  br label %93

93:                                               ; preds = %89, %69
  %94 = phi i32 [ 2147483647, %69 ], [ %90, %89 ]
  %95 = phi i32 [ 2147483647, %69 ], [ %92, %89 ]
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %94) #16
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  ret i32 %99
}

declare zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow31AdjustLinePositionForPaginationERNS_13RootInlineBoxERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::RootInlineBox"* dereferenceable(160), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 8, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %5, -1
  %9 = select i1 %8, i32 -2147483648, i32 2147483647
  %10 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %7, i32 %5) #16
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12, !prof !2
  %14 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %15) #16
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !2
  %22 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 10, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, -33554433
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %38

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %29, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %3
  %39 = phi %"class.blink::Node"* [ %27, %3 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 113
  %45 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %45, i64 0, i32 3
  %47 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %47, i64 0, i32 0
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %263, label %52

52:                                               ; preds = %38
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %54 = tail call zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"* %53) #16
  br i1 %54, label %55, label %263

55:                                               ; preds = %52
  %56 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %53, i32 %21) #16
  %57 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %53, i32 %21, i32 1) #16
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 17592186044416
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %65 = bitcast %"class.blink::InlineFlowBox"** %64 to %"class.blink::RootInlineBox"**
  %66 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %65, align 8
  %67 = icmp eq %"class.blink::RootInlineBox"* %66, null
  br i1 %67, label %78, label %73

68:                                               ; preds = %73
  %69 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %74, i64 0, i32 0, i32 5
  %70 = bitcast %"class.blink::InlineFlowBox"** %69 to %"class.blink::RootInlineBox"**
  %71 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %70, align 8
  %72 = icmp eq %"class.blink::RootInlineBox"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %63, %68
  %74 = phi %"class.blink::RootInlineBox"* [ %71, %68 ], [ %66, %63 ]
  %75 = phi i32 [ %76, %68 ], [ 0, %63 ]
  %76 = add nuw nsw i32 %75, 1
  %77 = icmp eq %"class.blink::RootInlineBox"* %74, %1
  br i1 %77, label %78, label %68

78:                                               ; preds = %68, %73, %55, %63
  %79 = phi i32 [ 0, %55 ], [ 0, %63 ], [ %76, %73 ], [ %76, %68 ]
  %80 = icmp slt i32 %57, %13
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %82, align 8
  %84 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %83, null
  br i1 %84, label %167, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %83, i64 0, i32 9
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, -1
  %89 = icmp eq i32 %87, %79
  %90 = and i1 %88, %89
  br i1 %90, label %91, label %167

91:                                               ; preds = %85, %78
  %92 = tail call i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %53, i32 %21, i32 %13) #16
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %92) #16
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = tail call i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"* %53, i32 %98) #16
  %100 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %101 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %100, align 8
  %102 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %101, i64 0, i32 9
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, -1
  %107 = icmp eq i32 %105, %79
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %114

109:                                              ; preds = %103
  store i32 -1, i32* %104, align 4
  %110 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %100, align 8
  %111 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %110, i64 0, i32 10
  %112 = load i8, i8* %111, align 8
  %113 = or i8 %112, 1
  store i8 %113, i8* %111, align 8
  br label %124

114:                                              ; preds = %91, %103
  %115 = icmp sgt i32 %13, %99
  br i1 %115, label %116, label %124

116:                                              ; preds = %114
  %117 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %118 = icmp slt i32 %13, 0
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %13) #16
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  tail call void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"* %117, i32 %123) #16
  br label %263

124:                                              ; preds = %114, %109
  %125 = tail call fastcc zeroext i1 @_ZN5blinkL21ShouldSetStrutOnBlockERKNS_15LayoutBlockFlowERKNS_13RootInlineBoxENS_10LayoutUnitEiS6_(%"class.blink::LayoutBlockFlow"* dereferenceable(280) %0, %"class.blink::RootInlineBox"* dereferenceable(160) %1, i32 %21, i32 %79, i32 %99)
  br i1 %125, label %126, label %151

126:                                              ; preds = %124
  %127 = icmp slt i32 %21, 0
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %21) #16
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !2
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  %135 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %136 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %135, i64 0, i32 0
  %137 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %136, align 8
  %138 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %137, null
  br i1 %138, label %139, label %148

139:                                              ; preds = %126
  br i1 %133, label %140, label %159

140:                                              ; preds = %139
  %141 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %142 = bitcast i8* %141 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %142, %"class.blink::LayoutBlockFlow"* %0) #16
  %143 = getelementptr inbounds i8, i8* %141, i64 -4
  %144 = bitcast i8* %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = or i16 %145, 1
  store atomic i16 %146, i16* %144 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %135, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %142) #16
  %147 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %136, align 8
  br label %148

148:                                              ; preds = %140, %126
  %149 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %137, %126 ], [ %147, %140 ]
  %150 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %149, i64 0, i32 1, i32 0
  store i32 %134, i32* %150, align 8
  br label %159

151:                                              ; preds = %124
  %152 = load i32, i32* %14, align 4
  %153 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %152, i32 %92) #16
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %94, i32 %155, !prof !2
  store i32 %156, i32* %14, align 4
  store i32 %92, i32* %22, align 4
  %157 = load i32, i32* %23, align 8
  %158 = or i32 %157, 33554432
  store i32 %158, i32* %23, align 8
  br label %159

159:                                              ; preds = %148, %139, %151
  %160 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %161 = icmp slt i32 %13, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %13) #16
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  tail call void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"* %160, i32 %166) #16
  br label %263

167:                                              ; preds = %81, %85
  %168 = icmp eq i32 %57, %56
  %169 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %170 = bitcast %"class.blink::InlineFlowBox"** %169 to %"class.blink::RootInlineBox"**
  %171 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %170, align 8
  %172 = icmp eq %"class.blink::RootInlineBox"* %171, %1
  br i1 %168, label %173, label %197

173:                                              ; preds = %167
  br i1 %172, label %177, label %174

174:                                              ; preds = %173
  %175 = load i32, i32* %23, align 8
  %176 = or i32 %175, 33554432
  store i32 %176, i32* %23, align 8
  br label %177

177:                                              ; preds = %173, %174
  %178 = tail call fastcc zeroext i1 @_ZN5blinkL21ShouldSetStrutOnBlockERKNS_15LayoutBlockFlowERKNS_13RootInlineBoxENS_10LayoutUnitEiS6_(%"class.blink::LayoutBlockFlow"* dereferenceable(280) %0, %"class.blink::RootInlineBox"* dereferenceable(160) %1, i32 %21, i32 %79, i32 %56)
  %179 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %47, i64 0, i32 4, i32 0
  %180 = load i32, i32* %179, align 8
  br i1 %178, label %181, label %187

181:                                              ; preds = %177
  %182 = icmp slt i32 %180, 0
  %183 = select i1 %182, i32 -2147483648, i32 2147483647
  %184 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %180) #16
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  br i1 %185, label %232, label %230

187:                                              ; preds = %177
  %188 = icmp eq i32 %180, 0
  br i1 %188, label %255, label %189

189:                                              ; preds = %187
  %190 = load i32, i32* %14, align 4
  %191 = icmp slt i32 %180, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %190, i32 %180) #16
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !2
  store i32 %196, i32* %14, align 4
  store i32 %180, i32* %22, align 4
  br label %255

197:                                              ; preds = %167
  br i1 %172, label %198, label %255

198:                                              ; preds = %197
  %199 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow21AllowsPaginationStrutEv(%"class.blink::LayoutBlockFlow"* %0)
  br i1 %199, label %200, label %255

200:                                              ; preds = %198
  %201 = icmp slt i32 %21, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %21) #16
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !2
  %207 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %47, i64 0, i32 4, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = icmp slt i32 %208, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %208) #16
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = icmp sgt i32 %56, -1
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %214, i32 %56) #16
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %216, i32 %219, !prof !2
  %221 = icmp sgt i32 %220, 0
  br i1 %221, label %222, label %255

222:                                              ; preds = %200
  %223 = icmp slt i32 %13, 0
  %224 = select i1 %223, i32 -2147483648, i32 2147483647
  %225 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %13) #16
  %226 = extractvalue { i32, i1 } %225, 1
  %227 = extractvalue { i32, i1 } %225, 0
  %228 = select i1 %226, i32 %224, i32 %227, !prof !2
  %229 = icmp sgt i32 %228, %56
  br i1 %229, label %255, label %232

230:                                              ; preds = %181
  %231 = icmp eq i32 %186, 0
  br i1 %231, label %255, label %232

232:                                              ; preds = %230, %222, %181
  %233 = phi i32 [ %186, %230 ], [ %220, %222 ], [ %183, %181 ]
  %234 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %53) #16
  %235 = icmp sgt i32 %234, 0
  br i1 %235, label %236, label %255

236:                                              ; preds = %232
  %237 = icmp sgt i32 %233, 0
  %238 = select i1 %237, i32 %233, i32 0
  %239 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %240 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %239, i64 0, i32 0
  %241 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %240, align 8
  %242 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %241, null
  br i1 %242, label %243, label %252

243:                                              ; preds = %236
  br i1 %237, label %244, label %255

244:                                              ; preds = %243
  %245 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %246 = bitcast i8* %245 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %246, %"class.blink::LayoutBlockFlow"* %0) #16
  %247 = getelementptr inbounds i8, i8* %245, i64 -4
  %248 = bitcast i8* %247 to i16*
  %249 = load atomic i16, i16* %248 monotonic, align 2
  %250 = or i16 %249, 1
  store atomic i16 %250, i16* %248 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %239, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %246) #16
  %251 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %240, align 8
  br label %252

252:                                              ; preds = %244, %236
  %253 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %241, %236 ], [ %251, %244 ]
  %254 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %253, i64 0, i32 1, i32 0
  store i32 %238, i32* %254, align 8
  br label %255

255:                                              ; preds = %230, %187, %222, %200, %189, %197, %198, %252, %243, %232
  %256 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %257 = icmp slt i32 %13, 0
  %258 = select i1 %257, i32 -2147483648, i32 2147483647
  %259 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %13) #16
  %260 = extractvalue { i32, i1 } %259, 1
  %261 = extractvalue { i32, i1 } %259, 0
  %262 = select i1 %260, i32 %258, i32 %261, !prof !2
  tail call void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"* %256, i32 %262) #16
  br label %263

263:                                              ; preds = %38, %255, %159, %116, %52
  ret void
}

declare i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow9LineCountEPKNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::RootInlineBox"* readnone) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 17592186044416
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::InlineFlowBox"** %9 to %"class.blink::RootInlineBox"**
  %11 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %10, align 8
  %12 = icmp eq %"class.blink::RootInlineBox"* %11, null
  br i1 %12, label %23, label %18

13:                                               ; preds = %18
  %14 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %19, i64 0, i32 0, i32 5
  %15 = bitcast %"class.blink::InlineFlowBox"** %14 to %"class.blink::RootInlineBox"**
  %16 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %15, align 8
  %17 = icmp eq %"class.blink::RootInlineBox"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %8, %13
  %19 = phi %"class.blink::RootInlineBox"* [ %16, %13 ], [ %11, %8 ]
  %20 = phi i32 [ %21, %13 ], [ 0, %8 ]
  %21 = add nuw nsw i32 %20, 1
  %22 = icmp eq %"class.blink::RootInlineBox"* %19, %1
  br i1 %22, label %23, label %13

23:                                               ; preds = %18, %13, %8, %2
  %24 = phi i32 [ 0, %2 ], [ 0, %8 ], [ %21, %13 ], [ %21, %18 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL21ShouldSetStrutOnBlockERKNS_15LayoutBlockFlowERKNS_13RootInlineBoxENS_10LayoutUnitEiS6_(%"class.blink::LayoutBlockFlow"* dereferenceable(280), %"class.blink::RootInlineBox"* readonly dereferenceable(160), i32, i32, i32) unnamed_addr #0 {
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.blink::InlineFlowBox"** %6 to %"class.blink::RootInlineBox"**
  %8 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %7, align 8
  %9 = icmp eq %"class.blink::RootInlineBox"* %8, %1
  br i1 %9, label %10, label %103

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8, !noalias !99
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8, !noalias !99
  %17 = lshr i160 %16, 102
  %18 = trunc i160 %17 to i8
  %19 = and i8 %18, 3
  %20 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %19, label %21 [
    i8 0, label %30
    i8 1, label %22
  ]

21:                                               ; preds = %10
  br label %22

22:                                               ; preds = %21, %10
  %23 = phi { i64, i64 } [ { i64 993, i64 0 }, %21 ], [ { i64 1001, i64 0 }, %10 ]
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = extractvalue { i64, i64 } %23, 1
  %26 = getelementptr inbounds i8, i8* %20, i64 %25
  %27 = bitcast i8* %26 to %"class.blink::LayoutBoxModelObject"*
  %28 = and i64 %24, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %22, %10
  %31 = phi %"class.blink::LayoutBoxModelObject"* [ %27, %22 ], [ %11, %10 ]
  %32 = phi i8* [ %26, %22 ], [ %20, %10 ]
  %33 = phi i64 [ %24, %22 ], [ 977, %10 ]
  %34 = bitcast i8* %32 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %33, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %39 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %38, align 8
  br label %42

40:                                               ; preds = %22
  %41 = inttoptr i64 %24 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %42

42:                                               ; preds = %40, %30
  %43 = phi %"class.blink::LayoutBoxModelObject"* [ %31, %30 ], [ %27, %40 ]
  %44 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %39, %30 ], [ %41, %40 ]
  %45 = tail call i32 %44(%"class.blink::LayoutBoxModelObject"* %43) #16
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8, !noalias !102
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8, !noalias !102
  %50 = lshr i160 %49, 102
  %51 = trunc i160 %50 to i8
  %52 = and i8 %51, 3
  switch i8 %52, label %53 [
    i8 0, label %62
    i8 1, label %54
  ]

53:                                               ; preds = %42
  br label %54

54:                                               ; preds = %53, %42
  %55 = phi { i64, i64 } [ { i64 961, i64 0 }, %53 ], [ { i64 969, i64 0 }, %42 ]
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = extractvalue { i64, i64 } %55, 1
  %58 = getelementptr inbounds i8, i8* %20, i64 %57
  %59 = bitcast i8* %58 to %"class.blink::LayoutBoxModelObject"*
  %60 = and i64 %56, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %54, %42
  %63 = phi %"class.blink::LayoutBoxModelObject"* [ %59, %54 ], [ %11, %42 ]
  %64 = phi i8* [ %58, %54 ], [ %20, %42 ]
  %65 = phi i64 [ %56, %54 ], [ 945, %42 ]
  %66 = bitcast i8* %64 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = add i64 %65, -1
  %69 = getelementptr i8, i8* %67, i64 %68
  %70 = bitcast i8* %69 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %70, align 8
  br label %74

72:                                               ; preds = %54
  %73 = inttoptr i64 %56 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %74

74:                                               ; preds = %62, %72
  %75 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %62 ], [ %59, %72 ]
  %76 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %71, %62 ], [ %73, %72 ]
  %77 = tail call i32 %76(%"class.blink::LayoutBoxModelObject"* %75) #16
  %78 = icmp slt i32 %77, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %77) #16
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !2
  %84 = icmp slt i32 %83, %2
  br i1 %84, label %115, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 8, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 7, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp sgt i32 %89, -1
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %89) #16
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !2
  %96 = icmp sgt i32 %2, 0
  %97 = select i1 %96, i32 %2, i32 0
  %98 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 %97) #16
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 2147483647, i32 %100, !prof !2
  %102 = icmp sgt i32 %101, %4
  br i1 %102, label %115, label %113

103:                                              ; preds = %5
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %105 = bitcast %"class.blink::ComputedStyle"** %104 to %"class.blink::ComputedStyleBase"**
  %106 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %106, i64 0, i32 1, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %108, i64 0, i32 21
  %110 = load i16, i16* %109, align 4
  %111 = sext i16 %110 to i32
  %112 = icmp slt i32 %111, %3
  br i1 %112, label %115, label %113

113:                                              ; preds = %85, %103
  %114 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow21AllowsPaginationStrutEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %115

115:                                              ; preds = %85, %103, %74, %113
  %116 = phi i1 [ %114, %113 ], [ false, %85 ], [ false, %74 ], [ false, %103 ]
  ret i1 %116
}

declare i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink15FloatingObjects5ClearEv(%"class.blink::FloatingObjects"*) local_unnamed_addr #1

declare void @_ZN5blink15FloatingObjects21MoveAllToFloatInfoMapERN3WTF7HashMapIPNS_9LayoutBoxENSt3__110unique_ptrINS_14FloatingObjectENS5_14default_deleteIS7_EEEENS1_7PtrHashIS3_EENS1_10HashTraitsIS4_EENSD_ISA_EENS1_18PartitionAllocatorEEE(%"class.blink::FloatingObjects"*, %"class.WTF::HashMap.3097"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow18AddIntrudingFloatsEPS0_NS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %6 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %6, i64 182
  %8 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %9, label %221, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %11, align 8
  %13 = icmp eq %"class.blink::FloatingObjects"* %12, null
  br i1 %13, label %221, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8, !noalias !105
  %20 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  %21 = and i160 %19, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = select i1 %22, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %24 = extractvalue { i64, i64 } %23, 1
  %25 = getelementptr inbounds i8, i8* %20, i64 %24
  %26 = bitcast i8* %25 to %"class.blink::LayoutBoxModelObject"*
  %27 = extractvalue { i64, i64 } %23, 0
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %14
  %31 = bitcast i8* %25 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = add i64 %27, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  br label %39

37:                                               ; preds = %14
  %38 = inttoptr i64 %27 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %39

39:                                               ; preds = %30, %37
  %40 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %36, %30 ], [ %38, %37 ]
  %41 = tail call i32 %40(%"class.blink::LayoutBoxModelObject"* %26) #16
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %41) #16
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  %48 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %11, align 8
  %49 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %48, i64 0, i32 0, i32 1
  %50 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %49, align 8
  %51 = icmp eq %"class.WTF::MallocedListHashSetNode"* %50, null
  br i1 %51, label %221, label %52

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.1817", %"class.std::__1::unique_ptr.1817"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.1817"* %55 to i64*
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %60 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i32 (%"class.blink::LayoutBox"*)***
  br label %62

62:                                               ; preds = %52, %217
  %63 = phi %"class.WTF::MallocedListHashSetNode"* [ %50, %52 ], [ %219, %217 ]
  %64 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %64, align 8
  %66 = load i96, i96* %54, align 4
  %67 = trunc i96 %66 to i32
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %77

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %65, i64 0, i32 2, i32 0, i32 1, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %65, i64 0, i32 2, i32 1, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %73) #16
  br label %85

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %65, i64 0, i32 2, i32 1, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 %81) #16
  br label %85

85:                                               ; preds = %69, %77
  %86 = phi { i32, i1 } [ %76, %69 ], [ %84, %77 ]
  %87 = phi i32 [ %75, %69 ], [ %83, %77 ]
  %88 = extractvalue { i32, i1 } %86, 1
  %89 = extractvalue { i32, i1 } %86, 0
  %90 = select i1 %88, i32 %87, i32 %89
  %91 = icmp sgt i32 %90, %3
  br i1 %91, label %92, label %217

92:                                               ; preds = %85
  %93 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %56, align 8
  %94 = icmp eq %"class.blink::FloatingObjects"* %93, null
  br i1 %94, label %161, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %96, align 8
  %98 = icmp eq %"class.WTF::MallocedListHashSetNode"** %97, null
  br i1 %98, label %169, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %93, i64 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  %103 = zext i32 %102 to i64
  %104 = bitcast %"class.blink::FloatingObject"* %65 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = shl i64 %105, 32
  %107 = xor i64 %106, -1
  %108 = add i64 %105, %107
  %109 = lshr i64 %108, 22
  %110 = xor i64 %109, %108
  %111 = shl i64 %110, 13
  %112 = xor i64 %111, -1
  %113 = add i64 %110, %112
  %114 = lshr i64 %113, 8
  %115 = xor i64 %114, %113
  %116 = mul i64 %115, 9
  %117 = lshr i64 %116, 15
  %118 = xor i64 %117, %116
  %119 = shl i64 %118, 27
  %120 = xor i64 %119, -1
  %121 = add i64 %118, %120
  %122 = lshr i64 %121, 31
  %123 = xor i64 %122, %121
  %124 = trunc i64 %123 to i32
  %125 = and i32 %102, %124
  %126 = zext i32 %125 to i64
  %127 = xor i32 %124, -1
  %128 = lshr i32 %124, 23
  %129 = add i32 %128, %127
  %130 = shl i32 %129, 12
  %131 = xor i32 %130, %129
  %132 = lshr i32 %131, 7
  %133 = xor i32 %132, %131
  %134 = shl i32 %133, 2
  %135 = xor i32 %134, %133
  %136 = lshr i32 %135, 20
  %137 = xor i32 %136, %135
  %138 = or i32 %137, 1
  %139 = zext i32 %138 to i64
  %140 = inttoptr i64 %105 to %"class.blink::LayoutBox"*
  br label %141

141:                                              ; preds = %153, %99
  %142 = phi i64 [ 0, %99 ], [ %155, %153 ]
  %143 = phi i64 [ %126, %99 ], [ %157, %153 ]
  %144 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %97, i64 %143
  %145 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %144, align 8
  %146 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %145 to i64
  switch i64 %146, label %147 [
    i64 0, label %169
    i64 -1, label %153
  ]

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %145, i64 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %149, i64 0, i32 0
  %151 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %150, align 8
  %152 = icmp eq %"class.blink::LayoutBox"* %151, %140
  br i1 %152, label %158, label %153

153:                                              ; preds = %147, %141
  %154 = icmp eq i64 %142, 0
  %155 = select i1 %154, i64 %139, i64 %142
  %156 = add i64 %155, %143
  %157 = and i64 %156, %103
  br label %141

158:                                              ; preds = %147
  %159 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %97, i64 %143
  %160 = icmp eq %"class.WTF::MallocedListHashSetNode"** %159, null
  br i1 %160, label %169, label %217

161:                                              ; preds = %92
  %162 = tail call noalias i8* @malloc(i64 144) #16
  %163 = bitcast i8* %162 to %"class.blink::FloatingObjects"*
  tail call void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"* %163, %"class.blink::LayoutBlockFlow"* %0, i1 zeroext %68) #16
  %164 = ptrtoint i8* %162 to i64
  %165 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %56, align 8
  store i64 %164, i64* %57, align 8
  %166 = icmp eq %"class.blink::FloatingObjects"* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %161
  tail call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %165) #16
  %168 = bitcast %"class.blink::FloatingObjects"* %165 to i8*
  tail call void @free(i8* %168) #16
  br label %169

169:                                              ; preds = %141, %158, %95, %167, %161
  %170 = load i96, i96* %54, align 4
  %171 = trunc i96 %170 to i32
  %172 = icmp slt i32 %171, 0
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %174 = icmp eq %"class.blink::LayoutObject"* %58, %173
  br i1 %172, label %175, label %191

175:                                              ; preds = %169
  br i1 %174, label %182, label %176

176:                                              ; preds = %175
  %177 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %61, align 8
  %178 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %177, i64 129
  %179 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %178, align 8
  %180 = tail call i32 %179(%"class.blink::LayoutBox"* %60) #16
  %181 = icmp sgt i32 %180, -1
  br i1 %181, label %182, label %184

182:                                              ; preds = %175, %176
  %183 = phi i32 [ %180, %176 ], [ 0, %175 ]
  br label %184

184:                                              ; preds = %176, %182
  %185 = phi i32 [ %183, %182 ], [ %180, %176 ]
  %186 = phi i32 [ -2147483648, %182 ], [ 2147483647, %176 ]
  %187 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %185) #16
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !2
  br label %207

191:                                              ; preds = %169
  br i1 %174, label %198, label %192

192:                                              ; preds = %191
  %193 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %61, align 8
  %194 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %193, i64 127
  %195 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %194, align 8
  %196 = tail call i32 %195(%"class.blink::LayoutBox"* %60) #16
  %197 = icmp sgt i32 %196, -1
  br i1 %197, label %198, label %200

198:                                              ; preds = %191, %192
  %199 = phi i32 [ %196, %192 ], [ 0, %191 ]
  br label %200

200:                                              ; preds = %192, %198
  %201 = phi i32 [ %199, %198 ], [ %196, %192 ]
  %202 = phi i32 [ -2147483648, %198 ], [ 2147483647, %192 ]
  %203 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %201) #16
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !2
  br label %207

207:                                              ; preds = %200, %184
  %208 = phi i32 [ %3, %184 ], [ %206, %200 ]
  %209 = phi i32 [ %190, %184 ], [ %3, %200 ]
  %210 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %56, align 8
  %211 = zext i32 %208 to i64
  %212 = shl nuw i64 %211, 32
  %213 = zext i32 %209 to i64
  %214 = or i64 %212, %213
  %215 = tail call %"class.blink::FloatingObject"* @_ZNK5blink14FloatingObject18CopyToNewContainerENS_10LayoutSizeEbb(%"class.blink::FloatingObject"* %65, i64 %214, i1 zeroext false, i1 zeroext false) #16
  %216 = tail call %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects3AddENSt3__110unique_ptrINS_14FloatingObjectENS1_14default_deleteIS3_EEEE(%"class.blink::FloatingObjects"* %210, %"class.blink::FloatingObject"* %215) #16
  br label %217

217:                                              ; preds = %158, %207, %85
  %218 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %63, i64 0, i32 2
  %219 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %218, align 8
  %220 = icmp eq %"class.WTF::MallocedListHashSetNode"* %219, null
  br i1 %220, label %221, label %62

221:                                              ; preds = %217, %39, %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1190036353683150593851392
  %14 = icmp eq i160 %13, 340010386766614455386112
  %15 = and i96 %4, 8589934592
  %16 = icmp eq i96 %15, 0
  %17 = or i1 %14, %16
  br i1 %6, label %18, label %78

18:                                               ; preds = %1
  br i1 %17, label %43, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %21 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #16
  %22 = icmp eq %"class.blink::PaintLayerScrollableArea"* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #16
  %25 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 3
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %30, align 8
  %32 = icmp eq %"class.blink::Scrollbar"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %29, %23
  %34 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #16
  %35 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 3
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %40, align 8
  %42 = icmp eq %"class.blink::Scrollbar"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %33, %18
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 270215977642229760
  %49 = icmp eq i160 %48, 0
  br label %50

50:                                               ; preds = %19, %29, %39, %43
  %51 = phi i1 [ false, %39 ], [ false, %29 ], [ false, %19 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 124
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %52) #16
  br i1 %51, label %69, label %58

58:                                               ; preds = %50
  %59 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #16
  %60 = extractvalue { i64, i64 } %59, 1
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %62) #16
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  br label %69

69:                                               ; preds = %50, %58
  %70 = phi i32 [ %68, %58 ], [ %57, %50 ]
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, i64 120
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutBoxModelObject"* %52) #16
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %74) #16
  br label %137

78:                                               ; preds = %1
  br i1 %17, label %103, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %81 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #16
  %82 = icmp eq %"class.blink::PaintLayerScrollableArea"* %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %79
  %84 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #16
  %85 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 3
  %86 = load i8, i8* %85, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 1, i32 0, i32 0
  %91 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %90, align 8
  %92 = icmp eq %"class.blink::Scrollbar"* %91, null
  br i1 %92, label %93, label %110

93:                                               ; preds = %89, %83
  %94 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #16
  %95 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 3
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %100, align 8
  %102 = icmp eq %"class.blink::Scrollbar"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99, %93, %78
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8
  %108 = and i160 %107, 270215977642229760
  %109 = icmp eq i160 %108, 0
  br label %110

110:                                              ; preds = %79, %89, %99, %103
  %111 = phi i1 [ false, %99 ], [ false, %89 ], [ false, %79 ], [ %109, %103 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %113 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, i64 122
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %112) #16
  br i1 %111, label %128, label %118

118:                                              ; preds = %110
  %119 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #16
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %121) #16
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !2
  br label %128

128:                                              ; preds = %110, %118
  %129 = phi i32 [ %127, %118 ], [ %117, %110 ]
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %131 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %130, i64 118
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %112) #16
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %133) #16
  br label %137

137:                                              ; preds = %128, %69
  %138 = phi { i32, i1 } [ %136, %128 ], [ %77, %69 ]
  %139 = phi i32 [ %135, %128 ], [ %76, %69 ]
  %140 = extractvalue { i32, i1 } %138, 1
  %141 = extractvalue { i32, i1 } %138, 0
  %142 = select i1 %140, i32 %139, i32 %141
  ret i32 %142
}

declare void @_ZN5blink15LayoutBlockFlow26MarkLinesDirtyInBlockRangeENS_10LayoutUnitES1_PNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"*, i32, i32, %"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock45DirtyForLayoutFromPercentageHeightDescendantsERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %6 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, i64 92
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::LayoutObject"* %4, i32 21) #16
  %10 = icmp eq %"class.blink::LayoutBox"* %2, null
  %11 = xor i1 %9, true
  %12 = or i1 %10, %11
  br i1 %12, label %27, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 1
  %15 = bitcast %"class.blink::LayoutBox"* %14 to %"class.blink::LayoutObject"**
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 63
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %4, i32 1) #16
  %25 = load i96, i96* %24, align 4
  %26 = or i96 %25, 1180591620717411303432
  store i96 %26, i96* %24, align 4
  br label %27

27:                                               ; preds = %22, %13, %3
  %28 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %28, i1 zeroext %1, %"class.blink::LayoutBox"* dereferenceable(216) %2) #16
  ret void
}

declare void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21AdjustPositionedBlockERNS_9LayoutBoxERKNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), %"class.blink::BlockChildrenLayoutInfo"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %13 = select i1 %10, i32* %11, i32* %12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %18, %20
  %21 = phi %"class.blink::LayoutObject"* [ %23, %20 ], [ %19, %18 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %3
  %28 = phi %"class.blink::Node"* [ %16, %3 ], [ %25, %20 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 113
  %34 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %34, i64 0, i32 3
  %36 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %36, i64 0, i32 0
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = tail call i32 @_ZN5blink15LayoutBlockFlow16ApplyForcedBreakENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"* %0, i32 %14, i32 %43)
  br label %45

45:                                               ; preds = %27, %41
  %46 = phi i32 [ %44, %41 ], [ %14, %27 ]
  tail call void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %46, i32 0)
  %47 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 0
  %48 = load i16, i16* %47, align 4
  %49 = and i16 %48, 34
  %50 = icmp eq i16 %49, 34
  br i1 %50, label %68, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %2, i64 0, i32 1, i32 2, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %53, i32 %55) #16
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %61) #16
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  br label %68

68:                                               ; preds = %51, %45
  %69 = phi i32 [ %46, %45 ], [ %67, %51 ]
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %70, align 8
  %72 = icmp eq %"struct.blink::FragmentData::RareData"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %74, align 8
  br label %76

76:                                               ; preds = %68, %73
  %77 = phi %"class.blink::PaintLayer"* [ %75, %73 ], [ null, %68 ]
  %78 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %77, i64 0, i32 11, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %69
  br i1 %80, label %82, label %81

81:                                               ; preds = %76
  store i32 %69, i32* %78, align 4
  br label %82

82:                                               ; preds = %76, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.1817", %"class.std::__1::unique_ptr.1817"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %7, label %21

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = trunc i96 %10 to i32
  %12 = icmp slt i32 %11, 0
  %13 = tail call noalias i8* @malloc(i64 144) #16
  %14 = bitcast i8* %13 to %"class.blink::FloatingObjects"*
  tail call void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"* %14, %"class.blink::LayoutBlockFlow"* %0, i1 zeroext %12) #16
  %15 = ptrtoint i8* %13 to i64
  %16 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.1817"* %3 to i64*
  store i64 %15, i64* %17, align 8
  %18 = icmp eq %"class.blink::FloatingObjects"* %16, null
  br i1 %18, label %101, label %19

19:                                               ; preds = %7
  tail call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %16) #16
  %20 = bitcast %"class.blink::FloatingObjects"* %16 to i8*
  tail call void @free(i8* %20) #16
  br label %101

21:                                               ; preds = %2
  %22 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %23 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %23, align 8
  %25 = icmp eq %"class.WTF::MallocedListHashSetNode"** %24, null
  %26 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  br i1 %25, label %87, label %28

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  %30 = zext i32 %29 to i64
  %31 = shl i64 %22, 32
  %32 = xor i64 %31, -1
  %33 = add i64 %32, %22
  %34 = lshr i64 %33, 22
  %35 = xor i64 %34, %33
  %36 = shl i64 %35, 13
  %37 = xor i64 %36, -1
  %38 = add i64 %35, %37
  %39 = lshr i64 %38, 8
  %40 = xor i64 %39, %38
  %41 = mul i64 %40, 9
  %42 = lshr i64 %41, 15
  %43 = xor i64 %42, %41
  %44 = shl i64 %43, 27
  %45 = xor i64 %44, -1
  %46 = add i64 %43, %45
  %47 = lshr i64 %46, 31
  %48 = xor i64 %47, %46
  %49 = trunc i64 %48 to i32
  %50 = and i32 %29, %49
  %51 = zext i32 %50 to i64
  %52 = xor i32 %49, -1
  %53 = lshr i32 %49, 23
  %54 = add i32 %53, %52
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %77, %28
  %66 = phi i64 [ 0, %28 ], [ %79, %77 ]
  %67 = phi i64 [ %51, %28 ], [ %81, %77 ]
  %68 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %24, i64 %67
  %69 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %68, align 8
  %70 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %69 to i64
  switch i64 %70, label %71 [
    i64 0, label %87
    i64 -1, label %77
  ]

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %73, i64 0, i32 0
  %75 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %74, align 8
  %76 = icmp eq %"class.blink::LayoutBox"* %75, %1
  br i1 %76, label %82, label %77

77:                                               ; preds = %71, %65
  %78 = icmp eq i64 %66, 0
  %79 = select i1 %78, i64 %64, i64 %66
  %80 = add i64 %79, %67
  %81 = and i64 %80, %30
  br label %65

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %24, i64 %67
  %84 = icmp eq %"class.WTF::MallocedListHashSetNode"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = zext i32 %27 to i64
  br label %90

87:                                               ; preds = %65, %82, %21
  %88 = zext i32 %27 to i64
  %89 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %24, i64 %88
  br label %90

90:                                               ; preds = %87, %85
  %91 = phi i64 [ %86, %85 ], [ %88, %87 ]
  %92 = phi %"class.WTF::MallocedListHashSetNode"** [ %83, %85 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %24, i64 %91
  %94 = icmp eq %"class.WTF::MallocedListHashSetNode"** %92, %93
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %92, align 8
  %97 = icmp eq %"class.WTF::MallocedListHashSetNode"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %99, align 8
  br label %130

101:                                              ; preds = %95, %90, %19, %7
  %102 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %103 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %103, i64 0, i32 0, i32 9
  %105 = bitcast [20 x i8]* %104 to i160*
  %106 = load i160, i160* %105, align 8
  %107 = lshr i160 %106, 71
  %108 = trunc i160 %107 to i32
  %109 = and i32 %108, 7
  %110 = add nsw i32 %109, -3
  %111 = icmp ult i32 %110, 2
  br i1 %111, label %112, label %123

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8
  %118 = and i160 %117, 41538374868278621028243970633760768
  %119 = icmp eq i160 %118, 0
  %120 = icmp ne i32 %109, 3
  %121 = xor i1 %120, %119
  %122 = select i1 %121, i32 1, i32 2
  br label %123

123:                                              ; preds = %112, %101
  %124 = phi i32 [ %122, %112 ], [ %109, %101 ]
  %125 = icmp eq i32 %124, 1
  %126 = select i1 %125, i32 1, i32 2
  %127 = tail call %"class.blink::FloatingObject"* @_ZN5blink14FloatingObject6CreateEPNS_9LayoutBoxENS0_4TypeE(%"class.blink::LayoutBox"* %1, i32 %126) #16
  %128 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %129 = tail call %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects3AddENSt3__110unique_ptrINS_14FloatingObjectENS1_14default_deleteIS3_EEEE(%"class.blink::FloatingObjects"* %128, %"class.blink::FloatingObject"* %127) #16
  br label %130

130:                                              ; preds = %98, %123
  %131 = phi %"class.blink::FloatingObject"* [ %129, %123 ], [ %100, %98 ]
  ret %"class.blink::FloatingObject"* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow19AdjustFloatingBlockERKNS_10MarginInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::MarginInfo"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %12 = select i1 %9, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 0
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 34
  %17 = icmp eq i16 %16, 34
  br i1 %17, label %35, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 %22) #16
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %28) #16
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !2
  br label %35

35:                                               ; preds = %18, %2
  %36 = phi i32 [ %13, %2 ], [ %34, %18 ]
  %37 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %36, %"class.blink::LineWidth"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

declare void @_ZN5blink27LayoutMultiColumnFlowThread17SkipColumnSpannerEPKNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow22HandleAfterSideOfBlockEPNS_9LayoutBoxENS_10LayoutUnitES3_RNS_10MarginInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*, i32, i32, %"class.blink::MarginInfo"* nocapture dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %4, i64 0, i32 0
  %9 = load i16, i16* %8, align 4
  %10 = or i16 %9, 64
  store i16 %10, i16* %8, align 4
  %11 = and i16 %9, 1024
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %24 = select i1 %21, i32* %22, i32* %23
  %25 = load i32, i32* %24, align 4
  %26 = tail call { i64, i64 } @_ZNK5blink15LayoutBlockFlow20MarginValuesForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, -1
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %28) #16
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !2
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 15211807202738752817960438464512
  %40 = icmp eq i160 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %13
  %42 = load i32, i32* %22, align 4
  %43 = icmp eq i32 %42, %34
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  store i32 %34, i32* %22, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %14) #16
  br label %49

45:                                               ; preds = %13
  %46 = load i32, i32* %23, align 4
  %47 = icmp eq i32 %46, %34
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  store i32 %34, i32* %23, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %14) #16
  br label %49

49:                                               ; preds = %5, %48, %45, %44, %41
  %50 = load i16, i16* %8, align 4
  %51 = and i16 %50, 12
  %52 = icmp eq i16 %51, 4
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = and i16 %50, -5
  store i16 %54, i16* %8, align 4
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi i16 [ %50, %49 ], [ %54, %53 ]
  %57 = and i16 %56, 68
  %58 = icmp eq i16 %57, 68
  %59 = and i16 %56, 34
  %60 = icmp eq i16 %59, 34
  %61 = or i1 %58, %60
  br i1 %61, label %122, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %66, label %73

66:                                               ; preds = %62, %66
  %67 = phi %"class.blink::LayoutObject"* [ %69, %66 ], [ %7, %62 ]
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 7
  %69 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %69, i64 0, i32 6, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %66, label %73

73:                                               ; preds = %66, %62
  %74 = phi %"class.blink::Node"* [ %64, %62 ], [ %71, %66 ]
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::Document"*, %"class.blink::Document"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %78, i64 0, i32 33
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  %82 = and i16 %56, 272
  %83 = icmp eq i16 %82, 272
  %84 = and i1 %83, %81
  br i1 %84, label %122, label %85

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 9
  %90 = bitcast [20 x i8]* %89 to i160*
  %91 = load i160, i160* %90, align 8
  %92 = and i160 %91, 15211807202738752817960438464512
  %93 = icmp eq i160 %92, 0
  %94 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %95 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %96 = select i1 %93, i32* %94, i32* %95
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %4, i64 0, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %4, i64 0, i32 2, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, -1
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %99, i32 %101) #16
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !2
  %108 = icmp slt i32 %107, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %107) #16
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !2
  br i1 %93, label %114, label %118

114:                                              ; preds = %85
  %115 = load i32, i32* %94, align 4
  %116 = icmp eq i32 %115, %113
  br i1 %116, label %122, label %117

117:                                              ; preds = %114
  store i32 %113, i32* %94, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %86) #16
  br label %122

118:                                              ; preds = %85
  %119 = load i32, i32* %95, align 4
  %120 = icmp eq i32 %119, %113
  br i1 %120, label %122, label %121

121:                                              ; preds = %118
  store i32 %113, i32* %95, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %86) #16
  br label %122

122:                                              ; preds = %73, %121, %118, %117, %114, %55
  %123 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 15211807202738752817960438464512
  %130 = icmp eq i160 %129, 0
  %131 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %132 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %133 = select i1 %130, i32* %131, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %3, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %3) #16
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !2
  br i1 %130, label %141, label %145

141:                                              ; preds = %122
  %142 = load i32, i32* %131, align 4
  %143 = icmp eq i32 %142, %140
  br i1 %143, label %149, label %144

144:                                              ; preds = %141
  store i32 %140, i32* %131, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %123) #16
  br label %149

145:                                              ; preds = %122
  %146 = load i32, i32* %132, align 4
  %147 = icmp eq i32 %146, %140
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  store i32 %140, i32* %132, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %123) #16
  br label %149

149:                                              ; preds = %141, %144, %145, %148
  %150 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %124, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %150, i64 0, i32 0, i32 9
  %152 = bitcast [20 x i8]* %151 to i160*
  %153 = load i160, i160* %152, align 8
  %154 = and i160 %153, 15211807202738752817960438464512
  %155 = icmp eq i160 %154, 0
  %156 = select i1 %155, i32* %131, i32* %132
  %157 = load i32, i32* %156, align 4
  %158 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %3) #16
  %159 = extractvalue { i32, i1 } %158, 1
  %160 = extractvalue { i32, i1 } %158, 0
  %161 = select i1 %159, i32 %136, i32 %160, !prof !2
  %162 = icmp slt i32 %157, %161
  %163 = select i1 %162, i32 %161, i32 %157
  br i1 %155, label %164, label %168

164:                                              ; preds = %149
  %165 = load i32, i32* %131, align 4
  %166 = icmp eq i32 %165, %163
  br i1 %166, label %172, label %167

167:                                              ; preds = %164
  store i32 %163, i32* %131, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %123) #16
  br label %172

168:                                              ; preds = %149
  %169 = load i32, i32* %132, align 4
  %170 = icmp eq i32 %169, %163
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  store i32 %163, i32* %132, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %123) #16
  br label %172

172:                                              ; preds = %164, %167, %168, %171
  tail call void @_ZN5blink15LayoutBlockFlow24SetCollapsedBottomMarginERKNS_10MarginInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::MarginInfo"* dereferenceable(12) %4)
  %173 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %174 = load %"class.blink::Node"*, %"class.blink::Node"** %173, align 8
  %175 = icmp eq %"class.blink::Node"* %174, null
  br i1 %175, label %176, label %183

176:                                              ; preds = %172, %176
  %177 = phi %"class.blink::LayoutObject"* [ %179, %176 ], [ %7, %172 ]
  %178 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %177, i64 0, i32 7
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 6, i32 0, i32 0
  %181 = load %"class.blink::Node"*, %"class.blink::Node"** %180, align 8
  %182 = icmp eq %"class.blink::Node"* %181, null
  br i1 %182, label %176, label %183

183:                                              ; preds = %176, %172
  %184 = phi %"class.blink::Node"* [ %174, %172 ], [ %181, %176 ]
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %184, i64 0, i32 3, i32 0, i32 0
  %186 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %186, i64 0, i32 2, i32 0, i32 0
  %188 = load %"class.blink::Document"*, %"class.blink::Document"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %188, i64 0, i32 113
  %190 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %190, i64 0, i32 3
  %192 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %192, i64 0, i32 0
  %194 = load i8, i8* %193, align 8
  %195 = and i8 %194, 1
  %196 = icmp ne i8 %195, 0
  %197 = icmp ne %"class.blink::LayoutBox"* %1, null
  %198 = and i1 %197, %196
  br i1 %198, label %199, label %264

199:                                              ; preds = %183
  %200 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBlockFlow"*)***
  %201 = load i32 (%"class.blink::LayoutBlockFlow"*)**, i32 (%"class.blink::LayoutBlockFlow"*)*** %200, align 8
  %202 = getelementptr inbounds i32 (%"class.blink::LayoutBlockFlow"*)*, i32 (%"class.blink::LayoutBlockFlow"*)** %201, i64 159
  %203 = load i32 (%"class.blink::LayoutBlockFlow"*)*, i32 (%"class.blink::LayoutBlockFlow"*)** %202, align 8
  %204 = tail call i32 %203(%"class.blink::LayoutBlockFlow"* %0) #16
  %205 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %206 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %205, align 8
  %207 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %206, i64 159
  %208 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %207, align 8
  %209 = tail call i32 %208(%"class.blink::LayoutBox"* nonnull %1) #16
  %210 = tail call i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32 %204, i32 %209) #16
  %211 = icmp eq i32 %210, 2
  br i1 %211, label %214, label %212

212:                                              ; preds = %199
  %213 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %123, i32 %210) #16
  br i1 %213, label %218, label %214

214:                                              ; preds = %212, %199
  %215 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %216 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %215, align 8
  %217 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %216, null
  br i1 %217, label %241, label %234

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %220 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %219, align 8
  %221 = trunc i32 %210 to i8
  %222 = shl i8 %221, 4
  %223 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %224 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %220, null
  br i1 %224, label %225, label %234

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %223, i64 0, i32 0
  %227 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %228 = bitcast i8* %227 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %228, %"class.blink::LayoutBlockFlow"* %0) #16
  %229 = getelementptr inbounds i8, i8* %227, i64 -4
  %230 = bitcast i8* %229 to i16*
  %231 = load atomic i16, i16* %230 monotonic, align 2
  %232 = or i16 %231, 1
  store atomic i16 %232, i16* %230 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %223, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %228) #16
  %233 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %226, align 8
  br label %234

234:                                              ; preds = %225, %218, %214
  %235 = phi i8 [ %222, %225 ], [ %222, %218 ], [ 32, %214 ]
  %236 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %233, %225 ], [ %220, %218 ], [ %216, %214 ]
  %237 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %236, i64 0, i32 7
  %238 = load i8, i8* %237, align 8
  %239 = and i8 %238, 15
  %240 = or i8 %239, %235
  store i8 %240, i8* %237, align 8
  br label %241

241:                                              ; preds = %214, %234
  %242 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #16
  %243 = bitcast %"class.blink::LayoutBox"* %1 to %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)***
  %244 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)**, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*** %243, align 8
  %245 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)** %244, i64 162
  %246 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)** %245, align 8
  %247 = tail call %"class.WTF::StringImpl"* %246(%"class.blink::LayoutBox"* nonnull %1) #16
  %248 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %247, %"class.WTF::StringImpl"** %248, align 8
  call void @_ZN5blink15LayoutBlockFlow24SetPropagatedEndPageNameERKN3WTF12AtomicStringE(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6)
  %249 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %249, label %263, label %250

250:                                              ; preds = %241
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #16
  br label %263

263:                                              ; preds = %241, %259, %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #16
  br label %264

264:                                              ; preds = %263, %183
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MarginInfoC2EPNS_15LayoutBlockFlowENS_10LayoutUnitES3_(%"class.blink::MarginInfo"* nocapture, %"class.blink::LayoutBlockFlow"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %0, i64 0, i32 0
  %6 = load i16, i16* %5, align 4
  %7 = and i16 %6, -2025
  %8 = or i16 %7, 40
  store i16 %8, i16* %5, align 4
  %9 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %15 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %15, i64 182
  %17 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutBlockFlow"* %1) #16
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %21 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %21, i64 25
  %23 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* %11) #16
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = icmp eq %"class.blink::LayoutBlockFlow"* %1, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = load i16, i16* %5, align 4
  %29 = or i16 %28, 1
  store i16 %29, i16* %5, align 4
  br label %44

30:                                               ; preds = %19, %4
  %31 = load i16, i16* %5, align 4
  %32 = and i16 %31, -2
  store i16 %32, i16* %5, align 4
  br label %49

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %11, i32 55) #16
  %39 = xor i1 %38, true
  %40 = zext i1 %39 to i16
  %41 = load i16, i16* %5, align 4
  %42 = and i16 %41, -2
  %43 = or i16 %42, %40
  store i16 %43, i16* %5, align 4
  br i1 %38, label %49, label %44

44:                                               ; preds = %27, %33
  %45 = phi i16 [ %29, %27 ], [ %43, %33 ]
  %46 = icmp eq i32 %2, 0
  %47 = zext i1 %46 to i16
  %48 = shl nuw nsw i16 %47, 1
  br label %49

49:                                               ; preds = %30, %33, %44
  %50 = phi i16 [ %43, %33 ], [ %45, %44 ], [ %32, %30 ]
  %51 = phi i16 [ 0, %33 ], [ %48, %44 ], [ 0, %30 ]
  %52 = and i16 %50, -3
  %53 = or i16 %52, %51
  store i16 %53, i16* %5, align 4
  %54 = and i16 %50, 1
  %55 = icmp eq i16 %54, 0
  %56 = icmp ne i32 %3, 0
  %57 = or i1 %56, %55
  br i1 %57, label %88, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = and i160 %61, 15211807202738752817960438464512
  %63 = icmp eq i160 %62, 0
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %65, i64 0, i32 3
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %65, i64 0, i32 8
  %68 = select i1 %63, %"class.blink::Length"* %66, %"class.blink::Length"* %67
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %68, i64 0, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %88

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %68, i64 0, i32 3
  %74 = load i8, i8* %73, align 2, !range !21
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.blink::Length"* %68 to float*
  %78 = load float, float* %77, align 4
  br label %83

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %68, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to float
  br label %83

83:                                               ; preds = %76, %79
  %84 = phi float [ %78, %76 ], [ %82, %79 ]
  %85 = fcmp oeq float %84, 0.000000e+00
  %86 = zext i1 %85 to i16
  %87 = shl nuw nsw i16 %86, 2
  br label %88

88:                                               ; preds = %49, %58, %83
  %89 = phi i16 [ 0, %49 ], [ 0, %58 ], [ %87, %83 ]
  %90 = and i16 %53, -5
  %91 = or i16 %89, %90
  store i16 %91, i16* %5, align 4
  %92 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %93, i64 92
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::LayoutObject"* %11, i32 46) #16
  br i1 %96, label %126, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %99 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %98 to i96*
  %100 = load i96, i96* %99, align 4
  %101 = and i96 %100, 16777216
  %102 = icmp eq i96 %101, 0
  br i1 %102, label %103, label %126

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %126, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, 48
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %126

112:                                              ; preds = %107
  %113 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %114 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 1, i32 2
  %117 = bitcast %"class.blink::Member.318"* %116 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %118 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %118, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %120, %122
  %124 = zext i1 %123 to i16
  %125 = shl nuw nsw i16 %124, 4
  br label %126

126:                                              ; preds = %112, %107, %103, %97, %88
  %127 = phi i16 [ 16, %88 ], [ 0, %103 ], [ %125, %112 ], [ 0, %107 ], [ 0, %97 ]
  %128 = load i16, i16* %5, align 4
  %129 = and i16 %128, -17
  %130 = or i16 %129, %127
  store i16 %130, i16* %5, align 4
  %131 = and i16 %128, 2
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %178, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 2, i32 0, i32 0
  %135 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %134, align 8
  %136 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %135, i64 0, i32 0, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  br label %178

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %142, i64 0, i32 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8, !noalias !108
  %146 = lshr i160 %145, 102
  %147 = trunc i160 %146 to i8
  %148 = and i8 %147, 3
  %149 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i8*
  switch i8 %148, label %150 [
    i8 0, label %159
    i8 1, label %151
  ]

150:                                              ; preds = %140
  br label %151

151:                                              ; preds = %150, %140
  %152 = phi { i64, i64 } [ { i64 1033, i64 0 }, %150 ], [ { i64 1041, i64 0 }, %140 ]
  %153 = extractvalue { i64, i64 } %152, 0
  %154 = extractvalue { i64, i64 } %152, 1
  %155 = getelementptr inbounds i8, i8* %149, i64 %154
  %156 = bitcast i8* %155 to %"class.blink::LayoutBoxModelObject"*
  %157 = and i64 %153, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %169, label %159

159:                                              ; preds = %151, %140
  %160 = phi %"class.blink::LayoutBoxModelObject"* [ %156, %151 ], [ %141, %140 ]
  %161 = phi i8* [ %155, %151 ], [ %149, %140 ]
  %162 = phi i64 [ %153, %151 ], [ 1017, %140 ]
  %163 = bitcast i8* %161 to i8**
  %164 = load i8*, i8** %163, align 8
  %165 = add i64 %162, -1
  %166 = getelementptr i8, i8* %164, i64 %165
  %167 = bitcast i8* %166 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %168 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %167, align 8
  br label %171

169:                                              ; preds = %151
  %170 = inttoptr i64 %153 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %171

171:                                              ; preds = %169, %159
  %172 = phi %"class.blink::LayoutBoxModelObject"* [ %160, %159 ], [ %156, %169 ]
  %173 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %168, %159 ], [ %170, %169 ]
  %174 = tail call i32 %173(%"class.blink::LayoutBoxModelObject"* %172) #16
  %175 = icmp sgt i32 %174, 0
  %176 = select i1 %175, i32 %174, i32 0
  %177 = load i16, i16* %5, align 4
  br label %178

178:                                              ; preds = %126, %171, %137
  %179 = phi i16 [ %130, %137 ], [ %177, %171 ], [ %130, %126 ]
  %180 = phi i32 [ %139, %137 ], [ %176, %171 ], [ 0, %126 ]
  store i32 %180, i32* %9, align 4
  %181 = and i16 %179, 2
  %182 = icmp eq i16 %181, 0
  br i1 %182, label %239, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 2, i32 0, i32 0
  %185 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %184, align 8
  %186 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %185, i64 0, i32 0, i32 1, i32 0
  %189 = load i32, i32* %188, align 4
  br label %239

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %193 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 9
  %194 = bitcast [20 x i8]* %193 to i160*
  %195 = load i160, i160* %194, align 8, !noalias !111
  %196 = lshr i160 %195, 102
  %197 = trunc i160 %196 to i8
  %198 = and i8 %197, 3
  %199 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i8*
  switch i8 %198, label %200 [
    i8 0, label %209
    i8 1, label %201
  ]

200:                                              ; preds = %190
  br label %201

201:                                              ; preds = %200, %190
  %202 = phi { i64, i64 } [ { i64 1033, i64 0 }, %200 ], [ { i64 1041, i64 0 }, %190 ]
  %203 = extractvalue { i64, i64 } %202, 0
  %204 = extractvalue { i64, i64 } %202, 1
  %205 = getelementptr inbounds i8, i8* %199, i64 %204
  %206 = bitcast i8* %205 to %"class.blink::LayoutBoxModelObject"*
  %207 = and i64 %203, 1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %201, %190
  %210 = phi %"class.blink::LayoutBoxModelObject"* [ %206, %201 ], [ %191, %190 ]
  %211 = phi i8* [ %205, %201 ], [ %199, %190 ]
  %212 = phi i64 [ %203, %201 ], [ 1017, %190 ]
  %213 = bitcast i8* %211 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = add i64 %212, -1
  %216 = getelementptr i8, i8* %214, i64 %215
  %217 = bitcast i8* %216 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %218 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %217, align 8
  br label %221

219:                                              ; preds = %201
  %220 = inttoptr i64 %203 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %221

221:                                              ; preds = %219, %209
  %222 = phi %"class.blink::LayoutBoxModelObject"* [ %210, %209 ], [ %206, %219 ]
  %223 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %218, %209 ], [ %220, %219 ]
  %224 = tail call i32 %223(%"class.blink::LayoutBoxModelObject"* %222) #16
  %225 = tail call i1 @llvm.is.constant.i32(i32 %224) #16
  br i1 %225, label %226, label %230

226:                                              ; preds = %221
  %227 = sub i32 0, %224
  %228 = icmp eq i32 %227, -2147483648
  %229 = select i1 %228, i32 2147483647, i32 %227
  br label %235

230:                                              ; preds = %221
  %231 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %224) #16
  %232 = extractvalue { i32, i1 } %231, 1
  %233 = extractvalue { i32, i1 } %231, 0
  %234 = select i1 %232, i32 2147483647, i32 %233
  br label %235

235:                                              ; preds = %230, %226
  %236 = phi i32 [ %229, %226 ], [ %234, %230 ]
  %237 = icmp sgt i32 %236, 0
  %238 = select i1 %237, i32 %236, i32 0
  br label %239

239:                                              ; preds = %178, %235, %187
  %240 = phi i32 [ %189, %187 ], [ %238, %235 ], [ 0, %178 ]
  store i32 %240, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink15LayoutBlockFlow20MarginValuesForChildERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %7 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %7, i64 24
  %9 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* %5) #16
  %11 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  %12 = select i1 %10, %"class.blink::LayoutBlockFlow"* %11, %"class.blink::LayoutBlockFlow"* null
  br label %13

13:                                               ; preds = %2, %4
  %14 = phi %"class.blink::LayoutBlockFlow"* [ %12, %4 ], [ null, %2 ]
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %300, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 5, i32 0
  %20 = bitcast %"class.blink::ComputedStyle"** %19 to %"class.blink::ComputedStyleBase"**
  %21 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %21, i64 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %26 = bitcast %"class.blink::ComputedStyle"** %25 to %"class.blink::ComputedStyleBase"**
  %27 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %27, i64 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = xor i160 %30, %24
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 0
  br i1 %33, label %34, label %300

34:                                               ; preds = %18
  %35 = icmp eq %"class.blink::LayoutBlockFlow"* %14, null
  br i1 %35, label %237, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 2, i32 0, i32 0
  %38 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %37, align 8
  %39 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %38, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  br label %83

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8, !noalias !114
  %50 = lshr i160 %49, 102
  %51 = trunc i160 %50 to i8
  %52 = and i8 %51, 3
  %53 = bitcast %"class.blink::LayoutBlockFlow"* %14 to i8*
  switch i8 %52, label %54 [
    i8 0, label %63
    i8 1, label %55
  ]

54:                                               ; preds = %43
  br label %55

55:                                               ; preds = %54, %43
  %56 = phi { i64, i64 } [ { i64 1033, i64 0 }, %54 ], [ { i64 1041, i64 0 }, %43 ]
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = extractvalue { i64, i64 } %56, 1
  %59 = getelementptr inbounds i8, i8* %53, i64 %58
  %60 = bitcast i8* %59 to %"class.blink::LayoutBoxModelObject"*
  %61 = and i64 %57, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %55, %43
  %64 = phi %"class.blink::LayoutBoxModelObject"* [ %60, %55 ], [ %44, %43 ]
  %65 = phi i8* [ %59, %55 ], [ %53, %43 ]
  %66 = phi i64 [ %57, %55 ], [ 1017, %43 ]
  %67 = bitcast i8* %65 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = add i64 %66, -1
  %70 = getelementptr i8, i8* %68, i64 %69
  %71 = bitcast i8* %70 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %72 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, align 8
  br label %75

73:                                               ; preds = %55
  %74 = inttoptr i64 %57 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %75

75:                                               ; preds = %63, %73
  %76 = phi %"class.blink::LayoutBoxModelObject"* [ %64, %63 ], [ %60, %73 ]
  %77 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %72, %63 ], [ %74, %73 ]
  %78 = tail call i32 %77(%"class.blink::LayoutBoxModelObject"* %76) #16
  %79 = icmp sgt i32 %78, 0
  %80 = select i1 %79, i32 %78, i32 0
  %81 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %37, align 8
  %82 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %75, %40
  %84 = phi i32 [ %42, %40 ], [ %80, %75 ]
  %85 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %38, %40 ], [ %81, %75 ]
  %86 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %85, i64 0, i32 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 4
  br label %137

88:                                               ; preds = %75
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8, !noalias !117
  %93 = lshr i160 %92, 102
  %94 = trunc i160 %93 to i8
  %95 = and i8 %94, 3
  switch i8 %95, label %96 [
    i8 0, label %105
    i8 1, label %97
  ]

96:                                               ; preds = %88
  br label %97

97:                                               ; preds = %96, %88
  %98 = phi { i64, i64 } [ { i64 1033, i64 0 }, %96 ], [ { i64 1041, i64 0 }, %88 ]
  %99 = extractvalue { i64, i64 } %98, 0
  %100 = extractvalue { i64, i64 } %98, 1
  %101 = getelementptr inbounds i8, i8* %53, i64 %100
  %102 = bitcast i8* %101 to %"class.blink::LayoutBoxModelObject"*
  %103 = and i64 %99, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %97, %88
  %106 = phi %"class.blink::LayoutBoxModelObject"* [ %102, %97 ], [ %44, %88 ]
  %107 = phi i8* [ %101, %97 ], [ %53, %88 ]
  %108 = phi i64 [ %99, %97 ], [ 1017, %88 ]
  %109 = bitcast i8* %107 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = add i64 %108, -1
  %112 = getelementptr i8, i8* %110, i64 %111
  %113 = bitcast i8* %112 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %113, align 8
  br label %117

115:                                              ; preds = %97
  %116 = inttoptr i64 %99 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.blink::LayoutBoxModelObject"* [ %106, %105 ], [ %102, %115 ]
  %119 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %114, %105 ], [ %116, %115 ]
  %120 = tail call i32 %119(%"class.blink::LayoutBoxModelObject"* %118) #16
  %121 = tail call i1 @llvm.is.constant.i32(i32 %120) #16
  br i1 %121, label %122, label %126

122:                                              ; preds = %117
  %123 = sub i32 0, %120
  %124 = icmp eq i32 %123, -2147483648
  %125 = select i1 %124, i32 2147483647, i32 %123
  br label %131

126:                                              ; preds = %117
  %127 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %120) #16
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 2147483647, i32 %129
  br label %131

131:                                              ; preds = %122, %126
  %132 = phi i32 [ %125, %122 ], [ %130, %126 ]
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  %135 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %37, align 8
  %136 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %135, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %83, %131
  %138 = phi i32 [ %87, %83 ], [ %134, %131 ]
  %139 = phi i32 [ %84, %83 ], [ %80, %131 ]
  %140 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %85, %83 ], [ %135, %131 ]
  %141 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %140, i64 0, i32 0, i32 2, i32 0
  %142 = load i32, i32* %141, align 4
  br label %183

143:                                              ; preds = %131
  %144 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %146 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %146, i64 0, i32 0, i32 9
  %148 = bitcast [20 x i8]* %147 to i160*
  %149 = load i160, i160* %148, align 8, !noalias !120
  %150 = lshr i160 %149, 102
  %151 = trunc i160 %150 to i8
  %152 = and i8 %151, 3
  %153 = bitcast %"class.blink::LayoutBlockFlow"* %14 to i8*
  switch i8 %152, label %154 [
    i8 0, label %163
    i8 1, label %155
  ]

154:                                              ; preds = %143
  br label %155

155:                                              ; preds = %154, %143
  %156 = phi { i64, i64 } [ { i64 1041, i64 0 }, %154 ], [ { i64 1033, i64 0 }, %143 ]
  %157 = extractvalue { i64, i64 } %156, 0
  %158 = extractvalue { i64, i64 } %156, 1
  %159 = getelementptr inbounds i8, i8* %153, i64 %158
  %160 = bitcast i8* %159 to %"class.blink::LayoutBoxModelObject"*
  %161 = and i64 %157, 1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %173, label %163

163:                                              ; preds = %155, %143
  %164 = phi %"class.blink::LayoutBoxModelObject"* [ %160, %155 ], [ %144, %143 ]
  %165 = phi i8* [ %159, %155 ], [ %153, %143 ]
  %166 = phi i64 [ %157, %155 ], [ 1025, %143 ]
  %167 = bitcast i8* %165 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = add i64 %166, -1
  %170 = getelementptr i8, i8* %168, i64 %169
  %171 = bitcast i8* %170 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %172 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %171, align 8
  br label %175

173:                                              ; preds = %155
  %174 = inttoptr i64 %157 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %175

175:                                              ; preds = %163, %173
  %176 = phi %"class.blink::LayoutBoxModelObject"* [ %164, %163 ], [ %160, %173 ]
  %177 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %172, %163 ], [ %174, %173 ]
  %178 = tail call i32 %177(%"class.blink::LayoutBoxModelObject"* %176) #16
  %179 = icmp sgt i32 %178, 0
  %180 = select i1 %179, i32 %178, i32 0
  %181 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %37, align 8
  %182 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %181, null
  br i1 %182, label %190, label %183

183:                                              ; preds = %137, %175
  %184 = phi i32 [ %138, %137 ], [ %134, %175 ]
  %185 = phi i32 [ %139, %137 ], [ %80, %175 ]
  %186 = phi i32 [ %142, %137 ], [ %180, %175 ]
  %187 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %140, %137 ], [ %181, %175 ]
  %188 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %187, i64 0, i32 0, i32 3, i32 0
  %189 = load i32, i32* %188, align 4
  br label %690

190:                                              ; preds = %175
  %191 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %145, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %191, i64 0, i32 0, i32 9
  %193 = bitcast [20 x i8]* %192 to i160*
  %194 = load i160, i160* %193, align 8, !noalias !123
  %195 = lshr i160 %194, 102
  %196 = trunc i160 %195 to i8
  %197 = and i8 %196, 3
  switch i8 %197, label %198 [
    i8 0, label %207
    i8 1, label %199
  ]

198:                                              ; preds = %190
  br label %199

199:                                              ; preds = %198, %190
  %200 = phi { i64, i64 } [ { i64 1041, i64 0 }, %198 ], [ { i64 1033, i64 0 }, %190 ]
  %201 = extractvalue { i64, i64 } %200, 0
  %202 = extractvalue { i64, i64 } %200, 1
  %203 = getelementptr inbounds i8, i8* %153, i64 %202
  %204 = bitcast i8* %203 to %"class.blink::LayoutBoxModelObject"*
  %205 = and i64 %201, 1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %217, label %207

207:                                              ; preds = %199, %190
  %208 = phi %"class.blink::LayoutBoxModelObject"* [ %204, %199 ], [ %144, %190 ]
  %209 = phi i8* [ %203, %199 ], [ %153, %190 ]
  %210 = phi i64 [ %201, %199 ], [ 1025, %190 ]
  %211 = bitcast i8* %209 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = add i64 %210, -1
  %214 = getelementptr i8, i8* %212, i64 %213
  %215 = bitcast i8* %214 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %216 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %215, align 8
  br label %219

217:                                              ; preds = %199
  %218 = inttoptr i64 %201 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %219

219:                                              ; preds = %217, %207
  %220 = phi %"class.blink::LayoutBoxModelObject"* [ %208, %207 ], [ %204, %217 ]
  %221 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %216, %207 ], [ %218, %217 ]
  %222 = tail call i32 %221(%"class.blink::LayoutBoxModelObject"* %220) #16
  %223 = tail call i1 @llvm.is.constant.i32(i32 %222) #16
  br i1 %223, label %224, label %228

224:                                              ; preds = %219
  %225 = sub i32 0, %222
  %226 = icmp eq i32 %225, -2147483648
  %227 = select i1 %226, i32 2147483647, i32 %225
  br label %233

228:                                              ; preds = %219
  %229 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %222) #16
  %230 = extractvalue { i32, i1 } %229, 1
  %231 = extractvalue { i32, i1 } %229, 0
  %232 = select i1 %230, i32 2147483647, i32 %231
  br label %233

233:                                              ; preds = %228, %224
  %234 = phi i32 [ %227, %224 ], [ %232, %228 ]
  %235 = icmp sgt i32 %234, 0
  %236 = select i1 %235, i32 %234, i32 0
  br label %690

237:                                              ; preds = %34
  %238 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %239 = lshr i160 %30, 102
  %240 = trunc i160 %239 to i8
  %241 = and i8 %240, 3
  %242 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %241, label %243 [
    i8 0, label %252
    i8 1, label %244
  ]

243:                                              ; preds = %237
  br label %244

244:                                              ; preds = %243, %237
  %245 = phi { i64, i64 } [ { i64 1033, i64 0 }, %243 ], [ { i64 1041, i64 0 }, %237 ]
  %246 = extractvalue { i64, i64 } %245, 0
  %247 = extractvalue { i64, i64 } %245, 1
  %248 = getelementptr inbounds i8, i8* %242, i64 %247
  %249 = bitcast i8* %248 to %"class.blink::LayoutBoxModelObject"*
  %250 = and i64 %246, 1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %262, label %252

252:                                              ; preds = %244, %237
  %253 = phi %"class.blink::LayoutBoxModelObject"* [ %249, %244 ], [ %238, %237 ]
  %254 = phi i8* [ %248, %244 ], [ %242, %237 ]
  %255 = phi i64 [ %246, %244 ], [ 1017, %237 ]
  %256 = bitcast i8* %254 to i8**
  %257 = load i8*, i8** %256, align 8
  %258 = add i64 %255, -1
  %259 = getelementptr i8, i8* %257, i64 %258
  %260 = bitcast i8* %259 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %261 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %260, align 8
  br label %264

262:                                              ; preds = %244
  %263 = inttoptr i64 %246 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %264

264:                                              ; preds = %252, %262
  %265 = phi %"class.blink::LayoutBoxModelObject"* [ %253, %252 ], [ %249, %262 ]
  %266 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %261, %252 ], [ %263, %262 ]
  %267 = tail call i32 %266(%"class.blink::LayoutBoxModelObject"* %265) #16
  %268 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %269 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %268, i64 0, i32 0, i32 9
  %270 = bitcast [20 x i8]* %269 to i160*
  %271 = load i160, i160* %270, align 8, !noalias !126
  %272 = lshr i160 %271, 102
  %273 = trunc i160 %272 to i8
  %274 = and i8 %273, 3
  switch i8 %274, label %275 [
    i8 0, label %284
    i8 1, label %276
  ]

275:                                              ; preds = %264
  br label %276

276:                                              ; preds = %275, %264
  %277 = phi { i64, i64 } [ { i64 1041, i64 0 }, %275 ], [ { i64 1033, i64 0 }, %264 ]
  %278 = extractvalue { i64, i64 } %277, 0
  %279 = extractvalue { i64, i64 } %277, 1
  %280 = getelementptr inbounds i8, i8* %242, i64 %279
  %281 = bitcast i8* %280 to %"class.blink::LayoutBoxModelObject"*
  %282 = and i64 %278, 1
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %294, label %284

284:                                              ; preds = %276, %264
  %285 = phi %"class.blink::LayoutBoxModelObject"* [ %281, %276 ], [ %238, %264 ]
  %286 = phi i8* [ %280, %276 ], [ %242, %264 ]
  %287 = phi i64 [ %278, %276 ], [ 1025, %264 ]
  %288 = bitcast i8* %286 to i8**
  %289 = load i8*, i8** %288, align 8
  %290 = add i64 %287, -1
  %291 = getelementptr i8, i8* %289, i64 %290
  %292 = bitcast i8* %291 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %293 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %292, align 8
  br label %296

294:                                              ; preds = %276
  %295 = inttoptr i64 %278 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %296

296:                                              ; preds = %284, %294
  %297 = phi %"class.blink::LayoutBoxModelObject"* [ %285, %284 ], [ %281, %294 ]
  %298 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %293, %284 ], [ %295, %294 ]
  %299 = tail call i32 %298(%"class.blink::LayoutBoxModelObject"* %297) #16
  br label %656

300:                                              ; preds = %18, %13
  %301 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %302 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %301 to i96*
  %303 = load i96, i96* %302, align 4
  %304 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %305 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %304 to i96*
  %306 = load i96, i96* %305, align 4
  %307 = xor i96 %306, %303
  %308 = trunc i96 %307 to i32
  %309 = icmp slt i32 %308, 0
  br i1 %309, label %581, label %310

310:                                              ; preds = %300
  %311 = icmp eq %"class.blink::LayoutBlockFlow"* %14, null
  br i1 %311, label %513, label %312

312:                                              ; preds = %310
  %313 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 2, i32 0, i32 0
  %314 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %313, align 8
  %315 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %314, null
  br i1 %315, label %319, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %314, i64 0, i32 0, i32 2, i32 0
  %318 = load i32, i32* %317, align 4
  br label %359

319:                                              ; preds = %312
  %320 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0
  %321 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %322 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %322, i64 0, i32 0, i32 9
  %324 = bitcast [20 x i8]* %323 to i160*
  %325 = load i160, i160* %324, align 8, !noalias !129
  %326 = lshr i160 %325, 102
  %327 = trunc i160 %326 to i8
  %328 = and i8 %327, 3
  %329 = bitcast %"class.blink::LayoutBlockFlow"* %14 to i8*
  switch i8 %328, label %330 [
    i8 0, label %339
    i8 1, label %331
  ]

330:                                              ; preds = %319
  br label %331

331:                                              ; preds = %330, %319
  %332 = phi { i64, i64 } [ { i64 1041, i64 0 }, %330 ], [ { i64 1033, i64 0 }, %319 ]
  %333 = extractvalue { i64, i64 } %332, 0
  %334 = extractvalue { i64, i64 } %332, 1
  %335 = getelementptr inbounds i8, i8* %329, i64 %334
  %336 = bitcast i8* %335 to %"class.blink::LayoutBoxModelObject"*
  %337 = and i64 %333, 1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %349, label %339

339:                                              ; preds = %331, %319
  %340 = phi %"class.blink::LayoutBoxModelObject"* [ %336, %331 ], [ %320, %319 ]
  %341 = phi i8* [ %335, %331 ], [ %329, %319 ]
  %342 = phi i64 [ %333, %331 ], [ 1025, %319 ]
  %343 = bitcast i8* %341 to i8**
  %344 = load i8*, i8** %343, align 8
  %345 = add i64 %342, -1
  %346 = getelementptr i8, i8* %344, i64 %345
  %347 = bitcast i8* %346 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %348 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %347, align 8
  br label %351

349:                                              ; preds = %331
  %350 = inttoptr i64 %333 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %351

351:                                              ; preds = %339, %349
  %352 = phi %"class.blink::LayoutBoxModelObject"* [ %340, %339 ], [ %336, %349 ]
  %353 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %348, %339 ], [ %350, %349 ]
  %354 = tail call i32 %353(%"class.blink::LayoutBoxModelObject"* %352) #16
  %355 = icmp sgt i32 %354, 0
  %356 = select i1 %355, i32 %354, i32 0
  %357 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %313, align 8
  %358 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %357, null
  br i1 %358, label %364, label %359

359:                                              ; preds = %351, %316
  %360 = phi i32 [ %318, %316 ], [ %356, %351 ]
  %361 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %314, %316 ], [ %357, %351 ]
  %362 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %361, i64 0, i32 0, i32 3, i32 0
  %363 = load i32, i32* %362, align 4
  br label %413

364:                                              ; preds = %351
  %365 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %321, align 8
  %366 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %365, i64 0, i32 0, i32 9
  %367 = bitcast [20 x i8]* %366 to i160*
  %368 = load i160, i160* %367, align 8, !noalias !132
  %369 = lshr i160 %368, 102
  %370 = trunc i160 %369 to i8
  %371 = and i8 %370, 3
  switch i8 %371, label %372 [
    i8 0, label %381
    i8 1, label %373
  ]

372:                                              ; preds = %364
  br label %373

373:                                              ; preds = %372, %364
  %374 = phi { i64, i64 } [ { i64 1041, i64 0 }, %372 ], [ { i64 1033, i64 0 }, %364 ]
  %375 = extractvalue { i64, i64 } %374, 0
  %376 = extractvalue { i64, i64 } %374, 1
  %377 = getelementptr inbounds i8, i8* %329, i64 %376
  %378 = bitcast i8* %377 to %"class.blink::LayoutBoxModelObject"*
  %379 = and i64 %375, 1
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %391, label %381

381:                                              ; preds = %373, %364
  %382 = phi %"class.blink::LayoutBoxModelObject"* [ %378, %373 ], [ %320, %364 ]
  %383 = phi i8* [ %377, %373 ], [ %329, %364 ]
  %384 = phi i64 [ %375, %373 ], [ 1025, %364 ]
  %385 = bitcast i8* %383 to i8**
  %386 = load i8*, i8** %385, align 8
  %387 = add i64 %384, -1
  %388 = getelementptr i8, i8* %386, i64 %387
  %389 = bitcast i8* %388 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %390 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %389, align 8
  br label %393

391:                                              ; preds = %373
  %392 = inttoptr i64 %375 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %393

393:                                              ; preds = %391, %381
  %394 = phi %"class.blink::LayoutBoxModelObject"* [ %382, %381 ], [ %378, %391 ]
  %395 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %390, %381 ], [ %392, %391 ]
  %396 = tail call i32 %395(%"class.blink::LayoutBoxModelObject"* %394) #16
  %397 = tail call i1 @llvm.is.constant.i32(i32 %396) #16
  br i1 %397, label %398, label %402

398:                                              ; preds = %393
  %399 = sub i32 0, %396
  %400 = icmp eq i32 %399, -2147483648
  %401 = select i1 %400, i32 2147483647, i32 %399
  br label %407

402:                                              ; preds = %393
  %403 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %396) #16
  %404 = extractvalue { i32, i1 } %403, 1
  %405 = extractvalue { i32, i1 } %403, 0
  %406 = select i1 %404, i32 2147483647, i32 %405
  br label %407

407:                                              ; preds = %398, %402
  %408 = phi i32 [ %401, %398 ], [ %406, %402 ]
  %409 = icmp sgt i32 %408, 0
  %410 = select i1 %409, i32 %408, i32 0
  %411 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %313, align 8
  %412 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %359, %407
  %414 = phi i32 [ %363, %359 ], [ %410, %407 ]
  %415 = phi i32 [ %360, %359 ], [ %356, %407 ]
  %416 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %361, %359 ], [ %411, %407 ]
  %417 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %416, i64 0, i32 0, i32 0, i32 0
  %418 = load i32, i32* %417, align 4
  br label %459

419:                                              ; preds = %407
  %420 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0
  %421 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %422 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %421, align 8
  %423 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %422, i64 0, i32 0, i32 9
  %424 = bitcast [20 x i8]* %423 to i160*
  %425 = load i160, i160* %424, align 8, !noalias !135
  %426 = lshr i160 %425, 102
  %427 = trunc i160 %426 to i8
  %428 = and i8 %427, 3
  %429 = bitcast %"class.blink::LayoutBlockFlow"* %14 to i8*
  switch i8 %428, label %430 [
    i8 0, label %439
    i8 1, label %431
  ]

430:                                              ; preds = %419
  br label %431

431:                                              ; preds = %430, %419
  %432 = phi { i64, i64 } [ { i64 1033, i64 0 }, %430 ], [ { i64 1041, i64 0 }, %419 ]
  %433 = extractvalue { i64, i64 } %432, 0
  %434 = extractvalue { i64, i64 } %432, 1
  %435 = getelementptr inbounds i8, i8* %429, i64 %434
  %436 = bitcast i8* %435 to %"class.blink::LayoutBoxModelObject"*
  %437 = and i64 %433, 1
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %449, label %439

439:                                              ; preds = %431, %419
  %440 = phi %"class.blink::LayoutBoxModelObject"* [ %436, %431 ], [ %420, %419 ]
  %441 = phi i8* [ %435, %431 ], [ %429, %419 ]
  %442 = phi i64 [ %433, %431 ], [ 1017, %419 ]
  %443 = bitcast i8* %441 to i8**
  %444 = load i8*, i8** %443, align 8
  %445 = add i64 %442, -1
  %446 = getelementptr i8, i8* %444, i64 %445
  %447 = bitcast i8* %446 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %448 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %447, align 8
  br label %451

449:                                              ; preds = %431
  %450 = inttoptr i64 %433 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %451

451:                                              ; preds = %439, %449
  %452 = phi %"class.blink::LayoutBoxModelObject"* [ %440, %439 ], [ %436, %449 ]
  %453 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %448, %439 ], [ %450, %449 ]
  %454 = tail call i32 %453(%"class.blink::LayoutBoxModelObject"* %452) #16
  %455 = icmp sgt i32 %454, 0
  %456 = select i1 %455, i32 %454, i32 0
  %457 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %313, align 8
  %458 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %457, null
  br i1 %458, label %466, label %459

459:                                              ; preds = %413, %451
  %460 = phi i32 [ %414, %413 ], [ %410, %451 ]
  %461 = phi i32 [ %415, %413 ], [ %356, %451 ]
  %462 = phi i32 [ %418, %413 ], [ %456, %451 ]
  %463 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %416, %413 ], [ %457, %451 ]
  %464 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %463, i64 0, i32 0, i32 1, i32 0
  %465 = load i32, i32* %464, align 4
  br label %690

466:                                              ; preds = %451
  %467 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %421, align 8
  %468 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %467, i64 0, i32 0, i32 9
  %469 = bitcast [20 x i8]* %468 to i160*
  %470 = load i160, i160* %469, align 8, !noalias !138
  %471 = lshr i160 %470, 102
  %472 = trunc i160 %471 to i8
  %473 = and i8 %472, 3
  switch i8 %473, label %474 [
    i8 0, label %483
    i8 1, label %475
  ]

474:                                              ; preds = %466
  br label %475

475:                                              ; preds = %474, %466
  %476 = phi { i64, i64 } [ { i64 1033, i64 0 }, %474 ], [ { i64 1041, i64 0 }, %466 ]
  %477 = extractvalue { i64, i64 } %476, 0
  %478 = extractvalue { i64, i64 } %476, 1
  %479 = getelementptr inbounds i8, i8* %429, i64 %478
  %480 = bitcast i8* %479 to %"class.blink::LayoutBoxModelObject"*
  %481 = and i64 %477, 1
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %493, label %483

483:                                              ; preds = %475, %466
  %484 = phi %"class.blink::LayoutBoxModelObject"* [ %480, %475 ], [ %420, %466 ]
  %485 = phi i8* [ %479, %475 ], [ %429, %466 ]
  %486 = phi i64 [ %477, %475 ], [ 1017, %466 ]
  %487 = bitcast i8* %485 to i8**
  %488 = load i8*, i8** %487, align 8
  %489 = add i64 %486, -1
  %490 = getelementptr i8, i8* %488, i64 %489
  %491 = bitcast i8* %490 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %492 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %491, align 8
  br label %495

493:                                              ; preds = %475
  %494 = inttoptr i64 %477 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %495

495:                                              ; preds = %493, %483
  %496 = phi %"class.blink::LayoutBoxModelObject"* [ %484, %483 ], [ %480, %493 ]
  %497 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %492, %483 ], [ %494, %493 ]
  %498 = tail call i32 %497(%"class.blink::LayoutBoxModelObject"* %496) #16
  %499 = tail call i1 @llvm.is.constant.i32(i32 %498) #16
  br i1 %499, label %500, label %504

500:                                              ; preds = %495
  %501 = sub i32 0, %498
  %502 = icmp eq i32 %501, -2147483648
  %503 = select i1 %502, i32 2147483647, i32 %501
  br label %509

504:                                              ; preds = %495
  %505 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %498) #16
  %506 = extractvalue { i32, i1 } %505, 1
  %507 = extractvalue { i32, i1 } %505, 0
  %508 = select i1 %506, i32 2147483647, i32 %507
  br label %509

509:                                              ; preds = %504, %500
  %510 = phi i32 [ %503, %500 ], [ %508, %504 ]
  %511 = icmp sgt i32 %510, 0
  %512 = select i1 %511, i32 %510, i32 0
  br label %690

513:                                              ; preds = %310
  %514 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %515 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %516 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %515, align 8
  %517 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %516, i64 0, i32 0, i32 9
  %518 = bitcast [20 x i8]* %517 to i160*
  %519 = load i160, i160* %518, align 8, !noalias !141
  %520 = lshr i160 %519, 102
  %521 = trunc i160 %520 to i8
  %522 = and i8 %521, 3
  %523 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %522, label %524 [
    i8 0, label %533
    i8 1, label %525
  ]

524:                                              ; preds = %513
  br label %525

525:                                              ; preds = %524, %513
  %526 = phi { i64, i64 } [ { i64 1041, i64 0 }, %524 ], [ { i64 1033, i64 0 }, %513 ]
  %527 = extractvalue { i64, i64 } %526, 0
  %528 = extractvalue { i64, i64 } %526, 1
  %529 = getelementptr inbounds i8, i8* %523, i64 %528
  %530 = bitcast i8* %529 to %"class.blink::LayoutBoxModelObject"*
  %531 = and i64 %527, 1
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %543, label %533

533:                                              ; preds = %525, %513
  %534 = phi %"class.blink::LayoutBoxModelObject"* [ %530, %525 ], [ %514, %513 ]
  %535 = phi i8* [ %529, %525 ], [ %523, %513 ]
  %536 = phi i64 [ %527, %525 ], [ 1025, %513 ]
  %537 = bitcast i8* %535 to i8**
  %538 = load i8*, i8** %537, align 8
  %539 = add i64 %536, -1
  %540 = getelementptr i8, i8* %538, i64 %539
  %541 = bitcast i8* %540 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %542 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %541, align 8
  br label %545

543:                                              ; preds = %525
  %544 = inttoptr i64 %527 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %545

545:                                              ; preds = %533, %543
  %546 = phi %"class.blink::LayoutBoxModelObject"* [ %534, %533 ], [ %530, %543 ]
  %547 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %542, %533 ], [ %544, %543 ]
  %548 = tail call i32 %547(%"class.blink::LayoutBoxModelObject"* %546) #16
  %549 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %515, align 8
  %550 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %549, i64 0, i32 0, i32 9
  %551 = bitcast [20 x i8]* %550 to i160*
  %552 = load i160, i160* %551, align 8, !noalias !144
  %553 = lshr i160 %552, 102
  %554 = trunc i160 %553 to i8
  %555 = and i8 %554, 3
  switch i8 %555, label %556 [
    i8 0, label %565
    i8 1, label %557
  ]

556:                                              ; preds = %545
  br label %557

557:                                              ; preds = %556, %545
  %558 = phi { i64, i64 } [ { i64 1033, i64 0 }, %556 ], [ { i64 1041, i64 0 }, %545 ]
  %559 = extractvalue { i64, i64 } %558, 0
  %560 = extractvalue { i64, i64 } %558, 1
  %561 = getelementptr inbounds i8, i8* %523, i64 %560
  %562 = bitcast i8* %561 to %"class.blink::LayoutBoxModelObject"*
  %563 = and i64 %559, 1
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %575, label %565

565:                                              ; preds = %557, %545
  %566 = phi %"class.blink::LayoutBoxModelObject"* [ %562, %557 ], [ %514, %545 ]
  %567 = phi i8* [ %561, %557 ], [ %523, %545 ]
  %568 = phi i64 [ %559, %557 ], [ 1017, %545 ]
  %569 = bitcast i8* %567 to i8**
  %570 = load i8*, i8** %569, align 8
  %571 = add i64 %568, -1
  %572 = getelementptr i8, i8* %570, i64 %571
  %573 = bitcast i8* %572 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %574 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %573, align 8
  br label %577

575:                                              ; preds = %557
  %576 = inttoptr i64 %559 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %577

577:                                              ; preds = %565, %575
  %578 = phi %"class.blink::LayoutBoxModelObject"* [ %566, %565 ], [ %562, %575 ]
  %579 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %574, %565 ], [ %576, %575 ]
  %580 = tail call i32 %579(%"class.blink::LayoutBoxModelObject"* %578) #16
  br label %656

581:                                              ; preds = %300
  %582 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %583 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %584 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %583, align 8
  %585 = icmp eq %"class.blink::ComputedStyle"* %584, null
  %586 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %587 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %586, align 8
  %588 = select i1 %585, %"class.blink::ComputedStyle"* %587, %"class.blink::ComputedStyle"* %584
  %589 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %588, i64 0, i32 0, i32 9
  %590 = bitcast [20 x i8]* %589 to i160*
  %591 = load i160, i160* %590, align 8, !noalias !147
  %592 = lshr i160 %591, 102
  %593 = trunc i160 %592 to i8
  %594 = and i8 %593, 3
  %595 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %594, label %596 [
    i8 0, label %605
    i8 1, label %597
  ]

596:                                              ; preds = %581
  br label %597

597:                                              ; preds = %596, %581
  %598 = phi { i64, i64 } [ { i64 1033, i64 0 }, %596 ], [ { i64 1041, i64 0 }, %581 ]
  %599 = extractvalue { i64, i64 } %598, 0
  %600 = extractvalue { i64, i64 } %598, 1
  %601 = getelementptr inbounds i8, i8* %595, i64 %600
  %602 = bitcast i8* %601 to %"class.blink::LayoutBoxModelObject"*
  %603 = and i64 %599, 1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %615, label %605

605:                                              ; preds = %597, %581
  %606 = phi %"class.blink::LayoutBoxModelObject"* [ %602, %597 ], [ %582, %581 ]
  %607 = phi i8* [ %601, %597 ], [ %595, %581 ]
  %608 = phi i64 [ %599, %597 ], [ 1017, %581 ]
  %609 = bitcast i8* %607 to i8**
  %610 = load i8*, i8** %609, align 8
  %611 = add i64 %608, -1
  %612 = getelementptr i8, i8* %610, i64 %611
  %613 = bitcast i8* %612 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %614 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %613, align 8
  br label %617

615:                                              ; preds = %597
  %616 = inttoptr i64 %599 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %617

617:                                              ; preds = %605, %615
  %618 = phi %"class.blink::LayoutBoxModelObject"* [ %606, %605 ], [ %602, %615 ]
  %619 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %614, %605 ], [ %616, %615 ]
  %620 = tail call i32 %619(%"class.blink::LayoutBoxModelObject"* %618) #16
  %621 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %583, align 8
  %622 = icmp eq %"class.blink::ComputedStyle"* %621, null
  %623 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %586, align 8
  %624 = select i1 %622, %"class.blink::ComputedStyle"* %623, %"class.blink::ComputedStyle"* %621
  %625 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %624, i64 0, i32 0, i32 9
  %626 = bitcast [20 x i8]* %625 to i160*
  %627 = load i160, i160* %626, align 8, !noalias !150
  %628 = lshr i160 %627, 102
  %629 = trunc i160 %628 to i8
  %630 = and i8 %629, 3
  switch i8 %630, label %631 [
    i8 0, label %640
    i8 1, label %632
  ]

631:                                              ; preds = %617
  br label %632

632:                                              ; preds = %631, %617
  %633 = phi { i64, i64 } [ { i64 1041, i64 0 }, %631 ], [ { i64 1033, i64 0 }, %617 ]
  %634 = extractvalue { i64, i64 } %633, 0
  %635 = extractvalue { i64, i64 } %633, 1
  %636 = getelementptr inbounds i8, i8* %595, i64 %635
  %637 = bitcast i8* %636 to %"class.blink::LayoutBoxModelObject"*
  %638 = and i64 %634, 1
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %650, label %640

640:                                              ; preds = %632, %617
  %641 = phi %"class.blink::LayoutBoxModelObject"* [ %637, %632 ], [ %582, %617 ]
  %642 = phi i8* [ %636, %632 ], [ %595, %617 ]
  %643 = phi i64 [ %634, %632 ], [ 1025, %617 ]
  %644 = bitcast i8* %642 to i8**
  %645 = load i8*, i8** %644, align 8
  %646 = add i64 %643, -1
  %647 = getelementptr i8, i8* %645, i64 %646
  %648 = bitcast i8* %647 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %649 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %648, align 8
  br label %652

650:                                              ; preds = %632
  %651 = inttoptr i64 %634 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %652

652:                                              ; preds = %640, %650
  %653 = phi %"class.blink::LayoutBoxModelObject"* [ %641, %640 ], [ %637, %650 ]
  %654 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %649, %640 ], [ %651, %650 ]
  %655 = tail call i32 %654(%"class.blink::LayoutBoxModelObject"* %653) #16
  br label %656

656:                                              ; preds = %652, %577, %296
  %657 = phi i32 [ %620, %652 ], [ %548, %577 ], [ %267, %296 ]
  %658 = phi i32 [ %655, %652 ], [ %580, %577 ], [ %299, %296 ]
  %659 = icmp eq i32 %657, 0
  br i1 %659, label %673, label %660

660:                                              ; preds = %656
  %661 = icmp sgt i32 %657, 0
  br i1 %661, label %673, label %662

662:                                              ; preds = %660
  %663 = tail call i1 @llvm.is.constant.i32(i32 %657) #16
  br i1 %663, label %664, label %668

664:                                              ; preds = %662
  %665 = sub i32 0, %657
  %666 = icmp eq i32 %665, -2147483648
  %667 = select i1 %666, i32 2147483647, i32 %665
  br label %673

668:                                              ; preds = %662
  %669 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %657) #16
  %670 = extractvalue { i32, i1 } %669, 1
  %671 = extractvalue { i32, i1 } %669, 0
  %672 = select i1 %670, i32 2147483647, i32 %671
  br label %673

673:                                              ; preds = %656, %668, %664, %660
  %674 = phi i32 [ 0, %656 ], [ %657, %660 ], [ 0, %664 ], [ 0, %668 ]
  %675 = phi i32 [ 0, %656 ], [ 0, %660 ], [ %667, %664 ], [ %672, %668 ]
  %676 = icmp eq i32 %658, 0
  br i1 %676, label %690, label %677

677:                                              ; preds = %673
  %678 = icmp sgt i32 %658, 0
  br i1 %678, label %690, label %679

679:                                              ; preds = %677
  %680 = tail call i1 @llvm.is.constant.i32(i32 %658) #16
  br i1 %680, label %681, label %685

681:                                              ; preds = %679
  %682 = sub i32 0, %658
  %683 = icmp eq i32 %682, -2147483648
  %684 = select i1 %683, i32 2147483647, i32 %682
  br label %690

685:                                              ; preds = %679
  %686 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %658) #16
  %687 = extractvalue { i32, i1 } %686, 1
  %688 = extractvalue { i32, i1 } %686, 0
  %689 = select i1 %687, i32 2147483647, i32 %688
  br label %690

690:                                              ; preds = %673, %183, %233, %459, %509, %685, %681, %677
  %691 = phi i32 [ %675, %673 ], [ %675, %677 ], [ %675, %681 ], [ %675, %685 ], [ %410, %509 ], [ %460, %459 ], [ %134, %233 ], [ %184, %183 ]
  %692 = phi i32 [ %674, %673 ], [ %674, %677 ], [ %674, %681 ], [ %674, %685 ], [ %356, %509 ], [ %461, %459 ], [ %80, %233 ], [ %185, %183 ]
  %693 = phi i32 [ 0, %673 ], [ %658, %677 ], [ 0, %681 ], [ 0, %685 ], [ %456, %509 ], [ %462, %459 ], [ %180, %233 ], [ %186, %183 ]
  %694 = phi i32 [ 0, %673 ], [ 0, %677 ], [ %684, %681 ], [ %689, %685 ], [ %512, %509 ], [ %465, %459 ], [ %236, %233 ], [ %189, %183 ]
  %695 = zext i32 %691 to i64
  %696 = shl nuw i64 %695, 32
  %697 = zext i32 %692 to i64
  %698 = or i64 %696, %697
  %699 = insertvalue { i64, i64 } undef, i64 %698, 0
  %700 = zext i32 %694 to i64
  %701 = shl nuw i64 %700, 32
  %702 = zext i32 %693 to i64
  %703 = or i64 %701, %702
  %704 = insertvalue { i64, i64 } %699, i64 %703, 1
  ret { i64, i64 } %704
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow33AdjustedMarginBeforeForPaginationERKNS_9LayoutBoxENS_10LayoutUnitES4_RKNS_23BlockChildrenLayoutInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32, %"class.blink::BlockChildrenLayoutInfo"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %6 = icmp sgt i32 %2, -1
  %7 = select i1 %6, i32 -2147483648, i32 2147483647
  %8 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %2) #16
  %9 = extractvalue { i32, i1 } %8, 1
  %10 = extractvalue { i32, i1 } %8, 0
  %11 = select i1 %9, i32 %7, i32 %10, !prof !2
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %34, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::BlockChildrenLayoutInfo", %"class.blink::BlockChildrenLayoutInfo"* %4, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %1, i32 %15) #16
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %19 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %18) #16
  %20 = icmp slt i32 %2, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %2) #16
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = icmp slt i32 %25, 1
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %13, %17
  %29 = phi i32 [ %27, %17 ], [ 1, %13 ]
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %31 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %30, i32 %2, i32 %29) #16
  %32 = icmp slt i32 %31, %11
  %33 = select i1 %32, i32 %31, i32 %11
  br label %34

34:                                               ; preds = %5, %28
  %35 = phi i32 [ %33, %28 ], [ %11, %5 ]
  ret i32 %35
}

declare zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock20HasMarginBeforeQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow24SetMaxMarginBeforeValuesENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %4, i64 0, i32 0
  %6 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %6, null
  br i1 %7, label %8, label %103

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !153
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1033, i64 0 }, %19 ], [ { i64 1041, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1017, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #16
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = icmp eq i32 %45, %1
  br i1 %46, label %47, label %95

47:                                               ; preds = %40
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8, !noalias !156
  %52 = lshr i160 %51, 102
  %53 = trunc i160 %52 to i8
  %54 = and i8 %53, 3
  switch i8 %54, label %55 [
    i8 0, label %64
    i8 1, label %56
  ]

55:                                               ; preds = %47
  br label %56

56:                                               ; preds = %55, %47
  %57 = phi { i64, i64 } [ { i64 1033, i64 0 }, %55 ], [ { i64 1041, i64 0 }, %47 ]
  %58 = extractvalue { i64, i64 } %57, 0
  %59 = extractvalue { i64, i64 } %57, 1
  %60 = getelementptr inbounds i8, i8* %18, i64 %59
  %61 = bitcast i8* %60 to %"class.blink::LayoutBoxModelObject"*
  %62 = and i64 %58, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %56, %47
  %65 = phi %"class.blink::LayoutBoxModelObject"* [ %61, %56 ], [ %9, %47 ]
  %66 = phi i8* [ %60, %56 ], [ %18, %47 ]
  %67 = phi i64 [ %58, %56 ], [ 1017, %47 ]
  %68 = bitcast i8* %66 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = add i64 %67, -1
  %71 = getelementptr i8, i8* %69, i64 %70
  %72 = bitcast i8* %71 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  br label %76

74:                                               ; preds = %56
  %75 = inttoptr i64 %58 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %76

76:                                               ; preds = %74, %64
  %77 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %64 ], [ %61, %74 ]
  %78 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %73, %64 ], [ %75, %74 ]
  %79 = tail call i32 %78(%"class.blink::LayoutBoxModelObject"* %77) #16
  %80 = tail call i1 @llvm.is.constant.i32(i32 %79) #16
  br i1 %80, label %81, label %85

81:                                               ; preds = %76
  %82 = sub i32 0, %79
  %83 = icmp eq i32 %82, -2147483648
  %84 = select i1 %83, i32 2147483647, i32 %82
  br label %90

85:                                               ; preds = %76
  %86 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %79) #16
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 2147483647, i32 %88
  br label %90

90:                                               ; preds = %81, %85
  %91 = phi i32 [ %84, %81 ], [ %89, %85 ]
  %92 = icmp sgt i32 %91, 0
  %93 = select i1 %92, i32 %91, i32 0
  %94 = icmp eq i32 %93, %2
  br i1 %94, label %108, label %95

95:                                               ; preds = %40, %90
  %96 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %97 = bitcast i8* %96 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %97, %"class.blink::LayoutBlockFlow"* %0) #16
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %4, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %97) #16
  %102 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  br label %103

103:                                              ; preds = %3, %95
  %104 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %6, %3 ], [ %102, %95 ]
  %105 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %104, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %105, align 4
  %106 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  %107 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, i64 0, i32 0, i32 1, i32 0
  store i32 %2, i32* %107, align 4
  br label %108

108:                                              ; preds = %90, %103
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock19HasMarginAfterQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = lshr i160 %9, 37
  %11 = trunc i160 %10 to i32
  %12 = and i32 %11, 31
  switch i32 %12, label %21 [
    i32 0, label %13
    i32 25, label %13
    i32 19, label %13
    i32 17, label %13
    i32 15, label %13
    i32 5, label %13
    i32 3, label %13
    i32 24, label %13
  ]

13:                                               ; preds = %4, %4, %4, %4, %4, %4, %4, %4
  %14 = tail call i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %2, i32 %3) #16
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %15, align 8
  %17 = icmp eq %"struct.blink::FragmentData::RareData"* %16, null
  br i1 %17, label %62, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %19, align 8
  br label %62

21:                                               ; preds = %4
  %22 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 41538374868278621028243970633760768
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %22) #16
  br label %54

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %34 = and i160 %27, 15211807202738752817960438464512
  %35 = icmp eq i160 %34, 0
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %38 = select i1 %35, i32* %36, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %22) #16
  %41 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %33) #16
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %41) #16
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %39, i32 %47) #16
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  br label %54

54:                                               ; preds = %30, %32
  %55 = phi i32 [ %31, %30 ], [ %53, %32 ]
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %57 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %56, align 8
  %58 = icmp eq %"struct.blink::FragmentData::RareData"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %60, align 8
  br label %62

62:                                               ; preds = %59, %54, %18, %13
  %63 = phi %"class.blink::PaintLayer"* [ %20, %18 ], [ null, %13 ], [ %61, %59 ], [ null, %54 ]
  %64 = phi i32 [ %14, %18 ], [ %14, %13 ], [ %55, %59 ], [ %55, %54 ]
  %65 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %63, i64 0, i32 10, i32 0
  store i32 %64, i32* %65, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow13GetClearDeltaEPNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %6, align 8
  %8 = icmp eq %"class.blink::FloatingObjects"* %7, null
  br i1 %8, label %146, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %146, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = lshr i160 %19, 68
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 7
  %23 = add nsw i32 %22, -3
  %24 = icmp ult i32 %23, 2
  br i1 %24, label %25, label %36

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 41538374868278621028243970633760768
  %32 = icmp eq i160 %31, 0
  %33 = icmp ne i32 %22, 3
  %34 = xor i1 %33, %32
  %35 = select i1 %34, i32 1, i32 2
  br label %38

36:                                               ; preds = %13
  %37 = icmp eq i32 %22, 0
  br i1 %37, label %52, label %38

38:                                               ; preds = %36, %25
  %39 = phi i32 [ %35, %25 ], [ %22, %36 ]
  %40 = icmp eq i32 %39, 1
  %41 = icmp eq i32 %39, 2
  %42 = select i1 %41, i32 2, i32 3
  %43 = select i1 %40, i32 1, i32 %42
  %44 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %7, i32 %43) #16
  %45 = icmp sgt i32 %2, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %44, i32 %2) #16
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %146, label %52

52:                                               ; preds = %38, %36
  %53 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutBox"*)***
  %54 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %54, i64 182
  %56 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutBox"* %1) #16
  br i1 %57, label %58, label %146

58:                                               ; preds = %52
  %59 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #16
  %60 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 %2, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %62 = bitcast %"class.blink::LayoutSize"* %61 to i64*
  %63 = load i64, i64* %62, align 4
  %64 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = trunc i96 %66 to i32
  %68 = icmp slt i32 %67, 0
  %69 = lshr i64 %63, 32
  %70 = select i1 %68, i64 %63, i64 %69
  %71 = trunc i64 %70 to i32
  %72 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %73 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %74 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %5 to i8*
  %75 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %5, i64 0, i32 0, i32 0
  %76 = trunc i96 %66 to i32
  br label %77

77:                                               ; preds = %139, %58
  %78 = phi i32 [ %142, %139 ], [ %76, %58 ]
  %79 = phi i64 [ %141, %139 ], [ %63, %58 ]
  %80 = phi i32 [ %137, %139 ], [ %2, %58 ]
  %81 = icmp slt i32 %78, 0
  %82 = lshr i64 %79, 32
  %83 = select i1 %81, i64 %82, i64 %79
  %84 = trunc i64 %83 to i32
  %85 = call i32 @_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %80, i32 %84)
  %86 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %72) #16
  %87 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %73) #16
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %87) #16
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !2
  %94 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %72) #16
  %95 = icmp sgt i32 %94, -1
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %93, i32 %94) #16
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !2
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  %103 = icmp eq i32 %85, %102
  br i1 %103, label %104, label %112

104:                                              ; preds = %77
  %105 = load i32, i32* %60, align 4
  %106 = icmp sgt i32 %2, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %105, i32 %2) #16
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !2
  br label %143

112:                                              ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %74, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink9LayoutBox38LogicalExtentAfterUpdatingLogicalWidthERKNS_10LayoutUnitERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %5) #16
  %113 = load i32, i32* %75, align 4
  %114 = icmp sgt i32 %113, %85
  br i1 %114, label %130, label %115

115:                                              ; preds = %112
  %116 = icmp eq i32 %113, %71
  br i1 %116, label %122, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %119 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %118 to i96*
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %14, i32 1) #16
  %120 = load i96, i96* %119, align 4
  %121 = or i96 %120, 1180591620717411303432
  store i96 %121, i96* %119, align 4
  br label %122

122:                                              ; preds = %115, %117
  %123 = load i32, i32* %60, align 4
  %124 = icmp sgt i32 %2, -1
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %2) #16
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #16
  br label %143

130:                                              ; preds = %112
  %131 = load i32, i32* %60, align 4
  %132 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %6, align 8
  %133 = icmp eq %"class.blink::FloatingObjects"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = call i32 @_ZN5blink15FloatingObjects39FindNextFloatLogicalBottomBelowForBlockENS_10LayoutUnitE(%"class.blink::FloatingObjects"* nonnull %132, i32 %131) #16
  br label %136

136:                                              ; preds = %130, %134
  %137 = phi i32 [ %135, %134 ], [ %131, %130 ]
  store i32 %137, i32* %60, align 4
  %138 = icmp slt i32 %137, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #16
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = load i96, i96* %65, align 4
  %141 = load i64, i64* %62, align 4
  %142 = trunc i96 %140 to i32
  br label %77

143:                                              ; preds = %104, %122
  %144 = phi i32 [ %129, %122 ], [ %111, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #16
  br label %146

145:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #16
  br label %146

146:                                              ; preds = %9, %3, %143, %145, %38, %52
  %147 = phi i32 [ 0, %9 ], [ %144, %143 ], [ 0, %145 ], [ 0, %52 ], [ %50, %38 ], [ 0, %3 ]
  ret i32 %147
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow24SetCollapsedBottomMarginERKNS_10MarginInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::MarginInfo"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 0
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 68
  %6 = icmp ne i16 %5, 68
  %7 = and i16 %4, 34
  %8 = icmp eq i16 %7, 34
  %9 = or i1 %6, %8
  br i1 %9, label %178, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %11, align 8
  %13 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %12, i64 0, i32 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  %20 = select i1 %19, i32 %18, i32 %16
  br label %65

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8, !noalias !159
  %28 = lshr i160 %27, 102
  %29 = trunc i160 %28 to i8
  %30 = and i8 %29, 3
  %31 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %30, label %32 [
    i8 0, label %41
    i8 1, label %33
  ]

32:                                               ; preds = %21
  br label %33

33:                                               ; preds = %32, %21
  %34 = phi { i64, i64 } [ { i64 1041, i64 0 }, %32 ], [ { i64 1033, i64 0 }, %21 ]
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  %38 = bitcast i8* %37 to %"class.blink::LayoutBoxModelObject"*
  %39 = and i64 %35, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %33, %21
  %42 = phi %"class.blink::LayoutBoxModelObject"* [ %38, %33 ], [ %22, %21 ]
  %43 = phi i8* [ %37, %33 ], [ %31, %21 ]
  %44 = phi i64 [ %35, %33 ], [ 1025, %21 ]
  %45 = bitcast i8* %43 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = add i64 %44, -1
  %48 = getelementptr i8, i8* %46, i64 %47
  %49 = bitcast i8* %48 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, align 8
  br label %53

51:                                               ; preds = %33
  %52 = inttoptr i64 %35 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %53

53:                                               ; preds = %41, %51
  %54 = phi %"class.blink::LayoutBoxModelObject"* [ %42, %41 ], [ %38, %51 ]
  %55 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %50, %41 ], [ %52, %51 ]
  %56 = tail call i32 %55(%"class.blink::LayoutBoxModelObject"* %54) #16
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  %59 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %11, align 8
  %60 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %58, %61
  %63 = select i1 %62, i32 %61, i32 %58
  %64 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %59, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %14, %53
  %66 = phi i32 [ %20, %14 ], [ %63, %53 ]
  %67 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %12, %14 ], [ %59, %53 ]
  %68 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %67, i64 0, i32 0, i32 3, i32 0
  %69 = load i32, i32* %68, align 4
  br label %120

70:                                               ; preds = %53
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8, !noalias !162
  %77 = lshr i160 %76, 102
  %78 = trunc i160 %77 to i8
  %79 = and i8 %78, 3
  %80 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %79, label %81 [
    i8 0, label %90
    i8 1, label %82
  ]

81:                                               ; preds = %70
  br label %82

82:                                               ; preds = %81, %70
  %83 = phi { i64, i64 } [ { i64 1041, i64 0 }, %81 ], [ { i64 1033, i64 0 }, %70 ]
  %84 = extractvalue { i64, i64 } %83, 0
  %85 = extractvalue { i64, i64 } %83, 1
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = bitcast i8* %86 to %"class.blink::LayoutBoxModelObject"*
  %88 = and i64 %84, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %82, %70
  %91 = phi %"class.blink::LayoutBoxModelObject"* [ %87, %82 ], [ %71, %70 ]
  %92 = phi i8* [ %86, %82 ], [ %80, %70 ]
  %93 = phi i64 [ %84, %82 ], [ 1025, %70 ]
  %94 = bitcast i8* %92 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = add i64 %93, -1
  %97 = getelementptr i8, i8* %95, i64 %96
  %98 = bitcast i8* %97 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %99 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %98, align 8
  br label %102

100:                                              ; preds = %82
  %101 = inttoptr i64 %84 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %102

102:                                              ; preds = %100, %90
  %103 = phi %"class.blink::LayoutBoxModelObject"* [ %91, %90 ], [ %87, %100 ]
  %104 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %99, %90 ], [ %101, %100 ]
  %105 = tail call i32 %104(%"class.blink::LayoutBoxModelObject"* %103) #16
  %106 = tail call i1 @llvm.is.constant.i32(i32 %105) #16
  br i1 %106, label %107, label %111

107:                                              ; preds = %102
  %108 = sub i32 0, %105
  %109 = icmp eq i32 %108, -2147483648
  %110 = select i1 %109, i32 2147483647, i32 %108
  br label %116

111:                                              ; preds = %102
  %112 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %105) #16
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 2147483647, i32 %114
  br label %116

116:                                              ; preds = %111, %107
  %117 = phi i32 [ %110, %107 ], [ %115, %111 ]
  %118 = icmp sgt i32 %117, 0
  %119 = select i1 %118, i32 %117, i32 0
  br label %120

120:                                              ; preds = %65, %116
  %121 = phi i32 [ %66, %65 ], [ %63, %116 ]
  %122 = phi i32 [ %69, %65 ], [ %119, %116 ]
  %123 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %1, i64 0, i32 2, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %122, %124
  %126 = select i1 %125, i32 %124, i32 %122
  tail call void @_ZN5blink15LayoutBlockFlow23SetMaxMarginAfterValuesENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %121, i32 %126)
  %127 = load i16, i16* %3, align 4
  %128 = and i16 %127, 256
  %129 = icmp eq i16 %128, 0
  br i1 %129, label %130, label %137

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %132 = load i16, i16* %131, align 8
  %133 = and i16 %132, -3
  store i16 %133, i16* %131, align 8
  %134 = load i16, i16* %3, align 4
  %135 = and i16 %134, 256
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %178, label %137

137:                                              ; preds = %120, %130
  %138 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %140 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %140, i64 0, i32 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8, !noalias !165
  %144 = lshr i160 %143, 102
  %145 = trunc i160 %144 to i8
  %146 = and i8 %145, 3
  %147 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %146, label %148 [
    i8 0, label %157
    i8 1, label %149
  ]

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %137
  %150 = phi { i64, i64 } [ { i64 1041, i64 0 }, %148 ], [ { i64 1033, i64 0 }, %137 ]
  %151 = extractvalue { i64, i64 } %150, 0
  %152 = extractvalue { i64, i64 } %150, 1
  %153 = getelementptr inbounds i8, i8* %147, i64 %152
  %154 = bitcast i8* %153 to %"class.blink::LayoutBoxModelObject"*
  %155 = and i64 %151, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %149, %137
  %158 = phi %"class.blink::LayoutBoxModelObject"* [ %154, %149 ], [ %138, %137 ]
  %159 = phi i8* [ %153, %149 ], [ %147, %137 ]
  %160 = phi i64 [ %151, %149 ], [ 1025, %137 ]
  %161 = bitcast i8* %159 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = add i64 %160, -1
  %164 = getelementptr i8, i8* %162, i64 %163
  %165 = bitcast i8* %164 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %166 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %165, align 8
  br label %169

167:                                              ; preds = %149
  %168 = inttoptr i64 %151 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %169

169:                                              ; preds = %157, %167
  %170 = phi %"class.blink::LayoutBoxModelObject"* [ %158, %157 ], [ %154, %167 ]
  %171 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %166, %157 ], [ %168, %167 ]
  %172 = tail call i32 %171(%"class.blink::LayoutBoxModelObject"* %170) #16
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %176 = load i16, i16* %175, align 8
  %177 = or i16 %176, 2
  store i16 %177, i16* %175, align 8
  br label %178

178:                                              ; preds = %169, %130, %2, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow23SetMaxMarginAfterValuesENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %4, i64 0, i32 0
  %6 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %6, null
  br i1 %7, label %8, label %103

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !168
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1041, i64 0 }, %19 ], [ { i64 1033, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1025, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #16
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = icmp eq i32 %45, %1
  br i1 %46, label %47, label %95

47:                                               ; preds = %40
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8, !noalias !171
  %52 = lshr i160 %51, 102
  %53 = trunc i160 %52 to i8
  %54 = and i8 %53, 3
  switch i8 %54, label %55 [
    i8 0, label %64
    i8 1, label %56
  ]

55:                                               ; preds = %47
  br label %56

56:                                               ; preds = %55, %47
  %57 = phi { i64, i64 } [ { i64 1041, i64 0 }, %55 ], [ { i64 1033, i64 0 }, %47 ]
  %58 = extractvalue { i64, i64 } %57, 0
  %59 = extractvalue { i64, i64 } %57, 1
  %60 = getelementptr inbounds i8, i8* %18, i64 %59
  %61 = bitcast i8* %60 to %"class.blink::LayoutBoxModelObject"*
  %62 = and i64 %58, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %56, %47
  %65 = phi %"class.blink::LayoutBoxModelObject"* [ %61, %56 ], [ %9, %47 ]
  %66 = phi i8* [ %60, %56 ], [ %18, %47 ]
  %67 = phi i64 [ %58, %56 ], [ 1025, %47 ]
  %68 = bitcast i8* %66 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = add i64 %67, -1
  %71 = getelementptr i8, i8* %69, i64 %70
  %72 = bitcast i8* %71 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  br label %76

74:                                               ; preds = %56
  %75 = inttoptr i64 %58 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %76

76:                                               ; preds = %74, %64
  %77 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %64 ], [ %61, %74 ]
  %78 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %73, %64 ], [ %75, %74 ]
  %79 = tail call i32 %78(%"class.blink::LayoutBoxModelObject"* %77) #16
  %80 = tail call i1 @llvm.is.constant.i32(i32 %79) #16
  br i1 %80, label %81, label %85

81:                                               ; preds = %76
  %82 = sub i32 0, %79
  %83 = icmp eq i32 %82, -2147483648
  %84 = select i1 %83, i32 2147483647, i32 %82
  br label %90

85:                                               ; preds = %76
  %86 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %79) #16
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 2147483647, i32 %88
  br label %90

90:                                               ; preds = %81, %85
  %91 = phi i32 [ %84, %81 ], [ %89, %85 ]
  %92 = icmp sgt i32 %91, 0
  %93 = select i1 %92, i32 %91, i32 0
  %94 = icmp eq i32 %93, %2
  br i1 %94, label %108, label %95

95:                                               ; preds = %40, %90
  %96 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %97 = bitcast i8* %96 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %97, %"class.blink::LayoutBlockFlow"* %0) #16
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %4, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %97) #16
  %102 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  br label %103

103:                                              ; preds = %3, %95
  %104 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %6, %3 ], [ %102, %95 ]
  %105 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %104, i64 0, i32 0, i32 2, i32 0
  store i32 %1, i32* %105, align 4
  %106 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  %107 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %106, i64 0, i32 0, i32 3, i32 0
  store i32 %2, i32* %107, align 4
  br label %108

108:                                              ; preds = %90, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow28MarginBeforeEstimateForChildERNS_9LayoutBoxERNS_10LayoutUnitES4_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.blink::MarginInfo", align 4
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %4, %18
  %19 = phi %"class.blink::LayoutObject"* [ %21, %18 ], [ %14, %4 ]
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 7
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %4
  %26 = phi %"class.blink::Node"* [ %16, %4 ], [ %23, %18 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 33
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  %34 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  br i1 %33, label %35, label %69

35:                                               ; preds = %25
  %36 = tail call zeroext i1 @_ZNK5blink11LayoutBlock20HasMarginBeforeQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %34, %"class.blink::LayoutBox"* %1) #16
  br i1 %36, label %37, label %69

37:                                               ; preds = %35
  %38 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %14, i32 46) #16
  br i1 %42, label %484, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 16777216
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %49, label %69

49:                                               ; preds = %43
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 48
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %59 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 1, i32 2
  %62 = bitcast %"class.blink::Member.318"* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %65, %67
  br i1 %68, label %484, label %69

69:                                               ; preds = %25, %43, %52, %49, %57, %35
  %70 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70)
  store i32 -1431655766, i32* %11, align 4
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = icmp eq %"class.blink::ComputedStyle"* %73, null
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = select i1 %74, %"class.blink::ComputedStyle"* %76, %"class.blink::ComputedStyle"* %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8, !noalias !174
  %81 = lshr i160 %80, 102
  %82 = trunc i160 %81 to i8
  %83 = and i8 %82, 3
  %84 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %83, label %85 [
    i8 0, label %94
    i8 1, label %86
  ]

85:                                               ; preds = %69
  br label %86

86:                                               ; preds = %85, %69
  %87 = phi { i64, i64 } [ { i64 1033, i64 0 }, %85 ], [ { i64 1041, i64 0 }, %69 ]
  %88 = extractvalue { i64, i64 } %87, 0
  %89 = extractvalue { i64, i64 } %87, 1
  %90 = getelementptr inbounds i8, i8* %84, i64 %89
  %91 = bitcast i8* %90 to %"class.blink::LayoutBoxModelObject"*
  %92 = and i64 %88, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %86, %69
  %95 = phi %"class.blink::LayoutBoxModelObject"* [ %91, %86 ], [ %71, %69 ]
  %96 = phi i8* [ %90, %86 ], [ %84, %69 ]
  %97 = phi i64 [ %88, %86 ], [ 1017, %69 ]
  %98 = bitcast i8* %96 to i8**
  %99 = load i8*, i8** %98, align 8
  %100 = add i64 %97, -1
  %101 = getelementptr i8, i8* %99, i64 %100
  %102 = bitcast i8* %101 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %103 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %102, align 8
  br label %106

104:                                              ; preds = %86
  %105 = inttoptr i64 %88 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %106

106:                                              ; preds = %94, %104
  %107 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %94 ], [ %91, %104 ]
  %108 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %103, %94 ], [ %105, %104 ]
  %109 = tail call i32 %108(%"class.blink::LayoutBoxModelObject"* %107) #16
  store i32 %109, i32* %11, align 4
  %110 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %111, %109
  %113 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %114 = select i1 %112, %"class.blink::LayoutUnit"* %113, %"class.blink::LayoutUnit"* %2
  %115 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  store i32 %116, i32* %110, align 4
  %117 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  %118 = tail call i1 @llvm.is.constant.i32(i32 %109) #16
  br i1 %118, label %119, label %123

119:                                              ; preds = %106
  %120 = sub i32 0, %109
  %121 = icmp eq i32 %120, -2147483648
  %122 = select i1 %121, i32 2147483647, i32 %120
  br label %128

123:                                              ; preds = %106
  %124 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %109) #16
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 2147483647, i32 %126
  br label %128

128:                                              ; preds = %119, %123
  %129 = phi i32 [ %122, %119 ], [ %127, %123 ]
  store i32 %129, i32* %12, align 4
  %130 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp slt i32 %131, %129
  %133 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %134 = select i1 %132, %"class.blink::LayoutUnit"* %133, %"class.blink::LayoutUnit"* %3
  %135 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  store i32 %136, i32* %130, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  %137 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %137, label %483, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %140 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %141 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %140, align 8
  %142 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %141, i64 24
  %143 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %142, align 8
  %144 = tail call zeroext i1 %143(%"class.blink::LayoutObject"* %139) #16
  %145 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlockFlow"*
  br i1 %144, label %146, label %483

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %148 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %147 to i96*
  %149 = load i96, i96* %148, align 4
  %150 = and i96 %149, 17592186044416
  %151 = icmp eq i96 %150, 0
  br i1 %151, label %152, label %483

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = icmp eq %"class.blink::LayoutObject"* %154, null
  br i1 %155, label %483, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 5, i32 0
  %158 = bitcast %"class.blink::ComputedStyle"** %157 to %"class.blink::ComputedStyleBase"**
  %159 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %159, i64 0, i32 9
  %161 = bitcast [20 x i8]* %160 to i160*
  %162 = load i160, i160* %161, align 8
  %163 = bitcast %"class.blink::ComputedStyle"** %75 to %"class.blink::ComputedStyleBase"**
  %164 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %164, i64 0, i32 9
  %166 = bitcast [20 x i8]* %165 to i160*
  %167 = load i160, i160* %166, align 8
  %168 = xor i160 %167, %162
  %169 = and i160 %168, 15211807202738752817960438464512
  %170 = icmp eq i160 %169, 0
  br i1 %170, label %171, label %483

171:                                              ; preds = %156
  %172 = bitcast %"class.blink::MarginInfo"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %172) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %172, i8 -86, i64 12, i1 false)
  %173 = lshr i160 %167, 102
  %174 = trunc i160 %173 to i8
  %175 = and i8 %174, 3
  switch i8 %175, label %176 [
    i8 0, label %185
    i8 1, label %177
  ]

176:                                              ; preds = %171
  br label %177

177:                                              ; preds = %176, %171
  %178 = phi { i64, i64 } [ { i64 993, i64 0 }, %176 ], [ { i64 1001, i64 0 }, %171 ]
  %179 = extractvalue { i64, i64 } %178, 0
  %180 = extractvalue { i64, i64 } %178, 1
  %181 = getelementptr inbounds i8, i8* %84, i64 %180
  %182 = bitcast i8* %181 to %"class.blink::LayoutBoxModelObject"*
  %183 = and i64 %179, 1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %177, %171
  %186 = phi %"class.blink::LayoutBoxModelObject"* [ %182, %177 ], [ %71, %171 ]
  %187 = phi i8* [ %181, %177 ], [ %84, %171 ]
  %188 = phi i64 [ %179, %177 ], [ 977, %171 ]
  %189 = bitcast i8* %187 to i8**
  %190 = load i8*, i8** %189, align 8
  %191 = add i64 %188, -1
  %192 = getelementptr i8, i8* %190, i64 %191
  %193 = bitcast i8* %192 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %194 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %193, align 8
  br label %197

195:                                              ; preds = %177
  %196 = inttoptr i64 %179 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %197

197:                                              ; preds = %185, %195
  %198 = phi %"class.blink::LayoutBoxModelObject"* [ %186, %185 ], [ %182, %195 ]
  %199 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %194, %185 ], [ %196, %195 ]
  %200 = tail call i32 %199(%"class.blink::LayoutBoxModelObject"* %198) #16
  %201 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8, !noalias !177
  %202 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %201, i64 0, i32 0, i32 9
  %203 = bitcast [20 x i8]* %202 to i160*
  %204 = load i160, i160* %203, align 8, !noalias !177
  %205 = lshr i160 %204, 102
  %206 = trunc i160 %205 to i8
  %207 = and i8 %206, 3
  switch i8 %207, label %208 [
    i8 0, label %217
    i8 1, label %209
  ]

208:                                              ; preds = %197
  br label %209

209:                                              ; preds = %208, %197
  %210 = phi { i64, i64 } [ { i64 961, i64 0 }, %208 ], [ { i64 969, i64 0 }, %197 ]
  %211 = extractvalue { i64, i64 } %210, 0
  %212 = extractvalue { i64, i64 } %210, 1
  %213 = getelementptr inbounds i8, i8* %84, i64 %212
  %214 = bitcast i8* %213 to %"class.blink::LayoutBoxModelObject"*
  %215 = and i64 %211, 1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %209, %197
  %218 = phi %"class.blink::LayoutBoxModelObject"* [ %214, %209 ], [ %71, %197 ]
  %219 = phi i8* [ %213, %209 ], [ %84, %197 ]
  %220 = phi i64 [ %211, %209 ], [ 945, %197 ]
  %221 = bitcast i8* %219 to i8**
  %222 = load i8*, i8** %221, align 8
  %223 = add i64 %220, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = bitcast i8* %224 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %226 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %225, align 8
  br label %229

227:                                              ; preds = %209
  %228 = inttoptr i64 %211 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %229

229:                                              ; preds = %217, %227
  %230 = phi %"class.blink::LayoutBoxModelObject"* [ %218, %217 ], [ %214, %227 ]
  %231 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %226, %217 ], [ %228, %227 ]
  %232 = tail call i32 %231(%"class.blink::LayoutBoxModelObject"* %230) #16
  %233 = icmp slt i32 %232, 0
  %234 = select i1 %233, i32 -2147483648, i32 2147483647
  %235 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %232) #16
  %236 = extractvalue { i32, i1 } %235, 1
  %237 = extractvalue { i32, i1 } %235, 0
  %238 = select i1 %236, i32 %234, i32 %237, !prof !2
  %239 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8, !noalias !180
  %240 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %239, i64 0, i32 0, i32 9
  %241 = bitcast [20 x i8]* %240 to i160*
  %242 = load i160, i160* %241, align 8, !noalias !180
  %243 = lshr i160 %242, 102
  %244 = trunc i160 %243 to i8
  %245 = and i8 %244, 3
  switch i8 %245, label %246 [
    i8 0, label %255
    i8 1, label %247
  ]

246:                                              ; preds = %229
  br label %247

247:                                              ; preds = %246, %229
  %248 = phi { i64, i64 } [ { i64 1001, i64 0 }, %246 ], [ { i64 993, i64 0 }, %229 ]
  %249 = extractvalue { i64, i64 } %248, 0
  %250 = extractvalue { i64, i64 } %248, 1
  %251 = getelementptr inbounds i8, i8* %84, i64 %250
  %252 = bitcast i8* %251 to %"class.blink::LayoutBoxModelObject"*
  %253 = and i64 %249, 1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %265, label %255

255:                                              ; preds = %247, %229
  %256 = phi %"class.blink::LayoutBoxModelObject"* [ %252, %247 ], [ %71, %229 ]
  %257 = phi i8* [ %251, %247 ], [ %84, %229 ]
  %258 = phi i64 [ %249, %247 ], [ 985, %229 ]
  %259 = bitcast i8* %257 to i8**
  %260 = load i8*, i8** %259, align 8
  %261 = add i64 %258, -1
  %262 = getelementptr i8, i8* %260, i64 %261
  %263 = bitcast i8* %262 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %264 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %263, align 8
  br label %267

265:                                              ; preds = %247
  %266 = inttoptr i64 %249 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %267

267:                                              ; preds = %255, %265
  %268 = phi %"class.blink::LayoutBoxModelObject"* [ %256, %255 ], [ %252, %265 ]
  %269 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %264, %255 ], [ %266, %265 ]
  %270 = tail call i32 %269(%"class.blink::LayoutBoxModelObject"* %268) #16
  %271 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8, !noalias !183
  %272 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %271, i64 0, i32 0, i32 9
  %273 = bitcast [20 x i8]* %272 to i160*
  %274 = load i160, i160* %273, align 8, !noalias !183
  %275 = lshr i160 %274, 102
  %276 = trunc i160 %275 to i8
  %277 = and i8 %276, 3
  switch i8 %277, label %278 [
    i8 0, label %287
    i8 1, label %279
  ]

278:                                              ; preds = %267
  br label %279

279:                                              ; preds = %278, %267
  %280 = phi { i64, i64 } [ { i64 969, i64 0 }, %278 ], [ { i64 961, i64 0 }, %267 ]
  %281 = extractvalue { i64, i64 } %280, 0
  %282 = extractvalue { i64, i64 } %280, 1
  %283 = getelementptr inbounds i8, i8* %84, i64 %282
  %284 = bitcast i8* %283 to %"class.blink::LayoutBoxModelObject"*
  %285 = and i64 %281, 1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %297, label %287

287:                                              ; preds = %279, %267
  %288 = phi %"class.blink::LayoutBoxModelObject"* [ %284, %279 ], [ %71, %267 ]
  %289 = phi i8* [ %283, %279 ], [ %84, %267 ]
  %290 = phi i64 [ %281, %279 ], [ 953, %267 ]
  %291 = bitcast i8* %289 to i8**
  %292 = load i8*, i8** %291, align 8
  %293 = add i64 %290, -1
  %294 = getelementptr i8, i8* %292, i64 %293
  %295 = bitcast i8* %294 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %296 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %295, align 8
  br label %299

297:                                              ; preds = %279
  %298 = inttoptr i64 %281 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %299

299:                                              ; preds = %287, %297
  %300 = phi %"class.blink::LayoutBoxModelObject"* [ %288, %287 ], [ %284, %297 ]
  %301 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %296, %287 ], [ %298, %297 ]
  %302 = tail call i32 %301(%"class.blink::LayoutBoxModelObject"* %300) #16
  %303 = icmp slt i32 %302, 0
  %304 = select i1 %303, i32 -2147483648, i32 2147483647
  %305 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %270, i32 %302) #16
  %306 = extractvalue { i32, i1 } %305, 1
  %307 = extractvalue { i32, i1 } %305, 0
  %308 = select i1 %306, i32 %304, i32 %307, !prof !2
  call void @_ZN5blink10MarginInfoC2EPNS_15LayoutBlockFlowENS_10LayoutUnitES3_(%"class.blink::MarginInfo"* nonnull %13, %"class.blink::LayoutBlockFlow"* nonnull %145, i32 %238, i32 %308)
  %309 = getelementptr inbounds %"class.blink::MarginInfo", %"class.blink::MarginInfo"* %13, i64 0, i32 0
  %310 = load i16, i16* %309, align 4
  %311 = and i16 %310, 2
  %312 = icmp eq i16 %311, 0
  br i1 %312, label %482, label %313

313:                                              ; preds = %299
  %314 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %315 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %314, align 8
  %316 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %315, i64 13
  %317 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %316, align 8
  %318 = tail call %"class.blink::LayoutObjectChildList"* %317(%"class.blink::LayoutObject"* %139) #16
  %319 = icmp eq %"class.blink::LayoutObjectChildList"* %318, null
  br i1 %319, label %482, label %320

320:                                              ; preds = %313
  %321 = bitcast %"class.blink::LayoutObjectChildList"* %318 to %"class.blink::LayoutBox"**
  %322 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %321, align 8
  %323 = icmp eq %"class.blink::LayoutBox"* %322, null
  br i1 %323, label %482, label %324

324:                                              ; preds = %320, %359
  %325 = phi %"class.blink::LayoutBox"* [ %362, %359 ], [ %322, %320 ]
  %326 = bitcast %"class.blink::LayoutBox"* %325 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %327 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %325, i64 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %325, i64 0, i32 0, i32 0, i32 4
  %329 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %328 to i96*
  %330 = load i96, i96* %329, align 4
  %331 = and i96 %330, 8388608
  %332 = icmp ne i96 %331, 0
  %333 = and i96 %330, 113336795588871485128704
  %334 = icmp eq i96 %333, 75557863725914323419136
  %335 = or i1 %334, %332
  br i1 %335, label %359, label %336

336:                                              ; preds = %324
  %337 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %325, i64 0, i32 0, i32 0, i32 5, i32 0
  %338 = bitcast %"class.blink::ComputedStyle"** %337 to %"class.blink::ComputedStyleBase"**
  %339 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %338, align 8
  %340 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %339, i64 0, i32 3, i32 0, i32 0
  %341 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %340, align 8
  %342 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %341, i64 0, i32 2, i32 0, i32 0
  %343 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %342, align 8
  %344 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %343, i64 0, i32 2, i32 0, i32 0
  %345 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %345, i64 0, i32 45
  %347 = load i32, i32* %346, align 4
  %348 = and i32 %347, 536870912
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %364, label %350

350:                                              ; preds = %336
  %351 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %326, align 8
  %352 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %351, i64 44
  %353 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %352, align 8
  %354 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %353(%"class.blink::LayoutObject"* %327) #16
  %355 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %354, null
  br i1 %355, label %356, label %359

356:                                              ; preds = %350
  %357 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %328 to i96*
  %358 = load i96, i96* %357, align 4
  br label %364

359:                                              ; preds = %350, %324
  %360 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %325, i64 0, i32 0, i32 0, i32 9
  %361 = bitcast %"class.blink::LayoutObject"** %360 to %"class.blink::LayoutBox"**
  %362 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %361, align 8
  %363 = icmp eq %"class.blink::LayoutBox"* %362, null
  br i1 %363, label %482, label %324

364:                                              ; preds = %336, %356
  %365 = phi i96 [ %358, %356 ], [ %330, %336 ]
  %366 = and i96 %365, 63
  %367 = icmp eq i96 %366, 0
  br i1 %367, label %436, label %368

368:                                              ; preds = %364
  tail call void @_ZN5blink9LayoutBox34ComputeAndSetBlockDirectionMarginsEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* nonnull %325, %"class.blink::LayoutBlock"* %34) #16
  %369 = bitcast %"class.blink::LayoutBox"* %325 to i1 (%"class.blink::LayoutObject"*)***
  %370 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %369, align 8
  %371 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %370, i64 23
  %372 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %371, align 8
  %373 = tail call zeroext i1 %372(%"class.blink::LayoutObject"* %327) #16
  br i1 %373, label %374, label %436

374:                                              ; preds = %368
  %375 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %337, align 8
  %376 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %375, i64 0, i32 0, i32 9
  %377 = bitcast [20 x i8]* %376 to i160*
  %378 = load i160, i160* %377, align 8
  %379 = and i160 %378, 44601490397061246283071436545296723011960832
  %380 = icmp eq i160 %379, 0
  br i1 %380, label %401, label %381

381:                                              ; preds = %374
  %382 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382)
  %383 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383)
  %384 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384)
  %385 = lshr i160 %378, 102
  %386 = trunc i160 %385 to i8
  %387 = and i8 %386, 3
  %388 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %375, i64 0, i32 0, i32 7, i32 0, i32 0
  %389 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %388, align 8, !noalias !186
  %390 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 12
  %391 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 11
  %392 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 10
  store %"class.blink::Length"* %390, %"class.blink::Length"** %5, align 8, !alias.scope !186
  store %"class.blink::Length"* %391, %"class.blink::Length"** %6, align 8, !alias.scope !186
  store %"class.blink::Length"* %392, %"class.blink::Length"** %7, align 8, !alias.scope !186
  %393 = icmp eq i8 %387, 0
  %394 = icmp eq i8 %387, 1
  %395 = select i1 %394, %"class.blink::Length"** %6, %"class.blink::Length"** %7
  %396 = select i1 %393, %"class.blink::Length"** %5, %"class.blink::Length"** %395
  %397 = load %"class.blink::Length"*, %"class.blink::Length"** %396, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384)
  %398 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %397, i64 0, i32 1
  %399 = load i8, i8* %398, align 4, !range !21
  %400 = zext i8 %399 to i16
  br label %401

401:                                              ; preds = %374, %381
  %402 = phi i16 [ 0, %374 ], [ %400, %381 ]
  %403 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %325, i64 1, i32 0, i32 0, i32 1, i32 1
  %404 = bitcast i8* %403 to i16*
  %405 = load i16, i16* %404, align 8
  %406 = and i16 %405, -2
  %407 = or i16 %406, %402
  store i16 %407, i16* %404, align 8
  %408 = load i160, i160* %377, align 8
  %409 = and i160 %408, 44601490397061246283071436545296723011960832
  %410 = icmp eq i160 %409, 0
  br i1 %410, label %432, label %411

411:                                              ; preds = %401
  %412 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %412)
  %413 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413)
  %414 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414)
  %415 = lshr i160 %408, 102
  %416 = trunc i160 %415 to i8
  %417 = and i8 %416, 3
  %418 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %375, i64 0, i32 0, i32 7, i32 0, i32 0
  %419 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %418, align 8, !noalias !189
  %420 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %419, i64 0, i32 11
  %421 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %419, i64 0, i32 9
  %422 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %419, i64 0, i32 10
  store %"class.blink::Length"* %420, %"class.blink::Length"** %8, align 8, !alias.scope !189
  store %"class.blink::Length"* %421, %"class.blink::Length"** %9, align 8, !alias.scope !189
  store %"class.blink::Length"* %422, %"class.blink::Length"** %10, align 8, !alias.scope !189
  %423 = icmp eq i8 %417, 0
  %424 = icmp eq i8 %417, 1
  %425 = select i1 %424, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %426 = select i1 %423, %"class.blink::Length"** %9, %"class.blink::Length"** %425
  %427 = load %"class.blink::Length"*, %"class.blink::Length"** %426, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414)
  %428 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %427, i64 0, i32 1
  %429 = load i8, i8* %428, align 4, !range !21
  %430 = shl nuw nsw i8 %429, 1
  %431 = zext i8 %430 to i16
  br label %432

432:                                              ; preds = %401, %411
  %433 = phi i16 [ 0, %401 ], [ %431, %411 ]
  %434 = and i16 %407, -3
  %435 = or i16 %434, %433
  store i16 %435, i16* %404, align 8
  br label %436

436:                                              ; preds = %368, %364, %432
  %437 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %337, align 8
  %438 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %437, i64 0, i32 0, i32 9
  %439 = bitcast [20 x i8]* %438 to i160*
  %440 = load i160, i160* %439, align 8
  %441 = and i160 %440, 2066035336255469780992
  %442 = icmp eq i160 %441, 0
  br i1 %442, label %481, label %443

443:                                              ; preds = %436
  %444 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %325, i64 0, i32 0
  %445 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %446 = icmp eq %"class.blink::ComputedStyle"* %445, null
  %447 = select i1 %446, %"class.blink::ComputedStyle"* %437, %"class.blink::ComputedStyle"* %445
  %448 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %447, i64 0, i32 0, i32 9
  %449 = bitcast [20 x i8]* %448 to i160*
  %450 = load i160, i160* %449, align 8, !noalias !192
  %451 = lshr i160 %450, 102
  %452 = trunc i160 %451 to i8
  %453 = and i8 %452, 3
  %454 = bitcast %"class.blink::LayoutBox"* %325 to i8*
  switch i8 %453, label %455 [
    i8 0, label %464
    i8 1, label %456
  ]

455:                                              ; preds = %443
  br label %456

456:                                              ; preds = %455, %443
  %457 = phi { i64, i64 } [ { i64 1033, i64 0 }, %455 ], [ { i64 1041, i64 0 }, %443 ]
  %458 = extractvalue { i64, i64 } %457, 0
  %459 = extractvalue { i64, i64 } %457, 1
  %460 = getelementptr inbounds i8, i8* %454, i64 %459
  %461 = bitcast i8* %460 to %"class.blink::LayoutBoxModelObject"*
  %462 = and i64 %458, 1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %474, label %464

464:                                              ; preds = %456, %443
  %465 = phi %"class.blink::LayoutBoxModelObject"* [ %461, %456 ], [ %444, %443 ]
  %466 = phi i8* [ %460, %456 ], [ %454, %443 ]
  %467 = phi i64 [ %458, %456 ], [ 1017, %443 ]
  %468 = bitcast i8* %466 to i8**
  %469 = load i8*, i8** %468, align 8
  %470 = add i64 %467, -1
  %471 = getelementptr i8, i8* %469, i64 %470
  %472 = bitcast i8* %471 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %473 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %472, align 8
  br label %476

474:                                              ; preds = %456
  %475 = inttoptr i64 %458 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %476

476:                                              ; preds = %464, %474
  %477 = phi %"class.blink::LayoutBoxModelObject"* [ %465, %464 ], [ %461, %474 ]
  %478 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %473, %464 ], [ %475, %474 ]
  %479 = tail call i32 %478(%"class.blink::LayoutBoxModelObject"* %477) #16
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %482, label %481

481:                                              ; preds = %436, %476
  tail call void @_ZNK5blink15LayoutBlockFlow28MarginBeforeEstimateForChildERNS_9LayoutBoxERNS_10LayoutUnitES4_(%"class.blink::LayoutBlockFlow"* nonnull %145, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %325, %"class.blink::LayoutUnit"* dereferenceable(4) %2, %"class.blink::LayoutUnit"* dereferenceable(4) %3)
  br label %482

482:                                              ; preds = %359, %313, %320, %299, %481, %476
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %172) #16
  br label %483

483:                                              ; preds = %156, %146, %138, %152, %128, %482
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70)
  br label %484

484:                                              ; preds = %37, %57, %483
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::LineWidth"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %79, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %79, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 2
  %13 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %15, i64 0, i32 3
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 16
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %79

20:                                               ; preds = %11
  %21 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %13 to i64
  %22 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 1
  %23 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %22, align 8
  br label %24

24:                                               ; preds = %28, %20
  %25 = phi i64 [ %21, %20 ], [ %33, %28 ]
  %26 = inttoptr i64 %25 to %"class.WTF::MallocedListHashSetNode"*
  %27 = icmp eq %"class.WTF::MallocedListHashSetNode"* %23, %26
  br i1 %27, label %59, label %28

28:                                               ; preds = %24
  %29 = icmp eq i64 %25, 0
  %30 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %26, i64 0, i32 1
  %31 = select i1 %29, %"class.WTF::MallocedListHashSetNode"** %12, %"class.WTF::MallocedListHashSetNode"** %30
  %32 = bitcast %"class.WTF::MallocedListHashSetNode"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %33 to %"class.WTF::MallocedListHashSetNode"*
  %35 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %36, i64 0, i32 3
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 16
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %24, label %41

41:                                               ; preds = %28
  %42 = inttoptr i64 %33 to %"class.WTF::MallocedListHashSetNode"*
  %43 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %42, i64 0, i32 2
  %44 = bitcast %"class.WTF::MallocedListHashSetNode"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq %"class.blink::FloatingObject"* %36, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = trunc i96 %50 to i32
  %52 = icmp slt i32 %51, 0
  %53 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %36, i64 0, i32 2, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %36, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = select i1 %52, i32* %53, i32* %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, %1
  %58 = select i1 %57, i32 %56, i32 %1
  br label %59

59:                                               ; preds = %24, %41, %47
  %60 = phi i32 [ %1, %41 ], [ %58, %47 ], [ %1, %24 ]
  %61 = phi i64 [ %45, %41 ], [ %45, %47 ], [ %25, %24 ]
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %59
  %64 = icmp eq %"class.blink::LineWidth"* %2, null
  br label %65

65:                                               ; preds = %63, %74
  %66 = phi i32 [ %60, %63 ], [ %71, %74 ]
  %67 = phi i64 [ %61, %63 ], [ %77, %74 ]
  %68 = inttoptr i64 %67 to %"class.WTF::MallocedListHashSetNode"*
  %69 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %69, align 8
  %71 = tail call i32 @_ZN5blink15LayoutBlockFlow22PositionAndLayoutFloatERNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %70, i32 %66)
  %72 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  tail call void @_ZN5blink15FloatingObjects15AddPlacedObjectERNS_14FloatingObjectE(%"class.blink::FloatingObjects"* %72, %"class.blink::FloatingObject"* dereferenceable(40) %70) #16
  br i1 %64, label %74, label %73

73:                                               ; preds = %65
  tail call void @_ZN5blink9LineWidth39ShrinkAvailableWidthForNewFloatIfNeededERKNS_14FloatingObjectE(%"class.blink::LineWidth"* nonnull %2, %"class.blink::FloatingObject"* dereferenceable(40) %70) #16
  br label %74

74:                                               ; preds = %65, %73
  %75 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %68, i64 0, i32 2
  %76 = bitcast %"class.WTF::MallocedListHashSetNode"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %65

79:                                               ; preds = %74, %59, %11, %3, %7
  %80 = phi i1 [ false, %3 ], [ false, %7 ], [ false, %11 ], [ true, %59 ], [ true, %74 ]
  ret i1 %80
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 7
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 15
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 2, %1 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow10BreakAfterEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 7
  %7 = load i8, i8* %6, align 8
  %8 = lshr i8 %7, 4
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 2, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutSize", align 4
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 67108876
  %19 = icmp eq i32 %18, 67108864
  br i1 %19, label %20, label %26, !prof !22

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::Node"* %13 to %"class.blink::Element"*
  %22 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %21) #16
  %23 = icmp eq %"class.blink::DisplayLockContext"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %22) #16
  br i1 %25, label %26, label %119

26:                                               ; preds = %24, %5, %11, %15, %1, %20
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %27, align 8
  %29 = icmp eq %"class.blink::FloatingObjects"* %28, null
  br i1 %29, label %119, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %28, i64 0, i32 0, i32 1
  %32 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %31, align 8
  %33 = icmp eq %"class.WTF::MallocedListHashSetNode"* %32, null
  br i1 %33, label %119, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %36 = bitcast %"class.blink::LayoutSize"* %2 to i8*
  %37 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 1, i32 0
  br label %42

42:                                               ; preds = %34, %115
  %43 = phi %"class.WTF::MallocedListHashSetNode"* [ %32, %34 ], [ %117, %115 ]
  %44 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %45, i64 0, i32 3
  %47 = load i8, i8* %46, align 8
  %48 = and i8 %47, 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %115, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %45, i64 0, i32 0
  %52 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  %53 = call i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %45)
  %54 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %44, align 8
  %55 = load i96, i96* %38, align 4
  %56 = trunc i96 %55 to i32
  %57 = icmp slt i32 %56, 0
  %58 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %54, i64 0, i32 2, i32 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %54, i64 0, i32 0
  %61 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %60, align 8
  br i1 %57, label %62, label %101

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %65 = icmp eq %"class.blink::ComputedStyle"* %64, null
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0, i32 0, i32 5, i32 0
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %68 = select i1 %65, %"class.blink::ComputedStyle"* %67, %"class.blink::ComputedStyle"* %64
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8, !noalias !195
  %72 = lshr i160 %71, 102
  %73 = trunc i160 %72 to i8
  %74 = and i8 %73, 3
  %75 = bitcast %"class.blink::LayoutBox"* %61 to i8*
  switch i8 %74, label %76 [
    i8 0, label %85
    i8 1, label %77
  ]

76:                                               ; preds = %62
  br label %77

77:                                               ; preds = %76, %62
  %78 = phi { i64, i64 } [ { i64 1033, i64 0 }, %76 ], [ { i64 1041, i64 0 }, %62 ]
  %79 = extractvalue { i64, i64 } %78, 0
  %80 = extractvalue { i64, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  %82 = bitcast i8* %81 to %"class.blink::LayoutBoxModelObject"*
  %83 = and i64 %79, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %77, %62
  %86 = phi %"class.blink::LayoutBoxModelObject"* [ %82, %77 ], [ %63, %62 ]
  %87 = phi i8* [ %81, %77 ], [ %75, %62 ]
  %88 = phi i64 [ %79, %77 ], [ 1017, %62 ]
  %89 = bitcast i8* %87 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %88, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %77
  %96 = inttoptr i64 %79 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %95, %85
  %98 = phi %"class.blink::LayoutBoxModelObject"* [ %86, %85 ], [ %82, %95 ]
  %99 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %85 ], [ %96, %95 ]
  %100 = call i32 %99(%"class.blink::LayoutBoxModelObject"* %98) #16
  br label %107

101:                                              ; preds = %50
  %102 = bitcast %"class.blink::LayoutBox"* %61 to i32 (%"class.blink::LayoutBox"*)***
  %103 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %102, align 8
  %104 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %103, i64 127
  %105 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %104, align 8
  %106 = call i32 %105(%"class.blink::LayoutBox"* %61) #16
  br label %107

107:                                              ; preds = %97, %101
  %108 = phi i32 [ %100, %97 ], [ %106, %101 ]
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %108) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113
  store i32 %53, i32* %40, align 4
  store i32 %114, i32* %41, align 4
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %35, %"class.blink::LayoutBox"* dereferenceable(216) %52, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %115

115:                                              ; preds = %42, %107
  %116 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %43, i64 0, i32 2
  %117 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %116, align 8
  %118 = icmp eq %"class.WTF::MallocedListHashSetNode"* %117, null
  br i1 %118, label %119, label %42

119:                                              ; preds = %115, %30, %24, %26
  ret void
}

declare void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::FloatingObject"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %4 = tail call i64 @_ZNK5blink9LayoutBox29OriginAdjustmentForScrollbarsEv(%"class.blink::LayoutBox"* %3) #16
  %5 = trunc i64 %4 to i32
  %6 = icmp sgt i32 %5, 33554431
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, -33554432
  %9 = shl i32 %5, 6
  %10 = select i1 %8, i32 -2147483648, i32 %9
  br label %11

11:                                               ; preds = %7, %2
  %12 = phi i32 [ 2147483647, %2 ], [ %10, %7 ]
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = trunc i96 %15 to i32
  %17 = icmp slt i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 0
  %21 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, align 8
  br i1 %17, label %22, label %37

22:                                               ; preds = %11
  %23 = bitcast %"class.blink::LayoutBox"* %21 to i32 (%"class.blink::LayoutBox"*)***
  %24 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %24, i64 129
  %26 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::LayoutBox"* %21) #16
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %27) #16
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = icmp slt i32 %12, 0
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %12) #16
  br label %80

37:                                               ; preds = %11
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %40, null
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %44 = select i1 %41, %"class.blink::ComputedStyle"* %43, %"class.blink::ComputedStyle"* %40
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8, !noalias !198
  %48 = lshr i160 %47, 102
  %49 = trunc i160 %48 to i8
  %50 = and i8 %49, 3
  %51 = bitcast %"class.blink::LayoutBox"* %21 to i8*
  switch i8 %50, label %52 [
    i8 0, label %61
    i8 1, label %53
  ]

52:                                               ; preds = %37
  br label %53

53:                                               ; preds = %52, %37
  %54 = phi { i64, i64 } [ { i64 1033, i64 0 }, %52 ], [ { i64 1041, i64 0 }, %37 ]
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = extractvalue { i64, i64 } %54, 1
  %57 = getelementptr inbounds i8, i8* %51, i64 %56
  %58 = bitcast i8* %57 to %"class.blink::LayoutBoxModelObject"*
  %59 = and i64 %55, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %53, %37
  %62 = phi %"class.blink::LayoutBoxModelObject"* [ %58, %53 ], [ %38, %37 ]
  %63 = phi i8* [ %57, %53 ], [ %51, %37 ]
  %64 = phi i64 [ %55, %53 ], [ 1017, %37 ]
  %65 = bitcast i8* %63 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = add i64 %64, -1
  %68 = getelementptr i8, i8* %66, i64 %67
  %69 = bitcast i8* %68 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %70 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %69, align 8
  br label %73

71:                                               ; preds = %53
  %72 = inttoptr i64 %55 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %73

73:                                               ; preds = %61, %71
  %74 = phi %"class.blink::LayoutBoxModelObject"* [ %62, %61 ], [ %58, %71 ]
  %75 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %70, %61 ], [ %72, %71 ]
  %76 = tail call i32 %75(%"class.blink::LayoutBoxModelObject"* %74) #16
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %76) #16
  br label %80

80:                                               ; preds = %73, %22
  %81 = phi { i32, i1 } [ %79, %73 ], [ %36, %22 ]
  %82 = phi i32 [ %78, %73 ], [ %35, %22 ]
  %83 = extractvalue { i32, i1 } %81, 1
  %84 = extractvalue { i32, i1 } %81, 0
  %85 = select i1 %83, i32 %82, i32 %84
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsERKNS_18NGPhysicalFragmentE(%"class.blink::LayoutBlockFlow"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = tail call { i32, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment18PostLayoutChildrenEv(%"class.blink::NGPhysicalFragment"* %1) #16
  %5 = extractvalue { i32, %"struct.blink::NGLink"* } %4, 0
  %6 = extractvalue { i32, %"struct.blink::NGLink"* } %4, 1
  %7 = zext i32 %5 to i64
  %8 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %6, i64 %7
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2, %20
  %11 = phi %"struct.blink::NGLink"* [ %21, %20 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %11, i64 0, i32 0
  %13 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %12, align 8, !noalias !201
  %14 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %13, i64 0, i32 1
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8, !noalias !201
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %20, label %17, !prof !2

17:                                               ; preds = %10
  %18 = tail call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %13) #16, !noalias !201
  %19 = icmp eq %"class.blink::NGPhysicalFragment"* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %17, %10
  %21 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %11, i64 1
  %22 = icmp eq %"struct.blink::NGLink"* %21, %8
  br i1 %22, label %31, label %10

23:                                               ; preds = %17, %2
  %24 = phi %"struct.blink::NGLink"* [ %6, %2 ], [ %11, %17 ]
  %25 = phi %"class.blink::NGPhysicalFragment"* [ inttoptr (i64 -6148914691236517206 to %"class.blink::NGPhysicalFragment"*), %2 ], [ %18, %17 ]
  %26 = icmp eq %"struct.blink::NGLink"* %24, %8
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %29 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %30 = bitcast i64* %3 to i8*
  br label %32

31:                                               ; preds = %20, %92, %108, %105, %23
  ret void

32:                                               ; preds = %27, %108
  %33 = phi %"class.blink::NGPhysicalFragment"* [ %25, %27 ], [ %103, %108 ]
  %34 = phi %"struct.blink::NGLink"* [ %24, %27 ], [ %96, %108 ]
  %35 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %33, i64 0, i32 3
  %36 = bitcast i24* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 64
  %39 = icmp eq i32 %38, 0
  %40 = and i32 %37, 960
  %41 = icmp ne i32 %40, 256
  %42 = and i1 %39, %41
  br i1 %42, label %43, label %56

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %33, i64 0, i32 1
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 4294967296
  %50 = icmp eq i96 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.blink::LayoutObject"* %45 to %"class.blink::LayoutBoxModelObject"*
  %53 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %52) #16
  br i1 %53, label %92, label %54

54:                                               ; preds = %51
  %55 = load i32, i32* %36, align 8
  br label %56

56:                                               ; preds = %54, %32, %43
  %57 = phi i32 [ %55, %54 ], [ %37, %32 ], [ %37, %43 ]
  %58 = and i32 %57, 960
  %59 = icmp eq i32 %58, 512
  br i1 %59, label %60, label %77

60:                                               ; preds = %56
  %61 = and i32 %57, 64
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %33, i64 0, i32 1
  %65 = bitcast %"class.blink::LayoutObject"** %64 to %"class.blink::LayoutBox"**
  %66 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %65, align 8
  br label %67

67:                                               ; preds = %60, %63
  %68 = phi %"class.blink::LayoutBox"* [ %66, %63 ], [ null, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %68, i64 0, i32 2, i32 0, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %70 to i64
  %76 = or i64 %74, %75
  store i64 %76, i64* %3, align 8
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %28, %"class.blink::LayoutBox"* dereferenceable(216) %68, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %29) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  br label %92

77:                                               ; preds = %56
  %78 = icmp ne %"class.blink::NGPhysicalFragment"* %33, null
  %79 = and i32 %57, 1
  %80 = icmp ne i32 %79, 0
  %81 = and i1 %78, %80
  br i1 %81, label %82, label %92

82:                                               ; preds = %77
  %83 = and i32 %57, 64
  %84 = icmp eq i32 %83, 0
  %85 = and i32 %57, 896
  %86 = icmp ugt i32 %85, 256
  %87 = and i1 %84, %86
  %88 = and i32 %57, 524288
  %89 = icmp ne i32 %88, 0
  %90 = or i1 %89, %87
  br i1 %90, label %92, label %91

91:                                               ; preds = %82
  call void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsERKNS_18NGPhysicalFragmentE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::NGPhysicalFragment"* nonnull dereferenceable(48) %33)
  br label %92

92:                                               ; preds = %77, %82, %91, %51, %67
  %93 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %34, i64 1
  %94 = icmp eq %"struct.blink::NGLink"* %93, %8
  br i1 %94, label %31, label %95

95:                                               ; preds = %92, %105
  %96 = phi %"struct.blink::NGLink"* [ %106, %105 ], [ %93, %92 ]
  %97 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %96, i64 0, i32 0
  %98 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %98, i64 0, i32 1
  %100 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %99, align 8
  %101 = icmp eq %"class.blink::LayoutObject"* %100, null
  br i1 %101, label %105, label %102, !prof !2

102:                                              ; preds = %95
  %103 = call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %98) #16
  %104 = icmp eq %"class.blink::NGPhysicalFragment"* %103, null
  br i1 %104, label %105, label %108

105:                                              ; preds = %102, %95
  %106 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %96, i64 1
  %107 = icmp eq %"struct.blink::NGLink"* %106, %8
  br i1 %107, label %31, label %95

108:                                              ; preds = %102
  %109 = icmp eq %"struct.blink::NGLink"* %96, %8
  br i1 %109, label %31, label %32
}

declare { i32, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment18PostLayoutChildrenEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow27AddLayoutOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutSize", align 4
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 67108876
  %19 = icmp eq i32 %18, 67108864
  br i1 %19, label %20, label %26, !prof !22

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::Node"* %13 to %"class.blink::Element"*
  %22 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %21) #16
  %23 = icmp eq %"class.blink::DisplayLockContext"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %22) #16
  br i1 %25, label %26, label %119

26:                                               ; preds = %24, %5, %11, %15, %1, %20
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %27, align 8
  %29 = icmp eq %"class.blink::FloatingObjects"* %28, null
  br i1 %29, label %119, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %28, i64 0, i32 0, i32 1
  %32 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %31, align 8
  %33 = icmp eq %"class.WTF::MallocedListHashSetNode"* %32, null
  br i1 %33, label %119, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %36 = bitcast %"class.blink::LayoutSize"* %2 to i8*
  %37 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 1, i32 0
  br label %42

42:                                               ; preds = %34, %115
  %43 = phi %"class.WTF::MallocedListHashSetNode"* [ %32, %34 ], [ %117, %115 ]
  %44 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %45, i64 0, i32 3
  %47 = load i8, i8* %46, align 8
  %48 = and i8 %47, 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %115, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %45, i64 0, i32 0
  %52 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  %53 = call i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %45)
  %54 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %44, align 8
  %55 = load i96, i96* %38, align 4
  %56 = trunc i96 %55 to i32
  %57 = icmp slt i32 %56, 0
  %58 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %54, i64 0, i32 2, i32 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %54, i64 0, i32 0
  %61 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %60, align 8
  br i1 %57, label %62, label %101

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %65 = icmp eq %"class.blink::ComputedStyle"* %64, null
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0, i32 0, i32 5, i32 0
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %68 = select i1 %65, %"class.blink::ComputedStyle"* %67, %"class.blink::ComputedStyle"* %64
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8, !noalias !204
  %72 = lshr i160 %71, 102
  %73 = trunc i160 %72 to i8
  %74 = and i8 %73, 3
  %75 = bitcast %"class.blink::LayoutBox"* %61 to i8*
  switch i8 %74, label %76 [
    i8 0, label %85
    i8 1, label %77
  ]

76:                                               ; preds = %62
  br label %77

77:                                               ; preds = %76, %62
  %78 = phi { i64, i64 } [ { i64 1033, i64 0 }, %76 ], [ { i64 1041, i64 0 }, %62 ]
  %79 = extractvalue { i64, i64 } %78, 0
  %80 = extractvalue { i64, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  %82 = bitcast i8* %81 to %"class.blink::LayoutBoxModelObject"*
  %83 = and i64 %79, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %77, %62
  %86 = phi %"class.blink::LayoutBoxModelObject"* [ %82, %77 ], [ %63, %62 ]
  %87 = phi i8* [ %81, %77 ], [ %75, %62 ]
  %88 = phi i64 [ %79, %77 ], [ 1017, %62 ]
  %89 = bitcast i8* %87 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %88, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %77
  %96 = inttoptr i64 %79 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %95, %85
  %98 = phi %"class.blink::LayoutBoxModelObject"* [ %86, %85 ], [ %82, %95 ]
  %99 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %85 ], [ %96, %95 ]
  %100 = call i32 %99(%"class.blink::LayoutBoxModelObject"* %98) #16
  br label %107

101:                                              ; preds = %50
  %102 = bitcast %"class.blink::LayoutBox"* %61 to i32 (%"class.blink::LayoutBox"*)***
  %103 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %102, align 8
  %104 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %103, i64 127
  %105 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %104, align 8
  %106 = call i32 %105(%"class.blink::LayoutBox"* %61) #16
  br label %107

107:                                              ; preds = %97, %101
  %108 = phi i32 [ %100, %97 ], [ %106, %101 ]
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %108) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113
  store i32 %53, i32* %40, align 4
  store i32 %114, i32* %41, align 4
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %35, %"class.blink::LayoutBox"* dereferenceable(216) %52, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %115

115:                                              ; preds = %42, %107
  %116 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %43, i64 0, i32 2
  %117 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %116, align 8
  %118 = icmp eq %"class.WTF::MallocedListHashSetNode"* %117, null
  br i1 %118, label %119, label %42

119:                                              ; preds = %115, %30, %24, %26
  ret void
}

declare void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21ComputeVisualOverflowEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %5 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #16
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %4) #16
  %8 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutBlock"* %8) #16
  %9 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBox"*)***
  %10 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %10, i64 150
  %12 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %11, align 8
  tail call void %12(%"class.blink::LayoutBox"* %4) #16
  %13 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %14 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, i64 25
  %16 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %3) #16
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %2
  %19 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  br label %20

20:                                               ; preds = %18, %2
  %21 = phi %"class.blink::LayoutBlock"* [ %19, %18 ], [ %8, %2 ]
  %22 = icmp eq %"class.blink::LayoutBlock"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.blink::LayoutBlock"* %21 to i1 (%"class.blink::LayoutObject"*, i32)***
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, i64 92
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %24, i32 30) #16
  br i1 %29, label %41, label %30

30:                                               ; preds = %20, %23
  br i1 %1, label %40, label %31

31:                                               ; preds = %30
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %33 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %33, i64 182
  %35 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %38) #16
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %31, %30
  tail call void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #16
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = extractvalue { i64, i64 } %42, 1
  %45 = trunc i64 %43 to i32
  %46 = lshr i64 %43, 32
  %47 = trunc i64 %46 to i32
  %48 = trunc i64 %6 to i32
  %49 = lshr i64 %6, 32
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %45, %48
  %52 = icmp eq i32 %47, %50
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %64

54:                                               ; preds = %41
  %55 = trunc i64 %44 to i32
  %56 = trunc i64 %7 to i32
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = lshr i64 %7, 32
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %44, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %60
  br i1 %63, label %82, label %64

64:                                               ; preds = %58, %41, %54
  tail call void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"* %3) #16
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #16
  %65 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = icmp eq %"class.blink::Node"* %66, null
  br i1 %67, label %68, label %75

68:                                               ; preds = %64, %68
  %69 = phi %"class.blink::LayoutObject"* [ %71, %68 ], [ %3, %64 ]
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %69, i64 0, i32 7
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 6, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %68, label %75

75:                                               ; preds = %68, %64
  %76 = phi %"class.blink::Node"* [ %66, %64 ], [ %73, %68 ]
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %76, i64 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %80) #16
  tail call void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"* %81, i32 1) #16
  br label %82

82:                                               ; preds = %58, %75
  ret void
}

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlockFlow"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"* %4, i32 %1, i1 zeroext %2) #16
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %7 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %7, i64 25
  %9 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* %5) #16
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %3
  %12 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %5, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  br label %13

13:                                               ; preds = %11, %3
  %14 = phi %"class.blink::LayoutBlock"* [ %12, %11 ], [ %4, %3 ]
  %15 = icmp eq %"class.blink::LayoutBlock"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::LayoutBlock"* %14 to i1 (%"class.blink::LayoutObject"*, i32)***
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, i64 92
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* %17, i32 30) #16
  br i1 %22, label %34, label %23

23:                                               ; preds = %13, %16
  br i1 %2, label %33, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %26 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %26, i64 182
  %28 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutBlockFlow"* %0) #16
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %31) #16
  br i1 %32, label %33, label %34

33:                                               ; preds = %30, %24, %23
  tail call void @_ZN5blink15LayoutBlockFlow27AddLayoutOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %34

34:                                               ; preds = %33, %30, %16
  ret void
}

declare void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"*, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %5) #16
  %7 = icmp eq %"class.blink::LayoutBoxModelObject"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 16777216
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = lshr i160 %19, 32
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 31
  switch i32 %22, label %43 [
    i32 1, label %23
    i32 14, label %23
  ]

23:                                               ; preds = %14, %14
  %24 = and i160 %19, 2113929216
  %25 = icmp eq i160 %24, 0
  br i1 %25, label %26, label %43

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %28 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, i64 23
  %30 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %4) #16
  br i1 %31, label %32, label %43

32:                                               ; preds = %26
  %33 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %27, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, i64 25
  %35 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %4) #16
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %4, i32 20) #16
  br i1 %42, label %43, label %45

43:                                               ; preds = %37, %14, %8, %23, %26, %32, %3
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"* %44, %"class.WTF::Vector.3102"* dereferenceable(16) %1, i32 %2) #16
  br label %46

45:                                               ; preds = %37
  tail call void @_ZNK5blink20LayoutBoxModelObject13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"* %5, %"class.WTF::Vector.3102"* dereferenceable(16) %1, i32 %2) #16
  br label %46

46:                                               ; preds = %45, %43
  ret void
}

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.3102"* dereferenceable(16), i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.3102"* dereferenceable(16), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"* dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink15LayoutBlockFlow20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjb(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::Vector.3102"* dereferenceable(16) %1, i32 0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjb(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #7 align 2 {
  %5 = alloca %"class.blink::FloatQuad", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::LayoutRectOutsets"*
  %10 = alloca %"class.blink::FloatQuad", align 4
  %11 = alloca %"class.blink::FloatQuad", align 8
  %12 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = bitcast { i64, i64 }* %6 to i32*
  %14 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %16 = bitcast i64* %15 to i32*
  %17 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %20 = bitcast %"class.blink::LayoutSize"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %22, align 8
  store i64 %21, i64* %15, align 8
  %23 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %25 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %25, i64 155
  %27 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %26, align 8
  %28 = tail call i32 %27(%"class.blink::LayoutBox"* %18) #16
  %29 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %24, align 8
  %30 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %29, i64 156
  %31 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %30, align 8
  %32 = tail call i32 %31(%"class.blink::LayoutBox"* %18) #16
  %33 = zext i32 %28 to i64
  %34 = zext i32 %32 to i64
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %34, i64* %36, align 8
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %7, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %9) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  br i1 %3, label %37, label %78

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #16
  %40 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #16, !noalias !207
  %41 = load i32, i32* %13, align 8, !noalias !207
  %42 = sitofp i32 %41 to float
  %43 = fmul float %42, 1.562500e-02
  %44 = load i32, i32* %14, align 4, !noalias !207
  %45 = sitofp i32 %44 to float
  %46 = fmul float %45, 1.562500e-02
  %47 = load i32, i32* %16, align 8, !noalias !207
  %48 = sitofp i32 %47 to float
  %49 = fmul float %48, 1.562500e-02
  %50 = load i32, i32* %17, align 4, !noalias !207
  %51 = sitofp i32 %50 to float
  %52 = fmul float %51, 1.562500e-02
  %53 = insertelement <2 x float> undef, float %43, i32 0
  %54 = insertelement <2 x float> %53, float %46, i32 1
  %55 = bitcast %"class.blink::FloatQuad"* %5 to <2 x float>*
  store <2 x float> %54, <2 x float>* %55, align 8, !noalias !207
  %56 = fadd float %43, %49
  %57 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 1, i32 0
  store float %56, float* %57, align 8, !noalias !207
  %58 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 1, i32 1
  store float %46, float* %58, align 4, !noalias !207
  %59 = fadd float %46, %52
  %60 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 2, i32 0
  store float %56, float* %60, align 8, !noalias !207
  %61 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 2, i32 1
  store float %59, float* %61, align 4, !noalias !207
  %62 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 3, i32 0
  store float %43, float* %62, align 8, !noalias !207
  %63 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 3, i32 1
  store float %59, float* %63, align 4, !noalias !207
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %10, %"class.blink::LayoutObject"* %38, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %5, %"class.blink::LayoutBoxModelObject"* null, i32 %2) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #16, !noalias !207
  %64 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %1, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %1, i64 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %77, label %69, !prof !2

69:                                               ; preds = %37
  %70 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %1, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %70, align 8
  %72 = zext i32 %65 to i64
  %73 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %71, i64 %72
  %74 = bitcast %"class.blink::FloatQuad"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4 %39, i64 32, i1 false) #16
  %75 = load i32, i32* %64, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %64, align 4
  br label %117

77:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3102"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %10) #16
  br label %117

78:                                               ; preds = %4
  %79 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #16
  %80 = load i32, i32* %13, align 8
  %81 = sitofp i32 %80 to float
  %82 = fmul float %81, 1.562500e-02
  %83 = load i32, i32* %14, align 4
  %84 = sitofp i32 %83 to float
  %85 = fmul float %84, 1.562500e-02
  %86 = load i32, i32* %16, align 8
  %87 = sitofp i32 %86 to float
  %88 = fmul float %87, 1.562500e-02
  %89 = load i32, i32* %17, align 4
  %90 = sitofp i32 %89 to float
  %91 = fmul float %90, 1.562500e-02
  %92 = insertelement <2 x float> undef, float %82, i32 0
  %93 = insertelement <2 x float> %92, float %85, i32 1
  %94 = bitcast %"class.blink::FloatQuad"* %11 to <2 x float>*
  store <2 x float> %93, <2 x float>* %94, align 8
  %95 = fadd float %82, %88
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1, i32 0
  store float %95, float* %96, align 8
  %97 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 1, i32 1
  store float %85, float* %97, align 4
  %98 = fadd float %85, %91
  %99 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 0
  store float %95, float* %99, align 8
  %100 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 2, i32 1
  store float %98, float* %100, align 4
  %101 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3, i32 0
  store float %82, float* %101, align 8
  %102 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %11, i64 0, i32 3, i32 1
  store float %98, float* %102, align 4
  %103 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %1, i64 0, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %1, i64 0, i32 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %116, label %108, !prof !2

108:                                              ; preds = %78
  %109 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %1, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %109, align 8
  %111 = zext i32 %104 to i64
  %112 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %110, i64 %111
  %113 = bitcast %"class.blink::FloatQuad"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* nonnull align 8 %79, i64 32, i1 false) #16
  %114 = load i32, i32* %103, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %103, align 4
  br label %117

116:                                              ; preds = %78
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3102"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %11) #16
  br label %117

117:                                              ; preds = %116, %108, %77, %69
  %118 = phi i8* [ %39, %69 ], [ %39, %77 ], [ %79, %108 ], [ %79, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3102"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink15LayoutBlockFlow20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjb(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::Vector.3102"* dereferenceable(16) %1, i32 %2, i1 zeroext true)
  ret void
}

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %3) #16
  %5 = icmp eq %"class.blink::LayoutBoxModelObject"* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %44, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = lshr i160 %17, 32
  %19 = trunc i160 %18 to i32
  %20 = and i32 %19, 31
  switch i32 %20, label %44 [
    i32 1, label %21
    i32 14, label %21
  ]

21:                                               ; preds = %12, %12
  %22 = and i160 %17, 2113929216
  %23 = icmp eq i160 %22, 0
  br i1 %23, label %24, label %44

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %26 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, i64 23
  %28 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %2) #16
  br i1 %29, label %30, label %44

30:                                               ; preds = %24
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 25
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %2) #16
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %2, i32 20) #16
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %3) #16
  %43 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %42, i64 0, i32 0
  br label %47

44:                                               ; preds = %35, %12, %6, %21, %24, %30, %1
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi %"class.blink::LayoutObject"* [ %43, %41 ], [ %46, %44 ]
  ret %"class.blink::LayoutObject"* %48
}

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow28CreateAndAppendRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)***
  %3 = load %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)**, %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)*, %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)** %3, i64 219
  %5 = load %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)*, %"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)** %4, align 8
  %6 = tail call %"class.blink::RootInlineBox"* %5(%"class.blink::LayoutBlockFlow"* %0) #16
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.blink::RootInlineBox"* %6 to %"class.blink::InlineFlowBox"*
  tail call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE13AppendLineBoxEPS1_(%"class.blink::InlineBoxList"* %7, %"class.blink::InlineFlowBox"* %8) #16
  ret %"class.blink::RootInlineBox"* %6
}

declare void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE13AppendLineBoxEPS1_(%"class.blink::InlineBoxList"*, %"class.blink::InlineFlowBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %2, align 8
  %4 = icmp eq %"class.blink::FloatingObjects"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %3, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink15FloatingObjects24ClearLineBoxTreePointersEv(%"class.blink::FloatingObjects"* nonnull %3) #16
  br label %10

10:                                               ; preds = %5, %1, %9
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  tail call void @_ZN5blink11LineBoxList17DeleteLineBoxTreeEv(%"class.blink::LineBoxList"* %11) #16
  ret void
}

declare void @_ZN5blink15FloatingObjects24ClearLineBoxTreePointersEv(%"class.blink::FloatingObjects"*) local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList17DeleteLineBoxTreeEv(%"class.blink::LineBoxList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 17592186044416
  %8 = icmp eq i96 %7, 0
  %9 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  br i1 %8, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call i32 @_ZNK5blink11LayoutBlock20FirstLineBoxBaselineEv(%"class.blink::LayoutBlock"* %9) #16
  br label %157

12:                                               ; preds = %1
  %13 = tail call i64 @_ZNK5blink11LayoutBlock28FirstLineBoxBaselineOverrideEv(%"class.blink::LayoutBlock"* %9) #16
  %14 = trunc i64 %13 to i8
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i8 %14, 0
  br i1 %17, label %18, label %157

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %19, align 8
  %21 = icmp eq %"class.blink::InlineFlowBox"* %20, null
  br i1 %21, label %151, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %22, %26
  %27 = phi %"class.blink::LayoutObject"* [ %29, %26 ], [ %3, %22 ]
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %26, label %33

33:                                               ; preds = %26, %22
  %34 = phi %"class.blink::Node"* [ %24, %22 ], [ %31, %26 ]
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %38, i64 0, i32 59, i32 0, i32 0
  %40 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %40, i64 0, i32 31, i32 0, i32 0
  %42 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %42, i64 0, i32 0, i32 11
  %44 = load i8, i8* %43, align 8
  %45 = and i8 %44, 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %33
  %48 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #16
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  br label %50

50:                                               ; preds = %47, %33
  %51 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %42, i64 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !21
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %3) #16
  %56 = icmp eq %"class.blink::ComputedStyle"* %55, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %54, %50
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  br label %60

60:                                               ; preds = %54, %57
  %61 = phi %"class.blink::ComputedStyle"* [ %59, %57 ], [ %55, %54 ]
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %63, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %65, i64 0, i32 1
  %67 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %66) #16
  %68 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %67, i64 0, i32 2
  %69 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %68, align 8
  %70 = icmp eq %"class.blink::SimpleFontData"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %66, i64 0, i32 0
  %73 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %67, %"class.blink::FontDescription"* dereferenceable(80) %72) #16
  store %"class.blink::SimpleFontData"* %73, %"class.blink::SimpleFontData"** %68, align 8
  %74 = icmp eq %"class.blink::SimpleFontData"* %73, null
  br i1 %74, label %157, label %75

75:                                               ; preds = %60, %71
  %76 = phi %"class.blink::SimpleFontData"* [ %73, %71 ], [ %69, %60 ]
  %77 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 15211807202738752817960438464512
  %83 = icmp eq i160 %82, 10141204801825835211973625643008
  %84 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %19, align 8
  %85 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %84, i64 0, i32 0, i32 7, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 2048
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %84, i64 0, i32 0, i32 5, i32 1, i32 0
  %90 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %84, i64 0, i32 0, i32 5, i32 0, i32 0
  %91 = select i1 %88, i32* %90, i32* %89
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %84, i64 0, i32 6
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 224
  %96 = icmp eq i32 %95, 0
  br i1 %83, label %97, label %125

97:                                               ; preds = %75
  br i1 %96, label %98, label %101

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %76, i64 0, i32 1, i32 10
  %100 = load i32, i32* %99, align 4
  br label %108

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %76, i64 0, i32 1, i32 9
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %76, i64 0, i32 1, i32 10
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %105, %103
  %107 = sdiv i32 %106, 2
  br label %108

108:                                              ; preds = %98, %101
  %109 = phi i32 [ %100, %98 ], [ %107, %101 ]
  %110 = icmp sgt i32 %109, 33554431
  br i1 %110, label %118, label %111

111:                                              ; preds = %108
  %112 = icmp slt i32 %109, -33554432
  br i1 %112, label %116, label %113

113:                                              ; preds = %111
  %114 = shl i32 %109, 6
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111, %113
  %117 = phi i32 [ %114, %113 ], [ -2147483648, %111 ]
  br label %118

118:                                              ; preds = %108, %113, %116
  %119 = phi i32 [ %117, %116 ], [ %114, %113 ], [ 2147483647, %108 ]
  %120 = phi i32 [ -2147483648, %116 ], [ 2147483647, %113 ], [ 2147483647, %108 ]
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %119) #16
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !2
  br label %157

125:                                              ; preds = %75
  %126 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %76, i64 0, i32 1, i32 9
  %127 = load i32, i32* %126, align 4
  br i1 %96, label %134, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %76, i64 0, i32 1, i32 10
  %130 = load i32, i32* %129, align 4
  %131 = add nsw i32 %130, %127
  %132 = sdiv i32 %131, 2
  %133 = sub nsw i32 %131, %132
  br label %134

134:                                              ; preds = %125, %128
  %135 = phi i32 [ %133, %128 ], [ %127, %125 ]
  %136 = icmp sgt i32 %135, 33554431
  br i1 %136, label %144, label %137

137:                                              ; preds = %134
  %138 = icmp slt i32 %135, -33554432
  br i1 %138, label %142, label %139

139:                                              ; preds = %137
  %140 = shl i32 %135, 6
  %141 = icmp slt i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137, %139
  %143 = phi i32 [ %140, %139 ], [ -2147483648, %137 ]
  br label %144

144:                                              ; preds = %134, %139, %142
  %145 = phi i32 [ %143, %142 ], [ %140, %139 ], [ 2147483647, %134 ]
  %146 = phi i32 [ -2147483648, %142 ], [ 2147483647, %139 ], [ 2147483647, %134 ]
  %147 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %145) #16
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %146, i32 %149, !prof !2
  br label %157

151:                                              ; preds = %18
  %152 = load i96, i96* %5, align 4
  %153 = trunc i96 %152 to i32
  %154 = lshr i32 %153, 31
  %155 = xor i32 %154, 1
  %156 = tail call i32 @_ZNK5blink11LayoutBlock17EmptyLineBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %9, i32 %155) #16
  br label %157

157:                                              ; preds = %12, %71, %118, %144, %151, %10
  %158 = phi i32 [ %156, %151 ], [ %124, %118 ], [ %150, %144 ], [ %11, %10 ], [ %16, %12 ], [ -64, %71 ]
  ret i32 %158
}

declare i32 @_ZNK5blink11LayoutBlock20FirstLineBoxBaselineEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock28FirstLineBoxBaselineOverrideEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock17EmptyLineBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlockFlow"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 17592186044416
  %9 = icmp eq i96 %8, 0
  %10 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  br i1 %9, label %11, label %13

11:                                               ; preds = %2
  %12 = tail call i32 @_ZNK5blink11LayoutBlock19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %10, i32 %1) #16
  br label %187

13:                                               ; preds = %2
  %14 = tail call i64 @_ZNK5blink11LayoutBlock27InlineBlockBaselineOverrideENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %10, i32 %1) #16
  %15 = trunc i64 %14 to i8
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i8 %15, 0
  br i1 %18, label %19, label %187

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %20, align 8
  %22 = icmp eq %"class.blink::InlineFlowBox"* %21, null
  br i1 %22, label %185, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %24, align 8
  %26 = icmp eq %"class.blink::InlineFlowBox"* %21, %25
  br i1 %26, label %27, label %62

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %27, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %4, %27 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %27
  %39 = phi %"class.blink::Node"* [ %29, %27 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 59, i32 0, i32 0
  %45 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %45, i64 0, i32 31, i32 0, i32 0
  %47 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %47, i64 0, i32 0, i32 11
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %38
  %53 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #16
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  br label %55

55:                                               ; preds = %52, %38
  %56 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %47, i64 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 8, !range !21
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %4) #16
  %61 = icmp eq %"class.blink::ComputedStyle"* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %23, %55, %59
  %63 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  br label %65

65:                                               ; preds = %62, %59
  %66 = phi %"class.blink::ComputedStyle"* [ %60, %59 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %70, i64 0, i32 1
  %72 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %71) #16
  %73 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %72, i64 0, i32 2
  %74 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %73, align 8
  %75 = icmp eq %"class.blink::SimpleFontData"* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %71, i64 0, i32 0
  %78 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %72, %"class.blink::FontDescription"* dereferenceable(80) %77) #16
  store %"class.blink::SimpleFontData"* %78, %"class.blink::SimpleFontData"** %73, align 8
  %79 = icmp eq %"class.blink::SimpleFontData"* %78, null
  br i1 %79, label %187, label %80

80:                                               ; preds = %65, %76
  %81 = phi %"class.blink::SimpleFontData"* [ %78, %76 ], [ %74, %65 ]
  %82 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8
  %87 = and i160 %86, 15211807202738752817960438464512
  %88 = icmp eq i160 %87, 10141204801825835211973625643008
  br i1 %88, label %89, label %146

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %20, align 8
  %93 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %92, i64 0, i32 0
  %94 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %92, i64 0, i32 0, i32 7, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, 2048
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %92, i64 0, i32 0, i32 5, i32 1, i32 0
  %99 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %92, i64 0, i32 0, i32 5, i32 0, i32 0
  %100 = select i1 %97, i32* %99, i32* %98
  %101 = load i32, i32* %100, align 4
  %102 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %93) #16
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %102) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  %109 = icmp sgt i32 %108, -1
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %91, i32 %108) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  %115 = bitcast %"class.blink::InlineFlowBox"** %20 to %"class.blink::RootInlineBox"**
  %116 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %116, i64 0, i32 0, i32 6
  %118 = load i32, i32* %117, align 8
  %119 = and i32 %118, 224
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %81, i64 0, i32 1, i32 9
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %129, label %123

123:                                              ; preds = %89
  %124 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %81, i64 0, i32 1, i32 10
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %125, %122
  %127 = sdiv i32 %126, 2
  %128 = sub nsw i32 %126, %127
  br label %129

129:                                              ; preds = %89, %123
  %130 = phi i32 [ %128, %123 ], [ %122, %89 ]
  %131 = icmp sgt i32 %130, 33554431
  br i1 %131, label %139, label %132

132:                                              ; preds = %129
  %133 = icmp slt i32 %130, -33554432
  br i1 %133, label %137, label %134

134:                                              ; preds = %132
  %135 = shl i32 %130, 6
  %136 = icmp slt i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132, %134
  %138 = phi i32 [ %135, %134 ], [ -2147483648, %132 ]
  br label %139

139:                                              ; preds = %129, %134, %137
  %140 = phi i32 [ %138, %137 ], [ %135, %134 ], [ 2147483647, %129 ]
  %141 = phi i32 [ -2147483648, %137 ], [ 2147483647, %134 ], [ 2147483647, %129 ]
  %142 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 %140) #16
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %141, i32 %144, !prof !2
  br label %187

146:                                              ; preds = %80
  %147 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %20, align 8
  %148 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %147, i64 0, i32 0, i32 7, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 2048
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %147, i64 0, i32 0, i32 5, i32 1, i32 0
  %153 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %147, i64 0, i32 0, i32 5, i32 0, i32 0
  %154 = select i1 %151, i32* %153, i32* %152
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %147, i64 0, i32 6
  %157 = load i32, i32* %156, align 8
  %158 = and i32 %157, 224
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %81, i64 0, i32 1, i32 9
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %168, label %162

162:                                              ; preds = %146
  %163 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %81, i64 0, i32 1, i32 10
  %164 = load i32, i32* %163, align 4
  %165 = add nsw i32 %164, %161
  %166 = sdiv i32 %165, 2
  %167 = sub nsw i32 %165, %166
  br label %168

168:                                              ; preds = %146, %162
  %169 = phi i32 [ %167, %162 ], [ %161, %146 ]
  %170 = icmp sgt i32 %169, 33554431
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = icmp slt i32 %169, -33554432
  br i1 %172, label %176, label %173

173:                                              ; preds = %171
  %174 = shl i32 %169, 6
  %175 = icmp slt i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %171, %173
  %177 = phi i32 [ %174, %173 ], [ -2147483648, %171 ]
  br label %178

178:                                              ; preds = %168, %173, %176
  %179 = phi i32 [ %177, %176 ], [ %174, %173 ], [ 2147483647, %168 ]
  %180 = phi i32 [ -2147483648, %176 ], [ 2147483647, %173 ], [ 2147483647, %168 ]
  %181 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %155, i32 %179) #16
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !2
  br label %187

185:                                              ; preds = %19
  %186 = tail call i32 @_ZNK5blink11LayoutBlock17EmptyLineBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %10, i32 %1) #16
  br label %187

187:                                              ; preds = %13, %76, %139, %178, %185, %11
  %188 = phi i32 [ %186, %185 ], [ %145, %139 ], [ %184, %178 ], [ %12, %11 ], [ %17, %13 ], [ -64, %76 ]
  ret i32 %188
}

declare i32 @_ZNK5blink11LayoutBlock19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock27InlineBlockBaselineOverrideENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow36RemoveFloatingObjectsFromDescendantsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  %5 = icmp eq %"class.blink::FloatingObjects"* %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %4, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink15LayoutBlockFlow31MarkSiblingsWithFloatsForLayoutEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null) #16
  %11 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  tail call void @_ZN5blink15FloatingObjects5ClearEv(%"class.blink::FloatingObjects"* %11) #16
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %2, i32 1) #16
  %14 = load i96, i96* %13, align 4
  %15 = or i96 %14, 1180591620717411303432
  store i96 %15, i96* %13, align 4
  %16 = and i96 %14, 17592186044416
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.blink::InlineFlowBox"** %19 to %"class.blink::RootInlineBox"**
  %21 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %20, align 8
  %22 = icmp eq %"class.blink::RootInlineBox"* %21, null
  br i1 %22, label %65, label %23

23:                                               ; preds = %18, %43
  %24 = phi %"class.blink::RootInlineBox"* [ %46, %43 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %24, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %24, i64 0, i32 0, i32 0, i32 7, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 256
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %43

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::Vector.1833"*, %"class.WTF::Vector.1833"** %31, align 8
  %33 = icmp eq %"class.WTF::Vector.1833"* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::Vector.1833", %"class.WTF::Vector.1833"* %32, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::RootInlineBox"* %24 to void (%"class.blink::InlineBox"*)***
  %40 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %40, i64 28
  %42 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %41, align 8
  tail call void %42(%"class.blink::InlineBox"* %25) #16
  br label %43

43:                                               ; preds = %23, %38, %30, %34
  %44 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %24, i64 0, i32 0, i32 5
  %45 = bitcast %"class.blink::InlineFlowBox"** %44 to %"class.blink::RootInlineBox"**
  %46 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %45, align 8
  %47 = icmp eq %"class.blink::RootInlineBox"* %46, null
  br i1 %47, label %65, label %23

48:                                               ; preds = %10
  %49 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48, %61
  %53 = phi %"class.blink::LayoutObject"* [ %63, %61 ], [ %50, %48 ]
  %54 = bitcast %"class.blink::LayoutObject"* %53 to i1 (%"class.blink::LayoutObject"*)***
  %55 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, i64 24
  %57 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* nonnull %53) #16
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = bitcast %"class.blink::LayoutObject"* %53 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow36RemoveFloatingObjectsFromDescendantsEv(%"class.blink::LayoutBlockFlow"* nonnull %60)
  br label %61

61:                                               ; preds = %52, %59
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 9
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = icmp eq %"class.blink::LayoutObject"* %63, null
  br i1 %64, label %65, label %52

65:                                               ; preds = %43, %61, %18, %48, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21RemoveFloatingObjectsEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %2, align 8
  %4 = icmp eq %"class.blink::FloatingObjects"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink15LayoutBlockFlow31MarkSiblingsWithFloatsForLayoutEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null)
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %2, align 8
  tail call void @_ZN5blink15FloatingObjects5ClearEv(%"class.blink::FloatingObjects"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow20RemoveFloatingObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %148, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %8, align 8
  %10 = icmp eq %"class.WTF::MallocedListHashSetNode"** %9, null
  %11 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %72, label %13

13:                                               ; preds = %7
  %14 = add i32 %12, -1
  %15 = zext i32 %14 to i64
  %16 = shl i64 %3, 32
  %17 = xor i64 %16, -1
  %18 = add i64 %17, %3
  %19 = lshr i64 %18, 22
  %20 = xor i64 %19, %18
  %21 = shl i64 %20, 13
  %22 = xor i64 %21, -1
  %23 = add i64 %20, %22
  %24 = lshr i64 %23, 8
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, 9
  %27 = lshr i64 %26, 15
  %28 = xor i64 %27, %26
  %29 = shl i64 %28, 27
  %30 = xor i64 %29, -1
  %31 = add i64 %28, %30
  %32 = lshr i64 %31, 31
  %33 = xor i64 %32, %31
  %34 = trunc i64 %33 to i32
  %35 = and i32 %14, %34
  %36 = zext i32 %35 to i64
  %37 = xor i32 %34, -1
  %38 = lshr i32 %34, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %62, %13
  %51 = phi i64 [ 0, %13 ], [ %64, %62 ]
  %52 = phi i64 [ %36, %13 ], [ %66, %62 ]
  %53 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, i64 %52
  %54 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %53, align 8
  %55 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %54 to i64
  switch i64 %55, label %56 [
    i64 0, label %72
    i64 -1, label %62
  ]

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %58, i64 0, i32 0
  %60 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutBox"* %60, %1
  br i1 %61, label %67, label %62

62:                                               ; preds = %56, %50
  %63 = icmp eq i64 %51, 0
  %64 = select i1 %63, i64 %49, i64 %51
  %65 = add i64 %64, %52
  %66 = and i64 %65, %15
  br label %50

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, i64 %52
  %69 = icmp eq %"class.WTF::MallocedListHashSetNode"** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = zext i32 %12 to i64
  br label %75

72:                                               ; preds = %50, %67, %7
  %73 = zext i32 %12 to i64
  %74 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, i64 %73
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"class.WTF::MallocedListHashSetNode"** [ %68, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, i64 %76
  %79 = icmp eq %"class.WTF::MallocedListHashSetNode"** %77, %78
  br i1 %79, label %148, label %80

80:                                               ; preds = %75
  %81 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %77, align 8
  %82 = icmp eq %"class.WTF::MallocedListHashSetNode"* %81, null
  br i1 %82, label %148, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %87 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %86 to i96*
  %88 = load i96, i96* %87, align 4
  %89 = and i96 %88, 17592186044416
  %90 = icmp eq i96 %89, 0
  br i1 %90, label %146, label %91

91:                                               ; preds = %83
  %92 = trunc i96 %88 to i32
  %93 = icmp slt i32 %92, 0
  %94 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %85, i64 0, i32 2, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %85, i64 0, i32 2, i32 0, i32 0, i32 0
  %96 = select i1 %93, i32* %94, i32* %95
  %97 = load i32, i32* %96, align 4
  br i1 %93, label %98, label %105

98:                                               ; preds = %91
  %99 = load i32, i32* %94, align 4
  %100 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %85, i64 0, i32 2, i32 1, i32 1, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %101) #16
  br label %112

105:                                              ; preds = %91
  %106 = load i32, i32* %95, align 4
  %107 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %85, i64 0, i32 2, i32 1, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %108) #16
  br label %112

112:                                              ; preds = %98, %105
  %113 = phi { i32, i1 } [ %104, %98 ], [ %111, %105 ]
  %114 = phi i32 [ %103, %98 ], [ %110, %105 ]
  %115 = extractvalue { i32, i1 } %113, 1
  %116 = extractvalue { i32, i1 } %113, 0
  %117 = select i1 %115, i32 %114, i32 %116
  %118 = icmp slt i32 %117, 0
  %119 = icmp slt i32 %117, %97
  %120 = or i1 %118, %119
  %121 = icmp eq i32 %97, 2147483647
  %122 = or i1 %121, %120
  br i1 %122, label %130, label %123

123:                                              ; preds = %112
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 64) #16
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 2147483647, i32 %126, !prof !2
  %128 = icmp slt i32 %117, %127
  %129 = select i1 %128, i32 %127, i32 %117
  br label %130

130:                                              ; preds = %112, %123
  %131 = phi i32 [ %129, %123 ], [ 2147483647, %112 ]
  %132 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %85, i64 0, i32 1
  %133 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %132, align 8
  %134 = icmp eq %"class.blink::RootInlineBox"* %133, null
  %135 = and i96 %88, 3
  %136 = icmp ne i96 %135, 0
  %137 = or i1 %136, %134
  br i1 %137, label %144, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %133, i64 0, i32 0, i32 0
  %140 = bitcast %"class.blink::RootInlineBox"* %133 to void (%"class.blink::InlineBox"*)***
  %141 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %141, i64 28
  %143 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %142, align 8
  tail call void %143(%"class.blink::InlineBox"* %139) #16
  br label %144

144:                                              ; preds = %130, %138
  tail call void @_ZN5blink15LayoutBlockFlow26MarkLinesDirtyInBlockRangeENS_10LayoutUnitES1_PNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* %0, i32 0, i32 %131, %"class.blink::RootInlineBox"* null) #16
  %145 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  br label %146

146:                                              ; preds = %83, %144
  %147 = phi %"class.blink::FloatingObjects"* [ %5, %83 ], [ %145, %144 ]
  tail call void @_ZN5blink15FloatingObjects6RemoveEPNS_14FloatingObjectE(%"class.blink::FloatingObjects"* %147, %"class.blink::FloatingObject"* %85) #16
  br label %148

148:                                              ; preds = %80, %2, %75, %146
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow31MarkSiblingsWithFloatsForLayoutEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBox"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  %5 = icmp eq %"class.blink::FloatingObjects"* %4, null
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %6
  %11 = icmp ne %"class.blink::LayoutBox"* %1, null
  %12 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %4, i64 0, i32 0, i32 1
  %13 = xor i1 %11, true
  br label %14

14:                                               ; preds = %10, %56
  %15 = phi %"class.blink::LayoutObject"* [ %8, %10 ], [ %58, %56 ]
  %16 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutObject"*)***
  %17 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %17, i64 24
  %19 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* nonnull %15) #16
  %21 = bitcast %"class.blink::LayoutObject"* %15 to %"class.blink::LayoutBlockFlow"*
  br i1 %20, label %22, label %56

22:                                               ; preds = %14
  br i1 %11, label %38, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 8388608
  %28 = icmp ne i96 %27, 0
  %29 = and i96 %26, 113336795588871485128704
  %30 = icmp eq i96 %29, 75557863725914323419136
  %31 = or i1 %30, %28
  br i1 %31, label %56, label %32

32:                                               ; preds = %23
  %33 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %34 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %34, i64 182
  %36 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutBlockFlow"* nonnull %21) #16
  br i1 %37, label %56, label %38

38:                                               ; preds = %32, %22
  %39 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %12, align 8
  %40 = icmp eq %"class.WTF::MallocedListHashSetNode"* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %38, %52
  %42 = phi %"class.WTF::MallocedListHashSetNode"* [ %54, %52 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %44, i64 0, i32 0
  %46 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutBox"* %46, %1
  %48 = or i1 %47, %13
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nonnull %21, %"class.blink::LayoutBox"* %46)
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* nonnull %21, %"class.blink::LayoutBox"* %46, i1 zeroext true)
  br label %52

52:                                               ; preds = %49, %51, %41
  %53 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %42, i64 0, i32 2
  %54 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %53, align 8
  %55 = icmp eq %"class.WTF::MallocedListHashSetNode"* %54, null
  br i1 %55, label %56, label %41

56:                                               ; preds = %52, %38, %14, %23, %32
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 9
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutObject"* %58, null
  br i1 %59, label %60, label %14

60:                                               ; preds = %56, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %5 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %4) #16
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %7 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %6) #16
  %8 = icmp slt i32 %7, 0
  %9 = select i1 %8, i32 -2147483648, i32 2147483647
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %7) #16
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12, !prof !2
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %14, align 8
  %16 = icmp eq %"class.blink::FloatingObjects"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %15, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @_ZN5blink15FloatingObjects35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %15, i32 %13, i32 %1, i32 %2) #16
  br label %23

23:                                               ; preds = %3, %17, %21
  %24 = phi i32 [ %22, %21 ], [ %13, %17 ], [ %13, %3 ]
  %25 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %4) #16
  %26 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %14, align 8
  %27 = icmp eq %"class.blink::FloatingObjects"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %26, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = tail call i32 @_ZN5blink15FloatingObjects34LogicalLeftOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %26, i32 %25, i32 %1, i32 %2) #16
  br label %34

34:                                               ; preds = %23, %28, %32
  %35 = phi i32 [ %33, %32 ], [ %25, %28 ], [ %25, %23 ]
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %24, i32 %35) #16
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !2
  %42 = icmp sgt i32 %41, 0
  %43 = select i1 %42, i32 %41, i32 0
  ret i32 %43
}

declare void @_ZN5blink9LayoutBox38LogicalExtentAfterUpdatingLogicalWidthERKNS_10LayoutUnitERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"class.blink::LayoutUnit"* dereferenceable(4), %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow35NextFloatLogicalBottomBelowForBlockENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  %5 = icmp eq %"class.blink::FloatingObjects"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN5blink15FloatingObjects39FindNextFloatLogicalBottomBelowForBlockENS_10LayoutUnitE(%"class.blink::FloatingObjects"* nonnull %4, i32 %1) #16
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ %7, %6 ], [ %1, %2 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21LayoutObjectChildList23DestroyLeftoverChildrenEv(%"class.blink::LayoutObjectChildList"* %4) #16
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %5) #16
  %7 = icmp eq %"class.blink::LayoutBoxModelObject"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %9) #16
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %5, %"class.blink::LayoutBoxModelObject"* null) #16
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %10, %14
  %15 = phi %"class.blink::LayoutObject"* [ %17, %14 ], [ %2, %10 ]
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %14, label %21

21:                                               ; preds = %14, %10
  %22 = phi %"class.blink::Node"* [ %12, %10 ], [ %19, %14 ]
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 5, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 19
  br i1 %29, label %85, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %31, align 8
  %33 = icmp eq %"class.blink::InlineFlowBox"* %32, null
  br i1 %33, label %85, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 16777216
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %85, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = lshr i160 %45, 32
  %47 = trunc i160 %46 to i32
  %48 = and i32 %47, 31
  switch i32 %48, label %85 [
    i32 1, label %49
    i32 14, label %49
  ]

49:                                               ; preds = %40, %40
  %50 = and i160 %45, 2113929216
  %51 = icmp eq i160 %50, 0
  br i1 %51, label %52, label %85

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %54 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, i64 23
  %56 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %2) #16
  br i1 %57, label %58, label %85

58:                                               ; preds = %52
  %59 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %53, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %59, i64 25
  %61 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %2) #16
  br i1 %62, label %85, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %2, i32 20) #16
  br i1 %68, label %85, label %69

69:                                               ; preds = %63
  %70 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %31, align 8
  %71 = icmp eq %"class.blink::InlineFlowBox"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69, %81
  %73 = phi %"class.blink::InlineFlowBox"* [ %83, %81 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %73, i64 0, i32 2
  %75 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %74, align 8
  %76 = icmp eq %"class.blink::InlineBox"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %72, %77
  %78 = phi %"class.blink::InlineBox"* [ %79, %77 ], [ %75, %72 ]
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* nonnull %78, i32 0) #16
  %79 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %74, align 8
  %80 = icmp eq %"class.blink::InlineBox"* %79, null
  br i1 %80, label %81, label %77

81:                                               ; preds = %77, %72
  %82 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %73, i64 0, i32 5
  %83 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %82, align 8
  %84 = icmp eq %"class.blink::InlineFlowBox"* %83, null
  br i1 %84, label %85, label %72

85:                                               ; preds = %81, %69, %63, %40, %34, %49, %52, %58, %30, %21
  %86 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"* %86) #16
  tail call void @_ZN5blink11LayoutBlock15WillBeDestroyedEv(%"class.blink::LayoutBlock"* %3) #16
  ret void
}

declare void @_ZN5blink21LayoutObjectChildList23DestroyLeftoverChildrenEv(%"class.blink::LayoutObjectChildList"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15WillBeDestroyedEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = icmp eq %"class.blink::ComputedStyle"* %5, null
  br i1 %6, label %75, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 8388608
  %12 = icmp ne i96 %11, 0
  %13 = and i96 %10, 113336795588871485128704
  %14 = icmp eq i96 %13, 75557863725914323419136
  %15 = or i1 %14, %12
  br i1 %15, label %24, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %18 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %18, i64 182
  %20 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutBlockFlow"* %0) #16
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i8
  br label %24

24:                                               ; preds = %7, %16
  %25 = phi i8 [ 0, %7 ], [ %23, %16 ]
  store i8 %25, i8* @_ZN5blink15LayoutBlockFlow33can_propagate_float_into_sibling_E, align 1
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp ne %"class.blink::LayoutObject"* %27, null
  %29 = and i32 %1, 6
  %30 = icmp eq i32 %29, 4
  %31 = and i1 %30, %28
  br i1 %31, label %32, label %76

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = lshr i160 %35, 80
  %37 = trunc i160 %36 to i32
  %38 = and i32 %37, 7
  %39 = icmp eq i32 %38, 4
  %40 = and i160 %35, 128849018880
  %41 = icmp eq i160 %40, 42949672960
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 3, i32 %38
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = lshr i160 %46, 80
  %48 = trunc i160 %47 to i32
  %49 = and i32 %48, 7
  %50 = icmp eq i32 %49, 4
  %51 = and i160 %46, 128849018880
  %52 = icmp eq i160 %51, 42949672960
  %53 = and i1 %52, %50
  %54 = select i1 %53, i32 3, i32 %49
  %55 = icmp eq i32 %43, %54
  br i1 %55, label %76, label %56

56:                                               ; preds = %32
  %57 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %57, align 8
  %59 = icmp eq %"class.blink::FloatingObjects"* %58, null
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %58, i64 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %60
  %65 = load i96, i96* %9, align 4
  %66 = and i96 %65, 8388608
  %67 = icmp eq i96 %66, 0
  %68 = and i96 %65, 113336795588871485128704
  %69 = icmp ne i96 %68, 75557863725914323419136
  %70 = and i1 %69, %67
  %71 = and i160 %46, 7253554917687775048237056
  %72 = icmp eq i160 %71, 0
  %73 = and i1 %72, %70
  br i1 %73, label %74, label %76

74:                                               ; preds = %64
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %76

75:                                               ; preds = %3
  store i8 0, i8* @_ZN5blink15LayoutBlockFlow33can_propagate_float_into_sibling_E, align 1
  br label %76

76:                                               ; preds = %60, %64, %24, %56, %75, %32, %74
  %77 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlock"* %77, i32 %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #16
  ret void
}

declare void @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %5) #16
  %7 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"* %7, i32 %1, %"class.blink::ComputedStyle"* %2) #16
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 8388608
  %12 = icmp ne i96 %11, 0
  %13 = and i96 %10, 113336795588871485128704
  %14 = icmp eq i96 %13, 75557863725914323419136
  %15 = or i1 %14, %12
  br i1 %15, label %23, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %18 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %18, i64 182
  %20 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutBlockFlow"* %0) #16
  %22 = xor i1 %21, true
  br label %23

23:                                               ; preds = %16, %3
  %24 = phi i1 [ false, %3 ], [ %22, %16 ]
  %25 = and i32 %1, 6
  %26 = icmp ne i32 %25, 4
  %27 = load i8, i8* @_ZN5blink15LayoutBlockFlow33can_propagate_float_into_sibling_E, align 1
  %28 = icmp eq i8 %27, 0
  %29 = or i1 %26, %28
  %30 = or i1 %24, %29
  br i1 %30, label %57, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %57, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %36, align 8
  %38 = icmp eq %"class.blink::FloatingObjects"* %37, null
  br i1 %38, label %57, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %37, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %39
  %44 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %37, i32 3) #16
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %54 = select i1 %51, i32* %52, i32* %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %44, %55
  br label %57

57:                                               ; preds = %43, %39, %35, %31, %23
  %58 = phi i1 [ false, %23 ], [ false, %39 ], [ false, %31 ], [ %56, %43 ], [ false, %35 ]
  %59 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %5) #16
  %60 = xor i1 %6, %59
  br i1 %60, label %61, label %89

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = icmp eq %"class.blink::LayoutObject"* %63, null
  br i1 %64, label %89, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %66, align 8
  %68 = icmp eq %"class.blink::FloatingObjects"* %67, null
  br i1 %68, label %89, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %67, i64 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %89, label %73

73:                                               ; preds = %69
  %74 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %67, i32 3) #16
  %75 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 9
  %78 = bitcast [20 x i8]* %77 to i160*
  %79 = load i160, i160* %78, align 8
  %80 = and i160 %79, 15211807202738752817960438464512
  %81 = icmp eq i160 %80, 0
  %82 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %83 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %84 = select i1 %81, i32* %82, i32* %83
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %74, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %73
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null)
  br i1 %6, label %88, label %90

88:                                               ; preds = %87
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %89

89:                                               ; preds = %65, %61, %69, %88, %73, %57
  br i1 %58, label %90, label %160

90:                                               ; preds = %87, %89
  %91 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %94 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %92, i64 0, i32 0, i32 1
  br label %95

95:                                               ; preds = %156, %90
  %96 = phi %"class.blink::LayoutBlockFlow"* [ %0, %90 ], [ %157, %156 ]
  %97 = phi %"class.blink::LayoutObject"** [ %93, %90 ], [ %158, %156 ]
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = icmp eq %"class.blink::LayoutObject"* %98, null
  br i1 %99, label %156, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::LayoutObject"* %98 to i1 (%"class.blink::LayoutObject"*, i32)***
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %101, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, i64 92
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::LayoutObject"* nonnull %98, i32 55) #16
  br i1 %105, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* %96, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br i1 %58, label %159, label %160

107:                                              ; preds = %100
  %108 = bitcast %"class.blink::LayoutObject"* %98 to i1 (%"class.blink::LayoutObject"*)***
  %109 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %109, i64 24
  %111 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.blink::LayoutObject"* nonnull %98) #16
  %113 = bitcast %"class.blink::LayoutObject"* %98 to %"class.blink::LayoutBlockFlow"*
  br i1 %112, label %114, label %156

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 7
  %116 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %115, align 8
  %117 = icmp eq %"class.blink::LayoutObject"* %116, null
  br i1 %117, label %156, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 3, i32 1
  %120 = bitcast %"class.blink::DisplayItemClient.base"* %119 to %"class.blink::FloatingObjects"**
  %121 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %120, align 8
  %122 = icmp eq %"class.blink::FloatingObjects"* %121, null
  br i1 %122, label %156, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %121, i64 0, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %156, label %127

127:                                              ; preds = %123
  %128 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %121, i32 3) #16
  %129 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 5, i32 0
  %130 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 9
  %132 = bitcast [20 x i8]* %131 to i160*
  %133 = load i160, i160* %132, align 8
  %134 = and i160 %133, 15211807202738752817960438464512
  %135 = icmp eq i160 %134, 0
  %136 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 1, i32 4, i32 0, i64 8
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 1, i32 4, i32 0, i64 4
  %138 = select i1 %135, i8* %136, i8* %137
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %128, %140
  br i1 %141, label %142, label %156

142:                                              ; preds = %127
  %143 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %94, align 8
  %144 = icmp eq %"class.WTF::MallocedListHashSetNode"* %143, null
  br i1 %144, label %156, label %149

145:                                              ; preds = %149
  %146 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %150, i64 0, i32 2
  %147 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %146, align 8
  %148 = icmp eq %"class.WTF::MallocedListHashSetNode"* %147, null
  br i1 %148, label %156, label %149

149:                                              ; preds = %142, %145
  %150 = phi %"class.WTF::MallocedListHashSetNode"* [ %147, %145 ], [ %143, %142 ]
  %151 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %152, i64 0, i32 0
  %154 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %153, align 8
  %155 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow19HasOverhangingFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nonnull %113, %"class.blink::LayoutBox"* %154)
  br i1 %155, label %156, label %145

156:                                              ; preds = %145, %149, %142, %107, %118, %114, %123, %95, %127
  %157 = phi %"class.blink::LayoutBlockFlow"* [ %96, %127 ], [ %96, %107 ], [ %96, %95 ], [ %96, %123 ], [ %96, %114 ], [ %96, %118 ], [ %96, %142 ], [ %96, %145 ], [ %113, %149 ]
  %158 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 7
  br label %95

159:                                              ; preds = %106
  tail call void @_ZN5blink15LayoutBlockFlow31MarkSiblingsWithFloatsForLayoutEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %96, %"class.blink::LayoutBox"* null)
  br label %160

160:                                              ; preds = %106, %159, %89
  %161 = icmp ne %"class.blink::ComputedStyle"* %2, null
  %162 = and i1 %161, %26
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  tail call void @_ZN5blink15LayoutBlockFlow44CreateOrDestroyMultiColumnFlowThreadIfNeededEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::ComputedStyle"* %2)
  br label %164

164:                                              ; preds = %160, %163
  br i1 %161, label %165, label %178

165:                                              ; preds = %164
  %166 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %167 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %166, align 8
  %168 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %167, null
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %167, i64 0, i32 3
  %171 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %170, align 8
  %172 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %175 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %174, align 8
  %176 = tail call zeroext i1 @_ZNK5blink13ComputedStyle20ColumnRuleEquivalentERKS0_(%"class.blink::ComputedStyle"* %175, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #16
  br i1 %176, label %178, label %177

177:                                              ; preds = %173
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread24ColumnRuleStyleDidChangeEv(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %171) #16
  br label %178

178:                                              ; preds = %165, %177, %173, %169, %164
  ret void
}

declare void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.3354, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #16
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !44

23:                                               ; preds = %19
  %24 = bitcast %class.anon.3354* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #16
  %25 = getelementptr inbounds %class.anon.3354, %class.anon.3354* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.3354, %class.anon.3354* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), %class.anon.3354* nonnull dereferenceable(16) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #16
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #16
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #16
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow19HasOverhangingFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::LayoutBox"*) local_unnamed_addr #8 align 2 {
  %3 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %129, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %129, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %12, align 8
  %14 = icmp eq %"class.WTF::MallocedListHashSetNode"** %13, null
  %15 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  br i1 %14, label %76, label %17

17:                                               ; preds = %11
  %18 = add i32 %16, -1
  %19 = zext i32 %18 to i64
  %20 = shl i64 %3, 32
  %21 = xor i64 %20, -1
  %22 = add i64 %21, %3
  %23 = lshr i64 %22, 22
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 13
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 8
  %29 = xor i64 %28, %27
  %30 = mul i64 %29, 9
  %31 = lshr i64 %30, 15
  %32 = xor i64 %31, %30
  %33 = shl i64 %32, 27
  %34 = xor i64 %33, -1
  %35 = add i64 %32, %34
  %36 = lshr i64 %35, 31
  %37 = xor i64 %36, %35
  %38 = trunc i64 %37 to i32
  %39 = and i32 %18, %38
  %40 = zext i32 %39 to i64
  %41 = xor i32 %38, -1
  %42 = lshr i32 %38, 23
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %66, %17
  %55 = phi i64 [ 0, %17 ], [ %68, %66 ]
  %56 = phi i64 [ %40, %17 ], [ %70, %66 ]
  %57 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %13, i64 %56
  %58 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %57, align 8
  %59 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %58 to i64
  switch i64 %59, label %60 [
    i64 0, label %76
    i64 -1, label %66
  ]

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %62, i64 0, i32 0
  %64 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %65 = icmp eq %"class.blink::LayoutBox"* %64, %1
  br i1 %65, label %71, label %66

66:                                               ; preds = %60, %54
  %67 = icmp eq i64 %55, 0
  %68 = select i1 %67, i64 %53, i64 %55
  %69 = add i64 %68, %56
  %70 = and i64 %69, %19
  br label %54

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %13, i64 %56
  %73 = icmp eq %"class.WTF::MallocedListHashSetNode"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = zext i32 %16 to i64
  br label %79

76:                                               ; preds = %54, %71, %11
  %77 = zext i32 %16 to i64
  %78 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %13, i64 %77
  br label %79

79:                                               ; preds = %76, %74
  %80 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %81 = phi %"class.WTF::MallocedListHashSetNode"** [ %72, %74 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %13, i64 %80
  %83 = icmp eq %"class.WTF::MallocedListHashSetNode"** %81, %82
  br i1 %83, label %129, label %84

84:                                               ; preds = %79
  %85 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %81, align 8
  %86 = icmp eq %"class.WTF::MallocedListHashSetNode"* %85, null
  br i1 %86, label %129, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %91 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %90 to i96*
  %92 = load i96, i96* %91, align 4
  %93 = trunc i96 %92 to i32
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %95, label %103

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %89, i64 0, i32 2, i32 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %89, i64 0, i32 2, i32 1, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %99) #16
  br label %111

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %89, i64 0, i32 2, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %89, i64 0, i32 2, i32 1, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %107, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %107) #16
  br label %111

111:                                              ; preds = %95, %103
  %112 = phi { i32, i1 } [ %102, %95 ], [ %110, %103 ]
  %113 = phi i32 [ %101, %95 ], [ %109, %103 ]
  %114 = extractvalue { i32, i1 } %112, 1
  %115 = extractvalue { i32, i1 } %112, 0
  %116 = select i1 %114, i32 %113, i32 %115
  %117 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = and i160 %121, 15211807202738752817960438464512
  %123 = icmp eq i160 %122, 0
  %124 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %125 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %126 = select i1 %123, i32* %124, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %116, %127
  br label %129

129:                                              ; preds = %2, %79, %111, %84, %7
  %130 = phi i1 [ false, %7 ], [ false, %2 ], [ %128, %111 ], [ false, %84 ], [ false, %79 ]
  ret i1 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow44CreateOrDestroyMultiColumnFlowThreadIfNeededEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, %"class.blink::ComputedStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %11, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  %14 = and i8 %13, 3
  %15 = icmp ne i8 %14, 3
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %16, align 8
  %18 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %17, i64 0, i32 3
  %21 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %21, null
  br i1 %22, label %39, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %29, i64 0, i32 2
  %31 = load i8, i8* %30, align 4
  %32 = and i8 %31, 3
  %33 = icmp ne i8 %32, 3
  %34 = xor i1 %15, %33
  br i1 %34, label %35, label %216

35:                                               ; preds = %23
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread18EvacuateAndDestroyEv(%"class.blink::LayoutMultiColumnFlowThread"* nonnull %21) #16
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %37 = load i16, i16* %36, align 8
  %38 = or i16 %37, 512
  store i16 %38, i16* %36, align 8
  br label %216

39:                                               ; preds = %2, %19
  br i1 %15, label %40, label %216

40:                                               ; preds = %39
  %41 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %3, i32 14) #16
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %3, i32 29) #16
  br i1 %50, label %51, label %73

51:                                               ; preds = %40, %46
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %51, %55
  %56 = phi %"class.blink::LayoutObject"* [ %58, %55 ], [ %3, %51 ]
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 7
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 6, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %55, label %62

62:                                               ; preds = %55, %51
  %63 = phi %"class.blink::Node"* [ %53, %51 ], [ %60, %55 ]
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::Document"*, %"class.blink::Document"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %67, i64 0, i32 2
  %69 = bitcast %"class.blink::UseCounter"* %68 to void (%"class.blink::UseCounter"*, i32)***
  %70 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %70, i64 3
  %72 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %71, align 8
  tail call void %72(%"class.blink::UseCounter"* %68, i32 3910) #16
  br label %73

73:                                               ; preds = %62, %46
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %74, i64 92
  %76 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.blink::LayoutObject"* %3, i32 40) #16
  br i1 %77, label %216, label %78

78:                                               ; preds = %73
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, i64 92
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.blink::LayoutObject"* %3, i32 6) #16
  br i1 %82, label %216, label %83

83:                                               ; preds = %78
  %84 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %85 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, i64 92
  %86 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.blink::LayoutObject"* %3, i32 25) #16
  br i1 %87, label %216, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %90 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %89 to i96*
  %91 = load i96, i96* %90, align 4
  %92 = and i96 %91, 16777216
  %93 = icmp eq i96 %92, 0
  br i1 %93, label %94, label %110

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %110, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 12
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %98
  %104 = bitcast %"class.blink::Node"* %96 to %"class.blink::Element"*
  %105 = bitcast %"class.blink::Node"* %96 to i1 (%"class.blink::Element"*)***
  %106 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %106, i64 124
  %108 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %107, align 8
  %109 = tail call zeroext i1 %108(%"class.blink::Element"* nonnull %104) #16
  br i1 %109, label %216, label %110

110:                                              ; preds = %98, %88, %94, %103
  %111 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %112 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, i64 92
  %113 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, align 8
  %114 = tail call zeroext i1 %113(%"class.blink::LayoutObject"* %3, i32 24) #16
  br i1 %114, label %216, label %115

115:                                              ; preds = %110
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, i64 92
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* %3, i32 17) #16
  br i1 %119, label %216, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %121, align 8
  %123 = icmp eq %"class.blink::Node"* %122, null
  br i1 %123, label %124, label %131

124:                                              ; preds = %120, %124
  %125 = phi %"class.blink::LayoutObject"* [ %127, %124 ], [ %3, %120 ]
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %125, i64 0, i32 7
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %127, i64 0, i32 6, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %124, label %131

131:                                              ; preds = %124, %120
  %132 = phi %"class.blink::Node"* [ %122, %120 ], [ %129, %124 ]
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %138 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E, align 1, !range !21
  %139 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E, align 1
  %140 = or i8 %139, %138
  %141 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E, align 1
  %142 = or i8 %140, %141
  %143 = icmp eq i8 %142, 0
  %144 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  br i1 %143, label %180, label %145, !prof !44

145:                                              ; preds = %131
  %146 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %144, align 8
  %147 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %146, i64 28
  %148 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %147, align 8
  %149 = tail call zeroext i1 %148(%"class.blink::LayoutObject"* %3) #16
  br i1 %149, label %154, label %150

150:                                              ; preds = %145
  %151 = load i96, i96* %90, align 4
  %152 = and i96 %151, 335544320
  %153 = icmp eq i96 %152, 268435456
  br i1 %153, label %154, label %180

154:                                              ; preds = %150, %145
  %155 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %155, i64 92
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %156, align 8
  %158 = tail call zeroext i1 %157(%"class.blink::LayoutObject"* %3, i32 39) #16
  br i1 %158, label %180, label %159

159:                                              ; preds = %154
  %160 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %161 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %160, i64 92
  %162 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %161, align 8
  %163 = tail call zeroext i1 %162(%"class.blink::LayoutObject"* %3, i32 47) #16
  br i1 %163, label %180, label %164

164:                                              ; preds = %159
  %165 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %166 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %165, i64 92
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.blink::LayoutObject"* %3, i32 51) #16
  br i1 %168, label %179, label %169

169:                                              ; preds = %164
  %170 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %171 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %170, i64 92
  %172 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, align 8
  %173 = tail call zeroext i1 %172(%"class.blink::LayoutObject"* %3, i32 34) #16
  br i1 %173, label %179, label %174

174:                                              ; preds = %169
  %175 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %176 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %175, i64 92
  %177 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %176, align 8
  %178 = tail call zeroext i1 %177(%"class.blink::LayoutObject"* %3, i32 35) #16
  br i1 %178, label %179, label %180

179:                                              ; preds = %174, %169, %164
  br label %180

180:                                              ; preds = %131, %150, %154, %159, %174, %179
  %181 = phi i1 [ true, %150 ], [ true, %154 ], [ true, %159 ], [ false, %174 ], [ true, %179 ], [ true, %131 ]
  %182 = tail call %"class.blink::LayoutMultiColumnFlowThread"* @_ZN5blink27LayoutMultiColumnFlowThread15CreateAnonymousERNS_8DocumentERKNS_13ComputedStyleEb(%"class.blink::Document"* dereferenceable(2848) %136, %"class.blink::ComputedStyle"* dereferenceable(104) %137, i1 zeroext %181) #16
  %183 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %185 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %185, i64 16
  %187 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %186, align 8
  tail call void %187(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutObject"* %183, %"class.blink::LayoutObject"* null) #16
  %188 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 2
  %189 = load i16, i16* %188, align 8
  %190 = or i16 %189, 512
  store i16 %190, i16* %188, align 8
  %191 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %144, align 8
  %192 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %191, i64 28
  %193 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %192, align 8
  %194 = tail call zeroext i1 %193(%"class.blink::LayoutObject"* %3) #16
  br i1 %194, label %195, label %200

195:                                              ; preds = %180
  %196 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %197 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %196 to i96*
  %198 = load i96, i96* %197, align 4
  %199 = and i96 %198, -17592186044417
  store i96 %199, i96* %197, align 4
  br label %200

200:                                              ; preds = %195, %180
  tail call void @_ZN5blink27LayoutMultiColumnFlowThread8PopulateEv(%"class.blink::LayoutMultiColumnFlowThread"* %182) #16
  %201 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %202 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %201, i64 0, i32 0
  %203 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %202, align 8
  %204 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %203, null
  br i1 %204, label %205, label %213

205:                                              ; preds = %200
  %206 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %207 = bitcast i8* %206 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %207, %"class.blink::LayoutBlockFlow"* %0) #16
  %208 = getelementptr inbounds i8, i8* %206, i64 -4
  %209 = bitcast i8* %208 to i16*
  %210 = load atomic i16, i16* %209 monotonic, align 2
  %211 = or i16 %210, 1
  store atomic i16 %211, i16* %209 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %201, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %207) #16
  %212 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %202, align 8
  br label %213

213:                                              ; preds = %200, %205
  %214 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %212, %205 ], [ %203, %200 ]
  %215 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %214, i64 0, i32 3
  store %"class.blink::LayoutMultiColumnFlowThread"* %182, %"class.blink::LayoutMultiColumnFlowThread"** %215, align 8
  br label %216

216:                                              ; preds = %78, %213, %103, %110, %115, %83, %73, %39, %23, %35
  ret void
}

declare zeroext i1 @_ZNK5blink13ComputedStyle20ColumnRuleEquivalentERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink27LayoutMultiColumnFlowThread24ColumnRuleStyleDidChangeEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, i1 zeroext, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow31SetStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* nocapture readnone, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %4, align 8
  %6 = icmp eq %"struct.blink::FragmentData::RareData"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %8, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::PaintLayer"* [ %9, %7 ], [ null, %3 ]
  %12 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %11, i64 0, i32 10, i32 0
  store i32 %2, i32* %12, align 8
  ret void
}

declare i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #16
  %4 = icmp eq %"class.blink::LayoutBoxModelObject"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 134217728
  %10 = icmp eq i96 %9, 0
  %11 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutInline"*
  %12 = select i1 %10, %"class.blink::LayoutInline"* null, %"class.blink::LayoutInline"* %11
  ret %"class.blink::LayoutInline"* %12

13:                                               ; preds = %1
  ret %"class.blink::LayoutInline"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %6, i64 0, i32 3
  %10 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %10, null
  br i1 %11, label %31, label %16

12:                                               ; preds = %24
  %13 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %27, i64 0, i32 3
  %14 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %8, %12
  %17 = phi %"class.blink::LayoutMultiColumnFlowThread"* [ %14, %12 ], [ %10, %8 ]
  %18 = phi %"class.blink::LayoutObject"* [ %25, %12 ], [ %2, %8 ]
  %19 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = icmp eq %"class.blink::LayoutObject"* %19, %18
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  br label %24

24:                                               ; preds = %16, %21
  %25 = phi %"class.blink::LayoutObject"* [ %23, %21 ], [ %18, %16 ]
  %26 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %17, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %26, align 8
  %28 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %27, null
  br i1 %28, label %29, label %12

29:                                               ; preds = %12, %24
  %30 = getelementptr inbounds %"class.blink::LayoutMultiColumnFlowThread", %"class.blink::LayoutMultiColumnFlowThread"* %17, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %29, %8, %3
  %32 = phi %"class.blink::LayoutBlockFlow"* [ %0, %3 ], [ %0, %8 ], [ %30, %29 ]
  %33 = phi %"class.blink::LayoutObject"* [ %2, %3 ], [ %2, %8 ], [ %25, %29 ]
  %34 = phi %"class.blink::LayoutObject"* [ %4, %3 ], [ %4, %8 ], [ %19, %29 ]
  %35 = icmp ne %"class.blink::LayoutObject"* %33, null
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 7
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %34
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::LayoutBlockFlow"* %32 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock24AddChildBeforeDescendantEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %41, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* nonnull %33) #16
  br label %251

42:                                               ; preds = %36, %31
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %44 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %43 to i96*
  %45 = load i96, i96* %44, align 4
  %46 = and i96 %45, 134217728
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %42
  %49 = and i96 %45, 8388608
  %50 = icmp eq i96 %49, 0
  %51 = and i96 %45, 113336795588871485128704
  %52 = icmp ne i96 %51, 75557863725914323419136
  %53 = and i1 %50, %52
  br label %54

54:                                               ; preds = %42, %48
  %55 = phi i1 [ false, %42 ], [ %53, %48 ]
  %56 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  %58 = load i96, i96* %57, align 4
  %59 = and i96 %58, 17592186044416
  %60 = icmp eq i96 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  br i1 %55, label %62, label %193

62:                                               ; preds = %61
  tail call void @_ZN5blink15LayoutBlockFlow21MakeChildrenNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"* %32, %"class.blink::LayoutObject"* %33)
  br i1 %35, label %63, label %193

63:                                               ; preds = %62
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 7
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, %34
  %67 = select i1 %66, %"class.blink::LayoutObject"* %33, %"class.blink::LayoutObject"* %65
  br label %193

68:                                               ; preds = %54
  br i1 %55, label %193, label %69

69:                                               ; preds = %68
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 8
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %32, i64 0, i32 0, i32 1, i32 1
  %72 = select i1 %35, %"class.blink::LayoutObject"** %70, %"class.blink::LayoutObject"** %71
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = icmp eq %"class.blink::LayoutObject"* %73, null
  br i1 %74, label %115, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 4
  %77 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %76 to i96*
  %78 = load i96, i96* %77, align 4
  %79 = and i96 %78, 16777216
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %115, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 5, i32 0
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8
  %87 = lshr i160 %86, 32
  %88 = trunc i160 %87 to i32
  %89 = and i32 %88, 31
  switch i32 %89, label %115 [
    i32 1, label %90
    i32 14, label %90
  ]

90:                                               ; preds = %81, %81
  %91 = and i160 %86, 2113929216
  %92 = icmp eq i160 %91, 0
  br i1 %92, label %93, label %115

93:                                               ; preds = %90
  %94 = bitcast %"class.blink::LayoutObject"* %73 to i1 (%"class.blink::LayoutObject"*)***
  %95 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %95, i64 23
  %97 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* nonnull %73) #16
  br i1 %98, label %99, label %115

99:                                               ; preds = %93
  %100 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %94, align 8
  %101 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, i64 25
  %102 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.blink::LayoutObject"* nonnull %73) #16
  br i1 %103, label %115, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.blink::LayoutObject"* %73 to i1 (%"class.blink::LayoutObject"*, i32)***
  %106 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %105, align 8
  %107 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %106, i64 92
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %107, align 8
  %109 = tail call zeroext i1 %108(%"class.blink::LayoutObject"* nonnull %73, i32 20) #16
  br i1 %109, label %115, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.blink::LayoutObject"* %73 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %112 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %112, i64 16
  %114 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %113, align 8
  tail call void %114(%"class.blink::LayoutObject"* nonnull %73, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #16
  br label %251

115:                                              ; preds = %104, %81, %75, %90, %93, %99, %69
  %116 = load i96, i96* %44, align 4
  %117 = and i96 %116, 134217728
  %118 = icmp eq i96 %117, 0
  br i1 %118, label %193, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %120, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, i64 92
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.blink::LayoutObject"* %1, i32 31) #16
  br i1 %124, label %193, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %126, i32 1) #16
  %128 = bitcast %"class.blink::LayoutBlock"* %127 to %"class.blink::LayoutBlockFlow"*
  %129 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %34, %"class.blink::LayoutObject"* %129, %"class.blink::LayoutObject"* %33) #16
  %130 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 0, i32 0, i32 0, i32 7
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %130, align 8
  %132 = icmp eq %"class.blink::LayoutObject"* %131, null
  br i1 %132, label %188, label %133

133:                                              ; preds = %125
  %134 = bitcast %"class.blink::LayoutObject"* %131 to i1 (%"class.blink::LayoutObject"*)***
  %135 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %134, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %135, i64 24
  %137 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %136, align 8
  %138 = tail call zeroext i1 %137(%"class.blink::LayoutObject"* nonnull %131) #16
  br i1 %138, label %139, label %188

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 0, i32 0, i32 0, i32 4
  %141 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %140 to i96*
  %142 = load i96, i96* %141, align 4
  %143 = and i96 %142, 295147905179352825856
  %144 = icmp eq i96 %143, 0
  br i1 %144, label %145, label %188

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %146, align 8
  %148 = icmp eq %"class.blink::Node"* %147, null
  br i1 %148, label %149, label %156

149:                                              ; preds = %145, %149
  %150 = phi %"class.blink::LayoutObject"* [ %152, %149 ], [ %129, %145 ]
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %150, i64 0, i32 7
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 6, i32 0, i32 0
  %154 = load %"class.blink::Node"*, %"class.blink::Node"** %153, align 8
  %155 = icmp eq %"class.blink::Node"* %154, null
  br i1 %155, label %149, label %156

156:                                              ; preds = %149, %145
  %157 = phi %"class.blink::Node"* [ %147, %145 ], [ %154, %149 ]
  %158 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %157, i64 0, i32 3, i32 0, i32 0
  %159 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %159, i64 0, i32 2, i32 0, i32 0
  %161 = load %"class.blink::Document"*, %"class.blink::Document"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %161, i64 0, i32 5, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = icmp sgt i32 %163, 19
  br i1 %164, label %188, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 0, i32 0, i32 0, i32 8
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %166, align 8
  %168 = icmp eq %"class.blink::LayoutObject"* %167, null
  br i1 %168, label %188, label %169

169:                                              ; preds = %165
  %170 = bitcast %"class.blink::LayoutObject"* %131 to %"class.blink::LayoutBoxModelObject"*
  %171 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %127, i64 0, i32 1, i32 0
  br label %173

173:                                              ; preds = %183, %169
  %174 = phi %"class.blink::LayoutObject"* [ %167, %169 ], [ %185, %183 ]
  %175 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %174, i64 0, i32 4
  %176 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %175 to i96*
  %177 = load i96, i96* %176, align 4
  %178 = and i96 %177, 8388608
  %179 = icmp ne i96 %178, 0
  %180 = and i96 %177, 113336795588871485128704
  %181 = icmp eq i96 %180, 75557863725914323419136
  %182 = or i1 %181, %179
  br i1 %182, label %183, label %188

183:                                              ; preds = %173
  %184 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %174, i64 0, i32 8
  %185 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %184, align 8
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %172, align 8
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* nonnull %170, %"class.blink::LayoutBoxModelObject"* %171, %"class.blink::LayoutObject"* nonnull %174, %"class.blink::LayoutObject"* %186, i1 zeroext false) #16
  %187 = icmp eq %"class.blink::LayoutObject"* %185, null
  br i1 %187, label %188, label %173

188:                                              ; preds = %173, %183, %125, %133, %139, %156, %165
  %189 = bitcast %"class.blink::LayoutBlock"* %127 to void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %190 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %190, i64 16
  %192 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %191, align 8
  tail call void %192(%"class.blink::LayoutBlockFlow"* %128, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #16
  tail call void @_ZN5blink15LayoutBlockFlow45ReparentSubsequentFloatingOrOutOfFlowSiblingsEv(%"class.blink::LayoutBlockFlow"* %128)
  br label %251

193:                                              ; preds = %115, %63, %119, %68, %61, %62
  %194 = phi i1 [ true, %62 ], [ false, %61 ], [ false, %68 ], [ false, %115 ], [ false, %119 ], [ true, %63 ]
  %195 = phi %"class.blink::LayoutObject"* [ null, %62 ], [ %33, %61 ], [ %33, %68 ], [ %33, %115 ], [ %33, %119 ], [ %67, %63 ]
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %34, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %195) #16
  %196 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %196, align 8
  %198 = icmp eq %"class.blink::LayoutObject"* %197, null
  br i1 %198, label %207, label %199

199:                                              ; preds = %193
  %200 = bitcast %"class.blink::LayoutObject"* %197 to i1 (%"class.blink::LayoutObject"*)***
  %201 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %200, align 8
  %202 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %201, i64 23
  %203 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %202, align 8
  %204 = tail call zeroext i1 %203(%"class.blink::LayoutObject"* nonnull %197) #16
  %205 = bitcast %"class.blink::LayoutObject"* %197 to %"class.blink::LayoutBlock"*
  %206 = select i1 %204, %"class.blink::LayoutBlock"* %205, %"class.blink::LayoutBlock"* null
  br label %207

207:                                              ; preds = %193, %199
  %208 = phi %"class.blink::LayoutBlock"* [ %206, %199 ], [ null, %193 ]
  br i1 %194, label %209, label %251

209:                                              ; preds = %207
  %210 = load i96, i96* %57, align 4
  %211 = and i96 %210, 16777216
  %212 = icmp eq i96 %211, 0
  br i1 %212, label %251, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %215 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %215, i64 0, i32 0, i32 9
  %217 = bitcast [20 x i8]* %216 to i160*
  %218 = load i160, i160* %217, align 8
  %219 = lshr i160 %218, 32
  %220 = trunc i160 %219 to i32
  %221 = and i32 %220, 31
  switch i32 %221, label %251 [
    i32 1, label %222
    i32 14, label %222
  ]

222:                                              ; preds = %213, %213
  %223 = and i160 %218, 2113929216
  %224 = icmp eq i160 %223, 0
  br i1 %224, label %225, label %251

225:                                              ; preds = %222
  %226 = bitcast %"class.blink::LayoutBlockFlow"* %32 to i1 (%"class.blink::LayoutObject"*)***
  %227 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %226, align 8
  %228 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %227, i64 23
  %229 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %228, align 8
  %230 = tail call zeroext i1 %229(%"class.blink::LayoutObject"* %34) #16
  br i1 %230, label %231, label %251

231:                                              ; preds = %225
  %232 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %226, align 8
  %233 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %232, i64 25
  %234 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %233, align 8
  %235 = tail call zeroext i1 %234(%"class.blink::LayoutObject"* %34) #16
  br i1 %235, label %251, label %236

236:                                              ; preds = %231
  %237 = bitcast %"class.blink::LayoutBlockFlow"* %32 to i1 (%"class.blink::LayoutObject"*, i32)***
  %238 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %237, align 8
  %239 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %238, i64 92
  %240 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %239, align 8
  %241 = tail call zeroext i1 %240(%"class.blink::LayoutObject"* %34, i32 20) #16
  %242 = xor i1 %241, true
  %243 = icmp ne %"class.blink::LayoutBlock"* %208, null
  %244 = and i1 %243, %242
  br i1 %244, label %245, label %251

245:                                              ; preds = %236
  %246 = bitcast %"class.blink::LayoutBlockFlow"* %32 to %"class.blink::LayoutBlock"*
  %247 = bitcast %"class.blink::LayoutBlock"* %208 to void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)***
  %248 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)** %248, i64 210
  %250 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)** %249, align 8
  tail call void %250(%"class.blink::LayoutBlock"* nonnull %208, %"class.blink::LayoutBlock"* %246) #16
  br label %251

251:                                              ; preds = %213, %209, %222, %225, %231, %110, %188, %245, %236, %207, %40
  ret void
}

declare void @_ZN5blink11LayoutBlock24AddChildBeforeDescendantEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21MakeChildrenNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, -17592186044417
  store i96 %7, i96* %5, align 4
  %8 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlockFlow"*)***
  %9 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %9, i64 215
  %11 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %10, align 8
  tail call void %11(%"class.blink::LayoutBlockFlow"* %0) #16
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %111, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %16, align 8
  %18 = icmp eq %"class.blink::FloatingObjects"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %17, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN5blink15FloatingObjects24ClearLineBoxTreePointersEv(%"class.blink::FloatingObjects"* nonnull %17) #16
  br label %24

24:                                               ; preds = %23, %19, %15
  %25 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  tail call void @_ZN5blink11LineBoxList17DeleteLineBoxTreeEv(%"class.blink::LineBoxList"* %25) #16
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  br label %29

29:                                               ; preds = %24, %100
  %30 = phi %"class.blink::LayoutObject"* [ %13, %24 ], [ %102, %100 ]
  %31 = bitcast %"class.blink::LayoutObject"* %30 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %30, i32 31) #16
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 9
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  br label %39

39:                                               ; preds = %36, %29
  %40 = phi %"class.blink::LayoutObject"* [ %30, %29 ], [ %38, %36 ]
  br label %41

41:                                               ; preds = %39, %92
  %42 = phi %"class.blink::LayoutObject"* [ %95, %92 ], [ %40, %39 ]
  %43 = icmp eq %"class.blink::LayoutObject"* %42, null
  br i1 %43, label %110, label %44

44:                                               ; preds = %41, %57
  %45 = phi %"class.blink::LayoutObject"* [ %59, %57 ], [ %42, %41 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 134217728
  %50 = icmp eq i96 %49, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %44
  %52 = and i96 %48, 8388608
  %53 = icmp eq i96 %52, 0
  %54 = and i96 %48, 113336795588871485128704
  %55 = icmp ne i96 %54, 75557863725914323419136
  %56 = and i1 %53, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 9
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutObject"* %59, null
  br i1 %60, label %110, label %44

61:                                               ; preds = %51, %44
  %62 = lshr i96 %48, 27
  %63 = trunc i96 %62 to i8
  %64 = and i8 %63, 1
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 9
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %65, align 8
  %67 = icmp eq %"class.blink::LayoutObject"* %66, null
  br i1 %67, label %92, label %68

68:                                               ; preds = %61, %87
  %69 = phi %"class.blink::LayoutObject"* [ %70, %87 ], [ %45, %61 ]
  %70 = phi %"class.blink::LayoutObject"* [ %90, %87 ], [ %66, %61 ]
  %71 = phi i8 [ %88, %87 ], [ %64, %61 ]
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 134217728
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %77, label %85

77:                                               ; preds = %68
  %78 = and i96 %74, 8388608
  %79 = icmp eq i96 %78, 0
  %80 = and i96 %74, 113336795588871485128704
  %81 = icmp ne i96 %80, 75557863725914323419136
  %82 = and i1 %79, %81
  %83 = icmp eq %"class.blink::LayoutObject"* %70, %1
  %84 = or i1 %83, %82
  br i1 %84, label %92, label %87

85:                                               ; preds = %68
  %86 = icmp eq %"class.blink::LayoutObject"* %70, %1
  br i1 %86, label %92, label %87

87:                                               ; preds = %85, %77
  %88 = select i1 %76, i8 %71, i8 1
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 9
  %90 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %89, align 8
  %91 = icmp eq %"class.blink::LayoutObject"* %90, null
  br i1 %91, label %92, label %68

92:                                               ; preds = %87, %85, %77, %61
  %93 = phi %"class.blink::LayoutObject"* [ %45, %61 ], [ %69, %85 ], [ %70, %87 ], [ %69, %77 ]
  %94 = phi i8 [ %64, %61 ], [ %71, %85 ], [ %88, %87 ], [ %71, %77 ]
  %95 = phi %"class.blink::LayoutObject"* [ null, %61 ], [ %1, %85 ], [ null, %87 ], [ %70, %77 ]
  %96 = and i8 %94, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %41, label %98

98:                                               ; preds = %92
  %99 = icmp eq %"class.blink::LayoutObject"* %45, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 9
  %102 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %101, align 8
  %103 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %3, i32 1) #16
  %104 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %26, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %104, %"class.blink::LayoutObject"* nonnull %45, i1 zeroext true) #16
  %105 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %103, i64 0, i32 0, i32 0
  %106 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %28, align 8
  %107 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %106, i64 144
  %108 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %107, align 8
  tail call void %108(%"class.blink::LayoutBoxModelObject"* %27, %"class.blink::LayoutBoxModelObject"* %105, %"class.blink::LayoutObject"* nonnull %45, %"class.blink::LayoutObject"* %102, %"class.blink::LayoutObject"* null, i1 zeroext false) #16
  %109 = icmp eq %"class.blink::LayoutObject"* %102, null
  br i1 %109, label %110, label %29

110:                                              ; preds = %100, %98, %41, %57
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 3) #16
  br label %111

111:                                              ; preds = %2, %110
  ret void
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow44ReparentPrecedingFloatingOrOutOfFlowSiblingsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::LayoutObject"* %4 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 24
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %4) #16
  br i1 %11, label %12, label %61

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 295147905179352825856
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %61

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %18, %22
  %23 = phi %"class.blink::LayoutObject"* [ %25, %22 ], [ %2, %18 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %22, label %29

29:                                               ; preds = %22, %18
  %30 = phi %"class.blink::Node"* [ %20, %18 ], [ %27, %22 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 5, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 19
  br i1 %37, label %61, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::LayoutObject"* %4 to %"class.blink::LayoutBoxModelObject"*
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  br label %46

46:                                               ; preds = %42, %56
  %47 = phi %"class.blink::LayoutObject"* [ %40, %42 ], [ %58, %56 ]
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = and i96 %50, 8388608
  %52 = icmp ne i96 %51, 0
  %53 = and i96 %50, 113336795588871485128704
  %54 = icmp eq i96 %53, 75557863725914323419136
  %55 = or i1 %54, %52
  br i1 %55, label %56, label %61

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 8
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* nonnull %43, %"class.blink::LayoutBoxModelObject"* %44, %"class.blink::LayoutObject"* nonnull %47, %"class.blink::LayoutObject"* %59, i1 zeroext false) #16
  %60 = icmp eq %"class.blink::LayoutObject"* %58, null
  br i1 %60, label %61, label %46

61:                                               ; preds = %56, %46, %38, %12, %6, %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow45ReparentSubsequentFloatingOrOutOfFlowSiblingsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::LayoutObject"* %4 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 24
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %4) #16
  br i1 %11, label %12, label %71

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 295147905179352825856
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %71

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %18, %22
  %23 = phi %"class.blink::LayoutObject"* [ %25, %22 ], [ %2, %18 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %22, label %29

29:                                               ; preds = %22, %18
  %30 = phi %"class.blink::Node"* [ %20, %18 ], [ %27, %22 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 5, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 19
  br i1 %37, label %71, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %71, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::LayoutObject"* %4 to %"class.blink::LayoutBoxModelObject"*
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %42, %55
  %46 = phi %"class.blink::LayoutObject"* [ %40, %42 ], [ %57, %55 ]
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 4
  %48 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %47 to i96*
  %49 = load i96, i96* %48, align 4
  %50 = and i96 %49, 8388608
  %51 = icmp ne i96 %50, 0
  %52 = and i96 %49, 113336795588871485128704
  %53 = icmp eq i96 %52, 75557863725914323419136
  %54 = or i1 %53, %51
  br i1 %54, label %55, label %59

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 9
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* nonnull %43, %"class.blink::LayoutBoxModelObject"* %44, %"class.blink::LayoutObject"* nonnull %46, %"class.blink::LayoutObject"* null, i1 zeroext false) #16
  %58 = icmp eq %"class.blink::LayoutObject"* %57, null
  br i1 %58, label %59, label %45

59:                                               ; preds = %45, %55
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::LayoutObject"* %60 to i1 (%"class.blink::LayoutObject"*)***
  %64 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %64, i64 24
  %66 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* nonnull %60) #16
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBlockFlow"*
  %70 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow36MergeSiblingContiguousAnonymousBlockEPS0_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %69)
  br label %71

71:                                               ; preds = %38, %62, %12, %6, %1, %59, %68, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %2 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %2
  %15 = phi %"class.blink::Node"* [ %5, %2 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 5, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 19
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  tail call void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %1) #16
  br label %442

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 8
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 9
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = icmp ne %"class.blink::LayoutObject"* %26, null
  %30 = icmp ne %"class.blink::LayoutObject"* %28, null
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %208

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 134217728
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %38, label %208

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)***
  %40 = load %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)** %40, i64 43
  %42 = load %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)** %41, align 8
  %43 = tail call %"class.blink::LayoutBoxModelObject"* %42(%"class.blink::LayoutObject"* %1) #16
  %44 = icmp eq %"class.blink::LayoutBoxModelObject"* %43, null
  br i1 %44, label %45, label %208

45:                                               ; preds = %38
  %46 = bitcast %"class.blink::LayoutObject"* %26 to i1 (%"class.blink::LayoutObject"*)***
  %47 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %47, i64 24
  %49 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* nonnull %26) #16
  %51 = bitcast %"class.blink::LayoutObject"* %26 to %"class.blink::LayoutBlockFlow"*
  %52 = select i1 %50, %"class.blink::LayoutBlockFlow"* %51, %"class.blink::LayoutBlockFlow"* null
  %53 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*)***
  %54 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, i64 24
  %56 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* nonnull %28) #16
  %58 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutBlockFlow"*
  %59 = select i1 %57, %"class.blink::LayoutBlockFlow"* %58, %"class.blink::LayoutBlockFlow"* null
  %60 = icmp ne %"class.blink::LayoutBlockFlow"* %52, null
  %61 = and i1 %60, %57
  br i1 %61, label %62, label %64

62:                                               ; preds = %45
  %63 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow36MergeSiblingContiguousAnonymousBlockEPS0_(%"class.blink::LayoutBlockFlow"* nonnull %52, %"class.blink::LayoutBlockFlow"* nonnull %59)
  br i1 %63, label %208, label %64

64:                                               ; preds = %62, %45
  br i1 %60, label %65, label %135

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %68 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %67 to i96*
  %69 = load i96, i96* %68, align 4
  %70 = and i96 %69, 16777216
  %71 = icmp eq i96 %70, 0
  br i1 %71, label %135, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %74 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 9
  %76 = bitcast [20 x i8]* %75 to i160*
  %77 = load i160, i160* %76, align 8
  %78 = lshr i160 %77, 32
  %79 = trunc i160 %78 to i32
  %80 = and i32 %79, 31
  switch i32 %80, label %135 [
    i32 1, label %81
    i32 14, label %81
  ]

81:                                               ; preds = %72, %72
  %82 = and i160 %77, 2113929216
  %83 = icmp eq i160 %82, 0
  br i1 %83, label %84, label %135

84:                                               ; preds = %81
  %85 = bitcast %"class.blink::LayoutBlockFlow"* %52 to i1 (%"class.blink::LayoutObject"*)***
  %86 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %86, i64 23
  %88 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::LayoutObject"* %66) #16
  br i1 %89, label %90, label %135

90:                                               ; preds = %84
  %91 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %85, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, i64 25
  %93 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* %66) #16
  br i1 %94, label %135, label %95

95:                                               ; preds = %90
  %96 = bitcast %"class.blink::LayoutBlockFlow"* %52 to i1 (%"class.blink::LayoutObject"*, i32)***
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, i64 92
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.blink::LayoutObject"* %66, i32 20) #16
  br i1 %100, label %135, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %52, i64 0, i32 0, i32 0, i32 0
  %103 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %102) #16
  %104 = icmp eq %"class.blink::LayoutBoxModelObject"* %103, null
  br i1 %104, label %105, label %135

105:                                              ; preds = %101
  %106 = load i96, i96* %68, align 4
  %107 = and i96 %106, 295147905179352825856
  %108 = icmp eq i96 %107, 0
  br i1 %108, label %109, label %135

109:                                              ; preds = %105
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %111 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, i64 92
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.blink::LayoutObject"* %66, i32 42) #16
  br i1 %113, label %135, label %114

114:                                              ; preds = %109
  %115 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, i64 92
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, align 8
  %118 = tail call zeroext i1 %117(%"class.blink::LayoutObject"* %66, i32 41) #16
  br i1 %118, label %135, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  br label %121

121:                                              ; preds = %119, %131
  %122 = phi %"class.blink::LayoutObject"* [ %28, %119 ], [ %133, %131 ]
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %122, i64 0, i32 4
  %124 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %123 to i96*
  %125 = load i96, i96* %124, align 4
  %126 = and i96 %125, 8388608
  %127 = icmp ne i96 %126, 0
  %128 = and i96 %125, 113336795588871485128704
  %129 = icmp eq i96 %128, 75557863725914323419136
  %130 = or i1 %129, %127
  br i1 %130, label %131, label %208

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %122, i64 0, i32 9
  %133 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %132, align 8
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* %120, %"class.blink::LayoutBoxModelObject"* %102, %"class.blink::LayoutObject"* nonnull %122, %"class.blink::LayoutObject"* null, i1 zeroext false) #16
  %134 = icmp eq %"class.blink::LayoutObject"* %133, null
  br i1 %134, label %208, label %121

135:                                              ; preds = %114, %95, %72, %65, %81, %84, %90, %101, %105, %109, %64
  br i1 %57, label %136, label %208

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %139 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %138 to i96*
  %140 = load i96, i96* %139, align 4
  %141 = and i96 %140, 16777216
  %142 = icmp eq i96 %141, 0
  br i1 %142, label %208, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %145 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8
  %149 = lshr i160 %148, 32
  %150 = trunc i160 %149 to i32
  %151 = and i32 %150, 31
  switch i32 %151, label %208 [
    i32 1, label %152
    i32 14, label %152
  ]

152:                                              ; preds = %143, %143
  %153 = and i160 %148, 2113929216
  %154 = icmp eq i160 %153, 0
  br i1 %154, label %155, label %208

155:                                              ; preds = %152
  %156 = bitcast %"class.blink::LayoutBlockFlow"* %59 to i1 (%"class.blink::LayoutObject"*)***
  %157 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %156, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %157, i64 23
  %159 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %158, align 8
  %160 = tail call zeroext i1 %159(%"class.blink::LayoutObject"* %137) #16
  br i1 %160, label %161, label %208

161:                                              ; preds = %155
  %162 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %156, align 8
  %163 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %162, i64 25
  %164 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %163, align 8
  %165 = tail call zeroext i1 %164(%"class.blink::LayoutObject"* %137) #16
  br i1 %165, label %208, label %166

166:                                              ; preds = %161
  %167 = bitcast %"class.blink::LayoutBlockFlow"* %59 to i1 (%"class.blink::LayoutObject"*, i32)***
  %168 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %167, align 8
  %169 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %168, i64 92
  %170 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %169, align 8
  %171 = tail call zeroext i1 %170(%"class.blink::LayoutObject"* %137, i32 20) #16
  br i1 %171, label %208, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 0, i32 0
  %174 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %173) #16
  %175 = icmp eq %"class.blink::LayoutBoxModelObject"* %174, null
  br i1 %175, label %176, label %208

176:                                              ; preds = %172
  %177 = load i96, i96* %139, align 4
  %178 = and i96 %177, 295147905179352825856
  %179 = icmp eq i96 %178, 0
  br i1 %179, label %180, label %208

180:                                              ; preds = %176
  %181 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %167, align 8
  %182 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %181, i64 92
  %183 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %182, align 8
  %184 = tail call zeroext i1 %183(%"class.blink::LayoutObject"* %137, i32 42) #16
  br i1 %184, label %208, label %185

185:                                              ; preds = %180
  %186 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %167, align 8
  %187 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %186, i64 92
  %188 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %187, align 8
  %189 = tail call zeroext i1 %188(%"class.blink::LayoutObject"* %137, i32 41) #16
  br i1 %189, label %208, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %59, i64 0, i32 0, i32 1, i32 0
  br label %193

193:                                              ; preds = %190, %203
  %194 = phi %"class.blink::LayoutObject"* [ %26, %190 ], [ %205, %203 ]
  %195 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %194, i64 0, i32 4
  %196 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %195 to i96*
  %197 = load i96, i96* %196, align 4
  %198 = and i96 %197, 8388608
  %199 = icmp ne i96 %198, 0
  %200 = and i96 %197, 113336795588871485128704
  %201 = icmp eq i96 %200, 75557863725914323419136
  %202 = or i1 %201, %199
  br i1 %202, label %203, label %208

203:                                              ; preds = %193
  %204 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %194, i64 0, i32 8
  %205 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %204, align 8
  %206 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %192, align 8
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* %191, %"class.blink::LayoutBoxModelObject"* %173, %"class.blink::LayoutObject"* nonnull %194, %"class.blink::LayoutObject"* %206, i1 zeroext false) #16
  %207 = icmp eq %"class.blink::LayoutObject"* %205, null
  br i1 %207, label %208, label %193

208:                                              ; preds = %131, %121, %203, %193, %185, %166, %32, %143, %136, %152, %155, %161, %172, %176, %180, %135, %62, %38, %24
  %209 = phi i1 [ false, %32 ], [ false, %38 ], [ false, %24 ], [ false, %185 ], [ false, %135 ], [ true, %62 ], [ false, %180 ], [ false, %176 ], [ false, %172 ], [ false, %166 ], [ false, %161 ], [ false, %155 ], [ false, %152 ], [ false, %136 ], [ false, %143 ], [ false, %193 ], [ false, %203 ], [ false, %121 ], [ false, %131 ]
  %210 = phi %"class.blink::LayoutObject"* [ %28, %32 ], [ %28, %38 ], [ %28, %24 ], [ %28, %185 ], [ %28, %135 ], [ null, %62 ], [ %28, %180 ], [ %28, %176 ], [ %28, %172 ], [ %28, %166 ], [ %28, %161 ], [ %28, %155 ], [ %28, %152 ], [ %28, %136 ], [ %28, %143 ], [ %28, %193 ], [ %28, %203 ], [ null, %131 ], [ %122, %121 ]
  %211 = phi %"class.blink::LayoutObject"* [ %26, %32 ], [ %26, %38 ], [ %26, %24 ], [ %26, %185 ], [ %26, %135 ], [ %26, %62 ], [ %26, %180 ], [ %26, %176 ], [ %26, %172 ], [ %26, %166 ], [ %26, %161 ], [ %26, %155 ], [ %26, %152 ], [ %26, %136 ], [ %26, %143 ], [ null, %203 ], [ %194, %193 ], [ %26, %121 ], [ %26, %131 ]
  tail call void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %1) #16
  %212 = icmp eq %"class.blink::LayoutObject"* %211, null
  %213 = select i1 %212, %"class.blink::LayoutObject"* %210, %"class.blink::LayoutObject"* %211
  %214 = icmp eq %"class.blink::LayoutObject"* %213, null
  br i1 %214, label %287, label %215

215:                                              ; preds = %208
  %216 = bitcast %"class.blink::LayoutObject"* %213 to i1 (%"class.blink::LayoutObject"*)***
  %217 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %216, align 8
  %218 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %217, i64 24
  %219 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %218, align 8
  %220 = tail call zeroext i1 %219(%"class.blink::LayoutObject"* nonnull %213) #16
  %221 = bitcast %"class.blink::LayoutObject"* %213 to %"class.blink::LayoutBlockFlow"*
  %222 = select i1 %220, %"class.blink::LayoutBlockFlow"* %221, %"class.blink::LayoutBlockFlow"* null
  br i1 %220, label %223, label %287

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %213, i64 0, i32 8
  %225 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %224, align 8
  %226 = icmp eq %"class.blink::LayoutObject"* %225, null
  br i1 %226, label %227, label %287

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %213, i64 0, i32 9
  %229 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %228, align 8
  %230 = icmp eq %"class.blink::LayoutObject"* %229, null
  br i1 %230, label %231, label %287

231:                                              ; preds = %227
  br i1 %209, label %286, label %232

232:                                              ; preds = %231
  %233 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %222, i64 0, i32 0, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %235 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %234 to i96*
  %236 = load i96, i96* %235, align 4
  %237 = and i96 %236, 16777216
  %238 = icmp eq i96 %237, 0
  br i1 %238, label %287, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %241 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %241, i64 0, i32 0, i32 9
  %243 = bitcast [20 x i8]* %242 to i160*
  %244 = load i160, i160* %243, align 8
  %245 = lshr i160 %244, 32
  %246 = trunc i160 %245 to i32
  %247 = and i32 %246, 31
  switch i32 %247, label %287 [
    i32 1, label %248
    i32 14, label %248
  ]

248:                                              ; preds = %239, %239
  %249 = and i160 %244, 2113929216
  %250 = icmp eq i160 %249, 0
  br i1 %250, label %251, label %287

251:                                              ; preds = %248
  %252 = bitcast %"class.blink::LayoutBlockFlow"* %222 to i1 (%"class.blink::LayoutObject"*)***
  %253 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %252, align 8
  %254 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %253, i64 23
  %255 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %254, align 8
  %256 = tail call zeroext i1 %255(%"class.blink::LayoutObject"* %233) #16
  br i1 %256, label %257, label %287

257:                                              ; preds = %251
  %258 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %252, align 8
  %259 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %258, i64 25
  %260 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %259, align 8
  %261 = tail call zeroext i1 %260(%"class.blink::LayoutObject"* %233) #16
  br i1 %261, label %287, label %262

262:                                              ; preds = %257
  %263 = bitcast %"class.blink::LayoutBlockFlow"* %222 to i1 (%"class.blink::LayoutObject"*, i32)***
  %264 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %263, align 8
  %265 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %264, i64 92
  %266 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %265, align 8
  %267 = tail call zeroext i1 %266(%"class.blink::LayoutObject"* %233, i32 20) #16
  br i1 %267, label %287, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %222, i64 0, i32 0, i32 0, i32 0
  %270 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %269) #16
  %271 = icmp eq %"class.blink::LayoutBoxModelObject"* %270, null
  br i1 %271, label %272, label %287

272:                                              ; preds = %268
  %273 = load i96, i96* %235, align 4
  %274 = and i96 %273, 295147905179352825856
  %275 = icmp eq i96 %274, 0
  br i1 %275, label %276, label %287

276:                                              ; preds = %272
  %277 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %263, align 8
  %278 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %277, i64 92
  %279 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %278, align 8
  %280 = tail call zeroext i1 %279(%"class.blink::LayoutObject"* %233, i32 42) #16
  br i1 %280, label %287, label %281

281:                                              ; preds = %276
  %282 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %263, align 8
  %283 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %282, i64 92
  %284 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %283, align 8
  %285 = tail call zeroext i1 %284(%"class.blink::LayoutObject"* %233, i32 41) #16
  br i1 %285, label %287, label %286

286:                                              ; preds = %281, %231
  tail call void @_ZN5blink15LayoutBlockFlow27CollapseAnonymousBlockChildEPS0_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* nonnull %222)
  br label %287

287:                                              ; preds = %281, %262, %239, %232, %248, %251, %257, %268, %272, %276, %208, %227, %223, %286, %215
  %288 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %289 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %288, align 8
  %290 = icmp eq %"class.blink::LayoutObject"* %289, null
  %291 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %292 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %291 to i96*
  %293 = load i96, i96* %292, align 4
  br i1 %290, label %294, label %397

294:                                              ; preds = %287
  %295 = and i96 %293, 17592186044416
  %296 = icmp eq i96 %295, 0
  br i1 %296, label %309, label %297

297:                                              ; preds = %294
  %298 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %299 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %298, align 8
  %300 = icmp eq %"class.blink::FloatingObjects"* %299, null
  br i1 %300, label %306, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %299, i64 0, i32 0, i32 0, i32 2
  %303 = load i32, i32* %302, align 4
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %306, label %305

305:                                              ; preds = %301
  tail call void @_ZN5blink15FloatingObjects24ClearLineBoxTreePointersEv(%"class.blink::FloatingObjects"* nonnull %299) #16
  br label %306

306:                                              ; preds = %297, %301, %305
  %307 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  tail call void @_ZN5blink11LineBoxList17DeleteLineBoxTreeEv(%"class.blink::LineBoxList"* %307) #16
  %308 = load i96, i96* %292, align 4
  br label %309

309:                                              ; preds = %294, %306
  %310 = phi i96 [ %293, %294 ], [ %308, %306 ]
  %311 = and i96 %310, 295147905179352825856
  %312 = icmp eq i96 %311, 0
  br i1 %312, label %313, label %442

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %315 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %314) #16
  %316 = icmp eq %"class.blink::LayoutBoxModelObject"* %315, null
  br i1 %316, label %442, label %317

317:                                              ; preds = %313
  %318 = load i96, i96* %292, align 4
  %319 = and i96 %318, 16777216
  %320 = icmp eq i96 %319, 0
  br i1 %320, label %442, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %323 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %323, i64 0, i32 0, i32 9
  %325 = bitcast [20 x i8]* %324 to i160*
  %326 = load i160, i160* %325, align 8
  %327 = lshr i160 %326, 32
  %328 = trunc i160 %327 to i32
  %329 = and i32 %328, 31
  switch i32 %329, label %442 [
    i32 1, label %330
    i32 14, label %330
  ]

330:                                              ; preds = %321, %321
  %331 = and i160 %326, 2113929216
  %332 = icmp eq i160 %331, 0
  br i1 %332, label %333, label %442

333:                                              ; preds = %330
  %334 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %335 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %334, align 8
  %336 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %335, i64 23
  %337 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %336, align 8
  %338 = tail call zeroext i1 %337(%"class.blink::LayoutObject"* %3) #16
  br i1 %338, label %339, label %442

339:                                              ; preds = %333
  %340 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %334, align 8
  %341 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %340, i64 25
  %342 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %341, align 8
  %343 = tail call zeroext i1 %342(%"class.blink::LayoutObject"* %3) #16
  br i1 %343, label %442, label %344

344:                                              ; preds = %339
  %345 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %346 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %345, align 8
  %347 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %346, i64 92
  %348 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %347, align 8
  %349 = tail call zeroext i1 %348(%"class.blink::LayoutObject"* %3, i32 20) #16
  br i1 %349, label %442, label %350

350:                                              ; preds = %344
  %351 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %352 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %351, i64 0, i32 0, i32 0, i32 0
  %353 = icmp eq %"class.blink::LayoutBlock"* %351, null
  br i1 %353, label %366, label %354

354:                                              ; preds = %350, %362
  %355 = phi %"class.blink::LayoutObject"* [ %364, %362 ], [ %352, %350 ]
  %356 = phi %"class.blink::LayoutBlock"* [ %363, %362 ], [ %351, %350 ]
  %357 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %356, i64 0, i32 0, i32 0, i32 0, i32 4
  %358 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %357 to i96*
  %359 = load i96, i96* %358, align 4
  %360 = and i96 %359, 16777216
  %361 = icmp eq i96 %360, 0
  br i1 %361, label %366, label %362

362:                                              ; preds = %354
  %363 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %355, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %364 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %363, i64 0, i32 0, i32 0, i32 0
  %365 = icmp eq %"class.blink::LayoutBlock"* %363, null
  br i1 %365, label %366, label %354

366:                                              ; preds = %362, %354, %350
  %367 = phi %"class.blink::LayoutObject"* [ %352, %350 ], [ %355, %354 ], [ %364, %362 ]
  %368 = icmp eq %"class.blink::LayoutBlockFlow"* %0, null
  br i1 %368, label %396, label %369

369:                                              ; preds = %366, %393
  %370 = phi %"class.blink::LayoutObject"* [ %394, %393 ], [ %3, %366 ]
  %371 = bitcast %"class.blink::LayoutObject"* %370 to %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)***
  %372 = load %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)*** %371, align 8
  %373 = getelementptr inbounds %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)** %372, i64 43
  %374 = load %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)** %373, align 8
  %375 = tail call %"class.blink::LayoutBoxModelObject"* %374(%"class.blink::LayoutObject"* nonnull %370) #16
  %376 = icmp eq %"class.blink::LayoutBoxModelObject"* %375, %314
  br i1 %376, label %377, label %393

377:                                              ; preds = %369
  %378 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %314) #16
  %379 = bitcast %"class.blink::LayoutObject"* %370 to i1 (%"class.blink::LayoutObject"*)***
  %380 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %379, align 8
  %381 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %380, i64 26
  %382 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %381, align 8
  %383 = tail call zeroext i1 %382(%"class.blink::LayoutObject"* nonnull %370) #16
  br i1 %383, label %384, label %386

384:                                              ; preds = %377
  %385 = bitcast %"class.blink::LayoutObject"* %370 to %"class.blink::LayoutBoxModelObject"*
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* nonnull %385, %"class.blink::LayoutBoxModelObject"* %378) #16
  br label %396

386:                                              ; preds = %377
  %387 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %379, align 8
  %388 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %387, i64 24
  %389 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %388, align 8
  %390 = tail call zeroext i1 %389(%"class.blink::LayoutObject"* nonnull %370) #16
  br i1 %390, label %391, label %396

391:                                              ; preds = %386
  %392 = bitcast %"class.blink::LayoutObject"* %370 to %"class.blink::LayoutBoxModelObject"*
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* nonnull %392, %"class.blink::LayoutBoxModelObject"* %378) #16
  br label %396

393:                                              ; preds = %369
  %394 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %370, %"class.blink::LayoutObject"* %367) #16
  %395 = icmp eq %"class.blink::LayoutObject"* %394, null
  br i1 %395, label %396, label %369

396:                                              ; preds = %393, %366, %386, %384, %391
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %314, %"class.blink::LayoutBoxModelObject"* null) #16
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %3) #16
  br label %442

397:                                              ; preds = %287
  %398 = and i96 %293, 295147905179352825856
  %399 = icmp eq i96 %398, 0
  br i1 %399, label %400, label %442

400:                                              ; preds = %397
  %401 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %402 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %401 to i96*
  %403 = load i96, i96* %402, align 4
  %404 = and i96 %403, 8388608
  %405 = icmp ne i96 %404, 0
  %406 = and i96 %403, 113336795588871485128704
  %407 = icmp eq i96 %406, 75557863725914323419136
  %408 = or i1 %407, %405
  br i1 %408, label %442, label %409

409:                                              ; preds = %400
  %410 = and i96 %403, 16777216
  %411 = icmp eq i96 %410, 0
  br i1 %411, label %441, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %414 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %413, align 8
  %415 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %414, i64 0, i32 0, i32 9
  %416 = bitcast [20 x i8]* %415 to i160*
  %417 = load i160, i160* %416, align 8
  %418 = lshr i160 %417, 32
  %419 = trunc i160 %418 to i32
  %420 = and i32 %419, 31
  switch i32 %420, label %441 [
    i32 1, label %421
    i32 14, label %421
  ]

421:                                              ; preds = %412, %412
  %422 = and i160 %417, 2113929216
  %423 = icmp eq i160 %422, 0
  br i1 %423, label %424, label %441

424:                                              ; preds = %421
  %425 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %426 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %425, align 8
  %427 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %426, i64 23
  %428 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %427, align 8
  %429 = tail call zeroext i1 %428(%"class.blink::LayoutObject"* %1) #16
  br i1 %429, label %430, label %441

430:                                              ; preds = %424
  %431 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %425, align 8
  %432 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %431, i64 25
  %433 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %432, align 8
  %434 = tail call zeroext i1 %433(%"class.blink::LayoutObject"* %1) #16
  br i1 %434, label %441, label %435

435:                                              ; preds = %430
  %436 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %437 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %436, align 8
  %438 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %437, i64 92
  %439 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %438, align 8
  %440 = tail call zeroext i1 %439(%"class.blink::LayoutObject"* %1, i32 20) #16
  br i1 %440, label %441, label %442

441:                                              ; preds = %435, %412, %409, %421, %424, %430
  tail call void @_ZN5blink15LayoutBlockFlow28MakeChildrenInlineIfPossibleEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %442

442:                                              ; preds = %344, %309, %435, %397, %321, %317, %330, %333, %339, %313, %396, %441, %400, %23
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow36MergeSiblingContiguousAnonymousBlockEPS0_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %131, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = lshr i160 %14, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 31
  switch i32 %17, label %131 [
    i32 1, label %18
    i32 14, label %18
  ]

18:                                               ; preds = %9, %9
  %19 = and i160 %14, 2113929216
  %20 = icmp eq i160 %19, 0
  br i1 %20, label %21, label %131

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %23 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, i64 23
  %25 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %3) #16
  br i1 %26, label %27, label %131

27:                                               ; preds = %21
  %28 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %22, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, i64 25
  %30 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %3) #16
  br i1 %31, label %131, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %3, i32 20) #16
  br i1 %37, label %131, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %39) #16
  %41 = icmp eq %"class.blink::LayoutBoxModelObject"* %40, null
  br i1 %41, label %42, label %131

42:                                               ; preds = %38
  %43 = load i96, i96* %5, align 4
  %44 = and i96 %43, 295147905179352825856
  %45 = icmp eq i96 %44, 0
  br i1 %45, label %46, label %131

46:                                               ; preds = %42
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %3, i32 42) #16
  br i1 %50, label %131, label %51

51:                                               ; preds = %46
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %3, i32 41) #16
  br i1 %55, label %131, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 16777216
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %131, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8
  %69 = lshr i160 %68, 32
  %70 = trunc i160 %69 to i32
  %71 = and i32 %70, 31
  switch i32 %71, label %131 [
    i32 1, label %72
    i32 14, label %72
  ]

72:                                               ; preds = %63, %63
  %73 = and i160 %68, 2113929216
  %74 = icmp eq i160 %73, 0
  br i1 %74, label %75, label %131

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %77 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %77, i64 23
  %79 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::LayoutObject"* %57) #16
  br i1 %80, label %81, label %131

81:                                               ; preds = %75
  %82 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %76, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %82, i64 25
  %84 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::LayoutObject"* %57) #16
  br i1 %85, label %131, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %88, i64 92
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* %57, i32 20) #16
  br i1 %91, label %131, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0
  %94 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %93) #16
  %95 = icmp eq %"class.blink::LayoutBoxModelObject"* %94, null
  br i1 %95, label %96, label %131

96:                                               ; preds = %92
  %97 = load i96, i96* %59, align 4
  %98 = and i96 %97, 295147905179352825856
  %99 = icmp eq i96 %98, 0
  br i1 %99, label %100, label %131

100:                                              ; preds = %96
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %87, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = tail call zeroext i1 %103(%"class.blink::LayoutObject"* %57, i32 42) #16
  br i1 %104, label %131, label %105

105:                                              ; preds = %100
  %106 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %87, align 8
  %107 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %106, i64 92
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %107, align 8
  %109 = tail call zeroext i1 %108(%"class.blink::LayoutObject"* %57, i32 41) #16
  br i1 %109, label %131, label %110

110:                                              ; preds = %105
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #16
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 3) #16
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %3, i32 1) #16
  %111 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %112 = load i96, i96* %59, align 4
  %113 = and i96 %112, 4294967296
  %114 = icmp eq i96 %113, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %110
  %116 = load i96, i96* %5, align 4
  %117 = and i96 %116, 4294967296
  %118 = icmp ne i96 %117, 0
  br label %119

119:                                              ; preds = %110, %115
  %120 = phi i1 [ true, %110 ], [ %118, %115 ]
  tail call void @_ZN5blink15LayoutBlockFlow32MoveAllChildrenIncludingFloatsToEPNS_11LayoutBlockEb(%"class.blink::LayoutBlockFlow"* %1, %"class.blink::LayoutBlock"* %111, i1 zeroext %120)
  %121 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %121, align 8
  %123 = icmp eq %"class.blink::FloatingObjects"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %122, i64 0, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %124
  tail call void @_ZN5blink15FloatingObjects24ClearLineBoxTreePointersEv(%"class.blink::FloatingObjects"* nonnull %122) #16
  br label %129

129:                                              ; preds = %119, %124, %128
  %130 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 1
  tail call void @_ZN5blink11LineBoxList17DeleteLineBoxTreeEv(%"class.blink::LineBoxList"* %130) #16
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %57) #16
  br label %131

131:                                              ; preds = %105, %86, %51, %32, %63, %56, %72, %75, %81, %92, %96, %100, %9, %2, %18, %21, %27, %38, %42, %46, %129
  %132 = phi i1 [ true, %129 ], [ false, %105 ], [ false, %51 ], [ false, %46 ], [ false, %42 ], [ false, %38 ], [ false, %32 ], [ false, %27 ], [ false, %21 ], [ false, %18 ], [ false, %2 ], [ false, %9 ], [ false, %100 ], [ false, %96 ], [ false, %92 ], [ false, %86 ], [ false, %81 ], [ false, %75 ], [ false, %72 ], [ false, %56 ], [ false, %63 ]
  ret i1 %132
}

declare void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow27CollapseAnonymousBlockChildEPS0_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 295147905179352825856
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %11) #16
  %13 = icmp eq %"class.blink::LayoutBoxModelObject"* %12, null
  br i1 %13, label %14, label %90

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, i64 92
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutObject"* %4, i32 42) #16
  br i1 %19, label %90, label %20

20:                                               ; preds = %14
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* %4, i32 41) #16
  br i1 %24, label %90, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 25
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %3) #16
  br i1 %30, label %31, label %50

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutFlowThread"*
  %33 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutFlowThread"*)***
  %34 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %34, i64 221
  %36 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutFlowThread"* %32) #16
  br i1 %37, label %38, label %50

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = bitcast %"class.blink::LayoutObject"* %40 to i1 (%"class.blink::LayoutObject"*)***
  %42 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, i64 28
  %44 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %40) #16
  br i1 %45, label %46, label %50

46:                                               ; preds = %38
  %47 = load i96, i96* %6, align 4
  %48 = and i96 %47, 17592186044416
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %50, label %90

50:                                               ; preds = %46, %38, %31, %25
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason27kChildAnonymousBlockChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #16
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 3) #16
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %3, i32 1) #16
  %51 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %52, align 8
  %54 = load i96, i96* %6, align 4
  %55 = and i96 %54, 4294967296
  %56 = icmp ne i96 %55, 0
  %57 = bitcast %"class.blink::LayoutBlockFlow"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %58 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %58, i64 13
  %60 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %59, align 8
  %61 = tail call %"class.blink::LayoutObjectChildList"* %60(%"class.blink::LayoutObject"* %4) #16
  %62 = icmp eq %"class.blink::LayoutObjectChildList"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %50
  %64 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %61, i64 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  br label %66

66:                                               ; preds = %50, %63
  %67 = phi %"class.blink::LayoutObject"* [ %65, %63 ], [ null, %50 ]
  %68 = bitcast %"class.blink::LayoutBlockFlow"* %1 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %69 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %69, i64 144
  %71 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %70, align 8
  tail call void %71(%"class.blink::LayoutBoxModelObject"* %11, %"class.blink::LayoutBoxModelObject"* %51, %"class.blink::LayoutObject"* %67, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %53, i1 zeroext %56) #16
  %72 = load i96, i96* %6, align 4
  %73 = and i96 %72, 17592186044416
  %74 = icmp eq i96 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %66
  tail call void @_ZN5blink15LayoutBlockFlow36RemoveFloatingObjectsFromDescendantsEv(%"class.blink::LayoutBlockFlow"* %0)
  %76 = load i96, i96* %6, align 4
  %77 = and i96 %76, 17592186044416
  br label %78

78:                                               ; preds = %66, %75
  %79 = phi i96 [ 0, %66 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %81 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %80 to i96*
  %82 = load i96, i96* %81, align 4
  %83 = and i96 %82, -17592186044417
  %84 = or i96 %83, %79
  store i96 %84, i96* %81, align 4
  %85 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1
  %86 = load i96, i96* %6, align 4
  %87 = and i96 %86, 4294967296
  %88 = icmp ne i96 %87, 0
  %89 = tail call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %85, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %4, i1 zeroext %88) #16
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %4) #16
  br label %90

90:                                               ; preds = %46, %14, %20, %10, %2, %78
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow28MakeChildrenInlineIfPossibleEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.3107", align 8
  %3 = alloca %"class.blink::LayoutBlockFlow"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %44, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 32
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 31
  switch i32 %18, label %44 [
    i32 1, label %19
    i32 14, label %19
  ]

19:                                               ; preds = %10, %10
  %20 = and i160 %15, 2113929216
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %44

22:                                               ; preds = %19
  %23 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %24 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, i64 23
  %26 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %4) #16
  br i1 %27, label %28, label %44

28:                                               ; preds = %22
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %23, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 25
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %4) #16
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %4, i32 20) #16
  br i1 %38, label %44, label %39

39:                                               ; preds = %33
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %4, i32 41) #16
  br i1 %43, label %44, label %202

44:                                               ; preds = %39, %33, %28, %22, %19, %10, %1
  %45 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %46 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %46, i64 25
  %48 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* %4) #16
  br i1 %49, label %50, label %65

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutFlowThread"*
  %52 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutFlowThread"*)***
  %53 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %53, i64 221
  %55 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutFlowThread"* %51) #16
  br i1 %56, label %57, label %65

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = bitcast %"class.blink::LayoutObject"* %59 to i1 (%"class.blink::LayoutObject"*)***
  %61 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %61, i64 28
  %63 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %59) #16
  br i1 %64, label %202, label %65

65:                                               ; preds = %57, %50, %44
  %66 = bitcast %"class.WTF::Vector.3107"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  %68 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 1, i64 0
  %69 = bitcast %"class.WTF::Vector.3107"* %2 to i8**
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %70, align 8
  %71 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = icmp eq %"class.blink::LayoutObject"* %73, null
  br i1 %74, label %175, label %75

75:                                               ; preds = %65
  %76 = bitcast %"class.blink::LayoutBlockFlow"** %3 to i8*
  %77 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.blink::LayoutBlockFlow"** %3 to i64*
  br label %79

79:                                               ; preds = %75, %170
  %80 = phi %"class.blink::LayoutObject"* [ %73, %75 ], [ %172, %170 ]
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 4
  %82 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %81 to i96*
  %83 = load i96, i96* %82, align 4
  %84 = and i96 %83, 8388608
  %85 = icmp ne i96 %84, 0
  %86 = and i96 %83, 113336795588871485128704
  %87 = icmp eq i96 %86, 75557863725914323419136
  %88 = or i1 %85, %87
  br i1 %88, label %170, label %89

89:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #16
  store %"class.blink::LayoutBlockFlow"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutBlockFlow"*), %"class.blink::LayoutBlockFlow"** %3, align 8
  %90 = bitcast %"class.blink::LayoutObject"* %80 to i1 (%"class.blink::LayoutObject"*)***
  %91 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, i64 24
  %93 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::LayoutObject"* nonnull %80) #16
  %95 = bitcast %"class.blink::LayoutObject"* %80 to %"class.blink::LayoutBlockFlow"*
  %96 = select i1 %94, %"class.blink::LayoutBlockFlow"* %95, %"class.blink::LayoutBlockFlow"* null
  store %"class.blink::LayoutBlockFlow"* %96, %"class.blink::LayoutBlockFlow"** %3, align 8
  %97 = load i96, i96* %82, align 4
  %98 = and i96 %97, 16777216
  %99 = icmp eq i96 %98, 0
  br i1 %99, label %174, label %100

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 5, i32 0
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = lshr i160 %105, 32
  %107 = trunc i160 %106 to i32
  %108 = and i32 %107, 31
  switch i32 %108, label %174 [
    i32 1, label %109
    i32 14, label %109
  ]

109:                                              ; preds = %100, %100
  %110 = and i160 %105, 2113929216
  %111 = icmp eq i160 %110, 0
  br i1 %111, label %112, label %174

112:                                              ; preds = %109
  %113 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %90, align 8
  %114 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %113, i64 23
  %115 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %114, align 8
  %116 = call zeroext i1 %115(%"class.blink::LayoutObject"* nonnull %80) #16
  br i1 %116, label %117, label %174

117:                                              ; preds = %112
  %118 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %90, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %118, i64 25
  %120 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %119, align 8
  %121 = call zeroext i1 %120(%"class.blink::LayoutObject"* nonnull %80) #16
  br i1 %121, label %174, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.blink::LayoutObject"* %80 to i1 (%"class.blink::LayoutObject"*, i32)***
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %124, i64 92
  %126 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, align 8
  %127 = call zeroext i1 %126(%"class.blink::LayoutObject"* nonnull %80, i32 20) #16
  %128 = xor i1 %127, true
  %129 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %3, align 8
  %130 = icmp ne %"class.blink::LayoutBlockFlow"* %129, null
  %131 = and i1 %130, %128
  %132 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %129, i64 0, i32 0, i32 0, i32 0
  br i1 %131, label %133, label %174

133:                                              ; preds = %122
  %134 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %135 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %134 to i96*
  %136 = load i96, i96* %135, align 4
  %137 = and i96 %136, 295147905179352825856
  %138 = icmp eq i96 %137, 0
  br i1 %138, label %139, label %174

139:                                              ; preds = %133
  %140 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %132) #16
  %141 = icmp eq %"class.blink::LayoutBoxModelObject"* %140, null
  br i1 %141, label %142, label %174

142:                                              ; preds = %139
  %143 = load i96, i96* %82, align 4
  %144 = and i96 %143, 17592186044416
  %145 = icmp eq i96 %144, 0
  br i1 %145, label %174, label %146

146:                                              ; preds = %142
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %148 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %147, i64 92
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %148, align 8
  %150 = call zeroext i1 %149(%"class.blink::LayoutObject"* nonnull %80, i32 42) #16
  br i1 %150, label %174, label %151

151:                                              ; preds = %146
  %152 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %152, i64 92
  %154 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %153, align 8
  %155 = call zeroext i1 %154(%"class.blink::LayoutObject"* nonnull %80, i32 41) #16
  br i1 %155, label %174, label %156

156:                                              ; preds = %151
  %157 = load i32, i32* %71, align 4
  %158 = load i32, i32* %70, align 8
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %168, label %160, !prof !2

160:                                              ; preds = %156
  %161 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %77, align 8
  %162 = zext i32 %157 to i64
  %163 = getelementptr inbounds %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %161, i64 %162
  %164 = load i64, i64* %78, align 8
  %165 = bitcast %"class.blink::LayoutBlockFlow"** %163 to i64*
  store i64 %164, i64* %165, align 8
  %166 = load i32, i32* %71, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %71, align 4
  br label %169

168:                                              ; preds = %156
  call void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.3107"* nonnull %2, %"class.blink::LayoutBlockFlow"** nonnull dereferenceable(8) %3) #16
  br label %169

169:                                              ; preds = %168, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #16
  br label %170

170:                                              ; preds = %169, %79
  %171 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 9
  %172 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %171, align 8
  %173 = icmp eq %"class.blink::LayoutObject"* %172, null
  br i1 %173, label %175, label %79

174:                                              ; preds = %142, %133, %100, %89, %109, %112, %117, %122, %139, %151, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #16
  br label %190

175:                                              ; preds = %170, %65
  call void @_ZN5blink15LayoutBlockFlow36RemoveFloatingObjectsFromDescendantsEv(%"class.blink::LayoutBlockFlow"* %0)
  %176 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %176, align 8
  %178 = load i32, i32* %71, align 4
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %177, i64 %179
  %181 = icmp eq i32 %178, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %185, %175
  %183 = load i96, i96* %6, align 4
  %184 = or i96 %183, 17592186044416
  store i96 %184, i96* %6, align 4
  br label %190

185:                                              ; preds = %175, %185
  %186 = phi %"class.blink::LayoutBlockFlow"** [ %188, %185 ], [ %177, %175 ]
  %187 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %186, align 8
  call void @_ZN5blink15LayoutBlockFlow27CollapseAnonymousBlockChildEPS0_(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"* %187)
  %188 = getelementptr inbounds %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %186, i64 1
  %189 = icmp eq %"class.blink::LayoutBlockFlow"** %188, %180
  br i1 %189, label %182, label %185

190:                                              ; preds = %174, %182
  %191 = load i32, i32* %71, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %194, label %193, !prof !2

193:                                              ; preds = %190
  store i32 0, i32* %71, align 4
  br label %194

194:                                              ; preds = %193, %190
  %195 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %195, align 8
  %197 = bitcast i8* %68 to %"class.blink::LayoutBlockFlow"**
  %198 = icmp eq %"class.blink::LayoutBlockFlow"** %196, %197
  br i1 %198, label %201, label %199, !prof !44

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %2, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3108"* nonnull %200, %"class.blink::LayoutBlockFlow"** %196) #16
  br label %201

201:                                              ; preds = %194, %199
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %66) #16
  br label %202

202:                                              ; preds = %57, %39, %201
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow32MoveAllChildrenIncludingFloatsToEPNS_11LayoutBlockEb(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlock"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutBlock"* %1 to %"class.blink::LayoutBlockFlow"*
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %47, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 1, i32 0, i32 0, i32 0, i32 5
  %10 = bitcast %class.scoped_refptr* %9 to %"class.blink::FloatingObjects"**
  %11 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %10, align 8
  %12 = icmp eq %"class.blink::FloatingObjects"* %11, null
  br i1 %12, label %13, label %27

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = trunc i96 %16 to i32
  %18 = icmp slt i32 %17, 0
  %19 = tail call noalias i8* @malloc(i64 144) #16
  %20 = bitcast i8* %19 to %"class.blink::FloatingObjects"*
  tail call void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"* %20, %"class.blink::LayoutBlockFlow"* %4, i1 zeroext %18) #16
  %21 = ptrtoint i8* %19 to i64
  %22 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %10, align 8
  %23 = bitcast %class.scoped_refptr* %9 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %"class.blink::FloatingObjects"* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  tail call void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"* nonnull %22) #16
  %26 = bitcast %"class.blink::FloatingObjects"* %22 to i8*
  tail call void @free(i8* %26) #16
  br label %27

27:                                               ; preds = %8, %25, %13
  %28 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %29 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %28, i64 0, i32 0, i32 1
  %30 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %29, align 8
  %31 = icmp eq %"class.WTF::MallocedListHashSetNode"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %27, %43
  %33 = phi %"class.WTF::MallocedListHashSetNode"* [ %45, %43 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %35, i64 0, i32 0
  %37 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %36, align 8
  %38 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %4, %"class.blink::LayoutBox"* %37)
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %10, align 8
  %41 = tail call %"class.blink::FloatingObject"* @_ZNK5blink14FloatingObject11UnsafeCloneEv(%"class.blink::FloatingObject"* %35) #16
  %42 = tail call %"class.blink::FloatingObject"* @_ZN5blink15FloatingObjects3AddENSt3__110unique_ptrINS_14FloatingObjectENS1_14default_deleteIS3_EEEE(%"class.blink::FloatingObjects"* %40, %"class.blink::FloatingObject"* %41) #16
  br label %43

43:                                               ; preds = %32, %39
  %44 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %33, i64 0, i32 2
  %45 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %44, align 8
  %46 = icmp eq %"class.WTF::MallocedListHashSetNode"* %45, null
  br i1 %46, label %47, label %32

47:                                               ; preds = %43, %27, %3
  %48 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %52 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %52, i64 13
  %54 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call %"class.blink::LayoutObjectChildList"* %54(%"class.blink::LayoutObject"* %50) #16
  %56 = icmp eq %"class.blink::LayoutObjectChildList"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %55, i64 0, i32 0
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  br label %60

60:                                               ; preds = %47, %57
  %61 = phi %"class.blink::LayoutObject"* [ %59, %57 ], [ null, %47 ]
  %62 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %63 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %63, i64 144
  %65 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %64, align 8
  tail call void %65(%"class.blink::LayoutBoxModelObject"* %48, %"class.blink::LayoutBoxModelObject"* %49, %"class.blink::LayoutObject"* %61, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* null, i1 zeroext %2) #16
  ret void
}

declare %"class.blink::FloatingObject"* @_ZNK5blink14FloatingObject11UnsafeCloneEv(%"class.blink::FloatingObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow30ChildBecameFloatingOrOutOfFlowEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15LayoutBlockFlow28MakeChildrenInlineIfPossibleEv(%"class.blink::LayoutBlockFlow"* %0)
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 8
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %53, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %9 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, i64 24
  %11 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* nonnull %5) #16
  %13 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBlockFlow"*
  %14 = select i1 %12, %"class.blink::LayoutBlockFlow"* %13, %"class.blink::LayoutBlockFlow"* null
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 16777216
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = lshr i160 %25, 32
  %27 = trunc i160 %26 to i32
  %28 = and i32 %27, 31
  switch i32 %28, label %53 [
    i32 1, label %29
    i32 14, label %29
  ]

29:                                               ; preds = %20, %20
  %30 = and i160 %25, 2113929216
  %31 = icmp eq i160 %30, 0
  br i1 %31, label %32, label %53

32:                                               ; preds = %29
  %33 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %8, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, i64 23
  %35 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* nonnull %5) #16
  br i1 %36, label %37, label %53

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %8, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, i64 25
  %40 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* nonnull %5) #16
  br i1 %41, label %53, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, i64 92
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* nonnull %5, i32 20) #16
  %48 = xor i1 %47, true
  %49 = and i1 %12, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* %51, %"class.blink::LayoutBoxModelObject"* %52, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* null, i1 zeroext false) #16
  tail call void @_ZN5blink15LayoutBlockFlow45ReparentSubsequentFloatingOrOutOfFlowSiblingsEv(%"class.blink::LayoutBlockFlow"* nonnull %14)
  br label %108

53:                                               ; preds = %20, %7, %29, %32, %37, %2, %42
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 9
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %108, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*)***
  %59 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %59, i64 24
  %61 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* nonnull %55) #16
  %63 = bitcast %"class.blink::LayoutObject"* %55 to %"class.blink::LayoutBlockFlow"*
  %64 = select i1 %62, %"class.blink::LayoutBlockFlow"* %63, %"class.blink::LayoutBlockFlow"* null
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = and i96 %67, 16777216
  %69 = icmp eq i96 %68, 0
  br i1 %69, label %108, label %70

70:                                               ; preds = %57
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 5, i32 0
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8
  %76 = lshr i160 %75, 32
  %77 = trunc i160 %76 to i32
  %78 = and i32 %77, 31
  switch i32 %78, label %108 [
    i32 1, label %79
    i32 14, label %79
  ]

79:                                               ; preds = %70, %70
  %80 = and i160 %75, 2113929216
  %81 = icmp eq i160 %80, 0
  br i1 %81, label %82, label %108

82:                                               ; preds = %79
  %83 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %58, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %83, i64 23
  %85 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* nonnull %55) #16
  br i1 %86, label %87, label %108

87:                                               ; preds = %82
  %88 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %58, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, i64 25
  %90 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* nonnull %55) #16
  br i1 %91, label %108, label %92

92:                                               ; preds = %87
  %93 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*, i32)***
  %94 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, i64 92
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, align 8
  %97 = tail call zeroext i1 %96(%"class.blink::LayoutObject"* nonnull %55, i32 20) #16
  br i1 %97, label %108, label %98

98:                                               ; preds = %92
  %99 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %58, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %99, i64 24
  %101 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* nonnull %55) #16
  br i1 %102, label %103, label %108

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %64, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %64, i64 0, i32 0, i32 1, i32 0
  %107 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %106, align 8
  tail call void @_ZN5blink20LayoutBoxModelObject11MoveChildToEPS0_PNS_12LayoutObjectES3_b(%"class.blink::LayoutBoxModelObject"* %104, %"class.blink::LayoutBoxModelObject"* %105, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %107, i1 zeroext false) #16
  br label %108

108:                                              ; preds = %92, %70, %57, %79, %82, %87, %53, %98, %103, %50
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow21MakeChildrenNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutObject"* null)
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %9 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, i64 23
  %11 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* nonnull %5) #16
  %13 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBlock"*
  %14 = select i1 %12, %"class.blink::LayoutBlock"* %13, %"class.blink::LayoutBlock"* null
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi %"class.blink::LayoutBlock"* [ %14, %7 ], [ null, %2 ]
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 16777216
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %60, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = lshr i160 %27, 32
  %29 = trunc i160 %28 to i32
  %30 = and i32 %29, 31
  switch i32 %30, label %60 [
    i32 1, label %31
    i32 14, label %31
  ]

31:                                               ; preds = %22, %22
  %32 = and i160 %27, 2113929216
  %33 = icmp eq i160 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %36 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %36, i64 23
  %38 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* %3) #16
  br i1 %39, label %40, label %60

40:                                               ; preds = %34
  %41 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %35, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %41, i64 25
  %43 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %3) #16
  br i1 %44, label %60, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %3, i32 20) #16
  %51 = xor i1 %50, true
  %52 = icmp ne %"class.blink::LayoutBlock"* %16, null
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %60

54:                                               ; preds = %45
  %55 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %56 = bitcast %"class.blink::LayoutBlock"* %16 to void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)***
  %57 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)** %57, i64 210
  %59 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)** %58, align 8
  tail call void %59(%"class.blink::LayoutBlock"* nonnull %16, %"class.blink::LayoutBlock"* %55) #16
  br label %60

60:                                               ; preds = %22, %15, %31, %34, %40, %54, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow11ClearFloatsENS_6EClearE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %13 = select i1 %10, i32* %11, i32* %12
  %14 = load i32, i32* %13, align 4
  %15 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %14, %"class.blink::LineWidth"* null)
  %16 = icmp eq i32 %1, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %18, align 8
  %20 = icmp eq %"class.blink::FloatingObjects"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %1, 1
  %23 = icmp eq i32 %1, 2
  %24 = select i1 %23, i32 2, i32 3
  %25 = select i1 %22, i32 1, i32 %24
  %26 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %19, i32 %25) #16
  br label %27

27:                                               ; preds = %2, %17, %21
  %28 = phi i32 [ %26, %21 ], [ 0, %17 ], [ 0, %2 ]
  %29 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %30 = bitcast %"class.blink::LayoutSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = lshr i64 %31, 32
  %33 = trunc i64 %32 to i32
  %34 = icmp sgt i32 %28, %33
  %35 = trunc i64 %31 to i32
  br i1 %34, label %36, label %50

36:                                               ; preds = %27
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 15211807202738752817960438464512
  %42 = icmp eq i160 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = load i32, i32* %11, align 4
  %45 = icmp eq i32 %44, %28
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  store i32 %28, i32* %11, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %3) #16
  br label %50

47:                                               ; preds = %36
  %48 = icmp eq i32 %28, %35
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  store i32 %28, i32* %12, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %3) #16
  br label %50

50:                                               ; preds = %49, %47, %46, %43, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutBlockFlow31FlipFloatForWritingModeForChildERKNS_14FloatingObjectERKNS_11LayoutPointE(%"class.blink::LayoutBlockFlow"*, %"class.blink::FloatingObject"* dereferenceable(40), %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 5070602400912917605986812821504
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::LayoutPoint"* %2 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  br label %57

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %2, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %21 = bitcast %"class.blink::LayoutSize"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %23) #16
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 0
  %31 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %31, i64 0, i32 2, i32 1
  %33 = bitcast %"class.blink::LayoutSize"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %29, i32 %35) #16
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !2
  %42 = tail call i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %1)
  %43 = shl i32 %42, 1
  %44 = xor i32 %43, %42
  %45 = icmp sgt i32 %44, -1
  %46 = lshr i32 %42, 31
  %47 = add nuw i32 %46, 2147483647
  %48 = select i1 %45, i32 %43, i32 %47
  %49 = icmp sgt i32 %48, -1
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %41, i32 %48) #16
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  %55 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %2, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %17, %11
  %58 = phi i32 [ %54, %17 ], [ %14, %11 ]
  %59 = phi i32 [ %56, %17 ], [ %16, %11 ]
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %58 to i64
  %63 = or i64 %61, %62
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow36LogicalLeftOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN5blink15FloatingObjects36LogicalLeftOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %6, i32 %2, i32 %1, %"class.blink::LayoutUnit"* %3) #16
  br label %14

14:                                               ; preds = %8, %4, %12
  %15 = phi i32 [ %13, %12 ], [ %2, %8 ], [ %2, %4 ]
  ret i32 %15
}

declare i32 @_ZN5blink15FloatingObjects36LogicalLeftOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"*, i32, i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %5, label %22

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 41538374868278621028243970633760768
  %12 = icmp eq i160 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %15 = tail call i32 @_ZNK5blink11LayoutBlock16TextIndentOffsetEv(%"class.blink::LayoutBlock"* %14) #16
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %15) #16
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !2
  br label %22

22:                                               ; preds = %13, %5, %3
  %23 = phi i32 [ %21, %13 ], [ %1, %5 ], [ %1, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow37LogicalRightOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN5blink15FloatingObjects37LogicalRightOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %6, i32 %2, i32 %1, %"class.blink::LayoutUnit"* %3) #16
  br label %14

14:                                               ; preds = %8, %4, %12
  %15 = phi i32 [ %13, %12 ], [ %2, %8 ], [ %2, %4 ]
  ret i32 %15
}

declare i32 @_ZN5blink15FloatingObjects37LogicalRightOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"*, i32, i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %5, label %22

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 41538374868278621028243970633760768
  %12 = icmp eq i160 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %15 = tail call i32 @_ZNK5blink11LayoutBlock16TextIndentOffsetEv(%"class.blink::LayoutBlock"* %14) #16
  %16 = icmp sgt i32 %15, -1
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %15) #16
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !2
  br label %22

22:                                               ; preds = %13, %5, %3
  %23 = phi i32 [ %1, %5 ], [ %21, %13 ], [ %1, %3 ]
  ret i32 %23
}

declare i32 @_ZNK5blink11LayoutBlock16TextIndentOffsetEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutBlockFlow30ComputeLogicalLocationForFloatERKNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::FloatingObject"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 0
  %9 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %8, align 8
  %10 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %11 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %10)
  %12 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %10) #16
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %14 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %13) #16
  %15 = icmp slt i32 %14, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %14) #16
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = trunc i96 %23 to i32
  %25 = icmp slt i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %28 = select i1 %25, i32* %26, i32* %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %11, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 %11) #16
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = icmp slt i32 %35, %29
  %37 = select i1 %36, i32 %35, i32 %29
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %9, i64 0, i32 0, i32 0, i32 5, i32 0
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = lshr i160 %42, 71
  %44 = trunc i160 %43 to i32
  %45 = and i32 %44, 7
  %46 = add nsw i32 %45, -3
  %47 = icmp ult i32 %46, 2
  br i1 %47, label %48, label %58

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 41538374868278621028243970633760768
  %55 = icmp eq i160 %54, 0
  %56 = icmp ne i32 %45, 3
  %57 = xor i1 %56, %55
  br i1 %57, label %60, label %166

58:                                               ; preds = %3
  %59 = icmp eq i32 %45, 1
  br i1 %59, label %60, label %166

60:                                               ; preds = %48, %58
  %61 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 64, i32* %62, align 4
  %63 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #16
  %64 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 64, i32* %64, align 4
  %65 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %65, align 8
  %67 = icmp eq %"class.blink::FloatingObjects"* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %66, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = call i32 @_ZN5blink15FloatingObjects36LogicalLeftOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %66, i32 %11, i32 %2, %"class.blink::LayoutUnit"* nonnull %4) #16
  br label %74

74:                                               ; preds = %60, %68, %72
  %75 = phi i32 [ %73, %72 ], [ %11, %68 ], [ %11, %60 ]
  br label %76

76:                                               ; preds = %111, %74
  %77 = phi i32 [ %2, %74 ], [ %108, %111 ]
  %78 = phi i32 [ %75, %74 ], [ %112, %111 ]
  %79 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %65, align 8
  %80 = icmp eq %"class.blink::FloatingObjects"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %79, i64 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = call i32 @_ZN5blink15FloatingObjects37LogicalRightOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %79, i32 %20, i32 %77, %"class.blink::LayoutUnit"* nonnull %5) #16
  br label %87

87:                                               ; preds = %76, %81, %85
  %88 = phi i32 [ %86, %85 ], [ %20, %81 ], [ %20, %76 ]
  %89 = icmp sgt i32 %78, -1
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %88, i32 %78) #16
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !2
  %95 = icmp slt i32 %94, %37
  br i1 %95, label %96, label %119

96:                                               ; preds = %87
  %97 = load i32, i32* %64, align 4
  %98 = load i32, i32* %62, align 4
  %99 = icmp slt i32 %97, %98
  %100 = select i1 %99, %"class.blink::LayoutUnit"* %5, %"class.blink::LayoutUnit"* %4
  %101 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %102) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  %109 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %65, align 8
  %110 = icmp eq %"class.blink::FloatingObjects"* %109, null
  br i1 %110, label %111, label %113

111:                                              ; preds = %96, %113, %117
  %112 = phi i32 [ %11, %96 ], [ %11, %113 ], [ %118, %117 ]
  br label %76

113:                                              ; preds = %96
  %114 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %109, i64 0, i32 2
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %111, label %117

117:                                              ; preds = %113
  %118 = call i32 @_ZN5blink15FloatingObjects36LogicalLeftOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %109, i32 %11, i32 %108, %"class.blink::LayoutUnit"* nonnull %4) #16
  br label %111

119:                                              ; preds = %87
  %120 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 15211807202738752817960438464512
  %127 = icmp eq i160 %126, 0
  %128 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %129 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %128, align 8
  br i1 %127, label %130, label %141

130:                                              ; preds = %119
  %131 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, i64 124
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  %133 = call i32 %132(%"class.blink::LayoutBoxModelObject"* %120) #16
  %134 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %128, align 8
  %135 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %134, i64 120
  %136 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %135, align 8
  %137 = call i32 %136(%"class.blink::LayoutBoxModelObject"* %120) #16
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %137) #16
  br label %152

141:                                              ; preds = %119
  %142 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, i64 122
  %143 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %142, align 8
  %144 = call i32 %143(%"class.blink::LayoutBoxModelObject"* %120) #16
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %128, align 8
  %146 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %145, i64 118
  %147 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %146, align 8
  %148 = call i32 %147(%"class.blink::LayoutBoxModelObject"* %120) #16
  %149 = icmp slt i32 %148, 0
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %144, i32 %148) #16
  br label %152

152:                                              ; preds = %130, %141
  %153 = phi { i32, i1 } [ %140, %130 ], [ %151, %141 ]
  %154 = phi i32 [ %139, %130 ], [ %150, %141 ]
  %155 = extractvalue { i32, i1 } %153, 1
  %156 = extractvalue { i32, i1 } %153, 0
  %157 = select i1 %155, i32 %154, i32 %156
  %158 = icmp sgt i32 %157, -1
  %159 = select i1 %158, i32 -2147483648, i32 2147483647
  %160 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 %157) #16
  %161 = extractvalue { i32, i1 } %160, 1
  %162 = extractvalue { i32, i1 } %160, 0
  %163 = select i1 %161, i32 %159, i32 %162, !prof !2
  %164 = icmp slt i32 %163, %78
  %165 = select i1 %164, i32 %78, i32 %163
  br label %237

166:                                              ; preds = %48, %58
  %167 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #16
  %168 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 64, i32* %168, align 4
  %169 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #16
  %170 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  store i32 64, i32* %170, align 4
  %171 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %172 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %171, align 8
  %173 = icmp eq %"class.blink::FloatingObjects"* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %172, i64 0, i32 3
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = call i32 @_ZN5blink15FloatingObjects37LogicalRightOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %172, i32 %20, i32 %2, %"class.blink::LayoutUnit"* nonnull %7) #16
  br label %180

180:                                              ; preds = %166, %174, %178
  %181 = phi i32 [ %179, %178 ], [ %20, %174 ], [ %20, %166 ]
  br label %182

182:                                              ; preds = %217, %180
  %183 = phi i32 [ %2, %180 ], [ %214, %217 ]
  %184 = phi i32 [ %181, %180 ], [ %218, %217 ]
  %185 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %171, align 8
  %186 = icmp eq %"class.blink::FloatingObjects"* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %185, i64 0, i32 2
  %189 = load i32, i32* %188, align 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %187
  %192 = call i32 @_ZN5blink15FloatingObjects36LogicalLeftOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %185, i32 %11, i32 %183, %"class.blink::LayoutUnit"* nonnull %6) #16
  br label %193

193:                                              ; preds = %182, %187, %191
  %194 = phi i32 [ %192, %191 ], [ %11, %187 ], [ %11, %182 ]
  %195 = icmp sgt i32 %194, -1
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %184, i32 %194) #16
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !2
  %201 = icmp slt i32 %200, %37
  br i1 %201, label %202, label %225

202:                                              ; preds = %193
  %203 = load i32, i32* %170, align 4
  %204 = load i32, i32* %168, align 4
  %205 = icmp slt i32 %203, %204
  %206 = select i1 %205, %"class.blink::LayoutUnit"* %7, %"class.blink::LayoutUnit"* %6
  %207 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %206, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp slt i32 %208, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %183, i32 %208) #16
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %171, align 8
  %216 = icmp eq %"class.blink::FloatingObjects"* %215, null
  br i1 %216, label %217, label %219

217:                                              ; preds = %202, %219, %223
  %218 = phi i32 [ %20, %202 ], [ %20, %219 ], [ %224, %223 ]
  br label %182

219:                                              ; preds = %202
  %220 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %215, i64 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %217, label %223

223:                                              ; preds = %219
  %224 = call i32 @_ZN5blink15FloatingObjects37LogicalRightOffsetForPositioningFloatENS_10LayoutUnitES1_PS1_(%"class.blink::FloatingObjects"* nonnull %215, i32 %20, i32 %214, %"class.blink::LayoutUnit"* nonnull %7) #16
  br label %217

225:                                              ; preds = %193
  %226 = load i96, i96* %22, align 4
  %227 = trunc i96 %226 to i32
  %228 = icmp slt i32 %227, 0
  %229 = select i1 %228, i32* %26, i32* %27
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %230, -1
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %184, i32 %230) #16
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !2
  br label %237

237:                                              ; preds = %225, %152
  %238 = phi i8* [ %169, %225 ], [ %63, %152 ]
  %239 = phi i8* [ %167, %225 ], [ %61, %152 ]
  %240 = phi i32 [ %236, %225 ], [ %165, %152 ]
  %241 = phi i32 [ %183, %225 ], [ %77, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %238) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #16
  %242 = zext i32 %241 to i64
  %243 = shl nuw i64 %242, 32
  %244 = zext i32 %240 to i64
  %245 = or i64 %243, %244
  ret i64 %245
}

declare %"class.blink::FloatingObject"* @_ZN5blink14FloatingObject6CreateEPNS_9LayoutBoxENS0_4TypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink15FloatingObjects6RemoveEPNS_14FloatingObjectE(%"class.blink::FloatingObjects"*, %"class.blink::FloatingObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26RemoveFloatingObjectsBelowEPNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::FloatingObject"* readnone, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %5, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  br label %15

15:                                               ; preds = %34, %11
  %16 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %12, align 8
  %17 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %17, align 8
  %19 = icmp eq %"class.blink::FloatingObject"* %18, %1
  br i1 %19, label %38, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %18, i64 0, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 16
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %20
  %26 = load i96, i96* %14, align 4
  %27 = trunc i96 %26 to i32
  %28 = icmp slt i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %18, i64 0, i32 2, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = select i1 %28, i32* %29, i32* %30
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, %2
  br i1 %33, label %38, label %34

34:                                               ; preds = %25, %20
  %35 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  tail call void @_ZN5blink15FloatingObjects6RemoveEPNS_14FloatingObjectE(%"class.blink::FloatingObjects"* %35, %"class.blink::FloatingObject"* %18) #16
  %36 = load i32, i32* %8, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %15

38:                                               ; preds = %25, %15, %34, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FloatingObject"* @_ZNK5blink15LayoutBlockFlow15LastPlacedFloatEPN3WTF24ListHashSetConstIteratorINS1_11ListHashSetINSt3__110unique_ptrINS_14FloatingObjectENS4_14default_deleteIS6_EEEELm4ENS_27FloatingObjectHashFunctionsENS1_28MallocedListHashSetAllocatorIS9_Lj4EEEEEEE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.WTF::ListHashSetConstIterator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %4, i64 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::MallocedListHashSetNode"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %4, i64 0, i32 0, i32 1
  %10 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %9, align 8
  br label %11

11:                                               ; preds = %15, %2
  %12 = phi i64 [ %8, %2 ], [ %20, %15 ]
  %13 = inttoptr i64 %12 to %"class.WTF::MallocedListHashSetNode"*
  %14 = icmp eq %"class.WTF::MallocedListHashSetNode"* %10, %13
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = icmp eq i64 %12, 0
  %17 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %13, i64 0, i32 1
  %18 = select i1 %16, %"class.WTF::MallocedListHashSetNode"** %6, %"class.WTF::MallocedListHashSetNode"** %17
  %19 = bitcast %"class.WTF::MallocedListHashSetNode"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %20 to %"class.WTF::MallocedListHashSetNode"*
  %22 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %23, i64 0, i32 3
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 16
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %11, label %28

28:                                               ; preds = %15
  %29 = inttoptr i64 %20 to %"class.WTF::MallocedListHashSetNode"*
  %30 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %29, i64 0, i32 2
  %31 = bitcast %"class.WTF::MallocedListHashSetNode"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %11, %28
  %34 = phi i64 [ %32, %28 ], [ %12, %11 ]
  %35 = phi %"class.blink::FloatingObject"* [ %23, %28 ], [ null, %11 ]
  %36 = icmp eq %"class.WTF::ListHashSetConstIterator"* %1, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::ListHashSetConstIterator", %"class.WTF::ListHashSetConstIterator"* %1, i64 0, i32 0
  store %"class.WTF::ListHashSet.1820"* %5, %"class.WTF::ListHashSet.1820"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::ListHashSetConstIterator", %"class.WTF::ListHashSetConstIterator"* %1, i64 0, i32 1
  %40 = bitcast %"class.WTF::MallocedListHashSetNode"** %39 to i64*
  store i64 %34, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %37
  ret %"class.blink::FloatingObject"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow22PositionAndLayoutFloatERNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::FloatingObject"* nocapture dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 16
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 3778, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #16
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  br label %15

15:                                               ; preds = %3, %12
  %16 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 0
  %17 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %18) #16
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = lshr i160 %24, 68
  %26 = trunc i160 %25 to i32
  %27 = and i32 %26, 7
  %28 = add nsw i32 %27, -3
  %29 = icmp ult i32 %28, 2
  br i1 %29, label %30, label %40

30:                                               ; preds = %15
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 41538374868278621028243970633760768
  %36 = icmp eq i160 %35, 0
  %37 = icmp ne i32 %27, 3
  %38 = xor i1 %37, %36
  %39 = select i1 %38, i32 1, i32 2
  br label %42

40:                                               ; preds = %15
  %41 = icmp eq i32 %27, 0
  br i1 %41, label %53, label %42

42:                                               ; preds = %30, %40
  %43 = phi i32 [ %39, %30 ], [ %27, %40 ]
  %44 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %44, align 8
  %46 = icmp eq %"class.blink::FloatingObjects"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = icmp eq i32 %43, 1
  %49 = icmp eq i32 %43, 2
  %50 = select i1 %49, i32 2, i32 3
  %51 = select i1 %48, i32 1, i32 %50
  %52 = call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %45, i32 %51) #16
  br label %53

53:                                               ; preds = %40, %42, %47
  %54 = phi i32 [ %52, %47 ], [ 0, %42 ], [ 0, %40 ]
  %55 = icmp sgt i32 %54, %2
  %56 = select i1 %55, i32 %54, i32 %2
  %57 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %53, %60
  %61 = phi %"class.blink::LayoutObject"* [ %63, %60 ], [ %7, %53 ]
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 7
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %60, label %67

67:                                               ; preds = %60, %53
  %68 = phi %"class.blink::Node"* [ %58, %53 ], [ %65, %60 ]
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::Document"*, %"class.blink::Document"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %72, i64 0, i32 113
  %74 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %74, i64 0, i32 3
  %76 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %76, i64 0, i32 0
  %78 = load i8, i8* %77, align 8
  %79 = and i8 %78, 1
  %80 = icmp ne i8 %79, 0
  br i1 %80, label %81, label %106

81:                                               ; preds = %67
  %82 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %83 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %82 to i96*
  %84 = load i96, i96* %83, align 4
  %85 = and i96 %84, 17592186044416
  %86 = icmp eq i96 %85, 0
  br i1 %86, label %87, label %106

87:                                               ; preds = %81, %93
  %88 = phi %"class.blink::LayoutBox"* [ %91, %93 ], [ %17, %81 ]
  %89 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %88, i64 0, i32 0, i32 0, i32 8
  %90 = bitcast %"class.blink::LayoutObject"** %89 to %"class.blink::LayoutBox"**
  %91 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutBox"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %91, i64 0, i32 0, i32 0, i32 4
  %95 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %94 to i96*
  %96 = load i96, i96* %95, align 4
  %97 = and i96 %96, 113336795588871485128704
  %98 = icmp eq i96 %97, 75557863725914323419136
  br i1 %98, label %87, label %99

99:                                               ; preds = %93
  %100 = bitcast %"class.blink::LayoutBox"* %91 to i32 (%"class.blink::LayoutBox"*)***
  %101 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %101, i64 159
  %103 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %102, align 8
  %104 = call i32 %103(%"class.blink::LayoutBox"* nonnull %91) #16
  %105 = call i32 @_ZN5blink15LayoutBlockFlow16ApplyForcedBreakENS_10LayoutUnitENS_13EBreakBetweenE(%"class.blink::LayoutBlockFlow"* %0, i32 %56, i32 %104)
  br label %106

106:                                              ; preds = %87, %81, %99, %67
  %107 = phi i32 [ %56, %81 ], [ %105, %99 ], [ %56, %67 ], [ %56, %87 ]
  %108 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %108, i64 0, i32 0, i32 9
  %110 = bitcast [20 x i8]* %109 to i160*
  %111 = load i160, i160* %110, align 8
  %112 = and i160 %111, 15211807202738752817960438464512
  %113 = icmp eq i160 %112, 0
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 2, i32 0, i32 1, i32 0
  %115 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  %116 = select i1 %113, i32* %114, i32* %115
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0, i32 0, i32 4
  %119 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %118 to i96*
  %120 = load i96, i96* %119, align 4
  %121 = and i96 %120, 63
  %122 = icmp eq i96 %121, 0
  br i1 %122, label %193, label %123

123:                                              ; preds = %106
  br i1 %80, label %124, label %188

124:                                              ; preds = %123
  %125 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  call void @_ZN5blink9LayoutBox34ComputeAndSetBlockDirectionMarginsEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %17, %"class.blink::LayoutBlock"* %125) #16
  %126 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0
  %127 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %128 = icmp eq %"class.blink::ComputedStyle"* %127, null
  %129 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %130 = select i1 %128, %"class.blink::ComputedStyle"* %129, %"class.blink::ComputedStyle"* %127
  %131 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 9
  %132 = bitcast [20 x i8]* %131 to i160*
  %133 = load i160, i160* %132, align 8, !noalias !212
  %134 = lshr i160 %133, 102
  %135 = trunc i160 %134 to i8
  %136 = and i8 %135, 3
  %137 = bitcast %"class.blink::LayoutBox"* %17 to i8*
  switch i8 %136, label %138 [
    i8 0, label %147
    i8 1, label %139
  ]

138:                                              ; preds = %124
  br label %139

139:                                              ; preds = %138, %124
  %140 = phi { i64, i64 } [ { i64 1033, i64 0 }, %138 ], [ { i64 1041, i64 0 }, %124 ]
  %141 = extractvalue { i64, i64 } %140, 0
  %142 = extractvalue { i64, i64 } %140, 1
  %143 = getelementptr inbounds i8, i8* %137, i64 %142
  %144 = bitcast i8* %143 to %"class.blink::LayoutBoxModelObject"*
  %145 = and i64 %141, 1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %157, label %147

147:                                              ; preds = %139, %124
  %148 = phi %"class.blink::LayoutBoxModelObject"* [ %144, %139 ], [ %126, %124 ]
  %149 = phi i8* [ %143, %139 ], [ %137, %124 ]
  %150 = phi i64 [ %141, %139 ], [ 1017, %124 ]
  %151 = bitcast i8* %149 to i8**
  %152 = load i8*, i8** %151, align 8
  %153 = add i64 %150, -1
  %154 = getelementptr i8, i8* %152, i64 %153
  %155 = bitcast i8* %154 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %156 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %155, align 8
  br label %159

157:                                              ; preds = %139
  %158 = inttoptr i64 %141 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %159

159:                                              ; preds = %147, %157
  %160 = phi %"class.blink::LayoutBoxModelObject"* [ %148, %147 ], [ %144, %157 ]
  %161 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %156, %147 ], [ %158, %157 ]
  %162 = call i32 %161(%"class.blink::LayoutBoxModelObject"* %160) #16
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %162) #16
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !2
  %169 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %170 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %169 to i96*
  %171 = load i96, i96* %170, align 4
  %172 = trunc i96 %171 to i32
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %159
  %175 = load i32, i32* %114, align 4
  %176 = icmp eq i32 %175, %168
  br i1 %176, label %182, label %177

177:                                              ; preds = %174
  store i32 %168, i32* %114, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %17) #16
  br label %182

178:                                              ; preds = %159
  %179 = load i32, i32* %115, align 4
  %180 = icmp eq i32 %179, %168
  br i1 %180, label %182, label %181

181:                                              ; preds = %178
  store i32 %168, i32* %115, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %17) #16
  br label %182

182:                                              ; preds = %174, %177, %178, %181
  %183 = bitcast %"class.blink::LayoutBox"* %17 to void (%"class.blink::LayoutBox"*)***
  %184 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %184, i64 54
  %186 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %185, align 8
  call void %186(%"class.blink::LayoutBox"* %17) #16
  %187 = call i32 @_ZN5blink15LayoutBlockFlow34AdjustFloatLogicalTopForPaginationERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %17, i32 %107)
  br label %193

188:                                              ; preds = %123
  %189 = bitcast %"class.blink::LayoutBox"* %17 to void (%"class.blink::LayoutBox"*)***
  %190 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %190, i64 54
  %192 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %191, align 8
  call void %192(%"class.blink::LayoutBox"* %17) #16
  br label %193

193:                                              ; preds = %106, %182, %188
  %194 = phi i32 [ %107, %106 ], [ %187, %182 ], [ %107, %188 ]
  %195 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %196 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0
  %197 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %198 = icmp eq %"class.blink::ComputedStyle"* %197, null
  %199 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %200 = select i1 %198, %"class.blink::ComputedStyle"* %199, %"class.blink::ComputedStyle"* %197
  %201 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %200, i64 0, i32 0, i32 9
  %202 = bitcast [20 x i8]* %201 to i160*
  %203 = load i160, i160* %202, align 8, !noalias !215
  %204 = bitcast %"class.blink::LayoutBox"* %17 to i8*
  %205 = and i160 %203, 15211807202738752817960438464512
  %206 = icmp eq i160 %205, 0
  %207 = and i160 %203, 41538374868278621028243970633760768
  %208 = icmp eq i160 %207, 0
  %209 = select i1 %208, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %210 = select i1 %208, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %211 = select i1 %206, { i64, i64 } %210, { i64, i64 } %209
  %212 = select i1 %206, { i64, i64 } %210, { i64, i64 } %209
  %213 = extractvalue { i64, i64 } %211, 0
  %214 = extractvalue { i64, i64 } %212, 1
  %215 = getelementptr inbounds i8, i8* %204, i64 %214
  %216 = bitcast i8* %215 to %"class.blink::LayoutBoxModelObject"*
  %217 = and i64 %213, 1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %226, label %219

219:                                              ; preds = %193
  %220 = bitcast i8* %215 to i8**
  %221 = load i8*, i8** %220, align 8
  %222 = add i64 %213, -1
  %223 = getelementptr i8, i8* %221, i64 %222
  %224 = bitcast i8* %223 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %225 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %224, align 8
  br label %228

226:                                              ; preds = %193
  %227 = inttoptr i64 %213 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %228

228:                                              ; preds = %219, %226
  %229 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %225, %219 ], [ %227, %226 ]
  %230 = call i32 %229(%"class.blink::LayoutBoxModelObject"* %216) #16
  %231 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %232 = icmp eq %"class.blink::ComputedStyle"* %231, null
  %233 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %234 = select i1 %232, %"class.blink::ComputedStyle"* %233, %"class.blink::ComputedStyle"* %231
  %235 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 9
  %236 = bitcast [20 x i8]* %235 to i160*
  %237 = load i160, i160* %236, align 8, !noalias !218
  %238 = and i160 %237, 15211807202738752817960438464512
  %239 = icmp eq i160 %238, 0
  %240 = and i160 %237, 41538374868278621028243970633760768
  %241 = icmp eq i160 %240, 0
  %242 = select i1 %241, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %243 = select i1 %241, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %244 = select i1 %239, { i64, i64 } %243, { i64, i64 } %242
  %245 = select i1 %239, { i64, i64 } %243, { i64, i64 } %242
  %246 = extractvalue { i64, i64 } %244, 0
  %247 = extractvalue { i64, i64 } %245, 1
  %248 = getelementptr inbounds i8, i8* %204, i64 %247
  %249 = bitcast i8* %248 to %"class.blink::LayoutBoxModelObject"*
  %250 = and i64 %246, 1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %259, label %252

252:                                              ; preds = %228
  %253 = bitcast i8* %248 to i8**
  %254 = load i8*, i8** %253, align 8
  %255 = add i64 %246, -1
  %256 = getelementptr i8, i8* %254, i64 %255
  %257 = bitcast i8* %256 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %258 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %257, align 8
  br label %261

259:                                              ; preds = %228
  %260 = inttoptr i64 %246 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %261

261:                                              ; preds = %252, %259
  %262 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %258, %252 ], [ %260, %259 ]
  %263 = call i32 %262(%"class.blink::LayoutBoxModelObject"* %249) #16
  %264 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 2, i32 1
  %265 = bitcast %"class.blink::LayoutSize"* %264 to i64*
  %266 = load i64, i64* %265, align 4
  %267 = lshr i64 %266, 32
  %268 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %269 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %268 to i96*
  %270 = load i96, i96* %269, align 4
  %271 = trunc i96 %270 to i32
  %272 = icmp slt i32 %271, 0
  %273 = select i1 %272, i64 %266, i64 %267
  %274 = trunc i64 %273 to i32
  %275 = icmp slt i32 %230, 0
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %274, i32 %230) #16
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !2
  %281 = icmp slt i32 %263, 0
  %282 = select i1 %281, i32 -2147483648, i32 2147483647
  %283 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %280, i32 %263) #16
  %284 = extractvalue { i32, i1 } %283, 1
  %285 = extractvalue { i32, i1 } %283, 0
  %286 = select i1 %284, i32 %282, i32 %285, !prof !2
  %287 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %288 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %289 = select i1 %272, i32* %287, i32* %288
  store i32 %286, i32* %289, align 4
  %290 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %291 = icmp eq %"class.blink::ComputedStyle"* %290, null
  %292 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %293 = select i1 %291, %"class.blink::ComputedStyle"* %292, %"class.blink::ComputedStyle"* %290
  %294 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %293, i64 0, i32 0, i32 9
  %295 = bitcast [20 x i8]* %294 to i160*
  %296 = load i160, i160* %295, align 8, !noalias !221
  %297 = lshr i160 %296, 102
  %298 = trunc i160 %297 to i8
  %299 = and i8 %298, 3
  switch i8 %299, label %300 [
    i8 0, label %309
    i8 1, label %301
  ]

300:                                              ; preds = %261
  br label %301

301:                                              ; preds = %300, %261
  %302 = phi { i64, i64 } [ { i64 1033, i64 0 }, %300 ], [ { i64 1041, i64 0 }, %261 ]
  %303 = extractvalue { i64, i64 } %302, 0
  %304 = extractvalue { i64, i64 } %302, 1
  %305 = getelementptr inbounds i8, i8* %204, i64 %304
  %306 = bitcast i8* %305 to %"class.blink::LayoutBoxModelObject"*
  %307 = and i64 %303, 1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %319, label %309

309:                                              ; preds = %301, %261
  %310 = phi %"class.blink::LayoutBoxModelObject"* [ %306, %301 ], [ %196, %261 ]
  %311 = phi i8* [ %305, %301 ], [ %204, %261 ]
  %312 = phi i64 [ %303, %301 ], [ 1017, %261 ]
  %313 = bitcast i8* %311 to i8**
  %314 = load i8*, i8** %313, align 8
  %315 = add i64 %312, -1
  %316 = getelementptr i8, i8* %314, i64 %315
  %317 = bitcast i8* %316 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %318 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %317, align 8
  br label %321

319:                                              ; preds = %301
  %320 = inttoptr i64 %303 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %321

321:                                              ; preds = %309, %319
  %322 = phi %"class.blink::LayoutBoxModelObject"* [ %310, %309 ], [ %306, %319 ]
  %323 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %318, %309 ], [ %320, %319 ]
  %324 = call i32 %323(%"class.blink::LayoutBoxModelObject"* %322) #16
  %325 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %326 = icmp eq %"class.blink::ComputedStyle"* %325, null
  %327 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %328 = select i1 %326, %"class.blink::ComputedStyle"* %327, %"class.blink::ComputedStyle"* %325
  %329 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %328, i64 0, i32 0, i32 9
  %330 = bitcast [20 x i8]* %329 to i160*
  %331 = load i160, i160* %330, align 8, !noalias !224
  %332 = lshr i160 %331, 102
  %333 = trunc i160 %332 to i8
  %334 = and i8 %333, 3
  switch i8 %334, label %335 [
    i8 0, label %344
    i8 1, label %336
  ]

335:                                              ; preds = %321
  br label %336

336:                                              ; preds = %335, %321
  %337 = phi { i64, i64 } [ { i64 1041, i64 0 }, %335 ], [ { i64 1033, i64 0 }, %321 ]
  %338 = extractvalue { i64, i64 } %337, 0
  %339 = extractvalue { i64, i64 } %337, 1
  %340 = getelementptr inbounds i8, i8* %204, i64 %339
  %341 = bitcast i8* %340 to %"class.blink::LayoutBoxModelObject"*
  %342 = and i64 %338, 1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %354, label %344

344:                                              ; preds = %336, %321
  %345 = phi %"class.blink::LayoutBoxModelObject"* [ %341, %336 ], [ %196, %321 ]
  %346 = phi i8* [ %340, %336 ], [ %204, %321 ]
  %347 = phi i64 [ %338, %336 ], [ 1025, %321 ]
  %348 = bitcast i8* %346 to i8**
  %349 = load i8*, i8** %348, align 8
  %350 = add i64 %347, -1
  %351 = getelementptr i8, i8* %349, i64 %350
  %352 = bitcast i8* %351 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %353 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %352, align 8
  br label %356

354:                                              ; preds = %336
  %355 = inttoptr i64 %338 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %356

356:                                              ; preds = %344, %354
  %357 = phi %"class.blink::LayoutBoxModelObject"* [ %345, %344 ], [ %341, %354 ]
  %358 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %353, %344 ], [ %355, %354 ]
  %359 = call i32 %358(%"class.blink::LayoutBoxModelObject"* %357) #16
  %360 = call i64 @_ZNK5blink15LayoutBlockFlow30ComputeLogicalLocationForFloatERKNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %1, i32 %194)
  %361 = trunc i64 %360 to i32
  %362 = lshr i64 %360, 32
  %363 = trunc i64 %362 to i32
  %364 = icmp slt i32 %324, 0
  %365 = select i1 %364, i32 -2147483648, i32 2147483647
  %366 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %363, i32 %324) #16
  %367 = extractvalue { i32, i1 } %366, 1
  %368 = extractvalue { i32, i1 } %366, 0
  %369 = select i1 %367, i32 %365, i32 %368, !prof !2
  %370 = load i96, i96* %269, align 4
  %371 = trunc i96 %370 to i32
  %372 = icmp slt i32 %371, 0
  br i1 %372, label %373, label %377

373:                                              ; preds = %356
  %374 = load i32, i32* %114, align 4
  %375 = icmp eq i32 %374, %369
  br i1 %375, label %381, label %376

376:                                              ; preds = %373
  store i32 %369, i32* %114, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %17) #16
  br label %381

377:                                              ; preds = %356
  %378 = load i32, i32* %115, align 4
  %379 = icmp eq i32 %378, %369
  br i1 %379, label %381, label %380

380:                                              ; preds = %377
  store i32 %369, i32* %115, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %17) #16
  br label %381

381:                                              ; preds = %373, %376, %377, %380
  %382 = bitcast %"class.blink::SubtreeLayoutScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #16
  %383 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %6, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %383, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %6, %"class.blink::LayoutObject"* dereferenceable(88) %18) #16
  %384 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %384, %"class.blink::LayoutBox"* dereferenceable(216) %17, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %6) #16
  %385 = load i96, i96* %119, align 4
  %386 = and i96 %385, 63
  %387 = icmp eq i96 %386, 0
  br i1 %387, label %393, label %388

388:                                              ; preds = %381
  %389 = bitcast %"class.blink::LayoutBox"* %17 to void (%"class.blink::LayoutObject"*)***
  %390 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %390, i64 54
  %392 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %391, align 8
  call void %392(%"class.blink::LayoutObject"* %18) #16
  br label %393

393:                                              ; preds = %381, %388
  %394 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %395 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %394, i64 0, i32 0, i32 9
  %396 = bitcast [20 x i8]* %395 to i160*
  %397 = load i160, i160* %396, align 8
  %398 = and i160 %397, 15211807202738752817960438464512
  %399 = icmp eq i160 %398, 0
  %400 = select i1 %399, i32* %114, i32* %115
  %401 = load i32, i32* %400, align 4
  %402 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 2, i32 1, i32 1, i32 0
  %403 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 2, i32 1, i32 0, i32 0
  %404 = select i1 %399, i32* %402, i32* %403
  %405 = load i32, i32* %404, align 4
  %406 = icmp slt i32 %405, 0
  %407 = select i1 %406, i32 -2147483648, i32 2147483647
  %408 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %401, i32 %405) #16
  %409 = extractvalue { i32, i1 } %408, 1
  %410 = extractvalue { i32, i1 } %408, 0
  %411 = select i1 %409, i32 %407, i32 %410, !prof !2
  %412 = icmp sgt i32 %411, %117
  br i1 %412, label %434, label %413

413:                                              ; preds = %393
  %414 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 0, i32 0, i32 9
  %415 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %414, align 8
  %416 = icmp eq %"class.blink::LayoutObject"* %415, null
  br i1 %416, label %434, label %417

417:                                              ; preds = %413
  %418 = bitcast %"class.blink::LayoutObject"* %415 to i1 (%"class.blink::LayoutObject"*)***
  %419 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %418, align 8
  %420 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %419, i64 24
  %421 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %420, align 8
  %422 = call zeroext i1 %421(%"class.blink::LayoutObject"* nonnull %415) #16
  %423 = bitcast %"class.blink::LayoutObject"* %415 to %"class.blink::LayoutBlockFlow"*
  br i1 %422, label %424, label %434

424:                                              ; preds = %417
  %425 = bitcast %"class.blink::LayoutObject"* %415 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %426 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %425, align 8
  %427 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %426, i64 182
  %428 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %427, align 8
  %429 = call zeroext i1 %428(%"class.blink::LayoutBlockFlow"* nonnull %423) #16
  br i1 %429, label %430, label %433

430:                                              ; preds = %424
  %431 = bitcast %"class.blink::LayoutObject"* %415 to %"class.blink::LayoutBox"*
  %432 = call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* nonnull %431) #16
  br i1 %432, label %433, label %434

433:                                              ; preds = %430, %424
  call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* nonnull %423, %"class.blink::LayoutBox"* null, i1 zeroext true)
  br label %434

434:                                              ; preds = %417, %393, %413, %433, %430
  br i1 %80, label %435, label %509

435:                                              ; preds = %434
  %436 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %437 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %436, i64 0, i32 0, i32 9
  %438 = bitcast [20 x i8]* %437 to i160*
  %439 = load i160, i160* %438, align 8
  %440 = and i160 %439, 15211807202738752817960438464512
  %441 = icmp eq i160 %440, 0
  %442 = select i1 %441, i32* %114, i32* %115
  %443 = load i32, i32* %442, align 4
  %444 = select i1 %441, i32* %402, i32* %403
  %445 = load i32, i32* %444, align 4
  %446 = icmp slt i32 %445, 0
  %447 = select i1 %446, i32 -2147483648, i32 2147483647
  %448 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %443, i32 %445) #16
  %449 = extractvalue { i32, i1 } %448, 1
  %450 = extractvalue { i32, i1 } %448, 0
  %451 = select i1 %449, i32 %447, i32 %450, !prof !2
  call void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"* %195, i32 %451) #16
  %452 = call i32 @_ZN5blink15LayoutBlockFlow34AdjustFloatLogicalTopForPaginationERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %17, i32 %363)
  %453 = icmp eq i32 %452, %363
  br i1 %453, label %509, label %454

454:                                              ; preds = %435
  %455 = call i64 @_ZNK5blink15LayoutBlockFlow30ComputeLogicalLocationForFloatERKNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %1, i32 %452)
  %456 = trunc i64 %455 to i32
  %457 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %452, i32 %324) #16
  %458 = extractvalue { i32, i1 } %457, 1
  %459 = extractvalue { i32, i1 } %457, 0
  %460 = select i1 %458, i32 %365, i32 %459, !prof !2
  %461 = load i96, i96* %269, align 4
  %462 = trunc i96 %461 to i32
  %463 = icmp slt i32 %462, 0
  br i1 %463, label %464, label %468

464:                                              ; preds = %454
  %465 = load i32, i32* %114, align 4
  %466 = icmp eq i32 %465, %460
  br i1 %466, label %472, label %467

467:                                              ; preds = %464
  store i32 %460, i32* %114, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %17) #16
  br label %472

468:                                              ; preds = %454
  %469 = load i32, i32* %115, align 4
  %470 = icmp eq i32 %469, %460
  br i1 %470, label %472, label %471

471:                                              ; preds = %468
  store i32 %460, i32* %115, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %17) #16
  br label %472

472:                                              ; preds = %464, %467, %468, %471
  %473 = bitcast %"class.blink::LayoutBox"* %17 to i1 (%"class.blink::LayoutObject"*)***
  %474 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %473, align 8
  %475 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %474, i64 23
  %476 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %475, align 8
  %477 = call zeroext i1 %476(%"class.blink::LayoutObject"* %18) #16
  br i1 %477, label %480, label %478

478:                                              ; preds = %472
  %479 = load i96, i96* %119, align 4
  br label %483

480:                                              ; preds = %472
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %18, i32 1) #16
  %481 = load i96, i96* %119, align 4
  %482 = or i96 %481, 1180591620717411303432
  store i96 %482, i96* %119, align 4
  br label %483

483:                                              ; preds = %478, %480
  %484 = phi i96 [ %479, %478 ], [ %482, %480 ]
  %485 = and i96 %484, 63
  %486 = icmp eq i96 %485, 0
  br i1 %486, label %492, label %487

487:                                              ; preds = %483
  %488 = bitcast %"class.blink::LayoutBox"* %17 to void (%"class.blink::LayoutObject"*)***
  %489 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %489, i64 54
  %491 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %490, align 8
  call void %491(%"class.blink::LayoutObject"* %18) #16
  br label %492

492:                                              ; preds = %483, %487
  %493 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %494 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %493, i64 0, i32 0, i32 9
  %495 = bitcast [20 x i8]* %494 to i160*
  %496 = load i160, i160* %495, align 8
  %497 = and i160 %496, 15211807202738752817960438464512
  %498 = icmp eq i160 %497, 0
  %499 = select i1 %498, i32* %114, i32* %115
  %500 = load i32, i32* %499, align 4
  %501 = select i1 %498, i32* %402, i32* %403
  %502 = load i32, i32* %501, align 4
  %503 = icmp slt i32 %502, 0
  %504 = select i1 %503, i32 -2147483648, i32 2147483647
  %505 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %500, i32 %502) #16
  %506 = extractvalue { i32, i1 } %505, 1
  %507 = extractvalue { i32, i1 } %505, 0
  %508 = select i1 %506, i32 %504, i32 %507, !prof !2
  call void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"* %195, i32 %508) #16
  br label %509

509:                                              ; preds = %435, %492, %434
  %510 = phi i32 [ %363, %434 ], [ %452, %492 ], [ %363, %435 ]
  %511 = phi i32 [ %361, %434 ], [ %456, %492 ], [ %361, %435 ]
  %512 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %513 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %512, i64 0, i32 0, i32 9
  %514 = bitcast [20 x i8]* %513 to i160*
  %515 = load i160, i160* %514, align 8
  %516 = and i160 %515, 41538374868278621028243970633760768
  %517 = icmp eq i160 %516, 0
  %518 = select i1 %517, i32 %230, i32 %263
  %519 = icmp slt i32 %518, 0
  %520 = select i1 %519, i32 -2147483648, i32 2147483647
  %521 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %511, i32 %518) #16
  %522 = extractvalue { i32, i1 } %521, 1
  %523 = extractvalue { i32, i1 } %521, 0
  %524 = select i1 %522, i32 %520, i32 %523, !prof !2
  %525 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %526 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %526) #16
  %527 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 2
  %528 = bitcast %"class.blink::LayoutRect"* %527 to i64*
  %529 = load i64, i64* %528, align 4
  store i64 %529, i64* %4, align 8
  %530 = load i96, i96* %269, align 4
  %531 = trunc i96 %530 to i32
  %532 = icmp slt i32 %531, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %509
  %534 = bitcast i64* %4 to i32*
  store i32 %524, i32* %534, align 8
  br label %537

535:                                              ; preds = %509
  %536 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %525, i64 0, i32 1, i32 0
  store i32 %524, i32* %536, align 4
  br label %537

537:                                              ; preds = %533, %535
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %17, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %525) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %526) #16
  %538 = load i96, i96* %269, align 4
  %539 = trunc i96 %538 to i32
  %540 = icmp slt i32 %539, 0
  %541 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %542 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %543 = select i1 %540, i32* %541, i32* %542
  store i32 %511, i32* %543, align 4
  %544 = load i96, i96* %269, align 4
  %545 = trunc i96 %544 to i32
  %546 = icmp slt i32 %545, 0
  %547 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %548 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %549 = select i1 %546, i32* %547, i32* %548
  store i32 %510, i32* %549, align 4
  %550 = load i96, i96* %269, align 4
  %551 = trunc i96 %550 to i32
  %552 = icmp slt i32 %551, 0
  %553 = load i64, i64* %265, align 4
  %554 = lshr i64 %553, 32
  %555 = select i1 %552, i64 %554, i64 %553
  %556 = trunc i64 %555 to i32
  %557 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %556, i32 %324) #16
  %558 = extractvalue { i32, i1 } %557, 1
  %559 = extractvalue { i32, i1 } %557, 0
  %560 = select i1 %558, i32 %365, i32 %559, !prof !2
  %561 = icmp slt i32 %359, 0
  %562 = select i1 %561, i32 -2147483648, i32 2147483647
  %563 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %560, i32 %359) #16
  %564 = extractvalue { i32, i1 } %563, 1
  %565 = extractvalue { i32, i1 } %563, 0
  %566 = select i1 %564, i32 %562, i32 %565, !prof !2
  %567 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %568 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %569 = select i1 %552, i32* %567, i32* %568
  store i32 %566, i32* %569, align 4
  %570 = call %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"* %17) #16
  %571 = icmp eq %"class.blink::ShapeOutsideInfo"* %570, null
  br i1 %571, label %583, label %572

572:                                              ; preds = %537
  %573 = load i96, i96* %269, align 4
  %574 = trunc i96 %573 to i32
  %575 = icmp slt i32 %574, 0
  %576 = load i64, i64* %265, align 4
  br i1 %575, label %581, label %577

577:                                              ; preds = %572
  %578 = lshr i64 %576, 32
  %579 = shl i64 %576, 32
  %580 = or i64 %579, %578
  br label %581

581:                                              ; preds = %572, %577
  %582 = phi i64 [ %580, %577 ], [ %576, %572 ]
  call void @_ZN5blink16ShapeOutsideInfo26SetReferenceBoxLogicalSizeENS_10LayoutSizeE(%"class.blink::ShapeOutsideInfo"* nonnull %570, i64 %582) #16
  br label %583

583:                                              ; preds = %537, %581
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #16
  ret i32 %510
}

declare void @_ZN5blink15FloatingObjects15AddPlacedObjectERNS_14FloatingObjectE(%"class.blink::FloatingObjects"*, %"class.blink::FloatingObject"* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN5blink9LineWidth39ShrinkAvailableWidthForNewFloatIfNeededERKNS_14FloatingObjectE(%"class.blink::LineWidth"*, %"class.blink::FloatingObject"* dereferenceable(40)) local_unnamed_addr #1

declare %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink16ShapeOutsideInfo26SetReferenceBoxLogicalSizeENS_10LayoutSizeE(%"class.blink::ShapeOutsideInfo"*, i64) local_unnamed_addr #1

declare %"class.blink::PaintLayer"* @_ZNK5blink9LayoutBox27EnclosingFloatPaintingLayerEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow27NextFloatLogicalBottomBelowENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %3, align 8
  %5 = icmp eq %"class.blink::FloatingObjects"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN5blink15FloatingObjects31FindNextFloatLogicalBottomBelowENS_10LayoutUnitE(%"class.blink::FloatingObjects"* nonnull %4, i32 %1) #16
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ %7, %6 ], [ %1, %2 ]
  ret i32 %9
}

declare i32 @_ZN5blink15FloatingObjects31FindNextFloatLogicalBottomBelowENS_10LayoutUnitE(%"class.blink::FloatingObjects"*, i32) local_unnamed_addr #1

declare i32 @_ZN5blink15FloatingObjects39FindNextFloatLogicalBottomBelowForBlockENS_10LayoutUnitE(%"class.blink::FloatingObjects"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"* %2) #16
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN5blink15FloatingObjects24LowestFloatLogicalBottomENS_14FloatingObject4TypeE(%"class.blink::FloatingObjects"* nonnull %5, i32 3) #16
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ]
  %11 = icmp slt i32 %3, %10
  %12 = select i1 %11, i32 %10, i32 %3
  ret i32 %12
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %3) #16
  %5 = icmp eq %"class.blink::LayoutBoxModelObject"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %49, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = lshr i160 %17, 32
  %19 = trunc i160 %18 to i32
  %20 = and i32 %19, 31
  switch i32 %20, label %49 [
    i32 1, label %21
    i32 14, label %21
  ]

21:                                               ; preds = %12, %12
  %22 = and i160 %17, 2113929216
  %23 = icmp eq i160 %22, 0
  br i1 %23, label %24, label %49

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %26 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, i64 23
  %28 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %2) #16
  br i1 %29, label %30, label %49

30:                                               ; preds = %24
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 25
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %2) #16
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %2, i32 20) #16
  br i1 %40, label %49, label %41

41:                                               ; preds = %35
  %42 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %3) #16
  %43 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %42, i64 0, i32 0
  %44 = bitcast %"class.blink::LayoutBoxModelObject"* %42 to %"class.blink::Node"* (%"class.blink::LayoutObject"*)***
  %45 = load %"class.blink::Node"* (%"class.blink::LayoutObject"*)**, %"class.blink::Node"* (%"class.blink::LayoutObject"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::LayoutObject"*)*, %"class.blink::Node"* (%"class.blink::LayoutObject"*)** %45, i64 61
  %47 = load %"class.blink::Node"* (%"class.blink::LayoutObject"*)*, %"class.blink::Node"* (%"class.blink::LayoutObject"*)** %46, align 8
  %48 = tail call %"class.blink::Node"* %47(%"class.blink::LayoutObject"* %43) #16
  br label %51

49:                                               ; preds = %35, %12, %6, %21, %24, %30, %1
  %50 = tail call %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"* %2) #16
  br label %51

51:                                               ; preds = %49, %41
  %52 = phi %"class.blink::Node"* [ %48, %41 ], [ %50, %49 ]
  ret %"class.blink::Node"* %52
}

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %13 = load i64, i64* %12, align 4
  store i64 %13, i64* %6, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 8589934592
  %18 = icmp eq i96 %17, 0
  %19 = trunc i64 %13 to i32
  %20 = lshr i64 %13, 32
  %21 = trunc i64 %20 to i32
  br i1 %18, label %53, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = lshr i160 %27, 74
  %29 = trunc i160 %28 to i32
  %30 = and i32 %29, 7
  switch i32 %30, label %31 [
    i32 5, label %53
    i32 2, label %53
  ]

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %33 = tail call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* %32) #16
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %34, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %19, i32 %34) #16
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp sgt i32 %36, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %21, i32 %36) #16
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %42 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %6, align 8
  br label %53

53:                                               ; preds = %22, %22, %5, %31
  %54 = icmp eq i32 %4, 3
  br i1 %54, label %55, label %63

55:                                               ; preds = %53
  %56 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %57 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %57, i64 28
  %59 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %10) #16
  br i1 %60, label %63, label %61

61:                                               ; preds = %55
  %62 = call zeroext i1 @_ZN5blink15LayoutBlockFlow13HitTestFloatsERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7)
  br i1 %62, label %104, label %63

63:                                               ; preds = %61, %55, %53
  %64 = load i96, i96* %15, align 4
  %65 = and i96 %64, 17592186044416
  %66 = icmp eq i96 %65, 0
  br i1 %66, label %100, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %69 = call zeroext i1 @_ZNK5blink11LineBoxList7HitTestENS_18LineLayoutBoxModelERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LineBoxList"* %68, %"class.blink::LayoutObject"* %10, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7, i32 %4) #16
  br i1 %69, label %70, label %103

70:                                               ; preds = %67
  %71 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #16
  %72 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %73, i32 %75) #16
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %85) #16
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %81 to i64
  %95 = or i64 %93, %94
  store i64 %95, i64* %8, align 8
  %96 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %97 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %97, i64 62
  %99 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %98, align 8
  call void %99(%"class.blink::LayoutObject"* %10, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #16
  br label %104

100:                                              ; preds = %63
  %101 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %102 = tail call zeroext i1 @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlock"* %101, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 %4) #16
  br i1 %102, label %104, label %103

103:                                              ; preds = %100, %67
  br label %104

104:                                              ; preds = %100, %61, %103, %70
  %105 = phi i1 [ true, %70 ], [ false, %103 ], [ true, %61 ], [ true, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  ret i1 %105
}

declare i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow13HitTestFloatsERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %10, align 8
  %12 = icmp eq %"class.blink::FloatingObjects"* %11, null
  br i1 %12, label %221, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %11, i64 0, i32 0, i32 1
  %15 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %14, align 8
  %16 = icmp eq %"class.WTF::MallocedListHashSetNode"* %15, null
  br i1 %16, label %221, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %11, i64 0, i32 0, i32 2
  %19 = bitcast i64* %5 to i8*
  %20 = bitcast i64* %5 to i32*
  %21 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 1, i32 0
  %22 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  br label %26

26:                                               ; preds = %17, %175
  %27 = phi %"class.WTF::MallocedListHashSetNode"* [ null, %17 ], [ %34, %175 ]
  %28 = phi i64 [ 0, %17 ], [ %33, %175 ]
  %29 = icmp eq i64 %28, 0
  %30 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %27, i64 0, i32 1
  %31 = select i1 %29, %"class.WTF::MallocedListHashSetNode"** %18, %"class.WTF::MallocedListHashSetNode"** %30
  %32 = bitcast %"class.WTF::MallocedListHashSetNode"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %33 to %"class.WTF::MallocedListHashSetNode"*
  %35 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %36, i64 0, i32 3
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %175, label %41

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %36, i64 0, i32 0
  %43 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %43, i64 0, i32 0
  %45 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %44) #16
  br i1 %45, label %175, label %46

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %47 = load i64, i64* %22, align 4
  store i64 %47, i64* %5, align 8
  %48 = call i32 @_ZNK5blink15LayoutBlockFlow32XPositionForFloatIncludingMarginERKNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* dereferenceable(40) %36)
  %49 = load i96, i96* %24, align 4
  %50 = trunc i96 %49 to i32
  %51 = icmp slt i32 %50, 0
  %52 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %36, i64 0, i32 2, i32 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  br i1 %51, label %55, label %94

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %58 = icmp eq %"class.blink::ComputedStyle"* %57, null
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %54, i64 0, i32 0, i32 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = select i1 %58, %"class.blink::ComputedStyle"* %60, %"class.blink::ComputedStyle"* %57
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 9
  %63 = bitcast [20 x i8]* %62 to i160*
  %64 = load i160, i160* %63, align 8, !noalias !227
  %65 = lshr i160 %64, 102
  %66 = trunc i160 %65 to i8
  %67 = and i8 %66, 3
  %68 = bitcast %"class.blink::LayoutBox"* %54 to i8*
  switch i8 %67, label %69 [
    i8 0, label %78
    i8 1, label %70
  ]

69:                                               ; preds = %55
  br label %70

70:                                               ; preds = %69, %55
  %71 = phi { i64, i64 } [ { i64 1033, i64 0 }, %69 ], [ { i64 1041, i64 0 }, %55 ]
  %72 = extractvalue { i64, i64 } %71, 0
  %73 = extractvalue { i64, i64 } %71, 1
  %74 = getelementptr inbounds i8, i8* %68, i64 %73
  %75 = bitcast i8* %74 to %"class.blink::LayoutBoxModelObject"*
  %76 = and i64 %72, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %70, %55
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %75, %70 ], [ %56, %55 ]
  %80 = phi i8* [ %74, %70 ], [ %68, %55 ]
  %81 = phi i64 [ %72, %70 ], [ 1017, %55 ]
  %82 = bitcast i8* %80 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = add i64 %81, -1
  %85 = getelementptr i8, i8* %83, i64 %84
  %86 = bitcast i8* %85 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %87 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %86, align 8
  br label %90

88:                                               ; preds = %70
  %89 = inttoptr i64 %72 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %90

90:                                               ; preds = %88, %78
  %91 = phi %"class.blink::LayoutBoxModelObject"* [ %79, %78 ], [ %75, %88 ]
  %92 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %87, %78 ], [ %89, %88 ]
  %93 = call i32 %92(%"class.blink::LayoutBoxModelObject"* %91) #16
  br label %100

94:                                               ; preds = %46
  %95 = bitcast %"class.blink::LayoutBox"* %54 to i32 (%"class.blink::LayoutBox"*)***
  %96 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %95, align 8
  %97 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %96, i64 127
  %98 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %97, align 8
  %99 = call i32 %98(%"class.blink::LayoutBox"* %54) #16
  br label %100

100:                                              ; preds = %90, %94
  %101 = phi i32 [ %93, %90 ], [ %99, %94 ]
  %102 = icmp slt i32 %101, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %101) #16
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106
  %108 = load i32, i32* %20, align 8
  %109 = icmp slt i32 %48, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %48) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  %115 = load i32, i32* %21, align 4
  %116 = icmp slt i32 %107, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %107) #16
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !2
  %122 = zext i32 %121 to i64
  %123 = shl nuw i64 %122, 32
  %124 = zext i32 %114 to i64
  %125 = or i64 %123, %124
  store i64 %125, i64* %5, align 8
  %126 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  %127 = call zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"* %126, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 0) #16
  br i1 %127, label %129, label %128

128:                                              ; preds = %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  br label %175

129:                                              ; preds = %100
  %130 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  %131 = bitcast %"class.blink::LayoutBox"* %130 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %132 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %131, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %132, i64 147
  %134 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %133, align 8
  %135 = call %"class.blink::LayoutBox"* %134(%"class.blink::LayoutBox"* %130) #16
  %136 = icmp eq %"class.blink::LayoutBox"* %135, null
  br i1 %136, label %145, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %135, i64 0, i32 0, i32 0, i32 5, i32 0
  %139 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %139, i64 0, i32 0, i32 9
  %141 = bitcast [20 x i8]* %140 to i160*
  %142 = load i160, i160* %141, align 8
  %143 = and i160 %142, 15211807202738752817960438464512
  %144 = icmp eq i160 %143, 5070602400912917605986812821504
  br i1 %144, label %150, label %145, !prof !2

145:                                              ; preds = %137, %129
  %146 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 2
  %147 = bitcast %"class.blink::LayoutRect"* %146 to i64*
  %148 = load i64, i64* %147, align 4
  %149 = trunc i64 %148 to i32
  br label %177

150:                                              ; preds = %137
  %151 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %135, i64 0, i32 2, i32 1
  %152 = bitcast %"class.blink::LayoutSize"* %151 to i64*
  %153 = load i64, i64* %152, align 4
  %154 = trunc i64 %153 to i32
  %155 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 2, i32 1
  %156 = bitcast %"class.blink::LayoutSize"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = trunc i64 %157 to i32
  %159 = icmp sgt i32 %158, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %158) #16
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %130, i64 0, i32 2
  %166 = bitcast %"class.blink::LayoutRect"* %165 to i64*
  %167 = load i64, i64* %166, align 4
  %168 = trunc i64 %167 to i32
  %169 = icmp sgt i32 %168, -1
  %170 = select i1 %169, i32 -2147483648, i32 2147483647
  %171 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %164, i32 %168) #16
  %172 = extractvalue { i32, i1 } %171, 1
  %173 = extractvalue { i32, i1 } %171, 0
  %174 = select i1 %172, i32 %170, i32 %173, !prof !2
  br label %177

175:                                              ; preds = %26, %41, %128
  %176 = icmp eq %"class.WTF::MallocedListHashSetNode"* %15, %34
  br i1 %176, label %221, label %26

177:                                              ; preds = %145, %150
  %178 = phi i32 [ %149, %145 ], [ %174, %150 ]
  %179 = phi i64 [ %148, %145 ], [ %167, %150 ]
  %180 = lshr i64 %179, 32
  %181 = trunc i64 %180 to i32
  %182 = load i32, i32* %20, align 8
  %183 = icmp sgt i32 %178, -1
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %182, i32 %178) #16
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !2
  %189 = load i32, i32* %21, align 4
  %190 = icmp sgt i32 %181, -1
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %189, i32 %181) #16
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !2
  %196 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #16
  %197 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp sgt i32 %188, -1
  %200 = select i1 %199, i32 -2147483648, i32 2147483647
  %201 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %198, i32 %188) #16
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 %200, i32 %203, !prof !2
  %205 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %195, -1
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %206, i32 %195) #16
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  %213 = zext i32 %212 to i64
  %214 = shl nuw i64 %213, 32
  %215 = zext i32 %204 to i64
  %216 = or i64 %214, %215
  store i64 %216, i64* %7, align 8
  %217 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %218 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %218, i64 62
  %220 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %219, align 8
  call void %220(%"class.blink::LayoutObject"* %9, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  br label %221

221:                                              ; preds = %175, %13, %4, %177
  %222 = phi i1 [ false, %4 ], [ true, %177 ], [ false, %13 ], [ false, %175 ]
  ret i1 %222
}

declare zeroext i1 @_ZNK5blink11LineBoxList7HitTestENS_18LineLayoutBoxModelERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %104, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 31
  switch i32 %16, label %104 [
    i32 1, label %17
    i32 14, label %17
  ]

17:                                               ; preds = %8, %8
  %18 = and i160 %13, 2113929216
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %104

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %22 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, i64 23
  %24 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* %2) #16
  br i1 %25, label %26, label %104

26:                                               ; preds = %20
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 25
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %2) #16
  br i1 %30, label %104, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 20) #16
  br i1 %36, label %104, label %37

37:                                               ; preds = %31
  %38 = load i96, i96* %4, align 4
  %39 = lshr i96 %38, 75
  %40 = trunc i96 %39 to i32
  %41 = and i32 %40, 1
  %42 = or i32 %41, 2
  %43 = icmp eq i32 %42, 3
  br i1 %43, label %44, label %104

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %46 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %45) #16
  %47 = icmp eq %"class.blink::LayoutBoxModelObject"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %46, i64 0, i32 0, i32 4
  %50 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %49 to i96*
  %51 = load i96, i96* %50, align 4
  %52 = and i96 %51, 134217728
  %53 = icmp eq i96 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %46, i64 0, i32 0
  br label %56

56:                                               ; preds = %54, %98
  %57 = phi %"class.blink::LayoutObject"* [ %102, %98 ], [ %55, %54 ]
  %58 = phi i32 [ %100, %98 ], [ 0, %54 ]
  %59 = phi i32 [ %99, %98 ], [ 0, %54 ]
  %60 = bitcast %"class.blink::LayoutObject"* %57 to i1 (%"class.blink::LayoutObject"*)***
  %61 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %61, i64 26
  %63 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* nonnull %57) #16
  br i1 %64, label %71, label %65

65:                                               ; preds = %56, %98, %48, %44
  %66 = phi i32 [ 0, %44 ], [ 0, %48 ], [ %99, %98 ], [ %59, %56 ]
  %67 = phi i32 [ 0, %44 ], [ 0, %48 ], [ %100, %98 ], [ %58, %56 ]
  %68 = zext i32 %66 to i64
  %69 = shl nuw i64 %68, 32
  %70 = zext i32 %67 to i64
  br label %104

71:                                               ; preds = %56
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = lshr i96 %74, 75
  %76 = trunc i96 %75 to i32
  %77 = and i32 %76, 1
  %78 = or i32 %77, 2
  %79 = icmp eq i32 %78, 3
  br i1 %79, label %80, label %98

80:                                               ; preds = %71
  %81 = bitcast %"class.blink::LayoutObject"* %57 to %"class.blink::LayoutBoxModelObject"*
  %82 = tail call i64 @_ZNK5blink20LayoutBoxModelObject22RelativePositionOffsetEv(%"class.blink::LayoutBoxModelObject"* nonnull %81) #16
  %83 = trunc i64 %82 to i32
  %84 = lshr i64 %82, 32
  %85 = trunc i64 %84 to i32
  %86 = icmp slt i32 %83, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %83) #16
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  %92 = icmp slt i32 %85, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %85) #16
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  br label %98

98:                                               ; preds = %71, %80
  %99 = phi i32 [ %97, %80 ], [ %59, %71 ]
  %100 = phi i32 [ %91, %80 ], [ %58, %71 ]
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 7
  %102 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %101, align 8
  %103 = icmp eq %"class.blink::LayoutObject"* %102, null
  br i1 %103, label %65, label %56

104:                                              ; preds = %31, %8, %1, %17, %20, %26, %37, %65
  %105 = phi i64 [ %70, %65 ], [ 0, %37 ], [ 0, %31 ], [ 0, %26 ], [ 0, %20 ], [ 0, %17 ], [ 0, %1 ], [ 0, %8 ]
  %106 = phi i64 [ %69, %65 ], [ 0, %37 ], [ 0, %31 ], [ 0, %26 ], [ 0, %20 ], [ 0, %17 ], [ 0, %1 ], [ 0, %8 ]
  %107 = or i64 %106, %105
  ret i64 %107
}

declare i64 @_ZNK5blink20LayoutBoxModelObject22RelativePositionOffsetEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN5blink15FloatingObjects17LogicalLeftOffsetENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %6, i32 %2, i32 %1, i32 %3) #16
  br label %14

14:                                               ; preds = %8, %4, %12
  %15 = phi i32 [ %13, %12 ], [ %2, %8 ], [ %2, %4 ]
  ret i32 %15
}

declare i32 @_ZN5blink15FloatingObjects17LogicalLeftOffsetENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN5blink15FloatingObjects18LogicalRightOffsetENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %6, i32 %2, i32 %1, i32 %3) #16
  br label %14

14:                                               ; preds = %8, %4, %12
  %15 = phi i32 [ %13, %12 ], [ %2, %8 ], [ %2, %4 ]
  ret i32 %15
}

declare i32 @_ZN5blink15FloatingObjects18LogicalRightOffsetENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow39LogicalLeftFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN5blink15FloatingObjects34LogicalLeftOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %6, i32 %2, i32 %1, i32 %3) #16
  br label %14

14:                                               ; preds = %8, %4, %12
  %15 = phi i32 [ %13, %12 ], [ %2, %8 ], [ %2, %4 ]
  ret i32 %15
}

declare i32 @_ZN5blink15FloatingObjects34LogicalLeftOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow40LogicalRightFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %5, align 8
  %7 = icmp eq %"class.blink::FloatingObjects"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %6, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN5blink15FloatingObjects35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"* nonnull %6, i32 %2, i32 %1, i32 %3) #16
  br label %14

14:                                               ; preds = %8, %4, %12
  %15 = phi i32 [ %13, %12 ], [ %2, %8 ], [ %2, %4 ]
  ret i32 %15
}

declare i32 @_ZN5blink15FloatingObjects35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::FloatingObjects"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow39UpdateAncestorShouldPaintFloatingObjectERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 4294967296
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %9, align 8
  %11 = icmp eq %"struct.blink::FragmentData::RareData"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.blink::PaintLayer"* [ %14, %12 ], [ null, %8 ]
  %17 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %16, i64 0, i32 1
  %18 = bitcast [6 x i8]* %17 to i48*
  %19 = load i48, i48* %18, align 1
  %20 = and i48 %19, 1
  %21 = icmp ne i48 %20, 0
  br label %22

22:                                               ; preds = %1, %15
  %23 = phi i1 [ false, %1 ], [ %21, %15 ]
  %24 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %25 = icmp eq %"class.blink::LayoutBlock"* %24, null
  br i1 %25, label %179, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %"class.blink::LayoutBox"* %0 to i64
  %28 = shl i64 %27, 32
  %29 = xor i64 %28, -1
  %30 = add i64 %29, %27
  %31 = lshr i64 %30, 22
  %32 = xor i64 %31, %30
  %33 = shl i64 %32, 13
  %34 = xor i64 %33, -1
  %35 = add i64 %32, %34
  %36 = lshr i64 %35, 8
  %37 = xor i64 %36, %35
  %38 = mul i64 %37, 9
  %39 = lshr i64 %38, 15
  %40 = xor i64 %39, %38
  %41 = shl i64 %40, 27
  %42 = xor i64 %41, -1
  %43 = add i64 %40, %42
  %44 = lshr i64 %43, 31
  %45 = xor i64 %44, %43
  %46 = trunc i64 %45 to i32
  %47 = xor i32 %46, -1
  %48 = lshr i32 %46, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %26, %175
  %61 = phi %"class.blink::LayoutBlock"* [ %24, %26 ], [ %177, %175 ]
  %62 = phi i8 [ 0, %26 ], [ %176, %175 ]
  %63 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.blink::LayoutBlock"* %61 to i1 (%"class.blink::LayoutObject"*)***
  %65 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %65, i64 24
  %67 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* nonnull %63) #16
  br i1 %68, label %69, label %175

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 1, i32 0, i32 0, i32 0, i32 5
  %71 = bitcast %class.scoped_refptr* %70 to %"class.blink::FloatingObjects"**
  %72 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %71, align 8
  %73 = icmp eq %"class.blink::FloatingObjects"* %72, null
  br i1 %73, label %179, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %72, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %75, align 8
  %77 = icmp eq %"class.WTF::MallocedListHashSetNode"** %76, null
  %78 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %72, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  br i1 %77, label %107, label %80

80:                                               ; preds = %74
  %81 = add i32 %79, -1
  %82 = zext i32 %81 to i64
  %83 = and i32 %81, %46
  %84 = zext i32 %83 to i64
  br label %85

85:                                               ; preds = %97, %80
  %86 = phi i64 [ 0, %80 ], [ %99, %97 ]
  %87 = phi i64 [ %84, %80 ], [ %101, %97 ]
  %88 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %76, i64 %87
  %89 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %88, align 8
  %90 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %89 to i64
  switch i64 %90, label %91 [
    i64 0, label %107
    i64 -1, label %97
  ]

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %93, i64 0, i32 0
  %95 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %94, align 8
  %96 = icmp eq %"class.blink::LayoutBox"* %95, %0
  br i1 %96, label %102, label %97

97:                                               ; preds = %91, %85
  %98 = icmp eq i64 %86, 0
  %99 = select i1 %98, i64 %59, i64 %86
  %100 = add i64 %99, %87
  %101 = and i64 %100, %82
  br label %85

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %76, i64 %87
  %104 = icmp eq %"class.WTF::MallocedListHashSetNode"** %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = zext i32 %79 to i64
  br label %110

107:                                              ; preds = %85, %102, %74
  %108 = zext i32 %79 to i64
  %109 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %76, i64 %108
  br label %110

110:                                              ; preds = %107, %105
  %111 = phi i64 [ %106, %105 ], [ %108, %107 ]
  %112 = phi %"class.WTF::MallocedListHashSetNode"** [ %103, %105 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %76, i64 %111
  %114 = icmp eq %"class.WTF::MallocedListHashSetNode"** %112, %113
  br i1 %114, label %179, label %115

115:                                              ; preds = %110
  %116 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %112, align 8
  %117 = icmp eq %"class.WTF::MallocedListHashSetNode"* %116, null
  br i1 %117, label %179, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %119, align 8
  %121 = and i8 %62, 1
  %122 = icmp ne i8 %121, 0
  %123 = or i1 %23, %122
  br i1 %123, label %171, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 0, i32 0, i32 0
  %126 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %125) #16
  br i1 %126, label %167, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 0, i32 0, i32 0, i32 0, i32 4
  %129 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %128 to i96*
  %130 = load i96, i96* %129, align 4
  %131 = trunc i96 %130 to i32
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %141

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %120, i64 0, i32 2, i32 0, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %120, i64 0, i32 2, i32 1, i32 1, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %137) #16
  br label %149

141:                                              ; preds = %127
  %142 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %120, i64 0, i32 2, i32 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %120, i64 0, i32 2, i32 1, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %145) #16
  br label %149

149:                                              ; preds = %133, %141
  %150 = phi { i32, i1 } [ %140, %133 ], [ %148, %141 ]
  %151 = phi i32 [ %139, %133 ], [ %147, %141 ]
  %152 = extractvalue { i32, i1 } %150, 1
  %153 = extractvalue { i32, i1 } %150, 0
  %154 = select i1 %152, i32 %151, i32 %153
  %155 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %156 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %156, i64 0, i32 0, i32 9
  %158 = bitcast [20 x i8]* %157 to i160*
  %159 = load i160, i160* %158, align 8
  %160 = and i160 %159, 15211807202738752817960438464512
  %161 = icmp eq i160 %160, 0
  %162 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %163 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %61, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %164 = select i1 %161, i32* %162, i32* %163
  %165 = load i32, i32* %164, align 4
  %166 = icmp sgt i32 %154, %165
  br i1 %166, label %175, label %167

167:                                              ; preds = %149, %124
  %168 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %120, i64 0, i32 3
  %169 = load i8, i8* %168, align 8
  %170 = or i8 %169, 4
  store i8 %170, i8* %168, align 8
  br label %175

171:                                              ; preds = %118
  %172 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %120, i64 0, i32 3
  %173 = load i8, i8* %172, align 8
  %174 = and i8 %173, -5
  store i8 %174, i8* %172, align 8
  br label %175

175:                                              ; preds = %171, %167, %149, %60
  %176 = phi i8 [ %62, %60 ], [ %62, %149 ], [ 1, %167 ], [ %62, %171 ]
  %177 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %63, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %178 = icmp eq %"class.blink::LayoutBlock"* %177, null
  br i1 %178, label %179, label %60

179:                                              ; preds = %175, %115, %69, %110, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #16
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #16
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9
  %27 = load atomic i32, i32* %10 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %26
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #16
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %32
  tail call void @llvm.trap() #16
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %26, %40
  %43 = phi i32 [ %41, %40 ], [ %31, %26 ]
  %44 = load atomic i32, i32* %10 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %49 = add i32 %43, -1
  store i32 %49, i32* %48, align 4
  br label %50

50:                                               ; preds = %47, %42
  %51 = phi i32 [ %49, %47 ], [ %43, %42 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %84

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #16
  br label %84

54:                                               ; preds = %5, %1
  %55 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %56 = bitcast %"class.blink::ComputedStyle"** %55 to %"class.blink::ComputedStyleBase"**
  %57 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %57, i64 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %63, i64 0, i32 9, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #16
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %72
  tail call void @llvm.trap() #16
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %82, %67, %54, %53, %50
  %85 = phi %"class.WTF::StringImpl"* [ %7, %50 ], [ %7, %53 ], [ null, %54 ], [ %65, %67 ], [ %65, %82 ]
  ret %"class.WTF::StringImpl"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow23PropagatedStartPageNameEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #16
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #16
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %1, %25, %10, %5
  %28 = phi i64 [ 0, %1 ], [ %8, %5 ], [ %8, %10 ], [ %8, %25 ]
  %29 = inttoptr i64 %28 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #16
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #16
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9
  %27 = load atomic i32, i32* %10 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %26
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #16
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %32
  tail call void @llvm.trap() #16
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %26, %40
  %43 = phi i32 [ %41, %40 ], [ %31, %26 ]
  %44 = load atomic i32, i32* %10 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %49 = add i32 %43, -1
  store i32 %49, i32* %48, align 4
  br label %50

50:                                               ; preds = %47, %42
  %51 = phi i32 [ %49, %47 ], [ %43, %42 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %84

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #16
  br label %84

54:                                               ; preds = %5, %1
  %55 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %56 = bitcast %"class.blink::ComputedStyle"** %55 to %"class.blink::ComputedStyleBase"**
  %57 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %57, i64 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %63, i64 0, i32 9, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #16
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %72
  tail call void @llvm.trap() #16
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %82, %67, %54, %53, %50
  %85 = phi %"class.WTF::StringImpl"* [ %7, %50 ], [ %7, %53 ], [ null, %54 ], [ %65, %67 ], [ %65, %82 ]
  ret %"class.WTF::StringImpl"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow21PropagatedEndPageNameEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #16
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #16
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %1, %25, %10, %5
  %28 = phi i64 [ 0, %1 ], [ %8, %5 ], [ %8, %10 ], [ %8, %25 ]
  %29 = inttoptr i64 %28 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 134217728
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %267

8:                                                ; preds = %1
  %9 = and i96 %5, 8388608
  %10 = icmp ne i96 %9, 0
  %11 = and i96 %5, 113336795588871485128704
  %12 = icmp eq i96 %11, 75557863725914323419136
  %13 = or i1 %12, %10
  br i1 %13, label %267, label %14

14:                                               ; preds = %8
  %15 = and i96 %5, 8589934592
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = lshr i160 %22, 74
  %24 = trunc i160 %23 to i32
  %25 = and i32 %24, 7
  switch i32 %25, label %267 [
    i32 5, label %26
    i32 2, label %26
  ]

26:                                               ; preds = %14, %17, %17
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::LayoutObject"* %29 to i1 (%"class.blink::LayoutObject"*)***
  %33 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, i64 79
  %35 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* nonnull %29) #16
  br i1 %36, label %267, label %37

37:                                               ; preds = %26, %31
  %38 = tail call zeroext i1 @_ZNK5blink9LayoutBox12IsCustomItemEv(%"class.blink::LayoutBox"* %27) #16
  br i1 %38, label %267, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %43
  %44 = phi %"class.blink::LayoutObject"* [ %46, %43 ], [ %2, %39 ]
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 7
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 6, i32 0, i32 0
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  br i1 %49, label %43, label %50

50:                                               ; preds = %43, %39
  %51 = phi %"class.blink::Node"* [ %41, %39 ], [ %48, %43 ]
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %55, i64 0, i32 47, i32 0, i32 0
  %57 = load %"class.blink::Element"*, %"class.blink::Element"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %57, i64 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::Node"* %58, %41
  br i1 %59, label %267, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  br i1 %63, label %267, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.blink::LayoutObject"* %62 to i1 (%"class.blink::LayoutObject"*, i32)***
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* nonnull %62, i32 10) #16
  br i1 %69, label %267, label %70

70:                                               ; preds = %64
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, i64 92
  %73 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* nonnull %62, i32 27) #16
  br i1 %74, label %267, label %75

75:                                               ; preds = %70
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %77 = icmp eq %"class.blink::LayoutObject"* %76, null
  br i1 %77, label %267, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 5, i32 0
  %80 = bitcast %"class.blink::ComputedStyle"** %79 to %"class.blink::ComputedStyleBase"**
  %81 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %81, i64 0, i32 9
  %83 = bitcast [20 x i8]* %82 to i160*
  %84 = load i160, i160* %83, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %86 = bitcast %"class.blink::ComputedStyle"** %85 to %"class.blink::ComputedStyleBase"**
  %87 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %87, i64 0, i32 9
  %89 = bitcast [20 x i8]* %88 to i160*
  %90 = load i160, i160* %89, align 8
  %91 = xor i160 %90, %84
  %92 = and i160 %91, 15211807202738752817960438464512
  %93 = icmp eq i160 %92, 0
  br i1 %93, label %94, label %267

94:                                               ; preds = %78
  %95 = bitcast %"class.blink::LayoutObject"* %76 to i1 (%"class.blink::LayoutObject"*, i32)***
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, i64 92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* nonnull %76, i32 17) #16
  br i1 %99, label %267, label %100

100:                                              ; preds = %94
  %101 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %101, i64 0, i32 0, i32 9
  %103 = bitcast [20 x i8]* %102 to i160*
  %104 = load i160, i160* %103, align 8
  %105 = and i160 %104, 133143986176
  %106 = icmp eq i160 %105, 90194313216
  br i1 %106, label %267, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %101, i64 0, i32 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %111, i64 0, i32 2, i32 0, i32 0
  %113 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %113, i64 0, i32 45
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %159, label %118

118:                                              ; preds = %107
  %119 = load i96, i96* %4, align 4
  %120 = and i96 %119, 1207959552
  %121 = icmp eq i96 %120, 134217728
  br i1 %121, label %159, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %124, i64 92
  %126 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.blink::LayoutObject"* %2, i32 43) #16
  br i1 %127, label %159, label %128

128:                                              ; preds = %122
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %130 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, i64 92
  %131 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, align 8
  %132 = tail call zeroext i1 %131(%"class.blink::LayoutObject"* %2, i32 46) #16
  br i1 %132, label %153, label %133

133:                                              ; preds = %128
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %135 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %134, i64 92
  %136 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, align 8
  %137 = tail call zeroext i1 %136(%"class.blink::LayoutObject"* %2, i32 48) #16
  br i1 %137, label %153, label %138

138:                                              ; preds = %133
  %139 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, i64 92
  %141 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, align 8
  %142 = tail call zeroext i1 %141(%"class.blink::LayoutObject"* %2, i32 45) #16
  br i1 %142, label %153, label %143

143:                                              ; preds = %138
  %144 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, i64 92
  %146 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.blink::LayoutObject"* %2, i32 49) #16
  br i1 %147, label %153, label %148

148:                                              ; preds = %143
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %123, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %149, i64 92
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::LayoutObject"* %2, i32 50) #16
  br i1 %152, label %153, label %267

153:                                              ; preds = %128, %133, %138, %143, %148
  %154 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %155 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %154, align 8
  %156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %155, i64 24
  %157 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %156, align 8
  %158 = tail call zeroext i1 %157(%"class.blink::LayoutObject"* %2) #16
  br i1 %158, label %267, label %159

159:                                              ; preds = %118, %122, %107, %153
  %160 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %160, i64 0, i32 0, i32 3, i32 0, i32 0
  %162 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %162, i64 0, i32 2, i32 0, i32 0
  %164 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %164, i64 0, i32 2, i32 0, i32 0
  %166 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %166, i64 0, i32 45
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %212, label %171

171:                                              ; preds = %159
  %172 = load i96, i96* %4, align 4
  %173 = and i96 %172, 1207959552
  %174 = icmp eq i96 %173, 134217728
  br i1 %174, label %212, label %175

175:                                              ; preds = %171
  %176 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %177 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %176, align 8
  %178 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %177, i64 92
  %179 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %178, align 8
  %180 = tail call zeroext i1 %179(%"class.blink::LayoutObject"* %2, i32 43) #16
  br i1 %180, label %212, label %181

181:                                              ; preds = %175
  %182 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %176, align 8
  %183 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %182, i64 92
  %184 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %183, align 8
  %185 = tail call zeroext i1 %184(%"class.blink::LayoutObject"* %2, i32 46) #16
  br i1 %185, label %206, label %186

186:                                              ; preds = %181
  %187 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %176, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %187, i64 92
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %188, align 8
  %190 = tail call zeroext i1 %189(%"class.blink::LayoutObject"* %2, i32 48) #16
  br i1 %190, label %206, label %191

191:                                              ; preds = %186
  %192 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %176, align 8
  %193 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %192, i64 92
  %194 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %193, align 8
  %195 = tail call zeroext i1 %194(%"class.blink::LayoutObject"* %2, i32 45) #16
  br i1 %195, label %206, label %196

196:                                              ; preds = %191
  %197 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %176, align 8
  %198 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %197, i64 92
  %199 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %198, align 8
  %200 = tail call zeroext i1 %199(%"class.blink::LayoutObject"* %2, i32 49) #16
  br i1 %200, label %206, label %201

201:                                              ; preds = %196
  %202 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %176, align 8
  %203 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %202, i64 92
  %204 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %203, align 8
  %205 = tail call zeroext i1 %204(%"class.blink::LayoutObject"* %2, i32 50) #16
  br i1 %205, label %206, label %267

206:                                              ; preds = %181, %186, %191, %196, %201
  %207 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %208 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %207, align 8
  %209 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %208, i64 24
  %210 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %209, align 8
  %211 = tail call zeroext i1 %210(%"class.blink::LayoutObject"* %2) #16
  br i1 %211, label %267, label %212

212:                                              ; preds = %171, %175, %159, %206
  %213 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  %214 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %213, i64 0, i32 0, i32 9
  %215 = bitcast [20 x i8]* %214 to i160*
  %216 = load i160, i160* %215, align 8
  %217 = lshr i160 %216, 32
  %218 = trunc i160 %217 to i32
  %219 = and i32 %218, 30
  %220 = or i32 %219, 1
  %221 = icmp eq i32 %220, 15
  %222 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %213, i64 0, i32 0, i32 3, i32 0, i32 0
  %223 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %222, align 8
  br i1 %221, label %224, label %235

224:                                              ; preds = %212
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %223, i64 0, i32 2, i32 0, i32 0
  %226 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %226, i64 0, i32 13
  %228 = bitcast [3 x i8]* %227 to i24*
  %229 = load i24, i24* %228, align 8
  %230 = icmp slt i24 %229, 0
  br i1 %230, label %231, label %235

231:                                              ; preds = %224
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %226, i64 0, i32 10
  %233 = load i32, i32* %232, align 4
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %267, label %235

235:                                              ; preds = %212, %224, %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %223, i64 0, i32 3, i32 0, i32 0
  %237 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %237, i64 0, i32 1, i32 0, i32 0
  %239 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %239, i64 0, i32 2
  %241 = load i8, i8* %240, align 4
  %242 = and i8 %241, 3
  %243 = icmp eq i8 %242, 3
  br i1 %243, label %244, label %267

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %223, i64 0, i32 2, i32 0, i32 0
  %246 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %246, i64 0, i32 2, i32 0, i32 0
  %248 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %248, i64 0, i32 45
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, 536870912
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %267

253:                                              ; preds = %244
  %254 = load i96, i96* %4, align 4
  %255 = and i96 %254, 73786976294838206464
  %256 = icmp ne i96 %255, 0
  %257 = and i96 %254, 113336795588871485128704
  %258 = icmp ne i96 %257, 75557863725914323419136
  %259 = and i1 %258, %256
  %260 = and i160 %216, 16528282690043758247936
  %261 = icmp eq i160 %260, 0
  %262 = and i1 %261, %259
  br i1 %262, label %263, label %265, !prof !22

263:                                              ; preds = %253
  %264 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %2) #16
  br i1 %264, label %267, label %265

265:                                              ; preds = %253, %263
  %266 = tail call zeroext i1 @_ZNK5blink9LayoutBox28ShouldBeConsideredAsReplacedEv(%"class.blink::LayoutBox"* %27) #16
  br label %267

267:                                              ; preds = %244, %235, %78, %1, %17, %201, %148, %60, %75, %64, %265, %263, %8, %31, %37, %50, %70, %94, %100, %153, %206, %231
  %268 = phi i1 [ true, %244 ], [ true, %235 ], [ true, %231 ], [ true, %206 ], [ true, %153 ], [ true, %100 ], [ true, %94 ], [ true, %78 ], [ true, %70 ], [ true, %50 ], [ true, %37 ], [ true, %31 ], [ true, %17 ], [ true, %8 ], [ true, %1 ], [ true, %263 ], [ %266, %265 ], [ true, %64 ], [ true, %75 ], [ true, %60 ], [ true, %148 ], [ true, %201 ]
  ret i1 %268
}

declare zeroext i1 @_ZNK5blink9LayoutBox12IsCustomItemEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox28ShouldBeConsideredAsReplacedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 17592186044416
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %13, align 8
  %15 = icmp eq %"class.blink::FloatingObjects"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %14, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN5blink15FloatingObjects24ClearLineBoxTreePointersEv(%"class.blink::FloatingObjects"* nonnull %14) #16
  br label %21

21:                                               ; preds = %12, %16, %20
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  tail call void @_ZN5blink11LineBoxList17DeleteLineBoxTreeEv(%"class.blink::LineBoxList"* %22) #16
  br label %23

23:                                               ; preds = %6, %21
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"* %24, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %4, i1 zeroext %5) #16
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call i8* @_ZN5blink9InlineBoxnwEm(i64 160) #16
  %4 = bitcast i8* %3 to %"class.blink::RootInlineBox"*
  tail call void @_ZN5blink13RootInlineBoxC1ENS_14LineLayoutItemE(%"class.blink::RootInlineBox"* %4, %"class.blink::LayoutObject"* %2) #16
  ret %"class.blink::RootInlineBox"* %4
}

declare i8* @_ZN5blink9InlineBoxnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink13RootInlineBoxC1ENS_14LineLayoutItemE(%"class.blink::RootInlineBox"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink27LayoutMultiColumnFlowThread18EvacuateAndDestroyEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #1

declare %"class.blink::LayoutMultiColumnFlowThread"* @_ZN5blink27LayoutMultiColumnFlowThread15CreateAnonymousERNS_8DocumentERKNS_13ComputedStyleEb(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink27LayoutMultiColumnFlowThread8PopulateEv(%"class.blink::LayoutMultiColumnFlowThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow32SimplifiedNormalFlowInlineLayoutEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode.3128", align 8
  %3 = alloca %"class.WTF::LinkedHashSet.3118", align 8
  %4 = alloca %"class.blink::InlineWalker", align 8
  %5 = alloca %"class.blink::RootInlineBox"*, align 8
  %6 = alloca %"class.WTF::HashMap.3131", align 8
  %7 = bitcast %"class.WTF::LinkedHashSet.3118"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 20, i1 false) #16
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet.3118", %"class.WTF::LinkedHashSet.3118"* %3, i64 0, i32 1
  %9 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %2 to i8*
  %10 = bitcast %"class.WTF::VectorBackedLinkedList.3124"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #16
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %8, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.3125"* %11, %"class.WTF::VectorBackedLinkedListNode.3128"* nonnull dereferenceable(16) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  %12 = bitcast %"class.blink::InlineWalker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %4, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::InlineWalker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"* nonnull %4, %"class.blink::LayoutObject"* %15)
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::RootInlineBox"** %5 to i8*
  br label %33

21:                                               ; preds = %78, %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %22 = bitcast %"class.WTF::HashMap.3131"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.WTF::HashMap.3131", %"class.WTF::HashMap.3131"* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::HashMap.3131", %"class.WTF::HashMap.3131"* %6, i64 0, i32 0, i32 1
  %25 = bitcast %"class.WTF::HashMap.3131"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 20, i1 false) #16
  %26 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %11, i32 0) #16, !noalias !230
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4, !noalias !230
  %29 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %11, i32 %28) #16, !noalias !230
  %30 = getelementptr inbounds %"class.WTF::LinkedHashSet.3118", %"class.WTF::LinkedHashSet.3118"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %11, i32 0) #16, !noalias !233
  %32 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3128"* %29, %31
  br i1 %32, label %111, label %128

33:                                               ; preds = %19, %78
  %34 = phi %"class.blink::LayoutObject"* [ %17, %19 ], [ %80, %78 ]
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 113336795588871485128704
  %39 = icmp eq i96 %38, 75557863725914323419136
  %40 = and i96 %37, 1082130432
  %41 = icmp eq i96 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %64, label %43

43:                                               ; preds = %33
  %44 = and i96 %37, 63
  %45 = icmp eq i96 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.blink::LayoutObject"* %34 to void (%"class.blink::LayoutObject"*)***
  %48 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %48, i64 54
  %50 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %49, align 8
  call void %50(%"class.blink::LayoutObject"* nonnull %34) #16
  %51 = load i96, i96* %36, align 4
  br label %52

52:                                               ; preds = %43, %46
  %53 = phi i96 [ %37, %43 ], [ %51, %46 ]
  %54 = and i96 %53, 268435456
  %55 = icmp eq i96 %54, 0
  br i1 %55, label %56, label %78

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 2, i32 1, i32 1
  %58 = bitcast i8* %57 to %"class.blink::InlineBox"**
  %59 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %58, align 8
  %60 = icmp eq %"class.blink::InlineBox"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %56
  %62 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %59) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  store %"class.blink::RootInlineBox"* %62, %"class.blink::RootInlineBox"** %5, align 8
  %63 = call { %"class.blink::RootInlineBox"**, i8 } @_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE6insertIS3_EENS7_9AddResultEOT_(%"class.WTF::LinkedHashSet.3118"* nonnull %3, %"class.blink::RootInlineBox"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %78

64:                                               ; preds = %33
  %65 = and i96 %37, 33554432
  %66 = icmp eq i96 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %64
  %68 = bitcast %"class.blink::LayoutObject"* %34 to i1 (%"class.blink::LayoutObject"*)***
  %69 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %69, i64 26
  %71 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %70, align 8
  %72 = call zeroext i1 %71(%"class.blink::LayoutObject"* nonnull %34) #16
  %73 = xor i1 %72, true
  %74 = load i8, i8* %14, align 8
  %75 = icmp ne i8 %74, 0
  %76 = or i1 %75, %73
  br i1 %76, label %78, label %77

77:                                               ; preds = %64, %67
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* nonnull %34)
  br label %78

78:                                               ; preds = %67, %52, %56, %77, %61
  %79 = call %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"* nonnull %4)
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %81 = icmp eq %"class.blink::LayoutObject"* %80, null
  br i1 %81, label %21, label %33

82:                                               ; preds = %128
  %83 = load %"struct.WTF::KeyValuePair.3135"*, %"struct.WTF::KeyValuePair.3135"** %23, align 8
  %84 = bitcast %"struct.WTF::KeyValuePair.3135"* %83 to i8*
  %85 = icmp eq %"struct.WTF::KeyValuePair.3135"* %83, null
  br i1 %85, label %111, label %86, !prof !44

86:                                               ; preds = %82
  %87 = load i32, i32* %24, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %110, label %89

89:                                               ; preds = %86
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %107, %89
  %92 = phi i64 [ 0, %89 ], [ %108, %107 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.3135", %"struct.WTF::KeyValuePair.3135"* %83, i64 %92, i32 0
  %94 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %93, align 8
  %95 = icmp eq %"class.blink::InlineTextBox"* %94, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.3135", %"struct.WTF::KeyValuePair.3135"* %83, i64 %92, i32 1, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %97, align 8
  %99 = icmp eq %"class.blink::SimpleFontData"** %98, null
  %100 = bitcast %"class.blink::SimpleFontData"** %98 to i8*
  br i1 %99, label %107, label %101, !prof !44

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.3135", %"struct.WTF::KeyValuePair.3135"* %83, i64 %92, i32 1, i32 0, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %101
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %101
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #16
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %97, align 8
  br label %107

107:                                              ; preds = %106, %96, %91
  %108 = add nuw nsw i64 %92, 1
  %109 = icmp eq i64 %108, %90
  br i1 %109, label %110, label %91

110:                                              ; preds = %107, %86
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %84) #16
  store %"struct.WTF::KeyValuePair.3135"* null, %"struct.WTF::KeyValuePair.3135"** %23, align 8
  br label %111

111:                                              ; preds = %21, %82, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16
  %112 = getelementptr inbounds %"class.WTF::LinkedHashSet.3118", %"class.WTF::LinkedHashSet.3118"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %112, align 8
  %114 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3128"* %113, null
  %115 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %113 to i8*
  br i1 %114, label %122, label %116, !prof !44

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::LinkedHashSet.3118", %"class.WTF::LinkedHashSet.3118"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120, !prof !2

120:                                              ; preds = %116
  store i32 0, i32* %117, align 4
  br label %121

121:                                              ; preds = %120, %116
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %115) #16
  store %"class.WTF::VectorBackedLinkedListNode.3128"* null, %"class.WTF::VectorBackedLinkedListNode.3128"** %112, align 8
  br label %122

122:                                              ; preds = %121, %111
  %123 = load %"struct.WTF::KeyValuePair.3123"*, %"struct.WTF::KeyValuePair.3123"** %30, align 8
  %124 = icmp eq %"struct.WTF::KeyValuePair.3123"* %123, null
  br i1 %124, label %127, label %125, !prof !44

125:                                              ; preds = %122
  %126 = bitcast %"struct.WTF::KeyValuePair.3123"* %123 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %126) #16
  store %"struct.WTF::KeyValuePair.3123"* null, %"struct.WTF::KeyValuePair.3123"** %30, align 8
  br label %127

127:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #16
  ret void

128:                                              ; preds = %21, %128
  %129 = phi %"class.WTF::VectorBackedLinkedListNode.3128"* [ %139, %128 ], [ %29, %21 ]
  %130 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %129, i64 0, i32 2
  %131 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %130, align 8
  %132 = bitcast %"class.blink::RootInlineBox"* %131 to %"class.blink::InlineFlowBox"*
  %133 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %131, i64 0, i32 5, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %131, i64 0, i32 6, i32 0
  %136 = load i32, i32* %135, align 4
  call void @_ZN5blink13InlineFlowBox15ComputeOverflowENS_10LayoutUnitES1_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EE(%"class.blink::InlineFlowBox"* %132, i32 %134, i32 %136, %"class.WTF::HashMap.3131"* nonnull dereferenceable(24) %6) #16
  %137 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %129, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %11, i32 %138) #16
  %140 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3128"* %139, %31
  br i1 %140, label %82, label %128
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 1, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 2, i32 6
  %7 = bitcast %"class.blink::UntracedMember"* %6 to %"class.blink::LayoutObject"**
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %104, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*)***
  %12 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %12, i64 26
  %14 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::LayoutObject"* nonnull %8) #16
  br i1 %15, label %104, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  %22 = and i96 %19, 1115684864
  %23 = icmp ne i96 %22, 0
  %24 = or i1 %23, %21
  br i1 %24, label %104, label %25

25:                                               ; preds = %16
  %26 = ptrtoint %"class.blink::LayoutObject"* %8 to i64
  br label %27

27:                                               ; preds = %99, %25
  %28 = phi i96 [ %100, %99 ], [ %19, %25 ]
  %29 = phi %"class.blink::LayoutObject"* [ %82, %99 ], [ %8, %25 ]
  %30 = phi i64 [ %81, %99 ], [ %26, %25 ]
  %31 = and i96 %28, 113336795588871485128704
  %32 = icmp eq i96 %31, 75557863725914323419136
  %33 = and i96 %28, 1115684864
  %34 = icmp ne i96 %33, 0
  %35 = or i1 %34, %32
  br i1 %35, label %48, label %36

36:                                               ; preds = %27
  %37 = inttoptr i64 %30 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %38 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %38, i64 13
  %40 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call %"class.blink::LayoutObjectChildList"* %40(%"class.blink::LayoutObject"* nonnull %29) #16
  %42 = icmp eq %"class.blink::LayoutObjectChildList"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %41, i64 0, i32 0
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = ptrtoint %"class.blink::LayoutObject"* %45 to i64
  %47 = icmp eq %"class.blink::LayoutObject"* %45, null
  br i1 %47, label %48, label %80

48:                                               ; preds = %43, %36, %27
  %49 = phi i64 [ %46, %43 ], [ 0, %27 ], [ 0, %36 ]
  %50 = inttoptr i64 %30 to i1 (%"class.blink::LayoutObject"*)***
  %51 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %51, i64 26
  %53 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* nonnull %29) #16
  br i1 %54, label %101, label %55

55:                                               ; preds = %48
  %56 = icmp ne %"class.blink::LayoutObject"* %29, null
  %57 = icmp ne %"class.blink::LayoutObject"* %29, %1
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %80

59:                                               ; preds = %55, %72
  %60 = phi %"class.blink::LayoutObject"* [ %68, %72 ], [ %29, %55 ]
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 9
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = ptrtoint %"class.blink::LayoutObject"* %62 to i64
  br label %80

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 7
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = icmp ne %"class.blink::LayoutObject"* %68, null
  %70 = icmp ne %"class.blink::LayoutObject"* %68, %1
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %101

72:                                               ; preds = %66
  %73 = bitcast %"class.blink::LayoutObject"* %68 to i1 (%"class.blink::LayoutObject"*)***
  %74 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %74, i64 26
  %76 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.blink::LayoutObject"* nonnull %68) #16
  br i1 %77, label %78, label %59

78:                                               ; preds = %72
  %79 = ptrtoint %"class.blink::LayoutObject"* %68 to i64
  br label %80

80:                                               ; preds = %78, %64, %55, %43
  %81 = phi i64 [ %46, %43 ], [ %65, %64 ], [ %79, %78 ], [ %49, %55 ]
  %82 = inttoptr i64 %81 to %"class.blink::LayoutObject"*
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %101, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 4
  %86 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %85 to i96*
  %87 = load i96, i96* %86, align 4
  %88 = and i96 %87, 113336795588871485128704
  %89 = icmp eq i96 %88, 75557863725914323419136
  %90 = and i96 %87, 1115684864
  %91 = icmp ne i96 %90, 0
  %92 = or i1 %91, %89
  br i1 %92, label %101, label %93

93:                                               ; preds = %84
  %94 = inttoptr i64 %81 to i1 (%"class.blink::LayoutObject"*)***
  %95 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %95, i64 26
  %97 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* nonnull %82) #16
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = load i96, i96* %86, align 4
  br label %27

101:                                              ; preds = %93, %84, %80, %48, %66
  %102 = phi i64 [ 0, %66 ], [ %81, %93 ], [ %30, %48 ], [ %81, %84 ], [ 0, %80 ]
  %103 = inttoptr i64 %102 to %"class.blink::LayoutObject"*
  br label %104

104:                                              ; preds = %2, %10, %16, %101
  %105 = phi %"class.blink::LayoutObject"* [ %103, %101 ], [ %8, %10 ], [ null, %2 ], [ %8, %16 ]
  store %"class.blink::LayoutObject"* %105, %"class.blink::LayoutObject"** %4, align 8
  ret void
}

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::RootInlineBox"**, i8 } @_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE6insertIS3_EENS7_9AddResultEOT_(%"class.WTF::LinkedHashSet.3118"*, %"class.blink::RootInlineBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet.3118", %"class.WTF::LinkedHashSet.3118"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %4, i32 0) #16, !noalias !236
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet.3118", %"class.WTF::LinkedHashSet.3118"* %0, i64 0, i32 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.3123"*, i8 } @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.3120"* %6, %"class.blink::RootInlineBox"** dereferenceable(8) %1, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #16
  %8 = extractvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } %7, 0
  %9 = extractvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } %7, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = tail call { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } @_ZN3WTF22VectorBackedLinkedListIPN5blink13RootInlineBoxENS_18PartitionAllocatorEE6insertIS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_(%"class.WTF::VectorBackedLinkedList.3124"* %3, %"class.WTF::VectorBackedLinkedListNode.3128"* %5, %"class.WTF::VectorBackedLinkedList.3124"* %3, %"class.blink::RootInlineBox"** dereferenceable(8) %1) #16
  %14 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } %13, 0
  %15 = extractvalue { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } %13, 1
  %16 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3128"* %14 to i64
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %15, i64 0, i32 0
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %17, i32 0) #16
  %19 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3128"* %18 to i64
  %20 = sub i64 %16, %19
  %21 = lshr exact i64 %20, 4
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %8, i64 0, i32 1
  store i32 %22, i32* %23, align 8
  br label %28

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %8, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %4, i32 %26) #16
  br label %28

28:                                               ; preds = %12, %24
  %29 = phi %"class.WTF::VectorBackedLinkedListNode.3128"* [ %14, %12 ], [ %27, %24 ]
  %30 = phi i8 [ 1, %12 ], [ 0, %24 ]
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %29, i64 0, i32 2
  %32 = insertvalue { %"class.blink::RootInlineBox"**, i8 } undef, %"class.blink::RootInlineBox"** %31, 0
  %33 = insertvalue { %"class.blink::RootInlineBox"**, i8 } %32, i8 %30, 1
  ret { %"class.blink::RootInlineBox"**, i8 } %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 2
  %7 = ptrtoint %"class.blink::LayoutObject"* %5 to i64
  %8 = icmp ne i8* %6, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = load i8, i8* %6, align 1, !range !21
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  %14 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %14, label %93, label %15

15:                                               ; preds = %12, %87
  %16 = phi %"class.blink::LayoutObject"* [ %76, %87 ], [ %5, %12 ]
  %17 = phi i8 [ %75, %87 ], [ 0, %12 ]
  %18 = phi i64 [ %74, %87 ], [ %7, %12 ]
  br i1 %13, label %47, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 113336795588871485128704
  %24 = icmp eq i96 %23, 75557863725914323419136
  %25 = and i96 %22, 1115684864
  %26 = icmp ne i96 %25, 0
  %27 = or i1 %26, %24
  br i1 %27, label %40, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %18 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %30 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %30, i64 13
  %32 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call %"class.blink::LayoutObjectChildList"* %32(%"class.blink::LayoutObject"* nonnull %16) #16
  %34 = icmp eq %"class.blink::LayoutObjectChildList"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %33, i64 0, i32 0
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = ptrtoint %"class.blink::LayoutObject"* %37 to i64
  %39 = icmp eq %"class.blink::LayoutObject"* %37, null
  br i1 %39, label %40, label %73

40:                                               ; preds = %35, %28, %19
  %41 = phi i64 [ %38, %35 ], [ 0, %19 ], [ 0, %28 ]
  %42 = inttoptr i64 %18 to i1 (%"class.blink::LayoutObject"*)***
  %43 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, i64 26
  %45 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* nonnull %16) #16
  br i1 %46, label %93, label %47

47:                                               ; preds = %40, %15
  %48 = phi i64 [ %41, %40 ], [ 0, %15 ]
  %49 = icmp ne %"class.blink::LayoutObject"* %16, null
  %50 = icmp ne %"class.blink::LayoutObject"* %16, %3
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %47, %65
  %53 = phi %"class.blink::LayoutObject"* [ %61, %65 ], [ %16, %47 ]
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 9
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = ptrtoint %"class.blink::LayoutObject"* %55 to i64
  br label %73

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp ne %"class.blink::LayoutObject"* %61, null
  %63 = icmp ne %"class.blink::LayoutObject"* %61, %3
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %93

65:                                               ; preds = %59
  %66 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutObject"*)***
  %67 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %67, i64 26
  %69 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* nonnull %61) #16
  br i1 %70, label %71, label %52

71:                                               ; preds = %65
  %72 = ptrtoint %"class.blink::LayoutObject"* %61 to i64
  br label %73

73:                                               ; preds = %71, %57, %47, %35
  %74 = phi i64 [ %38, %35 ], [ %58, %57 ], [ %72, %71 ], [ %48, %47 ]
  %75 = phi i8 [ %17, %35 ], [ %17, %57 ], [ 1, %71 ], [ %17, %47 ]
  %76 = inttoptr i64 %74 to %"class.blink::LayoutObject"*
  %77 = icmp eq i64 %74, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 4
  %80 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %79 to i96*
  %81 = load i96, i96* %80, align 4
  %82 = and i96 %81, 113336795588871485128704
  %83 = icmp eq i96 %82, 75557863725914323419136
  %84 = and i96 %81, 1115684864
  %85 = icmp ne i96 %84, 0
  %86 = or i1 %85, %83
  br i1 %86, label %93, label %87

87:                                               ; preds = %78
  %88 = inttoptr i64 %74 to i1 (%"class.blink::LayoutObject"*)***
  %89 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %88, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, i64 26
  %91 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.blink::LayoutObject"* nonnull %76) #16
  br i1 %92, label %93, label %15

93:                                               ; preds = %87, %78, %73, %40, %59, %12
  %94 = phi i64 [ 0, %12 ], [ 0, %59 ], [ 0, %73 ], [ %74, %78 ], [ %18, %40 ], [ %74, %87 ]
  %95 = phi i8 [ 0, %12 ], [ %17, %59 ], [ %75, %73 ], [ %75, %78 ], [ 1, %40 ], [ %75, %87 ]
  br i1 %8, label %96, label %98

96:                                               ; preds = %93
  %97 = and i8 %95, 1
  store i8 %97, i8* %6, align 1
  br label %98

98:                                               ; preds = %93, %96
  %99 = inttoptr i64 %94 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %99, %"class.blink::LayoutObject"** %4, align 8
  ret %"class.blink::LayoutObject"* %99
}

declare void @_ZN5blink13InlineFlowBox15ComputeOverflowENS_10LayoutUnitES1_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EE(%"class.blink::InlineFlowBox"*, i32, i32, %"class.WTF::HashMap.3131"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink15LayoutBlockFlow34RecalcInlineChildrenLayoutOverflowEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.3137", align 8
  %3 = alloca %"class.blink::InlineWalker", align 8
  %4 = alloca %"class.blink::RootInlineBox"*, align 8
  %5 = alloca %"class.WTF::HashMap.3131", align 8
  %6 = bitcast %"class.WTF::HashSet.3137"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashSet.3137", %"class.WTF::HashSet.3137"* %2, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashSet.3137", %"class.WTF::HashSet.3137"* %2, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashSet.3137", %"class.WTF::HashSet.3137"* %2, i64 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::HashSet.3137"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #16
  %11 = bitcast %"class.blink::InlineWalker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %3, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::InlineWalker"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"* nonnull %3, %"class.blink::LayoutObject"* %13)
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.blink::RootInlineBox"** %4 to i8*
  %19 = getelementptr inbounds %"class.WTF::HashSet.3137", %"class.WTF::HashSet.3137"* %2, i64 0, i32 0
  br label %49

20:                                               ; preds = %86
  %21 = load i32, i32* %9, align 4
  %22 = load %"class.blink::RootInlineBox"**, %"class.blink::RootInlineBox"*** %7, align 8
  %23 = load i32, i32* %8, align 8
  %24 = icmp eq i32 %21, 0
  br label %25

25:                                               ; preds = %20, %1
  %26 = phi i32 [ 0, %1 ], [ %23, %20 ]
  %27 = phi %"class.blink::RootInlineBox"** [ null, %1 ], [ %22, %20 ]
  %28 = phi i1 [ true, %1 ], [ %24, %20 ]
  %29 = phi i8 [ 0, %1 ], [ %87, %20 ]
  %30 = phi i8 [ 0, %1 ], [ %88, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %31 = bitcast %"class.WTF::HashMap.3131"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.WTF::HashMap.3131", %"class.WTF::HashMap.3131"* %5, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::HashMap.3131", %"class.WTF::HashMap.3131"* %5, i64 0, i32 0, i32 1
  %34 = bitcast %"class.WTF::HashMap.3131"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 20, i1 false) #16
  %35 = zext i32 %26 to i64
  %36 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %27, i64 %35
  br i1 %28, label %121, label %37

37:                                               ; preds = %25
  %38 = icmp eq i32 %26, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %37, %43
  %40 = phi %"class.blink::RootInlineBox"** [ %44, %43 ], [ %27, %37 ]
  %41 = bitcast %"class.blink::RootInlineBox"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %46 [
    i64 -1, label %43
    i64 0, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %40, i64 1
  %45 = icmp eq %"class.blink::RootInlineBox"** %44, %36
  br i1 %45, label %121, label %39

46:                                               ; preds = %39, %37
  %47 = phi %"class.blink::RootInlineBox"** [ %27, %37 ], [ %40, %39 ]
  %48 = icmp eq %"class.blink::RootInlineBox"** %47, %36
  br i1 %48, label %121, label %131

49:                                               ; preds = %17, %86
  %50 = phi %"class.blink::LayoutObject"* [ %15, %17 ], [ %90, %86 ]
  %51 = phi i8 [ 0, %17 ], [ %88, %86 ]
  %52 = phi i8 [ 0, %17 ], [ %87, %86 ]
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 113336795588871485128704
  %57 = icmp eq i96 %56, 75557863725914323419136
  br i1 %57, label %86, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.blink::LayoutObject"* %50 to i16 (%"class.blink::LayoutObject"*)***
  %60 = load i16 (%"class.blink::LayoutObject"*)**, i16 (%"class.blink::LayoutObject"*)*** %59, align 8
  %61 = getelementptr inbounds i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %60, i64 52
  %62 = load i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %61, align 8
  %63 = call i16 %62(%"class.blink::LayoutObject"* nonnull %50) #16
  %64 = trunc i16 %63 to i8
  %65 = lshr i16 %63, 8
  %66 = trunc i16 %65 to i8
  %67 = or i8 %52, %64
  %68 = or i8 %51, %66
  %69 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutObject"*)***
  %70 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %70, i64 23
  %72 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %71, align 8
  %73 = call zeroext i1 %72(%"class.blink::LayoutObject"* nonnull %50) #16
  br i1 %73, label %74, label %86

74:                                               ; preds = %58
  %75 = load i96, i96* %54, align 4
  %76 = and i96 %75, 268435456
  %77 = icmp eq i96 %76, 0
  br i1 %77, label %78, label %86

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 2, i32 1, i32 1
  %80 = bitcast i8* %79 to %"class.blink::InlineBox"**
  %81 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %80, align 8
  %82 = icmp eq %"class.blink::InlineBox"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %84 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %81) #16
  store %"class.blink::RootInlineBox"* %84, %"class.blink::RootInlineBox"** %4, align 8
  %85 = call { %"class.blink::RootInlineBox"**, i8 } @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.3138"* nonnull %19, %"class.blink::RootInlineBox"** nonnull dereferenceable(8) %4, %"class.blink::RootInlineBox"** nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %86

86:                                               ; preds = %58, %74, %78, %83, %49
  %87 = phi i8 [ %52, %49 ], [ %67, %58 ], [ %67, %78 ], [ %67, %83 ], [ %67, %74 ]
  %88 = phi i8 [ %51, %49 ], [ %68, %58 ], [ %68, %78 ], [ %68, %83 ], [ %68, %74 ]
  %89 = call %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"* nonnull %3)
  %90 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %91 = icmp eq %"class.blink::LayoutObject"* %90, null
  br i1 %91, label %20, label %49

92:                                               ; preds = %131, %149, %146
  %93 = load %"struct.WTF::KeyValuePair.3135"*, %"struct.WTF::KeyValuePair.3135"** %32, align 8
  %94 = bitcast %"struct.WTF::KeyValuePair.3135"* %93 to i8*
  %95 = icmp eq %"struct.WTF::KeyValuePair.3135"* %93, null
  br i1 %95, label %121, label %96, !prof !44

96:                                               ; preds = %92
  %97 = load i32, i32* %33, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %120, label %99

99:                                               ; preds = %96
  %100 = zext i32 %97 to i64
  br label %101

101:                                              ; preds = %117, %99
  %102 = phi i64 [ 0, %99 ], [ %118, %117 ]
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.3135", %"struct.WTF::KeyValuePair.3135"* %93, i64 %102, i32 0
  %104 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %103, align 8
  %105 = icmp eq %"class.blink::InlineTextBox"* %104, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  br i1 %105, label %117, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3135", %"struct.WTF::KeyValuePair.3135"* %93, i64 %102, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %107, align 8
  %109 = icmp eq %"class.blink::SimpleFontData"** %108, null
  %110 = bitcast %"class.blink::SimpleFontData"** %108 to i8*
  br i1 %109, label %117, label %111, !prof !44

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.3135", %"struct.WTF::KeyValuePair.3135"* %93, i64 %102, i32 1, i32 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115, !prof !2

115:                                              ; preds = %111
  store i32 0, i32* %112, align 4
  br label %116

116:                                              ; preds = %115, %111
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %110) #16
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %107, align 8
  br label %117

117:                                              ; preds = %116, %106, %101
  %118 = add nuw nsw i64 %102, 1
  %119 = icmp eq i64 %118, %100
  br i1 %119, label %120, label %101

120:                                              ; preds = %117, %96
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #16
  store %"struct.WTF::KeyValuePair.3135"* null, %"struct.WTF::KeyValuePair.3135"** %32, align 8
  br label %121

121:                                              ; preds = %43, %25, %46, %92, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  %122 = load %"class.blink::RootInlineBox"**, %"class.blink::RootInlineBox"*** %7, align 8
  %123 = icmp eq %"class.blink::RootInlineBox"** %122, null
  br i1 %123, label %126, label %124, !prof !44

124:                                              ; preds = %121
  %125 = bitcast %"class.blink::RootInlineBox"** %122 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %125) #16
  store %"class.blink::RootInlineBox"** null, %"class.blink::RootInlineBox"*** %7, align 8
  br label %126

126:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %127 = zext i8 %30 to i16
  %128 = shl nuw i16 %127, 8
  %129 = zext i8 %29 to i16
  %130 = or i16 %128, %129
  ret i16 %130

131:                                              ; preds = %46, %149
  %132 = phi %"class.blink::RootInlineBox"** [ %143, %149 ], [ %47, %46 ]
  %133 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %133, i64 0, i32 0, i32 0
  call void @_ZN5blink9InlineBox26ClearKnownToHaveNoOverflowEv(%"class.blink::InlineBox"* %134) #16
  %135 = bitcast %"class.blink::RootInlineBox"* %133 to %"class.blink::InlineFlowBox"*
  %136 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %133, i64 0, i32 5, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %133, i64 0, i32 6, i32 0
  %139 = load i32, i32* %138, align 4
  call void @_ZN5blink13InlineFlowBox15ComputeOverflowENS_10LayoutUnitES1_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EE(%"class.blink::InlineFlowBox"* %135, i32 %137, i32 %139, %"class.WTF::HashMap.3131"* nonnull dereferenceable(24) %5) #16
  %140 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %132, i64 1
  %141 = icmp eq %"class.blink::RootInlineBox"** %140, %36
  br i1 %141, label %92, label %142

142:                                              ; preds = %131, %146
  %143 = phi %"class.blink::RootInlineBox"** [ %147, %146 ], [ %140, %131 ]
  %144 = bitcast %"class.blink::RootInlineBox"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  switch i64 %145, label %149 [
    i64 -1, label %146
    i64 0, label %146
  ]

146:                                              ; preds = %142, %142
  %147 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %143, i64 1
  %148 = icmp eq %"class.blink::RootInlineBox"** %147, %36
  br i1 %148, label %92, label %142

149:                                              ; preds = %142
  %150 = icmp eq %"class.blink::RootInlineBox"** %143, %36
  br i1 %150, label %92, label %131
}

declare void @_ZN5blink9InlineBox26ClearKnownToHaveNoOverflowEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow34RecalcInlineChildrenVisualOverflowEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", align 8
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = alloca %"class.blink::InlineWalker", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %12 = load %class.scoped_refptr.1763*, %class.scoped_refptr.1763** %11, align 8
  store %class.scoped_refptr.1763* %12, %class.scoped_refptr.1763** %10, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.1763, %class.scoped_refptr.1763* %12, i64 %13
  %15 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  br label %17

16:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %73

17:                                               ; preds = %8, %41
  %18 = call dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* nonnull %2) #16
  %19 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 1
  %20 = bitcast i24* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 6, i64 %27
  %29 = icmp eq %"struct.blink::NGLink"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGLink"* %28 to %"class.blink::NGFragmentItems"*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %18, %"class.blink::NGFragmentItems"* nonnull dereferenceable(24) %31) #16
  %32 = call { i64, i64 } @_ZN5blink14NGFragmentItem26RecalcInkOverflowForCursorEPNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #16
  br label %33

33:                                               ; preds = %17, %24, %30
  %34 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 0, i32 3
  %35 = bitcast i24* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %18, i64 0, i32 0
  call void @_ZN5blink15LayoutBlockFlow39RecalcFloatingDescendantsVisualOverflowERKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* dereferenceable(48) %40)
  br label %41

41:                                               ; preds = %33, %39
  %42 = load %class.scoped_refptr.1763*, %class.scoped_refptr.1763** %10, align 8
  %43 = getelementptr inbounds %class.scoped_refptr.1763, %class.scoped_refptr.1763* %42, i64 1
  store %class.scoped_refptr.1763* %43, %class.scoped_refptr.1763** %10, align 8
  %44 = icmp eq %class.scoped_refptr.1763* %43, %14
  br i1 %44, label %16, label %17

45:                                               ; preds = %1
  %46 = bitcast %"class.blink::InlineWalker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %4, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.blink::InlineWalker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  call void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"* nonnull %4, %"class.blink::LayoutObject"* %48)
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %52, label %57

52:                                               ; preds = %57, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #16
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.blink::InlineFlowBox"** %53 to %"class.blink::RootInlineBox"**
  %55 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %54, align 8
  %56 = icmp eq %"class.blink::RootInlineBox"* %55, null
  br i1 %56, label %73, label %62

57:                                               ; preds = %45, %57
  %58 = phi %"class.blink::LayoutObject"* [ %60, %57 ], [ %50, %45 ]
  call void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"* nonnull %58) #16
  %59 = call %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"* nonnull %4)
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %52, label %57

62:                                               ; preds = %52, %62
  %63 = phi %"class.blink::RootInlineBox"* [ %71, %62 ], [ %55, %52 ]
  %64 = bitcast %"class.blink::RootInlineBox"* %63 to %"class.blink::InlineFlowBox"*
  %65 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %63, i64 0, i32 5, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %63, i64 0, i32 6, i32 0
  %68 = load i32, i32* %67, align 4
  call void @_ZN5blink13InlineFlowBox33AddReplacedChildrenVisualOverflowENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"* nonnull %64, i32 %66, i32 %68) #16
  %69 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %63, i64 0, i32 0, i32 5
  %70 = bitcast %"class.blink::InlineFlowBox"** %69 to %"class.blink::RootInlineBox"**
  %71 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %70, align 8
  %72 = icmp eq %"class.blink::RootInlineBox"* %71, null
  br i1 %72, label %73, label %62

73:                                               ; preds = %62, %52, %16
  ret void
}

declare dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"*) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), %"class.blink::NGFragmentItems"* dereferenceable(24)) unnamed_addr #1

declare { i64, i64 } @_ZN5blink14NGFragmentItem26RecalcInkOverflowForCursorEPNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow39RecalcFloatingDescendantsVisualOverflowERKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %2 = tail call { i32, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment18PostLayoutChildrenEv(%"class.blink::NGPhysicalFragment"* %0) #16
  %3 = extractvalue { i32, %"struct.blink::NGLink"* } %2, 0
  %4 = extractvalue { i32, %"struct.blink::NGLink"* } %2, 1
  %5 = zext i32 %3 to i64
  %6 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %4, i64 %5
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %1, %18
  %9 = phi %"struct.blink::NGLink"* [ %19, %18 ], [ %4, %1 ]
  %10 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %9, i64 0, i32 0
  %11 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %10, align 8, !noalias !239
  %12 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %11, i64 0, i32 1
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8, !noalias !239
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %18, label %15, !prof !2

15:                                               ; preds = %8
  %16 = tail call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %11) #16, !noalias !239
  %17 = icmp eq %"class.blink::NGPhysicalFragment"* %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %15, %8
  %19 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %9, i64 1
  %20 = icmp eq %"struct.blink::NGLink"* %19, %6
  br i1 %20, label %25, label %8

21:                                               ; preds = %15, %1
  %22 = phi %"struct.blink::NGLink"* [ %4, %1 ], [ %9, %15 ]
  %23 = phi %"class.blink::NGPhysicalFragment"* [ inttoptr (i64 -6148914691236517206 to %"class.blink::NGPhysicalFragment"*), %1 ], [ %16, %15 ]
  %24 = icmp eq %"struct.blink::NGLink"* %22, %6
  br i1 %24, label %25, label %26

25:                                               ; preds = %18, %48, %64, %61, %21
  ret void

26:                                               ; preds = %21, %64
  %27 = phi %"class.blink::NGPhysicalFragment"* [ %59, %64 ], [ %23, %21 ]
  %28 = phi %"struct.blink::NGLink"* [ %52, %64 ], [ %22, %21 ]
  %29 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 3
  %30 = bitcast i24* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 960
  %33 = icmp eq i32 %32, 512
  br i1 %33, label %34, label %42

34:                                               ; preds = %26
  %35 = and i32 %31, 64
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 1
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  br label %40

40:                                               ; preds = %34, %37
  %41 = phi %"class.blink::LayoutObject"* [ %39, %37 ], [ null, %34 ]
  tail call void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"* %41) #16
  br label %48

42:                                               ; preds = %26
  %43 = icmp ne %"class.blink::NGPhysicalFragment"* %27, null
  %44 = and i32 %31, 1
  %45 = icmp ne i32 %44, 0
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  tail call void @_ZN5blink15LayoutBlockFlow39RecalcFloatingDescendantsVisualOverflowERKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull dereferenceable(48) %27)
  br label %48

48:                                               ; preds = %42, %47, %40
  %49 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %28, i64 1
  %50 = icmp eq %"struct.blink::NGLink"* %49, %6
  br i1 %50, label %25, label %51

51:                                               ; preds = %48, %61
  %52 = phi %"struct.blink::NGLink"* [ %62, %61 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %52, i64 0, i32 0
  %54 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %54, i64 0, i32 1
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutObject"* %56, null
  br i1 %57, label %61, label %58, !prof !2

58:                                               ; preds = %51
  %59 = tail call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %54) #16
  %60 = icmp eq %"class.blink::NGPhysicalFragment"* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %58, %51
  %62 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %52, i64 1
  %63 = icmp eq %"struct.blink::NGLink"* %62, %6
  br i1 %63, label %25, label %51

64:                                               ; preds = %58
  %65 = icmp eq %"struct.blink::NGLink"* %52, %6
  br i1 %65, label %25, label %26
}

declare void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink13InlineFlowBox33AddReplacedChildrenVisualOverflowENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"struct.blink::PhysicalOffset"*
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 1073741824
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::LayoutBlockFlow"* %1 to %"class.blink::LayoutBlock"*
  %21 = bitcast %"class.blink::PositionWithAffinityTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 24, i1 false)
  tail call void @_ZNK5blink11LayoutBlock42PositionForPointIfOutsideAtomicInlineLevelERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %20, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #16
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %278

24:                                               ; preds = %18
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #16
  %25 = load i96, i96* %14, align 4
  br label %26

26:                                               ; preds = %24, %3
  %27 = phi i96 [ %25, %24 ], [ %15, %3 ]
  %28 = and i96 %27, 17592186044416
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::LayoutBlockFlow"* %1 to %"class.blink::LayoutBlock"*
  tail call void @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %31, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #16
  br label %278

32:                                               ; preds = %26
  %33 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  %34 = bitcast i64* %4 to i32*
  %35 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %5, i64 0, i32 1, i32 0
  %36 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %37 = load i64, i64* %36, align 4
  store i64 %37, i64* %4, align 8
  %38 = bitcast %"class.blink::LayoutBlockFlow"* %1 to %"class.blink::LayoutBlock"*
  call void @_ZNK5blink11LayoutBlock17OffsetForContentsERNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"* %38, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5) #16
  %39 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 15211807202738752817960438464512
  %45 = icmp eq i160 %44, 5070602400912917605986812821504
  %46 = load i32, i32* %34, align 8
  br i1 %45, label %47, label %53, !prof !2

47:                                               ; preds = %32
  %48 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %49 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %49, i64 106
  %51 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %50, align 8
  %52 = call i32 %51(%"class.blink::LayoutObject"* %12, i32 %46, i32 0, %"class.blink::LayoutBox"* null) #16
  br label %53

53:                                               ; preds = %32, %47
  %54 = phi i32 [ %52, %47 ], [ %46, %32 ]
  %55 = load i32, i32* %35, align 4
  %56 = load i96, i96* %14, align 4
  %57 = trunc i96 %56 to i32
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 %54, i32 %55
  %60 = select i1 %58, i32 %55, i32 %54
  %61 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 1, i32 0, i32 0
  %62 = bitcast %"class.blink::InlineFlowBox"** %61 to %"class.blink::RootInlineBox"**
  %63 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %62, align 8
  %64 = icmp eq %"class.blink::RootInlineBox"* %63, null
  br i1 %64, label %65, label %66

65:                                               ; preds = %53
  call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %12, i32 0) #16
  br label %277

66:                                               ; preds = %53
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  %71 = and i160 %70, 15211807202738752817960438464512
  %72 = icmp eq i160 %71, 10141204801825835211973625643008
  %73 = icmp eq i160 %71, 5070602400912917605986812821504
  %74 = xor i1 %73, true
  br label %75

75:                                               ; preds = %66, %130
  %76 = phi %"class.blink::RootInlineBox"* [ null, %66 ], [ %132, %130 ]
  %77 = phi %"class.blink::RootInlineBox"* [ %63, %66 ], [ %135, %130 ]
  %78 = phi %"class.blink::RootInlineBox"* [ null, %66 ], [ %131, %130 ]
  %79 = bitcast %"class.blink::RootInlineBox"* %77 to %"class.blink::InlineFlowBox"*
  %80 = call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %79) #16
  %81 = icmp eq %"class.blink::InlineBox"* %80, null
  br i1 %81, label %130, label %82

82:                                               ; preds = %75
  %83 = icmp eq %"class.blink::RootInlineBox"* %76, null
  %84 = select i1 %83, %"class.blink::RootInlineBox"* %77, %"class.blink::RootInlineBox"* %76
  br i1 %72, label %97, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %77, i64 0, i32 0, i32 6
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 33554432
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %77, i64 0, i32 7, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp slt i32 %60, %92
  %94 = icmp eq i32 %60, %92
  %95 = and i1 %73, %94
  %96 = or i1 %93, %95
  br i1 %96, label %137, label %97

97:                                               ; preds = %85, %90, %82
  %98 = call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* nonnull %77) #16
  %99 = icmp slt i32 %60, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  br i1 %73, label %101, label %130

101:                                              ; preds = %100
  %102 = call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* nonnull %77) #16
  %103 = icmp eq i32 %60, %102
  br i1 %103, label %104, label %130

104:                                              ; preds = %97, %101
  br i1 %72, label %105, label %127

105:                                              ; preds = %104, %111
  %106 = phi %"class.blink::RootInlineBox"* [ %109, %111 ], [ %77, %104 ]
  %107 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %106, i64 0, i32 0, i32 5
  %108 = bitcast %"class.blink::InlineFlowBox"** %107 to %"class.blink::RootInlineBox"**
  %109 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %108, align 8
  %110 = icmp eq %"class.blink::RootInlineBox"* %109, null
  br i1 %110, label %127, label %111

111:                                              ; preds = %105
  %112 = bitcast %"class.blink::RootInlineBox"* %109 to %"class.blink::InlineFlowBox"*
  %113 = call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %112) #16
  %114 = icmp eq %"class.blink::InlineBox"* %113, null
  br i1 %114, label %105, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %109, i64 0, i32 0, i32 6
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 33554432
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %109, i64 0, i32 7, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp sgt i32 %60, %122
  %124 = icmp eq i32 %60, %122
  %125 = and i1 %124, %74
  %126 = or i1 %123, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %105, %120, %115, %104
  %128 = call %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox38ClosestLeafChildForLogicalLeftPositionENS_10LayoutUnitEb(%"class.blink::RootInlineBox"* nonnull %77, i32 %59, i1 zeroext false) #16
  %129 = icmp eq %"class.blink::InlineBox"* %128, null
  br i1 %129, label %130, label %137

130:                                              ; preds = %100, %120, %127, %75, %101
  %131 = phi %"class.blink::RootInlineBox"* [ %77, %127 ], [ %77, %101 ], [ %78, %75 ], [ %77, %120 ], [ %77, %100 ]
  %132 = phi %"class.blink::RootInlineBox"* [ %84, %127 ], [ %84, %101 ], [ %76, %75 ], [ %84, %120 ], [ %84, %100 ]
  %133 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %77, i64 0, i32 0, i32 5
  %134 = bitcast %"class.blink::InlineFlowBox"** %133 to %"class.blink::RootInlineBox"**
  %135 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %134, align 8
  %136 = icmp eq %"class.blink::RootInlineBox"* %135, null
  br i1 %136, label %137, label %75

137:                                              ; preds = %130, %127, %90
  %138 = phi %"class.blink::RootInlineBox"* [ %78, %90 ], [ %77, %127 ], [ %131, %130 ]
  %139 = phi %"class.blink::RootInlineBox"* [ %84, %90 ], [ %84, %127 ], [ %132, %130 ]
  %140 = phi %"class.blink::InlineBox"* [ null, %90 ], [ %128, %127 ], [ null, %130 ]
  %141 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %142 = load %"class.blink::Node"*, %"class.blink::Node"** %141, align 8
  %143 = icmp eq %"class.blink::Node"* %142, null
  br i1 %143, label %144, label %151

144:                                              ; preds = %137, %144
  %145 = phi %"class.blink::LayoutObject"* [ %147, %144 ], [ %12, %137 ]
  %146 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %145, i64 0, i32 7
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 6, i32 0, i32 0
  %149 = load %"class.blink::Node"*, %"class.blink::Node"** %148, align 8
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %144, label %151

151:                                              ; preds = %144, %137
  %152 = phi %"class.blink::Node"* [ %142, %137 ], [ %149, %144 ]
  %153 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %152, i64 0, i32 3, i32 0, i32 0
  %154 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %154, i64 0, i32 2, i32 0, i32 0
  %156 = load %"class.blink::Document"*, %"class.blink::Document"** %155, align 8
  %157 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %156) #16
  %158 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %157, i64 0, i32 13, i32 0, i32 0
  %159 = load %"class.blink::Editor"*, %"class.blink::Editor"** %158, align 8
  %160 = call i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"* %159) #16
  %161 = or i32 %160, 2
  %162 = icmp ne i32 %161, 3
  %163 = icmp ne %"class.blink::InlineBox"* %140, null
  %164 = or i1 %163, %162
  %165 = xor i1 %164, true
  %166 = icmp ne %"class.blink::RootInlineBox"* %138, null
  %167 = and i1 %166, %165
  br i1 %167, label %168, label %170

168:                                              ; preds = %151
  %169 = call %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox38ClosestLeafChildForLogicalLeftPositionENS_10LayoutUnitEb(%"class.blink::RootInlineBox"* nonnull %138, i32 %59, i1 zeroext false) #16
  br label %170

170:                                              ; preds = %151, %168
  %171 = phi %"class.blink::InlineBox"* [ %169, %168 ], [ %140, %151 ]
  %172 = icmp eq %"class.blink::InlineBox"* %171, null
  br i1 %172, label %270, label %173

173:                                              ; preds = %170
  br i1 %162, label %174, label %205

174:                                              ; preds = %173
  %175 = call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %139) #16
  %176 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %139, i64 0, i32 0, i32 0, i32 7, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = and i32 %177, 2048
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %139, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %181 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %139, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %182 = select i1 %179, i32* %181, i32* %180
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %183, %175
  %185 = select i1 %184, i32 %183, i32 %175
  %186 = icmp slt i32 %60, %185
  %187 = icmp eq i32 %60, %185
  %188 = and i1 %73, %187
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %205

190:                                              ; preds = %174
  %191 = bitcast %"class.blink::RootInlineBox"* %139 to %"class.blink::InlineFlowBox"*
  %192 = call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* %191) #16
  %193 = bitcast %"class.blink::InlineBox"* %192 to i1 (%"class.blink::InlineBox"*)***
  %194 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %194, i64 9
  %196 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %195, align 8
  %197 = call zeroext i1 %196(%"class.blink::InlineBox"* %192) #16
  br i1 %197, label %198, label %202

198:                                              ; preds = %190
  %199 = call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30NextLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"* %192) #16
  %200 = icmp eq %"class.blink::InlineBox"* %199, null
  %201 = select i1 %200, %"class.blink::InlineBox"* %192, %"class.blink::InlineBox"* %199
  br label %202

202:                                              ; preds = %198, %190
  %203 = phi %"class.blink::InlineBox"* [ %201, %198 ], [ %192, %190 ]
  %204 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #16
  call void @_ZNK5blink11LayoutBlock14PositionForBoxEPNS_9InlineBoxEb(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::LayoutBlock"* %38, %"class.blink::InlineBox"* %203, i1 zeroext true) #16
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #16
  br label %277

205:                                              ; preds = %174, %173
  %206 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %171, i64 0, i32 4, i32 0
  %207 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %207, i64 0, i32 4
  %209 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %208 to i96*
  %210 = load i96, i96* %209, align 4
  %211 = and i96 %210, 1073741824
  %212 = icmp eq i96 %211, 0
  br i1 %212, label %238, label %213

213:                                              ; preds = %205
  %214 = load i96, i96* %14, align 4
  %215 = trunc i96 %214 to i32
  %216 = icmp slt i32 %215, 0
  %217 = select i1 %216, i32 %60, i32 %59
  %218 = select i1 %216, i32 %59, i32 %60
  %219 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #16
  %220 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %221 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %220, i64 0, i32 0, i32 9
  %222 = bitcast [20 x i8]* %221 to i160*
  %223 = load i160, i160* %222, align 8
  %224 = and i160 %223, 15211807202738752817960438464512
  %225 = icmp eq i160 %224, 5070602400912917605986812821504
  br i1 %225, label %226, label %232, !prof !2

226:                                              ; preds = %213
  %227 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %228 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %227, align 8
  %229 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %228, i64 106
  %230 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %229, align 8
  %231 = call i32 %230(%"class.blink::LayoutObject"* %12, i32 %218, i32 0, %"class.blink::LayoutBox"* null) #16
  br label %232

232:                                              ; preds = %213, %226
  %233 = phi i32 [ %231, %226 ], [ %218, %213 ]
  %234 = zext i32 %217 to i64
  %235 = shl nuw i64 %234, 32
  %236 = zext i32 %233 to i64
  %237 = or i64 %235, %236
  store i64 %237, i64* %7, align 8
  call void @_ZNK5blink11LayoutBlock43PositionForPointRespectingEditingBoundariesENS_13LineLayoutBoxERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %38, %"class.blink::LayoutObject"* %207, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #16
  br label %277

238:                                              ; preds = %205
  %239 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %171) #16
  %240 = call i32 @_ZNK5blink13RootInlineBox25BlockDirectionPointInLineEv(%"class.blink::RootInlineBox"* %239) #16
  %241 = load i96, i96* %14, align 4
  %242 = trunc i96 %241 to i32
  %243 = icmp slt i32 %242, 0
  %244 = select i1 %243, i32 %240, i32 %59
  %245 = select i1 %243, i32 %59, i32 %240
  %246 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %206, align 8
  %247 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #16
  %248 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %248, i64 0, i32 0, i32 9
  %250 = bitcast [20 x i8]* %249 to i160*
  %251 = load i160, i160* %250, align 8
  %252 = and i160 %251, 15211807202738752817960438464512
  %253 = icmp eq i160 %252, 5070602400912917605986812821504
  br i1 %253, label %254, label %260, !prof !2

254:                                              ; preds = %238
  %255 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %256 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %255, align 8
  %257 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %256, i64 106
  %258 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %257, align 8
  %259 = call i32 %258(%"class.blink::LayoutObject"* %12, i32 %245, i32 0, %"class.blink::LayoutBox"* null) #16
  br label %260

260:                                              ; preds = %238, %254
  %261 = phi i32 [ %259, %254 ], [ %245, %238 ]
  %262 = zext i32 %244 to i64
  %263 = shl nuw i64 %262, 32
  %264 = zext i32 %261 to i64
  %265 = or i64 %263, %264
  store i64 %265, i64* %9, align 8
  %266 = bitcast %"class.blink::LayoutObject"* %246 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %267 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %266, align 8, !noalias !242
  %268 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %267, i64 64
  %269 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %268, align 8, !noalias !242
  call void %269(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %246, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #16
  br label %277

270:                                              ; preds = %170
  br i1 %166, label %271, label %276

271:                                              ; preds = %270
  %272 = call %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox25GetLogicalEndNonPseudoBoxEv(%"class.blink::RootInlineBox"* nonnull %138) #16
  %273 = icmp eq %"class.blink::InlineBox"* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #16
  call void @_ZNK5blink11LayoutBlock14PositionForBoxEPNS_9InlineBoxEb(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::LayoutBlock"* %38, %"class.blink::InlineBox"* nonnull %272, i1 zeroext false) #16
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #16
  br label %277

276:                                              ; preds = %271, %270
  call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %12, i32 0) #16
  br label %277

277:                                              ; preds = %232, %260, %276, %202, %274, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  br label %278

278:                                              ; preds = %18, %277, %30
  ret void
}

declare void @_ZNK5blink11LayoutBlock42PositionForPointIfOutsideAtomicInlineLevelERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #2

declare void @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock17OffsetForContentsERNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox38ClosestLeafChildForLogicalLeftPositionENS_10LayoutUnitEb(%"class.blink::RootInlineBox"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow54ShouldMoveCaretToHorizontalBoundaryWhenPastTopOrBottomEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %19) #16
  %21 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %20, i64 0, i32 13, i32 0, i32 0
  %22 = load %"class.blink::Editor"*, %"class.blink::Editor"** %21, align 8
  %23 = tail call i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"* %22) #16
  %24 = or i32 %23, 2
  %25 = icmp ne i32 %24, 3
  ret i1 %25
}

declare i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30NextLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock14PositionForBoxEPNS_9InlineBoxEb(%"class.blink::PositionTemplate"* sret, %"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EE(%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock43PositionForPointRespectingEditingBoundariesENS_13LineLayoutBoxERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK5blink13RootInlineBox25BlockDirectionPointInLineEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox25GetLogicalEndNonPseudoBoxEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.3160"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %11) #16
  %13 = icmp eq %"class.blink::LayoutBoxModelObject"* %12, null
  br i1 %13, label %136, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 134217728
  %19 = icmp eq i96 %18, 0
  %20 = bitcast %"class.blink::LayoutBoxModelObject"* %12 to %"class.blink::LayoutInline"*
  br i1 %19, label %136, label %21

21:                                               ; preds = %14
  %22 = and i96 %17, 268435456
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #16
  %26 = load i96, i96* %16, align 4
  br label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 1, i32 0, i32 1, i32 1
  %29 = bitcast i8* %28 to %"class.blink::LineBoxList"*
  br label %30

30:                                               ; preds = %24, %27
  %31 = phi i96 [ %26, %24 ], [ %17, %27 ]
  %32 = phi %"class.blink::LineBoxList"* [ %25, %24 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %33, align 8
  %35 = icmp eq %"class.blink::InlineFlowBox"* %34, null
  %36 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 0, i32 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  br i1 %38, label %39, label %60

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %12, i64 0, i32 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 6, i32 0, i32 0
  br i1 %47, label %53, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.blink::NodeData"** %48 to %"class.blink::NodeRareData"**
  %51 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %51, i64 0, i32 1, i32 0, i32 0
  br label %55

53:                                               ; preds = %43
  %54 = bitcast %"class.blink::NodeData"** %48 to %"class.blink::NodeRenderingData"**
  br label %55

55:                                               ; preds = %53, %49
  %56 = phi %"class.blink::NodeRenderingData"** [ %52, %49 ], [ %54, %53 ]
  %57 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %57, i64 0, i32 1
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  br label %60

60:                                               ; preds = %30, %39, %55
  %61 = phi %"class.blink::LayoutObject"* [ %59, %55 ], [ %36, %39 ], [ %36, %30 ]
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = and i96 %64, 268435456
  %66 = icmp eq i96 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  %68 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #16
  br label %72

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 1, i32 1, i32 1
  %71 = bitcast i8* %70 to %"class.blink::LineBoxList"*
  br label %72

72:                                               ; preds = %67, %69
  %73 = phi %"class.blink::LineBoxList"* [ %68, %67 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %74, align 8
  %76 = icmp eq %"class.blink::InlineFlowBox"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = tail call i32 @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %79

79:                                               ; preds = %72, %77
  %80 = phi i32 [ %78, %77 ], [ 0, %72 ]
  br i1 %35, label %83, label %81

81:                                               ; preds = %79
  %82 = tail call i32 @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi i32 [ %82, %81 ], [ 0, %79 ]
  %85 = or i32 %84, %80
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %136, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #16
  %89 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %90 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  %92 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %93 = bitcast %"class.blink::LayoutSize"* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = trunc i64 %94 to i32
  %96 = lshr i64 %94, 32
  %97 = trunc i64 %96 to i32
  %98 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %99 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  %100 = load i64, i64* %98, align 4
  store i64 %100, i64* %99, align 8
  %101 = lshr i64 %100, 32
  %102 = trunc i64 %101 to i32
  %103 = icmp sgt i32 %80, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %102, i32 %80) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  store i32 %108, i32* %89, align 4
  store i32 %95, i32* %90, align 8
  %109 = icmp slt i32 %84, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %84) #16
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  %115 = icmp slt i32 %114, 0
  %116 = select i1 %115, i32 -2147483648, i32 2147483647
  %117 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %114) #16
  %118 = extractvalue { i32, i1 } %117, 1
  %119 = extractvalue { i32, i1 } %117, 0
  %120 = select i1 %118, i32 %116, i32 %119, !prof !2
  store i32 %120, i32* %91, align 4
  %121 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %1, i64 0, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %1, i64 0, i32 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %122, %124
  br i1 %125, label %134, label %126, !prof !2

126:                                              ; preds = %87
  %127 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %1, i64 0, i32 0, i32 0, i32 0
  %128 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %127, align 8
  %129 = zext i32 %122 to i64
  %130 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %128, i64 %129
  %131 = bitcast %"struct.blink::PhysicalRect"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* nonnull align 8 %88, i64 16, i1 false) #16
  %132 = load i32, i32* %121, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %121, align 4
  br label %135

134:                                              ; preds = %87
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3160"* %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #16
  br label %135

135:                                              ; preds = %126, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #16
  br label %136

136:                                              ; preds = %83, %14, %4, %135
  %137 = phi i1 [ true, %135 ], [ false, %4 ], [ false, %14 ], [ true, %83 ]
  %138 = phi %"class.blink::LayoutInline"* [ %20, %135 ], [ null, %4 ], [ null, %14 ], [ %20, %83 ]
  %139 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  call void @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlock"* %139, %"class.WTF::Vector.3160"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %3) #16
  %140 = icmp eq i32 %3, 1
  br i1 %140, label %141, label %300

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = and i96 %144, 8589934592
  %146 = icmp eq i96 %145, 0
  br i1 %146, label %147, label %300

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %149 = call zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"* %148) #16
  br i1 %149, label %300, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %152 = bitcast %"class.blink::InlineFlowBox"** %151 to %"class.blink::RootInlineBox"**
  %153 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %152, align 8
  %154 = icmp eq %"class.blink::RootInlineBox"* %153, null
  br i1 %154, label %300, label %155

155:                                              ; preds = %150
  %156 = bitcast { i64, i64 }* %6 to i8*
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %158 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %159 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %160 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %161 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %163 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %1, i64 0, i32 0, i32 0, i32 2
  %164 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %1, i64 0, i32 0, i32 0, i32 1
  %165 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %1, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast { i64, i64 }* %6 to i8*
  br label %167

167:                                              ; preds = %155, %295
  %168 = phi %"class.blink::RootInlineBox"* [ %153, %155 ], [ %298, %295 ]
  %169 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 0, i32 7, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 2048
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %167
  %177 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 0, i32 6, i32 0
  %178 = load i32, i32* %177, align 8
  br label %182

179:                                              ; preds = %167
  %180 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %169) #16
  %181 = load i32, i32* %172, align 4
  br label %182

182:                                              ; preds = %176, %179
  %183 = phi i32 [ %173, %176 ], [ %181, %179 ]
  %184 = phi i32 [ %178, %176 ], [ %180, %179 ]
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %184) #16
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !2
  %191 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = and i32 %183, 2048
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %182
  %196 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %169) #16
  br label %200

197:                                              ; preds = %182
  %198 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 0, i32 6, i32 0
  %199 = load i32, i32* %198, align 8
  br label %200

200:                                              ; preds = %195, %197
  %201 = phi i32 [ %196, %195 ], [ %199, %197 ]
  %202 = icmp slt i32 %201, 0
  %203 = select i1 %202, i32 -2147483648, i32 2147483647
  %204 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %192, i32 %201) #16
  %205 = extractvalue { i32, i1 } %204, 1
  %206 = extractvalue { i32, i1 } %204, 0
  %207 = select i1 %205, i32 %203, i32 %206, !prof !2
  %208 = load i96, i96* %143, align 4
  %209 = trunc i96 %208 to i32
  %210 = icmp slt i32 %209, 0
  %211 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 5, i32 0
  %212 = load i32, i32* %211, align 8
  br i1 %210, label %213, label %220

213:                                              ; preds = %200
  %214 = icmp slt i32 %212, %192
  %215 = select i1 %214, i32 %192, i32 %212
  %216 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 6, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp slt i32 %207, %217
  %219 = select i1 %218, i32 %207, i32 %217
  br label %227

220:                                              ; preds = %200
  %221 = icmp slt i32 %212, %171
  %222 = select i1 %221, i32 %171, i32 %212
  %223 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 6, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp slt i32 %190, %224
  %226 = select i1 %225, i32 %190, i32 %224
  br label %227

227:                                              ; preds = %220, %213
  %228 = phi i32 [ %207, %220 ], [ %219, %213 ]
  %229 = phi i32 [ %226, %220 ], [ %190, %213 ]
  %230 = phi i32 [ %192, %220 ], [ %215, %213 ]
  %231 = phi i32 [ %222, %220 ], [ %171, %213 ]
  %232 = icmp sgt i32 %231, -1
  %233 = select i1 %232, i32 -2147483648, i32 2147483647
  %234 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %229, i32 %231) #16
  %235 = extractvalue { i32, i1 } %234, 1
  %236 = extractvalue { i32, i1 } %234, 0
  %237 = select i1 %235, i32 %233, i32 %236, !prof !2
  %238 = icmp sgt i32 %230, -1
  %239 = select i1 %238, i32 -2147483648, i32 2147483647
  %240 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %228, i32 %230) #16
  %241 = extractvalue { i32, i1 } %240, 1
  %242 = extractvalue { i32, i1 } %240, 0
  %243 = select i1 %241, i32 %239, i32 %242, !prof !2
  %244 = icmp slt i32 %237, 1
  %245 = icmp slt i32 %243, 1
  %246 = or i1 %244, %245
  br i1 %246, label %295, label %247

247:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 16, i1 false)
  %248 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %158, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %248, i64 0, i32 0, i32 9
  %250 = bitcast [20 x i8]* %249 to i160*
  %251 = load i160, i160* %250, align 8
  %252 = and i160 %251, 15211807202738752817960438464512
  %253 = icmp eq i160 %252, 5070602400912917605986812821504
  br i1 %253, label %254, label %259, !prof !2

254:                                              ; preds = %247
  %255 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %159, align 8
  %256 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %255, i64 106
  %257 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %256, align 8
  %258 = call i32 %257(%"class.blink::LayoutObject"* %10, i32 %231, i32 %237, %"class.blink::LayoutBox"* null) #16
  br label %259

259:                                              ; preds = %247, %254
  %260 = phi i32 [ %258, %254 ], [ %231, %247 ]
  %261 = zext i32 %243 to i64
  %262 = shl nuw i64 %261, 32
  %263 = zext i32 %237 to i64
  %264 = or i64 %262, %263
  store i64 %264, i64* %157, align 8
  %265 = load i32, i32* %161, align 4
  %266 = icmp slt i32 %265, 0
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %260, i32 %265) #16
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  %272 = load i32, i32* %162, align 4
  %273 = icmp slt i32 %272, 0
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %230, i32 %272) #16
  %276 = extractvalue { i32, i1 } %275, 1
  %277 = extractvalue { i32, i1 } %275, 0
  %278 = select i1 %276, i32 %274, i32 %277, !prof !2
  %279 = zext i32 %278 to i64
  %280 = shl nuw i64 %279, 32
  %281 = zext i32 %271 to i64
  %282 = or i64 %280, %281
  store i64 %282, i64* %160, align 8
  %283 = load i32, i32* %163, align 4
  %284 = load i32, i32* %164, align 8
  %285 = icmp eq i32 %283, %284
  br i1 %285, label %293, label %286, !prof !2

286:                                              ; preds = %259
  %287 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %165, align 8
  %288 = zext i32 %283 to i64
  %289 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %287, i64 %288
  %290 = bitcast %"struct.blink::PhysicalRect"* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* nonnull align 8 %156, i64 16, i1 false) #16
  %291 = load i32, i32* %163, align 4
  %292 = add i32 %291, 1
  store i32 %292, i32* %163, align 4
  br label %294

293:                                              ; preds = %259
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3160"* %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #16
  br label %294

294:                                              ; preds = %286, %293
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #16
  br label %295

295:                                              ; preds = %227, %294
  %296 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %168, i64 0, i32 0, i32 5
  %297 = bitcast %"class.blink::InlineFlowBox"** %296 to %"class.blink::RootInlineBox"**
  %298 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %297, align 8
  %299 = icmp eq %"class.blink::RootInlineBox"* %298, null
  br i1 %299, label %300, label %167

300:                                              ; preds = %295, %150, %141, %147, %136
  br i1 %137, label %301, label %437

301:                                              ; preds = %300
  %302 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #16
  %303 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %138, i64 0, i32 0, i32 0
  %304 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %303, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #16
  %305 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %304, i64 0, i32 0
  %306 = bitcast %"class.blink::LayoutBlock"* %304 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %307 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %306, align 8
  %308 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %307, i64 147
  %309 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %308, align 8
  %310 = call %"class.blink::LayoutBox"* %309(%"class.blink::LayoutBox"* %305) #16
  %311 = icmp eq %"class.blink::LayoutBox"* %310, null
  br i1 %311, label %320, label %312

312:                                              ; preds = %301
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %310, i64 0, i32 0, i32 0, i32 5, i32 0
  %314 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %314, i64 0, i32 0, i32 9
  %316 = bitcast [20 x i8]* %315 to i160*
  %317 = load i160, i160* %316, align 8
  %318 = and i160 %317, 15211807202738752817960438464512
  %319 = icmp eq i160 %318, 5070602400912917605986812821504
  br i1 %319, label %325, label %320, !prof !2

320:                                              ; preds = %312, %301
  %321 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %304, i64 0, i32 0, i32 2
  %322 = bitcast %"class.blink::LayoutRect"* %321 to i64*
  %323 = load i64, i64* %322, align 4
  %324 = trunc i64 %323 to i32
  br label %350

325:                                              ; preds = %312
  %326 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %310, i64 0, i32 2, i32 1
  %327 = bitcast %"class.blink::LayoutSize"* %326 to i64*
  %328 = load i64, i64* %327, align 4
  %329 = trunc i64 %328 to i32
  %330 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %304, i64 0, i32 0, i32 2, i32 1
  %331 = bitcast %"class.blink::LayoutSize"* %330 to i64*
  %332 = load i64, i64* %331, align 4
  %333 = trunc i64 %332 to i32
  %334 = icmp sgt i32 %333, -1
  %335 = select i1 %334, i32 -2147483648, i32 2147483647
  %336 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %329, i32 %333) #16
  %337 = extractvalue { i32, i1 } %336, 1
  %338 = extractvalue { i32, i1 } %336, 0
  %339 = select i1 %337, i32 %335, i32 %338, !prof !2
  %340 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %304, i64 0, i32 0, i32 2
  %341 = bitcast %"class.blink::LayoutRect"* %340 to i64*
  %342 = load i64, i64* %341, align 4
  %343 = trunc i64 %342 to i32
  %344 = icmp sgt i32 %343, -1
  %345 = select i1 %344, i32 -2147483648, i32 2147483647
  %346 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %339, i32 %343) #16
  %347 = extractvalue { i32, i1 } %346, 1
  %348 = extractvalue { i32, i1 } %346, 0
  %349 = select i1 %347, i32 %345, i32 %348, !prof !2
  br label %350

350:                                              ; preds = %320, %325
  %351 = phi i32 [ %324, %320 ], [ %349, %325 ]
  %352 = phi i64 [ %323, %320 ], [ %342, %325 ]
  %353 = lshr i64 %352, 32
  %354 = trunc i64 %353 to i32
  %355 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %356 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %357 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %356, align 8
  %358 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %357, i64 147
  %359 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %358, align 8
  %360 = call %"class.blink::LayoutBox"* %359(%"class.blink::LayoutBox"* %355) #16
  %361 = icmp eq %"class.blink::LayoutBox"* %360, null
  br i1 %361, label %370, label %362

362:                                              ; preds = %350
  %363 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %360, i64 0, i32 0, i32 0, i32 5, i32 0
  %364 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %364, i64 0, i32 0, i32 9
  %366 = bitcast [20 x i8]* %365 to i160*
  %367 = load i160, i160* %366, align 8
  %368 = and i160 %367, 15211807202738752817960438464512
  %369 = icmp eq i160 %368, 5070602400912917605986812821504
  br i1 %369, label %375, label %370, !prof !2

370:                                              ; preds = %362, %350
  %371 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2
  %372 = bitcast %"class.blink::LayoutRect"* %371 to i64*
  %373 = load i64, i64* %372, align 4
  %374 = trunc i64 %373 to i32
  br label %400

375:                                              ; preds = %362
  %376 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %360, i64 0, i32 2, i32 1
  %377 = bitcast %"class.blink::LayoutSize"* %376 to i64*
  %378 = load i64, i64* %377, align 4
  %379 = trunc i64 %378 to i32
  %380 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %381 = bitcast %"class.blink::LayoutSize"* %380 to i64*
  %382 = load i64, i64* %381, align 4
  %383 = trunc i64 %382 to i32
  %384 = icmp sgt i32 %383, -1
  %385 = select i1 %384, i32 -2147483648, i32 2147483647
  %386 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %379, i32 %383) #16
  %387 = extractvalue { i32, i1 } %386, 1
  %388 = extractvalue { i32, i1 } %386, 0
  %389 = select i1 %387, i32 %385, i32 %388, !prof !2
  %390 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2
  %391 = bitcast %"class.blink::LayoutRect"* %390 to i64*
  %392 = load i64, i64* %391, align 4
  %393 = trunc i64 %392 to i32
  %394 = icmp sgt i32 %393, -1
  %395 = select i1 %394, i32 -2147483648, i32 2147483647
  %396 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %389, i32 %393) #16
  %397 = extractvalue { i32, i1 } %396, 1
  %398 = extractvalue { i32, i1 } %396, 0
  %399 = select i1 %397, i32 %395, i32 %398, !prof !2
  br label %400

400:                                              ; preds = %370, %375
  %401 = phi i32 [ %374, %370 ], [ %399, %375 ]
  %402 = phi i64 [ %373, %370 ], [ %392, %375 ]
  %403 = lshr i64 %402, 32
  %404 = trunc i64 %403 to i32
  %405 = icmp sgt i32 %401, -1
  %406 = select i1 %405, i32 -2147483648, i32 2147483647
  %407 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %351, i32 %401) #16
  %408 = extractvalue { i32, i1 } %407, 1
  %409 = extractvalue { i32, i1 } %407, 0
  %410 = select i1 %408, i32 %406, i32 %409, !prof !2
  %411 = icmp sgt i32 %404, -1
  %412 = select i1 %411, i32 -2147483648, i32 2147483647
  %413 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %354, i32 %404) #16
  %414 = extractvalue { i32, i1 } %413, 1
  %415 = extractvalue { i32, i1 } %413, 0
  %416 = select i1 %414, i32 %412, i32 %415, !prof !2
  %417 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %418 = load i32, i32* %417, align 4
  %419 = icmp slt i32 %410, 0
  %420 = select i1 %419, i32 -2147483648, i32 2147483647
  %421 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %418, i32 %410) #16
  %422 = extractvalue { i32, i1 } %421, 1
  %423 = extractvalue { i32, i1 } %421, 0
  %424 = select i1 %422, i32 %420, i32 %423, !prof !2
  %425 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = icmp slt i32 %416, 0
  %428 = select i1 %427, i32 -2147483648, i32 2147483647
  %429 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %426, i32 %416) #16
  %430 = extractvalue { i32, i1 } %429, 1
  %431 = extractvalue { i32, i1 } %429, 0
  %432 = select i1 %430, i32 %428, i32 %431, !prof !2
  %433 = zext i32 %432 to i64
  %434 = shl nuw i64 %433, 32
  %435 = zext i32 %424 to i64
  %436 = or i64 %434, %435
  store i64 %436, i64* %8, align 8
  call void @_ZNK5blink12LayoutInline15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"* nonnull %138, %"class.WTF::Vector.3160"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9, i32 %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #16
  br label %437

437:                                              ; preds = %400, %300
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !245
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1033, i64 0 }, %19 ], [ { i64 1041, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1017, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #16
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !248
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1033, i64 0 }, %61 ], [ { i64 1041, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1017, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #16
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #16
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #16
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !251
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1041, i64 0 }, %19 ], [ { i64 1033, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1025, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #16
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !254
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1041, i64 0 }, %61 ], [ { i64 1033, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1025, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #16
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #16
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #16
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  ret i32 %108
}

declare void @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlock"*, %"class.WTF::Vector.3160"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutInline15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.3160"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutBlockFlow"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BlockFlowPaintInvalidator", align 8
  %4 = bitcast %"class.blink::BlockFlowPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::BlockFlowPaintInvalidator", %"class.blink::BlockFlowPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"** %5, align 8
  call void @_ZN5blink25BlockFlowPaintInvalidator28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::BlockFlowPaintInvalidator"* nonnull %3, i8 zeroext %1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret void
}

declare void @_ZN5blink25BlockFlowPaintInvalidator28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::BlockFlowPaintInvalidator"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* nocapture, %"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8, !noalias !257
  %9 = lshr i160 %8, 102
  %10 = trunc i160 %9 to i8
  %11 = and i8 %10, 3
  %12 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i8*
  switch i8 %11, label %13 [
    i8 0, label %22
    i8 1, label %14
  ]

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %2
  %15 = phi { i64, i64 } [ { i64 1033, i64 0 }, %13 ], [ { i64 1041, i64 0 }, %2 ]
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14, %2
  %23 = phi %"class.blink::LayoutBoxModelObject"* [ %19, %14 ], [ %3, %2 ]
  %24 = phi i8* [ %18, %14 ], [ %12, %2 ]
  %25 = phi i64 [ %16, %14 ], [ 1017, %2 ]
  %26 = bitcast i8* %24 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %25, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %31 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %30, align 8
  br label %34

32:                                               ; preds = %14
  %33 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %34

34:                                               ; preds = %22, %32
  %35 = phi %"class.blink::LayoutBoxModelObject"* [ %23, %22 ], [ %19, %32 ]
  %36 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %31, %22 ], [ %33, %32 ]
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %35) #16
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 %37, i32 0
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8, !noalias !260
  %44 = lshr i160 %43, 102
  %45 = trunc i160 %44 to i8
  %46 = and i8 %45, 3
  switch i8 %46, label %47 [
    i8 0, label %56
    i8 1, label %48
  ]

47:                                               ; preds = %34
  br label %48

48:                                               ; preds = %47, %34
  %49 = phi { i64, i64 } [ { i64 1033, i64 0 }, %47 ], [ { i64 1041, i64 0 }, %34 ]
  %50 = extractvalue { i64, i64 } %49, 0
  %51 = extractvalue { i64, i64 } %49, 1
  %52 = getelementptr inbounds i8, i8* %12, i64 %51
  %53 = bitcast i8* %52 to %"class.blink::LayoutBoxModelObject"*
  %54 = and i64 %50, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %48, %34
  %57 = phi %"class.blink::LayoutBoxModelObject"* [ %53, %48 ], [ %3, %34 ]
  %58 = phi i8* [ %52, %48 ], [ %12, %34 ]
  %59 = phi i64 [ %50, %48 ], [ 1017, %34 ]
  %60 = bitcast i8* %58 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = add i64 %59, -1
  %63 = getelementptr i8, i8* %61, i64 %62
  %64 = bitcast i8* %63 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %65 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %64, align 8
  br label %68

66:                                               ; preds = %48
  %67 = inttoptr i64 %50 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi %"class.blink::LayoutBoxModelObject"* [ %57, %56 ], [ %53, %66 ]
  %70 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %65, %56 ], [ %67, %66 ]
  %71 = tail call i32 %70(%"class.blink::LayoutBoxModelObject"* %69) #16
  %72 = tail call i1 @llvm.is.constant.i32(i32 %71) #16
  br i1 %72, label %73, label %77

73:                                               ; preds = %68
  %74 = sub i32 0, %71
  %75 = icmp eq i32 %74, -2147483648
  %76 = select i1 %75, i32 2147483647, i32 %74
  br label %82

77:                                               ; preds = %68
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %71) #16
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 2147483647, i32 %80
  br label %82

82:                                               ; preds = %73, %77
  %83 = phi i32 [ %76, %73 ], [ %81, %77 ]
  %84 = icmp sgt i32 %83, 0
  %85 = select i1 %84, i32 %83, i32 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8, !noalias !263
  %90 = lshr i160 %89, 102
  %91 = trunc i160 %90 to i8
  %92 = and i8 %91, 3
  switch i8 %92, label %93 [
    i8 0, label %102
    i8 1, label %94
  ]

93:                                               ; preds = %82
  br label %94

94:                                               ; preds = %93, %82
  %95 = phi { i64, i64 } [ { i64 1041, i64 0 }, %93 ], [ { i64 1033, i64 0 }, %82 ]
  %96 = extractvalue { i64, i64 } %95, 0
  %97 = extractvalue { i64, i64 } %95, 1
  %98 = getelementptr inbounds i8, i8* %12, i64 %97
  %99 = bitcast i8* %98 to %"class.blink::LayoutBoxModelObject"*
  %100 = and i64 %96, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %94, %82
  %103 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %94 ], [ %3, %82 ]
  %104 = phi i8* [ %98, %94 ], [ %12, %82 ]
  %105 = phi i64 [ %96, %94 ], [ 1025, %82 ]
  %106 = bitcast i8* %104 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = add i64 %105, -1
  %109 = getelementptr i8, i8* %107, i64 %108
  %110 = bitcast i8* %109 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %111 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %110, align 8
  br label %114

112:                                              ; preds = %94
  %113 = inttoptr i64 %96 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %114

114:                                              ; preds = %102, %112
  %115 = phi %"class.blink::LayoutBoxModelObject"* [ %103, %102 ], [ %99, %112 ]
  %116 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %111, %102 ], [ %113, %112 ]
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %115) #16
  %118 = icmp sgt i32 %117, 0
  %119 = select i1 %118, i32 %117, i32 0
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !266
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %114
  br label %128

128:                                              ; preds = %127, %114
  %129 = phi { i64, i64 } [ { i64 1041, i64 0 }, %127 ], [ { i64 1033, i64 0 }, %114 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %12, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %114
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %3, %114 ]
  %138 = phi i8* [ %132, %128 ], [ %12, %114 ]
  %139 = phi i64 [ %130, %128 ], [ 1025, %114 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #16
  %152 = tail call i1 @llvm.is.constant.i32(i32 %151) #16
  br i1 %152, label %153, label %157

153:                                              ; preds = %148
  %154 = sub i32 0, %151
  %155 = icmp eq i32 %154, -2147483648
  %156 = select i1 %155, i32 2147483647, i32 %154
  br label %162

157:                                              ; preds = %148
  %158 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %151) #16
  %159 = extractvalue { i32, i1 } %158, 1
  %160 = extractvalue { i32, i1 } %158, 0
  %161 = select i1 %159, i32 2147483647, i32 %160
  br label %162

162:                                              ; preds = %153, %157
  %163 = phi i32 [ %156, %153 ], [ %161, %157 ]
  %164 = icmp sgt i32 %163, 0
  %165 = select i1 %164, i32 %163, i32 0
  %166 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %39, i32* %166, align 4
  %167 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %85, i32* %167, align 4
  %168 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 %119, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 0, i32 3, i32 0
  store i32 %165, i32* %169, align 4
  %170 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 1, i32 0
  %171 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 7
  %172 = bitcast i32* %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %172, i8 0, i64 40, i1 false)
  store i8 34, i8* %171, align 8
  %173 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 9
  store i32 -1, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 10
  %175 = load i8, i8* %174, align 8
  %176 = and i8 %175, -2
  store i8 %176, i8* %174, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataD2Ev(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #16
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %36, align 8
  store %"class.blink::NGOffsetMapping"* null, %"class.blink::NGOffsetMapping"** %36, align 8
  %38 = icmp eq %"class.blink::NGOffsetMapping"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  tail call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %37) #16
  %40 = bitcast %"class.blink::NGOffsetMapping"* %37 to i8*
  tail call void @free(i8* %40) #16
  br label %41

41:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZNK5blink15LayoutBlockFlow16GetOffsetMappingEv(%"class.blink::LayoutBlockFlow"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 3
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 4918, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)) #16
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  %12 = load i96, i96* %5, align 4
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi i96 [ %6, %1 ], [ %12, %9 ]
  %15 = and i96 %14, 63
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !21
  %19 = icmp ne i8 %18, 0
  %20 = and i96 %14, 16777216
  %21 = icmp eq i96 %20, 0
  %22 = and i1 %21, %19
  br i1 %22, label %23, label %38

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 67108876
  %31 = icmp eq i32 %30, 67108864
  br i1 %31, label %32, label %38, !prof !22

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::Node"* %25 to %"class.blink::Element"*
  %34 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %33) #16
  %35 = icmp eq %"class.blink::DisplayLockContext"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %34) #16
  br i1 %37, label %38, label %41

38:                                               ; preds = %36, %17, %23, %27, %32
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i32 4919, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0)) #16
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  br label %41

41:                                               ; preds = %36, %13, %38
  %42 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %43 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %42, align 8
  %44 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %46, align 8
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi %"class.blink::NGOffsetMapping"* [ %47, %45 ], [ null, %41 ]
  ret %"class.blink::NGOffsetMapping"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow16SetOffsetMappingENSt3__110unique_ptrINS_15NGOffsetMappingENS1_14default_deleteIS3_EEEE(%"class.blink::LayoutBlockFlow"*, %"class.blink::NGOffsetMapping"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::NGOffsetMapping"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %4, i64 0, i32 0
  %6 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64 72) #16
  %10 = bitcast i8* %9 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataC2EPKS0_(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %10, %"class.blink::LayoutBlockFlow"* %0) #16
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"* %4, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %10) #16
  %15 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %5, align 8
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %15, %8 ], [ %6, %2 ]
  %18 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %17, i64 0, i32 4
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1811"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.1811"* %18 to i64*
  store i64 %3, i64* %21, align 8
  %22 = icmp eq %"class.blink::NGOffsetMapping"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  tail call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %20) #16
  %24 = bitcast %"class.blink::NGOffsetMapping"* %20 to i8*
  tail call void @free(i8* %24) #16
  br label %25

25:                                               ; preds = %23, %16
  ret void
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink15LayoutBlockFlow7GetNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #16
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #16
  ret %"class.blink::LayoutBoxModelObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1790* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %6 = icmp eq i32 %2, 1
  tail call void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"* %5, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %6) #16
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !2

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #16
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #16
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #16
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !269

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #16
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !269

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #16
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !2

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #16
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #16
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #16
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #16
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #16
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #16
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #16
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #16
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #16
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #16
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #16
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #16
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #16
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #16
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #10

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare void @_ZN5blink18DisplayLockContext17DidLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #16
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #16
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #16
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #16
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #16
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #16
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #16
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #16
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #16
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #16
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink25BlockFlowPaintInvalidator43InvalidatePaintForOverhangingFloatsInternalENS0_24InvalidateDescendantModeE(%"class.blink::BlockFlowPaintInvalidator"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox29OriginAdjustmentForScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::FloatQuad"* dereferenceable(32), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.3354* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = tail call i8* @_Znwm(i64 192) #17
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #16
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #16
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #16
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #16
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list.3367"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.3367"* %31, i64 1) #16
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #16
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #16
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #16
  %38 = getelementptr inbounds %class.anon.3354, %class.anon.3354* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #16
  %40 = getelementptr inbounds %class.anon.3354, %class.anon.3354* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #16
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #16
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #16
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #16
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #16
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #16
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.3367"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base.3369"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !270

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base.3369"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base.3369"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base.3369"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.3369"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !272

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.3369"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base.3369"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base.3369"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base.3369"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base.3369"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list.3367"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !273

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list.3367"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base.3369"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base.3369"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base.3369"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base.3369"*
  %155 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base.3369"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base.3369"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base.3369"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base.3369"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base.3369"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base.3369"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #17
  %178 = icmp eq %"struct.std::__1::__list_node_base.3369"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #17, !noalias !274
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base.3369"**
  store %"struct.std::__1::__list_node_base.3369"* null, %"struct.std::__1::__list_node_base.3369"** %183, align 8, !noalias !274
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #17
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base.3369"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base.3369"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base.3369"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base.3369"*
  %210 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.3369"* %210, %"struct.std::__1::__list_node_base.3369"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list.3367", %"class.std::__1::list.3367"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base.3369"*, %"struct.std::__1::__list_node_base.3369"** %212, align 8
  store %"struct.std::__1::__list_node_base.3369"* %213, %"struct.std::__1::__list_node_base.3369"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base.3369", %"struct.std::__1::__list_node_base.3369"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base.3369"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base.3369"* %209, %"struct.std::__1::__list_node_base.3369"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3108"*, %"class.blink::LayoutBlockFlow"**) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutBlockFlow"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FloatingObjectsD1Ev(%"class.blink::FloatingObjects"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #16
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.732"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.732"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %15, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.739"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !2

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #16
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr*
  %42 = icmp eq %class.scoped_refptr* %39, %41
  br i1 %42, label %45, label %43, !prof !44

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3252"* %44, %class.scoped_refptr* %39) #16
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr* null, %class.scoped_refptr** %38, align 8
  %46 = bitcast %"class.WTF::Vector.739"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #16
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.732"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #16
  %51 = bitcast %"class.base::RefCounted.732"* %7 to i8*
  tail call void @free(i8* %51) #16
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #16
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #16
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #16
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #16
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #16
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #16
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #16
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #16
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #16
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #16
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #16
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #16
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #16
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #16
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #16
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #16
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #16
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #16
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #16
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #16
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #16
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #16
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #16
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #16
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #16
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #16
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #16
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #16
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #16
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #16
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #16
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #16
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #16
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #16
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #16
  %4 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.732"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %14, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.739"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !2

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #16
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %34 = icmp eq %class.scoped_refptr* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr*
  %41 = icmp eq %class.scoped_refptr* %38, %40
  br i1 %41, label %44, label %42, !prof !44

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3252"* %43, %class.scoped_refptr* %38) #16
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr* null, %class.scoped_refptr** %37, align 8
  %45 = bitcast %"class.WTF::Vector.739"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #16
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.732"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #16
  %50 = bitcast %"class.base::RefCounted.732"* %8 to i8*
  tail call void @free(i8* %50) #16
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3252"*, %class.scoped_refptr*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #16
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #16
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #16
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #16
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #16
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !44

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #16
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !44

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #16
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #16
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #16
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #16
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #16
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #16
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #16
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #16
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #16
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #16
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #16
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #16
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #16
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #16
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #16
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #16
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #16
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #16
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #16
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #16
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #16
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #16
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #16
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #16
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #16
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #16
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #16
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #16
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #16
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #16
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #16
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #16
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #16
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #16
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #16
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #16
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #16
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #16
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #16
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #16
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #16
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !44

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #16
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #16
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #16
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #16
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #16
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #16
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !44

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #16
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #16
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !44

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #16
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #16
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #16
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #16
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #16
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #16
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #16
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #16
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #16
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #16
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #16
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #16
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #16
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !44

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !2

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #16
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #16
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #16
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #16
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !44

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !2

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #16
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #16
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #16
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #16
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #16
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #16
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !44

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #16
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #16
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #16
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #16
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #16
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #16
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #16
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #16
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #16
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #16
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !44

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !2

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #16
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #16
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #16
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #16
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !44

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #16
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #16
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #16
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #16
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !44

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #16
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #16
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #16
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !44

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #16
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !44

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #16
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !44

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #16
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !44

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #16
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !44

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #16
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !44

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !2

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #16
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !44

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !2

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #16
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #16
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !44

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #16
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #16
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #16
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !44

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !2

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !44

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #16
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #16
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !44

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !44

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !44

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !44

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !44

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !44

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !2

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #16
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #16
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !44

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !44

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #16
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #16
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !44

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !44

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !2

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #16
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #16
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !44

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !44

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !2

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #16
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #16
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !44

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !44

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !2

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #16
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #16
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !44

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !44

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !2

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #16
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #16
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !44

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !2

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #16
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #16
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #16
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #16
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #16
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #16
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #16
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !21
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #16
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !21
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #16
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #16
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !2

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #16
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #16
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #16
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #16
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #16
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #16
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #16
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #16
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #16
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #16
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #16
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #16
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #16
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #16
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #16
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #16
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #16
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #16
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #16
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #16
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #16
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #16
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #16
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #16
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #16
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !44

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !2

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #16
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #16
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #16
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #16
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !44

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !2

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #16
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #16
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #16
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #16
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !44

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !2

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #16
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #16
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #16
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #16
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !44

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !2

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #16
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #16
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #16
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !44

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !2

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #16
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #16
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #16
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #16
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #17
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #16
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #16
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #16
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #16
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #16
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !44

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #16
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #16
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #16
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !44

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !2

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #16
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #16
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #16
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #16
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #16
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !44

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !2

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #16
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #16
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #16
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #16
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #16
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #16
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #16
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #16
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #16
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #16
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !44

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #16
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #16
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #16
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #17
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #16
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.1799"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutBox"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1799"* %0, %"class.blink::LayoutBox"** null)
  %9 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutBox"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, i64 %38
  %40 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutBox"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutBox"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutBox"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutBox"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutBox"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutBox"* %58, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %66 = select i1 %65, %"class.blink::LayoutBox"** %59, %"class.blink::LayoutBox"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, i64 %70
  %72 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutBox"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutBox"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutBox"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutBox"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutBox"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutBox"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1799"* %0, %"class.blink::LayoutBox"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutBox"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutBox"**, i8 } undef, %"class.blink::LayoutBox"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutBox"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutBox"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1799"*, %"class.blink::LayoutBox"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"class.blink::LayoutBox"**
  %37 = call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.1799"* %0, %"class.blink::LayoutBox"** %36, i32 %32, %"class.blink::LayoutBox"** %1) #16
  ret %"class.blink::LayoutBox"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.1799"*, %"class.blink::LayoutBox"**, i32, %"class.blink::LayoutBox"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::LayoutBox"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1799"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %9, align 8
  %17 = ptrtoint %"class.blink::LayoutBox"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.1799"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::LayoutBox"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #16
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.1799", %"class.WTF::HashTable.1799"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::LayoutBox"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::LayoutBox"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::LayoutBox"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, i64 %37
  %39 = bitcast %"class.blink::LayoutBox"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %1, i64 %62
  %64 = ptrtoint %"class.blink::LayoutBox"** %63 to i64
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::LayoutBox"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::LayoutBox"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::LayoutBox"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::LayoutBox"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::LayoutBox"** %87, null
  %89 = ptrtoint %"class.blink::LayoutBox"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::LayoutBox"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::LayoutBox"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::LayoutBox"* %93, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %1, i64 %104
  %106 = ptrtoint %"class.blink::LayoutBox"** %105 to i64
  %107 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %105, align 8
  %108 = icmp eq %"class.blink::LayoutBox"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::LayoutBox"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %113, i64 %37
  %115 = icmp eq %"class.blink::LayoutBox"** %114, %3
  %116 = select i1 %115, %"class.blink::LayoutBox"** %111, %"class.blink::LayoutBox"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::LayoutBox"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::LayoutBox"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::LayoutBox"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3101"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.3098"*, %"struct.WTF::KeyValuePair.3101"*, i32, %"struct.WTF::KeyValuePair.3101"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3098", align 8
  %6 = bitcast %"class.WTF::HashTable.3098"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3098"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3101"* %1, %"struct.WTF::KeyValuePair.3101"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3098"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3098"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %22 to i64
  br label %61

24:                                               ; preds = %95
  %25 = bitcast %"class.WTF::HashTable.3098"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3098"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %96, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3101"* [ null, %16 ], [ %99, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %97, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.3101"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %52, %39
  %42 = phi i64 [ 0, %39 ], [ %53, %52 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutBox"* %44, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %47, align 8
  store %"class.blink::FloatingObject"* null, %"class.blink::FloatingObject"** %47, align 8
  %49 = icmp eq %"class.blink::FloatingObject"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::FloatingObject"* %48 to i8*
  call void @free(i8* %51) #16
  br label %52

52:                                               ; preds = %50, %46, %41
  %53 = add nuw nsw i64 %42, 1
  %54 = icmp eq i64 %53, %40
  br i1 %54, label %55, label %41

55:                                               ; preds = %52, %37
  %56 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %57

57:                                               ; preds = %28, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3101"* %33

61:                                               ; preds = %21, %95
  %62 = phi i64 [ %96, %95 ], [ %23, %21 ]
  %63 = phi i32 [ %97, %95 ], [ %13, %21 ]
  %64 = phi %"struct.WTF::KeyValuePair.3101"* [ %98, %95 ], [ %22, %21 ]
  %65 = phi %"struct.WTF::KeyValuePair.3101"* [ %99, %95 ], [ null, %21 ]
  %66 = phi i32 [ %100, %95 ], [ 0, %21 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %64, i64 %67
  %69 = bitcast %"struct.WTF::KeyValuePair.3101"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  switch i64 %70, label %71 [
    i64 -1, label %95
    i64 0, label %95
  ]

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %68, i64 0, i32 0
  %73 = call { %"struct.WTF::KeyValuePair.3101"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.3098"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %72) #16
  %74 = extractvalue { %"struct.WTF::KeyValuePair.3101"*, i8 } %73, 0
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %75, align 8
  store %"class.blink::FloatingObject"* null, %"class.blink::FloatingObject"** %75, align 8
  %77 = icmp eq %"class.blink::FloatingObject"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.blink::FloatingObject"* %76 to i8*
  call void @free(i8* %79) #16
  br label %80

80:                                               ; preds = %71, %78
  %81 = load i64, i64* %69, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.3101"* %74 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %74, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %64, i64 %67, i32 1
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1826", %"class.std::__1::unique_ptr.1826"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.1826"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.blink::FloatingObject"* null, %"class.blink::FloatingObject"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.1826"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %15, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %89, i64 %67
  %91 = icmp eq %"struct.WTF::KeyValuePair.3101"* %90, %3
  %92 = select i1 %91, %"struct.WTF::KeyValuePair.3101"* %74, %"struct.WTF::KeyValuePair.3101"* %65
  %93 = load i32, i32* %12, align 8
  %94 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %89 to i64
  br label %95

95:                                               ; preds = %61, %61, %80
  %96 = phi i64 [ %62, %61 ], [ %94, %80 ], [ %62, %61 ]
  %97 = phi i32 [ %63, %61 ], [ %93, %80 ], [ %63, %61 ]
  %98 = phi %"struct.WTF::KeyValuePair.3101"* [ %64, %61 ], [ %89, %80 ], [ %64, %61 ]
  %99 = phi %"struct.WTF::KeyValuePair.3101"* [ %65, %61 ], [ %92, %80 ], [ %65, %61 ]
  %100 = add i32 %66, 1
  %101 = icmp eq i32 %100, %97
  br i1 %101, label %24, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3101"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.3098"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.3101"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3101"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3101"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.3101"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.3101"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.3101"*, i8 } undef, %"struct.WTF::KeyValuePair.3101"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.3101"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.3101"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"* } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NSt3__110unique_ptrINS1_14FloatingObjectENS5_14default_deleteIS7_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3098"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3101"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.3098", %"class.WTF::HashTable.3098"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3101"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3101"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3101", %"struct.WTF::KeyValuePair.3101"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.3101"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.3101"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"* } undef, %"struct.WTF::KeyValuePair.3101"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"* } %79, %"struct.WTF::KeyValuePair.3101"* %78, 1
  ret { %"struct.WTF::KeyValuePair.3101"*, %"struct.WTF::KeyValuePair.3101"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #16
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %40, i8* %41) #16
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #16
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #16
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #16
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*
  tail call void @_ZN5blink15LayoutBlockFlow23LayoutBlockFlowRareDataD2Ev(%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase.1808"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %0, i64 0, i32 0
  store %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %1, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %3, align 8
  %4 = ptrtoint %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #16
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #16
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #16
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.1808"**
  store %"class.blink::PersistentBase.1808"* %0, %"class.blink::PersistentBase.1808"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.1808", %"class.blink::PersistentBase.1808"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #16
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #16
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15LayoutBlockFlow23LayoutBlockFlowRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %5 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #16
  %7 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15LayoutBlockFlow23LayoutBlockFlowRareDataEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3102"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %8 = icmp ugt %"class.blink::FloatQuad"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FloatQuad"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !44

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FloatQuad"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3102"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::FloatQuad"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 5
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::FloatQuad"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::FloatQuad"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !44

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.3102"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.3102"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::FloatQuad"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::FloatQuad"* %1 to i64
  %56 = ptrtoint %"class.blink::FloatQuad"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.WTF::Vector.3102", %"class.WTF::Vector.3102"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !44

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::FloatQuad"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.3102"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::FloatQuad"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::FloatQuad"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !44

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.3102"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.3102"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 5
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::FloatQuad"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::FloatQuad"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::FloatQuad"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::FloatQuad"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %100, i64 %103
  %105 = bitcast %"class.blink::FloatQuad"* %104 to i8*
  %106 = bitcast %"class.blink::FloatQuad"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 32, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN5blink15FloatingObjectsC1EPKNS_15LayoutBlockFlowEb(%"class.blink::FloatingObjects"*, %"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.3107"*, %"class.blink::LayoutBlockFlow"** dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutBlockFlow"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutBlockFlow"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3107"* %0, i32 %5) #16
  %14 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::LayoutBlockFlow"** %1 to i64
  %17 = ptrtoint %"class.blink::LayoutBlockFlow"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3107"* %0, i32 %5) #16
  %20 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::LayoutBlockFlow"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::LayoutBlockFlow"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %23, i64 %26
  %28 = bitcast %"class.blink::LayoutBlockFlow"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::LayoutBlockFlow"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3107"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !44

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %31, align 8
  %33 = icmp eq %"class.blink::LayoutBlockFlow"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 3
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutBlockFlowEEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutBlockFlowEEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3107"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3107"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 3, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3107"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3107"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 4
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %5, align 8
  %7 = icmp eq %"class.blink::LayoutBlockFlow"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LayoutBlockFlow"**
  %10 = icmp eq %"class.blink::LayoutBlockFlow"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3107"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3107"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LayoutBlockFlow"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3108"* %19, %"class.blink::LayoutBlockFlow"** nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutBlockFlowEEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink15LayoutBlockFlowEEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LayoutBlockFlow"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !44

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutBlockFlow"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #16
  %46 = load %"class.blink::LayoutBlockFlow"**, %"class.blink::LayoutBlockFlow"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LayoutBlockFlow"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LayoutBlockFlow"**
  %51 = icmp eq %"class.blink::LayoutBlockFlow"** %48, %50
  br i1 %51, label %54, label %52, !prof !44

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink15LayoutBlockFlowELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3108"* %53, %"class.blink::LayoutBlockFlow"** %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3107"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3107", %"class.WTF::Vector.3107"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink15LayoutBlockFlowEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.3125"*, %"class.WTF::VectorBackedLinkedListNode.3128"* dereferenceable(16)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.3128"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode.3128"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !44

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3128"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxES0_EEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode.3128"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::VectorBackedLinkedListNode.3128"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !44

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.3125"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode.3128"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3128"* %1 to i64
  %56 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3128"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !44

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::VectorBackedLinkedListNode.3128"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxES0_EEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::VectorBackedLinkedListNode.3128"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !44

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.3125"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::VectorBackedLinkedListNode.3128"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::VectorBackedLinkedListNode.3128"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::VectorBackedLinkedListNode.3128"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::VectorBackedLinkedListNode.3128"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %100, i64 %103
  %105 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %104 to i8*
  %106 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } @_ZN3WTF22VectorBackedLinkedListIPN5blink13RootInlineBoxENS_18PartitionAllocatorEE6insertIS3_EENS_30VectorBackedLinkedListIteratorIS5_EENS_35VectorBackedLinkedListConstIteratorIS5_EEOT_(%"class.WTF::VectorBackedLinkedList.3124"*, %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"*, %"class.blink::RootInlineBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode.3128", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3128"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %7, i32 0) #16
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode.3128"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %13, i32 %12) #16
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %5, i64 0, i32 0
  store i32 %16, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %5, i64 0, i32 1
  store i32 %12, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %5, i64 0, i32 2
  %27 = bitcast %"class.blink::RootInlineBox"** %3 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::RootInlineBox"** %26 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %41, label %33, !prof !2

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode.3128"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %23, i64 16, i1 false) #16
  %39 = load i32, i32* %21, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %21, align 4
  br label %42

41:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.3125"* %13, %"class.WTF::VectorBackedLinkedListNode.3128"* nonnull dereferenceable(16) %5) #16
  br label %42

42:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  br label %52

43:                                               ; preds = %4
  %44 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %13, i32 %18) #16
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %17, align 8
  %47 = bitcast %"class.blink::RootInlineBox"** %3 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %44, i64 0, i32 0
  store i32 %16, i32* %49, align 8
  store i32 %12, i32* %45, align 4
  %50 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %44, i64 0, i32 2
  %51 = bitcast %"class.blink::RootInlineBox"** %50 to i64*
  store i64 %48, i64* %51, align 8
  br label %52

52:                                               ; preds = %43, %42
  %53 = phi i32 [ %22, %42 ], [ %18, %43 ]
  %54 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %13, i32 %16) #16
  %55 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %54, i64 0, i32 1
  store i32 %53, i32* %55, align 4
  %56 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %13, i32 %12) #16
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %56, i64 0, i32 0
  store i32 %53, i32* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList.3124", %"class.WTF::VectorBackedLinkedList.3124"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 4
  %61 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"* %13, i32 %53) #16
  %62 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } undef, %"class.WTF::VectorBackedLinkedListNode.3128"* %61, 0
  %63 = insertvalue { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } %62, %"class.WTF::VectorBackedLinkedList.3124"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedList.3124"* } %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3123"*, i8 } @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS3_RKjEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable.3120"*, %"class.blink::RootInlineBox"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3123"*, %"struct.WTF::KeyValuePair.3123"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3123"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3123"* @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3120"* %0, %"struct.WTF::KeyValuePair.3123"* null)
  %9 = load %"struct.WTF::KeyValuePair.3123"*, %"struct.WTF::KeyValuePair.3123"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3123"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::RootInlineBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %39, i64 0, i32 0
  %41 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %40, align 8
  %42 = icmp eq %"class.blink::RootInlineBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::RootInlineBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::RootInlineBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3123"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3123"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::RootInlineBox"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::RootInlineBox"* %59, inttoptr (i64 -1 to %"class.blink::RootInlineBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3123"* %60, %"struct.WTF::KeyValuePair.3123"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %72, i64 0, i32 0
  %74 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %73, align 8
  %75 = icmp eq %"class.blink::RootInlineBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3123"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3123"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3123"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.3123"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %89, i64 0, i32 1
  %92 = load i32, i32* %2, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.3123"* @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3120"* %0, %"struct.WTF::KeyValuePair.3123"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.3123"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } undef, %"struct.WTF::KeyValuePair.3123"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.3123"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3123"* @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.3120"*, %"struct.WTF::KeyValuePair.3123"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink13RootInlineBoxEjEEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3123"*
  %37 = call %"struct.WTF::KeyValuePair.3123"* @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.3120"* %0, %"struct.WTF::KeyValuePair.3123"* %36, i32 %32, %"struct.WTF::KeyValuePair.3123"* %1) #16
  ret %"struct.WTF::KeyValuePair.3123"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3123"* @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable.3120"*, %"struct.WTF::KeyValuePair.3123"*, i32, %"struct.WTF::KeyValuePair.3123"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3120", align 8
  %6 = bitcast %"class.WTF::HashTable.3120"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3120"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3123"* %1, %"struct.WTF::KeyValuePair.3123"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3120"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3120"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3123"*, %"struct.WTF::KeyValuePair.3123"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.3120"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3120"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3123"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3123"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.3123"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.3123"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.3123"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.3123"*, i8 } @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.3120"* nonnull %5, %"class.blink::RootInlineBox"** dereferenceable(8) %53) #16
  %55 = extractvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.3123"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.3123"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #16
  %58 = load %"struct.WTF::KeyValuePair.3123"*, %"struct.WTF::KeyValuePair.3123"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.3123"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.3123"* %55, %"struct.WTF::KeyValuePair.3123"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.3123"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.3123"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3123"*, i8 } @_ZN3WTF9HashTableIPN5blink13RootInlineBoxENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.3120"*, %"class.blink::RootInlineBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3123"*, %"struct.WTF::KeyValuePair.3123"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3120", %"class.WTF::HashTable.3120"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::RootInlineBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %32, i64 0, i32 0
  %35 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %34, align 8
  %36 = icmp eq %"class.blink::RootInlineBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::RootInlineBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.3123"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3123"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3123"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::RootInlineBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::RootInlineBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::RootInlineBox"* %63, inttoptr (i64 -1 to %"class.blink::RootInlineBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.3123"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3123", %"struct.WTF::KeyValuePair.3123"* %75, i64 0, i32 0
  %78 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %77, align 8
  %79 = icmp eq %"class.blink::RootInlineBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.3123"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } undef, %"struct.WTF::KeyValuePair.3123"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.3123"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.3123"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.3128"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.3128"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIPN5blink13RootInlineBoxENS_18PartitionAllocatorEEELj0ES5_E2atEj(%"class.WTF::Vector.3125"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.3128"*, %"class.WTF::VectorBackedLinkedListNode.3128"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.3128", %"class.WTF::VectorBackedLinkedListNode.3128"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.3128"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::RootInlineBox"**, i8 } @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.3138"*, %"class.blink::RootInlineBox"** dereferenceable(8), %"class.blink::RootInlineBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 0
  %5 = load %"class.blink::RootInlineBox"**, %"class.blink::RootInlineBox"*** %4, align 8
  %6 = icmp eq %"class.blink::RootInlineBox"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::RootInlineBox"** @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3138"* %0, %"class.blink::RootInlineBox"** null)
  %9 = load %"class.blink::RootInlineBox"**, %"class.blink::RootInlineBox"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::RootInlineBox"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::RootInlineBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %11, i64 %38
  %40 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %39, align 8
  %41 = icmp eq %"class.blink::RootInlineBox"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::RootInlineBox"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::RootInlineBox"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::RootInlineBox"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::RootInlineBox"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::RootInlineBox"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::RootInlineBox"* %58, inttoptr (i64 -1 to %"class.blink::RootInlineBox"*)
  %66 = select i1 %65, %"class.blink::RootInlineBox"** %59, %"class.blink::RootInlineBox"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %11, i64 %70
  %72 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %71, align 8
  %73 = icmp eq %"class.blink::RootInlineBox"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::RootInlineBox"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::RootInlineBox"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::RootInlineBox"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::RootInlineBox"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::RootInlineBox"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::RootInlineBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::RootInlineBox"** @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3138"* %0, %"class.blink::RootInlineBox"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::RootInlineBox"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::RootInlineBox"**, i8 } undef, %"class.blink::RootInlineBox"** %105, 0
  %107 = insertvalue { %"class.blink::RootInlineBox"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::RootInlineBox"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::RootInlineBox"** @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3138"*, %"class.blink::RootInlineBox"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13RootInlineBoxEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"class.blink::RootInlineBox"**
  %37 = call %"class.blink::RootInlineBox"** @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3138"* %0, %"class.blink::RootInlineBox"** %36, i32 %32, %"class.blink::RootInlineBox"** %1) #16
  ret %"class.blink::RootInlineBox"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::RootInlineBox"** @_ZN3WTF9HashTableIPN5blink13RootInlineBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3138"*, %"class.blink::RootInlineBox"**, i32, %"class.blink::RootInlineBox"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::RootInlineBox"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3138"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::RootInlineBox"**, %"class.blink::RootInlineBox"*** %9, align 8
  %17 = ptrtoint %"class.blink::RootInlineBox"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.3138"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::RootInlineBox"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #16
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.3138", %"class.WTF::HashTable.3138"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::RootInlineBox"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::RootInlineBox"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::RootInlineBox"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %34, i64 %37
  %39 = bitcast %"class.blink::RootInlineBox"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %1, i64 %62
  %64 = ptrtoint %"class.blink::RootInlineBox"** %63 to i64
  %65 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %63, align 8
  %66 = icmp eq %"class.blink::RootInlineBox"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::RootInlineBox"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::RootInlineBox"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::RootInlineBox"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::RootInlineBox"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::RootInlineBox"** %87, null
  %89 = ptrtoint %"class.blink::RootInlineBox"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::RootInlineBox"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::RootInlineBox"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::RootInlineBox"* %93, inttoptr (i64 -1 to %"class.blink::RootInlineBox"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %1, i64 %104
  %106 = ptrtoint %"class.blink::RootInlineBox"** %105 to i64
  %107 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %105, align 8
  %108 = icmp eq %"class.blink::RootInlineBox"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::RootInlineBox"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::RootInlineBox"**, %"class.blink::RootInlineBox"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %113, i64 %37
  %115 = icmp eq %"class.blink::RootInlineBox"** %114, %3
  %116 = select i1 %115, %"class.blink::RootInlineBox"** %111, %"class.blink::RootInlineBox"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::RootInlineBox"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::RootInlineBox"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::RootInlineBox"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3160"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %6, align 8
  %8 = icmp ugt %"struct.blink::PhysicalRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::PhysicalRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !44

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::PhysicalRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3160"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::PhysicalRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::PhysicalRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::PhysicalRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !44

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.3160"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.3160"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::PhysicalRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::PhysicalRect"* %1 to i64
  %56 = ptrtoint %"struct.blink::PhysicalRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.3160", %"class.WTF::Vector.3160"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !44

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::PhysicalRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.3160"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::PhysicalRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::PhysicalRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !44

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.3160"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.3160"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::PhysicalRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::PhysicalRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::PhysicalRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::PhysicalRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %100, i64 %103
  %105 = bitcast %"struct.blink::PhysicalRect"* %104 to i8*
  %106 = bitcast %"struct.blink::PhysicalRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #16
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind readnone }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!21 = !{i8 0, i8 2}
!22 = !{!"branch_weights", i32 1, i32 4001}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!44 = !{!"branch_weights", i32 2000, i32 1}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!47 = distinct !{!47, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!50 = distinct !{!50, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!53 = distinct !{!53, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!62 = distinct !{!62, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!77 = distinct !{!77, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!80 = distinct !{!80, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!83 = distinct !{!83, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!86 = distinct !{!86, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!89 = distinct !{!89, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!92 = distinct !{!92, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!95 = distinct !{!95, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!98 = distinct !{!98, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!101 = distinct !{!101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!104 = distinct !{!104, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!107 = distinct !{!107, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!110 = distinct !{!110, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!113 = distinct !{!113, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!116 = distinct !{!116, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!119 = distinct !{!119, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!122 = distinct !{!122, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!125 = distinct !{!125, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!128 = distinct !{!128, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!131 = distinct !{!131, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!134 = distinct !{!134, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!137 = distinct !{!137, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!140 = distinct !{!140, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!143 = distinct !{!143, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!146 = distinct !{!146, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!149 = distinct !{!149, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!152 = distinct !{!152, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!155 = distinct !{!155, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!158 = distinct !{!158, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!161 = distinct !{!161, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!164 = distinct !{!164, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!167 = distinct !{!167, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!170 = distinct !{!170, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!173 = distinct !{!173, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!176 = distinct !{!176, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!179 = distinct !{!179, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!182 = distinct !{!182, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!185 = distinct !{!185, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!188 = distinct !{!188, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!191 = distinct !{!191, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!194 = distinct !{!194, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!197 = distinct !{!197, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!200 = distinct !{!200, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv: argument 0"}
!203 = distinct !{!203, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!206 = distinct !{!206, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!207 = !{!208, !210}
!208 = distinct !{!208, !209, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!209 = distinct !{!209, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!210 = distinct !{!210, !211, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!211 = distinct !{!211, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!212 = !{!213}
!213 = distinct !{!213, !214, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!214 = distinct !{!214, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!215 = !{!216}
!216 = distinct !{!216, !217, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!217 = distinct !{!217, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!218 = !{!219}
!219 = distinct !{!219, !220, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!220 = distinct !{!220, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!221 = !{!222}
!222 = distinct !{!222, !223, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!223 = distinct !{!223, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!226 = distinct !{!226, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!229 = distinct !{!229, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!230 = !{!231}
!231 = distinct !{!231, !232, !"_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE5beginEv: argument 0"}
!232 = distinct !{!232, !"_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE5beginEv"}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!235 = distinct !{!235, !"_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv"}
!236 = !{!237}
!237 = distinct !{!237, !238, !"_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!238 = distinct !{!238, !"_ZN3WTF13LinkedHashSetIPN5blink13RootInlineBoxENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE3endEv"}
!239 = !{!240}
!240 = distinct !{!240, !241, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv: argument 0"}
!241 = distinct !{!241, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv"}
!242 = !{!243}
!243 = distinct !{!243, !244, !"_ZN5blink14LineLayoutItem16PositionForPointERKNS_14PhysicalOffsetE: argument 0"}
!244 = distinct !{!244, !"_ZN5blink14LineLayoutItem16PositionForPointERKNS_14PhysicalOffsetE"}
!245 = !{!246}
!246 = distinct !{!246, !247, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!247 = distinct !{!247, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!248 = !{!249}
!249 = distinct !{!249, !250, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!250 = distinct !{!250, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!251 = !{!252}
!252 = distinct !{!252, !253, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!253 = distinct !{!253, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!254 = !{!255}
!255 = distinct !{!255, !256, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!256 = distinct !{!256, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!257 = !{!258}
!258 = distinct !{!258, !259, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!259 = distinct !{!259, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!260 = !{!261}
!261 = distinct !{!261, !262, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!262 = distinct !{!262, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!263 = !{!264}
!264 = distinct !{!264, !265, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!265 = distinct !{!265, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!268 = distinct !{!268, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!269 = !{!"branch_weights", i32 4001, i32 4000000}
!270 = distinct !{!270, !271}
!271 = !{!"llvm.loop.unroll.disable"}
!272 = distinct !{!272, !271}
!273 = distinct !{!273, !271}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!276 = distinct !{!276, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
