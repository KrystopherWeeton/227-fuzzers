; ModuleID = '../../components/guest_view/browser/guest_view_event.cc'
source_filename = "../../components/guest_view/browser/guest_view_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.guest_view::GuestViewEvent" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"union.absl::variant_internal::DestructibleUnionImpl.6" }
%"union.absl::variant_internal::DestructibleUnionImpl.6" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.guest_view::GuestViewBase" = type { %"class.content::BrowserPluginGuestDelegate", %"class.content::WebContentsDelegate", %"class.content::WebContentsObserver", %"class.zoom::ZoomObserver", %"class.content::WebContents"*, %"class.std::__1::basic_string", %"class.content::BrowserContext"*, i32, i32, i32, i8, i8, i8, %"class.base::circular_deque", %"class.base::WeakPtr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.gfx::Size", %"class.content::GuestHost"*, i8, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i8, %"class.base::WeakPtrFactory" }
%"class.content::BrowserPluginGuestDelegate" = type { i32 (...)** }
%"class.content::WebContentsDelegate" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.zoom::ZoomObserver" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.content::BrowserContext" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.48"*, i64 }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.guest_view::GuestViewBase::OwnerContentsObserver"* }
%"class.guest_view::GuestViewBase::OwnerContentsObserver" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.guest_view::GuestViewBase::OpenerLifetimeObserver"* }
%"class.guest_view::GuestViewBase::OpenerLifetimeObserver" = type opaque
%"class.content::GuestHost" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.guest_view::GuestViewManager" = type { %"class.content::BrowserPluginGuestManager", %"class.base::SupportsUserData::Data", %"class.std::__1::map.68", %"class.std::__1::map.79", %"class.std::__1::map.90", %"class.std::__1::map.99", i32, i32, %"class.std::__1::set.110", %"class.content::BrowserContext"*, %"class.std::__1::unique_ptr.118", %"class.std::__1::set.110", %"class.std::__1::map.124", %"class.base::WeakPtrFactory.133" }
%"class.content::BrowserPluginGuestManager" = type { i32 (...)** }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.std::__1::map.68" = type { %"class.std::__1::__tree.69" }
%"class.std::__1::__tree.69" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.guest_view::GuestViewManagerDelegate"* }
%"class.guest_view::GuestViewManagerDelegate" = type opaque
%"class.std::__1::set.110" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::WeakPtrFactory.133" = type { %"class.base::internal::WeakPtrFactoryBase" }

@_ZN10guest_view14GuestViewEventC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base15DictionaryValueENS1_14default_deleteISC_EEEE = hidden unnamed_addr alias void (%"class.guest_view::GuestViewEvent"*, %"class.std::__1::basic_string"*, %"class.base::DictionaryValue"*), void (%"class.guest_view::GuestViewEvent"*, %"class.std::__1::basic_string"*, %"class.base::DictionaryValue"*)* @_ZN10guest_view14GuestViewEventC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base15DictionaryValueENS1_14default_deleteISC_EEEE
@_ZN10guest_view14GuestViewEventD1Ev = hidden unnamed_addr alias void (%"class.guest_view::GuestViewEvent"*), void (%"class.guest_view::GuestViewEvent"*)* @_ZN10guest_view14GuestViewEventD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10guest_view14GuestViewEventC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base15DictionaryValueENS1_14default_deleteISC_EEEE(%"class.guest_view::GuestViewEvent"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::DictionaryValue"* %2 to i64
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.guest_view::GuestViewEvent"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #5
  br label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.guest_view::GuestViewEvent", %"class.guest_view::GuestViewEvent"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %15, i64 %17) #5
  br label %18

18:                                               ; preds = %12, %9
  %19 = getelementptr inbounds %"class.guest_view::GuestViewEvent", %"class.guest_view::GuestViewEvent"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %4, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10guest_view14GuestViewEventD2Ev(%"class.guest_view::GuestViewEvent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.guest_view::GuestViewEvent", %"class.guest_view::GuestViewEvent"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %2, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %2, align 8
  %4 = icmp eq %"class.base::DictionaryValue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %6) #5
  %7 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %5
  %9 = bitcast %"class.guest_view::GuestViewEvent"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.guest_view::GuestViewEvent", %"class.guest_view::GuestViewEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %8, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10guest_view14GuestViewEvent8DispatchEPNS_13GuestViewBaseEi(%"class.guest_view::GuestViewEvent"*, %"class.guest_view::GuestViewBase"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.guest_view::GuestViewBase", %"class.guest_view::GuestViewBase"* %1, i64 0, i32 6
  %5 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %4, align 8
  %6 = tail call %"class.guest_view::GuestViewManager"* @_ZN10guest_view16GuestViewManager18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %5) #5
  %7 = getelementptr inbounds %"class.guest_view::GuestViewEvent", %"class.guest_view::GuestViewEvent"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.guest_view::GuestViewEvent", %"class.guest_view::GuestViewEvent"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %8, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %8, align 8
  tail call void @_ZN10guest_view16GuestViewManager13DispatchEventERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base15DictionaryValueENS1_14default_deleteISC_EEEEPNS_13GuestViewBaseEi(%"class.guest_view::GuestViewManager"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %7, %"class.base::DictionaryValue"* %9, %"class.guest_view::GuestViewBase"* %1, i32 %2) #5
  ret void
}

declare %"class.guest_view::GuestViewManager"* @_ZN10guest_view16GuestViewManager18FromBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare void @_ZN10guest_view16GuestViewManager13DispatchEventERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrIN4base15DictionaryValueENS1_14default_deleteISC_EEEEPNS_13GuestViewBaseEi(%"class.guest_view::GuestViewManager"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::DictionaryValue"*, %"class.guest_view::GuestViewBase"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
