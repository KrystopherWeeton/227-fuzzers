; ModuleID = '../../third_party/libjxl/src/lib/jxl/enc_bit_writer.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/enc_bit_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.jxl::BitWriter::Allotment" = type { i64, i64, i64, i8, %"class.jxl::BitWriter::Allotment"* }
%"struct.jxl::BitWriter" = type { i64, %"class.jxl::PaddedBytes", %"class.jxl::BitWriter::Allotment"* }
%"class.jxl::PaddedBytes" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.jxl::Span" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.jxl::BitWriter"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.6"* }
%"class.jxl::BitReader" = type { i64, i64, i8*, i8*, i8*, i64, i8, i64 }

$_ZN3jxl9BitReader19BoundsCheckedRefillEv = comdat any

@.str = private unnamed_addr constant [57 x i8] c"%s:%d: JXL_ABORT: Did not call Allotment::ReclaimUnused\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/libjxl/src/lib/jxl/enc_bit_writer.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"%s:%d: JXL_ASSERT: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"!called_\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"histogram_bits_ == 0\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"writer->BitsWritten() >= prev_bits_written_\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"*used_bits <= max_bits_\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"writer->storage_.size() >= unused_bytes\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"BitsWritten() % kBitsPerByte == 0\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"pos <= storage_.size()\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"other.BitsWritten() % kBitsPerByte == 0\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"other.BitsWritten() / kBitsPerByte != 0\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"writer.BitsWritten() % kBitsPerByte == 0\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"writer->BitsWritten() % kBitsPerByte == 0\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%s:%d: JXL_CHECK: %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"reader.Close()\00", align 1
@.str.16 = private unnamed_addr constant [57 x i8] c"../../third_party/libjxl/src/lib/jxl/base/padded_bytes.h\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"i <= size()\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"../../third_party/libjxl/src/lib/jxl/enc_bit_writer.h\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"bits_written_ % kBitsPerByte == 0\00", align 1

@_ZN3jxl9BitWriter9AllotmentC1EPS0_m = hidden unnamed_addr alias void (%"class.jxl::BitWriter::Allotment"*, %"struct.jxl::BitWriter"*, i64), void (%"class.jxl::BitWriter::Allotment"*, %"struct.jxl::BitWriter"*, i64)* @_ZN3jxl9BitWriter9AllotmentC2EPS0_m
@_ZN3jxl9BitWriter9AllotmentD1Ev = hidden unnamed_addr alias void (%"class.jxl::BitWriter::Allotment"*), void (%"class.jxl::BitWriter::Allotment"*)* @_ZN3jxl9BitWriter9AllotmentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter9AllotmentC2EPS0_m(%"class.jxl::BitWriter::Allotment"*, %"struct.jxl::BitWriter"* noalias, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 2
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 8
  %7 = icmp eq %"struct.jxl::BitWriter"* %1, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %2, 7
  %16 = lshr i64 %15, 3
  %17 = add i64 %14, %16
  %18 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, %17
  br i1 %20, label %21, label %22

21:                                               ; preds = %8
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %12, i64 %17) #5
  br label %22

22:                                               ; preds = %8, %21
  %23 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i64 0, i64 %17
  store i64 %26, i64* %13, align 8
  %27 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 2
  %28 = bitcast %"class.jxl::BitWriter::Allotment"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 4
  %31 = bitcast %"class.jxl::BitWriter::Allotment"** %30 to i64*
  store i64 %29, i64* %31, align 8
  store %"class.jxl::BitWriter::Allotment"* %0, %"class.jxl::BitWriter::Allotment"** %27, align 8
  br label %32

32:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter9AllotmentD2Ev(%"class.jxl::BitWriter::Allotment"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 38) #5
  %7 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

8:                                                ; preds = %1
  ret void
}

declare zeroext i1 @_ZN3jxl5DebugEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn
declare zeroext i1 @_ZN3jxl5AbortEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter9Allotment17FinishedHistogramEPS0_(%"class.jxl::BitWriter::Allotment"* nocapture, %"struct.jxl::BitWriter"* noalias readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.jxl::BitWriter"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 44, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #5
  %10 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #5
  %17 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #5
  %26 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

27:                                               ; preds = %18
  %28 = sub i64 %20, %22
  store i64 %28, i64* %12, align 8
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter9Allotment14PrivateReclaimEPS0_PmS3_(%"class.jxl::BitWriter::Allotment"* nocapture, %"struct.jxl::BitWriter"* noalias, i64* noalias nocapture, i64* noalias nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #5
  %10 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

11:                                               ; preds = %4
  store i8 1, i8* %5, align 8
  %12 = icmp eq %"struct.jxl::BitWriter"* %1, null
  br i1 %12, label %75, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #5
  %21 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

22:                                               ; preds = %13
  %23 = sub i64 %15, %17
  store i64 %23, i64* %2, align 8
  %24 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, %23
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #5
  %29 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %25, %23
  store i64 %31, i64* %3, align 8
  %32 = lshr i64 %31, 3
  %33 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1
  %34 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %32
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0)) #5
  %39 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

40:                                               ; preds = %30
  %41 = sub i64 %35, %32
  %42 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp ult i64 %43, %41
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %33, i64 %41) #5
  br label %46

46:                                               ; preds = %40, %45
  %47 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  %50 = select i1 %49, i64 0, i64 %41
  store i64 %50, i64* %34, align 8
  %51 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %0, i64 0, i32 4
  %52 = bitcast %"class.jxl::BitWriter::Allotment"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 2
  %55 = bitcast %"class.jxl::BitWriter::Allotment"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %75, label %57

57:                                               ; preds = %46
  %58 = inttoptr i64 %53 to %"class.jxl::BitWriter::Allotment"*
  %59 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %58, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, %23
  store i64 %61, i64* %59, align 8
  %62 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %58, i64 0, i32 4
  %63 = load %"class.jxl::BitWriter::Allotment"*, %"class.jxl::BitWriter::Allotment"** %62, align 8
  %64 = icmp eq %"class.jxl::BitWriter::Allotment"* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %57
  %66 = load i64, i64* %2, align 8
  br label %67

67:                                               ; preds = %65, %67
  %68 = phi %"class.jxl::BitWriter::Allotment"* [ %73, %67 ], [ %63, %65 ]
  %69 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %68, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %66
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds %"class.jxl::BitWriter::Allotment", %"class.jxl::BitWriter::Allotment"* %68, i64 0, i32 4
  %73 = load %"class.jxl::BitWriter::Allotment"*, %"class.jxl::BitWriter::Allotment"** %72, align 8
  %74 = icmp eq %"class.jxl::BitWriter::Allotment"* %73, null
  br i1 %74, label %75, label %67

75:                                               ; preds = %67, %57, %46, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter17AppendByteAlignedERKNS_4SpanIKhEE(%"struct.jxl::BitWriter"*, %"class.jxl::Span"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jxl::Span", %"class.jxl::Span"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %4, 1
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %13, %11
  br i1 %14, label %15, label %16

15:                                               ; preds = %6
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %7, i64 %11) #5
  br label %16

16:                                               ; preds = %6, %15
  %17 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i64 0, i64 %11
  store i64 %20, i64* %8, align 8
  %21 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 7
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #5
  %27 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

28:                                               ; preds = %16
  %29 = lshr i64 %22, 3
  %30 = getelementptr inbounds i8, i8* %18, i64 %29
  %31 = getelementptr inbounds %"class.jxl::Span", %"class.jxl::Span"* %1, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = load i64, i64* %3, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %32, i64 %33, i1 false)
  %34 = load i64, i64* %3, align 8
  %35 = add i64 %34, %29
  %36 = load i64, i64* %8, align 8
  %37 = icmp ult i64 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %28
  %39 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %40 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

41:                                               ; preds = %28
  %42 = add i64 %35, 1
  %43 = load i8*, i8** %17, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %35
  store i8 0, i8* %44, align 1
  %45 = load i64, i64* %8, align 8
  %46 = icmp ugt i64 %42, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #5
  %49 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

50:                                               ; preds = %41
  %51 = load i64, i64* %3, align 8
  %52 = shl i64 %51, 3
  %53 = load i64, i64* %21, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %21, align 8
  br label %55

55:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter17AppendByteAlignedERKS0_(%"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.jxl::Span", align 8
  %4 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 7
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 90, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0)) #5
  %10 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

11:                                               ; preds = %2
  %12 = icmp ugt i64 %5, 7
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0)) #5
  %15 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

16:                                               ; preds = %11
  %17 = bitcast %"class.jxl::Span"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #5
  %18 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %5, 3
  %22 = bitcast %"class.jxl::Span"* %3 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.jxl::Span", %"class.jxl::Span"* %3, i64 0, i32 1
  store i64 %21, i64* %23, align 8
  call void @_ZN3jxl9BitWriter17AppendByteAlignedERKNS_4SpanIKhEE(%"struct.jxl::BitWriter"* %0, %"class.jxl::Span"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter17AppendByteAlignedERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"struct.jxl::BitWriter"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %5, align 8
  %7 = icmp eq %"struct.jxl::BitWriter"* %4, %6
  br i1 %7, label %93, label %10

8:                                                ; preds = %20
  %9 = icmp eq i64 %22, 0
  br i1 %9, label %93, label %25

10:                                               ; preds = %2, %20
  %11 = phi i64 [ %22, %20 ], [ 0, %2 ]
  %12 = phi %"struct.jxl::BitWriter"* [ %23, %20 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 7
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 100, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0)) #5
  %19 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

20:                                               ; preds = %10
  %21 = lshr i64 %14, 3
  %22 = add i64 %21, %11
  %23 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %12, i64 1
  %24 = icmp eq %"struct.jxl::BitWriter"* %23, %6
  br i1 %24, label %8, label %10

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %22, 1
  %30 = add i64 %29, %28
  %31 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, %30
  br i1 %33, label %34, label %35

34:                                               ; preds = %25
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %26, i64 %30) #5
  br label %35

35:                                               ; preds = %25, %34
  %36 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  %39 = select i1 %38, i64 0, i64 %30
  store i64 %39, i64* %27, align 8
  %40 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 7
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %35
  %45 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 112, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #5
  %46 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

47:                                               ; preds = %35
  %48 = lshr i64 %41, 3
  %49 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %3, align 8
  %50 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %5, align 8
  %51 = icmp eq %"struct.jxl::BitWriter"* %49, %50
  br i1 %51, label %54, label %67

52:                                               ; preds = %77
  %53 = load i64, i64* %27, align 8
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i64 [ %39, %47 ], [ %53, %52 ]
  %56 = phi i64 [ %48, %47 ], [ %83, %52 ]
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %60 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

61:                                               ; preds = %54
  %62 = add i64 %56, 1
  %63 = load i8*, i8** %36, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %56
  store i8 0, i8* %64, align 1
  %65 = load i64, i64* %27, align 8
  %66 = icmp ugt i64 %62, %65
  br i1 %66, label %86, label %89

67:                                               ; preds = %47, %77
  %68 = phi i64 [ %83, %77 ], [ %48, %47 ]
  %69 = phi %"struct.jxl::BitWriter"* [ %84, %77 ], [ %49, %47 ]
  %70 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %69, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 7
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %67
  %75 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0)) #5
  %76 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %69, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = lshr i64 %71, 3
  %81 = load i8*, i8** %36, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %68
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 %79, i64 %80, i1 false)
  %83 = add i64 %80, %68
  %84 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %69, i64 1
  %85 = icmp eq %"struct.jxl::BitWriter"* %84, %50
  br i1 %85, label %52, label %67

86:                                               ; preds = %61
  %87 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 120, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #5
  %88 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

89:                                               ; preds = %61
  %90 = shl i64 %22, 3
  %91 = load i64, i64* %40, align 8
  %92 = add i64 %91, %90
  store i64 %92, i64* %40, align 8
  br label %93

93:                                               ; preds = %2, %8, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter17AppendByteAlignedERKNSt3__16vectorINS1_10unique_ptrIS0_NS1_14default_deleteIS0_EEEENS1_9allocatorIS6_EEEE(%"struct.jxl::BitWriter"*, %"class.std::__1::vector.4"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.6"* %4, %6
  br i1 %7, label %97, label %10

8:                                                ; preds = %22
  %9 = icmp eq i64 %24, 0
  br i1 %9, label %97, label %27

10:                                               ; preds = %2, %22
  %11 = phi i64 [ %24, %22 ], [ 0, %2 ]
  %12 = phi %"class.std::__1::unique_ptr.6"* [ %25, %22 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %13, align 8
  %15 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 7
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 130, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0)) #5
  %21 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

22:                                               ; preds = %10
  %23 = lshr i64 %16, 3
  %24 = add i64 %23, %11
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %12, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr.6"* %25, %6
  br i1 %26, label %8, label %10

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %28, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %24, 1
  %32 = add i64 %31, %30
  %33 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %27
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %28, i64 %32) #5
  br label %37

37:                                               ; preds = %27, %36
  %38 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  %41 = select i1 %40, i64 0, i64 %32
  store i64 %41, i64* %29, align 8
  %42 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 7
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %37
  %47 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #5
  %48 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

49:                                               ; preds = %37
  %50 = lshr i64 %43, 3
  %51 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %3, align 8
  %52 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %5, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr.6"* %51, %52
  br i1 %53, label %56, label %69

54:                                               ; preds = %81
  %55 = load i64, i64* %29, align 8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i64 [ %41, %49 ], [ %55, %54 ]
  %58 = phi i64 [ %50, %49 ], [ %87, %54 ]
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %62 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

63:                                               ; preds = %56
  %64 = add i64 %58, 1
  %65 = load i8*, i8** %38, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %58
  store i8 0, i8* %66, align 1
  %67 = load i64, i64* %29, align 8
  %68 = icmp ugt i64 %64, %67
  br i1 %68, label %90, label %93

69:                                               ; preds = %49, %81
  %70 = phi i64 [ %87, %81 ], [ %50, %49 ]
  %71 = phi %"class.std::__1::unique_ptr.6"* [ %88, %81 ], [ %51, %49 ]
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.jxl::BitWriter"*, %"struct.jxl::BitWriter"** %72, align 8
  %74 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %69
  %79 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0)) #5
  %80 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %73, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = lshr i64 %75, 3
  %85 = load i8*, i8** %38, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 %70
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %83, i64 %84, i1 false)
  %87 = add i64 %84, %70
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %71, i64 1
  %89 = icmp eq %"class.std::__1::unique_ptr.6"* %88, %52
  br i1 %89, label %54, label %69

90:                                               ; preds = %63
  %91 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #5
  %92 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

93:                                               ; preds = %63
  %94 = shl i64 %24, 3
  %95 = load i64, i64* %42, align 8
  %96 = add i64 %95, %94
  store i64 %96, i64* %42, align 8
  br label %97

97:                                               ; preds = %2, %8, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"struct.jxl::BitWriter"* @_ZN3jxl9BitWriterpLERKS0_(%"struct.jxl::BitWriter"* returned, %"struct.jxl::BitWriter"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.jxl::BitReader", align 8
  %4 = alloca %"class.jxl::BitReader", align 8
  %5 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %319, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, 7
  %10 = lshr i64 %9, 3
  %11 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add nuw nsw i64 %10, 1
  %15 = add i64 %14, %13
  %16 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %20

19:                                               ; preds = %8
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %11, i64 %15) #5
  br label %20

20:                                               ; preds = %8, %19
  %21 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  %24 = select i1 %23, i64 0, i64 %15
  store i64 %24, i64* %12, align 8
  %25 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 7
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %159

29:                                               ; preds = %20
  %30 = load i64, i64* %5, align 8
  %31 = lshr i64 %30, 3
  %32 = lshr i64 %26, 3
  %33 = icmp ult i64 %24, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %36 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

37:                                               ; preds = %29
  %38 = getelementptr inbounds i8, i8* %22, i64 %32
  %39 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %40, i64 %31, i1 false)
  %41 = load i64, i64* %25, align 8
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, %31
  %44 = load i64, i64* %12, align 8
  %45 = icmp ult i64 %44, %43
  br i1 %45, label %46, label %49

46:                                               ; preds = %37
  %47 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %48 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

49:                                               ; preds = %37
  %50 = load i8*, i8** %21, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %43
  store i8 0, i8* %51, align 1
  %52 = and i64 %30, -8
  %53 = load i64, i64* %25, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %25, align 8
  %55 = load i64, i64* %5, align 8
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %319, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.jxl::BitReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %59) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false)
  %60 = load i8*, i8** %39, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %31
  %62 = sub nsw i64 %10, %31
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #5
  store i8* %61, i8** %64, align 8
  %65 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 3
  %66 = getelementptr inbounds i8, i8* %61, i64 -8
  %67 = getelementptr inbounds i8, i8* %66, i64 %62
  store i8* %67, i8** %65, align 8
  %68 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 4
  %69 = bitcast i8** %68 to i64*
  store i64 %63, i64* %69, align 8
  %70 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 5
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 6
  store i8 0, i8* %71, align 8
  %72 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 7
  store i64 0, i64* %72, align 8
  %73 = icmp ugt i8* %61, %67
  br i1 %73, label %74, label %77, !prof !3

74:                                               ; preds = %58
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %3) #5
  %75 = load i8*, i8** %64, align 8
  %76 = load i8*, i8** %65, align 8
  br label %83

77:                                               ; preds = %58
  %78 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %79 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %80 = bitcast i8* %61 to i64*
  %81 = load i64, i64* %80, align 1
  store i64 %81, i64* %78, align 8
  %82 = getelementptr inbounds i8, i8* %61, i64 7
  store i8* %82, i8** %64, align 8
  store i64 56, i64* %79, align 8
  br label %83

83:                                               ; preds = %74, %77
  %84 = phi i8* [ %76, %74 ], [ %67, %77 ]
  %85 = phi i8* [ %75, %74 ], [ %82, %77 ]
  %86 = icmp ugt i8* %85, %84
  br i1 %86, label %87, label %92, !prof !3

87:                                               ; preds = %83
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %3) #5
  %88 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  br label %105

92:                                               ; preds = %83
  %93 = bitcast i8* %85 to i64*
  %94 = load i64, i64* %93, align 1
  %95 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = shl i64 %94, %96
  %98 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = or i64 %99, %97
  store i64 %100, i64* %98, align 8
  %101 = sub i64 63, %96
  %102 = lshr i64 %101, 3
  %103 = getelementptr inbounds i8, i8* %85, i64 %102
  store i8* %103, i8** %64, align 8
  %104 = or i64 %96, 56
  store i64 %104, i64* %95, align 8
  br label %105

105:                                              ; preds = %87, %92
  %106 = phi i64 [ %91, %87 ], [ %104, %92 ]
  %107 = phi i64 [ %89, %87 ], [ %100, %92 ]
  %108 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %109 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %110 = sub i64 %106, %56
  store i64 %110, i64* %109, align 8
  %111 = lshr i64 %107, %56
  store i64 %111, i64* %108, align 8
  %112 = load i64, i64* %25, align 8
  %113 = lshr i64 %112, 3
  %114 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %115, %113
  br i1 %116, label %117, label %120

117:                                              ; preds = %105
  %118 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %119 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

120:                                              ; preds = %105
  %121 = shl nsw i64 -1, %56
  %122 = xor i64 %121, -1
  %123 = and i64 %107, %122
  %124 = load i8*, i8** %21, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 %113
  %126 = and i64 %112, 7
  %127 = shl i64 %123, %126
  %128 = load i8, i8* %125, align 1
  %129 = zext i8 %128 to i64
  %130 = or i64 %127, %129
  %131 = bitcast i8* %125 to i64*
  store i64 %130, i64* %131, align 1
  %132 = load i64, i64* %25, align 8
  %133 = add i64 %132, %56
  store i64 %133, i64* %25, align 8
  store i8 1, i8* %71, align 8
  %134 = load i8*, i8** %68, align 8
  %135 = icmp eq i8* %134, null
  %136 = ptrtoint i8* %134 to i64
  br i1 %135, label %158, label %137

137:                                              ; preds = %120
  %138 = bitcast i8** %64 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %136
  %141 = load i64, i64* %70, align 8
  %142 = add i64 %140, %141
  %143 = shl i64 %142, 3
  %144 = load i64, i64* %109, align 8
  %145 = sub i64 %143, %144
  %146 = load i64, i64* %72, align 8
  %147 = icmp ugt i64 %145, %146
  br i1 %147, label %148, label %158

148:                                              ; preds = %137
  %149 = load i8*, i8** %65, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 8
  %151 = ptrtoint i8* %150 to i64
  %152 = sub i64 %151, %136
  %153 = shl i64 %152, 3
  %154 = icmp ugt i64 %145, %153
  br i1 %154, label %155, label %158

155:                                              ; preds = %148
  %156 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 174, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #5
  %157 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

158:                                              ; preds = %137, %148, %120
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %59) #5
  br label %319

159:                                              ; preds = %20
  %160 = bitcast %"class.jxl::BitReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %160) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 56, i1 false)
  %161 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 2
  %162 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 16, i1 false) #5
  %163 = load i8*, i8** %162, align 8
  store i8* %163, i8** %161, align 8
  %164 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 3
  %165 = getelementptr inbounds i8, i8* %163, i64 -8
  %166 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %1, i64 0, i32 1, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds i8, i8* %165, i64 %167
  store i8* %168, i8** %164, align 8
  %169 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 4
  %170 = ptrtoint i8* %163 to i64
  %171 = bitcast i8** %169 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 5
  store i64 0, i64* %172, align 8
  %173 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 6
  store i8 0, i8* %173, align 8
  %174 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 7
  store i64 0, i64* %174, align 8
  %175 = icmp ugt i8* %163, %168
  br i1 %175, label %176, label %177, !prof !3

176:                                              ; preds = %159
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %4) #5
  br label %183

177:                                              ; preds = %159
  %178 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 0
  %179 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 1
  %180 = bitcast i8* %163 to i64*
  %181 = load i64, i64* %180, align 1
  store i64 %181, i64* %178, align 8
  %182 = getelementptr inbounds i8, i8* %163, i64 7
  store i8* %182, i8** %161, align 8
  store i64 56, i64* %179, align 8
  br label %183

183:                                              ; preds = %176, %177
  %184 = load i64, i64* %5, align 8
  %185 = icmp ult i64 %184, 56
  br i1 %185, label %236, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 1
  %188 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 0
  %189 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 0
  br label %190

190:                                              ; preds = %186, %221
  %191 = phi i64 [ 56, %186 ], [ %233, %221 ]
  %192 = load i8*, i8** %161, align 8
  %193 = load i8*, i8** %164, align 8
  %194 = icmp ugt i8* %192, %193
  br i1 %194, label %195, label %198, !prof !3

195:                                              ; preds = %190
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %4) #5
  %196 = load i64, i64* %188, align 8
  %197 = load i64, i64* %187, align 8
  br label %209

198:                                              ; preds = %190
  %199 = bitcast i8* %192 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = load i64, i64* %187, align 8
  %202 = shl i64 %200, %201
  %203 = load i64, i64* %188, align 8
  %204 = or i64 %203, %202
  store i64 %204, i64* %188, align 8
  %205 = sub i64 63, %201
  %206 = lshr i64 %205, 3
  %207 = getelementptr inbounds i8, i8* %192, i64 %206
  store i8* %207, i8** %161, align 8
  %208 = or i64 %201, 56
  store i64 %208, i64* %187, align 8
  br label %209

209:                                              ; preds = %195, %198
  %210 = phi i64 [ %197, %195 ], [ %208, %198 ]
  %211 = phi i64 [ %196, %195 ], [ %204, %198 ]
  %212 = add i64 %210, -56
  store i64 %212, i64* %187, align 8
  %213 = lshr i64 %211, 56
  store i64 %213, i64* %188, align 8
  %214 = load i64, i64* %25, align 8
  %215 = lshr i64 %214, 3
  %216 = load i64, i64* %189, align 8
  %217 = icmp ult i64 %216, %215
  br i1 %217, label %218, label %221

218:                                              ; preds = %209
  %219 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %220 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

221:                                              ; preds = %209
  %222 = and i64 %211, 72057594037927935
  %223 = load i8*, i8** %21, align 8
  %224 = getelementptr inbounds i8, i8* %223, i64 %215
  %225 = and i64 %214, 7
  %226 = shl i64 %222, %225
  %227 = load i8, i8* %224, align 1
  %228 = zext i8 %227 to i64
  %229 = or i64 %226, %228
  %230 = bitcast i8* %224 to i64*
  store i64 %229, i64* %230, align 1
  %231 = load i64, i64* %25, align 8
  %232 = add i64 %231, 56
  store i64 %232, i64* %25, align 8
  %233 = add i64 %191, 56
  %234 = load i64, i64* %5, align 8
  %235 = icmp ugt i64 %233, %234
  br i1 %235, label %236, label %190

236:                                              ; preds = %221, %183
  %237 = phi i64 [ 0, %183 ], [ %191, %221 ]
  %238 = phi i64 [ %184, %183 ], [ %234, %221 ]
  %239 = sub i64 %238, %237
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %292, label %241

241:                                              ; preds = %236
  %242 = load i8*, i8** %161, align 8
  %243 = load i8*, i8** %164, align 8
  %244 = icmp ugt i8* %242, %243
  br i1 %244, label %245, label %250, !prof !3

245:                                              ; preds = %241
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %4) #5
  %246 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 0
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 1
  %249 = load i64, i64* %248, align 8
  br label %263

250:                                              ; preds = %241
  %251 = bitcast i8* %242 to i64*
  %252 = load i64, i64* %251, align 1
  %253 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = shl i64 %252, %254
  %256 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 0
  %257 = load i64, i64* %256, align 8
  %258 = or i64 %257, %255
  store i64 %258, i64* %256, align 8
  %259 = sub i64 63, %254
  %260 = lshr i64 %259, 3
  %261 = getelementptr inbounds i8, i8* %242, i64 %260
  store i8* %261, i8** %161, align 8
  %262 = or i64 %254, 56
  store i64 %262, i64* %253, align 8
  br label %263

263:                                              ; preds = %245, %250
  %264 = phi i64 [ %249, %245 ], [ %262, %250 ]
  %265 = phi i64 [ %247, %245 ], [ %258, %250 ]
  %266 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 0
  %267 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 1
  %268 = sub i64 %264, %239
  store i64 %268, i64* %267, align 8
  %269 = lshr i64 %265, %239
  store i64 %269, i64* %266, align 8
  %270 = load i64, i64* %25, align 8
  %271 = lshr i64 %270, 3
  %272 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 0
  %273 = load i64, i64* %272, align 8
  %274 = icmp ult i64 %273, %271
  br i1 %274, label %275, label %278

275:                                              ; preds = %263
  %276 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %277 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

278:                                              ; preds = %263
  %279 = shl nsw i64 -1, %239
  %280 = xor i64 %279, -1
  %281 = and i64 %265, %280
  %282 = load i8*, i8** %21, align 8
  %283 = getelementptr inbounds i8, i8* %282, i64 %271
  %284 = and i64 %270, 7
  %285 = shl i64 %281, %284
  %286 = load i8, i8* %283, align 1
  %287 = zext i8 %286 to i64
  %288 = or i64 %285, %287
  %289 = bitcast i8* %283 to i64*
  store i64 %288, i64* %289, align 1
  %290 = load i64, i64* %25, align 8
  %291 = add i64 %290, %239
  store i64 %291, i64* %25, align 8
  br label %292

292:                                              ; preds = %236, %278
  store i8 1, i8* %173, align 8
  %293 = load i8*, i8** %169, align 8
  %294 = icmp eq i8* %293, null
  %295 = ptrtoint i8* %293 to i64
  br i1 %294, label %318, label %296

296:                                              ; preds = %292
  %297 = bitcast i8** %161 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = sub i64 %298, %295
  %300 = load i64, i64* %172, align 8
  %301 = add i64 %299, %300
  %302 = shl i64 %301, 3
  %303 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %4, i64 0, i32 1
  %304 = load i64, i64* %303, align 8
  %305 = sub i64 %302, %304
  %306 = load i64, i64* %174, align 8
  %307 = icmp ugt i64 %305, %306
  br i1 %307, label %308, label %318

308:                                              ; preds = %296
  %309 = load i8*, i8** %164, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 8
  %311 = ptrtoint i8* %310 to i64
  %312 = sub i64 %311, %295
  %313 = shl i64 %312, 3
  %314 = icmp ugt i64 %305, %313
  br i1 %314, label %315, label %318

315:                                              ; preds = %308
  %316 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 193, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #5
  %317 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

318:                                              ; preds = %296, %308, %292
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %160) #5
  br label %319

319:                                              ; preds = %318, %49, %158, %2
  ret %"struct.jxl::BitWriter"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl9BitWriter5WriteEmm(%"struct.jxl::BitWriter"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 3
  %7 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %12 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %6
  %17 = and i64 %5, 7
  %18 = shl i64 %2, %17
  %19 = load i8, i8* %16, align 1
  %20 = zext i8 %19 to i64
  %21 = or i64 %18, %20
  %22 = bitcast i8* %16 to i64*
  store i64 %21, i64* %22, align 1
  %23 = load i64, i64* %4, align 8
  %24 = add i64 %23, %1
  store i64 %24, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"struct.jxl::BitWriter"* @_ZN3jxl9BitWriterpLERKNS_11PaddedBytesE(%"struct.jxl::BitWriter"* returned, %"class.jxl::PaddedBytes"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.jxl::BitReader", align 8
  %4 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %202, label %7

7:                                                ; preds = %2
  %8 = shl i64 %5, 3
  %9 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %5, 1
  %13 = add i64 %12, %11
  %14 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  br i1 %16, label %17, label %18

17:                                               ; preds = %7
  tail call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %9, i64 %13) #5
  br label %18

18:                                               ; preds = %7, %17
  %19 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  %22 = select i1 %21, i64 0, i64 %13
  store i64 %22, i64* %10, align 8
  %23 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %50

27:                                               ; preds = %18
  %28 = lshr i64 %24, 3
  %29 = icmp ult i64 %22, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %32 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %20, i64 %28
  %35 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %36, i64 %5, i1 false)
  %37 = load i64, i64* %23, align 8
  %38 = lshr i64 %37, 3
  %39 = add i64 %38, %5
  %40 = load i64, i64* %10, align 8
  %41 = icmp ult i64 %40, %39
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %44 = tail call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

45:                                               ; preds = %33
  %46 = load i8*, i8** %19, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %39
  store i8 0, i8* %47, align 1
  %48 = load i64, i64* %23, align 8
  %49 = add i64 %48, %8
  store i64 %49, i64* %23, align 8
  br label %202

50:                                               ; preds = %18
  %51 = bitcast %"class.jxl::BitReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %51) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 56, i1 false)
  %52 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 2
  %53 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 16, i1 false) #5
  %54 = load i8*, i8** %53, align 8
  store i8* %54, i8** %52, align 8
  %55 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 3
  %56 = getelementptr inbounds i8, i8* %54, i64 -8
  %57 = load i64, i64* %4, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  store i8* %58, i8** %55, align 8
  %59 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 4
  %60 = ptrtoint i8* %54 to i64
  %61 = bitcast i8** %59 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 5
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 6
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 7
  store i64 0, i64* %64, align 8
  %65 = icmp ugt i8* %54, %58
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %50
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %3) #5
  br label %73

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %69 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %70 = bitcast i8* %54 to i64*
  %71 = load i64, i64* %70, align 1
  store i64 %71, i64* %68, align 8
  %72 = getelementptr inbounds i8, i8* %54, i64 7
  store i8* %72, i8** %52, align 8
  store i64 56, i64* %69, align 8
  br label %73

73:                                               ; preds = %66, %67
  %74 = icmp ult i64 %8, 56
  br i1 %74, label %124, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %77 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 0
  br label %79

79:                                               ; preds = %75, %110
  %80 = phi i64 [ 56, %75 ], [ %122, %110 ]
  %81 = load i8*, i8** %52, align 8
  %82 = load i8*, i8** %55, align 8
  %83 = icmp ugt i8* %81, %82
  br i1 %83, label %84, label %87, !prof !3

84:                                               ; preds = %79
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %3) #5
  %85 = load i64, i64* %77, align 8
  %86 = load i64, i64* %76, align 8
  br label %98

87:                                               ; preds = %79
  %88 = bitcast i8* %81 to i64*
  %89 = load i64, i64* %88, align 1
  %90 = load i64, i64* %76, align 8
  %91 = shl i64 %89, %90
  %92 = load i64, i64* %77, align 8
  %93 = or i64 %92, %91
  store i64 %93, i64* %77, align 8
  %94 = sub i64 63, %90
  %95 = lshr i64 %94, 3
  %96 = getelementptr inbounds i8, i8* %81, i64 %95
  store i8* %96, i8** %52, align 8
  %97 = or i64 %90, 56
  store i64 %97, i64* %76, align 8
  br label %98

98:                                               ; preds = %84, %87
  %99 = phi i64 [ %86, %84 ], [ %97, %87 ]
  %100 = phi i64 [ %85, %84 ], [ %93, %87 ]
  %101 = add i64 %99, -56
  store i64 %101, i64* %76, align 8
  %102 = lshr i64 %100, 56
  store i64 %102, i64* %77, align 8
  %103 = load i64, i64* %23, align 8
  %104 = lshr i64 %103, 3
  %105 = load i64, i64* %78, align 8
  %106 = icmp ult i64 %105, %104
  br i1 %106, label %107, label %110

107:                                              ; preds = %98
  %108 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %109 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

110:                                              ; preds = %98
  %111 = and i64 %100, 72057594037927935
  %112 = load i8*, i8** %19, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 %104
  %114 = and i64 %103, 7
  %115 = shl i64 %111, %114
  %116 = load i8, i8* %113, align 1
  %117 = zext i8 %116 to i64
  %118 = or i64 %115, %117
  %119 = bitcast i8* %113 to i64*
  store i64 %118, i64* %119, align 1
  %120 = load i64, i64* %23, align 8
  %121 = add i64 %120, 56
  store i64 %121, i64* %23, align 8
  %122 = add i64 %80, 56
  %123 = icmp ugt i64 %122, %8
  br i1 %123, label %124, label %79

124:                                              ; preds = %110, %73
  %125 = phi i64 [ 0, %73 ], [ %80, %110 ]
  %126 = sub i64 %8, %125
  %127 = load i8*, i8** %52, align 8
  %128 = load i8*, i8** %55, align 8
  %129 = icmp ugt i8* %127, %128
  br i1 %129, label %130, label %135, !prof !3

130:                                              ; preds = %124
  call void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"* nonnull %3) #5
  %131 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  br label %148

135:                                              ; preds = %124
  %136 = bitcast i8* %127 to i64*
  %137 = load i64, i64* %136, align 1
  %138 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = shl i64 %137, %139
  %141 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = or i64 %142, %140
  store i64 %143, i64* %141, align 8
  %144 = sub i64 63, %139
  %145 = lshr i64 %144, 3
  %146 = getelementptr inbounds i8, i8* %127, i64 %145
  store i8* %146, i8** %52, align 8
  %147 = or i64 %139, 56
  store i64 %147, i64* %138, align 8
  br label %148

148:                                              ; preds = %130, %135
  %149 = phi i64 [ %134, %130 ], [ %147, %135 ]
  %150 = phi i64 [ %132, %130 ], [ %143, %135 ]
  %151 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 0
  %152 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %3, i64 0, i32 1
  %153 = sub i64 %149, %126
  store i64 %153, i64* %152, align 8
  %154 = lshr i64 %150, %126
  store i64 %154, i64* %151, align 8
  %155 = load i64, i64* %23, align 8
  %156 = lshr i64 %155, 3
  %157 = getelementptr inbounds %"struct.jxl::BitWriter", %"struct.jxl::BitWriter"* %0, i64 0, i32 1, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp ult i64 %158, %156
  br i1 %159, label %160, label %163

160:                                              ; preds = %148
  %161 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16, i64 0, i64 0), i32 180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #5
  %162 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

163:                                              ; preds = %148
  %164 = shl nsw i64 -1, %126
  %165 = xor i64 %164, -1
  %166 = and i64 %150, %165
  %167 = load i8*, i8** %19, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 %156
  %169 = and i64 %155, 7
  %170 = shl i64 %166, %169
  %171 = load i8, i8* %168, align 1
  %172 = zext i8 %171 to i64
  %173 = or i64 %170, %172
  %174 = bitcast i8* %168 to i64*
  store i64 %173, i64* %174, align 1
  %175 = load i64, i64* %23, align 8
  %176 = add i64 %175, %126
  store i64 %176, i64* %23, align 8
  store i8 1, i8* %63, align 8
  %177 = load i8*, i8** %59, align 8
  %178 = icmp eq i8* %177, null
  %179 = ptrtoint i8* %177 to i64
  br i1 %178, label %201, label %180

180:                                              ; preds = %163
  %181 = bitcast i8** %52 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %182, %179
  %184 = load i64, i64* %62, align 8
  %185 = add i64 %183, %184
  %186 = shl i64 %185, 3
  %187 = load i64, i64* %152, align 8
  %188 = sub i64 %186, %187
  %189 = load i64, i64* %64, align 8
  %190 = icmp ugt i64 %188, %189
  br i1 %190, label %191, label %201

191:                                              ; preds = %180
  %192 = load i8*, i8** %55, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 8
  %194 = ptrtoint i8* %193 to i64
  %195 = sub i64 %194, %179
  %196 = shl i64 %195, 3
  %197 = icmp ugt i64 %188, %196
  br i1 %197, label %198, label %201

198:                                              ; preds = %191
  %199 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #5
  %200 = call zeroext i1 @_ZN3jxl5AbortEv() #6
  unreachable

201:                                              ; preds = %180, %191, %163
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %51) #5
  br label %202

202:                                              ; preds = %45, %201, %2
  ret %"struct.jxl::BitWriter"* %0
}

declare void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl9BitReader19BoundsCheckedRefillEv(%"class.jxl::BitReader"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 56
  br i1 %8, label %9, label %24

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 0
  %11 = load i8*, i8** %5, align 8
  %12 = icmp ult i8* %11, %4
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %14, i8** %5, align 8
  %15 = load i8, i8* %11, align 1
  %16 = zext i8 %15 to i64
  %17 = shl i64 %16, %7
  %18 = load i64, i64* %10, align 8
  %19 = or i64 %17, %18
  store i64 %19, i64* %10, align 8
  %20 = add nuw nsw i64 %7, 8
  store i64 %20, i64* %6, align 8
  %21 = icmp ult i64 %20, 56
  %22 = icmp ult i8* %14, %4
  %23 = and i1 %21, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %13, %9, %33, %44, %55, %66, %77, %88, %1
  %25 = phi i64 [ %7, %1 ], [ %7, %9 ], [ %20, %13 ], [ %40, %33 ], [ %51, %44 ], [ %62, %55 ], [ %73, %66 ], [ %84, %77 ], [ %95, %88 ]
  %26 = sub i64 63, %25
  %27 = lshr i64 %26, 3
  %28 = getelementptr inbounds %"class.jxl::BitReader", %"class.jxl::BitReader"* %0, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %27
  store i64 %30, i64* %28, align 8
  %31 = and i64 %26, -8
  %32 = add i64 %31, %25
  store i64 %32, i64* %6, align 8
  ret void

33:                                               ; preds = %13
  %34 = getelementptr inbounds i8, i8* %11, i64 2
  store i8* %34, i8** %5, align 8
  %35 = load i8, i8* %14, align 1
  %36 = zext i8 %35 to i64
  %37 = shl i64 %36, %20
  %38 = load i64, i64* %10, align 8
  %39 = or i64 %37, %38
  store i64 %39, i64* %10, align 8
  %40 = add nuw nsw i64 %7, 16
  store i64 %40, i64* %6, align 8
  %41 = icmp ult i64 %40, 56
  %42 = icmp ult i8* %34, %4
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %24

44:                                               ; preds = %33
  %45 = getelementptr inbounds i8, i8* %11, i64 3
  store i8* %45, i8** %5, align 8
  %46 = load i8, i8* %34, align 1
  %47 = zext i8 %46 to i64
  %48 = shl i64 %47, %40
  %49 = load i64, i64* %10, align 8
  %50 = or i64 %48, %49
  store i64 %50, i64* %10, align 8
  %51 = add nuw nsw i64 %7, 24
  store i64 %51, i64* %6, align 8
  %52 = icmp ult i64 %51, 56
  %53 = icmp ult i8* %45, %4
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %24

55:                                               ; preds = %44
  %56 = getelementptr inbounds i8, i8* %11, i64 4
  store i8* %56, i8** %5, align 8
  %57 = load i8, i8* %45, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, %51
  %60 = load i64, i64* %10, align 8
  %61 = or i64 %59, %60
  store i64 %61, i64* %10, align 8
  %62 = add nuw nsw i64 %7, 32
  store i64 %62, i64* %6, align 8
  %63 = icmp ult i64 %62, 56
  %64 = icmp ult i8* %56, %4
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %24

66:                                               ; preds = %55
  %67 = getelementptr inbounds i8, i8* %11, i64 5
  store i8* %67, i8** %5, align 8
  %68 = load i8, i8* %56, align 1
  %69 = zext i8 %68 to i64
  %70 = shl i64 %69, %62
  %71 = load i64, i64* %10, align 8
  %72 = or i64 %70, %71
  store i64 %72, i64* %10, align 8
  %73 = add nuw nsw i64 %7, 40
  store i64 %73, i64* %6, align 8
  %74 = icmp ult i64 %73, 56
  %75 = icmp ult i8* %67, %4
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %24

77:                                               ; preds = %66
  %78 = getelementptr inbounds i8, i8* %11, i64 6
  store i8* %78, i8** %5, align 8
  %79 = load i8, i8* %67, align 1
  %80 = zext i8 %79 to i64
  %81 = shl i64 %80, %73
  %82 = load i64, i64* %10, align 8
  %83 = or i64 %81, %82
  store i64 %83, i64* %10, align 8
  %84 = add nuw nsw i64 %7, 48
  store i64 %84, i64* %6, align 8
  %85 = icmp ult i64 %84, 56
  %86 = icmp ult i8* %78, %4
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %24

88:                                               ; preds = %77
  %89 = getelementptr inbounds i8, i8* %11, i64 7
  store i8* %89, i8** %5, align 8
  %90 = load i8, i8* %78, align 1
  %91 = zext i8 %90 to i64
  %92 = shl i64 %91, %84
  %93 = load i64, i64* %10, align 8
  %94 = or i64 %92, %93
  store i64 %94, i64* %10, align 8
  %95 = add nuw nsw i64 %7, 56
  store i64 %95, i64* %6, align 8
  br label %24
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
