; ModuleID = '../../third_party/blink/renderer/modules/worklet/animation_and_paint_worklet_thread.cc'
source_filename = "../../third_party/blink/renderer/modules/worklet/animation_and_paint_worklet_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WorkletThreadHolder" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WorkerBackingThread"* }
%"class.blink::WorkerBackingThread" = type { %"class.std::__1::unique_ptr.0", %"class.v8::Isolate"* }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Mutex>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Mutex>::InstanceStorage" = type { %"class.WTF::Mutex"* }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.266", i32, [4 x i8], %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.403", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.409", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.420", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.438", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.445", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.384", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.302" = type { %"struct.std::__1::__atomic_base.303" }
%"struct.std::__1::__atomic_base.303" = type { %"struct.std::__1::__atomic_base.304" }
%"struct.std::__1::__atomic_base.304" = type { %"struct.std::__1::__cxx_atomic_impl.305" }
%"struct.std::__1::__cxx_atomic_impl.305" = type { %"struct.std::__1::__cxx_atomic_base_impl.306" }
%"struct.std::__1::__cxx_atomic_base_impl.306" = type { i64 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::Worklist.313"* }
%"class.blink::Worklist.313" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::Worklist.320"* }
%"class.blink::Worklist.320" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::Worklist.327"* }
%"class.blink::Worklist.327" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::Worklist.334"* }
%"class.blink::Worklist.334" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::Worklist.341"* }
%"class.blink::Worklist.341" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::Worklist.348"* }
%"class.blink::Worklist.348" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::Worklist.355"* }
%"class.blink::Worklist.355" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.302" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.377", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { float }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.387", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.409" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.426" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.313"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.320"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.327"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.334"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.341"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.989", i64 }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.991" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.445" = type { %"struct.std::__1::__atomic_base.446" }
%"struct.std::__1::__atomic_base.446" = type { %"struct.std::__1::__cxx_atomic_impl.447" }
%"struct.std::__1::__cxx_atomic_impl.447" = type { %"struct.std::__1::__cxx_atomic_base_impl.448" }
%"struct.std::__1::__cxx_atomic_base_impl.448" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AnimationAndPaintWorkletThread" = type <{ %"class.blink::WorkerThread", i32, [4 x i8] }>
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.28, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.18, %"class.std::__1::unique_ptr.242", %"class.WTF::HashMap.257", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent.449", %"class.blink::CrossThreadPersistent.654", %class.scoped_refptr.656, %"class.blink::TaskHandle", %"class.WTF::HashSet.658", %"class.WTF::HashSet.662" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.28 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.31"*, i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.40" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.43", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.86", %"class.crdtp::detail::PtrMaybe.106", %"class.crdtp::detail::PtrMaybe.116", %"class.crdtp::detail::PtrMaybe.126", %"class.crdtp::detail::PtrMaybe.147", %"class.crdtp::detail::PtrMaybe.157", %"class.crdtp::detail::PtrMaybe.167", %"class.crdtp::detail::PtrMaybe.177", %"class.crdtp::detail::PtrMaybe.206", %"class.crdtp::detail::PtrMaybe.216", %"class.crdtp::detail::PtrMaybe.226" }
%"class.crdtp::ProtocolObject.43" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.49", %"class.crdtp::detail::PtrMaybe.52", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.73" }
%"class.crdtp::ProtocolObject.49" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.52" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.56", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.56" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.77", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.77" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.86" = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.90", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.73", %"class.crdtp::detail::PtrMaybe.93" }
%"class.crdtp::ProtocolObject.90" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.97", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.97" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.106" = type { %"class.std::__1::unique_ptr.107" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.110", %"class.std::__1::unique_ptr.74", %"class.crdtp::detail::PtrMaybe.93", %"class.crdtp::detail::PtrMaybe.93", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.110" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.116" = type { %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.120", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.94" }
%"class.crdtp::ProtocolObject.120" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.126" = type { %"class.std::__1::unique_ptr.127" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.130", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.93", %"class.crdtp::detail::PtrMaybe.133", %"class.crdtp::detail::ValueMaybe.143" }
%"class.crdtp::ProtocolObject.130" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.133" = type { %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.137", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.137" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.143" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.147" = type { %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.151", %"class.std::__1::unique_ptr.134", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.151" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.157" = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.161", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.143", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.161" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.167" = type { %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.171", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.171" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.177" = type { %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.181", %"class.std::__1::unique_ptr.184", i8, %"class.std::__1::unique_ptr.74", %"class.crdtp::detail::PtrMaybe.133", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.193" }
%"class.crdtp::ProtocolObject.181" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.187", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.187" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.193" = type { %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.197", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.197" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.206" = type { %"class.std::__1::unique_ptr.207" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.210", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.93", %"class.crdtp::detail::PtrMaybe.73", %"class.crdtp::detail::ValueMaybe.143", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.210" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.216" = type { %"class.std::__1::unique_ptr.217" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.220", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.220" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.226" = type { %"class.std::__1::unique_ptr.227" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.230", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.133" }
%"class.crdtp::ProtocolObject.230" = type { %"class.crdtp::Serializable" }
%class.scoped_refptr.18 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.245, %class.scoped_refptr.245, %class.scoped_refptr.245, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.253" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.scoped_refptr.245 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.253" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.257" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ %"struct.WTF::KeyValuePair.261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.261" = type opaque
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.262" }
%"struct.std::__1::atomic.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__cxx_atomic_impl.264" }
%"struct.std::__1::__cxx_atomic_impl.264" = type { %"struct.std::__1::__cxx_atomic_base_impl.265" }
%"struct.std::__1::__cxx_atomic_base_impl.265" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistent.449" = type { %"class.blink::PersistentBase.450" }
%"class.blink::PersistentBase.450" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent.615", %"class.std::__1::unique_ptr.627", %"class.blink::Member.633", %"class.blink::HeapHashSet.635", %class.scoped_refptr.642, %"class.blink::Member.644", %"class.blink::Member.646", i32, %"class.WTF::Vector.567", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.650" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.462" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.455" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457", [32 x i8] }
%"class.WTF::VectorBufferBase.457" = type { %"struct.std::__1::pair.458"*, i32, i32 }
%"struct.std::__1::pair.458" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.459"* }
%"class.blink::HeapVector.459" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.WTF::Vector.465"* }
%"class.WTF::Vector.465" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.534", i32, i8, [3 x i8], %"class.blink::HeapVector.536", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.544", %"class.blink::Member.546", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.555", %"class.blink::Member.561", %"class.blink::Member.563", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.471" }
%"class.WTF::HashMap.471" = type { %"class.WTF::HashTable.472" }
%"class.WTF::HashTable.472" = type <{ %"struct.WTF::KeyValuePair.474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.474" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.479" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.479" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.480" }
%"class.blink::HeapHashMap.480" = type { %"class.WTF::HashMap.483" }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.486" = type { i8*, %"class.blink::Member.1109" }
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::Supplement.1111"* }
%"class.blink::Supplement.1111" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1112" }
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.487, %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522", %"class.blink::Member.528", i32, [4 x i8], %"class.WTF::HashSet.530", i32, i32 }
%class.scoped_refptr.487 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.488 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.488 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.498", %"class.std::__1::map.509", %"class.std::__1::map.518"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.494 }
%union.anon.494 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.498" = type { %"class.std::__1::__tree.499" }
%"class.std::__1::__tree.499" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::map.509" = type { %"class.std::__1::__tree.510" }
%"class.std::__1::__tree.510" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.511", %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::map.518" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.534", i32, i8, [3 x i8], %"class.blink::HeapVector.536", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.544", %"class.blink::Member.546", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.555", %"class.blink::Member.561", %"class.blink::Member.563", i8, [7 x i8] }>
%"class.WTF::HashSet.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.536" = type { %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { %"class.blink::Member.542"*, i32, i32 }
%"class.blink::Member.542" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.548", i32, i32 }
%"class.blink::HeapHashMap.548" = type { %"class.WTF::HashMap.551" }
%"class.WTF::HashMap.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"struct.WTF::KeyValuePair.554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.554" = type opaque
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.546", i8, [7 x i8], %"class.WTF::Vector.567", %"class.blink::HeapVector.607", i8, [7 x i8], %"class.WTF::HashSet.530", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.607" = type { %"class.WTF::Vector.610" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.blink::Member.613"*, i32, i32 }
%"class.blink::Member.613" = type opaque
%"class.blink::CrossThreadPersistent.615" = type { %"class.blink::PersistentBase.616" }
%"class.blink::PersistentBase.616" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.619" }
%"class.blink::Supplementable.619" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.620" }
%"class.blink::HeapHashMap.620" = type { %"class.WTF::HashMap.623" }
%"class.WTF::HashMap.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"struct.WTF::KeyValuePair.626"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.626" = type { i8*, %"class.blink::Member.1101" }
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1103" }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.672", %"class.blink::Member.674", %"class.blink::Member.676", %class.scoped_refptr.18, %class.scoped_refptr.18, %"class.blink::Member.678", %"class.blink::Member.680", %"class.blink::Member.686", %"class.blink::Member.690", %"class.blink::Member.742", %"class.blink::HeapHashMap.744", %"class.blink::HeapHashSet.751", %"class.blink::HeapHashSet.751", %"class.blink::HeapHashMap.940", %"class.blink::HeapVector.947", %"class.blink::Member.955", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.958", %"class.WTF::Vector.965", %"class.blink::HeapHashSet.971", %"class.blink::HeapHashSet.971", %"class.std::__1::unique_ptr.977", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.986", i8, i8, %"class.base::WeakPtrFactory.988" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.684" }
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.694", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.696", %"class.WTF::HashSet.701", i8, [3 x i8], i32, %"class.blink::HeapHashMap.705", %"class.std::__1::map.712", %"class.std::__1::map.723", %"class.std::__1::unique_ptr.732", %"class.blink::Member.680", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.739", %"class.mojo::InlinedStructPtr.741", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ %"struct.WTF::KeyValuePair.700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.700" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.705" = type { %"class.WTF::HashMap.708" }
%"class.WTF::HashMap.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"struct.WTF::KeyValuePair.711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.711" = type opaque
%"class.std::__1::map.712" = type { %"class.std::__1::__tree.713" }
%"class.std::__1::__tree.713" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::map.723" = type { %"class.std::__1::__tree.724" }
%"class.std::__1::__tree.724" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.741" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.744" = type { %"class.WTF::HashMap.747" }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.750" = type opaque
%"class.blink::HeapHashSet.751" = type { %"class.WTF::HashSet.754" }
%"class.WTF::HashSet.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"class.blink::WeakMember.757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.761", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.787", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.884", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.915", %"class.blink::ResourceResponse", %class.scoped_refptr.917, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, %union.anon.765 }
%union.anon.765 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.772", i8, %"class.absl::optional.777", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.766" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::KURL"* }
%"class.absl::optional.772" = type { %"class.absl::optional_internal::optional_data.773" }
%"class.absl::optional_internal::optional_data.773" = type { %"class.absl::optional_internal::optional_data_base.774" }
%"class.absl::optional_internal::optional_data_base.774" = type { %"class.absl::optional_internal::optional_data_dtor_base.775" }
%"class.absl::optional_internal::optional_data_dtor_base.775" = type { i8, [7 x i8], %union.anon.776 }
%union.anon.776 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.777" = type { %"class.absl::optional_internal::optional_data.778" }
%"class.absl::optional_internal::optional_data.778" = type { %"class.absl::optional_internal::optional_data_base.779" }
%"class.absl::optional_internal::optional_data_base.779" = type { %"class.absl::optional_internal::optional_data_dtor_base.780" }
%"class.absl::optional_internal::optional_data_dtor_base.780" = type { i8, %union.anon.781 }
%union.anon.781 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.782", %"class.WTF::Vector.590" }
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { i32*, i32, i32 }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.787" = type { %"class.WTF::VectorBuffer.788" }
%"class.WTF::VectorBuffer.788" = type { %"class.WTF::VectorBufferBase.789" }
%"class.WTF::VectorBufferBase.789" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.880" }
%"class.WTF::HashMap.880" = type { %"class.WTF::HashTable.881" }
%"class.WTF::HashTable.881" = type <{ %"struct.WTF::KeyValuePair.883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.883" = type <{ %"class.blink::WeakMember.1105", i32, [4 x i8] }>
%"class.blink::WeakMember.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1107", [7 x i8], %"class.blink::Member.953", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1107" = type { i8 }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.758" }
%"class.blink::HeapHashSet.884" = type { %"class.WTF::HashSet.887" }
%"class.WTF::HashSet.887" = type { %"class.WTF::HashTable.888" }
%"class.WTF::HashTable.888" = type <{ %"class.blink::WeakMember.890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.890" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.891", i8, i8, %class.scoped_refptr.896, %class.scoped_refptr.911, %class.scoped_refptr.913 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.891" = type { %"class.WTF::HashTable.892" }
%"class.WTF::HashTable.892" = type <{ %"struct.std::__1::pair.895"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.895" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.896 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.897", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.899" }
%"class.blink::PersistentBase.899" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.902" }
%"class.blink::HeapHashMap.902" = type { %"class.WTF::HashMap.905" }
%"class.WTF::HashMap.905" = type { %"class.WTF::HashTable.906" }
%"class.WTF::HashTable.906" = type <{ %"struct.WTF::KeyValuePair.908"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.908" = type { %"class.blink::WeakMember.909", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.911 = type { %"class.base::RefCountedData.912"* }
%"class.base::RefCountedData.912" = type opaque
%class.scoped_refptr.913 = type { %"class.base::RefCountedData.914"* }
%"class.base::RefCountedData.914" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.843" }
%"class.base::time_internal::TimeBase.843" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.488, %class.scoped_refptr.488, %class.scoped_refptr.488, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.795, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.807", %"class.absl::optional.812", %"class.absl::optional.822", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.832", %"class.absl::optional.822", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.822", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.832", %"class.absl::optional.837", i8, %class.scoped_refptr.842 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.790" }
%"class.WTF::HashMap.790" = type { %"class.WTF::HashTable.791" }
%"class.WTF::HashTable.791" = type <{ %"struct.WTF::KeyValuePair.794"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.794" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.795 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.796", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.805, i8, %"class.url::Origin" }
%"class.base::RefCounted.796" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.34 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.797" }
%"class.std::__1::vector.797" = type { %"class.std::__1::__vector_base.798" }
%"class.std::__1::__vector_base.798" = type { %"class.std::__1::unique_ptr.799"*, %"class.std::__1::unique_ptr.799"*, %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.std::__1::unique_ptr.799"* }
%class.scoped_refptr.805 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.806", [4 x i8] }>
%"class.base::RefCountedThreadSafe.806" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.807" = type { %"class.absl::optional_internal::optional_data.808" }
%"class.absl::optional_internal::optional_data.808" = type { %"class.absl::optional_internal::optional_data_base.809" }
%"class.absl::optional_internal::optional_data_base.809" = type { %"class.absl::optional_internal::optional_data_dtor_base.810" }
%"class.absl::optional_internal::optional_data_dtor_base.810" = type { i8, %union.anon.811 }
%union.anon.811 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.812" = type { %"class.absl::optional_internal::optional_data.813" }
%"class.absl::optional_internal::optional_data.813" = type { %"class.absl::optional_internal::optional_data_base.814" }
%"class.absl::optional_internal::optional_data_base.814" = type { %"class.absl::optional_internal::optional_data_dtor_base.815" }
%"class.absl::optional_internal::optional_data_dtor_base.815" = type { i8, %union.anon.816 }
%union.anon.816 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.817", %"class.WTF::Vector.590", %"class.WTF::String" }
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819" }
%"class.WTF::VectorBufferBase.819" = type { %class.scoped_refptr.488*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.827", %"class.absl::optional.827" }
%"class.absl::optional.827" = type { %"class.absl::optional_internal::optional_data.828" }
%"class.absl::optional_internal::optional_data.828" = type { %"class.absl::optional_internal::optional_data_base.829" }
%"class.absl::optional_internal::optional_data_base.829" = type { %"class.absl::optional_internal::optional_data_dtor_base.830" }
%"class.absl::optional_internal::optional_data_dtor_base.830" = type { i8, %union.anon.831 }
%union.anon.831 = type { %"class.base::TimeDelta" }
%"class.absl::optional.822" = type { %"class.absl::optional_internal::optional_data.823" }
%"class.absl::optional_internal::optional_data.823" = type { %"class.absl::optional_internal::optional_data_base.824" }
%"class.absl::optional_internal::optional_data_base.824" = type { %"class.absl::optional_internal::optional_data_dtor_base.825" }
%"class.absl::optional_internal::optional_data_dtor_base.825" = type { i8, %union.anon.826 }
%union.anon.826 = type { %"class.WTF::String" }
%"class.absl::optional.832" = type { %"class.absl::optional_internal::optional_data.833" }
%"class.absl::optional_internal::optional_data.833" = type { %"class.absl::optional_internal::optional_data_base.834" }
%"class.absl::optional_internal::optional_data_base.834" = type { %"class.absl::optional_internal::optional_data_dtor_base.835" }
%"class.absl::optional_internal::optional_data_dtor_base.835" = type { i8, %union.anon.836 }
%union.anon.836 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.837" = type { %"class.absl::optional_internal::optional_data.838" }
%"class.absl::optional_internal::optional_data.838" = type { %"class.absl::optional_internal::optional_data_base.839" }
%"class.absl::optional_internal::optional_data_base.839" = type { %"class.absl::optional_internal::optional_data_dtor_base.840" }
%"class.absl::optional_internal::optional_data_dtor_base.840" = type { i8, %union.anon.841 }
%union.anon.841 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.842 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1093", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1093" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1094" }
%"class.std::__1::vector.1094" = type { %"class.std::__1::__vector_base.1095" }
%"class.std::__1::__vector_base.1095" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { i32* }
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.844", %class.scoped_refptr.859, %class.scoped_refptr.860, %"struct.blink::CacheControlHeader", %"class.absl::optional.827", %"class.absl::optional.861", %"class.absl::optional.861", %"class.absl::optional.861", i64, %"class.blink::KURL", %"class.WTF::Vector.866", %"class.WTF::String", %"class.WTF::Vector.590", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.832", %"class.WTF::Vector.590", %"class.blink::KURL", %"class.absl::optional.871" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.844" = type { %"class.absl::optional_internal::optional_data.845" }
%"class.absl::optional_internal::optional_data.845" = type { %"class.absl::optional_internal::optional_data_base.846" }
%"class.absl::optional_internal::optional_data_base.846" = type { %"class.absl::optional_internal::optional_data_dtor_base.847" }
%"class.absl::optional_internal::optional_data_dtor_base.847" = type { i8, %union.anon.848 }
%union.anon.848 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.590", %"class.WTF::String", i64, i64, %"class.WTF::Vector.849", %"class.WTF::Vector.854" }
%"class.WTF::Vector.849" = type { %"class.WTF::VectorBuffer.850" }
%"class.WTF::VectorBuffer.850" = type { %"class.WTF::VectorBufferBase.851" }
%"class.WTF::VectorBufferBase.851" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.854" = type { %"class.WTF::VectorBuffer.855" }
%"class.WTF::VectorBuffer.855" = type { %"class.WTF::VectorBufferBase.856" }
%"class.WTF::VectorBufferBase.856" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.859 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.860 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.861" = type { %"class.absl::optional_internal::optional_data.862" }
%"class.absl::optional_internal::optional_data.862" = type { %"class.absl::optional_internal::optional_data_base.863" }
%"class.absl::optional_internal::optional_data_base.863" = type { %"class.absl::optional_internal::optional_data_dtor_base.864" }
%"class.absl::optional_internal::optional_data_dtor_base.864" = type { i8, %union.anon.865 }
%union.anon.865 = type { %"class.base::Time" }
%"class.WTF::Vector.866" = type { %"class.WTF::VectorBuffer.867" }
%"class.WTF::VectorBuffer.867" = type { %"class.WTF::VectorBufferBase.868" }
%"class.WTF::VectorBufferBase.868" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.871" = type { %"class.absl::optional_internal::optional_data.872" }
%"class.absl::optional_internal::optional_data.872" = type { %"class.absl::optional_internal::optional_data_base.873" }
%"class.absl::optional_internal::optional_data_base.873" = type { %"class.absl::optional_internal::optional_data_dtor_base.874" }
%"class.absl::optional_internal::optional_data_dtor_base.874" = type { i8, %union.anon.875 }
%union.anon.875 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.917 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.918", i64, %"class.WTF::Vector.920", %"class.WTF::Vector.925" }
%"class.WTF::RefCounted.918" = type { %"class.base::RefCounted.919" }
%"class.base::RefCounted.919" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922" }
%"class.WTF::VectorBufferBase.922" = type { i8*, i32, i32 }
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.926" }
%"class.WTF::VectorBuffer.926" = type { %"class.WTF::VectorBufferBase.927" }
%"class.WTF::VectorBufferBase.927" = type { %"class.std::__1::unique_ptr.928"*, i32, i32 }
%"class.std::__1::unique_ptr.928" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.931" }
%"class.std::__1::__tree.931" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.932", %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.blink::HeapHashMap.940" = type { %"class.WTF::HashMap.943" }
%"class.WTF::HashMap.943" = type { %"class.WTF::HashTable.944" }
%"class.WTF::HashTable.944" = type <{ %"struct.WTF::KeyValuePair.946"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.946" = type opaque
%"class.blink::HeapVector.947" = type { %"class.WTF::Vector.950" }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"class.blink::Member.953"*, i32, i32 }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.641", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.18, %"class.base::WeakPtrFactory.957" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.957" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.641" = type { %"class.blink::MemberBase.634" }
%"class.blink::HeapHashMap.958" = type { %"class.WTF::HashMap.961" }
%"class.WTF::HashMap.961" = type { %"class.WTF::HashTable.962" }
%"class.WTF::HashTable.962" = type <{ %"struct.WTF::KeyValuePair.964"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.964" = type opaque
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.967" }
%"class.WTF::VectorBufferBase.967" = type { %class.scoped_refptr.968*, i32, i32 }
%class.scoped_refptr.968 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.971" = type { %"class.WTF::HashSet.974" }
%"class.WTF::HashSet.974" = type { %"class.WTF::HashTable.975" }
%"class.WTF::HashTable.975" = type <{ %"class.blink::Member.915"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.WTF::HashSet.980"* }
%"class.WTF::HashSet.980" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.735 }
%class.scoped_refptr.735 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.984" }
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.988" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.635" = type { %"class.WTF::HashSet.638" }
%"class.WTF::HashSet.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"class.blink::WeakMember.641"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.642 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.643", [4 x i8] }>
%"class.base::RefCounted.643" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.570" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.573", %"class.WTF::HashMap.580", %"class.WTF::HashMap.585", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.590", i32, %"class.mojo::StructPtr.595", %"class.WTF::Vector.590" }
%"class.mojo::StructPtr.573" = type { %"class.std::__1::unique_ptr.574" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type opaque
%"class.WTF::HashMap.585" = type { %"class.WTF::HashTable.586" }
%"class.WTF::HashTable.586" = type <{ %"struct.WTF::KeyValuePair.589"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.589" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.595" = type { %"class.std::__1::unique_ptr.596" }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.590", i8, i8, [6 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.648", i32, [4 x i8] }>
%"class.std::__1::bitset.648" = type { %"class.std::__1::__bitset.649" }
%"class.std::__1::__bitset.649" = type { [25 x i64] }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.654" = type { %"class.blink::PersistentBase.655" }
%"class.blink::PersistentBase.655" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.656 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.657 }
%class.scoped_refptr.657 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.658" = type { %"class.WTF::HashTable.659" }
%"class.WTF::HashTable.659" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"class.std::__1::unique_ptr.666"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.666" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"struct.blink::ThreadCreationParams" = type <{ i32, [4 x i8], i8*, %"class.blink::FrameOrWorkerScheduler"*, i32, i8, [3 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.17", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15", [4 x i8] }>
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.19, i8, [7 x i8] }>
%class.scoped_refptr.19 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.20", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.blink::WorkerBackingThreadStartupData" = type { i32, i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.642, %"class.WTF::Vector.567", i32, [4 x i8], %"class.std::__1::unique_ptr.1006", %class.scoped_refptr.488, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent.615", %"class.std::__1::unique_ptr.627", %"class.absl::optional.1012", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.1017", i32, [4 x i8], %"class.blink::CrossThreadPersistent.1035", %"class.mojo::PendingRemote.1044", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.489", %"class.base::UnguessableToken", i64, %"class.absl::optional.1045", i8, i8, [6 x i8] }>
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.999", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.999" = type { %"class.std::__1::__vector_base.1000" }
%"class.std::__1::__vector_base.1000" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1001" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.WTF::Vector.590"* }
%"class.absl::optional.1012" = type { %"class.absl::optional_internal::optional_data.1013" }
%"class.absl::optional_internal::optional_data.1013" = type { %"class.absl::optional_internal::optional_data_base.1014" }
%"class.absl::optional_internal::optional_data_base.1014" = type { %"class.absl::optional_internal::optional_data_dtor_base.1015" }
%"class.absl::optional_internal::optional_data_dtor_base.1015" = type { i8, %union.anon.1016 }
%union.anon.1016 = type { i32 }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1020", %"class.WTF::HashMap.1020", %"class.WTF::HashMap.1020", %"class.WTF::HashMap.1020", %"class.WTF::HashMap.1020", %"class.WTF::HashMap.1020", %"class.WTF::HashMap.1020", %"class.std::__1::unique_ptr.1025" }
%"class.WTF::HashMap.1020" = type { %"class.WTF::HashTable.1021" }
%"class.WTF::HashTable.1021" = type <{ %"struct.WTF::KeyValuePair.1024"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1024" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.WTF::Vector.1028"* }
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"struct.std::__1::pair.1226"*, i32, i32 }
%"struct.std::__1::pair.1226" = type { i32, %"class.WTF::String" }
%"class.blink::CrossThreadPersistent.1035" = type { %"class.blink::PersistentBase.1036" }
%"class.blink::PersistentBase.1036" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.1039", %"class.WTF::Mutex" }
%"class.WTF::HashMap.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"struct.WTF::KeyValuePair.1043"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1043" = type opaque
%"class.mojo::PendingRemote.1044" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.absl::optional.1045" = type { %"class.absl::optional_internal::optional_data.1046" }
%"class.absl::optional_internal::optional_data.1046" = type { %"class.absl::optional_internal::optional_data_base.1047" }
%"class.absl::optional_internal::optional_data_base.1047" = type { %"class.absl::optional_internal::optional_data_dtor_base.1048" }
%"class.absl::optional_internal::optional_data_dtor_base.1048" = type { i8, [7 x i8], %union.anon.1049 }
%union.anon.1049 = type { %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::AnimationWorkletGlobalScope" = type { %"class.blink::WorkletGlobalScope.base", [6 x i8], %"class.blink::HeapHashMap.1062", %"class.blink::HeapHashMap.1069", i8, %"class.util::TokenType.1076" }
%"class.blink::WorkletGlobalScope.base" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.488, i8, [7 x i8], %"class.blink::CrossThreadPersistent.1035", i32, i32, %"class.blink::Member.1053", %"class.blink::WorkerThread"*, %"class.util::TokenType", %"class.std::__1::unique_ptr.1056", i8, i8 }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.1055" }
%"class.base::StrongAlias.1055" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.blink::HeapHashMap.1062" = type { %"class.WTF::HashMap.1065" }
%"class.WTF::HashMap.1065" = type { %"class.WTF::HashTable.1066" }
%"class.WTF::HashTable.1066" = type <{ %"struct.WTF::KeyValuePair.1068"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1068" = type opaque
%"class.blink::HeapHashMap.1069" = type { %"class.WTF::HashMap.1072" }
%"class.WTF::HashMap.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"struct.WTF::KeyValuePair.1075"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1075" = type { i32, %"class.blink::Member.1114" }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::Animator"* }
%"class.blink::Animator" = type { %"class.blink::NameClient", %"class.blink::Member.1118", %"class.blink::TraceWrapperV8Reference.1128", %"class.WTF::String", %"class.blink::WorkletAnimationOptions", %"class.blink::Member.1200" }
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::AnimatorDefinition"* }
%"class.blink::AnimatorDefinition" = type { %"class.blink::NameClient", %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126" }
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::V8AnimatorConstructor"* }
%"class.blink::V8AnimatorConstructor" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::V8AnimateCallback"* }
%"class.blink::V8AnimateCallback" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::V8StateCallback"* }
%"class.blink::V8StateCallback" = type opaque
%"class.blink::TraceWrapperV8Reference.1128" = type { %"class.v8::TracedReference.1129" }
%"class.v8::TracedReference.1129" = type { %"class.v8::BasicTracedReference.1130" }
%"class.v8::BasicTracedReference.1130" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::WorkletAnimationOptions" = type { %"class.cc::AnimationOptions", %class.scoped_refptr.1131 }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%class.scoped_refptr.1131 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1133", i64, %"class.WTF::Vector.1137", %"class.WTF::Vector.1142", %"class.WTF::Vector.1148", %"class.WTF::Vector.1166", %class.scoped_refptr.487, %"class.WTF::HashMap.1172", %"class.WTF::Vector.1177", %"class.WTF::Vector.1137", %"class.WTF::Vector.1183", %"class.WTF::HashMap.1189", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1132" }
%"class.base::RefCountedThreadSafe.1132" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { i8* }
%"class.WTF::Vector.1142" = type { %"class.WTF::VectorBuffer.1143" }
%"class.WTF::VectorBuffer.1143" = type { %"class.WTF::VectorBufferBase.1144", [8 x i8] }
%"class.WTF::VectorBufferBase.1144" = type { %class.scoped_refptr.1145*, i32, i32 }
%class.scoped_refptr.1145 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1152", %"class.std::__1::unique_ptr.1158" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1151 }
%class.scoped_refptr.1151 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1166" = type { %"class.WTF::VectorBuffer.1167" }
%"class.WTF::VectorBuffer.1167" = type { %"class.WTF::VectorBufferBase.1168" }
%"class.WTF::VectorBufferBase.1168" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1169", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1169" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1172" = type { %"class.WTF::HashTable.1173" }
%"class.WTF::HashTable.1173" = type <{ %"struct.WTF::KeyValuePair.1176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1176" = type opaque
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.mojo::ScopedHandleBase.1180"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1180" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1137" = type { %"class.WTF::VectorBuffer.1138" }
%"class.WTF::VectorBuffer.1138" = type { %"class.WTF::VectorBufferBase.1139", [16 x i8] }
%"class.WTF::VectorBufferBase.1139" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"class.mojo::PendingRemote.1186"*, i32, i32 }
%"class.mojo::PendingRemote.1186" = type opaque
%"class.WTF::HashMap.1189" = type { %"class.WTF::HashTable.1190" }
%"class.WTF::HashTable.1190" = type <{ %"struct.WTF::KeyValuePair.1193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1193" = type { i8**, %"class.std::__1::unique_ptr.1194" }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::WorkletGroupEffect"* }
%"class.blink::WorkletGroupEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.1202" }
%"class.blink::HeapVector.1202" = type { %"class.WTF::Vector.1205" }
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { %"class.blink::Member.1208"*, i32, i32 }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::WorkletAnimationEffect"* }
%"class.blink::WorkletAnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.absl::optional.827", %"struct.blink::Timing", %"struct.blink::Timing::CalculatedTiming", %"class.absl::optional.827" }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1210", i32, [4 x i8], %class.scoped_refptr.1215, i16, [6 x i8] }>
%"class.blink::AnimationTimeDelta" = type { double }
%"class.absl::optional.1210" = type { %"class.absl::optional_internal::optional_data.1211" }
%"class.absl::optional_internal::optional_data.1211" = type { %"class.absl::optional_internal::optional_data_base.1212" }
%"class.absl::optional_internal::optional_data_base.1212" = type { %"class.absl::optional_internal::optional_data_dtor_base.1213" }
%"class.absl::optional_internal::optional_data_dtor_base.1213" = type { i8, %union.anon.1214 }
%union.anon.1214 = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr.1215 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1216", i32 }
%"class.WTF::ThreadSafeRefCounted.1216" = type { %"class.base::RefCountedThreadSafe.1217" }
%"class.base::RefCountedThreadSafe.1217" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.1218", %"class.absl::optional.1218", i8, i8, i8, %"class.absl::optional.1210", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1218" = type { %"class.absl::optional_internal::optional_data.1219" }
%"class.absl::optional_internal::optional_data.1219" = type { %"class.absl::optional_internal::optional_data_base.1220" }
%"class.absl::optional_internal::optional_data_base.1220" = type { %"class.absl::optional_internal::optional_data_dtor_base.1221" }
%"class.absl::optional_internal::optional_data_dtor_base.1221" = type { i8, %union.anon.1222 }
%union.anon.1222 = type { double }
%"class.util::TokenType.1076" = type { %"class.base::StrongAlias.1077" }
%"class.base::StrongAlias.1077" = type { %"class.base::UnguessableToken" }
%"class.blink::PaintWorkletGlobalScope" = type { %"class.blink::WorkletGlobalScope.base", [6 x i8], %"class.blink::HeapHashMap.1078", i8, %"class.util::TokenType.1085" }
%"class.blink::HeapHashMap.1078" = type { %"class.WTF::HashMap.1081" }
%"class.WTF::HashMap.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type opaque
%"class.util::TokenType.1085" = type { %"class.base::StrongAlias.1086" }
%"class.base::StrongAlias.1086" = type { %"class.base::UnguessableToken" }
%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array.1087", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"struct.std::__1::array.1087" = type { [4 x i8*] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE11GetInstanceEv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE14EnsureInstanceERKNS_20ThreadCreationParamsE = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE10InitializeENSt3__110unique_ptrINS_19WorkerBackingThreadENS3_14default_deleteIS5_EEEE = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE13ClearInstanceEv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE15ShutdownAndWaitEv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE9GetThreadEv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE25InitializeOnWorkletThreadEv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23ShutdownOnWorkletThreadEPN4base13WaitableEventE = comdat any

$_ZN5blink30AnimationAndPaintWorkletThread24ClearWorkerBackingThreadEv = comdat any

$_ZNK5blink30AnimationAndPaintWorkletThread13GetThreadTypeEv = comdat any

$_ZNK5blink30AnimationAndPaintWorkletThread21IsOwningBackingThreadEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WorkletThreadHolderINS2_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS5_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS6_EENSC_IS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WorkletThreadHolderINS2_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSB_IS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E = comdat any

$_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex = comdat any

$_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E = weak_odr hidden local_unnamed_addr global %"class.blink::WorkletThreadHolder"* null, comdat, align 8
@_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex = linkonce_odr hidden local_unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex = linkonce_odr hidden global i64 0, comdat, align 8
@.str = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/core/workers/worklet_thread_holder.h\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"ShutdownAndWait\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [58 x i8] c"AnimationAndPaintWorkletThread::CreateForAnimationWorklet\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"AnimationAndPaintWorkletThread::CreateForPaintWorklet\00", align 1
@_ZTVN5blink30AnimationAndPaintWorkletThreadE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WorkerThread"*, %"struct.base::PendingTask"*, i1)* @_ZN5blink12WorkerThread15WillProcessTaskERKN4base11PendingTaskEb to i8*), i8* bitcast (void (%"class.blink::WorkerThread"*, %"struct.base::PendingTask"*)* @_ZN5blink12WorkerThread14DidProcessTaskERKN4base11PendingTaskE to i8*), i8* bitcast (void (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZN5blink30AnimationAndPaintWorkletThreadD2Ev to i8*), i8* bitcast (void (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZN5blink30AnimationAndPaintWorkletThreadD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkerThread"*)* @_ZN5blink12WorkerThread19TerminateForTestingEv to i8*), i8* bitcast (%"class.blink::WorkerBackingThread"* (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZN5blink30AnimationAndPaintWorkletThread22GetWorkerBackingThreadEv to i8*), i8* bitcast (void (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZN5blink30AnimationAndPaintWorkletThread24ClearWorkerBackingThreadEv to i8*), i8* bitcast (i32 (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZNK5blink30AnimationAndPaintWorkletThread13GetThreadTypeEv to i8*), i8* bitcast (%"class.blink::WorkerOrWorkletGlobalScope"* (%"class.blink::AnimationAndPaintWorkletThread"*, %"struct.blink::GlobalScopeCreationParams"*)* @_ZN5blink30AnimationAndPaintWorkletThread23CreateWorkerGlobalScopeENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZNK5blink30AnimationAndPaintWorkletThread21IsOwningBackingThreadEv to i8*)] }, align 8
@_ZN5blink12_GLOBAL__N_111s_ref_countE = internal unnamed_addr global i32 0, align 4
@.str.5 = private unnamed_addr constant [28 x i8] c"CollectAllGarbageForTesting\00", align 1
@.str.6 = private unnamed_addr constant [87 x i8] c"../../third_party/blink/renderer/modules/worklet/animation_and_paint_worklet_thread.cc\00", align 1
@.str.7 = private unnamed_addr constant [56 x i8] c"AnimationAndPaintWorkletThread::CreateWorkerGlobalScope\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink30AnimationAndPaintWorkletThreadC1ENS0_11WorkletTypeERNS_20WorkerReportingProxyE = hidden unnamed_addr alias void (%"class.blink::AnimationAndPaintWorkletThread"*, i32, %"class.blink::WorkerReportingProxy"*), void (%"class.blink::AnimationAndPaintWorkletThread"*, i32, %"class.blink::WorkerReportingProxy"*)* @_ZN5blink30AnimationAndPaintWorkletThreadC2ENS0_11WorkletTypeERNS_20WorkerReportingProxyE
@_ZN5blink30AnimationAndPaintWorkletThreadD1Ev = hidden unnamed_addr alias void (%"class.blink::AnimationAndPaintWorkletThread"*), void (%"class.blink::AnimationAndPaintWorkletThread"*)* @_ZN5blink30AnimationAndPaintWorkletThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::WorkletThreadHolder"* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE11GetInstanceEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 40) #8
  %8 = bitcast i8* %7 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %8, i1 zeroext false) #8
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  br label %9

9:                                                ; preds = %0, %3, %6
  %10 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex, i64 0, i32 0, i32 0), align 8
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #8
  %12 = load %"class.blink::WorkletThreadHolder"*, %"class.blink::WorkletThreadHolder"** @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #8
  ret %"class.blink::WorkletThreadHolder"* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 40) #8
  %8 = bitcast i8* %7 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %8, i1 zeroext false) #8
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  br label %9

9:                                                ; preds = %3, %6, %0
  %10 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex, i64 0, i32 0, i32 0), align 8
  ret %"class.WTF::Mutex"* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE14EnsureInstanceERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 40) #8
  %9 = bitcast i8* %8 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %9, i1 zeroext false) #8
  store i8* %8, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  br label %10

10:                                               ; preds = %1, %4, %7
  %11 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex, i64 0, i32 0, i32 0), align 8
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #8
  %13 = load %"class.blink::WorkletThreadHolder"*, %"class.blink::WorkletThreadHolder"** @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E, align 8
  %14 = icmp eq %"class.blink::WorkletThreadHolder"* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = tail call i8* @_Znwm(i64 8) #9
  %17 = bitcast i8* %16 to %"class.blink::WorkletThreadHolder"*
  %18 = bitcast i8* %16 to i64*
  store i64 0, i64* %18, align 8
  store i8* %16, i8** bitcast (%"class.blink::WorkletThreadHolder"** @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E to i8**), align 8
  %19 = tail call noalias i8* @malloc(i64 16) #8
  %20 = bitcast i8* %19 to %"class.blink::WorkerBackingThread"*
  tail call void @_ZN5blink19WorkerBackingThreadC1ERKNS_20ThreadCreationParamsE(%"class.blink::WorkerBackingThread"* %20, %"struct.blink::ThreadCreationParams"* dereferenceable(32) %0) #8
  tail call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE10InitializeENSt3__110unique_ptrINS_19WorkerBackingThreadENS3_14default_deleteIS5_EEEE(%"class.blink::WorkletThreadHolder"* nonnull %17, %"class.blink::WorkerBackingThread"* %20)
  br label %21

21:                                               ; preds = %10, %15
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE10InitializeENSt3__110unique_ptrINS_19WorkerBackingThreadENS3_14default_deleteIS5_EEEE(%"class.blink::WorkletThreadHolder"*, %"class.blink::WorkerBackingThread"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = ptrtoint %"class.blink::WorkerBackingThread"* %1 to i64
  %10 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %10, align 8
  %12 = bitcast %"class.blink::WorkletThreadHolder"* %0 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq %"class.blink::WorkerBackingThread"* %11, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  tail call void @_ZN5blink19WorkerBackingThreadD1Ev(%"class.blink::WorkerBackingThread"* nonnull %11) #8
  %15 = bitcast %"class.blink::WorkerBackingThread"* %11 to i8*
  tail call void @free(i8* %15) #8
  %16 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %10, align 8
  br label %17

17:                                               ; preds = %2, %14
  %18 = phi %"class.blink::WorkerBackingThread"* [ %1, %2 ], [ %16, %14 ]
  %19 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Thread"*, %"class.blink::Thread"** %19, align 8
  %21 = bitcast %"class.blink::Thread"* %20 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %22 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %22, i64 3
  %24 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %23, align 8
  %25 = tail call %"class.base::SingleThreadTaskRunner"* %24(%"class.blink::Thread"* %20) #8
  %26 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 61) #8
  %27 = ptrtoint %"class.blink::WorkletThreadHolder"* %0 to i64
  %28 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = call i8* @_Znwm(i64 56) #9, !noalias !3
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19WorkletThreadHolderINS2_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS5_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !3
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = bitcast i8* %31 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WorkletThreadHolder"*)* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE25InitializeOnWorkletThreadEv to i64), i64 0>, <2 x i64>* %32, align 8, !noalias !3
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %27, i64* %34, align 8, !noalias !3
  %35 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8, !noalias !10
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = ptrtoint i8* %29 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8, !noalias !11
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !noalias !11
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #8, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8, !noalias !10
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #8, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %41 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = bitcast %"class.base::SingleThreadTaskRunner"* %25 to %"class.base::TaskRunner"*
  %44 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %37, i64* %46, align 8, !alias.scope !14
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8, !noalias !14
  %47 = bitcast %"class.base::SingleThreadTaskRunner"* %25 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %48 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %47, align 8
  %49 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %48, align 8
  %50 = call zeroext i1 %49(%"class.base::TaskRunner"* %43, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %3, i64 0) #8
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #8
  %52 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %53 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #8
  %54 = icmp eq %"class.base::SingleThreadTaskRunner"* %25, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %17
  %56 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %25, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe.15"* %61 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %62) #8
  br label %63

63:                                               ; preds = %60, %55, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE13ClearInstanceEv() local_unnamed_addr #0 comdat align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 40) #8
  %8 = bitcast i8* %7 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %8, i1 zeroext false) #8
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  br label %9

9:                                                ; preds = %0, %3, %6
  %10 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex, i64 0, i32 0, i32 0), align 8
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #8
  %12 = load %"class.blink::WorkletThreadHolder"*, %"class.blink::WorkletThreadHolder"** @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E, align 8
  %13 = icmp eq %"class.blink::WorkletThreadHolder"* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %9
  tail call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE15ShutdownAndWaitEv(%"class.blink::WorkletThreadHolder"* nonnull %12)
  %15 = load %"class.blink::WorkletThreadHolder"*, %"class.blink::WorkletThreadHolder"** @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E, align 8
  %16 = icmp eq %"class.blink::WorkletThreadHolder"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %18, align 8
  store %"class.blink::WorkerBackingThread"* null, %"class.blink::WorkerBackingThread"** %18, align 8
  %20 = icmp eq %"class.blink::WorkerBackingThread"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN5blink19WorkerBackingThreadD1Ev(%"class.blink::WorkerBackingThread"* nonnull %19) #8
  %22 = bitcast %"class.blink::WorkerBackingThread"* %19 to i8*
  tail call void @free(i8* %22) #8
  br label %23

23:                                               ; preds = %17, %21
  %24 = bitcast %"class.blink::WorkletThreadHolder"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %23, %14
  store %"class.blink::WorkletThreadHolder"* null, %"class.blink::WorkletThreadHolder"** @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23thread_holder_instance_E, align 8
  br label %26

26:                                               ; preds = %9, %25
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE15ShutdownAndWaitEv(%"class.blink::WorkletThreadHolder"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::WaitableEvent", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = bitcast %"class.base::WaitableEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = bitcast %"class.base::WaitableEvent"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %6, i32 0, i32 1) #8
  %11 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Thread"*, %"class.blink::Thread"** %13, align 8
  %15 = bitcast %"class.blink::Thread"* %14 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %16 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %16, i64 3
  %18 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %17, align 8
  %19 = call %"class.base::SingleThreadTaskRunner"* %18(%"class.blink::Thread"* %14) #8
  %20 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 76) #8
  %21 = ptrtoint %"class.blink::WorkletThreadHolder"* %0 to i64
  %22 = ptrtoint %"class.base::WaitableEvent"* %6 to i64
  %23 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = call i8* @_Znwm(i64 64) #9, !noalias !17
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS6_EENSC_IS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19WorkletThreadHolderINS2_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSB_IS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !17
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*)* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23ShutdownOnWorkletThreadEPN4base13WaitableEventE to i64), i64 0>, <2 x i64>* %27, align 8, !noalias !17
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %21, i64* %29, align 8, !noalias !17
  %30 = getelementptr inbounds i8, i8* %24, i64 56
  %31 = bitcast i8* %30 to i64*
  store i64 %22, i64* %31, align 8, !noalias !17
  %32 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8, !noalias !24
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = ptrtoint i8* %24 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %33, align 8, !noalias !25
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !25
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #8, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8, !noalias !24
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #8, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  %38 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast %"class.base::SingleThreadTaskRunner"* %19 to %"class.base::TaskRunner"*
  %41 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %34, i64* %43, align 8, !alias.scope !28
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8, !noalias !28
  %44 = bitcast %"class.base::SingleThreadTaskRunner"* %19 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %45 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %44, align 8
  %46 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %45, align 8
  %47 = call zeroext i1 %46(%"class.base::TaskRunner"* %40, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %4, i64 0) #8
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #8
  %49 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %50 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #8
  %51 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %1
  %53 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %19, i64 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw sub i32* %54, i32 1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %53, i64 -2
  %59 = bitcast %"class.base::RefCountedThreadSafe.15"* %58 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %59) #8
  br label %60

60:                                               ; preds = %1, %52, %57
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %6) #8
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.blink::WorkerBackingThread"* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE9GetThreadEv(%"class.blink::WorkletThreadHolder"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %2, align 8
  ret %"class.blink::WorkerBackingThread"* %3
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE25InitializeOnWorkletThreadEv(%"class.blink::WorkletThreadHolder"*) #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.blink::WorkerBackingThreadStartupData"*
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call noalias i8* @malloc(i64 40) #8
  %11 = bitcast i8* %10 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %11, i1 zeroext false) #8
  store i8* %10, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex) #8
  br label %12

12:                                               ; preds = %1, %6, %9
  %13 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE19HolderInstanceMutexEvE14s_holder_mutex, i64 0, i32 0, i32 0), align 8
  %14 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %13, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %14) #8
  %15 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %15, align 8
  %17 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  store i64 0, i64* %2, align 8
  call void @_ZN5blink19WorkerBackingThread25InitializeOnBackingThreadERKNS_30WorkerBackingThreadStartupDataE(%"class.blink::WorkerBackingThread"* %16, %"struct.blink::WorkerBackingThreadStartupData"* nonnull dereferenceable(8) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %14) #8
  ret void
}

declare void @_ZN5blink19WorkerBackingThread25InitializeOnBackingThreadERKNS_30WorkerBackingThreadStartupDataE(%"class.blink::WorkerBackingThread"*, %"struct.blink::WorkerBackingThreadStartupData"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE23ShutdownOnWorkletThreadEPN4base13WaitableEventE(%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %3, align 8
  tail call void @_ZN5blink19WorkerBackingThread23ShutdownOnBackingThreadEv(%"class.blink::WorkerBackingThread"* %4) #8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %1) #8
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #6

declare void @_ZN5blink19WorkerBackingThread23ShutdownOnBackingThreadEv(%"class.blink::WorkerBackingThread"*) local_unnamed_addr #5

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::AnimationAndPaintWorkletThread"* @_ZN5blink30AnimationAndPaintWorkletThread25CreateForAnimationWorkletERNS_20WorkerReportingProxyE(%"class.blink::WorkerReportingProxy"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::ThreadCreationParams", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 144, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !31

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 144, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 144, i32 0), %7 ]
  %17 = call i8* @_Znwm(i64 328) #9
  %18 = bitcast i8* %17 to %"class.blink::AnimationAndPaintWorkletThread"*
  %19 = bitcast i8* %17 to %"class.blink::WorkerThread"*
  call void @_ZN5blink12WorkerThreadC2ERNS_20WorkerReportingProxyE(%"class.blink::WorkerThread"* nonnull %19, %"class.blink::WorkerReportingProxy"* %0) #8
  %20 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink30AnimationAndPaintWorkletThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 320
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = load i32, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %25 = icmp eq i32 %23, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  %27 = bitcast %"struct.blink::ThreadCreationParams"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #8
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %2, i32 5) #8
  call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE14EnsureInstanceERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* nonnull dereferenceable(32) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #8
  br label %28

28:                                               ; preds = %13, %26
  %29 = icmp eq i8* %16, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %28
  %31 = load i8, i8* %16, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #8
  br label %34

34:                                               ; preds = %28, %30, %33
  ret %"class.blink::AnimationAndPaintWorkletThread"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::AnimationAndPaintWorkletThread"* @_ZN5blink30AnimationAndPaintWorkletThread21CreateForPaintWorkletERNS_20WorkerReportingProxyE(%"class.blink::WorkerReportingProxy"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::ThreadCreationParams", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 195, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !31

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 195, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 195, i32 0), %7 ]
  %17 = call i8* @_Znwm(i64 328) #9
  %18 = bitcast i8* %17 to %"class.blink::AnimationAndPaintWorkletThread"*
  %19 = bitcast i8* %17 to %"class.blink::WorkerThread"*
  call void @_ZN5blink12WorkerThreadC2ERNS_20WorkerReportingProxyE(%"class.blink::WorkerThread"* nonnull %19, %"class.blink::WorkerReportingProxy"* %0) #8
  %20 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink30AnimationAndPaintWorkletThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 320
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 8
  %23 = load i32, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %25 = icmp eq i32 %23, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %13
  %27 = bitcast %"struct.blink::ThreadCreationParams"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #8
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %2, i32 5) #8
  call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE14EnsureInstanceERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* nonnull dereferenceable(32) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #8
  br label %28

28:                                               ; preds = %13, %26
  %29 = icmp eq i8* %16, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %28
  %31 = load i8, i8* %16, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #8
  br label %34

34:                                               ; preds = %28, %30, %33
  ret %"class.blink::AnimationAndPaintWorkletThread"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30AnimationAndPaintWorkletThreadC2ENS0_11WorkletTypeERNS_20WorkerReportingProxyE(%"class.blink::AnimationAndPaintWorkletThread"*, i32, %"class.blink::WorkerReportingProxy"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::ThreadCreationParams", align 8
  %5 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0
  tail call void @_ZN5blink12WorkerThreadC2ERNS_20WorkerReportingProxyE(%"class.blink::WorkerThread"* %5, %"class.blink::WorkerReportingProxy"* %2) #8
  %6 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink30AnimationAndPaintWorkletThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = load i32, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = bitcast %"struct.blink::ThreadCreationParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %4, i32 5) #8
  call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE14EnsureInstanceERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* nonnull dereferenceable(32) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  br label %13

13:                                               ; preds = %11, %3
  ret void
}

declare void @_ZN5blink12WorkerThreadC2ERNS_20WorkerReportingProxyE(%"class.blink::WorkerThread"*, %"class.blink::WorkerReportingProxy"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30AnimationAndPaintWorkletThread25EnsureSharedBackingThreadEv(%"class.blink::AnimationAndPaintWorkletThread"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::ThreadCreationParams", align 8
  %3 = bitcast %"struct.blink::ThreadCreationParams"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %2, i32 5) #8
  call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE14EnsureInstanceERKNS_20ThreadCreationParamsE(%"struct.blink::ThreadCreationParams"* nonnull dereferenceable(32) %2)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30AnimationAndPaintWorkletThreadD2Ev(%"class.blink::AnimationAndPaintWorkletThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink30AnimationAndPaintWorkletThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load i32, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %4 = add i32 %3, -1
  store i32 %4, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE13ClearInstanceEv() #8
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0
  tail call void @_ZN5blink12WorkerThreadD2Ev(%"class.blink::WorkerThread"* %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30AnimationAndPaintWorkletThread24ClearSharedBackingThreadEv(%"class.blink::AnimationAndPaintWorkletThread"* nocapture readnone) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE13ClearInstanceEv()
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12WorkerThreadD2Ev(%"class.blink::WorkerThread"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30AnimationAndPaintWorkletThreadD0Ev(%"class.blink::AnimationAndPaintWorkletThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink30AnimationAndPaintWorkletThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load i32, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %4 = add i32 %3, -1
  store i32 %4, i32* @_ZN5blink12_GLOBAL__N_111s_ref_countE, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE13ClearInstanceEv() #8
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0
  tail call void @_ZN5blink12WorkerThreadD2Ev(%"class.blink::WorkerThread"* %8) #8
  %9 = bitcast %"class.blink::AnimationAndPaintWorkletThread"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::WorkerBackingThread"* @_ZN5blink30AnimationAndPaintWorkletThread22GetWorkerBackingThreadEv(%"class.blink::AnimationAndPaintWorkletThread"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::WorkletThreadHolder"* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE11GetInstanceEv()
  %3 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %3, align 8
  ret %"class.blink::WorkerBackingThread"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30AnimationAndPaintWorkletThread27CollectAllGarbageForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::OnceCallback", align 8
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::WaitableEvent", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %8 = bitcast %"class.base::WaitableEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = bitcast %"class.base::WaitableEvent"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %5, i32 0, i32 1) #8
  %10 = call %"class.blink::WorkletThreadHolder"* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE11GetInstanceEv()
  %11 = icmp eq %"class.blink::WorkletThreadHolder"* %10, null
  br i1 %11, label %60, label %12

12:                                               ; preds = %0
  %13 = getelementptr inbounds %"class.blink::WorkletThreadHolder", %"class.blink::WorkletThreadHolder"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::WorkerBackingThread"*, %"class.blink::WorkerBackingThread"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::WorkerBackingThread", %"class.blink::WorkerBackingThread"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Thread"*, %"class.blink::Thread"** %15, align 8
  %17 = bitcast %"class.blink::Thread"* %16 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %18 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %18, i64 3
  %20 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %19, align 8
  %21 = call %"class.base::SingleThreadTaskRunner"* %20(%"class.blink::Thread"* %16) #8
  %22 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.6, i64 0, i64 0), i32 82) #8
  %23 = ptrtoint %"class.base::WaitableEvent"* %5 to i64
  %24 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = call i8* @_Znwm(i64 48) #9, !noalias !32
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !32
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i64*
  store i64 ptrtoint (void (%"class.base::WaitableEvent"*)* @_ZN5blinkL35CollectAllGarbageOnThreadForTestingEPN4base13WaitableEventE to i64), i64* %28, align 8, !noalias !32
  %29 = getelementptr inbounds i8, i8* %25, i64 40
  %30 = bitcast i8* %29 to i64*
  store i64 %23, i64* %30, align 8, !noalias !32
  %31 = bitcast %"class.base::OnceCallback"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8, !noalias !39
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %33 = ptrtoint i8* %25 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8, !noalias !40
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !40
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #8, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8, !noalias !39
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #8, !noalias !39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %37 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.base::SingleThreadTaskRunner"* %21 to %"class.base::TaskRunner"*
  %40 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %33, i64* %42, align 8, !alias.scope !43
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !43
  %43 = bitcast %"class.base::SingleThreadTaskRunner"* %21 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %44 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %43, align 8
  %45 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %44, align 8
  %46 = call zeroext i1 %45(%"class.base::TaskRunner"* %39, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %3, i64 0) #8
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #8
  %48 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %49 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  %50 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %12
  %52 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe.15"* %57 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %58) #8
  br label %59

59:                                               ; preds = %12, %51, %56
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %5) #8
  br label %60

60:                                               ; preds = %0, %59
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL35CollectAllGarbageOnThreadForTestingEPN4base13WaitableEventE(%"class.base::WaitableEvent"*) #0 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !46

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  tail call void @_ZN5blink11ThreadState27CollectAllGarbageForTestingENS_7BlinkGC10StackStateE(%"class.blink::ThreadState"* %11, i32 0) #8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink30AnimationAndPaintWorkletThread23CreateWorkerGlobalScopeENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEE(%"class.blink::AnimationAndPaintWorkletThread"*, %"struct.blink::GlobalScopeCreationParams"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %37

8:                                                ; preds = %2
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 144, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !31

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %14 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 144, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %18

18:                                               ; preds = %8, %12
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %8 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), %12 ]
  %20 = phi i8* [ null, %8 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 144, i32 0), %12 ]
  %21 = phi i64 [ -6148914691236517206, %8 ], [ %17, %12 ]
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 2080) #8
  %23 = bitcast i8* %22 to %"class.blink::AnimationWorkletGlobalScope"*
  %24 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0
  call void @_ZN5blink27AnimationWorkletGlobalScopeC1ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE(%"class.blink::AnimationWorkletGlobalScope"* %23, %"struct.blink::GlobalScopeCreationParams"* %1, %"class.blink::WorkerThread"* %24) #8
  %25 = getelementptr inbounds i8, i8* %22, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds i8, i8* %22, i64 1792
  %30 = bitcast i8* %29 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %30) #8
  %31 = bitcast i8* %22 to %"class.blink::WorkerOrWorkletGlobalScope"*
  %32 = icmp eq i8* %20, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %18
  %34 = load i8, i8* %20, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %59, label %36

36:                                               ; preds = %33
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %21) #8
  br label %59

37:                                               ; preds = %2
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 195, i32 0), align 16
  %39 = and i8 %38, 25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41, !prof !31

41:                                               ; preds = %37
  %42 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %43 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %45 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %45, i64* %44, align 8
  %46 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 195, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %42, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %47

47:                                               ; preds = %37, %41
  %48 = phi i64 [ -6148914691236517206, %37 ], [ %46, %41 ]
  %49 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %37 ], [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), %41 ]
  %50 = phi i8* [ null, %37 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 195, i32 0), %41 ]
  %51 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %0, i64 0, i32 0
  %52 = call %"class.blink::PaintWorkletGlobalScope"* @_ZN5blink23PaintWorkletGlobalScope6CreateENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE(%"struct.blink::GlobalScopeCreationParams"* %1, %"class.blink::WorkerThread"* %51) #8
  %53 = getelementptr inbounds %"class.blink::PaintWorkletGlobalScope", %"class.blink::PaintWorkletGlobalScope"* %52, i64 0, i32 0, i32 0
  %54 = icmp eq i8* %50, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %47
  %56 = load i8, i8* %50, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %50, i8* %49, i64 %48) #8
  br label %59

59:                                               ; preds = %18, %33, %36, %47, %55, %58
  %60 = phi %"class.blink::WorkerOrWorkletGlobalScope"* [ %31, %18 ], [ %31, %33 ], [ %31, %36 ], [ %53, %47 ], [ %53, %55 ], [ %53, %58 ]
  ret %"class.blink::WorkerOrWorkletGlobalScope"* %60
}

declare %"class.blink::PaintWorkletGlobalScope"* @_ZN5blink23PaintWorkletGlobalScope6CreateENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE(%"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*) local_unnamed_addr #5

declare void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WorkletThreadHolder"* @_ZN5blink30AnimationAndPaintWorkletThread32GetWorkletThreadHolderForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::WorkletThreadHolder"* @_ZN5blink19WorkletThreadHolderINS_30AnimationAndPaintWorkletThreadEE11GetInstanceEv()
  ret %"class.blink::WorkletThreadHolder"* %1
}

declare void @_ZN5blink12WorkerThread15WillProcessTaskERKN4base11PendingTaskEb(%"class.blink::WorkerThread"*, %"struct.base::PendingTask"* dereferenceable(112), i1 zeroext) unnamed_addr #5

declare void @_ZN5blink12WorkerThread14DidProcessTaskERKN4base11PendingTaskE(%"class.blink::WorkerThread"*, %"struct.base::PendingTask"* dereferenceable(112)) unnamed_addr #5

declare void @_ZN5blink12WorkerThread19TerminateForTestingEv(%"class.blink::WorkerThread"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30AnimationAndPaintWorkletThread24ClearWorkerBackingThreadEv(%"class.blink::AnimationAndPaintWorkletThread"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink30AnimationAndPaintWorkletThread13GetThreadTypeEv(%"class.blink::AnimationAndPaintWorkletThread"*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink30AnimationAndPaintWorkletThread21IsOwningBackingThreadEv(%"class.blink::AnimationAndPaintWorkletThread"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #5

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::WorkletThreadHolder"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::WorkletThreadHolder"*)**
  %21 = load void (%"class.blink::WorkletThreadHolder"*)*, void (%"class.blink::WorkletThreadHolder"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::WorkletThreadHolder"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::WorkletThreadHolder"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::WorkletThreadHolder"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WorkletThreadHolderINS2_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS5_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS6_EENSC_IS7_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::WaitableEvent"**
  %8 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %7, align 8
  %9 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::WorkletThreadHolder"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*)**
  %24 = load void (%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*)*, void (%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*)** %23, align 8
  br label %27

25:                                               ; preds = %1
  %26 = inttoptr i64 %10 to void (%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.blink::WorkletThreadHolder"*, %"class.base::WaitableEvent"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::WorkletThreadHolder"* %15, %"class.base::WaitableEvent"* %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WorkletThreadHolderINS2_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS5_EENSB_IS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #5

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #5

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #5

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.base::WaitableEvent"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::WaitableEvent"**
  %6 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %5, align 8
  %7 = load void (%"class.base::WaitableEvent"*)*, void (%"class.base::WaitableEvent"*)** %3, align 8
  tail call void %7(%"class.base::WaitableEvent"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN5blink11ThreadState27CollectAllGarbageForTestingENS_7BlinkGC10StackStateE(%"class.blink::ThreadState"*, i32) local_unnamed_addr #5

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink19WorkerBackingThreadD1Ev(%"class.blink::WorkerBackingThread"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN5blink19WorkerBackingThreadC1ERKNS_20ThreadCreationParamsE(%"class.blink::WorkerBackingThread"*, %"struct.blink::ThreadCreationParams"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #5

declare void @_ZN5blink27AnimationWorkletGlobalScopeC1ENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEEPNS_12WorkerThreadE(%"class.blink::AnimationWorkletGlobalScope"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.blink::WorkerThread"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !46

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.35"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.35"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !46

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.35"*) local_unnamed_addr #5

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4, !6, !8}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS6_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!8 = distinct !{!8, !9, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvvEJNS_28CrossThreadUnretainedWrapperIS4_EEEEEDaOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvvEJNS_28CrossThreadUnretainedWrapperIS4_EEEEEDaOT_DpOT0_"}
!10 = !{!8}
!11 = !{!12, !8}
!12 = distinct !{!12, !13, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!17 = !{!18, !20, !22}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS6_EENSC_IS7_EEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletThreadHolderINS3_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS6_EENSC_IS7_EEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS4_EENSA_IS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!22 = distinct !{!22, !23, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvPN4base13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS4_EENSA_IS6_EEEEEDaOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletThreadHolderINS1_30AnimationAndPaintWorkletThreadEEEFvPN4base13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS4_EENSA_IS6_EEEEEDaOT_DpOT0_"}
!24 = !{!22}
!25 = !{!26, !22}
!26 = distinct !{!26, !27, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!31 = !{!"branch_weights", i32 2000, i32 1}
!32 = !{!33, !35, !37}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIPFvPNS_13WaitableEventEEJN3WTF28CrossThreadUnretainedWrapperIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!37 = distinct !{!37, !38, !"_ZN3WTF19CrossThreadBindOnceIPFvPN4base13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF19CrossThreadBindOnceIPFvPN4base13WaitableEventEEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_"}
!39 = !{!37}
!40 = !{!41, !37}
!41 = distinct !{!41, !42, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!42 = distinct !{!42, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!46 = !{!"branch_weights", i32 1, i32 2000}
