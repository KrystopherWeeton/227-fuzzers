; ModuleID = '../../third_party/pdfium/core/fxge/freetype/fx_freetype.cpp'
source_filename = "../../third_party/pdfium/core/fxge/freetype/fx_freetype.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ft_adobe_glyph_list = external local_unnamed_addr constant [55997 x i8], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z28FXFT_unicode_from_adobe_namePKc(i8*) local_unnamed_addr #0 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 117
  br i1 %3, label %4, label %58

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 110
  br i1 %7, label %8, label %37

8:                                                ; preds = %4
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 105
  br i1 %11, label %12, label %37

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = add nsw i32 %15, -48
  %17 = icmp ugt i32 %16, 9
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = add nsw i32 %15, -65
  %20 = icmp ugt i32 %19, 5
  %21 = add nsw i32 %15, -55
  %22 = select i1 %20, i32 16, i32 %21
  %23 = icmp ugt i32 %22, 15
  br i1 %23, label %37, label %24

24:                                               ; preds = %12, %18
  %25 = phi i32 [ %22, %18 ], [ %16, %12 ]
  %26 = getelementptr inbounds i8, i8* %0, i64 4
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = add nsw i32 %28, -48
  %30 = icmp ugt i32 %29, 9
  br i1 %30, label %170, label %167

31:                                               ; preds = %203, %206
  %32 = phi i32 [ %205, %203 ], [ %213, %206 ]
  %33 = getelementptr inbounds i8, i8* %0, i64 7
  %34 = load i8, i8* %33, align 1
  switch i8 %34, label %37 [
    i8 0, label %79
    i8 46, label %35
  ]

35:                                               ; preds = %31
  %36 = or i32 %32, -2147483648
  br label %79

37:                                               ; preds = %4, %8, %31, %206, %188, %170, %18
  %38 = zext i8 %6 to i32
  %39 = add nsw i32 %38, -48
  %40 = icmp ugt i32 %39, 9
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = add nsw i32 %38, -65
  %43 = icmp ugt i32 %42, 5
  %44 = add nsw i32 %38, -55
  %45 = select i1 %43, i32 16, i32 %44
  %46 = icmp ugt i32 %45, 15
  br i1 %46, label %58, label %47

47:                                               ; preds = %37, %41
  %48 = phi i32 [ %45, %41 ], [ %39, %37 ]
  %49 = getelementptr inbounds i8, i8* %0, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = add nsw i32 %51, -48
  %53 = icmp ugt i32 %52, 9
  br i1 %53, label %84, label %81

54:                                               ; preds = %138, %156, %164
  %55 = phi i8* [ %166, %164 ], [ %130, %138 ], [ %148, %156 ]
  %56 = phi i32 [ %165, %164 ], [ %129, %138 ], [ %147, %156 ]
  %57 = load i8, i8* %55, align 1
  switch i8 %57, label %58 [
    i8 0, label %79
    i8 46, label %59
  ]

58:                                               ; preds = %120, %102, %84, %41, %1, %54
  br label %61

59:                                               ; preds = %54
  %60 = or i32 %56, -2147483648
  br label %79

61:                                               ; preds = %58, %66
  %62 = phi i8 [ %68, %66 ], [ %2, %58 ]
  %63 = phi i8* [ %67, %66 ], [ %0, %58 ]
  switch i8 %62, label %66 [
    i8 0, label %71
    i8 46, label %64
  ]

64:                                               ; preds = %61
  %65 = icmp ugt i8* %63, %0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61, %64
  %67 = getelementptr inbounds i8, i8* %63, i64 1
  %68 = load i8, i8* %67, align 1
  br label %61

69:                                               ; preds = %64
  %70 = icmp eq i8* %63, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %61, %69
  %72 = tail call fastcc i64 @_ZL24ft_get_adobe_glyph_indexPKcS0_(i8* %0, i8* %63)
  br label %76

73:                                               ; preds = %69
  %74 = tail call fastcc i64 @_ZL24ft_get_adobe_glyph_indexPKcS0_(i8* %0, i8* nonnull %63)
  %75 = or i64 %74, 2147483648
  br label %76

76:                                               ; preds = %73, %71
  %77 = phi i64 [ %75, %73 ], [ %72, %71 ]
  %78 = trunc i64 %77 to i32
  br label %79

79:                                               ; preds = %54, %59, %31, %35, %76
  %80 = phi i32 [ %78, %76 ], [ %32, %31 ], [ %36, %35 ], [ %56, %54 ], [ %60, %59 ]
  ret i32 %80

81:                                               ; preds = %47
  %82 = shl nsw i32 %48, 4
  %83 = add nuw nsw i32 %52, %82
  br label %92

84:                                               ; preds = %47
  %85 = add nsw i32 %51, -65
  %86 = icmp ugt i32 %85, 5
  %87 = add nsw i32 %51, -55
  %88 = select i1 %86, i32 16, i32 %87
  %89 = icmp ugt i32 %88, 15
  %90 = shl nsw i32 %48, 4
  %91 = add nsw i32 %88, %90
  br i1 %89, label %58, label %92

92:                                               ; preds = %84, %81
  %93 = phi i32 [ %83, %81 ], [ %91, %84 ]
  %94 = getelementptr inbounds i8, i8* %0, i64 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = add nsw i32 %96, -48
  %98 = icmp ugt i32 %97, 9
  br i1 %98, label %102, label %99

99:                                               ; preds = %92
  %100 = shl i32 %93, 4
  %101 = add i32 %97, %100
  br label %110

102:                                              ; preds = %92
  %103 = add nsw i32 %96, -65
  %104 = icmp ugt i32 %103, 5
  %105 = add nsw i32 %96, -55
  %106 = select i1 %104, i32 16, i32 %105
  %107 = icmp ugt i32 %106, 15
  %108 = shl i32 %93, 4
  %109 = add i32 %106, %108
  br i1 %107, label %58, label %110

110:                                              ; preds = %102, %99
  %111 = phi i32 [ %101, %99 ], [ %109, %102 ]
  %112 = getelementptr inbounds i8, i8* %0, i64 4
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = add nsw i32 %114, -48
  %116 = icmp ugt i32 %115, 9
  br i1 %116, label %120, label %117

117:                                              ; preds = %110
  %118 = shl i32 %111, 4
  %119 = add i32 %115, %118
  br label %128

120:                                              ; preds = %110
  %121 = add nsw i32 %114, -65
  %122 = icmp ugt i32 %121, 5
  %123 = add nsw i32 %114, -55
  %124 = select i1 %122, i32 16, i32 %123
  %125 = icmp ugt i32 %124, 15
  %126 = shl i32 %111, 4
  %127 = add i32 %124, %126
  br i1 %125, label %58, label %128

128:                                              ; preds = %120, %117
  %129 = phi i32 [ %119, %117 ], [ %127, %120 ]
  %130 = getelementptr inbounds i8, i8* %0, i64 5
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = add nsw i32 %132, -48
  %134 = icmp ugt i32 %133, 9
  br i1 %134, label %138, label %135

135:                                              ; preds = %128
  %136 = shl i32 %129, 4
  %137 = add i32 %133, %136
  br label %146

138:                                              ; preds = %128
  %139 = add nsw i32 %132, -65
  %140 = icmp ugt i32 %139, 5
  %141 = add nsw i32 %132, -55
  %142 = select i1 %140, i32 16, i32 %141
  %143 = icmp ugt i32 %142, 15
  %144 = shl i32 %129, 4
  %145 = add i32 %142, %144
  br i1 %143, label %54, label %146

146:                                              ; preds = %138, %135
  %147 = phi i32 [ %137, %135 ], [ %145, %138 ]
  %148 = getelementptr inbounds i8, i8* %0, i64 6
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = add nsw i32 %150, -48
  %152 = icmp ugt i32 %151, 9
  br i1 %152, label %156, label %153

153:                                              ; preds = %146
  %154 = shl i32 %147, 4
  %155 = add i32 %151, %154
  br label %164

156:                                              ; preds = %146
  %157 = add nsw i32 %150, -65
  %158 = icmp ugt i32 %157, 5
  %159 = add nsw i32 %150, -55
  %160 = select i1 %158, i32 16, i32 %159
  %161 = icmp ugt i32 %160, 15
  %162 = shl i32 %147, 4
  %163 = add i32 %160, %162
  br i1 %161, label %54, label %164

164:                                              ; preds = %156, %153
  %165 = phi i32 [ %155, %153 ], [ %163, %156 ]
  %166 = getelementptr inbounds i8, i8* %0, i64 7
  br label %54

167:                                              ; preds = %24
  %168 = shl nsw i32 %25, 4
  %169 = add nuw nsw i32 %29, %168
  br label %178

170:                                              ; preds = %24
  %171 = add nsw i32 %28, -65
  %172 = icmp ugt i32 %171, 5
  %173 = add nsw i32 %28, -55
  %174 = select i1 %172, i32 16, i32 %173
  %175 = icmp ugt i32 %174, 15
  %176 = shl nsw i32 %25, 4
  %177 = add nsw i32 %174, %176
  br i1 %175, label %37, label %178

178:                                              ; preds = %170, %167
  %179 = phi i32 [ %169, %167 ], [ %177, %170 ]
  %180 = getelementptr inbounds i8, i8* %0, i64 5
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = add nsw i32 %182, -48
  %184 = icmp ugt i32 %183, 9
  br i1 %184, label %188, label %185

185:                                              ; preds = %178
  %186 = shl i32 %179, 4
  %187 = add i32 %183, %186
  br label %196

188:                                              ; preds = %178
  %189 = add nsw i32 %182, -65
  %190 = icmp ugt i32 %189, 5
  %191 = add nsw i32 %182, -55
  %192 = select i1 %190, i32 16, i32 %191
  %193 = icmp ugt i32 %192, 15
  %194 = shl i32 %179, 4
  %195 = add i32 %192, %194
  br i1 %193, label %37, label %196

196:                                              ; preds = %188, %185
  %197 = phi i32 [ %187, %185 ], [ %195, %188 ]
  %198 = getelementptr inbounds i8, i8* %0, i64 6
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = add nsw i32 %200, -48
  %202 = icmp ugt i32 %201, 9
  br i1 %202, label %206, label %203

203:                                              ; preds = %196
  %204 = shl i32 %197, 4
  %205 = add i32 %201, %204
  br label %31

206:                                              ; preds = %196
  %207 = add nsw i32 %200, -65
  %208 = icmp ugt i32 %207, 5
  %209 = add nsw i32 %200, -55
  %210 = select i1 %208, i32 16, i32 %209
  %211 = icmp ugt i32 %210, 15
  %212 = shl i32 %197, 4
  %213 = add i32 %210, %212
  br i1 %211, label %37, label %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i64 @_ZL24ft_get_adobe_glyph_indexPKcS0_(i8* readonly, i8* readnone) unnamed_addr #0 {
  %3 = icmp ne i8* %0, null
  %4 = icmp ult i8* %0, %1
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %103

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %0, align 1
  %9 = sext i8 %8 to i32
  %10 = load i8, i8* getelementptr inbounds ([55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 1), align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %103, label %12

12:                                               ; preds = %6
  %13 = zext i8 %10 to i32
  br label %14

14:                                               ; preds = %12, %34
  %15 = phi i32 [ %13, %12 ], [ %38, %34 ]
  %16 = phi i32 [ 0, %12 ], [ %37, %34 ]
  %17 = add nsw i32 %15, %16
  %18 = ashr i32 %17, 1
  %19 = and i32 %17, -2
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* getelementptr inbounds ([55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 2), i64 %20
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = or i64 %24, %27
  %29 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 127
  %32 = zext i8 %31 to i32
  %33 = icmp eq i32 %32, %9
  br i1 %33, label %40, label %34

34:                                               ; preds = %14
  %35 = icmp slt i32 %32, %9
  %36 = add nsw i32 %18, 1
  %37 = select i1 %35, i32 %36, i32 %16
  %38 = select i1 %35, i32 %15, i32 %18
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %14, label %103

40:                                               ; preds = %14
  %41 = icmp ult i8* %7, %1
  %42 = load i8, i8* %29, align 1
  br i1 %41, label %60, label %43

43:                                               ; preds = %74, %40
  %44 = phi i8 [ %42, %40 ], [ %75, %74 ]
  %45 = phi i8* [ %29, %40 ], [ %76, %74 ]
  %46 = icmp sgt i8 %44, -1
  br i1 %46, label %47, label %103

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %103

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %45, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = shl nuw nsw i64 %54, 8
  %56 = getelementptr inbounds i8, i8* %45, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = or i64 %55, %58
  br label %103

60:                                               ; preds = %40, %74
  %61 = phi i8 [ %75, %74 ], [ %42, %40 ]
  %62 = phi i8* [ %76, %74 ], [ %29, %40 ]
  %63 = phi i8* [ %64, %74 ], [ %7, %40 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = load i8, i8* %63, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp slt i8 %61, 0
  %68 = getelementptr inbounds i8, i8* %62, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, 127
  %71 = zext i8 %70 to i32
  br i1 %67, label %72, label %78

72:                                               ; preds = %60
  %73 = icmp eq i32 %66, %71
  br i1 %73, label %74, label %103

74:                                               ; preds = %84, %72
  %75 = phi i8 [ %69, %72 ], [ %95, %84 ]
  %76 = phi i8* [ %68, %72 ], [ %94, %84 ]
  %77 = icmp eq i8* %64, %1
  br i1 %77, label %43, label %60

78:                                               ; preds = %60
  %79 = icmp eq i8 %70, 0
  br i1 %79, label %103, label %80

80:                                               ; preds = %78
  %81 = icmp slt i8 %69, 0
  %82 = select i1 %81, i64 3, i64 1
  %83 = getelementptr inbounds i8, i8* %68, i64 %82
  br label %84

84:                                               ; preds = %80, %99
  %85 = phi i8* [ %101, %99 ], [ %83, %80 ]
  %86 = phi i32 [ %100, %99 ], [ %71, %80 ]
  %87 = load i8, i8* %85, align 1
  %88 = zext i8 %87 to i64
  %89 = shl nuw nsw i64 %88, 8
  %90 = getelementptr inbounds i8, i8* %85, i64 1
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = or i64 %89, %92
  %94 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = and i8 %95, 127
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %66, %97
  br i1 %98, label %74, label %99

99:                                               ; preds = %84
  %100 = add nsw i32 %86, -1
  %101 = getelementptr inbounds i8, i8* %85, i64 2
  %102 = icmp sgt i32 %100, 0
  br i1 %102, label %84, label %103

103:                                              ; preds = %34, %78, %72, %99, %6, %47, %43, %2, %51
  %104 = phi i64 [ %59, %51 ], [ 0, %2 ], [ 0, %43 ], [ 0, %47 ], [ 0, %6 ], [ 0, %99 ], [ 0, %72 ], [ 0, %78 ], [ 0, %34 ]
  ret i64 %104
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define hidden void @_Z28FXFT_adobe_name_from_unicodePcw(i8* nocapture, i32 signext) local_unnamed_addr #1 {
  %3 = load i8, i8* getelementptr inbounds ([55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 1), align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = zext i8 %3 to i64
  br label %9

7:                                                ; preds = %9
  %8 = icmp eq i64 %24, %6
  br i1 %8, label %25, label %9

9:                                                ; preds = %7, %5
  %10 = phi i64 [ 0, %5 ], [ %24, %7 ]
  %11 = shl nuw nsw i64 %10, 1
  %12 = add nuw nsw i64 %11, 2
  %13 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %12
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = add nuw nsw i64 %11, 3
  %18 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %16, %20
  %22 = tail call fastcc i32 @_ZL15xyq_search_nodePciiw(i8* %0, i32 0, i32 %21, i32 signext %1)
  %23 = icmp eq i32 %22, 0
  %24 = add nuw nsw i64 %10, 1
  br i1 %23, label %7, label %26

25:                                               ; preds = %7, %2
  store i8 0, i8* %0, align 1
  br label %26

26:                                               ; preds = %9, %25
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define internal fastcc i32 @_ZL15xyq_search_nodePciiw(i8* nocapture, i32, i32, i32 signext) unnamed_addr #1 {
  %5 = sext i32 %2 to i64
  %6 = sext i32 %1 to i64
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i64 [ %14, %7 ], [ %6, %4 ]
  %9 = phi i64 [ %15, %7 ], [ %5, %4 ]
  %10 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 127
  %13 = getelementptr inbounds i8, i8* %0, i64 %8
  store i8 %12, i8* %13, align 1
  %14 = add i64 %8, 1
  %15 = add i64 %9, 1
  %16 = icmp slt i8 %11, 0
  br i1 %16, label %7, label %17

17:                                               ; preds = %7
  %18 = trunc i64 %14 to i32
  %19 = trunc i64 %9 to i32
  %20 = shl i64 %14, 32
  %21 = ashr exact i64 %20, 32
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  store i8 0, i8* %22, align 1
  %23 = shl i64 %15, 32
  %24 = ashr exact i64 %23, 32
  %25 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 127
  %28 = icmp slt i8 %26, 0
  %29 = add nsw i32 %19, 2
  br i1 %28, label %30, label %46

30:                                               ; preds = %17
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = shl i64 %9, 32
  %37 = add i64 %36, 12884901888
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %35, %41
  %43 = and i32 %3, 65535
  %44 = icmp eq i32 %42, %43
  %45 = add nsw i32 %19, 4
  br i1 %44, label %70, label %46

46:                                               ; preds = %30, %17
  %47 = phi i32 [ %45, %30 ], [ %29, %17 ]
  %48 = icmp eq i8 %27, 0
  br i1 %48, label %70, label %49

49:                                               ; preds = %46
  %50 = sext i32 %47 to i64
  %51 = zext i8 %27 to i64
  br label %54

52:                                               ; preds = %54
  %53 = icmp eq i64 %69, %51
  br i1 %53, label %70, label %54

54:                                               ; preds = %52, %49
  %55 = phi i64 [ 0, %49 ], [ %69, %52 ]
  %56 = shl nuw nsw i64 %55, 1
  %57 = add nsw i64 %56, %50
  %58 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 8
  %62 = add nsw i64 %57, 1
  %63 = getelementptr inbounds [55997 x i8], [55997 x i8]* @ft_adobe_glyph_list, i64 0, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = or i32 %61, %65
  %67 = tail call fastcc i32 @_ZL15xyq_search_nodePciiw(i8* %0, i32 %18, i32 %66, i32 signext %3)
  %68 = icmp eq i32 %67, 0
  %69 = add nuw nsw i64 %55, 1
  br i1 %68, label %52, label %70

70:                                               ; preds = %54, %52, %46, %30
  %71 = phi i32 [ 1, %30 ], [ 0, %46 ], [ 1, %54 ], [ 0, %52 ]
  ret i32 %71
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
