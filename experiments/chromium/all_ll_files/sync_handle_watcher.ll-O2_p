; ModuleID = '../../mojo/public/cpp/bindings/lib/sync_handle_watcher.cc'
source_filename = "../../mojo/public/cpp/bindings/lib/sync_handle_watcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8, i64, %class.scoped_refptr.1, %class.scoped_refptr.18 }
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.7", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::map.7" = type { %"class.std::__1::__tree.8" }
%"class.std::__1::__tree.8" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.scoped_refptr.18 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type <{ %"class.base::RefCountedThreadSafe.19", i8, [3 x i8] }>
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZN4mojo17SyncHandleWatcherC1ERKNS_6HandleEjRKN4base17RepeatingCallbackIFvjEEE = hidden unnamed_addr alias void (%"class.mojo::SyncHandleWatcher"*, %"class.mojo::Handle"*, i32, %"class.base::RepeatingCallback"*), void (%"class.mojo::SyncHandleWatcher"*, %"class.mojo::Handle"*, i32, %"class.base::RepeatingCallback"*)* @_ZN4mojo17SyncHandleWatcherC2ERKNS_6HandleEjRKN4base17RepeatingCallbackIFvjEEE
@_ZN4mojo17SyncHandleWatcherD1Ev = hidden unnamed_addr alias void (%"class.mojo::SyncHandleWatcher"*), void (%"class.mojo::SyncHandleWatcher"*)* @_ZN4mojo17SyncHandleWatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo17SyncHandleWatcherC2ERKNS_6HandleEjRKN4base17RepeatingCallbackIFvjEEE(%"class.mojo::SyncHandleWatcher"*, %"class.mojo::Handle"* nocapture readonly dereferenceable(4), i32, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %5, align 4
  store i32 %7, i32* %6, align 8
  %8 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #6
  %11 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 3
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 4
  store i64 0, i64* %12, align 8
  %13 = tail call %"class.mojo::SyncHandleRegistry"* @_ZN4mojo18SyncHandleRegistry7currentEv() #6
  %14 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  store %"class.mojo::SyncHandleRegistry"* %13, %"class.mojo::SyncHandleRegistry"** %14, align 8
  %15 = tail call i8* @_Znwm(i64 8) #7
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %15, i64 4
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 6, i32 0
  %19 = bitcast %"class.base::RefCountedData"** %18 to i8**
  store i8* %15, i8** %19, align 8
  %20 = atomicrmw add i32* %16, i32 1 monotonic
  ret void
}

declare %"class.mojo::SyncHandleRegistry"* @_ZN4mojo18SyncHandleRegistry7currentEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo17SyncHandleWatcherD2Ev(%"class.mojo::SyncHandleWatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %6, align 8
  %8 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0
  tail call void @_ZN4mojo18SyncHandleRegistry16UnregisterHandleERKNS_6HandleE(%"class.mojo::SyncHandleRegistry"* %7, %"class.mojo::Handle"* dereferenceable(4) %8) #6
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 6, i32 0
  %11 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %10, align 8
  %12 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %11, i64 0, i32 1
  store i8 1, i8* %12, align 4
  %13 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %10, align 8
  %14 = icmp eq %"class.base::RefCountedData"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %"class.base::RefCountedData"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %9, %15, %19
  %22 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %23 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %22, align 8
  %24 = icmp eq %"class.mojo::SyncHandleRegistry"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.mojo::SyncHandleRegistry", %"class.mojo::SyncHandleRegistry"* %23, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #6
  %27 = getelementptr inbounds %"class.mojo::SyncHandleRegistry", %"class.mojo::SyncHandleRegistry"* %23, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  tail call void @_ZN4mojo18SyncHandleRegistryD1Ev(%"class.mojo::SyncHandleRegistry"* nonnull %23) #6
  %31 = bitcast %"class.mojo::SyncHandleRegistry"* %23 to i8*
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

32:                                               ; preds = %21, %25, %30
  %33 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %33) #6
  ret void
}

declare void @_ZN4mojo18SyncHandleRegistry16UnregisterHandleERKNS_6HandleE(%"class.mojo::SyncHandleRegistry"*, %"class.mojo::Handle"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo17SyncHandleWatcher35AllowWokenUpBySyncWatchOnSameThreadEv(%"class.mojo::SyncHandleWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  %4 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %11, align 8
  %13 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 2, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %16, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %17) #6
  %18 = call zeroext i1 @_ZN4mojo18SyncHandleRegistry14RegisterHandleERKNS_6HandleEjN4base17RepeatingCallbackIFvjEEE(%"class.mojo::SyncHandleRegistry"* %12, %"class.mojo::Handle"* dereferenceable(4) %13, i32 %15, %"class.base::RepeatingCallback"* nonnull %2) #6
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %7, align 8
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #6
  br label %21

21:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo17SyncHandleWatcher22IncrementRegisterCountEv(%"class.mojo::SyncHandleWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %10, align 8
  %12 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 2, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %15, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %16) #6
  %17 = call zeroext i1 @_ZN4mojo18SyncHandleRegistry14RegisterHandleERKNS_6HandleEjN4base17RepeatingCallbackIFvjEEE(%"class.mojo::SyncHandleRegistry"* %11, %"class.mojo::Handle"* dereferenceable(4) %12, i32 %14, %"class.base::RepeatingCallback"* nonnull %2) #6
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %6, align 8
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #6
  br label %20

20:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo17SyncHandleWatcher9SyncWatchEPKb(%"class.mojo::SyncHandleWatcher"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca [2 x i8*], align 16
  %5 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  br label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %15 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %14, align 8
  %16 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 2, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %19, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %20) #6
  %21 = call zeroext i1 @_ZN4mojo18SyncHandleRegistry14RegisterHandleERKNS_6HandleEjN4base17RepeatingCallbackIFvjEEE(%"class.mojo::SyncHandleRegistry"* %15, %"class.mojo::Handle"* dereferenceable(4) %16, i32 %18, %"class.base::RepeatingCallback"* nonnull %3) #6
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %9, align 8
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #6
  %24 = load i8, i8* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %13
  %27 = load i64, i64* %6, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %6, align 8
  br label %64

29:                                               ; preds = %12, %13
  %30 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 6, i32 0
  %31 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %30, align 8
  %32 = icmp eq %"class.base::RefCountedData"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %29, %33
  %37 = bitcast [2 x i8*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #6
  %38 = getelementptr inbounds [2 x i8*], [2 x i8*]* %4, i64 0, i64 0
  %39 = getelementptr inbounds [2 x i8*], [2 x i8*]* %4, i64 0, i64 1
  store i8* %1, i8** %38, align 16
  %40 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %31, i64 0, i32 1
  store i8* %40, i8** %39, align 8
  %41 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %42 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %41, align 8
  %43 = call zeroext i1 @_ZN4mojo18SyncHandleRegistry4WaitEPPKbm(%"class.mojo::SyncHandleRegistry"* %42, i8** nonnull %38, i64 2) #6
  %44 = load i8, i8* %40, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %36
  %47 = load i64, i64* %6, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %6, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = load i8, i8* %9, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %41, align 8
  %55 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0
  call void @_ZN4mojo18SyncHandleRegistry16UnregisterHandleERKNS_6HandleE(%"class.mojo::SyncHandleRegistry"* %54, %"class.mojo::Handle"* dereferenceable(4) %55) #6
  store i8 0, i8* %9, align 8
  br label %56

56:                                               ; preds = %53, %50, %46, %36
  %57 = phi i1 [ false, %36 ], [ %43, %46 ], [ %43, %50 ], [ %43, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #6
  br i1 %32, label %64, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = bitcast %"class.base::RefCountedData"* %31 to i8*
  call void @_ZdlPv(i8* %63) #7
  br label %64

64:                                               ; preds = %26, %62, %58, %56
  %65 = phi i1 [ false, %26 ], [ %57, %56 ], [ %57, %58 ], [ %57, %62 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo17SyncHandleWatcher22DecrementRegisterCountEv(%"class.mojo::SyncHandleWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -1
  store i64 %4, i64* %2, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 5, i32 0
  %12 = load %"class.mojo::SyncHandleRegistry"*, %"class.mojo::SyncHandleRegistry"** %11, align 8
  %13 = getelementptr inbounds %"class.mojo::SyncHandleWatcher", %"class.mojo::SyncHandleWatcher"* %0, i64 0, i32 0
  tail call void @_ZN4mojo18SyncHandleRegistry16UnregisterHandleERKNS_6HandleE(%"class.mojo::SyncHandleRegistry"* %12, %"class.mojo::Handle"* dereferenceable(4) %13) #6
  store i8 0, i8* %7, align 8
  br label %14

14:                                               ; preds = %6, %10, %1
  ret void
}

declare zeroext i1 @_ZN4mojo18SyncHandleRegistry4WaitEPPKbm(%"class.mojo::SyncHandleRegistry"*, i8**, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4mojo18SyncHandleRegistry14RegisterHandleERKNS_6HandleEjN4base17RepeatingCallbackIFvjEEE(%"class.mojo::SyncHandleRegistry"*, %"class.mojo::Handle"* dereferenceable(4), i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo18SyncHandleRegistryD1Ev(%"class.mojo::SyncHandleRegistry"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
