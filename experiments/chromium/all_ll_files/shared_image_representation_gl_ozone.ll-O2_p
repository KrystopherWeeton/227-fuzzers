; ModuleID = '../../gpu/command_buffer/service/shared_image_representation_gl_ozone.cc'
source_filename = "../../gpu/command_buffer/service/shared_image_representation_gl_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gpu::SharedImageRepresentationGLOzone" = type { %"class.gpu::SharedImageRepresentationGLTexture.base", %"class.gpu::gles2::Texture"* }
%"class.gpu::SharedImageRepresentationGLTexture.base" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base" }
%"class.gpu::SharedImageRepresentationGLTextureBase.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr.0" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr.0"* }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.4", %"class.std::__1::vector.9" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, %union.anon.8 }
%union.anon.8 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.11" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.18", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.gpu::gles2::Texture" = type <{ %"class.gpu::TextureBase", %"class.std::__1::vector.24", %"class.base::internal::flat_tree.39", i8, [7 x i8], %"class.gpu::gles2::TextureRef"*, i32, i8, [3 x i8], i32, i32, %"struct.gpu::gles2::SamplerState", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, i8, [7 x i8], %"struct.gpu::gles2::Texture::CompatibilitySwizzle"*, i8, [7 x i8] }>
%"class.gpu::TextureBase" = type { i32 (...)**, i32, i32, %"class.gpu::MailboxManager"* }
%"class.gpu::MailboxManager" = type { i32 (...)** }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.gpu::gles2::Texture::FaceInfo"*, %"struct.gpu::gles2::Texture::FaceInfo"*, %"class.std::__1::__compressed_pair.34" }
%"struct.gpu::gles2::Texture::FaceInfo" = type { i32, %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.gpu::gles2::Texture::LevelInfo"*, %"struct.gpu::gles2::Texture::LevelInfo"*, %"class.std::__1::__compressed_pair.29" }
%"struct.gpu::gles2::Texture::LevelInfo" = type <{ %"class.gfx::Rect", i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %class.scoped_refptr.28, i32, i32, i8, [7 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.scoped_refptr.28 = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.gpu::gles2::Texture::LevelInfo"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.gpu::gles2::Texture::FaceInfo"* }
%"class.base::internal::flat_tree.39" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.gpu::gles2::TextureRef"**, %"class.gpu::gles2::TextureRef"**, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.gpu::gles2::TextureRef"** }
%"class.gpu::gles2::TextureRef" = type { %"class.base::RefCounted.42", %"class.gpu::gles2::TextureManager"*, %"class.gpu::gles2::Texture"*, i32, i32, i8, %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116" }
%"class.base::RefCounted.42" = type { %"class.base::subtle::RefCountedBase" }
%"class.gpu::gles2::TextureManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.std::__1::unique_ptr.43", %"class.gpu::MemoryTracker"*, %class.scoped_refptr.47, %"class.std::__1::vector.76", %"class.std::__1::unordered_map", i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i8, [6 x i32], [6 x %class.scoped_refptr.102], %"class.std::__1::vector.103", i32, %"class.gl::ProgressReporter"*, %"class.gpu::ServiceDiscardableManager"* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.gpu::MemoryTypeTracker"* }
%class.scoped_refptr.47 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.48", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree.56", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.64" }
%"class.base::RefCounted.48" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector.49" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i32*, i32*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree.56" = type { %"class.std::__1::vector.57" }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.59" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.gpu::gles2::FramebufferManager"**, %"class.gpu::gles2::FramebufferManager"**, %"class.std::__1::__compressed_pair.78" }
%"class.gpu::gles2::FramebufferManager" = type opaque
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.gpu::gles2::FramebufferManager"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.83", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85", %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i64 }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { float }
%class.scoped_refptr.102 = type { %"class.gpu::gles2::TextureRef"* }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.gpu::gles2::TextureManager::DestructionObserver"**, %"class.std::__1::__compressed_pair.105" }
%"class.gpu::gles2::TextureManager::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.gpu::gles2::TextureManager::DestructionObserver"** }
%"class.gl::ProgressReporter" = type { i32 (...)** }
%"class.gpu::ServiceDiscardableManager" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.gpu::SharedImageRepresentationGLTexture"* }
%"class.gpu::SharedImageRepresentationGLTexture" = type { %"class.gpu::SharedImageRepresentationGLTextureBase.base", [6 x i8] }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess"* }
%"class.gpu::SharedImageRepresentationGLTextureBase::ScopedAccess" = type { %"class.gpu::SharedImageRepresentation::ScopedAccessBase" }
%"class.gpu::SharedImageRepresentation::ScopedAccessBase" = type { %"class.gpu::SharedImageRepresentationGLTextureBase"* }
%"class.gpu::SharedImageRepresentationGLTextureBase" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"struct.gpu::gles2::SamplerState" = type { i32, i32, i32, i32, i32, i32, i32, float, float, float }
%"struct.gpu::gles2::Texture::CompatibilitySwizzle" = type { i32, i32, i32, i32, i32, i32 }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.131", [4 x i8] }>
%"class.base::RefCountedThreadSafe.131" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gl::ScopedTextureBinder" = type { %"class.gl::GLStateRestorer"*, i32, i32 }
%"class.gl::GLStateRestorer" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.gl::GLImageNativePixmap" = type <{ %"class.gl::GLImageEGL.base", [3 x i8], i32, %class.scoped_refptr.130, i8, i8, [6 x i8] }>
%"class.gl::GLImageEGL.base" = type <{ %"class.gl::GLImage", i8*, %"class.gfx::Size", %"class.base::ThreadChecker" }>
%"class.base::ThreadChecker" = type { i8 }
%class.scoped_refptr.130 = type { %"class.gfx::NativePixmap"* }
%"class.gl::GLImageEGL" = type <{ %"class.gl::GLImage", i8*, %"class.gfx::Size", %"class.base::ThreadChecker", [7 x i8] }>
%"class.gpu::SharedImageBackingOzone" = type { %"class.gpu::ClearTrackingSharedImageBacking", i8, %"class.std::__1::unique_ptr.133", %class.scoped_refptr.130, %class.scoped_refptr.139 }
%"class.gpu::ClearTrackingSharedImageBacking" = type { %"class.gpu::SharedImageBacking", %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.gpu::VaapiDependencies"* }
%"class.gpu::VaapiDependencies" = type { i32 (...)** }
%class.scoped_refptr.139 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque

@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN3gpu32SharedImageRepresentationGLOzoneE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageRepresentationGLOzone"*)* @_ZN3gpu32SharedImageRepresentationGLOzoneD2Ev to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationGLOzone"*)* @_ZN3gpu32SharedImageRepresentationGLOzoneD0Ev to i8*), i8* bitcast (%"class.gpu::TextureBase"* (%"class.gpu::SharedImageRepresentationGLTexture"*)* @_ZN3gpu34SharedImageRepresentationGLTexture14GetTextureBaseEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationGLTexture"*)* @_ZN3gpu34SharedImageRepresentationGLTexture31UpdateClearedStateOnBeginAccessEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationGLTexture"*)* @_ZN3gpu34SharedImageRepresentationGLTexture29UpdateClearedStateOnEndAccessEv to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageRepresentationGLOzone"*, i32)* @_ZN3gpu32SharedImageRepresentationGLOzone11BeginAccessEj to i8*), i8* bitcast (void (%"class.gpu::SharedImageRepresentationGLOzone"*)* @_ZN3gpu32SharedImageRepresentationGLOzone9EndAccessEv to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageRepresentationGLTextureBase"*)* @_ZN3gpu38SharedImageRepresentationGLTextureBase36SupportsMultipleConcurrentReadAccessEv to i8*), i8* bitcast (%"class.gpu::gles2::Texture"* (%"class.gpu::SharedImageRepresentationGLOzone"*)* @_ZN3gpu32SharedImageRepresentationGLOzone10GetTextureEv to i8*)] }, align 8

@_ZN3gpu32SharedImageRepresentationGLOzoneC1EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEPNS_5gles27TextureE = hidden unnamed_addr alias void (%"class.gpu::SharedImageRepresentationGLOzone"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::gles2::Texture"*), void (%"class.gpu::SharedImageRepresentationGLOzone"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::gles2::Texture"*)* @_ZN3gpu32SharedImageRepresentationGLOzoneC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEPNS_5gles27TextureE
@_ZN3gpu32SharedImageRepresentationGLOzoneD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedImageRepresentationGLOzone"*), void (%"class.gpu::SharedImageRepresentationGLOzone"*)* @_ZN3gpu32SharedImageRepresentationGLOzoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageRepresentationGLOzone"* @_ZN3gpu32SharedImageRepresentationGLOzone6CreateEPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE13scoped_refptrIN3gfx12NativePixmapEEN3viz14ResourceFormatE(%"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %"class.gfx::NativePixmap"*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.gl::ScopedTextureBinder", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Size"*
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %13 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %12, i64 0, i32 0
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #8
  %15 = bitcast i8* %14 to %"class.gl::GLApi"**
  %16 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  %17 = tail call i32 @_ZN3viz20TextureStorageFormatENS_14ResourceFormatE(i32 %4) #8
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #8
  store i32 -1431655766, i32* %6, align 4
  %19 = bitcast %"class.gl::GLApi"* %16 to void (%"class.gl::GLApi"*, i32, i32*)***
  %20 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %20, i64 156
  %22 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %21, align 8
  call void %22(%"class.gl::GLApi"* %16, i32 1, i32* nonnull %6) #8
  %23 = bitcast %"class.gl::ScopedTextureBinder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = bitcast %"class.gl::ScopedTextureBinder"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load i32, i32* %6, align 4
  call void @_ZN2gl19ScopedTextureBinderC1Ejj(%"class.gl::ScopedTextureBinder"* nonnull %7, i32 3553, i32 %25) #8
  %26 = call i32 @_ZN3viz12BufferFormatENS_14ResourceFormatE(i32 %4) #8
  %27 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = bitcast %"class.gfx::NativePixmap"* %3 to i64 (%"class.gfx::NativePixmap"*)***
  %29 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %29, i64 8
  %31 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %30, align 8
  %32 = call i64 %31(%"class.gfx::NativePixmap"* %3) #8
  store i64 %32, i64* %8, align 8
  %33 = call i8* @_Znwm(i64 120) #9
  %34 = bitcast i8* %33 to %"class.gl::GLImageNativePixmap"*
  call void @_ZN2gl19GLImageNativePixmapC1ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageNativePixmap"* nonnull %34, %"class.gfx::Size"* nonnull dereferenceable(8) %9, i32 %26) #8
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %37 = icmp eq %"class.gfx::NativePixmap"* %3, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %5
  %39 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  br label %41

41:                                               ; preds = %5, %38
  %42 = call zeroext i1 @_ZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEE(%"class.gl::GLImageNativePixmap"* nonnull %34, %"class.gfx::NativePixmap"* %3) #8
  br i1 %42, label %43, label %105

43:                                               ; preds = %41
  %44 = bitcast %"class.gl::GLApi"* %16 to void (%"class.gl::GLApi"*, i32, i32, i32)***
  %45 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %45, i64 428
  %47 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %46, align 8
  call void %47(%"class.gl::GLApi"* %16, i32 3553, i32 10241, i32 9729) #8
  %48 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %44, align 8
  %49 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %48, i64 428
  %50 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %49, align 8
  call void %50(%"class.gl::GLApi"* %16, i32 3553, i32 10240, i32 9729) #8
  %51 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %44, align 8
  %52 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %51, i64 428
  %53 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %52, align 8
  call void %53(%"class.gl::GLApi"* %16, i32 3553, i32 10242, i32 33071) #8
  %54 = load void (%"class.gl::GLApi"*, i32, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32, i32)*** %44, align 8
  %55 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %54, i64 428
  %56 = load void (%"class.gl::GLApi"*, i32, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32, i32)** %55, align 8
  call void %56(%"class.gl::GLApi"* %16, i32 3553, i32 10243, i32 33071) #8
  %57 = bitcast i8* %33 to %"class.gl::GLImageEGL"*
  %58 = bitcast i8* %33 to i1 (%"class.gl::GLImageEGL"*, i32)***
  %59 = load i1 (%"class.gl::GLImageEGL"*, i32)**, i1 (%"class.gl::GLImageEGL"*, i32)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.gl::GLImageEGL"*, i32)*, i1 (%"class.gl::GLImageEGL"*, i32)** %59, i64 5
  %61 = load i1 (%"class.gl::GLImageEGL"*, i32)*, i1 (%"class.gl::GLImageEGL"*, i32)** %60, align 8
  %62 = call zeroext i1 %61(%"class.gl::GLImageEGL"* nonnull %57, i32 3553) #8
  br i1 %62, label %63, label %105

63:                                               ; preds = %43
  %64 = call i8* @_Znwm(i64 232) #9
  %65 = bitcast i8* %64 to %"class.gpu::gles2::Texture"*
  %66 = load i32, i32* %6, align 4
  call void @_ZN3gpu5gles27TextureC1Ej(%"class.gpu::gles2::Texture"* nonnull %65, i32 %66) #8
  call void @_ZN3gpu5gles27Texture17SetLightweightRefEv(%"class.gpu::gles2::Texture"* nonnull %65) #8
  call void @_ZN3gpu5gles27Texture9SetTargetEji(%"class.gpu::gles2::Texture"* nonnull %65, i32 3553, i32 1) #8
  %67 = getelementptr inbounds i8, i8* %64, i64 104
  %68 = bitcast i8* %67 to i32*
  store i32 9729, i32* %68, align 8
  %69 = getelementptr inbounds i8, i8* %64, i64 108
  %70 = bitcast i8* %69 to i32*
  store i32 9729, i32* %70, align 4
  %71 = getelementptr inbounds i8, i8* %64, i64 120
  %72 = bitcast i8* %71 to i32*
  store i32 33071, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %64, i64 116
  %74 = bitcast i8* %73 to i32*
  store i32 33071, i32* %74, align 4
  %75 = call i32 @_ZN3viz12GLDataFormatENS_14ResourceFormatE(i32 %4) #8
  %76 = call i32 @_ZN3viz10GLDataTypeENS_14ResourceFormatE(i32 %4) #8
  %77 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %28, align 8
  %78 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %77, i64 8
  %79 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %78, align 8
  %80 = call i64 %79(%"class.gfx::NativePixmap"* %3) #8
  %81 = trunc i64 %80 to i32
  %82 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %28, align 8
  %83 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %82, i64 8
  %84 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %83, align 8
  %85 = call i64 %84(%"class.gfx::NativePixmap"* %3) #8
  %86 = lshr i64 %85, 32
  %87 = trunc i64 %86 to i32
  %88 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #8
  %89 = bitcast %"class.gpu::SharedImageBacking"* %1 to { i64, i64 } (%"class.gpu::SharedImageBacking"*)***
  %90 = load { i64, i64 } (%"class.gpu::SharedImageBacking"*)**, { i64, i64 } (%"class.gpu::SharedImageBacking"*)*** %89, align 8
  %91 = getelementptr inbounds { i64, i64 } (%"class.gpu::SharedImageBacking"*)*, { i64, i64 } (%"class.gpu::SharedImageBacking"*)** %90, i64 2
  %92 = load { i64, i64 } (%"class.gpu::SharedImageBacking"*)*, { i64, i64 } (%"class.gpu::SharedImageBacking"*)** %91, align 8
  %93 = call { i64, i64 } %92(%"class.gpu::SharedImageBacking"* %1) #8
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %95 = extractvalue { i64, i64 } %93, 0
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %97 = extractvalue { i64, i64 } %93, 1
  store i64 %97, i64* %96, align 8
  call void @_ZN3gpu5gles27Texture12SetLevelInfoEjijiiiijjRKN3gfx4RectE(%"class.gpu::gles2::Texture"* nonnull %65, i32 3553, i32 0, i32 %17, i32 %81, i32 %87, i32 1, i32 0, i32 %75, i32 %76, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #8
  %98 = bitcast i8* %33 to %"class.gl::GLImage"*
  call void @_ZN3gpu5gles27Texture13SetLevelImageEjiPN2gl7GLImageENS1_10ImageStateE(%"class.gpu::gles2::Texture"* nonnull %65, i32 3553, i32 0, %"class.gl::GLImage"* nonnull %98, i32 1) #8
  call void @_ZN3gpu5gles27Texture12SetImmutableEbb(%"class.gpu::gles2::Texture"* nonnull %65, i1 zeroext true, i1 zeroext true) #8
  %99 = call i8* @_Znwm(i64 48) #9
  %100 = bitcast i8* %99 to %"class.gpu::SharedImageRepresentationGLOzone"*
  %101 = bitcast i8* %99 to %"class.gpu::SharedImageRepresentation"*
  call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* nonnull %101, %"class.gpu::SharedImageManager"* %0, %"class.gpu::SharedImageBacking"* %1, %"class.gpu::MemoryTypeTracker"* %2) #8
  %102 = bitcast i8* %99 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gpu32SharedImageRepresentationGLOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 40
  %104 = bitcast i8* %103 to i8**
  store i8* %64, i8** %104, align 8
  br label %105

105:                                              ; preds = %63, %41, %43
  %106 = phi %"class.gpu::SharedImageRepresentationGLOzone"* [ %100, %63 ], [ null, %41 ], [ null, %43 ]
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #8
  %107 = bitcast i8* %35 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = bitcast i8* %33 to %"class.gl::GLImage"*
  %112 = bitcast i8* %33 to void (%"class.gl::GLImage"*)***
  %113 = load void (%"class.gl::GLImage"*)**, void (%"class.gl::GLImage"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.gl::GLImage"*)*, void (%"class.gl::GLImage"*)** %113, i64 21
  %115 = load void (%"class.gl::GLImage"*)*, void (%"class.gl::GLImage"*)** %114, align 8
  call void %115(%"class.gl::GLImage"* nonnull %111) #8
  br label %116

116:                                              ; preds = %105, %110
  call void @_ZN2gl19ScopedTextureBinderD1Ev(%"class.gl::ScopedTextureBinder"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #8
  br i1 %37, label %129, label %117

117:                                              ; preds = %116
  %118 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %3, i64 0, i32 1
  %119 = getelementptr inbounds %"class.base::RefCountedThreadSafe.131", %"class.base::RefCountedThreadSafe.131"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw sub i32* %119, i32 1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %129

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.base::RefCountedThreadSafe.131", %"class.base::RefCountedThreadSafe.131"* %118, i64 -2
  %124 = bitcast %"class.base::RefCountedThreadSafe.131"* %123 to %"class.gfx::NativePixmap"*
  %125 = bitcast %"class.base::RefCountedThreadSafe.131"* %123 to void (%"class.gfx::NativePixmap"*)***
  %126 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %126, i64 13
  %128 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %127, align 8
  call void %128(%"class.gfx::NativePixmap"* nonnull %124) #8
  br label %129

129:                                              ; preds = %116, %117, %122
  ret %"class.gpu::SharedImageRepresentationGLOzone"* %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN3viz20TextureStorageFormatENS_14ResourceFormatE(i32) local_unnamed_addr #2

declare void @_ZN2gl19ScopedTextureBinderC1Ejj(%"class.gl::ScopedTextureBinder"*, i32, i32) unnamed_addr #2

declare i32 @_ZN3viz12BufferFormatENS_14ResourceFormatE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEE(%"class.gl::GLImageNativePixmap"*, %"class.gfx::NativePixmap"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN3gpu5gles27TextureC1Ej(%"class.gpu::gles2::Texture"*, i32) unnamed_addr #2

declare void @_ZN3gpu5gles27Texture17SetLightweightRefEv(%"class.gpu::gles2::Texture"*) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture9SetTargetEji(%"class.gpu::gles2::Texture"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN3viz12GLDataFormatENS_14ResourceFormatE(i32) local_unnamed_addr #2

declare i32 @_ZN3viz10GLDataTypeENS_14ResourceFormatE(i32) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture12SetLevelInfoEjijiiiijjRKN3gfx4RectE(%"class.gpu::gles2::Texture"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture13SetLevelImageEjiPN2gl7GLImageENS1_10ImageStateE(%"class.gpu::gles2::Texture"*, i32, i32, %"class.gl::GLImage"*, i32) local_unnamed_addr #2

declare void @_ZN3gpu5gles27Texture12SetImmutableEbb(%"class.gpu::gles2::Texture"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl19ScopedTextureBinderD1Ev(%"class.gl::ScopedTextureBinder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu32SharedImageRepresentationGLOzoneC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerEPNS_5gles27TextureE(%"class.gpu::SharedImageRepresentationGLOzone"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::gles2::Texture"*) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.gpu::SharedImageRepresentationGLOzone"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* %6, %"class.gpu::SharedImageManager"* %1, %"class.gpu::SharedImageBacking"* %2, %"class.gpu::MemoryTypeTracker"* %3) #8
  %7 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gpu32SharedImageRepresentationGLOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 1
  store %"class.gpu::gles2::Texture"* %4, %"class.gpu::gles2::Texture"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu32SharedImageRepresentationGLOzoneD2Ev(%"class.gpu::SharedImageRepresentationGLOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gpu32SharedImageRepresentationGLOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 1
  %4 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %3, align 8
  %5 = bitcast %"class.gpu::SharedImageRepresentationGLOzone"* %0 to %"class.gpu::SharedImageRepresentation"*
  %6 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  tail call void @_ZN3gpu5gles27Texture20RemoveLightweightRefEb(%"class.gpu::gles2::Texture"* %4, i1 zeroext %8) #8
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %5) #8
  ret void
}

declare void @_ZN3gpu5gles27Texture20RemoveLightweightRefEb(%"class.gpu::gles2::Texture"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu32SharedImageRepresentationGLOzoneD0Ev(%"class.gpu::SharedImageRepresentationGLOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gpu32SharedImageRepresentationGLOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 1
  %4 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %3, align 8
  %5 = bitcast %"class.gpu::SharedImageRepresentationGLOzone"* %0 to %"class.gpu::SharedImageRepresentation"*
  %6 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  tail call void @_ZN3gpu5gles27Texture20RemoveLightweightRefEb(%"class.gpu::gles2::Texture"* %4, i1 zeroext %8) #8
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %5) #8
  %9 = bitcast %"class.gpu::SharedImageRepresentationGLOzone"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gpu::gles2::Texture"* @_ZN3gpu32SharedImageRepresentationGLOzone10GetTextureEv(%"class.gpu::SharedImageRepresentationGLOzone"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 1
  %3 = load %"class.gpu::gles2::Texture"*, %"class.gpu::gles2::Texture"** %2, align 8
  ret %"class.gpu::gles2::Texture"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu32SharedImageRepresentationGLOzone11BeginAccessEj(%"class.gpu::SharedImageRepresentationGLOzone"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedImageRepresentationGLOzone", %"class.gpu::SharedImageRepresentationGLOzone"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.gpu::SharedImageBacking"** %3 to %"class.gpu::SharedImageBackingOzone"**
  %5 = load %"class.gpu::SharedImageBackingOzone"*, %"class.gpu::SharedImageBackingOzone"** %4, align 8
  %6 = tail call zeroext i1 @_ZN3gpu23SharedImageBackingOzone6VaSyncEv(%"class.gpu::SharedImageBackingOzone"* %5) #8
  ret i1 %6
}

declare zeroext i1 @_ZN3gpu23SharedImageBackingOzone6VaSyncEv(%"class.gpu::SharedImageBackingOzone"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu32SharedImageRepresentationGLOzone9EndAccessEv(%"class.gpu::SharedImageRepresentationGLOzone"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

declare %"class.gpu::TextureBase"* @_ZN3gpu34SharedImageRepresentationGLTexture14GetTextureBaseEv(%"class.gpu::SharedImageRepresentationGLTexture"*) unnamed_addr #2

declare void @_ZN3gpu34SharedImageRepresentationGLTexture31UpdateClearedStateOnBeginAccessEv(%"class.gpu::SharedImageRepresentationGLTexture"*) unnamed_addr #2

declare void @_ZN3gpu34SharedImageRepresentationGLTexture29UpdateClearedStateOnEndAccessEv(%"class.gpu::SharedImageRepresentationGLTexture"*) unnamed_addr #2

declare zeroext i1 @_ZN3gpu38SharedImageRepresentationGLTextureBase36SupportsMultipleConcurrentReadAccessEv(%"class.gpu::SharedImageRepresentationGLTextureBase"*) unnamed_addr #2

declare void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN2gl19GLImageNativePixmapC1ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageNativePixmap"*, %"class.gfx::Size"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
