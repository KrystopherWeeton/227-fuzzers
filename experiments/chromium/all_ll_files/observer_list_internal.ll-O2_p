; ModuleID = '../../base/observer_list_internal.cc'
source_filename = "../../base/observer_list_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }

@_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE = hidden unnamed_addr alias void (%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*), void (%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*)* @_ZN4base8internal22CheckedObserverAdapterC2EPKNS_15CheckedObserverE
@_ZN4base8internal22CheckedObserverAdapterC1EOS1_ = hidden unnamed_addr alias void (%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*), void (%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*)* @_ZN4base8internal22CheckedObserverAdapterC2EOS1_
@_ZN4base8internal22CheckedObserverAdapterD1Ev = hidden unnamed_addr alias void (%"class.base::internal::CheckedObserverAdapter"*), void (%"class.base::internal::CheckedObserverAdapter"*)* @_ZN4base8internal22CheckedObserverAdapterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22CheckedObserverAdapterC2EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5, !noalias !2
  %5 = getelementptr inbounds %"class.base::CheckedObserver", %"class.base::CheckedObserver"* %1, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #5, !noalias !2
  %6 = getelementptr inbounds %"class.base::CheckedObserver", %"class.base::CheckedObserver"* %1, i64 0, i32 1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !2
  %8 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #5
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5, !noalias !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22CheckedObserverAdapterC2EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %3, %"class.base::internal::WeakReference"* dereferenceable(8) %4) #5
  %5 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* returned, %"class.base::internal::CheckedObserverAdapter"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %3, align 8
  %6 = bitcast %"class.base::internal::CheckedObserverAdapter"* %0 to i64*
  %7 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.base::internal::WeakReference::Flag"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %8) #5
  %15 = bitcast %"class.base::internal::WeakReference::Flag"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %2, %10, %14
  %17 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %19, align 8
  ret %"class.base::internal::CheckedObserverAdapter"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal22CheckedObserverAdapterD2Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %2) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryINS_15CheckedObserverEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryINS_15CheckedObserverEE10GetWeakPtrEv"}
