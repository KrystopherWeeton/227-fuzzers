; ModuleID = '../../third_party/webrtc/call/rtp_bitrate_configurator.cc'
source_filename = "../../third_party/webrtc/call/rtp_bitrate_configurator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::RtpBitrateConfigurator" = type { %"struct.webrtc::BitrateConstraints", %"struct.webrtc::BitrateSettings", %"struct.webrtc::BitrateConstraints", %"class.webrtc::DataRate" }
%"struct.webrtc::BitrateSettings" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.webrtc::BitrateConstraints" = type { i32, i32, i32 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }

@_ZN6webrtc22RtpBitrateConfiguratorC1ERKNS_18BitrateConstraintsE = hidden unnamed_addr alias void (%"class.webrtc::RtpBitrateConfigurator"*, %"struct.webrtc::BitrateConstraints"*), void (%"class.webrtc::RtpBitrateConfigurator"*, %"struct.webrtc::BitrateConstraints"*)* @_ZN6webrtc22RtpBitrateConfiguratorC2ERKNS_18BitrateConstraintsE
@_ZN6webrtc22RtpBitrateConfiguratorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtpBitrateConfigurator"*), void (%"class.webrtc::RtpBitrateConfigurator"*)* @_ZN6webrtc22RtpBitrateConfiguratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22RtpBitrateConfiguratorC2ERKNS_18BitrateConstraintsE(%"class.webrtc::RtpBitrateConfigurator"*, %"struct.webrtc::BitrateConstraints"* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.webrtc::RtpBitrateConfigurator"* %0 to i8*
  %4 = bitcast %"struct.webrtc::BitrateConstraints"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 12, i1 false)
  %5 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc15BitrateSettingsC1Ev(%"struct.webrtc::BitrateSettings"* %5) #5
  %6 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 2
  %7 = bitcast %"struct.webrtc::BitrateConstraints"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %4, i64 12, i1 false)
  %8 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i64 9223372036854775807, i64* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6webrtc15BitrateSettingsC1Ev(%"struct.webrtc::BitrateSettings"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22RtpBitrateConfiguratorD2Ev(%"class.webrtc::RtpBitrateConfigurator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc15BitrateSettingsD1Ev(%"struct.webrtc::BitrateSettings"* %2) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc15BitrateSettingsD1Ev(%"struct.webrtc::BitrateSettings"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK6webrtc22RtpBitrateConfigurator9GetConfigEv(%"class.webrtc::RtpBitrateConfigurator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.webrtc::RtpBitrateConfigurator"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i64, i32 } undef, i64 %3, 0
  %7 = insertvalue { i64, i32 } %6, i32 %5, 1
  ret { i64, i32 } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator23UpdateWithSdpParametersERKNS_18BitrateConstraintsE(%"class.webrtc::RtpBitrateConfigurator"* nocapture, %"struct.webrtc::BitrateConstraints"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.absl::optional"*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store i64 -6148914691236517376, i64* %3, align 8
  %6 = getelementptr inbounds %"struct.webrtc::BitrateConstraints", %"struct.webrtc::BitrateConstraints"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %7, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %7, i32* %14, align 4
  store i8 1, i8* %5, align 8
  br label %15

15:                                               ; preds = %9, %2, %13
  %16 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 2
  %17 = bitcast %"struct.webrtc::BitrateConstraints"* %16 to i8*
  %18 = bitcast %"struct.webrtc::BitrateConstraints"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 12, i1 false)
  %19 = call { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator17UpdateConstraintsERKN4absl8optionalIiEE(%"class.webrtc::RtpBitrateConfigurator"* %0, %"class.absl::optional"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret { i64, i64 } %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator17UpdateConstraintsERKN4absl8optionalIiEE(%"class.webrtc::RtpBitrateConfigurator"* nocapture, %"class.absl::optional"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5)
  store i32 0, i32* %3, align 4
  %6 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = select i1 %8, i32* %3, i32* %9
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %11, %13
  %15 = select i1 %14, i32 %13, i32 %11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5)
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store i32 -1, i32* %4, align 4
  %17 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = select i1 %19, i32* %4, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 2, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %22, 1
  br i1 %25, label %31, label %26

26:                                               ; preds = %2
  %27 = icmp slt i32 %24, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = icmp slt i32 %24, %22
  %30 = select i1 %29, i32 %24, i32 %22
  br label %31

31:                                               ; preds = %2, %26, %28
  %32 = phi i32 [ %30, %28 ], [ %24, %2 ], [ %22, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  %33 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = select i1 %36, i64 %34, i64 4294967295
  %38 = trunc i64 %37 to i32
  %39 = icmp slt i32 %32, 1
  br i1 %39, label %45, label %40

40:                                               ; preds = %31
  %41 = icmp slt i32 %38, 1
  br i1 %41, label %45, label %42

42:                                               ; preds = %40
  %43 = icmp sgt i32 %32, %38
  %44 = select i1 %43, i32 %38, i32 %32
  br label %45

45:                                               ; preds = %31, %40, %42
  %46 = phi i32 [ %44, %42 ], [ %38, %31 ], [ %32, %40 ]
  %47 = icmp ne i32 %46, -1
  %48 = icmp sgt i32 %15, %46
  %49 = and i1 %47, %48
  %50 = select i1 %49, i32 %46, i32 %15
  %51 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %62

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %46, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 4, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %85, label %62

62:                                               ; preds = %58, %54, %45
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, %50
  %70 = select i1 %69, i32 %50, i32 %68
  %71 = icmp slt i32 %70, 1
  br i1 %71, label %80, label %72

72:                                               ; preds = %66
  %73 = icmp slt i32 %46, 1
  br i1 %73, label %80, label %74

74:                                               ; preds = %72
  %75 = icmp slt i32 %46, %70
  %76 = select i1 %75, i32 %46, i32 %70
  br label %80

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %66, %72, %74, %77
  %81 = phi i32 [ -1, %77 ], [ %70, %72 ], [ %46, %66 ], [ %76, %74 ]
  %82 = phi i32 [ %79, %77 ], [ %70, %72 ], [ %46, %66 ], [ %76, %74 ]
  store i32 %50, i32* %51, align 8
  %83 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 0, i32 1
  store i32 %82, i32* %83, align 4
  %84 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 0, i32 2
  store i32 %46, i32* %84, align 8
  br label %85

85:                                               ; preds = %58, %80
  %86 = phi i32 [ %81, %80 ], [ undef, %58 ]
  %87 = phi i64 [ 1, %80 ], [ 0, %58 ]
  %88 = zext i32 %50 to i64
  %89 = shl nuw i64 %88, 32
  %90 = or i64 %87, %89
  %91 = insertvalue { i64, i64 } undef, i64 %90, 0
  %92 = zext i32 %46 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %86 to i64
  %95 = or i64 %93, %94
  %96 = insertvalue { i64, i64 } %91, i64 %95, 1
  ret { i64, i64 } %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator27UpdateWithClientPreferencesERKNS_15BitrateSettingsE(%"class.webrtc::RtpBitrateConfigurator"* nocapture, %"struct.webrtc::BitrateSettings"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::BitrateSettings", %"struct.webrtc::BitrateSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.webrtc::BitrateSettings", %"struct.webrtc::BitrateSettings"* %1, i64 0, i32 1
  %6 = tail call { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator17UpdateConstraintsERKN4absl8optionalIiEE(%"class.webrtc::RtpBitrateConfigurator"* %0, %"class.absl::optional"* dereferenceable(8) %5)
  ret { i64, i64 } %6
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator18UpdateWithRelayCapENS_8DataRateE(%"class.webrtc::RtpBitrateConfigurator"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional", align 4
  %4 = getelementptr inbounds %"class.webrtc::RtpBitrateConfigurator", %"class.webrtc::RtpBitrateConfigurator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store i8 0, i8* %5, align 4
  %6 = call { i64, i64 } @_ZN6webrtc22RtpBitrateConfigurator17UpdateConstraintsERKN4absl8optionalIiEE(%"class.webrtc::RtpBitrateConfigurator"* %0, %"class.absl::optional"* nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret { i64, i64 } %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
