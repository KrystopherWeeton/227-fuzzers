; ModuleID = '../../components/password_manager/core/browser/ui/weak_check_utility.cc'
source_filename = "../../components/password_manager/core/browser/ui/weak_check_utility.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.zxcvbn::Match"* }
%"class.zxcvbn::Match" = type { i32, %union.anon.22, i64, i64, %"class.std::__1::basic_string.6", double, i32, i64, i64 }
%union.anon.22 = type { %"struct.zxcvbn::DictionaryMatch" }
%"struct.zxcvbn::DictionaryMatch" = type { %"class.std::__1::basic_string.6", i64, i8, i8, [6 x i8], %"class.std::__1::unordered_map", %"class.std::__1::basic_string.6" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.38", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { float }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::unique_ptr.50"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.std::__1::reference_wrapper"*, %"class.std::__1::reference_wrapper"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::reference_wrapper" = type { %"class.zxcvbn::Match"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::reference_wrapper"* }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.zxcvbn::Match"*, %"class.zxcvbn::Match"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.zxcvbn::ScoringResult" = type { %"class.std::__1::basic_string.6", double, i32, %"class.std::__1::vector.48", %"class.std::__1::vector.58" }
%"struct.zxcvbn::AttackTimes" = type <{ %struct.anon.65, %struct.anon.66, i32, [4 x i8] }>
%struct.anon.65 = type { double, double, double, double }
%struct.anon.66 = type { %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.10 }
%struct.anon.10 = type { i8 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }

$_ZN4base7EraseIfINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEENS_8internal9NotFnImplIPFNS_11StrongAliasIN16password_manager17IsWeakPasswordTagEbEENS_16BasicStringPieceIDsS4_EEEEEEEmRNSE_9flat_treeIT_T0_T1_T2_EET3_ = comdat any

$_ZN6zxcvbn5MatchD2Ev = comdat any

@.str = private unnamed_addr constant [43 x i8] c"PasswordManager.WeakCheck.CheckedPasswords\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"PasswordManager.WeakCheck.WeakPasswords\00", align 1
@__const._ZN16password_manager12_GLOBAL__N_117PasswordWeakCheckEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE.result = private unnamed_addr constant { %"class.std::__1::basic_string.6", double, i32, [4 x i8], %"class.std::__1::vector.48", %"class.std::__1::vector.58" } { %"class.std::__1::basic_string.6" { %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.9 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector.48" { %"class.std::__1::__vector_base.49" { %"class.std::__1::unique_ptr.50"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.50"*), %"class.std::__1::unique_ptr.50"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.50"*), %"class.std::__1::__compressed_pair.53" { %"struct.std::__1::__compressed_pair_elem.54" { %"class.std::__1::unique_ptr.50"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.50"*) } } } }, %"class.std::__1::vector.58" { %"class.std::__1::__vector_base.59" { %"class.std::__1::reference_wrapper"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::reference_wrapper"*), %"class.std::__1::reference_wrapper"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::reference_wrapper"*), %"class.std::__1::__compressed_pair.60" { %"struct.std::__1::__compressed_pair_elem.61" { %"class.std::__1::reference_wrapper"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::reference_wrapper"*) } } } } }, align 8
@.str.2 = private unnamed_addr constant [40 x i8] c"PasswordManager.WeakCheck.PasswordScore\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN16password_manager6IsWeakEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16*, i64) #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::basic_string.6", align 8
  %5 = alloca %"class.std::__1::vector.15", align 8
  %6 = alloca %"struct.zxcvbn::ScoringResult", align 8
  %7 = alloca %"struct.zxcvbn::AttackTimes", align 8
  %8 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i16* %0, i16** %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %1, i64* %10, align 8
  %11 = bitcast %"class.std::__1::basic_string.6"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #4
  %13 = call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 0, i64 40) #4
  %14 = extractvalue { i16*, i64 } %13, 0
  %15 = extractvalue { i16*, i64 } %13, 1
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %4, i16* %14, i64 %15) #4
  %16 = bitcast %"class.std::__1::vector.15"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false) #4
  call void @_ZN6zxcvbn9omnimatchERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::vector.15"* nonnull sret %5, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %4) #4
  %19 = bitcast %"struct.zxcvbn::ScoringResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %19) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast ({ %"class.std::__1::basic_string.6", double, i32, [4 x i8], %"class.std::__1::vector.48", %"class.std::__1::vector.58" }* @__const._ZN16password_manager12_GLOBAL__N_117PasswordWeakCheckEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE.result to i8*), i64 88, i1 false) #4
  call void @_ZN6zxcvbn29most_guessable_match_sequenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERNS0_6vectorINS_5MatchENS4_ISA_EEEEb(%"struct.zxcvbn::ScoringResult"* nonnull sret %6, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.15"* nonnull dereferenceable(24) %5, i1 zeroext false) #4
  %20 = bitcast %"struct.zxcvbn::AttackTimes"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %20) #4
  %21 = getelementptr inbounds %"struct.zxcvbn::ScoringResult", %"struct.zxcvbn::ScoringResult"* %6, i64 0, i32 1
  %22 = load double, double* %21, align 8
  call void @_ZN6zxcvbn21estimate_attack_timesEd(%"struct.zxcvbn::AttackTimes"* nonnull sret %7, double %22) #4
  %23 = getelementptr inbounds %"struct.zxcvbn::AttackTimes", %"struct.zxcvbn::AttackTimes"* %7, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.zxcvbn::AttackTimes", %"struct.zxcvbn::AttackTimes"* %7, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.zxcvbn::AttackTimes", %"struct.zxcvbn::AttackTimes"* %7, i64 0, i32 1, i32 3
  %27 = bitcast %"class.std::__1::basic_string.6"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #5
  br label %34

34:                                               ; preds = %31, %2
  %35 = getelementptr inbounds %"struct.zxcvbn::AttackTimes", %"struct.zxcvbn::AttackTimes"* %7, i64 0, i32 1, i32 2
  %36 = bitcast %"class.std::__1::basic_string.6"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #5
  br label %43

43:                                               ; preds = %40, %34
  %44 = getelementptr inbounds %"struct.zxcvbn::AttackTimes", %"struct.zxcvbn::AttackTimes"* %7, i64 0, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string.6"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #5
  br label %52

52:                                               ; preds = %49, %43
  %53 = bitcast %struct.anon.66* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #5
  br label %60

60:                                               ; preds = %57, %52
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %20) #4
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i32 %24, i32 5) #4
  %61 = getelementptr inbounds %"struct.zxcvbn::ScoringResult", %"struct.zxcvbn::ScoringResult"* %6, i64 0, i32 4, i32 0, i32 0
  %62 = load %"class.std::__1::reference_wrapper"*, %"class.std::__1::reference_wrapper"** %61, align 8
  %63 = icmp eq %"class.std::__1::reference_wrapper"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = ptrtoint %"class.std::__1::reference_wrapper"* %62 to i64
  %66 = getelementptr inbounds %"struct.zxcvbn::ScoringResult", %"struct.zxcvbn::ScoringResult"* %6, i64 0, i32 4, i32 0, i32 1
  %67 = bitcast %"class.std::__1::reference_wrapper"** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast %"class.std::__1::reference_wrapper"* %62 to i8*
  call void @_ZdlPv(i8* %68) #5
  br label %69

69:                                               ; preds = %64, %60
  %70 = getelementptr inbounds %"struct.zxcvbn::ScoringResult", %"struct.zxcvbn::ScoringResult"* %6, i64 0, i32 3
  %71 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %71, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr.50"* %72, null
  br i1 %73, label %94, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.std::__1::unique_ptr.50"* %72 to i8*
  %76 = getelementptr inbounds %"struct.zxcvbn::ScoringResult", %"struct.zxcvbn::ScoringResult"* %6, i64 0, i32 3, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"** %76, align 8
  %78 = icmp eq %"class.std::__1::unique_ptr.50"* %77, %72
  br i1 %78, label %92, label %79

79:                                               ; preds = %74, %87
  %80 = phi %"class.std::__1::unique_ptr.50"* [ %81, %87 ], [ %77, %74 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %80, i64 -1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.zxcvbn::Match"*, %"class.zxcvbn::Match"** %82, align 8
  store %"class.zxcvbn::Match"* null, %"class.zxcvbn::Match"** %82, align 8
  %84 = icmp eq %"class.zxcvbn::Match"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79
  call void @_ZN6zxcvbn5MatchD2Ev(%"class.zxcvbn::Match"* nonnull %83) #4
  %86 = bitcast %"class.zxcvbn::Match"* %83 to i8*
  call void @_ZdlPv(i8* %86) #5
  br label %87

87:                                               ; preds = %85, %79
  %88 = icmp eq %"class.std::__1::unique_ptr.50"* %81, %72
  br i1 %88, label %89, label %79

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::vector.48"* %70 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %74
  %93 = phi i8* [ %91, %89 ], [ %75, %74 ]
  store %"class.std::__1::unique_ptr.50"* %72, %"class.std::__1::unique_ptr.50"** %76, align 8
  call void @_ZdlPv(i8* %93) #5
  br label %94

94:                                               ; preds = %92, %69
  %95 = bitcast %"struct.zxcvbn::ScoringResult"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.zxcvbn::ScoringResult", %"struct.zxcvbn::ScoringResult"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #5
  br label %102

102:                                              ; preds = %99, %94
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %19) #4
  %103 = load %"class.zxcvbn::Match"*, %"class.zxcvbn::Match"** %17, align 8
  %104 = icmp eq %"class.zxcvbn::Match"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.zxcvbn::Match"* %103 to i8*
  %107 = load %"class.zxcvbn::Match"*, %"class.zxcvbn::Match"** %18, align 8
  %108 = icmp eq %"class.zxcvbn::Match"* %107, %103
  br i1 %108, label %116, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"class.zxcvbn::Match"* [ %111, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %110, i64 -1
  call void @_ZN6zxcvbn5MatchD2Ev(%"class.zxcvbn::Match"* %111) #4
  %112 = icmp eq %"class.zxcvbn::Match"* %111, %103
  br i1 %112, label %113, label %109

113:                                              ; preds = %109
  %114 = bitcast %"class.std::__1::vector.15"* %5 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %105
  %117 = phi i8* [ %115, %113 ], [ %106, %105 ]
  store %"class.zxcvbn::Match"* %103, %"class.zxcvbn::Match"** %18, align 8
  call void @_ZdlPv(i8* %117) #5
  br label %118

118:                                              ; preds = %116, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #4
  %119 = bitcast %"class.std::__1::basic_string.6"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %124) #5
  br label %125

125:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  %126 = icmp slt i32 %24, 3
  %127 = zext i1 %126 to i8
  ret i8 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager13BulkWeakCheckEN4base8internal9flat_treeINSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS0_8identityENS3_4lessIvEENS3_6vectorIS9_NS7_IS9_EEEEEE(%"class.base::internal::flat_tree"* noalias nocapture sret, %"class.base::internal::flat_tree"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::internal::flat_tree"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = trunc i64 %9 to i32
  tail call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 %10) #4
  %11 = tail call i64 @_ZN4base7EraseIfINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEENS_8internal9NotFnImplIPFNS_11StrongAliasIN16password_manager17IsWeakPasswordTagEbEENS_16BasicStringPieceIDsS4_EEEEEEEmRNSE_9flat_treeIT_T0_T1_T2_EET3_(%"class.base::internal::flat_tree"* dereferenceable(24) %1, i8 (i16*, i64)* nonnull @_ZN16password_manager6IsWeakEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE)
  %12 = load i64, i64* %4, align 8
  %13 = load i64, i64* %6, align 8
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 24
  %16 = trunc i64 %15 to i32
  tail call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i32 %16) #4
  %17 = bitcast %"class.base::internal::flat_tree"* %1 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = bitcast %"class.base::internal::flat_tree"* %0 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.base::internal::flat_tree"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #4
  ret void
}

declare void @_ZN4base22UmaHistogramCounts1000EPKci(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base7EraseIfINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEENS_8internal9NotFnImplIPFNS_11StrongAliasIN16password_manager17IsWeakPasswordTagEbEENS_16BasicStringPieceIDsS4_EEEEEEEmRNSE_9flat_treeIT_T0_T1_T2_EET3_(%"class.base::internal::flat_tree"* dereferenceable(24), i8 (i16*, i64)*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %4, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %2, %24
  %9 = phi %"class.std::__1::basic_string"* [ %25, %24 ], [ %4, %2 ]
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %17 = select i1 %13, i16* %15, i16* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = tail call i8 %1(i16* %17, i64 %21) #4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 1
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %6
  br i1 %26, label %27, label %8

27:                                               ; preds = %24
  %28 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br label %72

29:                                               ; preds = %8, %2
  %30 = phi %"class.std::__1::basic_string"* [ %4, %2 ], [ %9, %8 ]
  %31 = ptrtoint %"class.std::__1::basic_string"* %30 to i64
  %32 = icmp eq %"class.std::__1::basic_string"* %30, %6
  br i1 %32, label %72, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %35 = icmp eq %"class.std::__1::basic_string"* %34, %6
  br i1 %35, label %72, label %36

36:                                               ; preds = %33, %68
  %37 = phi %"class.std::__1::basic_string"* [ %70, %68 ], [ %34, %33 ]
  %38 = phi %"class.std::__1::basic_string"* [ %37, %68 ], [ %30, %33 ]
  %39 = phi i64 [ %69, %68 ], [ %31, %33 ]
  %40 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %37 to i16*
  %47 = select i1 %43, i16* %45, i16* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %42 to i64
  %51 = select i1 %43, i64 %49, i64 %50
  %52 = tail call i8 %1(i16* %47, i64 %51) #4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %36
  %55 = inttoptr i64 %39 to %"class.std::__1::basic_string"*
  %56 = inttoptr i64 %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = inttoptr i64 %39 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #5
  br label %63

63:                                               ; preds = %60, %54
  %64 = inttoptr i64 %39 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #4
  store i8 0, i8* %41, align 1
  store i16 0, i16* %46, align 2
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  %67 = ptrtoint %"class.std::__1::basic_string"* %66 to i64
  br label %68

68:                                               ; preds = %63, %36
  %69 = phi i64 [ %39, %36 ], [ %67, %63 ]
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %71 = icmp eq %"class.std::__1::basic_string"* %70, %6
  br i1 %71, label %72, label %36

72:                                               ; preds = %68, %27, %29, %33
  %73 = phi i64 [ %31, %29 ], [ %28, %27 ], [ %31, %33 ], [ %69, %68 ]
  %74 = inttoptr i64 %73 to %"class.std::__1::basic_string"*
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %76 = ptrtoint %"class.std::__1::basic_string"* %75 to i64
  %77 = sub i64 %76, %73
  %78 = sdiv exact i64 %77, 24
  %79 = icmp eq %"class.std::__1::basic_string"* %75, %74
  br i1 %79, label %93, label %80

80:                                               ; preds = %72, %90
  %81 = phi %"class.std::__1::basic_string"* [ %82, %90 ], [ %75, %72 ]
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 -1
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::basic_string"* %82 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #5
  br label %90

90:                                               ; preds = %87, %80
  %91 = icmp eq %"class.std::__1::basic_string"* %82, %74
  br i1 %91, label %92, label %80

92:                                               ; preds = %90
  store %"class.std::__1::basic_string"* %74, %"class.std::__1::basic_string"** %5, align 8
  br label %93

93:                                               ; preds = %72, %92
  ret i64 %78
}

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare void @_ZN6zxcvbn9omnimatchERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::vector.15"* sret, %"class.std::__1::basic_string.6"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN6zxcvbn29most_guessable_match_sequenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERNS0_6vectorINS_5MatchENS4_ISA_EEEEb(%"struct.zxcvbn::ScoringResult"* sret, %"class.std::__1::basic_string.6"* dereferenceable(24), %"class.std::__1::vector.15"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare void @_ZN6zxcvbn21estimate_attack_timesEd(%"struct.zxcvbn::AttackTimes"* sret, double) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6zxcvbn5MatchD2Ev(%"class.zxcvbn::Match"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %122 [
    i32 0, label %4
    i32 5, label %113
    i32 2, label %56
    i32 4, label %85
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 6
  %7 = bitcast %"class.std::__1::basic_string.6"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #5
  br label %14

14:                                               ; preds = %11, %4
  %15 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %16, null
  br i1 %17, label %42, label %18

18:                                               ; preds = %14, %39
  %19 = phi %"struct.std::__1::__hash_node_base"* [ %21, %39 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 2
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 5
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %18
  %29 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #5
  br label %31

31:                                               ; preds = %28, %18
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #5
  br label %39

39:                                               ; preds = %36, %31
  %40 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i8*
  tail call void @_ZdlPv(i8* %40) #5
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %21, null
  br i1 %41, label %42, label %18

42:                                               ; preds = %39, %14
  %43 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %43, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"** %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = bitcast %"struct.std::__1::__hash_node_base"** %44 to i8*
  tail call void @_ZdlPv(i8* %47) #5
  br label %48

48:                                               ; preds = %46, %42
  %49 = bitcast %"struct.zxcvbn::DictionaryMatch"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %122

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.zxcvbn::DictionaryMatch", %"struct.zxcvbn::DictionaryMatch"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #5
  br label %122

56:                                               ; preds = %1
  %57 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 2
  %58 = bitcast i8* %57 to %"class.zxcvbn::Match"**
  %59 = load %"class.zxcvbn::Match"*, %"class.zxcvbn::Match"** %58, align 8
  %60 = icmp eq %"class.zxcvbn::Match"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.zxcvbn::Match"* %59 to i8*
  %63 = getelementptr inbounds i8, i8* %57, i64 8
  %64 = bitcast i8* %63 to %"class.zxcvbn::Match"**
  %65 = load %"class.zxcvbn::Match"*, %"class.zxcvbn::Match"** %64, align 8
  %66 = icmp eq %"class.zxcvbn::Match"* %65, %59
  br i1 %66, label %74, label %67

67:                                               ; preds = %61, %67
  %68 = phi %"class.zxcvbn::Match"* [ %69, %67 ], [ %65, %61 ]
  %69 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %68, i64 -1
  tail call void @_ZN6zxcvbn5MatchD2Ev(%"class.zxcvbn::Match"* %69) #4
  %70 = icmp eq %"class.zxcvbn::Match"* %69, %59
  br i1 %70, label %71, label %67

71:                                               ; preds = %67
  %72 = bitcast i8* %57 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %61, %71
  %75 = phi i8* [ %73, %71 ], [ %62, %61 ]
  store %"class.zxcvbn::Match"* %59, %"class.zxcvbn::Match"** %64, align 8
  tail call void @_ZdlPv(i8* %75) #5
  br label %76

76:                                               ; preds = %56, %74
  %77 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"class.std::__1::basic_string.6"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %122

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZdlPv(i8* %84) #5
  br label %122

85:                                               ; preds = %1
  %86 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast i64* %86 to %"class.std::__1::basic_string.6"**
  %88 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %87, align 8
  %89 = icmp eq %"class.std::__1::basic_string.6"* %88, null
  br i1 %89, label %122, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.std::__1::basic_string.6"* %88 to i8*
  %92 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %93 = bitcast i64* %92 to %"class.std::__1::basic_string.6"**
  %94 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %93, align 8
  %95 = icmp eq %"class.std::__1::basic_string.6"* %94, %88
  br i1 %95, label %111, label %96

96:                                               ; preds = %90, %106
  %97 = phi %"class.std::__1::basic_string.6"* [ %98, %106 ], [ %94, %90 ]
  %98 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %97, i64 -1
  %99 = bitcast %"class.std::__1::basic_string.6"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #5
  br label %106

106:                                              ; preds = %103, %96
  %107 = icmp eq %"class.std::__1::basic_string.6"* %98, %88
  br i1 %107, label %108, label %96

108:                                              ; preds = %106
  %109 = bitcast i64* %86 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %90
  %112 = phi i8* [ %110, %108 ], [ %91, %90 ]
  store %"class.std::__1::basic_string.6"* %88, %"class.std::__1::basic_string.6"** %93, align 8
  tail call void @_ZdlPv(i8* %112) #5
  br label %122

113:                                              ; preds = %1
  %114 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 1
  %115 = bitcast %union.anon.22* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = getelementptr inbounds %union.anon.22, %union.anon.22* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #5
  br label %122

122:                                              ; preds = %119, %113, %111, %85, %82, %76, %53, %48, %1
  %123 = getelementptr inbounds %"class.zxcvbn::Match", %"class.zxcvbn::Match"* %0, i64 0, i32 4
  %124 = bitcast %"class.std::__1::basic_string.6"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZdlPv(i8* %130) #5
  br label %131

131:                                              ; preds = %122, %128
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
