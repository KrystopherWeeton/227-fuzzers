; ModuleID = '../../third_party/skia/src/shaders/gradients/SkSweepGradient.cpp'
source_filename = "../../third_party/skia/src/shaders/gradients/SkSweepGradient.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.SkGradientShaderBase::Descriptor.base" = type <{ %class.SkMatrix*, %struct.SkRGBA4f*, %class.sk_sp, float*, i32, i32, i32 }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [256 x i8] }
%class.SkTArray = type { %struct.SkRGBA4f*, i64 }
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [64 x i8] }
%class.SkTArray.13 = type { float*, i64 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkSweepGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, float, float, [4 x i8] }
%class.SkGradientShaderBase.base = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8 }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkAutoSTMalloc = type { i8*, %union.anon }
%union.anon = type { [20 x i32] }
%struct.SkPoint = type { float, float }
%"struct.SkGradientShaderBase::Descriptor" = type <{ %class.SkMatrix*, %struct.SkRGBA4f*, %class.sk_sp, float*, i32, i32, i32, [4 x i8] }>
%class.SkGradientShaderBase = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8, [7 x i8] }>
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%class.sk_sp.10 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.7*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.10*, %class.SkReadBuffer*)* }
%class.sk_sp.7 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.7*, i8*, i64, i8*)*, i8* }
%"class.SkGradientShaderBase::DescriptorScope" = type { %"struct.SkGradientShaderBase::Descriptor.base", %class.SkSTArray, %class.SkSTArray.11, %class.SkMatrix }
%class.sk_sp.15 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.20*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.20*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.20*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.16", [7 x i8] }>
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.22, %"class.std::__1::vector", %"class.std::__1::vector.34", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.22 = type { %class.SkTHashTable.23 }
%class.SkTHashTable.23 = type { i32, i32, %class.SkAutoTArray.24 }
%class.SkAutoTArray.24 = type { %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.31" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { i32*, i32*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.34" }
%"struct.skvm::Ptr" = type { i32 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::I32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.44, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.44 = type { %class.SkAlignedSTStorage.45, %class.SkTArray.46 }
%class.SkAlignedSTStorage.45 = type { [8 x i8] }
%class.SkTArray.46 = type { %"class.std::__1::unique_ptr.41"*, i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.51", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.50 }
%class.sk_sp.50 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.54, %class.SkTHashMap.56, %class.SkTHashMap.65, %class.SkTArray.74, %class.SkTArray.76, i32, i8, [3 x i8] }>
%class.SkTArray.54 = type { %"class.std::__1::unique_ptr.55"*, i64 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.76, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.77 }
%class.sk_sp.77 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.56 = type { %class.SkTHashTable.57 }
%class.SkTHashTable.57 = type { i32, i32, %class.SkAutoTArray.58 }
%class.SkAutoTArray.58 = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.116" }
%"struct.std::__1::pair.116" = type { i32, i32 }
%class.SkTHashMap.65 = type { %class.SkTHashTable.66 }
%class.SkTHashTable.66 = type { i32, i32, %class.SkAutoTArray.67 }
%class.SkAutoTArray.67 = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.117" }
%"struct.std::__1::pair.117" = type { i32, %class.SkTArray.118* }
%class.SkTArray.118 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.74 = type { %"class.std::__1::unique_ptr.75"*, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.118, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.76 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.90 }
%class.SkFibBlockSizes.90 = type { i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.SkMatrixProvider = type opaque
%class.GrColorInfo = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkRuntimeEffect = type opaque
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkPaint = type <{ %class.sk_sp.106, %class.sk_sp.15, %class.sk_sp.107, %class.sk_sp.108, %class.sk_sp.109, %struct.SkRGBA4f, float, float, %union.anon.110, [4 x i8] }>
%class.sk_sp.106 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.107 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.108 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.109 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.110 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkStageUpdater = type { i32 (...)** }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }

$_ZN4skvm8Uniforms5pushFEf = comdat any

$_ZN15SkSweepGradientD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK15SkSweepGradient10getFactoryEv = comdat any

$_ZNK15SkSweepGradient11getTypeNameEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

@_ZTV15SkSweepGradient = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkGradientShaderBase*)* @_ZN20SkGradientShaderBaseD2Ev to i8*), i8* bitcast (void (%class.SkSweepGradient*)* @_ZN15SkSweepGradientD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.10*, %class.SkReadBuffer*)* (%class.SkSweepGradient*)* @_ZNK15SkSweepGradient10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkSweepGradient*)* @_ZNK15SkSweepGradient11getTypeNameEv to i8*), i8* bitcast (void (%class.SkSweepGradient*, %class.SkWriteBuffer*)* @_ZNK15SkSweepGradient7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkGradientShaderBase*)* @_ZNK20SkGradientShaderBase8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkSweepGradient*, %"struct.SkShader::GradientInfo"*)* @_ZNK15SkSweepGradient11asAGradientEPN8SkShader12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkSweepGradient*, %struct.GrFPArgs*)* @_ZNK15SkSweepGradient19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkGradientShaderBase*, i32*)* @_ZNK20SkGradientShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkGradientShaderBase*, %struct.SkStageRec*)* @_ZNK20SkGradientShaderBase14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkGradientShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK20SkGradientShaderBase9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*), i8* bitcast (void (%class.SkSweepGradient*, %class.SkArenaAlloc*, %class.SkRasterPipeline*, %class.SkRasterPipeline*)* @_ZNK15SkSweepGradient20appendGradientStagesEP12SkArenaAllocP16SkRasterPipelineS3_ to i8*), i8* bitcast ({ %"class.skvm::Builder"*, i32 } (%class.SkSweepGradient*, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Coord"*, %"struct.skvm::I32"*)* @_ZNK15SkSweepGradient10transformTEPN4skvm7BuilderEPNS0_8UniformsENS0_5CoordEPNS0_3I32E to i8*)] }, align 8
@__const._ZN15SkSweepGradient10CreateProcER12SkReadBuffer.desc = private unnamed_addr constant { %"struct.SkGradientShaderBase::Descriptor.base", [4 x i8], %class.SkSTArray, %class.SkSTArray.11, %class.SkMatrix } { %"struct.SkGradientShaderBase::Descriptor.base" <{ %class.SkMatrix* inttoptr (i64 -6148914691236517206 to %class.SkMatrix*), %struct.SkRGBA4f* inttoptr (i64 -6148914691236517206 to %struct.SkRGBA4f*), %class.sk_sp { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766, i32 -1431655766 }>, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [256 x i8] c}, %class.SkTArray { %struct.SkRGBA4f* inttoptr (i64 -6148914691236517206 to %struct.SkRGBA4f*), i64 -6148914691236517206 } }, %class.SkSTArray.11 { %class.SkAlignedSTStorage.12 { [64 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.13 { float* inttoptr (i64 -6148914691236517206 to float*), i64 -6148914691236517206 } }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"SkSweepGradient\00", align 1

@_ZN15SkSweepGradientC1ERK7SkPointffRKN20SkGradientShaderBase10DescriptorE = hidden unnamed_addr alias void (%class.SkSweepGradient*, %struct.SkPoint*, float, float, %"struct.SkGradientShaderBase::Descriptor"*), void (%class.SkSweepGradient*, %struct.SkPoint*, float, float, %"struct.SkGradientShaderBase::Descriptor"*)* @_ZN15SkSweepGradientC2ERK7SkPointffRKN20SkGradientShaderBase10DescriptorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSweepGradientC2ERK7SkPointffRKN20SkGradientShaderBase10DescriptorE(%class.SkSweepGradient*, %struct.SkPoint* nocapture readonly dereferenceable(8), float, float, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = bitcast %class.SkSweepGradient* %0 to %class.SkGradientShaderBase*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #10
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fsub float -0.000000e+00, %10
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fsub float -0.000000e+00, %13
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %16 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16, !alias.scope !2
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16, !alias.scope !2
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %19, align 16, !alias.scope !2
  store i32 16, i32* %15, align 4, !alias.scope !2
  %20 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %6, float %11, float %14) #10
  call void @_ZN20SkGradientShaderBaseC2ERKNS_10DescriptorERK8SkMatrix(%class.SkGradientShaderBase* %7, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48) %4, %class.SkMatrix* nonnull dereferenceable(40) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #10
  %21 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV15SkSweepGradient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 1
  %23 = bitcast %struct.SkPoint* %1 to i64*
  %24 = bitcast %struct.SkPoint* %22 to i64*
  %25 = load i64, i64* %23, align 4
  store i64 %25, i64* %24, align 4
  %26 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 2
  %27 = fsub float -0.000000e+00, %2
  store float %27, float* %26, align 4
  %28 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 3
  %29 = fsub float %3, %2
  %30 = fdiv float 1.000000e+00, %29
  store float %30, float* %28, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN20SkGradientShaderBaseC2ERKNS_10DescriptorERK8SkMatrix(%class.SkGradientShaderBase*, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48), %class.SkMatrix* dereferenceable(40)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15SkSweepGradient11asAGradientEPN8SkShader12GradientInfoE(%class.SkSweepGradient*, %"struct.SkShader::GradientInfo"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.SkShader::GradientInfo"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.SkSweepGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZNK20SkGradientShaderBase17commonAsAGradientEPN8SkShader12GradientInfoE(%class.SkGradientShaderBase* %5, %"struct.SkShader::GradientInfo"* nonnull %1) #10
  %6 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 3, i64 0
  %8 = bitcast %struct.SkPoint* %6 to i64*
  %9 = bitcast %struct.SkPoint* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  br label %11

11:                                               ; preds = %2, %4
  ret i32 4
}

declare void @_ZNK20SkGradientShaderBase17commonAsAGradientEPN8SkShader12GradientInfoE(%class.SkGradientShaderBase*, %"struct.SkShader::GradientInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSweepGradient10CreateProcER12SkReadBuffer(%class.sk_sp.10* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #3 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.SkGradientShaderBase::DescriptorScope", align 8
  %5 = alloca %class.sk_sp.15, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = bitcast %"class.SkGradientShaderBase::DescriptorScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 440, i8* nonnull %7) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ %"struct.SkGradientShaderBase::Descriptor.base", [4 x i8], %class.SkSTArray, %class.SkSTArray.11, %class.SkMatrix }* @__const._ZN15SkSweepGradient10CreateProcER12SkReadBuffer.desc to i8*), i64 384, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 48, i1 false) #10
  %8 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 1, i32 0, i32 0, i64 256
  %9 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %10 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 1, i32 0, i32 0, i64 264
  %11 = bitcast i8* %10 to i64*
  %12 = bitcast i8* %8 to i8**
  store i8* %9, i8** %12, align 8
  store i64 137438953472, i64* %11, align 8
  %13 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 2, i32 0, i32 0, i64 64
  %14 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 2, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 2, i32 0, i32 0, i64 72
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 137438953472, i64* %16, align 8
  %18 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 3, i32 0, i64 0
  %19 = bitcast float* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 8
  %20 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 3, i32 0, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %21, align 8
  %22 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 3, i32 0, i64 8
  store float 1.000000e+00, float* %22, align 8
  %23 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 3, i32 1
  store i32 16, i32* %23, align 4
  %24 = call zeroext i1 @_ZN20SkGradientShaderBase15DescriptorScope9unflattenER12SkReadBuffer(%"class.SkGradientShaderBase::DescriptorScope"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1) #10
  br i1 %24, label %27, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %26, align 8
  br label %73

27:                                               ; preds = %2
  %28 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %30 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %30, align 8
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %31, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %29) #10
  %32 = load <2 x float>, <2 x float>* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %33 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #10
  %34 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #10
  %35 = fmul float %33, -3.600000e+02
  %36 = fdiv float 1.000000e+00, %34
  %37 = fsub float %36, %33
  %38 = fmul float %37, 3.600000e+02
  %39 = bitcast %class.sk_sp.15* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = extractelement <2 x float> %32, i32 0
  %41 = extractelement <2 x float> %32, i32 1
  %42 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 1
  %43 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %42, align 8
  %44 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 2
  %45 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %44, i64 0, i32 0
  %46 = bitcast %class.sk_sp* %44 to i64*
  %47 = load i64, i64* %46, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %45, align 8
  %48 = bitcast %class.sk_sp* %6 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 3
  %50 = load float*, float** %49, align 8
  %51 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 5
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 6
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 0
  %58 = load %class.SkMatrix*, %class.SkMatrix** %57, align 8
  call void @_ZN16SkGradientShader9MakeSweepEffPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp.15* nonnull sret %5, float %40, float %41, %struct.SkRGBA4f* %43, %class.sk_sp* nonnull %6, float* %50, i32 %52, i32 %54, float %35, float %38, i32 %56, %class.SkMatrix* %58) #10
  %59 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %5, i64 0, i32 0
  %60 = bitcast %class.sk_sp.15* %5 to i64*
  %61 = load i64, i64* %60, align 8
  store %class.SkShader* null, %class.SkShader** %59, align 8
  %62 = bitcast %class.sk_sp.10* %0 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %63, align 8
  %65 = icmp eq %class.SkColorSpace* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %27
  %67 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = bitcast %class.SkColorSpace* %64 to i8*
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %27, %66, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %73

73:                                               ; preds = %72, %25
  %74 = load i64, i64* %16, align 8
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = load i8*, i8** %17, align 8
  call void @_Z7sk_freePv(i8* %78) #10
  br label %79

79:                                               ; preds = %77, %73
  %80 = load i64, i64* %11, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = load i8*, i8** %12, align 8
  call void @_Z7sk_freePv(i8* %84) #10
  br label %85

85:                                               ; preds = %83, %79
  %86 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %4, i64 0, i32 0, i32 2, i32 0
  %87 = load %class.SkColorSpace*, %class.SkColorSpace** %86, align 8
  %88 = icmp eq %class.SkColorSpace* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = bitcast %class.SkColorSpace* %87 to i8*
  call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %85, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 440, i8* nonnull %7) #10
  ret void
}

declare zeroext i1 @_ZN20SkGradientShaderBase15DescriptorScope9unflattenER12SkReadBuffer(%"class.SkGradientShaderBase::DescriptorScope"*, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #2

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN16SkGradientShader9MakeSweepEffPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp.15* sret, float, float, %struct.SkRGBA4f*, %class.sk_sp*, float*, i32, i32, float, float, i32, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkSweepGradient7flattenER13SkWriteBuffer(%class.SkSweepGradient*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkSweepGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZNK20SkGradientShaderBase7flattenER13SkWriteBuffer(%class.SkGradientShaderBase* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #10
  %4 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkPoint*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)**, void (%class.SkWriteBuffer*, %struct.SkPoint*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %6, i64 16
  %8 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkPoint* dereferenceable(8) %4) #10
  %9 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %12 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, i64 5
  %14 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, float %10) #10
  %15 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %11, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, i64 5
  %19 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, float %16) #10
  ret void
}

declare void @_ZNK20SkGradientShaderBase7flattenER13SkWriteBuffer(%class.SkGradientShaderBase*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkSweepGradient20appendGradientStagesEP12SkArenaAllocP16SkRasterPipelineS3_(%class.SkSweepGradient* nocapture readonly, %class.SkArenaAlloc*, %class.SkRasterPipeline*, %class.SkRasterPipeline* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.SkMatrix, align 16
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 169, i8* null) #10
  %8 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #10
  %9 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #10
  %10 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 3
  %11 = load float, float* %10, align 8
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %13 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 16, !alias.scope !5
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16, !alias.scope !5
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 16, !alias.scope !5
  store i32 16, i32* %12, align 4, !alias.scope !5
  %17 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %6, float %11, float 1.000000e+00) #10
  %18 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  %19 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %22 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %22, align 16, !alias.scope !8
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %24, align 16, !alias.scope !8
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %25, align 16, !alias.scope !8
  store i32 16, i32* %21, align 4, !alias.scope !8
  %26 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %7, float %20, float 0.000000e+00) #10
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %28 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 16, !alias.scope !11
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %30, align 16, !alias.scope !11
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %31, align 16, !alias.scope !11
  store i32 16, i32* %27, align 4, !alias.scope !11
  %32 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %5, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkMatrix* nonnull dereferenceable(40) %7) #10
  call void @_ZN16SkRasterPipeline13append_matrixEP12SkArenaAllocRK8SkMatrix(%class.SkRasterPipeline* %2, %class.SkArenaAlloc* %1, %class.SkMatrix* nonnull dereferenceable(40) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #10
  ret void
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #2

declare void @_ZN16SkRasterPipeline13append_matrixEP12SkArenaAllocRK8SkMatrix(%class.SkRasterPipeline*, %class.SkArenaAlloc*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.skvm::Builder"*, i32 } @_ZNK15SkSweepGradient10transformTEPN4skvm7BuilderEPNS0_8UniformsENS0_5CoordEPNS0_3I32E(%class.SkSweepGradient* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::I32"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %7 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %8 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %9 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %10 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %10, align 8
  %12 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %11, i32 2147483647) #10
  %15 = extractvalue { %"class.skvm::Builder"*, i32 } %14, 0
  %16 = extractvalue { %"class.skvm::Builder"*, i32 } %14, 1
  %17 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %13, %"class.skvm::Builder"* %15, i32 %16) #10
  %18 = extractvalue { %"class.skvm::Builder"*, i32 } %17, 0
  %19 = extractvalue { %"class.skvm::Builder"*, i32 } %17, 1
  %20 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 0
  %21 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %20, align 8
  %22 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %21, i32 2147483647) #10
  %25 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 0
  %26 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 1
  %27 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %21, %"class.skvm::Builder"* %21, i32 %23, %"class.skvm::Builder"* %25, i32 %26) #10
  %28 = extractvalue { %"class.skvm::Builder"*, i32 } %27, 0
  %29 = extractvalue { %"class.skvm::Builder"*, i32 } %27, 1
  %30 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %18, %"class.skvm::Builder"* %18, i32 %19, %"class.skvm::Builder"* %28, i32 %29) #10
  %31 = extractvalue { %"class.skvm::Builder"*, i32 } %30, 0
  %32 = extractvalue { %"class.skvm::Builder"*, i32 } %30, 1
  %33 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %18, %"class.skvm::Builder"* %18, i32 %19, %"class.skvm::Builder"* %28, i32 %29) #10
  %34 = extractvalue { %"class.skvm::Builder"*, i32 } %33, 0
  %35 = extractvalue { %"class.skvm::Builder"*, i32 } %33, 1
  %36 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"* %31, %"class.skvm::Builder"* %31, i32 %32, %"class.skvm::Builder"* %34, i32 %35) #10
  %37 = extractvalue { %"class.skvm::Builder"*, i32 } %36, 0
  %38 = extractvalue { %"class.skvm::Builder"*, i32 } %36, 1
  %39 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %37, %"class.skvm::Builder"* %37, i32 %38, %"class.skvm::Builder"* %37, i32 %38) #10
  %40 = extractvalue { %"class.skvm::Builder"*, i32 } %39, 0
  %41 = extractvalue { %"class.skvm::Builder"*, i32 } %39, 1
  %42 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %40, i32 -1142477969) #10
  %43 = extractvalue { %"class.skvm::Builder"*, i32 } %42, 0
  %44 = extractvalue { %"class.skvm::Builder"*, i32 } %42, 1
  %45 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %40, %"class.skvm::Builder"* %40, i32 %41, %"class.skvm::Builder"* %43, i32 %44) #10
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 0
  %47 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 1
  %48 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %46, i32 1019926431) #10
  %49 = extractvalue { %"class.skvm::Builder"*, i32 } %48, 0
  %50 = extractvalue { %"class.skvm::Builder"*, i32 } %48, 1
  %51 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %46, %"class.skvm::Builder"* %46, i32 %47, %"class.skvm::Builder"* %49, i32 %50) #10
  %52 = extractvalue { %"class.skvm::Builder"*, i32 } %51, 0
  %53 = extractvalue { %"class.skvm::Builder"*, i32 } %51, 1
  %54 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %40, %"class.skvm::Builder"* %40, i32 %41, %"class.skvm::Builder"* %52, i32 %53) #10
  %55 = extractvalue { %"class.skvm::Builder"*, i32 } %54, 0
  %56 = extractvalue { %"class.skvm::Builder"*, i32 } %54, 1
  %57 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %55, i32 -1118542636) #10
  %58 = extractvalue { %"class.skvm::Builder"*, i32 } %57, 0
  %59 = extractvalue { %"class.skvm::Builder"*, i32 } %57, 1
  %60 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %55, %"class.skvm::Builder"* %55, i32 %56, %"class.skvm::Builder"* %58, i32 %59) #10
  %61 = extractvalue { %"class.skvm::Builder"*, i32 } %60, 0
  %62 = extractvalue { %"class.skvm::Builder"*, i32 } %60, 1
  %63 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %40, %"class.skvm::Builder"* %40, i32 %41, %"class.skvm::Builder"* %61, i32 %62) #10
  %64 = extractvalue { %"class.skvm::Builder"*, i32 } %63, 0
  %65 = extractvalue { %"class.skvm::Builder"*, i32 } %63, 1
  %66 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %64, i32 1042477225) #10
  %67 = extractvalue { %"class.skvm::Builder"*, i32 } %66, 0
  %68 = extractvalue { %"class.skvm::Builder"*, i32 } %66, 1
  %69 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %64, %"class.skvm::Builder"* %64, i32 %65, %"class.skvm::Builder"* %67, i32 %68) #10
  %70 = extractvalue { %"class.skvm::Builder"*, i32 } %69, 0
  %71 = extractvalue { %"class.skvm::Builder"*, i32 } %69, 1
  %72 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %37, %"class.skvm::Builder"* %37, i32 %38, %"class.skvm::Builder"* %70, i32 %71) #10
  %73 = extractvalue { %"class.skvm::Builder"*, i32 } %72, 0
  %74 = extractvalue { %"class.skvm::Builder"*, i32 } %72, 1
  %75 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2ltENS_3F32ES1_(%"class.skvm::Builder"* %18, %"class.skvm::Builder"* %18, i32 %19, %"class.skvm::Builder"* %28, i32 %29) #10
  %76 = extractvalue { %"class.skvm::Builder"*, i32 } %75, 0
  %77 = extractvalue { %"class.skvm::Builder"*, i32 } %75, 1
  %78 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %73, i32 1048576000) #10
  %79 = extractvalue { %"class.skvm::Builder"*, i32 } %78, 0
  %80 = extractvalue { %"class.skvm::Builder"*, i32 } %78, 1
  %81 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %73, %"class.skvm::Builder"* %79, i32 %80, %"class.skvm::Builder"* %73, i32 %74) #10
  %82 = extractvalue { %"class.skvm::Builder"*, i32 } %81, 0
  %83 = extractvalue { %"class.skvm::Builder"*, i32 } %81, 1
  %84 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #10
  %85 = ptrtoint %"class.skvm::Builder"* %73 to i64
  %86 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to %"struct.skvm::I32"*
  %87 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %9, i64 0, i32 1
  store i32 %74, i32* %88, align 8
  %89 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %76, %"class.skvm::Builder"* %76, i32 %77, %"class.skvm::Builder"* %82, i32 %83, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %86) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #10
  %90 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 0
  %91 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 1
  %92 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %11, i32 0) #10
  %93 = extractvalue { %"class.skvm::Builder"*, i32 } %92, 0
  %94 = extractvalue { %"class.skvm::Builder"*, i32 } %92, 1
  %95 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2ltENS_3F32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %13, %"class.skvm::Builder"* %93, i32 %94) #10
  %96 = extractvalue { %"class.skvm::Builder"*, i32 } %95, 0
  %97 = extractvalue { %"class.skvm::Builder"*, i32 } %95, 1
  %98 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %90, i32 1056964608) #10
  %99 = extractvalue { %"class.skvm::Builder"*, i32 } %98, 0
  %100 = extractvalue { %"class.skvm::Builder"*, i32 } %98, 1
  %101 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %90, %"class.skvm::Builder"* %99, i32 %100, %"class.skvm::Builder"* %90, i32 %91) #10
  %102 = extractvalue { %"class.skvm::Builder"*, i32 } %101, 0
  %103 = extractvalue { %"class.skvm::Builder"*, i32 } %101, 1
  %104 = bitcast { %"class.skvm::Builder"*, i32 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10
  %105 = ptrtoint %"class.skvm::Builder"* %90 to i64
  %106 = bitcast { %"class.skvm::Builder"*, i32 }* %8 to %"struct.skvm::I32"*
  %107 = bitcast { %"class.skvm::Builder"*, i32 }* %8 to i64*
  store i64 %105, i64* %107, align 8
  %108 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %8, i64 0, i32 1
  store i32 %91, i32* %108, align 8
  %109 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %96, %"class.skvm::Builder"* %96, i32 %97, %"class.skvm::Builder"* %102, i32 %103, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %106) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10
  %110 = extractvalue { %"class.skvm::Builder"*, i32 } %109, 0
  %111 = extractvalue { %"class.skvm::Builder"*, i32 } %109, 1
  %112 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %21, i32 0) #10
  %113 = extractvalue { %"class.skvm::Builder"*, i32 } %112, 0
  %114 = extractvalue { %"class.skvm::Builder"*, i32 } %112, 1
  %115 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2ltENS_3F32ES1_(%"class.skvm::Builder"* %21, %"class.skvm::Builder"* %21, i32 %23, %"class.skvm::Builder"* %113, i32 %114) #10
  %116 = extractvalue { %"class.skvm::Builder"*, i32 } %115, 0
  %117 = extractvalue { %"class.skvm::Builder"*, i32 } %115, 1
  %118 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %110, i32 1065353216) #10
  %119 = extractvalue { %"class.skvm::Builder"*, i32 } %118, 0
  %120 = extractvalue { %"class.skvm::Builder"*, i32 } %118, 1
  %121 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %110, %"class.skvm::Builder"* %119, i32 %120, %"class.skvm::Builder"* %110, i32 %111) #10
  %122 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 0
  %123 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 1
  %124 = bitcast { %"class.skvm::Builder"*, i32 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #10
  %125 = ptrtoint %"class.skvm::Builder"* %110 to i64
  %126 = bitcast { %"class.skvm::Builder"*, i32 }* %7 to %"struct.skvm::I32"*
  %127 = bitcast { %"class.skvm::Builder"*, i32 }* %7 to i64*
  store i64 %125, i64* %127, align 8
  %128 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %7, i64 0, i32 1
  store i32 %111, i32* %128, align 8
  %129 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %116, %"class.skvm::Builder"* %116, i32 %117, %"class.skvm::Builder"* %122, i32 %123, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %126) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #10
  %130 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 0
  %131 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 1
  %132 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3neqENS_3F32ES1_(%"class.skvm::Builder"* %130, %"class.skvm::Builder"* %130, i32 %131, %"class.skvm::Builder"* %130, i32 %131) #10
  %133 = extractvalue { %"class.skvm::Builder"*, i32 } %132, 0
  %134 = extractvalue { %"class.skvm::Builder"*, i32 } %132, 1
  %135 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 0) #10
  %136 = extractvalue { %"class.skvm::Builder"*, i32 } %135, 0
  %137 = extractvalue { %"class.skvm::Builder"*, i32 } %135, 1
  %138 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #10
  %139 = ptrtoint %"class.skvm::Builder"* %130 to i64
  %140 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to %"struct.skvm::I32"*
  %141 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to i64*
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %6, i64 0, i32 1
  store i32 %131, i32* %142, align 8
  %143 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %133, %"class.skvm::Builder"* %133, i32 %134, %"class.skvm::Builder"* %136, i32 %137, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %140) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #10
  %144 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 0
  %145 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 1
  %146 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 3
  %147 = load float, float* %146, align 8
  %148 = fcmp une float %147, 1.000000e+00
  br i1 %148, label %153, label %149

149:                                              ; preds = %5
  %150 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 2
  %151 = load float, float* %150, align 4
  %152 = fcmp une float %151, 0.000000e+00
  br i1 %152, label %153, label %178

153:                                              ; preds = %149, %5
  %154 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %147)
  %155 = trunc i64 %154 to i32
  %156 = lshr i64 %154, 32
  %157 = trunc i64 %156 to i32
  %158 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %155, i32 %157) #10
  %159 = extractvalue { %"class.skvm::Builder"*, i32 } %158, 0
  %160 = extractvalue { %"class.skvm::Builder"*, i32 } %158, 1
  %161 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %144, %"class.skvm::Builder"* %144, i32 %145, %"class.skvm::Builder"* %159, i32 %160) #10
  %162 = extractvalue { %"class.skvm::Builder"*, i32 } %161, 0
  %163 = extractvalue { %"class.skvm::Builder"*, i32 } %161, 1
  %164 = load float, float* %146, align 8
  %165 = getelementptr inbounds %class.SkSweepGradient, %class.SkSweepGradient* %0, i64 0, i32 2
  %166 = load float, float* %165, align 4
  %167 = fmul float %164, %166
  %168 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %167)
  %169 = trunc i64 %168 to i32
  %170 = lshr i64 %168, 32
  %171 = trunc i64 %170 to i32
  %172 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %169, i32 %171) #10
  %173 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 0
  %174 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 1
  %175 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %162, %"class.skvm::Builder"* %162, i32 %163, %"class.skvm::Builder"* %173, i32 %174) #10
  %176 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 0
  %177 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 1
  br label %178

178:                                              ; preds = %153, %149
  %179 = phi %"class.skvm::Builder"* [ %176, %153 ], [ %144, %149 ]
  %180 = phi i32 [ %177, %153 ], [ %145, %149 ]
  %181 = insertvalue { %"class.skvm::Builder"*, i32 } undef, %"class.skvm::Builder"* %179, 0
  %182 = insertvalue { %"class.skvm::Builder"*, i32 } %181, i32 %180, 1
  ret { %"class.skvm::Builder"*, i32 } %182
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"*, float) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast i32* %5 to float*
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds i32, i32* %5, i64 1
  %13 = ptrtoint i32* %12 to i64
  %14 = bitcast i32** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector.34"* %3 to i64*
  br label %74

16:                                               ; preds = %2
  %17 = ptrtoint i32* %5 to i64
  %18 = bitcast i32** %4 to i64*
  %19 = bitcast %"class.std::__1::vector.34"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.34"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i32** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, 2305843009213693951
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 4611686018427387903, %27 ]
  %42 = shl i64 %41, 2
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %43 to i32*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 %22
  %49 = getelementptr inbounds i32, i32* %47, i64 %46
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32* %48 to float*
  store float %1, float* %51, align 4
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = ptrtoint i32* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint i32* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32, i32* %48, i64 %60
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast i32* %61 to i8*
  %66 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %58, i1 false) #10
  %67 = load i32*, i32** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi i32* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast i32* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  %73 = load i64, i64* %18, align 8
  br label %74

74:                                               ; preds = %10, %68, %71
  %75 = phi i64* [ %15, %10 ], [ %19, %68 ], [ %19, %71 ]
  %76 = phi i64 [ %13, %10 ], [ %53, %68 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i64, i64* %75, align 8
  %80 = sub i64 %76, %79
  %81 = shl i64 %80, 32
  %82 = add i64 %81, -17179869184
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK15SkSweepGradient19asFragmentProcessorERK8GrFPArgs(%class.SkSweepGradient*, %struct.GrFPArgs* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = tail call %class.GrFragmentProcessor* @_ZN16GrGradientShader9MakeSweepERK15SkSweepGradientRK8GrFPArgs(%class.SkSweepGradient* dereferenceable(248) %0, %struct.GrFPArgs* dereferenceable(40) %1) #10
  ret %class.GrFragmentProcessor* %3
}

declare %class.GrFragmentProcessor* @_ZN16GrGradientShader9MakeSweepERK15SkSweepGradientRK8GrFPArgs(%class.SkSweepGradient* dereferenceable(248), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN20SkGradientShaderBaseD2Ev(%class.SkGradientShaderBase*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkSweepGradientD0Ev(%class.SkSweepGradient*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkSweepGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZN20SkGradientShaderBaseD2Ev(%class.SkGradientShaderBase* %2) #10
  %3 = bitcast %class.SkSweepGradient* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.10*, %class.SkReadBuffer*)* @_ZNK15SkSweepGradient10getFactoryEv(%class.SkSweepGradient*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.10*, %class.SkReadBuffer*)* @_ZN15SkSweepGradient10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15SkSweepGradient11getTypeNameEv(%class.SkSweepGradient*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

declare zeroext i1 @_ZNK20SkGradientShaderBase8isOpaqueEv(%class.SkGradientShaderBase*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp.15* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  ret %"class.SkShaderBase::Context"* null
}

declare zeroext i1 @_ZNK20SkGradientShaderBase18onAsLuminanceColorEPj(%class.SkGradientShaderBase*, i32*) unnamed_addr #2

declare zeroext i1 @_ZNK20SkGradientShaderBase14onAppendStagesERK10SkStageRec(%class.SkGradientShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

declare void @_ZNK20SkGradientShaderBase9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkGradientShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer*, %struct.SkPoint*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32, %"struct.skvm::I32"* byval(%"struct.skvm::I32") align 8) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2ltENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3neqENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"*, i32, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix9TranslateEff"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!7 = distinct !{!7, !"_ZN8SkMatrix5ScaleEff"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!10 = distinct !{!10, !"_ZN8SkMatrix9TranslateEff"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!13 = distinct !{!13, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!14 = distinct !{!14, !15, !"_ZmlRK8SkMatrixS1_: argument 0"}
!15 = distinct !{!15, !"_ZmlRK8SkMatrixS1_"}
