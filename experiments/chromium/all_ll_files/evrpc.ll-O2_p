; ModuleID = '../../base/third_party/libevent/evrpc.c'
source_filename = "../../base/third_party/libevent/evrpc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evrpc_base = type { %struct._evrpc_hooks, %struct.evhttp*, %struct.evrpc_list }
%struct._evrpc_hooks = type { %struct.evrpc_hook_list, %struct.evrpc_hook_list }
%struct.evrpc_hook_list = type { %struct.evrpc_hook*, %struct.evrpc_hook** }
%struct.evrpc_hook = type { %struct.anon, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)*, i8* }
%struct.anon = type { %struct.evrpc_hook*, %struct.evrpc_hook** }
%struct.evhttp_request = type { %struct.anon.0, %struct.evhttp_connection*, i32, %struct.evkeyvalq*, %struct.evkeyvalq*, i8*, i16, i32, i32, i8*, i8, i8, i32, i8*, %struct.evbuffer*, i64, i8, %struct.evbuffer*, void (%struct.evhttp_request*, i8*)*, i8*, void (%struct.evhttp_request*, i8*)* }
%struct.anon.0 = type { %struct.evhttp_request*, %struct.evhttp_request** }
%struct.evhttp_connection = type { %struct.anon.1, i32, %struct.event, %struct.event, %struct.evbuffer*, %struct.evbuffer*, i8*, i16, i8*, i16, i32, i32, i32, i32, i32, %struct.evhttp*, %struct.evcon_requestq, void (%struct.evhttp_connection*, i8*)*, i8*, void (%struct.evhttp_connection*, i8*)*, i8*, %struct.event_base* }
%struct.anon.1 = type { %struct.evhttp_connection*, %struct.evhttp_connection** }
%struct.event = type { %struct.anon.2, %struct.anon.3, %struct.anon.4, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon.2 = type { %struct.event*, %struct.event** }
%struct.anon.3 = type { %struct.event*, %struct.event** }
%struct.anon.4 = type { %struct.event*, %struct.event** }
%struct.timeval = type { i64, i64 }
%struct.evcon_requestq = type { %struct.evhttp_request*, %struct.evhttp_request** }
%struct.event_base = type opaque
%struct.evkeyvalq = type { %struct.evkeyval*, %struct.evkeyval** }
%struct.evkeyval = type { %struct.anon.7, i8*, i8* }
%struct.anon.7 = type { %struct.evkeyval*, %struct.evkeyval** }
%struct.evbuffer = type { i8*, i8*, i64, i64, i64, void (%struct.evbuffer*, i64, i64, i8*)*, i8* }
%struct.evrpc_list = type { %struct.evrpc*, %struct.evrpc** }
%struct.evrpc = type { %struct.anon.8, i8*, i8* ()*, void (i8*)*, i32 (i8*, %struct.evbuffer*)*, i8* ()*, void (i8*)*, i32 (i8*)*, void (%struct.evbuffer*, i8*)*, void (%struct.evrpc_req_generic*, i8*)*, i8*, %struct.evrpc_base* }
%struct.anon.8 = type { %struct.evrpc*, %struct.evrpc** }
%struct.evrpc_req_generic = type { i8*, i8*, %struct.evrpc*, %struct.evhttp_request*, void (%struct.evrpc_req_generic*)* }
%struct.evhttp = type { %struct.boundq, %struct.httpcbq, %struct.evconq, i32, void (%struct.evhttp_request*, i8*)*, i8*, %struct.event_base* }
%struct.boundq = type { %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** }
%struct.evhttp_bound_socket = type { %struct.anon.5, %struct.event }
%struct.anon.5 = type { %struct.evhttp_bound_socket*, %struct.evhttp_bound_socket** }
%struct.httpcbq = type { %struct.evhttp_cb*, %struct.evhttp_cb** }
%struct.evhttp_cb = type { %struct.anon.6, i8*, void (%struct.evhttp_request*, i8*)*, i8* }
%struct.anon.6 = type { %struct.evhttp_cb*, %struct.evhttp_cb** }
%struct.evconq = type { %struct.evhttp_connection*, %struct.evhttp_connection** }
%struct.evrpc_pool = type { %struct._evrpc_hooks, %struct.event_base*, %struct.evconq, i32, %struct.evrpc_requestq }
%struct.evrpc_requestq = type { %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** }
%struct.evrpc_request_wrapper = type { %struct.anon.9, %struct.evrpc_pool*, %struct.evhttp_connection*, %struct.event, i8*, void (%struct.evrpc_status*, i8*, i8*, i8*)*, i8*, i8*, i8*, void (%struct.evbuffer*, i8*)*, void (i8*)*, i32 (i8*, %struct.evbuffer*)* }
%struct.anon.9 = type { %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** }
%struct.evrpc_status = type { i32, %struct.evhttp_request* }

@.str = private unnamed_addr constant [13 x i8] c"Content-Type\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"Service Error\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"%s: failed to register rpc at %s\00", align 1
@__func__.evrpc_construct_uri = private unnamed_addr constant [20 x i8] c"evrpc_construct_uri\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"/.rpc.\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evrpc_base* @evrpc_init(%struct.evhttp*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 56) #9
  %3 = icmp eq i8* %2, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct.evrpc_base*
  tail call void @evtag_init() #9
  %6 = getelementptr inbounds i8, i8* %2, i64 40
  %7 = bitcast i8* %6 to %struct.evrpc**
  store %struct.evrpc* null, %struct.evrpc** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 48
  %9 = bitcast i8* %8 to i8**
  store i8* %6, i8** %9, align 8
  %10 = bitcast i8* %2 to %struct.evrpc_hook**
  store %struct.evrpc_hook* null, %struct.evrpc_hook** %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 8
  %12 = bitcast i8* %11 to i8**
  store i8* %2, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to %struct.evrpc_hook**
  store %struct.evrpc_hook* null, %struct.evrpc_hook** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 24
  %16 = bitcast i8* %15 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 32
  %18 = bitcast i8* %17 to %struct.evhttp**
  store %struct.evhttp* %0, %struct.evhttp** %18, align 8
  br label %19

19:                                               ; preds = %1, %4
  %20 = phi %struct.evrpc_base* [ %5, %4 ], [ null, %1 ]
  ret %struct.evrpc_base* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

declare void @evtag_init() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @evrpc_free(%struct.evrpc_base* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 2, i32 0
  %3 = load %struct.evrpc*, %struct.evrpc** %2, align 8
  %4 = icmp eq %struct.evrpc* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1, %5
  br label %5

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %struct.evrpc_hook*, %struct.evrpc_hook** %7, align 8
  %9 = icmp eq %struct.evrpc_hook* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6, %10
  br label %10

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %struct.evrpc_hook*, %struct.evrpc_hook** %12, align 8
  %14 = icmp eq %struct.evrpc_hook* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11, %15
  br label %15

16:                                               ; preds = %11
  %17 = bitcast %struct.evrpc_base* %0 to i8*
  tail call void @free(i8* %17) #9
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @evrpc_add_hook(i8* nocapture, i32, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)*, i8*) local_unnamed_addr #5 {
  switch i32 %1, label %10 [
    i32 0, label %5
    i32 1, label %7
  ]

5:                                                ; preds = %4
  %6 = bitcast i8* %0 to %struct.evrpc_hook_list*
  br label %10

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i64 16
  %9 = bitcast i8* %8 to %struct.evrpc_hook_list*
  br label %10

10:                                               ; preds = %4, %7, %5
  %11 = phi %struct.evrpc_hook_list* [ null, %4 ], [ %9, %7 ], [ %6, %5 ]
  %12 = tail call noalias i8* @calloc(i64 1, i64 32) #9
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)**
  store i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)* %2, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)** %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 24
  %16 = bitcast i8* %15 to i8**
  store i8* %3, i8** %16, align 8
  %17 = getelementptr inbounds %struct.evrpc_hook_list, %struct.evrpc_hook_list* %11, i64 0, i32 1
  %18 = bitcast %struct.evrpc_hook*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = inttoptr i64 %19 to i8**
  store i8* %12, i8** %22, align 8
  %23 = bitcast %struct.evrpc_hook*** %17 to i8**
  store i8* %12, i8** %23, align 8
  ret i8* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evrpc_remove_hook(i8* nocapture, i32, i8*) local_unnamed_addr #0 {
  switch i32 %1, label %9 [
    i32 0, label %4
    i32 1, label %6
  ]

4:                                                ; preds = %3
  %5 = bitcast i8* %0 to %struct.evrpc_hook_list*
  br label %9

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to %struct.evrpc_hook_list*
  br label %9

9:                                                ; preds = %3, %6, %4
  %10 = phi %struct.evrpc_hook_list* [ null, %3 ], [ %8, %6 ], [ %5, %4 ]
  %11 = getelementptr inbounds %struct.evrpc_hook_list, %struct.evrpc_hook_list* %10, i64 0, i32 0
  %12 = load %struct.evrpc_hook*, %struct.evrpc_hook** %11, align 8
  %13 = bitcast i8* %2 to %struct.evrpc_hook*
  br label %14

14:                                               ; preds = %17, %9
  %15 = phi %struct.evrpc_hook* [ %12, %9 ], [ %20, %17 ]
  %16 = icmp eq %struct.evrpc_hook* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %14
  %18 = icmp eq %struct.evrpc_hook* %15, %13
  %19 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %15, i64 0, i32 0, i32 0
  %20 = load %struct.evrpc_hook*, %struct.evrpc_hook** %19, align 8
  br i1 %18, label %21, label %14

21:                                               ; preds = %17
  %22 = icmp eq %struct.evrpc_hook* %20, null
  %23 = getelementptr inbounds i8, i8* %2, i64 8
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.evrpc_hook_list, %struct.evrpc_hook_list* %10, i64 0, i32 1
  %27 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %20, i64 0, i32 0, i32 1
  %28 = select i1 %22, %struct.evrpc_hook*** %26, %struct.evrpc_hook*** %27
  %29 = bitcast %struct.evrpc_hook*** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = bitcast i8* %2 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast i8* %23 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  tail call void @free(i8* %2) #9
  br label %34

34:                                               ; preds = %14, %21
  %35 = phi i32 [ 1, %21 ], [ 0, %14 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evrpc_register_rpc(%struct.evrpc_base*, %struct.evrpc*, void (%struct.evrpc_req_generic*, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %1, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i64 @strlen(i8* %6) #10
  %8 = shl i64 %7, 32
  %9 = add i64 %8, 30064771072
  %10 = ashr exact i64 %9, 32
  %11 = tail call noalias i8* @malloc(i64 %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.evrpc_construct_uri, i64 0, i64 0), i8* %6) #9
  br label %14

14:                                               ; preds = %4, %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6, i1 false) #9
  %15 = getelementptr inbounds i8, i8* %11, i64 6
  %16 = tail call i64 @strlen(i8* %6) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %6, i64 %16, i1 false) #9
  %17 = add i64 %8, 25769803776
  %18 = ashr exact i64 %17, 32
  %19 = getelementptr inbounds i8, i8* %11, i64 %18
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %1, i64 0, i32 11
  store %struct.evrpc_base* %0, %struct.evrpc_base** %20, align 8
  %21 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %1, i64 0, i32 9
  store void (%struct.evrpc_req_generic*, i8*)* %2, void (%struct.evrpc_req_generic*, i8*)** %21, align 8
  %22 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %1, i64 0, i32 10
  store i8* %3, i8** %22, align 8
  %23 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %1, i64 0, i32 0, i32 0
  store %struct.evrpc* null, %struct.evrpc** %23, align 8
  %24 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 2, i32 1
  %25 = bitcast %struct.evrpc*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %1, i64 0, i32 0, i32 1
  %28 = bitcast %struct.evrpc*** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = load %struct.evrpc**, %struct.evrpc*** %24, align 8
  store %struct.evrpc* %1, %struct.evrpc** %29, align 8
  store %struct.evrpc** %23, %struct.evrpc*** %24, align 8
  %30 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 1
  %31 = load %struct.evhttp*, %struct.evhttp** %30, align 8
  %32 = bitcast %struct.evrpc* %1 to i8*
  tail call void @evhttp_set_cb(%struct.evhttp* %31, i8* %11, void (%struct.evhttp_request*, i8*)* nonnull @evrpc_request_cb, i8* %32) #9
  tail call void @free(i8* %11) #9
  ret i32 0
}

declare void @evhttp_set_cb(%struct.evhttp*, i8*, void (%struct.evhttp_request*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @evrpc_request_cb(%struct.evhttp_request*, i8*) #0 {
  %3 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %83

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 14
  %8 = load %struct.evbuffer*, %struct.evbuffer** %7, align 8
  %9 = getelementptr inbounds %struct.evbuffer, %struct.evbuffer* %8, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %83, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %1, i64 96
  %14 = bitcast i8* %13 to %struct.evrpc_base**
  %15 = load %struct.evrpc_base*, %struct.evrpc_base** %14, align 8
  %16 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %struct.evrpc_hook*, %struct.evrpc_hook** %16, align 8
  %18 = icmp eq %struct.evrpc_hook* %17, null
  br i1 %18, label %31, label %23

19:                                               ; preds = %23
  %20 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %24, i64 0, i32 0, i32 0
  %21 = load %struct.evrpc_hook*, %struct.evrpc_hook** %20, align 8
  %22 = icmp eq %struct.evrpc_hook* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %12, %19
  %24 = phi %struct.evrpc_hook* [ %21, %19 ], [ %17, %12 ]
  %25 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %24, i64 0, i32 1
  %26 = load i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)*, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)** %25, align 8
  %27 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %24, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 %26(%struct.evhttp_request* %0, %struct.evbuffer* %8, i8* %28) #9
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %83, label %19

31:                                               ; preds = %19, %12
  %32 = tail call noalias i8* @calloc(i64 1, i64 40) #9
  %33 = bitcast i8* %32 to %struct.evrpc_req_generic*
  %34 = icmp eq i8* %32, null
  br i1 %34, label %83, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %1, i64 24
  %37 = bitcast i8* %36 to i8* ()**
  %38 = load i8* ()*, i8* ()** %37, align 8
  %39 = tail call i8* %38() #9
  %40 = bitcast i8* %32 to i8**
  store i8* %39, i8** %40, align 8
  %41 = icmp eq i8* %39, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %32, i64 16
  %44 = bitcast i8* %43 to i8**
  store i8* %1, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %1, i64 40
  %46 = bitcast i8* %45 to i32 (i8*, %struct.evbuffer*)**
  %47 = load i32 (i8*, %struct.evbuffer*)*, i32 (i8*, %struct.evbuffer*)** %46, align 8
  %48 = load %struct.evbuffer*, %struct.evbuffer** %7, align 8
  %49 = tail call i32 %47(i8* nonnull %39, %struct.evbuffer* %48) #9
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %70, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds i8, i8* %1, i64 48
  %53 = bitcast i8* %52 to i8* ()**
  %54 = load i8* ()*, i8* ()** %53, align 8
  %55 = tail call i8* %54() #9
  %56 = getelementptr inbounds i8, i8* %32, i64 8
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8
  %58 = icmp eq i8* %55, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %32, i64 24
  %61 = bitcast i8* %60 to %struct.evhttp_request**
  store %struct.evhttp_request* %0, %struct.evhttp_request** %61, align 8
  %62 = getelementptr inbounds i8, i8* %32, i64 32
  %63 = bitcast i8* %62 to void (%struct.evrpc_req_generic*)**
  store void (%struct.evrpc_req_generic*)* @evrpc_request_done, void (%struct.evrpc_req_generic*)** %63, align 8
  %64 = getelementptr inbounds i8, i8* %1, i64 80
  %65 = bitcast i8* %64 to void (%struct.evrpc_req_generic*, i8*)**
  %66 = load void (%struct.evrpc_req_generic*, i8*)*, void (%struct.evrpc_req_generic*, i8*)** %65, align 8
  %67 = getelementptr inbounds i8, i8* %1, i64 88
  %68 = bitcast i8* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void %66(%struct.evrpc_req_generic* nonnull %33, i8* %69) #9
  br label %84

70:                                               ; preds = %51, %42
  %71 = getelementptr inbounds i8, i8* %1, i64 32
  %72 = bitcast i8* %71 to void (i8*)**
  %73 = load void (i8*)*, void (i8*)** %72, align 8
  tail call void %73(i8* nonnull %39) #9
  %74 = getelementptr inbounds i8, i8* %32, i64 8
  %75 = bitcast i8* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds i8, i8* %1, i64 56
  %80 = bitcast i8* %79 to void (i8*)**
  %81 = load void (i8*)*, void (i8*)** %80, align 8
  tail call void %81(i8* nonnull %76) #9
  br label %82

82:                                               ; preds = %35, %78, %70
  tail call void @free(i8* nonnull %32) #9
  br label %83

83:                                               ; preds = %23, %31, %6, %2, %82
  tail call void @evhttp_send_error(%struct.evhttp_request* %0, i32 503, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %84

84:                                               ; preds = %83, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evrpc_unregister_rpc(%struct.evrpc_base* nocapture, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 2, i32 0
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi %struct.evrpc** [ %3, %2 ], [ %13, %8 ]
  %6 = load %struct.evrpc*, %struct.evrpc** %5, align 8
  %7 = icmp eq %struct.evrpc* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %6, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i32 @strcmp(i8* %10, i8* %1) #10
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %6, i64 0, i32 0, i32 0
  br i1 %12, label %14, label %4

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %6, i64 0, i32 1
  %16 = load %struct.evrpc*, %struct.evrpc** %13, align 8
  %17 = icmp eq %struct.evrpc* %16, null
  %18 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %6, i64 0, i32 0, i32 1
  %19 = bitcast %struct.evrpc*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %0, i64 0, i32 2, i32 1
  %22 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %16, i64 0, i32 0, i32 1
  %23 = select i1 %17, %struct.evrpc*** %21, %struct.evrpc*** %22
  %24 = bitcast %struct.evrpc*** %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = bitcast %struct.evrpc* %6 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.evrpc*** %18 to i64**
  %28 = load i64*, i64** %27, align 8
  store i64 %26, i64* %28, align 8
  %29 = load i8*, i8** %15, align 8
  tail call void @free(i8* %29) #9
  %30 = bitcast %struct.evrpc* %6 to i8*
  tail call void @free(i8* %30) #9
  br label %31

31:                                               ; preds = %4, %14
  %32 = phi i32 [ 0, %14 ], [ -1, %4 ]
  ret i32 %32
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @evrpc_reqstate_free(%struct.evrpc_req_generic*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evrpc_req_generic* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 2
  %5 = load %struct.evrpc*, %struct.evrpc** %4, align 8
  %6 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %5, i64 0, i32 3
  %11 = load void (i8*)*, void (i8*)** %10, align 8
  tail call void %11(i8* nonnull %7) #9
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %5, i64 0, i32 6
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  tail call void %18(i8* nonnull %14) #9
  br label %19

19:                                               ; preds = %12, %16
  %20 = bitcast %struct.evrpc_req_generic* %0 to i8*
  tail call void @free(i8* %20) #9
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evrpc_request_done(%struct.evrpc_req_generic*) #0 {
  %2 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 3
  %3 = load %struct.evhttp_request*, %struct.evhttp_request** %2, align 8
  %4 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 2
  %5 = load %struct.evrpc*, %struct.evrpc** %4, align 8
  %6 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %5, i64 0, i32 7
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 8
  %8 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 %7(i8* %9) #9
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %63, label %12

12:                                               ; preds = %1
  %13 = tail call %struct.evbuffer* @evbuffer_new() #9
  %14 = icmp eq %struct.evbuffer* %13, null
  br i1 %14, label %63, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %5, i64 0, i32 8
  %17 = load void (%struct.evbuffer*, i8*)*, void (%struct.evbuffer*, i8*)** %16, align 8
  %18 = load i8*, i8** %8, align 8
  tail call void %17(%struct.evbuffer* nonnull %13, i8* %18) #9
  %19 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %5, i64 0, i32 11
  %20 = load %struct.evrpc_base*, %struct.evrpc_base** %19, align 8
  %21 = getelementptr inbounds %struct.evrpc_base, %struct.evrpc_base* %20, i64 0, i32 0, i32 1, i32 0
  %22 = load %struct.evrpc_hook*, %struct.evrpc_hook** %21, align 8
  %23 = icmp eq %struct.evrpc_hook* %22, null
  br i1 %23, label %36, label %28

24:                                               ; preds = %28
  %25 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %29, i64 0, i32 0, i32 0
  %26 = load %struct.evrpc_hook*, %struct.evrpc_hook** %25, align 8
  %27 = icmp eq %struct.evrpc_hook* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %15, %24
  %29 = phi %struct.evrpc_hook* [ %26, %24 ], [ %22, %15 ]
  %30 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %29, i64 0, i32 1
  %31 = load i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)*, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)** %30, align 8
  %32 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %29, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i32 %31(%struct.evhttp_request* %3, %struct.evbuffer* nonnull %13, i8* %33) #9
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %62, label %24

36:                                               ; preds = %24, %15
  %37 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %3, i64 0, i32 4
  %38 = load %struct.evkeyvalq*, %struct.evkeyvalq** %37, align 8
  %39 = tail call i8* @evhttp_find_header(%struct.evkeyvalq* %38, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #9
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load %struct.evkeyvalq*, %struct.evkeyvalq** %37, align 8
  %43 = tail call i32 @evhttp_add_header(%struct.evkeyvalq* %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %44

44:                                               ; preds = %41, %36
  tail call void @evhttp_send_reply(%struct.evhttp_request* %3, i32 200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %struct.evbuffer* nonnull %13) #9
  tail call void @evbuffer_free(%struct.evbuffer* nonnull %13) #9
  %45 = icmp eq %struct.evrpc_req_generic* %0, null
  br i1 %45, label %82, label %46

46:                                               ; preds = %44
  %47 = load %struct.evrpc*, %struct.evrpc** %4, align 8
  %48 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %47, i64 0, i32 3
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  tail call void %53(i8* nonnull %49) #9
  br label %54

54:                                               ; preds = %51, %46
  %55 = load i8*, i8** %8, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %47, i64 0, i32 6
  %59 = load void (i8*)*, void (i8*)** %58, align 8
  tail call void %59(i8* nonnull %55) #9
  br label %60

60:                                               ; preds = %57, %54
  %61 = bitcast %struct.evrpc_req_generic* %0 to i8*
  tail call void @free(i8* %61) #9
  br label %82

62:                                               ; preds = %28
  tail call void @evbuffer_free(%struct.evbuffer* nonnull %13) #9
  br label %63

63:                                               ; preds = %12, %1, %62
  %64 = icmp eq %struct.evrpc_req_generic* %0, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %63
  %66 = load %struct.evrpc*, %struct.evrpc** %4, align 8
  %67 = getelementptr inbounds %struct.evrpc_req_generic, %struct.evrpc_req_generic* %0, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %66, i64 0, i32 3
  %72 = load void (i8*)*, void (i8*)** %71, align 8
  tail call void %72(i8* nonnull %68) #9
  br label %73

73:                                               ; preds = %70, %65
  %74 = load i8*, i8** %8, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.evrpc, %struct.evrpc* %66, i64 0, i32 6
  %78 = load void (i8*)*, void (i8*)** %77, align 8
  tail call void %78(i8* nonnull %74) #9
  br label %79

79:                                               ; preds = %76, %73
  %80 = bitcast %struct.evrpc_req_generic* %0 to i8*
  tail call void @free(i8* %80) #9
  br label %81

81:                                               ; preds = %63, %79
  tail call void @evhttp_send_error(%struct.evhttp_request* %3, i32 503, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %82

82:                                               ; preds = %60, %44, %81
  ret void
}

declare %struct.evbuffer* @evbuffer_new() local_unnamed_addr #3

declare i8* @evhttp_find_header(%struct.evkeyvalq*, i8*) local_unnamed_addr #3

declare i32 @evhttp_add_header(%struct.evkeyvalq*, i8*, i8*) local_unnamed_addr #3

declare void @evhttp_send_reply(%struct.evhttp_request*, i32, i8*, %struct.evbuffer*) local_unnamed_addr #3

declare void @evbuffer_free(%struct.evbuffer*) local_unnamed_addr #3

declare void @evhttp_send_error(%struct.evhttp_request*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden %struct.evrpc_pool* @evrpc_pool_new(%struct.event_base*) local_unnamed_addr #5 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 80) #9
  %3 = icmp eq i8* %2, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct.evrpc_pool*
  %6 = getelementptr inbounds i8, i8* %2, i64 40
  %7 = getelementptr inbounds i8, i8* %2, i64 48
  %8 = bitcast i8* %7 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 64
  %10 = getelementptr inbounds i8, i8* %2, i64 72
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 8
  %13 = bitcast i8* %12 to i8**
  store i8* %2, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 24
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 32
  %18 = bitcast i8* %17 to %struct.event_base**
  store %struct.event_base* %0, %struct.event_base** %18, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 56
  %20 = bitcast i8* %19 to i32*
  store i32 -1, i32* %20, align 8
  br label %21

21:                                               ; preds = %1, %4
  %22 = phi %struct.evrpc_pool* [ %5, %4 ], [ null, %1 ]
  ret %struct.evrpc_pool* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evrpc_pool_free(%struct.evrpc_pool* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 4, i32 0
  %3 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %2, align 8
  %4 = icmp eq %struct.evrpc_request_wrapper* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 4, i32 1
  br label %13

7:                                                ; preds = %13, %1
  %8 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 2, i32 0
  %9 = load %struct.evhttp_connection*, %struct.evhttp_connection** %8, align 8
  %10 = icmp eq %struct.evhttp_connection* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 2, i32 1
  br label %37

13:                                               ; preds = %5, %13
  %14 = phi %struct.evrpc_request_wrapper* [ %3, %5 ], [ %31, %13 ]
  %15 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %14, i64 0, i32 0, i32 0
  %16 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %15, align 8
  %17 = icmp eq %struct.evrpc_request_wrapper* %16, null
  %18 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %14, i64 0, i32 0, i32 1
  %19 = bitcast %struct.evrpc_request_wrapper*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %16, i64 0, i32 0, i32 1
  %22 = select i1 %17, %struct.evrpc_request_wrapper*** %6, %struct.evrpc_request_wrapper*** %21
  %23 = bitcast %struct.evrpc_request_wrapper*** %22 to i64*
  store i64 %20, i64* %23, align 8
  %24 = bitcast %struct.evrpc_request_wrapper* %14 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %struct.evrpc_request_wrapper*** %18 to i64**
  %27 = load i64*, i64** %26, align 8
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %14, i64 0, i32 4
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #9
  %30 = bitcast %struct.evrpc_request_wrapper* %14 to i8*
  tail call void @free(i8* %30) #9
  %31 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %2, align 8
  %32 = icmp eq %struct.evrpc_request_wrapper* %31, null
  br i1 %32, label %7, label %13

33:                                               ; preds = %37, %7
  %34 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %struct.evrpc_hook*, %struct.evrpc_hook** %34, align 8
  %36 = icmp eq %struct.evrpc_hook* %35, null
  br i1 %36, label %55, label %54

37:                                               ; preds = %11, %37
  %38 = phi %struct.evhttp_connection* [ %9, %11 ], [ %52, %37 ]
  %39 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %38, i64 0, i32 0, i32 0
  %40 = load %struct.evhttp_connection*, %struct.evhttp_connection** %39, align 8
  %41 = icmp eq %struct.evhttp_connection* %40, null
  %42 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %38, i64 0, i32 0, i32 1
  %43 = bitcast %struct.evhttp_connection*** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %40, i64 0, i32 0, i32 1
  %46 = select i1 %41, %struct.evhttp_connection*** %12, %struct.evhttp_connection*** %45
  %47 = bitcast %struct.evhttp_connection*** %46 to i64*
  store i64 %44, i64* %47, align 8
  %48 = bitcast %struct.evhttp_connection* %38 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %struct.evhttp_connection*** %42 to i64**
  %51 = load i64*, i64** %50, align 8
  store i64 %49, i64* %51, align 8
  tail call void @evhttp_connection_free(%struct.evhttp_connection* nonnull %38) #9
  %52 = load %struct.evhttp_connection*, %struct.evhttp_connection** %8, align 8
  %53 = icmp eq %struct.evhttp_connection* %52, null
  br i1 %53, label %33, label %37

54:                                               ; preds = %33, %54
  br label %54

55:                                               ; preds = %33
  %56 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 0, i32 1, i32 0
  %57 = load %struct.evrpc_hook*, %struct.evrpc_hook** %56, align 8
  %58 = icmp eq %struct.evrpc_hook* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55, %59
  br label %59

60:                                               ; preds = %55
  %61 = bitcast %struct.evrpc_pool* %0 to i8*
  tail call void @free(i8* %61) #9
  ret void
}

declare void @evhttp_connection_free(%struct.evhttp_connection*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @evrpc_pool_add_connection(%struct.evrpc_pool* nocapture, %struct.evhttp_connection*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %1, i64 0, i32 0, i32 0
  store %struct.evhttp_connection* null, %struct.evhttp_connection** %3, align 8
  %4 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 2, i32 1
  %5 = bitcast %struct.evhttp_connection*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %1, i64 0, i32 0, i32 1
  %8 = bitcast %struct.evhttp_connection*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = load %struct.evhttp_connection**, %struct.evhttp_connection*** %4, align 8
  store %struct.evhttp_connection* %1, %struct.evhttp_connection** %9, align 8
  store %struct.evhttp_connection** %3, %struct.evhttp_connection*** %4, align 8
  %10 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 1
  %11 = load %struct.event_base*, %struct.event_base** %10, align 8
  %12 = icmp eq %struct.event_base* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @evhttp_connection_set_base(%struct.evhttp_connection* %1, %struct.event_base* nonnull %11) #9
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %1, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %15, align 8
  br label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 4, i32 0
  %23 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %22, align 8
  %24 = icmp eq %struct.evrpc_request_wrapper* %23, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %23, i64 0, i32 0, i32 0
  %27 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %26, align 8
  %28 = icmp eq %struct.evrpc_request_wrapper* %27, null
  %29 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %23, i64 0, i32 0, i32 1
  %30 = bitcast %struct.evrpc_request_wrapper*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 4, i32 1
  %33 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %27, i64 0, i32 0, i32 1
  %34 = select i1 %28, %struct.evrpc_request_wrapper*** %32, %struct.evrpc_request_wrapper*** %33
  %35 = bitcast %struct.evrpc_request_wrapper*** %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = bitcast %struct.evrpc_request_wrapper* %23 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %struct.evrpc_request_wrapper*** %29 to i64**
  %39 = load i64*, i64** %38, align 8
  store i64 %37, i64* %39, align 8
  tail call fastcc void @evrpc_schedule_request(%struct.evhttp_connection* %1, %struct.evrpc_request_wrapper* nonnull %23)
  br label %40

40:                                               ; preds = %21, %25
  ret void
}

declare void @evhttp_connection_set_base(%struct.evhttp_connection*, %struct.event_base*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evrpc_schedule_request(%struct.evhttp_connection*, %struct.evrpc_request_wrapper*) unnamed_addr #0 {
  %3 = alloca %struct.evrpc_status, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 1
  %6 = load %struct.evrpc_pool*, %struct.evrpc_pool** %5, align 8
  %7 = bitcast %struct.evrpc_status* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.evrpc_request_wrapper* %1 to i8*
  %9 = tail call %struct.evhttp_request* @evhttp_request_new(void (%struct.evhttp_request*, i8*)* nonnull @evrpc_reply_done, i8* %8) #9
  %10 = icmp eq %struct.evhttp_request* %9, null
  br i1 %10, label %68, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 9
  %13 = load void (%struct.evbuffer*, i8*)*, void (%struct.evbuffer*, i8*)** %12, align 8
  %14 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %9, i64 0, i32 17
  %15 = load %struct.evbuffer*, %struct.evbuffer** %14, align 8
  %16 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 7
  %17 = load i8*, i8** %16, align 8
  tail call void %13(%struct.evbuffer* %15, i8* %17) #9
  %18 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i64 @strlen(i8* %19) #10
  %21 = shl i64 %20, 32
  %22 = add i64 %21, 30064771072
  %23 = ashr exact i64 %22, 32
  %24 = tail call noalias i8* @malloc(i64 %23) #9
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %11
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.evrpc_construct_uri, i64 0, i64 0), i8* %19) #9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 536870912 null, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6, i1 false) #9
  %27 = tail call i64 @strlen(i8* %19) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 inttoptr (i64 6 to i8*), i8* align 1 %19, i64 %27, i1 false) #9
  %28 = add i64 %21, 25769803776
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds i8, i8* null, i64 %29
  store i8 0, i8* %30, align 1
  br label %68

31:                                               ; preds = %11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6, i1 false) #9
  %32 = getelementptr inbounds i8, i8* %24, i64 6
  %33 = tail call i64 @strlen(i8* %19) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %19, i64 %33, i1 false) #9
  %34 = add i64 %21, 25769803776
  %35 = ashr exact i64 %34, 32
  %36 = getelementptr inbounds i8, i8* %24, i64 %35
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 2
  store %struct.evhttp_connection* %0, %struct.evhttp_connection** %37, align 8
  %38 = load %struct.evbuffer*, %struct.evbuffer** %14, align 8
  %39 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %6, i64 0, i32 0, i32 1, i32 0
  %40 = load %struct.evrpc_hook*, %struct.evrpc_hook** %39, align 8
  %41 = icmp eq %struct.evrpc_hook* %40, null
  br i1 %41, label %54, label %46

42:                                               ; preds = %46
  %43 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %47, i64 0, i32 0, i32 0
  %44 = load %struct.evrpc_hook*, %struct.evrpc_hook** %43, align 8
  %45 = icmp eq %struct.evrpc_hook* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %31, %42
  %47 = phi %struct.evrpc_hook* [ %44, %42 ], [ %40, %31 ]
  %48 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %47, i64 0, i32 1
  %49 = load i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)*, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)** %48, align 8
  %50 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %47, i64 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = tail call i32 %49(%struct.evhttp_request* nonnull %9, %struct.evbuffer* %38, i8* %51) #9
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %68, label %42

54:                                               ; preds = %42, %31
  %55 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %6, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %54
  %59 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #9
  %60 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 0, i64* %62, align 8
  store i64 %61, i64* %60, align 8
  %63 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 3
  %64 = call i32 @event_add(%struct.event* %63, %struct.timeval* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #9
  br label %65

65:                                               ; preds = %58, %54
  %66 = call i32 @evhttp_make_request(%struct.evhttp_connection* %0, %struct.evhttp_request* nonnull %9, i32 1, i8* nonnull %24) #9
  call void @free(i8* %24) #9
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %80

68:                                               ; preds = %46, %26, %65, %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false)
  %69 = getelementptr inbounds %struct.evrpc_status, %struct.evrpc_status* %3, i64 0, i32 0
  store i32 3, i32* %69, align 8
  %70 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 5
  %71 = load void (%struct.evrpc_status*, i8*, i8*, i8*)*, void (%struct.evrpc_status*, i8*, i8*, i8*)** %70, align 8
  %72 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 7
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 8
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 6
  %77 = load i8*, i8** %76, align 8
  call void %71(%struct.evrpc_status* nonnull %3, i8* %73, i8* %75, i8* %77) #9
  %78 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %1, i64 0, i32 4
  %79 = load i8*, i8** %78, align 8
  call void @free(i8* %79) #9
  call void @free(i8* %8) #9
  br label %80

80:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @evrpc_pool_set_timeout(%struct.evrpc_pool* nocapture, i32) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 2, i32 0
  %4 = load %struct.evhttp_connection*, %struct.evhttp_connection** %3, align 8
  %5 = icmp eq %struct.evhttp_connection* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2, %6
  %7 = phi %struct.evhttp_connection* [ %10, %6 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %7, i64 0, i32 11
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %7, i64 0, i32 0, i32 0
  %10 = load %struct.evhttp_connection*, %struct.evhttp_connection** %9, align 8
  %11 = icmp eq %struct.evhttp_connection* %10, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %0, i64 0, i32 3
  store i32 %1, i32* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evrpc_make_request(%struct.evrpc_request_wrapper*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %0, i64 0, i32 1
  %3 = load %struct.evrpc_pool*, %struct.evrpc_pool** %2, align 8
  %4 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %0, i64 0, i32 3
  %5 = bitcast %struct.evrpc_request_wrapper* %0 to i8*
  tail call void @event_set(%struct.event* %4, i32 -1, i16 signext 0, void (i32, i16, i8*)* nonnull @evrpc_request_timeout, i8* %5) #9
  %6 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %3, i64 0, i32 1
  %7 = load %struct.event_base*, %struct.event_base** %6, align 8
  %8 = icmp eq %struct.event_base* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i32 @event_base_set(%struct.event_base* nonnull %7, %struct.event* %4) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %0, i64 0, i32 0, i32 0
  store %struct.evrpc_request_wrapper* null, %struct.evrpc_request_wrapper** %12, align 8
  %13 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %3, i64 0, i32 4, i32 1
  %14 = bitcast %struct.evrpc_request_wrapper*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %0, i64 0, i32 0, i32 1
  %17 = bitcast %struct.evrpc_request_wrapper*** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = load %struct.evrpc_request_wrapper**, %struct.evrpc_request_wrapper*** %13, align 8
  store %struct.evrpc_request_wrapper* %0, %struct.evrpc_request_wrapper** %18, align 8
  store %struct.evrpc_request_wrapper** %12, %struct.evrpc_request_wrapper*** %13, align 8
  %19 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %3, i64 0, i32 4, i32 0
  %20 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %19, align 8
  %21 = icmp eq %struct.evrpc_request_wrapper* %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %3, i64 0, i32 2, i32 0
  %24 = load %struct.evhttp_connection*, %struct.evhttp_connection** %23, align 8
  %25 = icmp eq %struct.evhttp_connection* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %22, %31
  %27 = phi %struct.evhttp_connection* [ %33, %31 ], [ %24, %22 ]
  %28 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %27, i64 0, i32 16, i32 0
  %29 = load %struct.evhttp_request*, %struct.evhttp_request** %28, align 8
  %30 = icmp eq %struct.evhttp_request* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %27, i64 0, i32 0, i32 0
  %33 = load %struct.evhttp_connection*, %struct.evhttp_connection** %32, align 8
  %34 = icmp eq %struct.evhttp_connection* %33, null
  br i1 %34, label %49, label %26

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %20, i64 0, i32 0, i32 0
  %37 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %36, align 8
  %38 = icmp eq %struct.evrpc_request_wrapper* %37, null
  %39 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %20, i64 0, i32 0, i32 1
  %40 = bitcast %struct.evrpc_request_wrapper*** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %37, i64 0, i32 0, i32 1
  %43 = bitcast %struct.evrpc_request_wrapper*** %42 to i64*
  %44 = select i1 %38, i64* %14, i64* %43
  store i64 %41, i64* %44, align 8
  %45 = bitcast %struct.evrpc_request_wrapper* %20 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %struct.evrpc_request_wrapper*** %39 to i64**
  %48 = load i64*, i64** %47, align 8
  store i64 %46, i64* %48, align 8
  tail call fastcc void @evrpc_schedule_request(%struct.evhttp_connection* nonnull %27, %struct.evrpc_request_wrapper* nonnull %20) #9
  br label %49

49:                                               ; preds = %31, %11, %22, %35
  ret i32 0
}

declare void @event_set(%struct.event*, i32, i16 signext, void (i32, i16, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @evrpc_request_timeout(i32, i16 signext, i8* nocapture readonly) #0 {
  %4 = getelementptr inbounds i8, i8* %2, i64 24
  %5 = bitcast i8* %4 to %struct.evhttp_connection**
  %6 = load %struct.evhttp_connection*, %struct.evhttp_connection** %5, align 8
  tail call void @evhttp_connection_fail(%struct.evhttp_connection* %6, i32 0) #9
  ret void
}

declare i32 @event_base_set(%struct.event_base*, %struct.event*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare void @event_err(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %struct.evhttp_request* @evhttp_request_new(void (%struct.evhttp_request*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @evrpc_reply_done(%struct.evhttp_request*, i8*) #0 {
  %3 = alloca %struct.evrpc_status, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to %struct.evrpc_pool**
  %6 = load %struct.evrpc_pool*, %struct.evrpc_pool** %5, align 8
  %7 = bitcast %struct.evrpc_status* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds i8, i8* %1, i64 32
  %9 = bitcast i8* %8 to %struct.event*
  %10 = tail call i32 @event_del(%struct.event* %9) #9
  %11 = bitcast %struct.evrpc_status* %3 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %struct.evrpc_status, %struct.evrpc_status* %3, i64 0, i32 1
  store %struct.evhttp_request* %0, %struct.evhttp_request** %12, align 8
  %13 = icmp eq %struct.evhttp_request* %0, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.evhttp_request, %struct.evhttp_request* %0, i64 0, i32 14
  %16 = load %struct.evbuffer*, %struct.evbuffer** %15, align 8
  %17 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %6, i64 0, i32 0, i32 0, i32 0
  %18 = load %struct.evrpc_hook*, %struct.evrpc_hook** %17, align 8
  %19 = icmp eq %struct.evrpc_hook* %18, null
  br i1 %19, label %34, label %24

20:                                               ; preds = %24
  %21 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %25, i64 0, i32 0, i32 0
  %22 = load %struct.evrpc_hook*, %struct.evrpc_hook** %21, align 8
  %23 = icmp eq %struct.evrpc_hook* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %14, %20
  %25 = phi %struct.evrpc_hook* [ %22, %20 ], [ %18, %14 ]
  %26 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %25, i64 0, i32 1
  %27 = load i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)*, i32 (%struct.evhttp_request*, %struct.evbuffer*, i8*)** %26, align 8
  %28 = getelementptr inbounds %struct.evrpc_hook, %struct.evrpc_hook* %25, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = tail call i32 %27(%struct.evhttp_request* nonnull %0, %struct.evbuffer* %16, i8* %29) #9
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %44, label %20

32:                                               ; preds = %20
  %33 = load %struct.evbuffer*, %struct.evbuffer** %15, align 8
  br label %34

34:                                               ; preds = %32, %14
  %35 = phi %struct.evbuffer* [ %33, %32 ], [ %16, %14 ]
  %36 = getelementptr inbounds i8, i8* %1, i64 216
  %37 = bitcast i8* %36 to i32 (i8*, %struct.evbuffer*)**
  %38 = load i32 (i8*, %struct.evbuffer*)*, i32 (i8*, %struct.evbuffer*)** %37, align 8
  %39 = getelementptr inbounds i8, i8* %1, i64 192
  %40 = bitcast i8* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = tail call i32 %38(i8* %41, %struct.evbuffer* %35) #9
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %53

44:                                               ; preds = %24, %2, %34
  %45 = phi i32 [ 2, %34 ], [ 1, %2 ], [ 4, %24 ]
  %46 = getelementptr inbounds %struct.evrpc_status, %struct.evrpc_status* %3, i64 0, i32 0
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %1, i64 208
  %48 = bitcast i8* %47 to void (i8*)**
  %49 = load void (i8*)*, void (i8*)** %48, align 8
  %50 = getelementptr inbounds i8, i8* %1, i64 192
  %51 = bitcast i8* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void %49(i8* %52) #9
  br label %53

53:                                               ; preds = %34, %44
  %54 = phi i8** [ %40, %34 ], [ %51, %44 ]
  %55 = getelementptr inbounds i8, i8* %1, i64 168
  %56 = bitcast i8* %55 to void (%struct.evrpc_status*, i8*, i8*, i8*)**
  %57 = load void (%struct.evrpc_status*, i8*, i8*, i8*)*, void (%struct.evrpc_status*, i8*, i8*, i8*)** %56, align 8
  %58 = getelementptr inbounds i8, i8* %1, i64 184
  %59 = bitcast i8* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = load i8*, i8** %54, align 8
  %62 = getelementptr inbounds i8, i8* %1, i64 176
  %63 = bitcast i8* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  call void %57(%struct.evrpc_status* nonnull %3, i8* %60, i8* %61, i8* %64) #9
  %65 = getelementptr inbounds i8, i8* %1, i64 160
  %66 = bitcast i8* %65 to i8**
  %67 = load i8*, i8** %66, align 8
  call void @free(i8* %67) #9
  call void @free(i8* %1) #9
  %68 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %6, i64 0, i32 4, i32 0
  %69 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %68, align 8
  %70 = icmp eq %struct.evrpc_request_wrapper* %69, null
  br i1 %70, label %99, label %71

71:                                               ; preds = %53
  %72 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %6, i64 0, i32 2, i32 0
  %73 = load %struct.evhttp_connection*, %struct.evhttp_connection** %72, align 8
  %74 = icmp eq %struct.evhttp_connection* %73, null
  br i1 %74, label %99, label %75

75:                                               ; preds = %71, %80
  %76 = phi %struct.evhttp_connection* [ %82, %80 ], [ %73, %71 ]
  %77 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %76, i64 0, i32 16, i32 0
  %78 = load %struct.evhttp_request*, %struct.evhttp_request** %77, align 8
  %79 = icmp eq %struct.evhttp_request* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.evhttp_connection, %struct.evhttp_connection* %76, i64 0, i32 0, i32 0
  %82 = load %struct.evhttp_connection*, %struct.evhttp_connection** %81, align 8
  %83 = icmp eq %struct.evhttp_connection* %82, null
  br i1 %83, label %99, label %75

84:                                               ; preds = %75
  %85 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %69, i64 0, i32 0, i32 0
  %86 = load %struct.evrpc_request_wrapper*, %struct.evrpc_request_wrapper** %85, align 8
  %87 = icmp eq %struct.evrpc_request_wrapper* %86, null
  %88 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %69, i64 0, i32 0, i32 1
  %89 = bitcast %struct.evrpc_request_wrapper*** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %struct.evrpc_pool, %struct.evrpc_pool* %6, i64 0, i32 4, i32 1
  %92 = getelementptr inbounds %struct.evrpc_request_wrapper, %struct.evrpc_request_wrapper* %86, i64 0, i32 0, i32 1
  %93 = select i1 %87, %struct.evrpc_request_wrapper*** %91, %struct.evrpc_request_wrapper*** %92
  %94 = bitcast %struct.evrpc_request_wrapper*** %93 to i64*
  store i64 %90, i64* %94, align 8
  %95 = bitcast %struct.evrpc_request_wrapper* %69 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %struct.evrpc_request_wrapper*** %88 to i64**
  %98 = load i64*, i64** %97, align 8
  store i64 %96, i64* %98, align 8
  call fastcc void @evrpc_schedule_request(%struct.evhttp_connection* nonnull %76, %struct.evrpc_request_wrapper* nonnull %69) #9
  br label %99

99:                                               ; preds = %80, %53, %71, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare i32 @event_add(%struct.event*, %struct.timeval*) local_unnamed_addr #3

declare i32 @evhttp_make_request(%struct.evhttp_connection*, %struct.evhttp_request*, i32, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @event_del(%struct.event*) local_unnamed_addr #3

declare void @evhttp_connection_fail(%struct.evhttp_connection*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
