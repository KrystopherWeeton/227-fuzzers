; ModuleID = '../../chrome/browser/ui/views/tabs/tab_style_views.cc'
source_filename = "../../chrome/browser/ui/views/tabs/tab_style_views.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.642, %class.sk_sp.643, %class.sk_sp.673, %class.sk_sp.674, %class.sk_sp.675, %class.sk_sp.676, i32, float, float, i32, %union.anon.677, [4 x i8] }>
%class.sk_sp.642 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.643 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.644", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.137, i32, %"class.absl::optional.653", %"class.std::__1::vector.658", %"class.std::__1::vector.665", %class.sk_sp.672, %class.sk_sp.649, i32, [4 x i8] }>
%"class.absl::optional.644" = type { %"class.absl::optional_internal::optional_data.645" }
%"class.absl::optional_internal::optional_data.645" = type { %"class.absl::optional_internal::optional_data_base.646" }
%"class.absl::optional_internal::optional_data_base.646" = type { %"class.absl::optional_internal::optional_data_dtor_base.647" }
%"class.absl::optional_internal::optional_data_dtor_base.647" = type { i8, %union.anon.648 }
%union.anon.648 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.649, %class.sk_sp.137, %"class.gfx::Rect", i32, %class.sk_sp.650, %class.sk_sp.651, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.649, %class.scoped_refptr.652 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.650 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.651 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.652 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.137 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.138", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { i8* }
%"class.absl::optional.653" = type { %"class.absl::optional_internal::optional_data.654" }
%"class.absl::optional_internal::optional_data.654" = type { %"class.absl::optional_internal::optional_data_base.655" }
%"class.absl::optional_internal::optional_data_base.655" = type { %"class.absl::optional_internal::optional_data_dtor_base.656" }
%"class.absl::optional_internal::optional_data_dtor_base.656" = type { i8, %union.anon.657 }
%union.anon.657 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.658" = type { %"class.std::__1::__vector_base.659" }
%"class.std::__1::__vector_base.659" = type { i32*, i32*, %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { i32* }
%"class.std::__1::vector.665" = type { %"class.std::__1::__vector_base.666" }
%"class.std::__1::__vector_base.666" = type { float*, float*, %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { float* }
%class.sk_sp.672 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.110", [7 x i8] }>
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { i8 }
%class.sk_sp.649 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.606, i32, i32 }
%class.sk_sp.606 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.607, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.607 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.673 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.674 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.675 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.676 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.677 = type { i32 }
%class.TabStyleViews = type { %class.TabStyle }
%class.TabStyle = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.TabStyle::TabColors" = type { i32, i32 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::__wrap_iter" = type { i16* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::basic_string"* }
%class.Tab = type { %"class.gfx::AnimationDelegate", %"class.views::MaskedTargeterDelegate", %"class.views::ViewObserver", %class.TabSlotView.base, %class.TabController*, %struct.TabRendererData, %"class.std::__1::unique_ptr", i8, %class.TabIcon*, %class.AlertIndicator*, %class.TabCloseButton*, %"class.views::Label"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::LinearAnimation", i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, %"class.std::__1::unique_ptr.555", %"class.views::FocusRing"*, %"class.std::__1::unique_ptr.561" }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%"class.views::MaskedTargeterDelegate" = type { %"class.views::ViewTargeterDelegate" }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ViewObserver" = type { i32 (...)** }
%class.TabSlotView.base = type <{ %"class.views::View.base", [4 x i8], %"class.absl::optional.303", i8, i8, i8 }>
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.83", i8, [3 x i8], %"class.absl::optional.90", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.95", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.114", %"class.absl::optional.120", i8, [7 x i8], %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.157", i8, i8, [3 x i8], %"class.std::__1::vector.162", %"class.std::__1::unique_ptr.169", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.273", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.base::ObserverList.299", i32 }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.25", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.33" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.38", %"class.std::__1::vector.54", %"class.ui::EventHandler"* }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.61" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.54" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.47" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.42" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::flat_map.50"* }
%"class.base::flat_map.50" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.74" }
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.views::View"** }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::vector.83"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.104", %"struct.std::__1::atomic.104", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.102, %class.SkTDArray.103, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.102 = type { i8*, i32, i32 }
%class.SkTDArray.103 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.109 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.109 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.110", [3 x i8] }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.views::Background"* }
%"class.views::Background" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.views::Border"* }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.ui::PaintCache" = type <{ %class.sk_sp.137, float, [4 x i8] }>
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.142", %"class.base::ObserverList.153", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.base::ObserverList.153" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList.154", i64, i32, [4 x i8] }>
%"class.base::LinkedList.154" = type { %"class.base::LinkNode.155" }
%"class.base::LinkNode.155" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.157" = type { %"class.absl::optional_internal::optional_data.158" }
%"class.absl::optional_internal::optional_data.158" = type { %"class.absl::optional_internal::optional_data_base.159" }
%"class.absl::optional_internal::optional_data_base.159" = type { %"class.absl::optional_internal::optional_data_dtor_base.160" }
%"class.absl::optional_internal::optional_data_dtor_base.160" = type { i8, %union.anon.161 }
%union.anon.161 = type { i8 }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.245", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.262", i32, [4 x i8], %"class.base::ObserverList.269", i8, i8, i32 }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.179", %"class.base::ObserverList.190", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.232", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.238", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.83", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.244" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.175" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.179" = type <{ %"class.std::__1::vector.180", %"class.base::LinkedList.187", i64, i32, [4 x i8] }>
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.182" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.104" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.187" = type { %"class.base::LinkNode.188" }
%"class.base::LinkNode.188" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.190" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList.191", i64, i32, [4 x i8] }>
%"class.base::LinkedList.191" = type { %"class.base::LinkNode.192" }
%"class.base::LinkNode.192" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.194", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.194" = type { %"class.std::__1::__list_imp.195" }
%"class.std::__1::__list_imp.195" = type { %"struct.std::__1::__list_node_base.196", %"class.std::__1::__compressed_pair.197" }
%"struct.std::__1::__list_node_base.196" = type { %"struct.std::__1::__list_node_base.196"*, %"struct.std::__1::__list_node_base.196"* }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.202", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.202" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.203 }
%class.scoped_refptr.203 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::WidgetDelegate" = type { i32 (...)**, %"class.views::Widget"*, %"struct.views::WidgetDelegate::Params", %"class.views::View"*, i8, i8, %"class.views::View"*, %"class.std::__1::unique_ptr.210", i8, i8*, %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.216", %"class.std::__1::vector.219", %"class.std::__1::vector.219", %"class.std::__1::vector.219", %"class.base::OnceCallback.229", %"class.base::RepeatingCallback.230", %"class.base::OnceCallback.231" }
%"struct.views::WidgetDelegate::Params" = type { i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", %"class.absl::optional.205", %"class.std::__1::basic_string.1", i32, i8, i8, i8, i8, %"class.std::__1::basic_string" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.absl::optional.205" = type { %"class.absl::optional_internal::optional_data.206" }
%"class.absl::optional_internal::optional_data.206" = type { %"class.absl::optional_internal::optional_data_base.207" }
%"class.absl::optional_internal::optional_data_base.207" = type { %"class.absl::optional_internal::optional_data_dtor_base.208" }
%"class.absl::optional_internal::optional_data_dtor_base.208" = type { i8, %union.anon.209 }
%union.anon.209 = type { %"class.views::View"* }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.views::View"* }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.std::__1::vector.219"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.221" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback.229" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.230" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OnceCallback.231" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::FocusTraversable", %"class.ui::EventProcessor", %"class.views::Widget"*, %"class.views::View"*, %"class.views::View"*, %"class.views::View"*, i8, i32, i32, i32, %"class.views::View"*, i8, %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.582", %"class.views::FocusSearch", %"class.views::FocusTraversable"*, %"class.views::View"*, %"class.views::View"*, %"class.views::View"*, %"struct.views::View::DragInfo", %"class.views::internal::AnnounceTextView"* }
%"class.ui::EventProcessor" = type { %"class.ui::EventDispatcherDelegate", %"class.ui::EventSink", %"class.base::WeakPtrFactory.575" }
%"class.ui::EventSink" = type { i32 (...)** }
%"class.base::WeakPtrFactory.575" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.views::internal::PreEventDispatchHandler"* }
%"class.views::internal::PreEventDispatchHandler" = type opaque
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.views::internal::PostEventDispatchHandler"* }
%"class.views::internal::PostEventDispatchHandler" = type opaque
%"class.views::FocusSearch" = type <{ i32 (...)**, %"class.views::View"*, i8, i8, [6 x i8] }>
%"struct.views::View::DragInfo" = type { i8, %"class.gfx::Point" }
%"class.views::internal::AnnounceTextView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.569", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.views::FocusManager"* }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.244" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.251" }
%"class.std::__1::map.251" = type { %"class.std::__1::__tree.252" }
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type { %"class.views::ViewObserver", %"class.views::View"*, %"class.base::ScopedObservation.265" }
%"class.base::ScopedObservation.265" = type { %"class.views::ViewObserver"*, %"class.views::View"* }
%"class.base::ObserverList.269" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList.270", i64, i32, [4 x i8] }>
%"class.base::LinkedList.270" = type { %"class.base::LinkNode.271" }
%"class.base::LinkNode.271" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.std::__1::vector.276"* }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.278" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.ui::Accelerator"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.83", i8, [3 x i8], %"class.absl::optional.90", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.95", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.114", %"class.absl::optional.120", i8, [7 x i8], %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.157", i8, i8, [3 x i8], %"class.std::__1::vector.162", %"class.std::__1::unique_ptr.169", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.273", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.base::ObserverList.299", i32, [4 x i8] }>
%"class.views::ContextMenuController" = type { i32 (...)**, i8, %"class.base::WeakPtrFactory.286" }
%"class.base::WeakPtrFactory.286" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.299" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList.300", i64, i32, [4 x i8] }>
%"class.base::LinkedList.300" = type { %"class.base::LinkNode.301" }
%"class.base::LinkNode.301" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"class.tab_groups::TabGroupId" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.TabController = type { i32 (...)** }
%struct.TabRendererData = type <{ %"class.gfx::ImageSkia", %class.scoped_refptr.308, i32, [4 x i8], %"class.std::__1::basic_string", %class.GURL, %class.GURL, i32, i8, i8, i8, i8, %"class.std::__1::vector.324", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.308 = type { %class.ThumbnailImage* }
%class.ThumbnailImage = type { i32 (...)**, %"class.base::RefCounted", %"class.ThumbnailImage::Delegate"*, %class.scoped_refptr.309, %"class.base::Token", %"class.std::__1::vector.310", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.317" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.ThumbnailImage::Delegate" = type { i32 (...)**, %class.ThumbnailImage* }
%class.scoped_refptr.309 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"class.ThumbnailImage::Subscription"**, %"class.ThumbnailImage::Subscription"**, %"class.std::__1::__compressed_pair.312" }
%"class.ThumbnailImage::Subscription" = type { %class.scoped_refptr.308, %"class.absl::optional.90", %"class.base::RepeatingCallback.567", %"class.base::RepeatingCallback.568" }
%"class.base::RepeatingCallback.567" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.568" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.ThumbnailImage::Subscription"** }
%"class.base::WeakPtrFactory.317" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.318" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %class.GURL* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { i32*, i32*, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { i32* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.TabStyleViews* }
%class.TabIcon = type opaque
%class.AlertIndicator = type opaque
%class.TabCloseButton = type { %"class.views::ImageButton.base", %"class.views::MaskedTargeterDelegate", %"class.base::RepeatingCallback.417", %"struct.TabStyle::TabColors" }
%"class.views::ImageButton.base" = type <{ %"class.views::Button", [4 x %"class.gfx::ImageSkia"], %"class.gfx::ImageSkia", i32, i32, %"class.gfx::Size", i8 }>
%"class.views::Button" = type { %"class.views::View.base", %"class.views::AnimationDelegateViews", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.views::Button::PressedCallback", i32, i32, %"class.gfx::ThrobAnimation", i8, i8, i32, i8, i8, i8, i8, %"class.std::__1::unique_ptr.354", %"class.views::FocusRing"*, %"class.std::__1::unique_ptr.405", %"class.std::__1::unique_ptr.411", %"class.base::CallbackListSubscription" }
%"class.views::AnimationDelegateViews" = type { %"class.gfx::AnimationDelegate", %"class.views::ViewObserver", %"class.gfx::AnimationContainerObserver", %"class.views::View"*, %"class.gfx::AnimationContainer"*, %"class.views::CompositorAnimationRunner"*, %"class.base::ScopedObservation.265" }
%"class.gfx::AnimationContainerObserver" = type { i32 (...)** }
%"class.gfx::AnimationContainer" = type { %"class.base::RefCounted.331", %"class.base::TimeTicks", %"class.base::internal::flat_tree.332", %"class.base::TimeDelta", i64, %"class.std::__1::unique_ptr.340", i8, %"class.gfx::AnimationContainerObserver"* }
%"class.base::RefCounted.331" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::internal::flat_tree.332" = type { %"class.std::__1::vector.333" }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.334" }
%"class.std::__1::__vector_base.334" = type { %"class.gfx::AnimationContainerElement"**, %"class.gfx::AnimationContainerElement"**, %"class.std::__1::__compressed_pair.335" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.gfx::AnimationContainerElement"** }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.gfx::AnimationRunner"* }
%"class.gfx::AnimationRunner" = type { i32 (...)**, %"class.base::RepeatingCallback.343" }
%"class.base::RepeatingCallback.343" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.views::CompositorAnimationRunner" = type opaque
%"class.views::Button::PressedCallback" = type { %"class.base::RepeatingCallback.347" }
%"class.base::RepeatingCallback.347" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.gfx::ThrobAnimation" = type <{ %"class.gfx::SlideAnimation", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.gfx::SlideAnimation" = type { %"class.gfx::LinearAnimation.base", %"class.gfx::AnimationDelegate"*, i32, %"class.absl::optional.349", double, double, double, %"class.base::TimeDelta", double }
%"class.gfx::LinearAnimation.base" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8 }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr.348, %"class.base::TimeTicks" }
%class.scoped_refptr.348 = type { %"class.gfx::AnimationContainer"* }
%"class.absl::optional.349" = type { %"class.absl::optional_internal::optional_data.350" }
%"class.absl::optional_internal::optional_data.350" = type { %"class.absl::optional_internal::optional_data_base.351" }
%"class.absl::optional_internal::optional_data_base.351" = type { %"class.absl::optional_internal::optional_data_dtor_base.352" }
%"class.absl::optional_internal::optional_data_dtor_base.352" = type { i8, %union.anon.353 }
%union.anon.353 = type { i32 }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.views::InkDropHost"* }
%"class.views::InkDropHost" = type { i32 (...)**, %"class.views::View"*, i32, %"class.views::InkDropHost::ViewLayerTransformObserver", %"class.std::__1::unique_ptr.357", %"class.views::InkDropHost::InkDropHostEventHandlerDelegate", %"class.views::InkDropEventHandler", %"class.views::InkDropEventHandler"*, float, %"class.absl::optional.12", %"class.absl::optional.375", i32, i32, i8, %"class.std::__1::unique_ptr.380", %"class.base::RepeatingCallback.386", %"class.base::RepeatingCallback.387", %"class.base::RepeatingCallback.388", %"class.base::RepeatingCallback.389", %"class.base::RepeatingCallback.390", %"class.base::RepeatingCallbackList" }
%"class.views::InkDropHost::ViewLayerTransformObserver" = type { %"class.views::ViewObserver", %"class.base::ScopedObservation.265", %"class.views::InkDropHost"* }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.views::InkDrop"* }
%"class.views::InkDrop" = type opaque
%"class.views::InkDropHost::InkDropHostEventHandlerDelegate" = type { %"class.views::InkDropEventHandler::Delegate", %"class.views::InkDropHost"* }
%"class.views::InkDropEventHandler::Delegate" = type { i32 (...)** }
%"class.views::InkDropEventHandler" = type { %"class.ui::EventHandler", %"class.views::ViewObserver", %"class.std::__1::unique_ptr.363", %"class.views::View"*, %"class.views::InkDropEventHandler::Delegate"*, %"class.std::__1::unique_ptr.369", %"class.base::ScopedObservation.265" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.ui::ScopedTargetHandler"* }
%"class.ui::ScopedTargetHandler" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.ui::LocatedEvent"* }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { i32 }
%"class.absl::optional.375" = type { %"class.absl::optional_internal::optional_data.376" }
%"class.absl::optional_internal::optional_data.376" = type { %"class.absl::optional_internal::optional_data_base.377" }
%"class.absl::optional_internal::optional_data_base.377" = type { %"class.absl::optional_internal::optional_data_dtor_base.378" }
%"class.absl::optional_internal::optional_data_dtor_base.378" = type { i8, %union.anon.379 }
%union.anon.379 = type { float }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.views::InkDropMask"* }
%"class.views::InkDropMask" = type opaque
%"class.base::RepeatingCallback.386" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.387" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.388" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.389" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.390" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.views::Painter"* }
%"class.views::Painter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.views::ButtonController"* }
%"class.views::ButtonController" = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::RepeatingCallback.417" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.views::Label" = type { %"class.views::View.base", %"class.views::ContextMenuController", %"class.views::WordLookupClient", %"class.views::SelectionControllerDelegate", %"class.ui::SimpleMenuModel::Delegate", i32, i32, %"class.absl::optional.418", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.423", %"class.gfx::Range", i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, %"class.std::__1::basic_string", i8, i8, i32, i32, i32, %"class.std::__1::unique_ptr.528", %"class.std::__1::basic_string", %"class.ui::SimpleMenuModel", %"class.std::__1::unique_ptr.549" }
%"class.views::WordLookupClient" = type { i32 (...)** }
%"class.views::SelectionControllerDelegate" = type { i32 (...)** }
%"class.ui::SimpleMenuModel::Delegate" = type { %"class.ui::AcceleratorProvider" }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.absl::optional.418" = type { %"class.absl::optional_internal::optional_data.419" }
%"class.absl::optional_internal::optional_data.419" = type { %"class.absl::optional_internal::optional_data_base.420" }
%"class.absl::optional_internal::optional_data_base.420" = type { %"class.absl::optional_internal::optional_data_dtor_base.421" }
%"class.absl::optional_internal::optional_data_dtor_base.421" = type { i8, %union.anon.422 }
%union.anon.422 = type { i32 }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.gfx::RenderText"* }
%"class.gfx::RenderText" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.442", %"class.gfx::BreakList.452", %"class.gfx::BreakList.462", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.442", %"class.gfx::BreakList.452", %"class.gfx::BreakList.462", %"struct.std::__1::array", %"class.std::__1::vector.482", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional.157", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.489", %"class.gfx::BreakList.496", %"class.std::__1::unique_ptr.505", float, i32, %"class.absl::optional.418", i8, [7 x i8] }>
%"class.gfx::FontList" = type { %class.scoped_refptr.426 }
%class.scoped_refptr.426 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.gfx::SelectionModel" = type <{ %"class.gfx::Range", %"class.std::__1::vector.427", i32, [4 x i8] }>
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.gfx::Range"* }
%"class.gfx::BreakList" = type { %"class.std::__1::vector.434", i64 }
%"class.std::__1::vector.434" = type { %"class.std::__1::__vector_base.435" }
%"class.std::__1::__vector_base.435" = type { %"struct.std::__1::pair.436"*, %"struct.std::__1::pair.436"*, %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::pair.436" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.std::__1::pair.436"* }
%"class.gfx::BreakList.442" = type { %"class.std::__1::vector.443", i64 }
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"struct.std::__1::pair.445"*, %"struct.std::__1::pair.445"*, %"class.std::__1::__compressed_pair.447" }
%"struct.std::__1::pair.445" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.std::__1::pair.445"* }
%"class.gfx::BreakList.452" = type { %"class.std::__1::vector.453", i64 }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { %"struct.std::__1::pair.455"*, %"struct.std::__1::pair.455"*, %"class.std::__1::__compressed_pair.457" }
%"struct.std::__1::pair.455" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::pair.455"* }
%"class.gfx::BreakList.462" = type { %"class.std::__1::vector.463", i64 }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"struct.std::__1::pair.465"*, %"struct.std::__1::pair.465"*, %"class.std::__1::__compressed_pair.467" }
%"struct.std::__1::pair.465" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.std::__1::pair.465"* }
%"struct.std::__1::array" = type { [4 x %"class.gfx::BreakList.472"] }
%"class.gfx::BreakList.472" = type { %"class.std::__1::vector.473", i64 }
%"class.std::__1::vector.473" = type { %"class.std::__1::__vector_base.474" }
%"class.std::__1::__vector_base.474" = type { %"struct.std::__1::pair.475"*, %"struct.std::__1::pair.475"*, %"class.std::__1::__compressed_pair.477" }
%"struct.std::__1::pair.475" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.std::__1::pair.475"* }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"*, %"class.std::__1::__compressed_pair.484" }
%"struct.gfx::internal::TextToDisplayIndex" = type { i64, i64 }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.gfx::internal::TextToDisplayIndex"* }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::vector.489" = type { %"class.std::__1::__vector_base.490" }
%"class.std::__1::__vector_base.490" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.491" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::BreakList.496" = type { %"class.std::__1::vector.497", i64 }
%"class.std::__1::vector.497" = type { %"class.std::__1::__vector_base.498" }
%"class.std::__1::__vector_base.498" = type { %"struct.std::__1::pair.499"*, %"struct.std::__1::pair.499"*, %"class.std::__1::__compressed_pair.500" }
%"struct.std::__1::pair.499" = type { i64, i64 }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.std::__1::pair.499"* }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.gfx::internal::ShapedText"* }
%"class.gfx::internal::ShapedText" = type { %"class.std::__1::vector.508" }
%"class.std::__1::vector.508" = type { %"class.std::__1::__vector_base.509" }
%"class.std::__1::__vector_base.509" = type { %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*, %"class.std::__1::__compressed_pair.517" }
%"struct.gfx::internal::Line" = type <{ %"class.std::__1::vector.510", %"class.gfx::SizeF", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.510" = type { %"class.std::__1::__vector_base.511" }
%"class.std::__1::__vector_base.511" = type { %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"*, %"class.std::__1::__compressed_pair.512" }
%"struct.gfx::internal::LineSegment" = type { %"class.gfx::RangeF", %"class.gfx::Range", i64 }
%"class.gfx::RangeF" = type { float, float }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"struct.gfx::internal::LineSegment"* }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.gfx::internal::Line"* }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.views::SelectionController"* }
%"class.views::SelectionController" = type opaque
%"class.ui::SimpleMenuModel" = type { %"class.ui::MenuModel", %"class.std::__1::vector.534", %"class.ui::SimpleMenuModel::Delegate"*, %"class.base::WeakPtrFactory.548" }
%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::vector.534" = type { %"class.std::__1::__vector_base.535" }
%"class.std::__1::__vector_base.535" = type { %"struct.ui::SimpleMenuModel::Item"*, %"struct.ui::SimpleMenuModel::Item"*, %"class.std::__1::__compressed_pair.543" }
%"struct.ui::SimpleMenuModel::Item" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::ImageModel", %"class.ui::ImageModel", i32, %"class.ui::MenuModel"*, %"class.ui::ButtonMenuItemModel"*, i32, i8, i8, i8, i8, %"class.ui::ElementIdentifier" }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.536", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.536" = type { %"class.absl::variant_internal::VariantStateBase.537" }
%"class.absl::variant_internal::VariantStateBase.537" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.ui::ButtonMenuItemModel" = type opaque
%"class.ui::ElementIdentifier" = type { i8* }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.ui::SimpleMenuModel::Item"* }
%"class.base::WeakPtrFactory.548" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.views::MenuRunner"* }
%"class.views::MenuRunner" = type opaque
%"class.gfx::LinearAnimation" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.Tab::TabCloseButtonObserver"* }
%"class.Tab::TabCloseButtonObserver" = type opaque
%"class.views::FocusRing" = type { %"class.views::View.base", %"class.views::ViewObserver", %"class.std::__1::unique_ptr.394", i8, i8, %"class.absl::optional.12", %"class.absl::optional.400", %"class.base::ScopedObservation.265" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.views::HighlightPathGenerator"* }
%"class.views::HighlightPathGenerator" = type opaque
%"class.absl::optional.400" = type { %"class.absl::optional_internal::optional_data.401" }
%"class.absl::optional_internal::optional_data.401" = type { %"class.absl::optional_internal::optional_data_base.402" }
%"class.absl::optional_internal::optional_data_base.402" = type { %"class.absl::optional_internal::optional_data_dtor_base.403" }
%"class.absl::optional_internal::optional_data_dtor_base.403" = type { i8, %union.anon.404 }
%union.anon.404 = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.views::View"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.performance_manager::freezing::FreezingVoteToken"* }
%"class.performance_manager::freezing::FreezingVoteToken" = type { i32 (...)** }
%class.GlowHoverController = type { %"class.views::AnimationDelegateViews", %"class.views::View"*, %"class.gfx::SlideAnimation", %"class.gfx::Point", double, double }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.(anonymous namespace)::GM2TabStyle" = type { %class.TabStyleViews, %class.Tab*, %"class.std::__1::unique_ptr.591", %"class.gfx::FontList", %"class.gfx::FontList" }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %class.GlowHoverController* }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::InsetsF" = type { float, float, float, float }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional.600", %"class.absl::optional.609", %"class.cc::PaintCanvas"* }
%"class.absl::optional.600" = type { %"class.absl::optional_internal::optional_data.601" }
%"class.absl::optional_internal::optional_data.601" = type { %"class.absl::optional_internal::optional_data_base.602" }
%"class.absl::optional_internal::optional_data_base.602" = type { %"class.absl::optional_internal::optional_data_dtor_base.603" }
%"class.absl::optional_internal::optional_data_dtor_base.603" = type { i8, %union.anon.604 }
%union.anon.604 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp.605, %class.SkPixmap, %class.sk_sp.608 }
%class.sk_sp.605 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.608 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.609" = type { %"class.absl::optional_internal::optional_data.610" }
%"class.absl::optional_internal::optional_data.610" = type { %"class.absl::optional_internal::optional_data_base.611" }
%"class.absl::optional_internal::optional_data_base.611" = type { %"class.absl::optional_internal::optional_data_dtor_base.612" }
%"class.absl::optional_internal::optional_data_dtor_base.612" = type { i8, [7 x i8], %union.anon.613 }
%union.anon.613 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.628", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.614, [384 x i64], %class.sk_sp.615, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.616", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.622" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.614 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.615 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.ui::ThemeProvider" = type { i32 (...)** }
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"struct.TabStyle::SeparatorBounds" = type { %"class.gfx::RectF", %"class.gfx::RectF" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@.str = private unnamed_addr constant [8 x i8] c"{%s,%s}\00", align 1
@.str.1 = private unnamed_addr constant [4 x i16] [i16 123, i16 32, i16 125, i16 0], align 2
@_ZN8features19kScrollableTabStripE = external global %"struct.base::Feature", align 8
@_ZN8features36kMinimumTabWidthFeatureParameterNameE = external constant [0 x i8], align 1
@_ZTV13TabStyleViews = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TabStyleViews*)* @_ZN13TabStyleViewsD2Ev to i8*), i8* bitcast (void (%class.TabStyleViews*)* @_ZN13TabStyleViewsD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_111GM2TabStyleE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::GM2TabStyle"*)* @_ZN12_GLOBAL__N_111GM2TabStyleD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GM2TabStyle"*)* @_ZN12_GLOBAL__N_111GM2TabStyleD0Ev to i8*), i8* bitcast (void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)* @_ZNK12_GLOBAL__N_111GM2TabStyle7GetPathEN8TabStyle8PathTypeEfbNS1_11RenderUnitsE to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::GM2TabStyle"*)* @_ZNK12_GLOBAL__N_111GM2TabStyle17GetContentsInsetsEv to i8*), i8* bitcast (float (%"class.(anonymous namespace)::GM2TabStyle"*)* @_ZNK12_GLOBAL__N_111GM2TabStyle9GetZValueEv to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::GM2TabStyle"*)* @_ZNK12_GLOBAL__N_111GM2TabStyle15CalculateColorsEv to i8*), i8* bitcast (%"class.gfx::FontList"* (%"class.(anonymous namespace)::GM2TabStyle"*)* @_ZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GM2TabStyle"*, %"class.gfx::Canvas"*)* @_ZNK12_GLOBAL__N_111GM2TabStyle8PaintTabEPN3gfx6CanvasE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GM2TabStyle"*, %"class.gfx::Point"*)* @_ZN12_GLOBAL__N_111GM2TabStyle16SetHoverLocationERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GM2TabStyle"*, i32)* @_ZN12_GLOBAL__N_111GM2TabStyle9ShowHoverEN8TabStyle14ShowHoverStyleE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::GM2TabStyle"*, i32)* @_ZN12_GLOBAL__N_111GM2TabStyle9HideHoverEN8TabStyle14HideHoverStyleE to i8*)] }, align 8
@_ZN5views13PlatformStyle19kFocusHaloThicknessE = external local_unnamed_addr constant float, align 4
@_ZN5views13PlatformStyle15kFocusHaloInsetE = external local_unnamed_addr constant float, align 4
@_ZZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title = internal global i8 0, align 1
@_ZGVZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title = internal global i64 0, align 8
@_ZN8features32kProminentDarkModeActiveTabTitleE = external global %"struct.base::Feature", align 8
@__const._ZNK12_GLOBAL__N_111GM2TabStyle15PaintSeparatorsEPN3gfx6CanvasE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.642 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.643 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.673 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.674 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.675 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.676 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.677 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN13TabStyleViewsD1Ev = hidden unnamed_addr alias void (%class.TabStyleViews*), void (%class.TabStyleViews*)* @_ZN13TabStyleViewsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN8TabStyle9TabColorsEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"struct.TabStyle::TabColors"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"struct.TabStyle::TabColors", %"struct.TabStyle::TabColors"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  call void @_ZN11color_utils19SkColorToRgbaStringEj(%"class.std::__1::basic_string.1"* nonnull sret %4, i32 %9) #14
  %10 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %7
  %17 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"struct.TabStyle::TabColors", %"struct.TabStyle::TabColors"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  call void @_ZN11color_utils19SkColorToRgbaStringEj(%"class.std::__1::basic_string.1"* nonnull sret %5, i32 %19) #14
  %20 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %17
  call void (%"class.std::__1::basic_string.1"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %26) #14
  %27 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = select i1 %30, i8* %32, i8* %6
  %34 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i64 %35, i64 %36
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %33, i64 %37) #14
  %38 = load i8, i8* %28, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %2
  %41 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %2, %40
  %43 = load i8, i8* %21, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #14
  %48 = load i8, i8* %11, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.1"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZN11color_utils19SkColorToRgbaStringEj(%"class.std::__1::basic_string.1"* sret, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui8metadata13TypeConverterIN8TabStyle9TabColorsEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::__wrap_iter", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #14
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %9 to i64
  %16 = icmp slt i8 %9, 0
  %17 = select i1 %16, i16* %11, i16* %12
  %18 = select i1 %16, i64 %14, i64 %15
  %19 = call zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %17, i64 %18, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.1, i64 0, i64 0), i64 3, %"class.std::__1::basic_string"* nonnull %2) #14
  %20 = bitcast %"class.std::__1::__wrap_iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %21, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %1
  %27 = load i16*, i16** %5, align 8
  store i16* %27, i16** %21, align 8
  %28 = load i64, i64* %6, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  br label %34

30:                                               ; preds = %1
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %32 = bitcast %"class.std::__1::__wrap_iter"* %3 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %32, align 8
  %33 = zext i8 %24 to i64
  br label %34

34:                                               ; preds = %26, %30
  %35 = phi i16* [ %29, %26 ], [ %31, %30 ]
  %36 = phi i16* [ %27, %26 ], [ %31, %30 ]
  %37 = phi i64 [ %28, %26 ], [ %33, %30 ]
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RSA_(i16* %36, i16* %38, %"class.std::__1::__wrap_iter"* nonnull dereferenceable(8) %3) #14
  %40 = trunc i64 %39 to i8
  %41 = load i16*, i16** %21, align 8
  %42 = load i8, i8* %23, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i16*, i16** %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i16* %44, i16* %35
  %48 = select i1 %43, i64 %45, i64 %46
  %49 = getelementptr inbounds i16, i16* %47, i64 %48
  %50 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_(i16* %41, i16* %49) #14
  %51 = trunc i64 %50 to i8
  %52 = lshr i64 %50, 32
  %53 = trunc i64 %52 to i32
  %54 = icmp ne i8 %40, 0
  %55 = icmp ne i8 %51, 0
  %56 = and i1 %54, %55
  %57 = and i64 %39, -4294967296
  %58 = zext i1 %56 to i64
  %59 = select i1 %56, i64 %57, i64 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  %60 = load i8, i8* %23, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %34
  %63 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %34, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  %66 = or i64 %59, %58
  %67 = insertvalue { i64, i32 } undef, i64 %66, 0
  %68 = insertvalue { i64, i32 } %67, i32 %53, 1
  ret { i64, i32 } %68
}

declare zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RSA_(i16*, i16*, %"class.std::__1::__wrap_iter"* dereferenceable(8)) local_unnamed_addr #1

declare i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_(i16*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN8TabStyle9TabColorsEE15GetValidStringsEv(%"class.std::__1::vector"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8TabStyleD2Ev(%class.TabStyle*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13TabStyleViewsD2Ev(%class.TabStyleViews*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabStyleViews, %class.TabStyleViews* %0, i64 0, i32 0
  tail call void @_ZN8TabStyleD2Ev(%class.TabStyle* %2) #14
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN13TabStyleViewsD0Ev(%class.TabStyleViews* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.TabStyleViews* @_ZN13TabStyleViews12CreateForTabEP3Tab(%class.Tab*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #15
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_111GM2TabStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %class.Tab**
  store %class.Tab* %0, %class.Tab** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = tail call zeroext i1 @_ZN3gfx9Animation25ShouldRenderRichAnimationEv() #14
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = tail call i8* @_Znwm(i64 232) #15
  %10 = bitcast i8* %9 to %class.GlowHoverController*
  %11 = icmp eq %class.Tab* %0, null
  %12 = getelementptr inbounds %class.Tab, %class.Tab* %0, i64 0, i32 3
  %13 = bitcast %class.TabSlotView.base* %12 to %"class.views::View"*
  %14 = select i1 %11, %"class.views::View"* null, %"class.views::View"* %13
  tail call void @_ZN19GlowHoverControllerC1EPN5views4ViewE(%class.GlowHoverController* nonnull %10, %"class.views::View"* %14) #14
  %15 = ptrtoint i8* %9 to i64
  br label %16

16:                                               ; preds = %8, %1
  %17 = phi i64 [ %15, %8 ], [ 0, %1 ]
  %18 = bitcast i8* %6 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 24
  %20 = bitcast i8* %19 to %"class.gfx::FontList"*
  %21 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN5views5style7GetFontEii(i32 3, i32 4096) #14
  tail call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* %20, %"class.gfx::FontList"* dereferenceable(8) %21) #14
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = bitcast i8* %22 to %"class.gfx::FontList"*
  %24 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN5views5style7GetFontEii(i32 1, i32 4096) #14
  tail call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* %23, %"class.gfx::FontList"* dereferenceable(8) %24) #14
  %25 = bitcast i8* %2 to %class.TabStyleViews*
  ret %class.TabStyleViews* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13TabStyleViews21GetMinimumActiveWidthEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string.1", align 8
  %2 = tail call i32 @_ZN14TabCloseButton12GetGlyphSizeEv() #14
  %3 = tail call i32 @_ZN8TabStyle30GetContentsHorizontalInsetSizeEv() #14
  %4 = shl nsw i32 %3, 1
  %5 = add nsw i32 %4, %2
  %6 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kScrollableTabStripE) #14
  br i1 %6, label %7, label %46

7:                                                ; preds = %0
  %8 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features36kMinimumTabWidthFeatureParameterNameE, i64 0, i64 0)) #14
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %"class.std::__1::basic_string.1"* %1 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #16
  unreachable

13:                                               ; preds = %7
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %24, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #15
  %19 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %29

24:                                               ; preds = %13
  %25 = trunc i64 %9 to i8
  %26 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24, %15
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %23, %15 ]
  %31 = phi i8* [ %8, %24 ], [ %18, %15 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features36kMinimumTabWidthFeatureParameterNameE, i64 0, i64 0), i64 %9, i1 false) #14
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %30, %29 ]
  %34 = phi i8* [ %8, %24 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %9
  store i8 0, i8* %35, align 1
  %36 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kScrollableTabStripE, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %1, i32 %5) #14
  %37 = icmp slt i32 %5, %36
  %38 = select i1 %37, i32 %36, i32 %5
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %32, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  br label %46

46:                                               ; preds = %0, %45
  %47 = phi i32 [ %38, %45 ], [ %5, %0 ]
  ret i32 %47
}

declare i32 @_ZN14TabCloseButton12GetGlyphSizeEv() local_unnamed_addr #1

declare i32 @_ZN8TabStyle30GetContentsHorizontalInsetSizeEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string.1"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13TabStyleViews23GetMinimumInactiveWidthEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string.1", align 8
  %2 = tail call i64 @_ZN8TabStyle16GetSeparatorSizeEv() #14
  %3 = trunc i64 %2 to i32
  %4 = sub nsw i32 16, %3
  %5 = tail call i32 @_ZN8TabStyle13GetTabOverlapEv() #14
  %6 = add nsw i32 %4, %5
  %7 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kScrollableTabStripE) #14
  br i1 %7, label %8, label %47

8:                                                ; preds = %0
  %9 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features36kMinimumTabWidthFeatureParameterNameE, i64 0, i64 0)) #14
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string.1"* %1 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %13) #16
  unreachable

14:                                               ; preds = %8
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %25, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #15
  %20 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  %24 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %30

25:                                               ; preds = %14
  %26 = trunc i64 %10 to i8
  %27 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25, %16
  %31 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %24, %16 ]
  %32 = phi i8* [ %9, %25 ], [ %19, %16 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features36kMinimumTabWidthFeatureParameterNameE, i64 0, i64 0), i64 %10, i1 false) #14
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i8* [ %9, %25 ], [ %32, %30 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  store i8 0, i8* %36, align 1
  %37 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kScrollableTabStripE, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %1, i32 %6) #14
  %38 = icmp slt i32 %6, %37
  %39 = select i1 %38, i32 %37, i32 %6
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %33, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  br label %47

47:                                               ; preds = %0, %46
  %48 = phi i32 [ %39, %46 ], [ %6, %0 ]
  ret i32 %48
}

declare i64 @_ZN8TabStyle16GetSeparatorSizeEv() local_unnamed_addr #1

declare i32 @_ZN8TabStyle13GetTabOverlapEv() local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare zeroext i1 @_ZN3gfx9Animation25ShouldRenderRichAnimationEv() local_unnamed_addr #1

declare void @_ZN19GlowHoverControllerC1EPN5views4ViewE(%class.GlowHoverController*, %"class.views::View"*) unnamed_addr #1

declare dereferenceable(8) %"class.gfx::FontList"* @_ZN5views5style7GetFontEii(i32, i32) local_unnamed_addr #1

declare void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"*, %"class.gfx::FontList"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111GM2TabStyleD2Ev(%"class.(anonymous namespace)::GM2TabStyle"*) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_111GM2TabStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 4
  tail call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* %3) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 3
  tail call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* %4) #14
  %5 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.GlowHoverController*, %class.GlowHoverController** %5, align 8
  store %class.GlowHoverController* null, %class.GlowHoverController** %5, align 8
  %7 = icmp eq %class.GlowHoverController* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.GlowHoverController* %6 to void (%class.GlowHoverController*)***
  %10 = load void (%class.GlowHoverController*)**, void (%class.GlowHoverController*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.GlowHoverController*)*, void (%class.GlowHoverController*)** %10, i64 1
  %12 = load void (%class.GlowHoverController*)*, void (%class.GlowHoverController*)** %11, align 8
  tail call void %12(%class.GlowHoverController* nonnull %6) #14
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8TabStyleD2Ev(%class.TabStyle* %14) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111GM2TabStyleD0Ev(%"class.(anonymous namespace)::GM2TabStyle"*) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_111GM2TabStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 4
  tail call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* %3) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 3
  tail call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* %4) #14
  %5 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.GlowHoverController*, %class.GlowHoverController** %5, align 8
  store %class.GlowHoverController* null, %class.GlowHoverController** %5, align 8
  %7 = icmp eq %class.GlowHoverController* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.GlowHoverController* %6 to void (%class.GlowHoverController*)***
  %10 = load void (%class.GlowHoverController*)**, void (%class.GlowHoverController*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.GlowHoverController*)*, void (%class.GlowHoverController*)** %10, i64 1
  %12 = load void (%class.GlowHoverController*)*, void (%class.GlowHoverController*)** %11, align 8
  tail call void %12(%class.GlowHoverController* nonnull %6) #14
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8TabStyleD2Ev(%class.TabStyle* %14) #14
  %15 = bitcast %"class.(anonymous namespace)::GM2TabStyle"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_111GM2TabStyle7GetPathEN8TabStyle8PathTypeEfbNS1_11RenderUnitsE(%class.SkPath* noalias sret, %"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly, i32, float, i1 zeroext, i32) unnamed_addr #11 align 2 {
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca %"class.absl::optional.303", align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.gfx::RectF"*
  %11 = alloca %"class.gfx::InsetsF", align 4
  %12 = alloca %class.SkRRect, align 4
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %15 = alloca %class.SkMatrix, align 16
  %16 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %1, i64 0, i32 1
  %18 = bitcast %class.Tab** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 688
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #14, !alias.scope !2
  %21 = load i8, i8* %20, align 8, !range !5, !noalias !2
  %22 = icmp eq i8 %21, 0
  %23 = bitcast i8* %19 to %class.Tab*
  br i1 %22, label %32, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds i8, i8* %19, i64 696
  %26 = bitcast i8* %25 to %"class.tab_groups::TabGroupId"*
  %27 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %27, %"class.tab_groups::TabGroupId"* dereferenceable(16) %26) #14
  store i8 1, i8* %16, align 8, !alias.scope !2
  %28 = load %class.Tab*, %class.Tab** %17, align 8
  %29 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %28) #14
  br i1 %29, label %45, label %30

30:                                               ; preds = %24
  %31 = load %class.Tab*, %class.Tab** %17, align 8
  br label %32

32:                                               ; preds = %30, %6
  %33 = phi %class.Tab* [ %31, %30 ], [ %23, %6 ]
  %34 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %33) #14
  %35 = or i1 %34, %4
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = load %class.Tab*, %class.Tab** %17, align 8
  %38 = getelementptr inbounds %class.Tab, %class.Tab* %37, i64 0, i32 4
  %39 = load %class.TabController*, %class.TabController** %38, align 8
  %40 = bitcast %class.TabController* %39 to i32 (%class.TabController*)***
  %41 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %41, i64 28
  %43 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %42, align 8
  %44 = call i32 %43(%class.TabController* %39) #14
  br label %45

45:                                               ; preds = %24, %32, %36
  %46 = phi i32 [ %44, %36 ], [ 3, %24 ], [ 0, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  %47 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #14
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0, i64 0
  %49 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  %52 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -1, i64 16, i1 false)
  %53 = load i8*, i8** %18, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 360
  %55 = bitcast i8* %54 to %"class.gfx::Rect"*
  %56 = call fastcc { <2 x float>, <2 x float> } @_ZN12_GLOBAL__N_111GM2TabStyle19ScaleAndAlignBoundsERKN3gfx4RectEfi(%"class.gfx::Rect"* dereferenceable(16) %55, float %3, i32 %46)
  %57 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %58 = extractvalue { <2 x float>, <2 x float> } %56, 0
  store <2 x float> %58, <2 x float>* %57, align 8
  %59 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %60 = extractvalue { <2 x float>, <2 x float> } %56, 1
  store <2 x float> %60, <2 x float>* %59, align 8
  %61 = icmp eq i32 %2, 3
  br i1 %61, label %62, label %79

62:                                               ; preds = %45
  %63 = call fastcc float @_ZNK12_GLOBAL__N_111GM2TabStyle19GetSeparatorOpacityEbb(%"class.(anonymous namespace)::GM2TabStyle"* %1, i1 zeroext true, i1 zeroext true) #14
  %64 = bitcast float %63 to i32
  %65 = call fastcc float @_ZNK12_GLOBAL__N_111GM2TabStyle19GetSeparatorOpacityEbb(%"class.(anonymous namespace)::GM2TabStyle"* %1, i1 zeroext true, i1 zeroext false) #14
  %66 = bitcast float %65 to i32
  %67 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #14
  %68 = select i1 %67, i32 %66, i32 %64
  %69 = select i1 %67, i32 %64, i32 %66
  %70 = bitcast i32 %68 to float
  %71 = bitcast i32 %69 to float
  %72 = bitcast %"class.gfx::InsetsF"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #14
  %73 = fadd float %70, 2.500000e+00
  %74 = fadd float %71, 2.500000e+00
  %75 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %11, i64 0, i32 0
  store float 0.000000e+00, float* %75, align 4
  %76 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %11, i64 0, i32 1
  store float %73, float* %76, align 4
  %77 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %11, i64 0, i32 2
  store float 0.000000e+00, float* %77, align 4
  %78 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %11, i64 0, i32 3
  store float %74, float* %78, align 4
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %10, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #14
  br label %79

79:                                               ; preds = %62, %45
  %80 = load i8*, i8** %18, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 368
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = call i32 @_ZN8TabStyle15GetCornerRadiusEv() #14
  %85 = shl nsw i32 %84, 1
  %86 = sub nsw i32 %83, %85
  %87 = sitofp i32 %86 to float
  %88 = fdiv float %87, 3.000000e+00
  %89 = sitofp i32 %84 to float
  %90 = fcmp olt float %88, 0.000000e+00
  %91 = select i1 %90, float 0.000000e+00, float %88
  %92 = fcmp ogt float %91, %89
  %93 = select i1 %92, float %89, float %91
  %94 = fmul float %93, %3
  %95 = call i32 @_ZN8TabStyle15GetCornerRadiusEv() #14
  %96 = sitofp i32 %95 to float
  %97 = fmul float %96, %3
  %98 = load float, float* %48, align 8
  %99 = load float, float* %50, align 8
  %100 = fadd float %98, %99
  %101 = load float, float* %49, align 4
  %102 = fadd float %98, %97
  %103 = fsub float %100, %97
  %104 = load float, float* %51, align 4
  %105 = fadd float %101, %104
  %106 = call i32 @_Z17GetLayoutConstant14LayoutConstant(i32 17) #14
  %107 = sitofp i32 %106 to float
  %108 = fmul float %107, %3
  %109 = fsub float %105, %108
  %110 = sitofp i32 %46 to float
  %111 = fmul float %110, %3
  br i1 %61, label %112, label %117

112:                                              ; preds = %79
  %113 = fadd float %111, %102
  %114 = fsub float %103, %111
  %115 = fadd float %111, %101
  %116 = fsub float %94, %111
  br label %210

117:                                              ; preds = %79
  %118 = icmp ult i32 %2, 2
  br i1 %118, label %152, label %119

119:                                              ; preds = %117
  %120 = icmp eq i32 %2, 2
  br i1 %120, label %121, label %210

121:                                              ; preds = %119
  %122 = fsub float %109, %111
  %123 = fsub float %94, %111
  %124 = load i8*, i8** %18, align 8
  %125 = getelementptr inbounds i8, i8* %124, i64 24
  %126 = bitcast i8* %125 to %"class.views::View"*
  %127 = bitcast i8* %125 to %"class.views::Widget"* (%"class.views::View"*)***
  %128 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %127, align 8
  %129 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %128, i64 12
  %130 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %129, align 8
  %131 = call %"class.views::Widget"* %130(%"class.views::View"* %126) #14
  %132 = bitcast %"class.views::Widget"* %131 to i1 (%"class.views::Widget"*)***
  %133 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %132, align 8
  %134 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %133, i64 44
  %135 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %134, align 8
  %136 = call zeroext i1 %135(%"class.views::Widget"* %131) #14
  br i1 %136, label %139, label %137

137:                                              ; preds = %121
  %138 = call zeroext i1 @_ZNK5views6Widget12IsFullscreenEv(%"class.views::Widget"* %131) #14
  br i1 %138, label %139, label %210

139:                                              ; preds = %121, %137
  %140 = load %class.Tab*, %class.Tab** %17, align 8
  %141 = getelementptr inbounds %class.Tab, %class.Tab* %140, i64 0, i32 4
  %142 = load %class.TabController*, %class.TabController** %141, align 8
  %143 = bitcast %class.TabController* %142 to i1 (%class.TabController*, %class.Tab*)***
  %144 = load i1 (%class.TabController*, %class.Tab*)**, i1 (%class.TabController*, %class.Tab*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%class.TabController*, %class.Tab*)*, i1 (%class.TabController*, %class.Tab*)** %144, i64 16
  %146 = load i1 (%class.TabController*, %class.Tab*)*, i1 (%class.TabController*, %class.Tab*)** %145, align 8
  %147 = call zeroext i1 %146(%class.TabController* %142, %class.Tab* %140) #14
  br i1 %147, label %148, label %210

148:                                              ; preds = %139
  %149 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #14
  %150 = select i1 %149, float %102, float %98
  %151 = select i1 %149, float %100, float %103
  br label %210

152:                                              ; preds = %117
  %153 = fmul float %111, 5.000000e-01
  %154 = fadd float %153, %102
  %155 = fsub float %103, %153
  %156 = fadd float %153, %101
  %157 = fsub float %94, %153
  %158 = fsub float %109, %153
  %159 = icmp eq i32 %2, 0
  br i1 %159, label %160, label %210

160:                                              ; preds = %152
  %161 = load %class.Tab*, %class.Tab** %17, align 8
  %162 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* %161) #14
  br i1 %162, label %163, label %210

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %165 = load %class.GlowHoverController*, %class.GlowHoverController** %164, align 8
  %166 = icmp eq %class.GlowHoverController* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = call zeroext i1 @_ZNK19GlowHoverController10ShouldDrawEv(%class.GlowHoverController* nonnull %165) #14
  br i1 %168, label %210, label %169

169:                                              ; preds = %167, %163
  %170 = load %class.Tab*, %class.Tab** %17, align 8
  %171 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %170) #14
  br i1 %171, label %210, label %172

172:                                              ; preds = %169
  %173 = load %class.Tab*, %class.Tab** %17, align 8
  %174 = getelementptr inbounds %class.Tab, %class.Tab* %173, i64 0, i32 4
  %175 = load %class.TabController*, %class.TabController** %174, align 8
  %176 = bitcast %class.TabController* %175 to %class.Tab* (%class.TabController*, %class.Tab*, i32)***
  %177 = load %class.Tab* (%class.TabController*, %class.Tab*, i32)**, %class.Tab* (%class.TabController*, %class.Tab*, i32)*** %176, align 8
  %178 = getelementptr inbounds %class.Tab* (%class.TabController*, %class.Tab*, i32)*, %class.Tab* (%class.TabController*, %class.Tab*, i32)** %177, i64 22
  %179 = load %class.Tab* (%class.TabController*, %class.Tab*, i32)*, %class.Tab* (%class.TabController*, %class.Tab*, i32)** %178, align 8
  %180 = call %class.Tab* %179(%class.TabController* %175, %class.Tab* %173, i32 -1) #14
  %181 = icmp eq %class.Tab* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %172
  %183 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* nonnull %180) #14
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = getelementptr inbounds %class.Tab, %class.Tab* %180, i64 0, i32 3
  %186 = bitcast %class.TabSlotView.base* %185 to %"class.views::View"*
  %187 = call zeroext i1 @_ZNK5views4View14IsMouseHoveredEv(%"class.views::View"* %186) #14
  br i1 %187, label %188, label %189

188:                                              ; preds = %184, %182, %172
  br label %189

189:                                              ; preds = %188, %184
  %190 = phi i32 [ 0, %188 ], [ 1, %184 ]
  %191 = load %class.Tab*, %class.Tab** %17, align 8
  %192 = getelementptr inbounds %class.Tab, %class.Tab* %191, i64 0, i32 4
  %193 = load %class.TabController*, %class.TabController** %192, align 8
  %194 = bitcast %class.TabController* %193 to %class.Tab* (%class.TabController*, %class.Tab*, i32)***
  %195 = load %class.Tab* (%class.TabController*, %class.Tab*, i32)**, %class.Tab* (%class.TabController*, %class.Tab*, i32)*** %194, align 8
  %196 = getelementptr inbounds %class.Tab* (%class.TabController*, %class.Tab*, i32)*, %class.Tab* (%class.TabController*, %class.Tab*, i32)** %195, i64 22
  %197 = load %class.Tab* (%class.TabController*, %class.Tab*, i32)*, %class.Tab* (%class.TabController*, %class.Tab*, i32)** %196, align 8
  %198 = call %class.Tab* %197(%class.TabController* %193, %class.Tab* %191, i32 1) #14
  %199 = icmp eq %class.Tab* %198, null
  br i1 %199, label %206, label %200

200:                                              ; preds = %189
  %201 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* nonnull %198) #14
  br i1 %201, label %202, label %206

202:                                              ; preds = %200
  %203 = getelementptr inbounds %class.Tab, %class.Tab* %198, i64 0, i32 3
  %204 = bitcast %class.TabSlotView.base* %203 to %"class.views::View"*
  %205 = call zeroext i1 @_ZNK5views4View14IsMouseHoveredEv(%"class.views::View"* %204) #14
  br i1 %205, label %206, label %207

206:                                              ; preds = %202, %200, %189
  br label %207

207:                                              ; preds = %206, %202
  %208 = phi i32 [ 0, %206 ], [ 2, %202 ]
  %209 = or i32 %208, %190
  br label %210

210:                                              ; preds = %112, %119, %139, %137, %148, %152, %160, %167, %169, %207
  %211 = phi i1 [ false, %167 ], [ false, %169 ], [ false, %207 ], [ false, %160 ], [ false, %152 ], [ true, %148 ], [ false, %119 ], [ false, %137 ], [ true, %139 ], [ false, %112 ]
  %212 = phi float [ %158, %167 ], [ %158, %169 ], [ %158, %207 ], [ %158, %160 ], [ %158, %152 ], [ %122, %148 ], [ %109, %119 ], [ %122, %137 ], [ %122, %139 ], [ %109, %112 ]
  %213 = phi float [ %155, %167 ], [ %155, %169 ], [ %155, %207 ], [ %155, %160 ], [ %155, %152 ], [ %151, %148 ], [ %103, %119 ], [ %103, %137 ], [ %103, %139 ], [ %114, %112 ]
  %214 = phi float [ %154, %167 ], [ %154, %169 ], [ %154, %207 ], [ %154, %160 ], [ %154, %152 ], [ %150, %148 ], [ %102, %119 ], [ %102, %137 ], [ %102, %139 ], [ %113, %112 ]
  %215 = phi float [ %156, %167 ], [ %156, %169 ], [ %156, %207 ], [ %156, %160 ], [ %156, %152 ], [ %101, %148 ], [ %101, %119 ], [ %101, %137 ], [ %101, %139 ], [ %115, %112 ]
  %216 = phi float [ %157, %167 ], [ %157, %169 ], [ %157, %207 ], [ %157, %160 ], [ %157, %152 ], [ %94, %148 ], [ %94, %119 ], [ %94, %137 ], [ %94, %139 ], [ %116, %112 ]
  %217 = phi float [ %157, %167 ], [ %157, %169 ], [ %157, %207 ], [ %157, %160 ], [ %157, %152 ], [ %123, %148 ], [ %94, %119 ], [ %123, %137 ], [ %123, %139 ], [ %94, %112 ]
  %218 = phi i32 [ 0, %167 ], [ 0, %169 ], [ %209, %207 ], [ 0, %160 ], [ 0, %152 ], [ 0, %148 ], [ 0, %119 ], [ 0, %137 ], [ 0, %139 ], [ 0, %112 ]
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = and i32 %218, 2
  %222 = icmp eq i32 %221, 0
  %223 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* %0) #14
  br i1 %61, label %224, label %231

224:                                              ; preds = %210
  %225 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %225) #14
  %226 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 0
  store float %214, float* %226, align 4
  %227 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 1
  store float %215, float* %227, align 4
  %228 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 2
  store float %213, float* %228, align 4
  %229 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 3
  store float %212, float* %229, align 4
  %230 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* nonnull dereferenceable(16) %7, i32 0, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %225) #14
  br label %297

231:                                              ; preds = %210
  %232 = icmp eq i32 %2, 4
  br i1 %232, label %233, label %251

233:                                              ; preds = %231
  %234 = load float, float* @_ZN5views13PlatformStyle19kFocusHaloThicknessE, align 4
  %235 = load float, float* @_ZN5views13PlatformStyle15kFocusHaloInsetE, align 4
  %236 = fadd float %234, %235
  %237 = bitcast %class.SkRRect* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %237) #14
  %238 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %238) #14
  %239 = fadd float %214, %236
  %240 = fadd float %215, %236
  %241 = fsub float %213, %236
  %242 = fsub float %212, %236
  %243 = insertelement <2 x float> undef, float %239, i32 0
  %244 = insertelement <2 x float> %243, float %240, i32 1
  %245 = insertelement <2 x float> undef, float %241, i32 0
  %246 = insertelement <2 x float> %245, float %242, i32 1
  %247 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %244, <2 x float>* %247, align 8
  %248 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %246, <2 x float>* %248, align 8
  %249 = fsub float %94, %236
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %237, i8 0, i64 52, i1 false) #14, !alias.scope !6
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %12, %struct.SkRect* nonnull dereferenceable(16) %14, float %249, float %249) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %238) #14
  %250 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* %0, %class.SkRRect* nonnull dereferenceable(52) %12, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %237) #14
  br label %297

251:                                              ; preds = %231
  %252 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %0, float %98, float %105) #14
  %253 = fcmp une float %214, %98
  br i1 %253, label %254, label %266

254:                                              ; preds = %251
  %255 = fcmp une float %212, %105
  br i1 %255, label %256, label %258

256:                                              ; preds = %254
  %257 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %98, float %212) #14
  br label %258

258:                                              ; preds = %256, %254
  br i1 %220, label %261, label %259

259:                                              ; preds = %258
  %260 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %214, float %212) #14
  br label %266

261:                                              ; preds = %258
  %262 = fsub float %214, %217
  %263 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %262, float %212) #14
  %264 = fsub float %212, %217
  %265 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %0, float %217, float %217, float 0.000000e+00, i32 0, i32 1, float %214, float %264) #14
  br label %266

266:                                              ; preds = %259, %261, %251
  br i1 %211, label %267, label %270

267:                                              ; preds = %266
  %268 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %214, float %215) #14
  %269 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %213, float %215) #14
  br label %278

270:                                              ; preds = %266
  %271 = fadd float %215, %216
  %272 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %214, float %271) #14
  %273 = fadd float %214, %216
  %274 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %0, float %216, float %216, float 0.000000e+00, i32 0, i32 0, float %273, float %215) #14
  %275 = fsub float %213, %216
  %276 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %275, float %215) #14
  %277 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %0, float %216, float %216, float 0.000000e+00, i32 0, i32 0, float %213, float %271) #14
  br label %278

278:                                              ; preds = %270, %267
  %279 = fcmp une float %213, %100
  br i1 %279, label %280, label %292

280:                                              ; preds = %278
  br i1 %222, label %283, label %281

281:                                              ; preds = %280
  %282 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %213, float %212) #14
  br label %288

283:                                              ; preds = %280
  %284 = fsub float %212, %217
  %285 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %213, float %284) #14
  %286 = fadd float %213, %217
  %287 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %0, float %217, float %217, float 0.000000e+00, i32 0, i32 1, float %286, float %212) #14
  br label %288

288:                                              ; preds = %283, %281
  %289 = fcmp une float %212, %105
  br i1 %289, label %290, label %292

290:                                              ; preds = %288
  %291 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %100, float %212) #14
  br label %292

292:                                              ; preds = %288, %290, %278
  %293 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %100, float %105) #14
  %294 = icmp eq i32 %2, 1
  br i1 %294, label %297, label %295

295:                                              ; preds = %292
  %296 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %0) #14
  br label %297

297:                                              ; preds = %292, %233, %295, %224
  %298 = load i8*, i8** %18, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 360
  %300 = bitcast i8* %299 to i32*
  %301 = load i32, i32* %300, align 4
  %302 = sitofp i32 %301 to float
  %303 = getelementptr inbounds i8, i8* %298, i64 364
  %304 = bitcast i8* %303 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = sitofp i32 %305 to float
  %307 = fmul float %302, %3
  %308 = fmul float %306, %3
  %309 = fsub float -0.000000e+00, %307
  %310 = fsub float -0.000000e+00, %308
  call void @_ZNK6SkPath6offsetEffPS_(%class.SkPath* %0, float %309, float %310, %class.SkPath* %0) #14
  %311 = icmp eq i32 %5, 1
  %312 = fcmp une float %3, 1.000000e+00
  %313 = and i1 %312, %311
  br i1 %313, label %314, label %323

314:                                              ; preds = %297
  %315 = bitcast %class.SkMatrix* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %315) #14
  %316 = fdiv float 1.000000e+00, %3
  %317 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 1
  %318 = bitcast %class.SkMatrix* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %318, align 16, !alias.scope !9
  %319 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 4
  %320 = bitcast float* %319 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %320, align 16, !alias.scope !9
  %321 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %321, align 16, !alias.scope !9
  store i32 16, i32* %317, align 4, !alias.scope !9
  %322 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %15, float %316, float %316) #14
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %0, %class.SkMatrix* nonnull dereferenceable(40) %15, %class.SkPath* %0, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %315) #14
  br label %323

323:                                              ; preds = %314, %297
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_111GM2TabStyle17GetContentsInsetsEv(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.303", align 8
  %3 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %5 = bitcast %class.Tab** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 688
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #14, !alias.scope !12
  %8 = load i8, i8* %7, align 8, !range !5, !noalias !12
  %9 = icmp eq i8 %8, 0
  %10 = bitcast i8* %6 to %class.Tab*
  br i1 %9, label %19, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8, i8* %6, i64 696
  %13 = bitcast i8* %12 to %"class.tab_groups::TabGroupId"*
  %14 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %14, %"class.tab_groups::TabGroupId"* dereferenceable(16) %13) #14
  store i8 1, i8* %3, align 8, !alias.scope !12
  %15 = load %class.Tab*, %class.Tab** %4, align 8
  %16 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %15) #14
  br i1 %16, label %31, label %17

17:                                               ; preds = %11
  %18 = load %class.Tab*, %class.Tab** %4, align 8
  br label %19

19:                                               ; preds = %17, %1
  %20 = phi %class.Tab* [ %18, %17 ], [ %10, %1 ]
  %21 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %20) #14
  br i1 %21, label %22, label %31

22:                                               ; preds = %19
  %23 = load %class.Tab*, %class.Tab** %4, align 8
  %24 = getelementptr inbounds %class.Tab, %class.Tab* %23, i64 0, i32 4
  %25 = load %class.TabController*, %class.TabController** %24, align 8
  %26 = bitcast %class.TabController* %25 to i32 (%class.TabController*)***
  %27 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %27, i64 28
  %29 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %28, align 8
  %30 = call i32 %29(%class.TabController* %25) #14
  br label %31

31:                                               ; preds = %11, %19, %22
  %32 = phi i32 [ %30, %22 ], [ 3, %11 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  %33 = call i32 @_ZN8TabStyle30GetContentsHorizontalInsetSizeEv() #14
  %34 = call i32 @_Z17GetLayoutConstant14LayoutConstant(i32 17) #14
  %35 = add nsw i32 %34, %32
  %36 = icmp sgt i32 %32, 0
  %37 = icmp sgt i32 %35, 0
  %38 = and i1 %36, %37
  %39 = sub nuw nsw i32 2147483647, %32
  %40 = icmp ult i32 %39, %35
  %41 = and i1 %40, %38
  br i1 %41, label %49, label %42

42:                                               ; preds = %31
  %43 = and i32 %35, %32
  %44 = icmp slt i32 %43, 0
  %45 = sub nsw i32 -2147483648, %32
  %46 = icmp sgt i32 %45, %35
  %47 = and i1 %46, %44
  %48 = select i1 %47, i32 %45, i32 %35
  br label %49

49:                                               ; preds = %42, %31
  %50 = phi i32 [ %48, %42 ], [ %39, %31 ]
  %51 = icmp sgt i32 %33, 0
  %52 = sub nuw nsw i32 2147483647, %33
  %53 = icmp ult i32 %52, %33
  %54 = and i1 %51, %53
  br i1 %54, label %61, label %55

55:                                               ; preds = %49
  %56 = icmp slt i32 %33, 0
  %57 = sub nsw i32 -2147483648, %33
  %58 = icmp sgt i32 %57, %33
  %59 = and i1 %56, %58
  %60 = select i1 %59, i32 %57, i32 %33
  br label %61

61:                                               ; preds = %49, %55
  %62 = phi i32 [ %60, %55 ], [ %52, %49 ]
  %63 = zext i32 %33 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %32 to i64
  %66 = or i64 %64, %65
  %67 = insertvalue { i64, i64 } undef, i64 %66, 0
  %68 = zext i32 %62 to i64
  %69 = shl nuw i64 %68, 32
  %70 = zext i32 %50 to i64
  %71 = or i64 %69, %70
  %72 = insertvalue { i64, i64 } %67, i64 %71, 1
  ret { i64, i64 } %72
}

; Function Attrs: nounwind ssp uwtable
define internal float @_ZNK12_GLOBAL__N_111GM2TabStyle9GetZValueEv(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.GlowHoverController*, %class.GlowHoverController** %2, align 8
  %4 = icmp eq %class.GlowHoverController* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %3) #14
  %7 = fptrunc double %6 to float
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi float [ %7, %5 ], [ 0.000000e+00, %1 ]
  %10 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %11 = load %class.Tab*, %class.Tab** %10, align 8
  %12 = tail call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* %11) #14
  %13 = fadd float %9, 4.000000e+00
  %14 = select i1 %12, float %13, float %9
  %15 = load %class.Tab*, %class.Tab** %10, align 8
  %16 = getelementptr inbounds %class.Tab, %class.Tab* %15, i64 0, i32 24
  %17 = load i8, i8* %16, align 4, !range !5
  %18 = icmp eq i8 %17, 0
  %19 = fadd float %14, 2.000000e+00
  %20 = select i1 %18, float %14, float %19
  ret float %20
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_111GM2TabStyle15CalculateColorsEv(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %3 = load %class.Tab*, %class.Tab** %2, align 8
  %4 = tail call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %3) #14
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = load %class.Tab*, %class.Tab** %2, align 8
  %7 = tail call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* %6) #14
  br i1 %7, label %40, label %8

8:                                                ; preds = %5
  %9 = load %class.Tab*, %class.Tab** %2, align 8
  %10 = getelementptr inbounds %class.Tab, %class.Tab* %9, i64 0, i32 24
  %11 = load i8, i8* %10, align 4, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @_ZN8TabStyle16GetStandardWidthEv() #14
  %15 = sitofp i32 %14 to float
  %16 = tail call i32 @_ZN13TabStyleViews23GetMinimumInactiveWidthEv() #14
  %17 = sitofp i32 %16 to float
  %18 = bitcast %class.Tab** %2 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 368
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  %24 = fsub float %23, %15
  %25 = fsub float %17, %15
  %26 = fdiv float %24, %25
  %27 = fcmp olt float %26, 0.000000e+00
  %28 = select i1 %27, float 0.000000e+00, float %26
  %29 = fcmp ogt float %28, 1.000000e+00
  %30 = select i1 %29, float 1.000000e+00, float %28
  %31 = getelementptr inbounds i8, i8* %19, i64 720
  %32 = bitcast i8* %31 to %class.TabController**
  %33 = load %class.TabController*, %class.TabController** %32, align 8
  %34 = fmul float %30, %30
  %35 = bitcast %class.TabController* %33 to float (%class.TabController*, float)***
  %36 = load float (%class.TabController*, float)**, float (%class.TabController*, float)*** %35, align 8
  %37 = getelementptr inbounds float (%class.TabController*, float)*, float (%class.TabController*, float)** %36, i64 39
  %38 = load float (%class.TabController*, float)*, float (%class.TabController*, float)** %37, align 8
  %39 = tail call float %38(%class.TabController* %33, float %34) #14
  br label %40

40:                                               ; preds = %8, %5, %1, %13
  %41 = phi float [ %39, %13 ], [ 0.000000e+00, %8 ], [ 1.000000e+00, %1 ], [ 7.500000e-01, %5 ]
  %42 = load %class.Tab*, %class.Tab** %2, align 8
  %43 = getelementptr inbounds %class.Tab, %class.Tab* %42, i64 0, i32 4
  %44 = load %class.TabController*, %class.TabController** %43, align 8
  %45 = bitcast %class.TabController* %44 to i32 (%class.TabController*, i32, i32)***
  %46 = load i32 (%class.TabController*, i32, i32)**, i32 (%class.TabController*, i32, i32)*** %45, align 8
  %47 = getelementptr inbounds i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %46, i64 34
  %48 = load i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %47, align 8
  %49 = tail call i32 %48(%class.TabController* %44, i32 0, i32 0) #14
  %50 = load %class.Tab*, %class.Tab** %2, align 8
  %51 = getelementptr inbounds %class.Tab, %class.Tab* %50, i64 0, i32 4
  %52 = load %class.TabController*, %class.TabController** %51, align 8
  %53 = bitcast %class.TabController* %52 to i32 (%class.TabController*, i32, i32)***
  %54 = load i32 (%class.TabController*, i32, i32)**, i32 (%class.TabController*, i32, i32)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %54, i64 34
  %56 = load i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %55, align 8
  %57 = tail call i32 %56(%class.TabController* %52, i32 1, i32 0) #14
  %58 = tail call i32 @_ZN11color_utils10AlphaBlendEjjf(i32 %49, i32 %57, float %41) #14
  %59 = load %class.Tab*, %class.Tab** %2, align 8
  %60 = getelementptr inbounds %class.Tab, %class.Tab* %59, i64 0, i32 4
  %61 = load %class.TabController*, %class.TabController** %60, align 8
  %62 = fcmp ule float %41, 5.000000e-01
  %63 = zext i1 %62 to i32
  %64 = bitcast %class.TabController* %61 to i32 (%class.TabController*, i32, i32)***
  %65 = load i32 (%class.TabController*, i32, i32)**, i32 (%class.TabController*, i32, i32)*** %64, align 8
  %66 = getelementptr inbounds i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %65, i64 35
  %67 = load i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %66, align 8
  %68 = tail call i32 %67(%class.TabController* %61, i32 %63, i32 %58) #14
  %69 = zext i32 %58 to i64
  %70 = shl nuw i64 %69, 32
  %71 = zext i32 %68 to i64
  %72 = or i64 %70, %71
  ret i64 %72
}

; Function Attrs: nounwind ssp uwtable
define internal dereferenceable(8) %"class.gfx::FontList"* @_ZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEv(%"class.(anonymous namespace)::GM2TabStyle"* readonly) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %11, !prof !15

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features32kProminentDarkModeActiveTabTitleE) #14
  %9 = zext i1 %8 to i8
  store i8 %9, i8* @_ZZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title, align 1
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title) #14
  br label %11

11:                                               ; preds = %4, %7, %1
  %12 = load i8, i8* @_ZZNK12_GLOBAL__N_111GM2TabStyle11GetFontListEvE25prominent_dark_mode_title, align 1, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %16 = load %class.Tab*, %class.Tab** %15, align 8
  %17 = tail call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %16) #14
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = load %class.Tab*, %class.Tab** %15, align 8
  %20 = getelementptr inbounds %class.Tab, %class.Tab* %19, i64 0, i32 4
  %21 = load %class.TabController*, %class.TabController** %20, align 8
  %22 = bitcast %class.TabController* %21 to i32 (%class.TabController*, i32, i32)***
  %23 = load i32 (%class.TabController*, i32, i32)**, i32 (%class.TabController*, i32, i32)*** %22, align 8
  %24 = getelementptr inbounds i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %23, i64 34
  %25 = load i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %24, align 8
  %26 = tail call i32 %25(%class.TabController* %21, i32 0, i32 0) #14
  %27 = tail call zeroext i1 @_ZN11color_utils6IsDarkEj(i32 %26) #14
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 4
  br label %32

30:                                               ; preds = %11, %18, %14
  %31 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 3
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi %"class.gfx::FontList"* [ %29, %28 ], [ %31, %30 ]
  ret %"class.gfx::FontList"* %33
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_111GM2TabStyle8PaintTabEPN3gfx6CanvasE(%"class.(anonymous namespace)::GM2TabStyle"*, %"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.303", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %7 = bitcast %class.Tab** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  %10 = bitcast i8* %9 to %"class.views::View"*
  %11 = tail call %"class.ui::ThemeProvider"* @_ZNK5views4View16GetThemeProviderEv(%"class.views::View"* %10) #14
  %12 = bitcast %"class.ui::ThemeProvider"* %11 to i1 (%"class.ui::ThemeProvider"*, i32)***
  %13 = load i1 (%"class.ui::ThemeProvider"*, i32)**, i1 (%"class.ui::ThemeProvider"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.ui::ThemeProvider"*, i32)*, i1 (%"class.ui::ThemeProvider"*, i32)** %13, i64 7
  %15 = load i1 (%"class.ui::ThemeProvider"*, i32)*, i1 (%"class.ui::ThemeProvider"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.ui::ThemeProvider"* %11, i32 11417) #14
  br i1 %16, label %17, label %45

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = load i8*, i8** %7, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 688
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #14, !alias.scope !16
  %21 = load i8, i8* %20, align 8, !range !5, !noalias !16
  %22 = icmp eq i8 %21, 0
  %23 = bitcast i8* %19 to %class.Tab*
  br i1 %22, label %32, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds i8, i8* %19, i64 696
  %26 = bitcast i8* %25 to %"class.tab_groups::TabGroupId"*
  %27 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %27, %"class.tab_groups::TabGroupId"* dereferenceable(16) %26) #14
  store i8 1, i8* %18, align 8, !alias.scope !16
  %28 = load %class.Tab*, %class.Tab** %6, align 8
  %29 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %28) #14
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = load %class.Tab*, %class.Tab** %6, align 8
  br label %32

32:                                               ; preds = %30, %17
  %33 = phi %class.Tab* [ %31, %30 ], [ %23, %17 ]
  %34 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %33) #14
  %35 = load %class.Tab*, %class.Tab** %6, align 8
  %36 = getelementptr inbounds %class.Tab, %class.Tab* %35, i64 0, i32 4
  %37 = load %class.TabController*, %class.TabController** %36, align 8
  %38 = bitcast %class.TabController* %37 to i32 (%class.TabController*)***
  %39 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %39, i64 28
  %41 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %40, align 8
  %42 = call i32 %41(%class.TabController* %37) #14
  br label %43

43:                                               ; preds = %24, %32
  %44 = phi i32 [ %42, %32 ], [ 3, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  br label %45

45:                                               ; preds = %43, %2
  %46 = phi i64 [ 1, %43 ], [ 0, %2 ]
  %47 = phi i56 [ 191545475072, %43 ], [ -24019198012642646, %2 ]
  %48 = phi i32 [ %44, %43 ], [ 0, %2 ]
  %49 = load %class.Tab*, %class.Tab** %6, align 8
  %50 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %49) #14
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = zext i56 %47 to i64
  %53 = shl nuw i64 %52, 8
  %54 = or i64 %53, %46
  call fastcc void @_ZNK12_GLOBAL__N_111GM2TabStyle18PaintTabBackgroundEPN3gfx6CanvasE9TabActiveN4absl8optionalIiEEi(%"class.(anonymous namespace)::GM2TabStyle"* %0, %"class.gfx::Canvas"* %1, i32 0, i64 %54, i32 %48)
  br label %140

55:                                               ; preds = %45
  %56 = load %class.Tab*, %class.Tab** %6, align 8
  %57 = getelementptr inbounds %class.Tab, %class.Tab* %56, i64 0, i32 4
  %58 = load %class.TabController*, %class.TabController** %57, align 8
  %59 = bitcast %class.TabController* %58 to i64 (%class.TabController*, i32)***
  %60 = load i64 (%class.TabController*, i32)**, i64 (%class.TabController*, i32)*** %59, align 8
  %61 = getelementptr inbounds i64 (%class.TabController*, i32)*, i64 (%class.TabController*, i32)** %60, i64 36
  %62 = load i64 (%class.TabController*, i32)*, i64 (%class.TabController*, i32)** %61, align 8
  %63 = call i64 %62(%class.TabController* %58, i32 0) #14
  call fastcc void @_ZNK12_GLOBAL__N_111GM2TabStyle18PaintTabBackgroundEPN3gfx6CanvasE9TabActiveN4absl8optionalIiEEi(%"class.(anonymous namespace)::GM2TabStyle"* %0, %"class.gfx::Canvas"* %1, i32 1, i64 %63, i32 0) #14
  %64 = load %class.Tab*, %class.Tab** %6, align 8
  %65 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* %64) #14
  %66 = select i1 %65, double 7.500000e-01, double 0.000000e+00
  %67 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %class.GlowHoverController*, %class.GlowHoverController** %67, align 8
  %69 = icmp eq %class.GlowHoverController* %68, null
  br i1 %69, label %109, label %70

70:                                               ; preds = %55
  %71 = call zeroext i1 @_ZNK19GlowHoverController10ShouldDrawEv(%class.GlowHoverController* nonnull %68) #14
  br i1 %71, label %72, label %109

72:                                               ; preds = %70
  %73 = call i32 @_ZN8TabStyle16GetStandardWidthEv() #14
  %74 = sitofp i32 %73 to float
  %75 = call i32 @_ZN13TabStyleViews23GetMinimumInactiveWidthEv() #14
  %76 = sitofp i32 %75 to float
  %77 = load i8*, i8** %7, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 368
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = sitofp i32 %80 to float
  %82 = fsub float %81, %74
  %83 = fsub float %76, %74
  %84 = fdiv float %82, %83
  %85 = fcmp olt float %84, 0.000000e+00
  %86 = select i1 %85, float 0.000000e+00, float %84
  %87 = fcmp ogt float %86, 1.000000e+00
  %88 = select i1 %87, float 1.000000e+00, float %86
  %89 = getelementptr inbounds i8, i8* %77, i64 720
  %90 = bitcast i8* %89 to %class.TabController**
  %91 = load %class.TabController*, %class.TabController** %90, align 8
  %92 = fmul float %88, %88
  %93 = bitcast %class.TabController* %91 to float (%class.TabController*, float)***
  %94 = load float (%class.TabController*, float)**, float (%class.TabController*, float)*** %93, align 8
  %95 = getelementptr inbounds float (%class.TabController*, float)*, float (%class.TabController*, float)** %94, i64 39
  %96 = load float (%class.TabController*, float)*, float (%class.TabController*, float)** %95, align 8
  %97 = call float %96(%class.TabController* %91, float %92) #14
  %98 = fmul float %97, 0x3FC9999980000000
  %99 = select i1 %65, float %98, float %97
  %100 = load %class.GlowHoverController*, %class.GlowHoverController** %67, align 8
  %101 = icmp eq %class.GlowHoverController* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %72
  %103 = call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %100) #14
  br label %104

104:                                              ; preds = %102, %72
  %105 = phi double [ %103, %102 ], [ 0.000000e+00, %72 ]
  %106 = fpext float %99 to double
  %107 = fmul double %105, %106
  %108 = fadd double %66, %107
  br label %109

109:                                              ; preds = %55, %70, %104
  %110 = phi double [ %108, %104 ], [ %66, %70 ], [ %66, %55 ]
  %111 = fptrunc double %110 to float
  %112 = fcmp ogt float %111, 0.000000e+00
  br i1 %112, label %113, label %140

113:                                              ; preds = %109
  %114 = fmul float %111, 2.550000e+02
  %115 = fcmp ult float %114, 0.000000e+00
  %116 = fadd float %114, 5.000000e-01
  %117 = call float @llvm.floor.f32(float %116) #14
  %118 = fadd float %114, -5.000000e-01
  %119 = call float @llvm.ceil.f32(float %118) #14
  %120 = select i1 %115, float %119, float %117
  %121 = fcmp ule float %120, -1.000000e+00
  %122 = fcmp ugt float %120, 2.550000e+02
  %123 = fptoui float %120 to i8
  %124 = select i1 %121, i8 0, i8 %123
  %125 = xor i1 %121, true
  %126 = sext i1 %125 to i8
  %127 = select i1 %122, i8 %126, i8 %124
  %128 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #14
  %129 = load i8*, i8** %7, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 24
  %131 = bitcast i8* %130 to %"class.views::View"*
  %132 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %131) #14
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %134 = extractvalue { i64, i64 } %132, 0
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %136 = extractvalue { i64, i64 } %132, 1
  store i64 %136, i64* %135, align 8
  call void @_ZN3gfx6Canvas14SaveLayerAlphaEhRKNS_4RectE(%"class.gfx::Canvas"* %1, i8 zeroext %127, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #14
  %137 = zext i56 %47 to i64
  %138 = shl nuw i64 %137, 8
  %139 = or i64 %138, %46
  call fastcc void @_ZNK12_GLOBAL__N_111GM2TabStyle18PaintTabBackgroundEPN3gfx6CanvasE9TabActiveN4absl8optionalIiEEi(%"class.(anonymous namespace)::GM2TabStyle"* %0, %"class.gfx::Canvas"* %1, i32 0, i64 %139, i32 %48)
  call void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"* %1) #14
  br label %140

140:                                              ; preds = %109, %113, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111GM2TabStyle16SetHoverLocationERKN3gfx5PointE(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.GlowHoverController*, %class.GlowHoverController** %3, align 8
  %5 = icmp eq %class.GlowHoverController* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN19GlowHoverController11SetLocationERKN3gfx5PointE(%class.GlowHoverController* nonnull %4, %"class.gfx::Point"* dereferenceable(8) %1) #14
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111GM2TabStyle9ShowHoverEN8TabStyle14ShowHoverStyleE(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.GlowHoverController*, %class.GlowHoverController** %3, align 8
  %5 = icmp eq %class.GlowHoverController* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %10 = load %class.Tab*, %class.Tab** %9, align 8
  %11 = getelementptr inbounds %class.Tab, %class.Tab* %10, i64 0, i32 4
  %12 = load %class.TabController*, %class.TabController** %11, align 8
  %13 = bitcast %class.TabController* %12 to float (%class.TabController*)***
  %14 = load float (%class.TabController*)**, float (%class.TabController*)*** %13, align 8
  %15 = getelementptr inbounds float (%class.TabController*)*, float (%class.TabController*)** %14, i64 40
  %16 = load float (%class.TabController*)*, float (%class.TabController*)** %15, align 8
  %17 = tail call float %16(%class.TabController* %12) #14
  %18 = fpext float %17 to double
  tail call void @_ZN19GlowHoverController21SetSubtleOpacityScaleEd(%class.GlowHoverController* nonnull %4, double %18) #14
  %19 = load %class.GlowHoverController*, %class.GlowHoverController** %3, align 8
  br label %20

20:                                               ; preds = %8, %6
  %21 = phi %class.GlowHoverController* [ %19, %8 ], [ %4, %6 ]
  tail call void @_ZN19GlowHoverController4ShowEN8TabStyle14ShowHoverStyleE(%class.GlowHoverController* %21, i32 %1) #14
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111GM2TabStyle9HideHoverEN8TabStyle14HideHoverStyleE(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.GlowHoverController*, %class.GlowHoverController** %3, align 8
  %5 = icmp eq %class.GlowHoverController* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN19GlowHoverController4HideEN8TabStyle14HideHoverStyleE(%class.GlowHoverController* nonnull %4, i32 %1) #14
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc { <2 x float>, <2 x float> } @_ZN12_GLOBAL__N_111GM2TabStyle19ScaleAndAlignBoundsERKN3gfx4RectEfi(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), float, i32) unnamed_addr #11 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::RectF"*
  %6 = alloca %"class.gfx::InsetsF", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::InsetsF"*
  %9 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  store float %15, float* %9, align 8
  store float %18, float* %10, align 4
  %23 = icmp sgt i32 %20, 0
  %24 = select i1 %23, i32 %20, i32 0
  %25 = sitofp i32 %24 to float
  store float %25, float* %11, align 8
  %26 = icmp sgt i32 %22, 0
  %27 = select i1 %26, i32 %22, i32 0
  %28 = sitofp i32 %27 to float
  store float %28, float* %12, align 4
  %29 = tail call i32 @_ZN8TabStyle15GetCornerRadiusEv() #14
  %30 = bitcast %"class.gfx::InsetsF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %6, i64 0, i32 0
  %32 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %6, i64 0, i32 1
  %33 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %6, i64 0, i32 2
  %34 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %6, i64 0, i32 3
  %35 = sitofp i32 %2 to float
  %36 = sitofp i32 %29 to float
  %37 = tail call i64 @_ZN8TabStyle16GetSeparatorSizeEv() #14
  %38 = trunc i64 %37 to i32
  %39 = add nsw i32 %29, %38
  %40 = sitofp i32 %39 to float
  store float %35, float* %31, align 8
  store float %36, float* %32, align 4
  store float %35, float* %33, align 8
  store float %40, float* %34, align 4
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %5, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %6) #14
  %41 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::PointF"*
  %42 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %41, float %1, float %1) #14
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %42, <2 x float>* %43, align 8
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %45 = bitcast <2 x float>* %44 to %"class.gfx::SizeF"*
  %46 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8) %45, float %1, float %1) #14
  %47 = load float, float* %9, align 8
  %48 = call float @llvm.round.f32(float %47) #14
  %49 = load float, float* %10, align 4
  %50 = call float @llvm.round.f32(float %49) #14
  %51 = extractelement <2 x float> %46, i32 0
  %52 = fadd float %47, %51
  %53 = call float @llvm.round.f32(float %52) #14
  %54 = extractelement <2 x float> %46, i32 1
  %55 = fadd float %49, %54
  %56 = call float @llvm.round.f32(float %55) #14
  %57 = fsub float %53, %48
  %58 = fsub float %56, %50
  %59 = fcmp ogt float %57, 0x3EB0000000000000
  %60 = select i1 %59, float %57, float 0.000000e+00
  %61 = fcmp ogt float %58, 0x3EB0000000000000
  %62 = select i1 %61, float %58, float 0.000000e+00
  store float %48, float* %9, align 8
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 1
  store float %50, float* %63, align 4
  store float %60, float* %11, align 8
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 1
  store float %62, float* %64, align 4
  %65 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #14
  %66 = bitcast %"class.gfx::InsetsF"* %6 to <2 x float>*
  %67 = load <2 x float>, <2 x float>* %66, align 8
  %68 = insertelement <2 x float> undef, float %1, i32 0
  %69 = shufflevector <2 x float> %68, <2 x float> undef, <2 x i32> zeroinitializer
  %70 = fmul <2 x float> %67, %69
  %71 = bitcast float* %33 to <2 x float>*
  %72 = load <2 x float>, <2 x float>* %71, align 8
  %73 = fmul <2 x float> %72, %69
  %74 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %70
  %75 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %73
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %74, <2 x float>* %76, align 8
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %75, <2 x float>* %77, align 8
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %5, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  %78 = load <2 x float>, <2 x float>* %43, align 8
  %79 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %78, 0
  %80 = load <2 x float>, <2 x float>* %44, align 8
  %81 = insertvalue { <2 x float>, <2 x float> } %79, <2 x float> %80, 1
  ret { <2 x float>, <2 x float> } %81
}

declare void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"*, %"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZN8TabStyle15GetCornerRadiusEv() local_unnamed_addr #1

declare i32 @_Z17GetLayoutConstant14LayoutConstant(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base4i18n5IsRTLEv() local_unnamed_addr #1

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath*, float, float, float, i32, i32, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #1

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc float @_ZNK12_GLOBAL__N_111GM2TabStyle19GetSeparatorOpacityEbb(%"class.(anonymous namespace)::GM2TabStyle"* nocapture readonly, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.303", align 8
  %5 = alloca %"class.absl::optional.303", align 8
  %6 = alloca %"class.absl::optional.303", align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %8 = load %class.Tab*, %class.Tab** %7, align 8
  %9 = tail call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %8) #14
  br i1 %9, label %192, label %10

10:                                               ; preds = %3
  %11 = load %class.Tab*, %class.Tab** %7, align 8
  %12 = getelementptr inbounds %class.Tab, %class.Tab* %11, i64 0, i32 4
  %13 = load %class.TabController*, %class.TabController** %12, align 8
  %14 = select i1 %2, i32 -1, i32 1
  %15 = bitcast %class.TabController* %13 to %class.Tab* (%class.TabController*, %class.Tab*, i32)***
  %16 = load %class.Tab* (%class.TabController*, %class.Tab*, i32)**, %class.Tab* (%class.TabController*, %class.Tab*, i32)*** %15, align 8
  %17 = getelementptr inbounds %class.Tab* (%class.TabController*, %class.Tab*, i32)*, %class.Tab* (%class.TabController*, %class.Tab*, i32)** %16, i64 22
  %18 = load %class.Tab* (%class.TabController*, %class.Tab*, i32)*, %class.Tab* (%class.TabController*, %class.Tab*, i32)** %17, align 8
  %19 = tail call %class.Tab* %18(%class.TabController* %13, %class.Tab* %11, i32 %14) #14
  %20 = load %class.Tab*, %class.Tab** %7, align 8
  %21 = select i1 %2, %class.Tab* %19, %class.Tab* %20
  %22 = select i1 %2, %class.Tab* %20, %class.Tab* %19
  %23 = icmp eq %class.Tab* %22, null
  %24 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  br i1 %23, label %65, label %27

27:                                               ; preds = %10
  %28 = getelementptr inbounds %class.Tab, %class.Tab* %22, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #14, !alias.scope !19
  %29 = load i8, i8* %28, align 8, !range !5, !noalias !19
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.Tab, %class.Tab* %22, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %33, %"class.tab_groups::TabGroupId"* dereferenceable(16) %32) #14
  store i8 1, i8* %24, align 8, !alias.scope !19
  %34 = icmp eq %class.Tab* %21, null
  br i1 %34, label %65, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.Tab, %class.Tab* %21, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #14, !alias.scope !22
  %37 = load i8, i8* %36, align 8, !range !5, !noalias !22
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.Tab, %class.Tab* %21, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %41, %"class.tab_groups::TabGroupId"* dereferenceable(16) %40) #14
  store i8 1, i8* %25, align 8, !alias.scope !22
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi i8 [ 0, %35 ], [ 1, %39 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #14, !alias.scope !25
  %44 = load i8, i8* %28, align 8, !range !5, !noalias !25
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.Tab, %class.Tab* %22, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %48, %"class.tab_groups::TabGroupId"* dereferenceable(16) %47) #14
  store i8 1, i8* %26, align 8, !alias.scope !25
  %49 = load i8, i8* %25, align 8, !range !5
  br label %50

50:                                               ; preds = %42, %46
  %51 = phi i8 [ %49, %46 ], [ %43, %42 ]
  %52 = phi i8 [ 1, %46 ], [ 0, %42 ]
  %53 = icmp ne i8 %51, 0
  %54 = icmp ne i8 %52, 0
  %55 = xor i1 %54, %53
  %56 = xor i1 %53, true
  %57 = or i1 %55, %56
  br i1 %57, label %65, label %58

58:                                               ; preds = %50
  %59 = icmp eq i8 %52, 0
  br i1 %59, label %60, label %61, !prof !28

60:                                               ; preds = %58
  call void @llvm.trap() #14
  unreachable

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %64 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"* %62, %"class.tab_groups::TabGroupId"* dereferenceable(16) %63) #14
  br label %65

65:                                               ; preds = %27, %61, %50, %31, %10
  %66 = phi i1 [ false, %10 ], [ true, %31 ], [ %55, %50 ], [ %64, %61 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %67 = load %class.Tab*, %class.Tab** %7, align 8
  %68 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* %67) #14
  br i1 %68, label %69, label %100

69:                                               ; preds = %65
  %70 = icmp eq %class.Tab* %19, null
  %71 = or i1 %70, %66
  br i1 %71, label %192, label %72

72:                                               ; preds = %69
  %73 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* nonnull %19) #14
  br i1 %73, label %74, label %192

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %76 = load %class.GlowHoverController*, %class.GlowHoverController** %75, align 8
  %77 = icmp eq %class.GlowHoverController* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %76) #14
  %80 = fptrunc double %79 to float
  br label %81

81:                                               ; preds = %78, %74
  %82 = phi float [ %80, %78 ], [ 0.000000e+00, %74 ]
  br i1 %1, label %95, label %83

83:                                               ; preds = %81
  %84 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* nonnull %19) #14
  br i1 %84, label %95, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %class.Tab, %class.Tab* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %87 = bitcast %class.TabStyleViews** %86 to %"class.(anonymous namespace)::GM2TabStyle"**
  %88 = load %"class.(anonymous namespace)::GM2TabStyle"*, %"class.(anonymous namespace)::GM2TabStyle"** %87, align 8
  %89 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %88, i64 0, i32 2, i32 0, i32 0, i32 0
  %90 = load %class.GlowHoverController*, %class.GlowHoverController** %89, align 8
  %91 = icmp eq %class.GlowHoverController* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %85
  %93 = call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %90) #14
  %94 = fptrunc double %93 to float
  br label %95

95:                                               ; preds = %81, %83, %85, %92
  %96 = phi float [ 0.000000e+00, %81 ], [ 0.000000e+00, %83 ], [ %94, %92 ], [ 0.000000e+00, %85 ]
  %97 = fcmp olt float %82, %96
  %98 = select i1 %97, float %96, float %82
  %99 = fsub float 1.000000e+00, %98
  br label %192

100:                                              ; preds = %65
  %101 = load %class.Tab*, %class.Tab** %7, align 8
  %102 = getelementptr inbounds %class.Tab, %class.Tab* %101, i64 0, i32 4
  %103 = load %class.TabController*, %class.TabController** %102, align 8
  %104 = bitcast %class.TabController* %103 to i1 (%class.TabController*)***
  %105 = load i1 (%class.TabController*)**, i1 (%class.TabController*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%class.TabController*)*, i1 (%class.TabController*)** %105, i64 30
  %107 = load i1 (%class.TabController*)*, i1 (%class.TabController*)** %106, align 8
  %108 = call zeroext i1 %107(%class.TabController* %103) #14
  br i1 %108, label %109, label %114

109:                                              ; preds = %100
  %110 = icmp eq %class.Tab* %19, null
  %111 = or i1 %110, %66
  br i1 %111, label %192, label %112

112:                                              ; preds = %109
  %113 = call zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab* nonnull %19) #14
  br i1 %113, label %192, label %114

114:                                              ; preds = %112, %100
  br i1 %66, label %115, label %128

115:                                              ; preds = %114
  br i1 %2, label %192, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %118 = load %class.GlowHoverController*, %class.GlowHoverController** %117, align 8
  %119 = icmp eq %class.GlowHoverController* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %118) #14
  %122 = fptrunc double %121 to float
  br label %123

123:                                              ; preds = %116, %120
  %124 = phi float [ %122, %120 ], [ 0.000000e+00, %116 ]
  %125 = fcmp olt float %124, 0.000000e+00
  %126 = select i1 %125, float 0.000000e+00, float %124
  %127 = fsub float 1.000000e+00, %126
  br label %192

128:                                              ; preds = %114
  %129 = icmp ne %class.Tab* %19, null
  %130 = xor i1 %2, true
  %131 = or i1 %129, %130
  br i1 %131, label %164, label %132

132:                                              ; preds = %128
  %133 = load %class.Tab*, %class.Tab** %7, align 8
  %134 = getelementptr inbounds %class.Tab, %class.Tab* %133, i64 0, i32 4
  %135 = load %class.TabController*, %class.TabController** %134, align 8
  %136 = bitcast %class.TabController* %135 to { i64, i64 } (%class.TabController*, %class.Tab*)***
  %137 = load { i64, i64 } (%class.TabController*, %class.Tab*)**, { i64, i64 } (%class.TabController*, %class.Tab*)*** %136, align 8
  %138 = getelementptr inbounds { i64, i64 } (%class.TabController*, %class.Tab*)*, { i64, i64 } (%class.TabController*, %class.Tab*)** %137, i64 37
  %139 = load { i64, i64 } (%class.TabController*, %class.Tab*)*, { i64, i64 } (%class.TabController*, %class.Tab*)** %138, align 8
  %140 = call { i64, i64 } %139(%class.TabController* %135, %class.Tab* %133) #14
  %141 = extractvalue { i64, i64 } %140, 0
  %142 = trunc i64 %141 to i32
  %143 = extractvalue { i64, i64 } %140, 1
  %144 = bitcast %class.Tab** %7 to i8**
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 368
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = trunc i64 %143 to i32
  %150 = icmp slt i32 %148, %149
  %151 = select i1 %150, i32 %149, i32 %148
  %152 = getelementptr inbounds i8, i8* %145, i64 360
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = sub nsw i32 %154, %142
  %156 = icmp slt i32 %155, 0
  %157 = sub nsw i32 0, %155
  %158 = select i1 %156, i32 %157, i32 %155
  %159 = icmp slt i32 %151, %158
  %160 = select i1 %159, i32 %151, i32 %158
  %161 = sitofp i32 %160 to float
  %162 = sitofp i32 %151 to float
  %163 = fdiv float %161, %162
  br label %192

164:                                              ; preds = %128
  %165 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %166 = load %class.GlowHoverController*, %class.GlowHoverController** %165, align 8
  %167 = icmp eq %class.GlowHoverController* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %164
  %169 = call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %166) #14
  %170 = fptrunc double %169 to float
  br label %171

171:                                              ; preds = %168, %164
  %172 = phi float [ %170, %168 ], [ 0.000000e+00, %164 ]
  %173 = xor i1 %1, true
  %174 = and i1 %129, %173
  br i1 %174, label %175, label %187

175:                                              ; preds = %171
  %176 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* nonnull %19) #14
  br i1 %176, label %187, label %177

177:                                              ; preds = %175
  %178 = getelementptr inbounds %class.Tab, %class.Tab* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %179 = bitcast %class.TabStyleViews** %178 to %"class.(anonymous namespace)::GM2TabStyle"**
  %180 = load %"class.(anonymous namespace)::GM2TabStyle"*, %"class.(anonymous namespace)::GM2TabStyle"** %179, align 8
  %181 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %180, i64 0, i32 2, i32 0, i32 0, i32 0
  %182 = load %class.GlowHoverController*, %class.GlowHoverController** %181, align 8
  %183 = icmp eq %class.GlowHoverController* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %177
  %185 = call double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController* nonnull %182) #14
  %186 = fptrunc double %185 to float
  br label %187

187:                                              ; preds = %171, %175, %177, %184
  %188 = phi float [ 0.000000e+00, %171 ], [ 0.000000e+00, %175 ], [ %186, %184 ], [ 0.000000e+00, %177 ]
  %189 = fcmp olt float %172, %188
  %190 = select i1 %189, float %188, float %172
  %191 = fsub float 1.000000e+00, %190
  br label %192

192:                                              ; preds = %109, %95, %123, %132, %187, %69, %72, %112, %115, %3
  %193 = phi float [ 0.000000e+00, %3 ], [ %99, %95 ], [ %127, %123 ], [ %191, %187 ], [ %163, %132 ], [ 0.000000e+00, %69 ], [ 0.000000e+00, %72 ], [ 0.000000e+00, %109 ], [ 0.000000e+00, %112 ], [ 0.000000e+00, %115 ]
  ret float %193
}

declare zeroext i1 @_ZNK3Tab10IsSelectedEv(%class.Tab*) local_unnamed_addr #1

declare zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

declare double @_ZNK19GlowHoverController17GetAnimationValueEv(%class.GlowHoverController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5views6Widget12IsFullscreenEv(%"class.views::Widget"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK19GlowHoverController10ShouldDrawEv(%class.GlowHoverController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5views4View14IsMouseHoveredEv(%"class.views::View"*) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #1

declare void @_ZNK6SkPath6offsetEffPS_(%class.SkPath*, float, float, %class.SkPath*) local_unnamed_addr #1

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare i32 @_ZN11color_utils10AlphaBlendEjjf(i32, i32, float) local_unnamed_addr #1

declare i32 @_ZN8TabStyle16GetStandardWidthEv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #13

declare zeroext i1 @_ZN11color_utils6IsDarkEj(i32) local_unnamed_addr #1

declare %"class.ui::ThemeProvider"* @_ZNK5views4View16GetThemeProviderEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK12_GLOBAL__N_111GM2TabStyle18PaintTabBackgroundEPN3gfx6CanvasE9TabActiveN4absl8optionalIiEEi(%"class.(anonymous namespace)::GM2TabStyle"*, %"class.gfx::Canvas"*, i32, i64, i32) unnamed_addr #11 align 2 {
  %6 = alloca %"class.absl::optional.303", align 8
  %7 = alloca %"class.gfx::ScopedCanvas", align 8
  %8 = alloca %"struct.TabStyle::SeparatorBounds", align 4
  %9 = alloca %"class.cc::PaintFlags", align 8
  %10 = alloca %"class.absl::optional.303", align 8
  %11 = alloca %class.SkPath, align 8
  %12 = alloca %"class.gfx::ScopedCanvas", align 8
  %13 = alloca %"class.cc::PaintFlags", align 8
  %14 = alloca [2 x i32], align 4
  %15 = alloca %"class.cc::PaintFlags", align 8
  %16 = alloca %class.sk_sp.643, align 8
  %17 = alloca { <2 x float>, <2 x float> }, align 8
  %18 = alloca %class.SkPath, align 8
  %19 = alloca %"class.gfx::ScopedCanvas", align 8
  %20 = alloca %"class.cc::PaintFlags", align 8
  %21 = alloca { i64, i64 }, align 8
  %22 = alloca %"class.gfx::ScopedCanvas", align 8
  %23 = alloca <2 x float>, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 1
  %25 = load %class.Tab*, %class.Tab** %24, align 8
  %26 = tail call i64 @_ZNK3Tab13GetGroupColorEv(%class.Tab* %25) #14
  %27 = trunc i64 %26 to i8
  %28 = lshr i64 %26, 32
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i32 %2, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %5
  %32 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %class.GlowHoverController*, %class.GlowHoverController** %32, align 8
  %34 = icmp eq %class.GlowHoverController* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call zeroext i1 @_ZNK19GlowHoverController10ShouldDrawEv(%class.GlowHoverController* nonnull %33) #14
  br label %37

37:                                               ; preds = %35, %31, %5
  %38 = phi i1 [ false, %5 ], [ %36, %35 ], [ false, %31 ]
  %39 = bitcast <2 x float>* %23 to %struct.SkPoint*
  %40 = trunc i64 %3 to i8
  %41 = lshr i64 %3, 32
  %42 = trunc i64 %41 to i32
  %43 = bitcast %class.SkPath* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #14
  %45 = load float, float* %44, align 8
  %46 = icmp eq i32 %2, 0
  %47 = bitcast %"class.(anonymous namespace)::GM2TabStyle"* %0 to void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)***
  %48 = load void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)**, void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)*, void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)** %48, i64 2
  %50 = load void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)*, void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)** %49, align 8
  call void %50(%class.SkPath* nonnull sret %18, %"class.(anonymous namespace)::GM2TabStyle"* %0, i32 0, float %45, i1 zeroext %46, i32 0) #14
  %51 = bitcast %"class.gfx::ScopedCanvas"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false) #14
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %19, %"class.gfx::Canvas"* %1) #14
  %52 = call float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* %1) #14
  call void @_ZN3gfx6Canvas8ClipPathERK6SkPathb(%"class.gfx::Canvas"* %1, %class.SkPath* nonnull dereferenceable(16) %18, i1 zeroext true) #14
  %53 = icmp ne i8 %40, 0
  %54 = or i1 %46, %53
  br i1 %54, label %67, label %55

55:                                               ; preds = %37
  %56 = bitcast %class.Tab** %24 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to %"class.views::View"*
  %60 = call %"class.ui::ThemeProvider"* @_ZNK5views4View16GetThemeProviderEv(%"class.views::View"* %59) #14
  %61 = bitcast %"class.ui::ThemeProvider"* %60 to i32 (%"class.ui::ThemeProvider"*, i32)***
  %62 = load i32 (%"class.ui::ThemeProvider"*, i32)**, i32 (%"class.ui::ThemeProvider"*, i32)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.ui::ThemeProvider"*, i32)*, i32 (%"class.ui::ThemeProvider"*, i32)** %62, i64 5
  %64 = load i32 (%"class.ui::ThemeProvider"*, i32)*, i32 (%"class.ui::ThemeProvider"*, i32)** %63, align 8
  %65 = call i32 %64(%"class.ui::ThemeProvider"* %60, i32 1062) #14
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %162, label %70

67:                                               ; preds = %37
  br i1 %46, label %68, label %162

68:                                               ; preds = %67
  %69 = bitcast %class.Tab** %24 to i8**
  br label %70

70:                                               ; preds = %68, %55
  %71 = phi i8** [ %69, %68 ], [ %56, %55 ]
  %72 = bitcast { i64, i64 }* %21 to %"class.gfx::Rect"*
  %73 = bitcast %"class.cc::PaintFlags"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %73) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK12_GLOBAL__N_111GM2TabStyle15PaintSeparatorsEPN3gfx6CanvasE.flags to i8*), i64 72, i1 false) #14
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %20) #14
  %74 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %20, i64 0, i32 10
  %75 = bitcast %union.anon.677* %74 to i16*
  %76 = load i16, i16* %75, align 8
  %77 = or i16 %76, 1
  store i16 %77, i16* %75, align 8
  %78 = load %class.Tab*, %class.Tab** %24, align 8
  %79 = getelementptr inbounds %class.Tab, %class.Tab* %78, i64 0, i32 4
  %80 = load %class.TabController*, %class.TabController** %79, align 8
  %81 = bitcast %class.TabController* %80 to i32 (%class.TabController*, i32, i32)***
  %82 = load i32 (%class.TabController*, i32, i32)**, i32 (%class.TabController*, i32, i32)*** %81, align 8
  %83 = getelementptr inbounds i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %82, i64 34
  %84 = load i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %83, align 8
  %85 = call i32 %84(%class.TabController* %80, i32 %2, i32 0) #14
  %86 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %20, i64 0, i32 6
  store i32 %85, i32* %86, align 8
  %87 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #14
  %88 = load i8*, i8** %71, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 24
  %90 = bitcast i8* %89 to %"class.views::View"*
  %91 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %90) #14
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = trunc i64 %92 to i32
  %94 = lshr i64 %92, 32
  %95 = trunc i64 %94 to i32
  %96 = extractvalue { i64, i64 } %91, 1
  %97 = fcmp oeq float %52, 1.000000e+00
  br i1 %97, label %152, label %98

98:                                               ; preds = %70
  %99 = sitofp i32 %93 to float
  %100 = fmul float %52, %99
  %101 = call float @llvm.floor.f32(float %100) #14
  %102 = fptosi float %101 to i32
  %103 = sitofp i32 %95 to float
  %104 = fmul float %52, %103
  %105 = call float @llvm.floor.f32(float %104) #14
  %106 = fptosi float %105 to i32
  %107 = trunc i64 %96 to i32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %98
  %110 = add nsw i32 %107, %93
  %111 = sitofp i32 %110 to float
  %112 = fmul float %52, %111
  %113 = call float @llvm.ceil.f32(float %112) #14
  %114 = fptosi float %113 to i32
  br label %115

115:                                              ; preds = %109, %98
  %116 = phi i32 [ %114, %109 ], [ %102, %98 ]
  %117 = lshr i64 %96, 32
  %118 = trunc i64 %117 to i32
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %115
  %121 = add nsw i32 %118, %95
  %122 = sitofp i32 %121 to float
  %123 = fmul float %52, %122
  %124 = call float @llvm.ceil.f32(float %123) #14
  %125 = fptosi float %124 to i32
  br label %126

126:                                              ; preds = %120, %115
  %127 = phi i32 [ %125, %120 ], [ %106, %115 ]
  %128 = sub nsw i32 %116, %102
  %129 = sub nsw i32 %127, %106
  %130 = icmp sgt i32 %102, 0
  %131 = icmp sgt i32 %128, 0
  %132 = and i1 %130, %131
  %133 = sub nuw nsw i32 2147483647, %102
  %134 = icmp ult i32 %133, %128
  %135 = and i1 %134, %132
  %136 = select i1 %135, i32 %133, i32 %128
  %137 = icmp sgt i32 %106, 0
  %138 = icmp sgt i32 %129, 0
  %139 = and i1 %137, %138
  %140 = sub nuw nsw i32 2147483647, %106
  %141 = icmp ult i32 %140, %129
  %142 = and i1 %141, %139
  %143 = select i1 %142, i32 %140, i32 %129
  %144 = icmp sgt i32 %136, 0
  %145 = select i1 %144, i32 %136, i32 0
  %146 = zext i32 %145 to i64
  %147 = icmp sgt i32 %143, 0
  %148 = select i1 %147, i32 %143, i32 0
  %149 = zext i32 %148 to i64
  %150 = shl nuw nsw i64 %149, 32
  %151 = or i64 %150, %146
  br label %152

152:                                              ; preds = %126, %70
  %153 = phi i32 [ %106, %126 ], [ %95, %70 ]
  %154 = phi i32 [ %102, %126 ], [ %93, %70 ]
  %155 = phi i64 [ %151, %126 ], [ %96, %70 ]
  %156 = zext i32 %153 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %154 to i64
  %159 = or i64 %157, %158
  %160 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  store i64 %155, i64* %161, align 8
  call void @_ZN3gfx6Canvas8DrawRectERKNS_4RectERKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %72, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %20) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %20) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %73) #14
  br label %162

162:                                              ; preds = %152, %67, %55
  br i1 %53, label %163, label %201

163:                                              ; preds = %162
  %164 = bitcast %"class.gfx::ScopedCanvas"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 16, i1 false) #14
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %22, %"class.gfx::Canvas"* %1) #14
  %165 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 4
  %166 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %165, align 8
  %167 = bitcast %"class.cc::PaintCanvas"* %166 to void (%"class.cc::PaintCanvas"*, float, float)***
  %168 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %168, i64 12
  %170 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %169, align 8
  call void %170(%"class.cc::PaintCanvas"* %166, float %52, float %52) #14
  %171 = bitcast %class.Tab** %24 to i8**
  %172 = load i8*, i8** %171, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 24
  %174 = bitcast i8* %173 to %"class.views::View"*
  %175 = call %"class.ui::ThemeProvider"* @_ZNK5views4View16GetThemeProviderEv(%"class.views::View"* %174) #14
  %176 = bitcast %"class.ui::ThemeProvider"* %175 to %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)***
  %177 = load %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)**, %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)*** %176, align 8
  %178 = getelementptr inbounds %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)*, %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)** %177, i64 2
  %179 = load %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)*, %"class.gfx::ImageSkia"* (%"class.ui::ThemeProvider"*, i32)** %178, align 8
  %180 = call %"class.gfx::ImageSkia"* %179(%"class.ui::ThemeProvider"* %175, i32 %42) #14
  %181 = load i8*, i8** %171, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 24
  %183 = bitcast i8* %182 to %"class.views::View"*
  %184 = call i32 @_ZNK5views4View12GetMirroredXEv(%"class.views::View"* %183) #14
  %185 = load %class.Tab*, %class.Tab** %24, align 8
  %186 = getelementptr inbounds %class.Tab, %class.Tab* %185, i64 0, i32 4
  %187 = load %class.TabController*, %class.TabController** %186, align 8
  %188 = bitcast %class.TabController* %187 to i32 (%class.TabController*)***
  %189 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %188, align 8
  %190 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %189, i64 27
  %191 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %190, align 8
  %192 = call i32 %191(%class.TabController* %187) #14
  %193 = add nsw i32 %192, %184
  %194 = load i8*, i8** %171, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 368
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds i8, i8* %194, i64 372
  %199 = bitcast i8* %198 to i32*
  %200 = load i32, i32* %199, align 4
  call void @_ZN3gfx6Canvas12TileImageIntERKNS_9ImageSkiaEiiiiiif10SkTileModeS4_PN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::ImageSkia"* dereferenceable(8) %180, i32 %193, i32 0, i32 0, i32 %4, i32 %197, i32 %200, float 1.000000e+00, i32 1, i32 1, %"class.cc::PaintFlags"* null) #14
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #14
  br label %201

201:                                              ; preds = %163, %162
  br i1 %38, label %204, label %202

202:                                              ; preds = %201
  %203 = bitcast %class.Tab** %24 to i8**
  br label %293

204:                                              ; preds = %201
  %205 = bitcast <2 x float>* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #14
  %206 = getelementptr inbounds %"class.(anonymous namespace)::GM2TabStyle", %"class.(anonymous namespace)::GM2TabStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %207 = load %class.GlowHoverController*, %class.GlowHoverController** %206, align 8
  %208 = getelementptr inbounds %class.GlowHoverController, %class.GlowHoverController* %207, i64 0, i32 3
  %209 = call <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* dereferenceable(8) %208) #14
  store <2 x float> %209, <2 x float>* %23, align 8
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %39, float %52, %struct.SkPoint* nonnull %39) #14
  %210 = bitcast %class.Tab** %24 to i8**
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr inbounds i8, i8* %211, i64 368
  %213 = bitcast i8* %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = sitofp i32 %214 to float
  %216 = fmul float %215, 2.500000e-01
  %217 = fcmp olt float %216, 1.600000e+01
  %218 = select i1 %217, float 1.600000e+01, float %216
  %219 = fmul float %52, %218
  %220 = getelementptr inbounds i8, i8* %211, i64 720
  %221 = bitcast i8* %220 to %class.TabController**
  %222 = load %class.TabController*, %class.TabController** %221, align 8
  %223 = bitcast %class.TabController* %222 to i32 (%class.TabController*, i32, i32)***
  %224 = load i32 (%class.TabController*, i32, i32)**, i32 (%class.TabController*, i32, i32)*** %223, align 8
  %225 = getelementptr inbounds i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %224, i64 34
  %226 = load i32 (%class.TabController*, i32, i32)*, i32 (%class.TabController*, i32, i32)** %225, align 8
  %227 = call i32 %226(%class.TabController* %222, i32 0, i32 0) #14
  %228 = load %class.GlowHoverController*, %class.GlowHoverController** %206, align 8
  %229 = call zeroext i8 @_ZNK19GlowHoverController8GetAlphaEv(%class.GlowHoverController* %228) #14
  %230 = zext i8 %229 to i32
  %231 = and i32 %227, 16777215
  %232 = shl nuw i32 %230, 24
  %233 = or i32 %232, %231
  %234 = bitcast %class.sk_sp.643* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #14
  %235 = bitcast { <2 x float>, <2 x float> }* %17 to %struct.SkRect*
  %236 = bitcast [2 x i32]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #14
  %237 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 0
  %238 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 1
  store i32 %233, i32* %237, align 4
  store i32 %231, i32* %238, align 4
  %239 = bitcast %"class.cc::PaintFlags"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %239) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %239, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK12_GLOBAL__N_111GM2TabStyle15PaintSeparatorsEPN3gfx6CanvasE.flags to i8*), i64 72, i1 false) #14
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %15) #14
  %240 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %15, i64 0, i32 10
  %241 = bitcast %union.anon.677* %240 to i16*
  %242 = load i16, i16* %241, align 8
  %243 = or i16 %242, 1
  store i16 %243, i16* %241, align 8
  call void @_ZN2cc11PaintShader18MakeRadialGradientERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp.643* nonnull sret %16, %struct.SkPoint* nonnull dereferenceable(8) %39, float %219, i32* nonnull %237, float* null, i32 2, i32 0, i32 0, %class.SkMatrix* null, i32 0) #14
  %244 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %15, i64 0, i32 1
  %245 = getelementptr inbounds %class.sk_sp.643, %class.sk_sp.643* %16, i64 0, i32 0
  %246 = bitcast %class.sk_sp.643* %16 to i64*
  %247 = load i64, i64* %246, align 8
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %245, align 8
  %248 = getelementptr inbounds %class.sk_sp.643, %class.sk_sp.643* %244, i64 0, i32 0
  %249 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %248, align 8
  %250 = bitcast %class.sk_sp.643* %244 to i64*
  store i64 %247, i64* %250, align 8
  %251 = icmp eq %"class.cc::PaintShader"* %249, null
  br i1 %251, label %262, label %252

252:                                              ; preds = %204
  %253 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %249, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = atomicrmw add i32* %253, i32 -1 acq_rel
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %262

256:                                              ; preds = %252
  %257 = bitcast %"class.cc::PaintShader"* %249 to %class.SkRefCntBase*
  %258 = bitcast %"class.cc::PaintShader"* %249 to void (%class.SkRefCntBase*)***
  %259 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %258, align 8
  %260 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %259, i64 2
  %261 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %260, align 8
  call void %261(%class.SkRefCntBase* nonnull %257) #14
  br label %262

262:                                              ; preds = %256, %252, %204
  %263 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %245, align 8
  %264 = icmp eq %"class.cc::PaintShader"* %263, null
  br i1 %264, label %275, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %263, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = atomicrmw add i32* %266, i32 -1 acq_rel
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %269, label %275

269:                                              ; preds = %265
  %270 = bitcast %"class.cc::PaintShader"* %263 to %class.SkRefCntBase*
  %271 = bitcast %"class.cc::PaintShader"* %263 to void (%class.SkRefCntBase*)***
  %272 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %271, align 8
  %273 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %272, i64 2
  %274 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %273, align 8
  call void %274(%class.SkRefCntBase* nonnull %270) #14
  br label %275

275:                                              ; preds = %269, %265, %262
  %276 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 4
  %277 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %276, align 8
  %278 = bitcast { <2 x float>, <2 x float> }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #14
  %279 = load <2 x float>, <2 x float>* %23, align 8
  %280 = insertelement <2 x float> undef, float %219, i32 0
  %281 = shufflevector <2 x float> %280, <2 x float> undef, <2 x i32> zeroinitializer
  %282 = fsub <2 x float> %279, %281
  %283 = fmul float %219, 2.000000e+00
  %284 = insertelement <2 x float> undef, float %283, i32 0
  %285 = shufflevector <2 x float> %284, <2 x float> undef, <2 x i32> zeroinitializer
  %286 = fadd <2 x float> %285, %282
  %287 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %17, i64 0, i32 0
  store <2 x float> %282, <2 x float>* %287, align 8
  %288 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %17, i64 0, i32 1
  store <2 x float> %286, <2 x float>* %288, align 8
  %289 = bitcast %"class.cc::PaintCanvas"* %277 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %290 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %289, align 8
  %291 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %290, i64 28
  %292 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %291, align 8
  call void %292(%"class.cc::PaintCanvas"* %277, %struct.SkRect* nonnull dereferenceable(16) %235, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %239) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #14
  br label %293

293:                                              ; preds = %202, %275
  %294 = phi i8** [ %203, %202 ], [ %210, %275 ]
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #14
  %295 = load %class.Tab*, %class.Tab** %24, align 8
  %296 = getelementptr inbounds %class.Tab, %class.Tab* %295, i64 0, i32 4
  %297 = load %class.TabController*, %class.TabController** %296, align 8
  %298 = bitcast %class.TabController* %297 to i32 (%class.TabController*)***
  %299 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %298, align 8
  %300 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %299, i64 32
  %301 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %300, align 8
  %302 = call i32 %301(%class.TabController* %297) #14
  %303 = icmp eq i8 %27, 0
  %304 = select i1 %303, i32 %302, i32 %29
  %305 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %305) #14
  %306 = load i8*, i8** %294, align 8
  %307 = getelementptr inbounds i8, i8* %306, i64 688
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %305, i8 0, i64 24, i1 false) #14, !alias.scope !29
  %308 = load i8, i8* %307, align 8, !range !5, !noalias !29
  %309 = icmp eq i8 %308, 0
  %310 = bitcast i8* %306 to %class.Tab*
  br i1 %309, label %320, label %311

311:                                              ; preds = %293
  %312 = getelementptr inbounds i8, i8* %306, i64 696
  %313 = bitcast i8* %312 to %"class.tab_groups::TabGroupId"*
  %314 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %314, %"class.tab_groups::TabGroupId"* dereferenceable(16) %313) #14
  store i8 1, i8* %305, align 8, !alias.scope !29
  %315 = load %class.Tab*, %class.Tab** %24, align 8
  %316 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %315) #14
  br i1 %316, label %317, label %318

317:                                              ; preds = %311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #14
  br label %335

318:                                              ; preds = %311
  %319 = load %class.Tab*, %class.Tab** %24, align 8
  br label %320

320:                                              ; preds = %318, %293
  %321 = phi %class.Tab* [ %319, %318 ], [ %310, %293 ]
  %322 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %321) #14
  %323 = or i1 %46, %322
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #14
  br label %354

325:                                              ; preds = %320
  %326 = load %class.Tab*, %class.Tab** %24, align 8
  %327 = getelementptr inbounds %class.Tab, %class.Tab* %326, i64 0, i32 4
  %328 = load %class.TabController*, %class.TabController** %327, align 8
  %329 = bitcast %class.TabController* %328 to i32 (%class.TabController*)***
  %330 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %329, align 8
  %331 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %330, i64 28
  %332 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %331, align 8
  %333 = call i32 %332(%class.TabController* %328) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %305) #14
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %354, label %335

335:                                              ; preds = %325, %317
  %336 = phi i32 [ 3, %317 ], [ %333, %325 ]
  %337 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %337) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %337, i8 -86, i64 16, i1 false) #14
  %338 = load float, float* %44, align 8
  %339 = load void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)**, void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)*** %47, align 8
  %340 = getelementptr inbounds void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)*, void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)** %339, i64 2
  %341 = load void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)*, void (%class.SkPath*, %"class.(anonymous namespace)::GM2TabStyle"*, i32, float, i1, i32)** %340, align 8
  call void %341(%class.SkPath* nonnull sret %11, %"class.(anonymous namespace)::GM2TabStyle"* %0, i32 1, float %338, i1 zeroext %46, i32 0) #14
  %342 = bitcast %"class.gfx::ScopedCanvas"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %342) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %342, i8 -86, i64 16, i1 false) #14
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %12, %"class.gfx::Canvas"* %1) #14
  %343 = call float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* %1) #14
  %344 = bitcast %"class.cc::PaintFlags"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %344) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %344, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK12_GLOBAL__N_111GM2TabStyle15PaintSeparatorsEPN3gfx6CanvasE.flags to i8*), i64 72, i1 false) #14
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %13) #14
  %345 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %13, i64 0, i32 10
  %346 = bitcast %union.anon.677* %345 to i16*
  %347 = load i16, i16* %346, align 8
  %348 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %13, i64 0, i32 6
  store i32 %304, i32* %348, align 8
  %349 = and i16 %347, -194
  %350 = or i16 %349, 65
  store i16 %350, i16* %346, align 8
  %351 = sitofp i32 %336 to float
  %352 = fmul float %343, %351
  %353 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %13, i64 0, i32 7
  store float %352, float* %353, align 4
  call void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %class.SkPath* nonnull dereferenceable(16) %11, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %13) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %344) #14
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %342) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %337) #14
  br label %354

354:                                              ; preds = %324, %325, %335
  %355 = call fastcc float @_ZNK12_GLOBAL__N_111GM2TabStyle19GetSeparatorOpacityEbb(%"class.(anonymous namespace)::GM2TabStyle"* %0, i1 zeroext false, i1 zeroext true) #14
  %356 = bitcast float %355 to i32
  %357 = call fastcc float @_ZNK12_GLOBAL__N_111GM2TabStyle19GetSeparatorOpacityEbb(%"class.(anonymous namespace)::GM2TabStyle"* %0, i1 zeroext false, i1 zeroext false) #14
  %358 = bitcast float %357 to i32
  %359 = call zeroext i1 @_ZN4base4i18n5IsRTLEv() #14
  %360 = select i1 %359, i32 %358, i32 %356
  %361 = select i1 %359, i32 %356, i32 %358
  %362 = bitcast i32 %360 to float
  %363 = bitcast i32 %361 to float
  %364 = fcmp une float %362, 0.000000e+00
  %365 = fcmp une float %363, 0.000000e+00
  %366 = or i1 %364, %365
  br i1 %366, label %367, label %480

367:                                              ; preds = %354
  %368 = bitcast %"class.gfx::ScopedCanvas"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %368) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 -86, i64 16, i1 false) #14
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %7, %"class.gfx::Canvas"* %1) #14
  %369 = call float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* %1) #14
  %370 = bitcast %"struct.TabStyle::SeparatorBounds"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %370) #14
  %371 = getelementptr inbounds %"struct.TabStyle::SeparatorBounds", %"struct.TabStyle::SeparatorBounds"* %8, i64 0, i32 0
  %372 = getelementptr inbounds %"struct.TabStyle::SeparatorBounds", %"struct.TabStyle::SeparatorBounds"* %8, i64 0, i32 0, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.TabStyle::SeparatorBounds", %"struct.TabStyle::SeparatorBounds"* %8, i64 0, i32 0, i32 0, i32 1
  %374 = getelementptr inbounds %"struct.TabStyle::SeparatorBounds", %"struct.TabStyle::SeparatorBounds"* %8, i64 0, i32 0, i32 1, i32 0
  %375 = getelementptr inbounds %"struct.TabStyle::SeparatorBounds", %"struct.TabStyle::SeparatorBounds"* %8, i64 0, i32 0, i32 1, i32 1
  %376 = getelementptr inbounds %"struct.TabStyle::SeparatorBounds", %"struct.TabStyle::SeparatorBounds"* %8, i64 0, i32 1
  %377 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %376, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %370, i8 -1, i64 32, i1 false) #14
  %378 = load i8*, i8** %294, align 8, !noalias !32
  %379 = getelementptr inbounds i8, i8* %378, i64 360
  %380 = bitcast i8* %379 to %"class.gfx::Rect"*
  %381 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %381) #14, !noalias !32
  %382 = getelementptr inbounds i8, i8* %378, i64 688
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %381, i8 0, i64 24, i1 false) #14, !alias.scope !35, !noalias !32
  %383 = load i8, i8* %382, align 8, !range !5, !noalias !38
  %384 = icmp eq i8 %383, 0
  %385 = bitcast i8* %378 to %class.Tab*
  br i1 %384, label %394, label %386

386:                                              ; preds = %367
  %387 = getelementptr inbounds i8, i8* %378, i64 696
  %388 = bitcast i8* %387 to %"class.tab_groups::TabGroupId"*
  %389 = getelementptr inbounds %"class.absl::optional.303", %"class.absl::optional.303"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %389, %"class.tab_groups::TabGroupId"* dereferenceable(16) %388) #14
  store i8 1, i8* %381, align 8, !alias.scope !35, !noalias !32
  %390 = load %class.Tab*, %class.Tab** %24, align 8, !noalias !32
  %391 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %390) #14
  br i1 %391, label %406, label %392

392:                                              ; preds = %386
  %393 = load %class.Tab*, %class.Tab** %24, align 8, !noalias !32
  br label %394

394:                                              ; preds = %392, %367
  %395 = phi %class.Tab* [ %393, %392 ], [ %385, %367 ]
  %396 = call zeroext i1 @_ZNK3Tab8IsActiveEv(%class.Tab* %395) #14
  br i1 %396, label %397, label %406

397:                                              ; preds = %394
  %398 = load %class.Tab*, %class.Tab** %24, align 8, !noalias !32
  %399 = getelementptr inbounds %class.Tab, %class.Tab* %398, i64 0, i32 4
  %400 = load %class.TabController*, %class.TabController** %399, align 8
  %401 = bitcast %class.TabController* %400 to i32 (%class.TabController*)***
  %402 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %401, align 8
  %403 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %402, i64 28
  %404 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %403, align 8
  %405 = call i32 %404(%class.TabController* %400) #14
  br label %406

406:                                              ; preds = %397, %394, %386
  %407 = phi i32 [ %405, %397 ], [ 3, %386 ], [ 0, %394 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %381) #14, !noalias !32
  %408 = call fastcc { <2 x float>, <2 x float> } @_ZN12_GLOBAL__N_111GM2TabStyle19ScaleAndAlignBoundsERKN3gfx4RectEfi(%"class.gfx::Rect"* dereferenceable(16) %380, float %369, i32 %407) #14, !noalias !32
  %409 = extractvalue { <2 x float>, <2 x float> } %408, 0
  %410 = extractvalue { <2 x float>, <2 x float> } %408, 1
  %411 = call i32 @_ZN8TabStyle15GetCornerRadiusEv() #14, !noalias !32
  %412 = sitofp i32 %411 to float
  %413 = fmul float %369, %412
  %414 = fptosi float %413 to i32
  %415 = call i64 @_ZN8TabStyle16GetSeparatorSizeEv() #14, !noalias !32
  %416 = trunc i64 %415 to i32
  %417 = lshr i64 %415, 32
  %418 = trunc i64 %417 to i32
  %419 = icmp sgt i32 %416, 0
  %420 = select i1 %419, i32 %416, i32 0
  %421 = sitofp i32 %420 to float
  %422 = icmp sgt i32 %418, 0
  %423 = select i1 %422, i32 %418, i32 0
  %424 = sitofp i32 %423 to float
  %425 = fmul float %369, %421
  %426 = fmul float %369, %424
  %427 = fcmp ogt float %425, 0x3EB0000000000000
  %428 = select i1 %427, float %425, float 0.000000e+00
  %429 = fcmp ogt float %426, 0x3EB0000000000000
  %430 = select i1 %429, float %426, float 0.000000e+00
  %431 = extractelement <2 x float> %409, i32 0
  %432 = sitofp i32 %414 to float
  %433 = fadd float %431, %432
  %434 = extractelement <2 x float> %409, i32 1
  %435 = extractelement <2 x float> %410, i32 1
  %436 = fsub float %435, %430
  %437 = fmul float %436, 5.000000e-01
  %438 = fadd float %434, %437
  store float %433, float* %372, align 4, !alias.scope !32
  store float %438, float* %373, align 4, !alias.scope !32
  store float %428, float* %374, align 4, !alias.scope !32
  store float %430, float* %375, align 4, !alias.scope !32
  %439 = bitcast %"class.gfx::RectF"* %376 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %439, i8* nonnull align 4 %370, i64 16, i1 false) #14, !alias.scope !32
  %440 = extractelement <2 x float> %410, i32 0
  %441 = fadd float %431, %440
  %442 = fadd float %428, %432
  %443 = fsub float %441, %442
  store float %443, float* %377, align 4, !alias.scope !32
  %444 = load i8*, i8** %294, align 8, !noalias !32
  %445 = getelementptr inbounds i8, i8* %444, i64 360
  %446 = bitcast i8* %445 to i32*
  %447 = load i32, i32* %446, align 4, !noalias !32
  %448 = sitofp i32 %447 to float
  %449 = getelementptr inbounds i8, i8* %444, i64 364
  %450 = bitcast i8* %449 to i32*
  %451 = load i32, i32* %450, align 4, !noalias !32
  %452 = sitofp i32 %451 to float
  %453 = fmul float %369, %448
  %454 = fmul float %369, %452
  %455 = fsub float -0.000000e+00, %453
  %456 = fsub float -0.000000e+00, %454
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nonnull %371, float %455, float %456) #14
  call void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* %376, float %455, float %456) #14
  %457 = load %class.Tab*, %class.Tab** %24, align 8
  %458 = getelementptr inbounds %class.Tab, %class.Tab* %457, i64 0, i32 4
  %459 = load %class.TabController*, %class.TabController** %458, align 8
  %460 = bitcast %class.TabController* %459 to i32 (%class.TabController*)***
  %461 = load i32 (%class.TabController*)**, i32 (%class.TabController*)*** %460, align 8
  %462 = getelementptr inbounds i32 (%class.TabController*)*, i32 (%class.TabController*)** %461, i64 33
  %463 = load i32 (%class.TabController*)*, i32 (%class.TabController*)** %462, align 8
  %464 = call i32 %463(%class.TabController* %459) #14
  %465 = bitcast %"class.cc::PaintFlags"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %465) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %465, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK12_GLOBAL__N_111GM2TabStyle15PaintSeparatorsEPN3gfx6CanvasE.flags to i8*), i64 72, i1 false) #14
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %9) #14
  %466 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 10
  %467 = bitcast %union.anon.677* %466 to i16*
  %468 = load i16, i16* %467, align 8
  %469 = or i16 %468, 1
  store i16 %469, i16* %467, align 8
  %470 = fpext float %362 to double
  %471 = call i32 @_ZN3gfx5Tween15IntValueBetweenEdii(double %470, i32 0, i32 255) #14
  %472 = and i32 %464, 16777215
  %473 = shl i32 %471, 24
  %474 = or i32 %473, %472
  %475 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %9, i64 0, i32 6
  store i32 %474, i32* %475, align 8
  call void @_ZN3gfx6Canvas8DrawRectERKNS_5RectFERKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::RectF"* nonnull dereferenceable(16) %371, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %9) #14
  %476 = fpext float %363 to double
  %477 = call i32 @_ZN3gfx5Tween15IntValueBetweenEdii(double %476, i32 0, i32 255) #14
  %478 = shl i32 %477, 24
  %479 = or i32 %478, %472
  store i32 %479, i32* %475, align 8
  call void @_ZN3gfx6Canvas8DrawRectERKNS_5RectFERKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::RectF"* dereferenceable(16) %376, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %9) #14
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %465) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %370) #14
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %368) #14
  br label %480

480:                                              ; preds = %354, %406
  ret void
}

declare void @_ZN3gfx6Canvas14SaveLayerAlphaEhRKNS_4RectE(%"class.gfx::Canvas"*, i8 zeroext, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"*) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"*) local_unnamed_addr #1

declare i64 @_ZNK3Tab13GetGroupColorEv(%class.Tab*) local_unnamed_addr #1

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #1

declare float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"*) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas8ClipPathERK6SkPathb(%"class.gfx::Canvas"*, %class.SkPath* dereferenceable(16), i1 zeroext) local_unnamed_addr #1

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

declare void @_ZN3gfx6Canvas8DrawRectERKNS_4RectERKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::Rect"* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

declare void @_ZN3gfx6Canvas12TileImageIntERKNS_9ImageSkiaEiiiiiif10SkTileModeS4_PN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::ImageSkia"* dereferenceable(8), i32, i32, i32, i32, i32, i32, float, i32, i32, %"class.cc::PaintFlags"*) local_unnamed_addr #1

declare i32 @_ZNK5views4View12GetMirroredXEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #3

declare <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i8 @_ZNK19GlowHoverController8GetAlphaEv(%class.GlowHoverController*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #1

declare void @_ZN2cc11PaintShader18MakeRadialGradientERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp.643* sret, %struct.SkPoint* dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix*, i32) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas8DrawRectERKNS_5RectFERKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::RectF"* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"*, float, float) local_unnamed_addr #1

declare i32 @_ZN3gfx5Tween15IntValueBetweenEdii(double, i32, i32) local_unnamed_addr #1

declare void @_ZN19GlowHoverController11SetLocationERKN3gfx5PointE(%class.GlowHoverController*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN19GlowHoverController21SetSubtleOpacityScaleEd(%class.GlowHoverController*, double) local_unnamed_addr #1

declare void @_ZN19GlowHoverController4ShowEN8TabStyle14ShowHoverStyleE(%class.GlowHoverController*, i32) local_unnamed_addr #1

declare void @_ZN19GlowHoverController4HideEN8TabStyle14HideHoverStyleE(%class.GlowHoverController*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nofree nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11TabSlotView5groupEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11TabSlotView5groupEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN7SkRRect10MakeRectXYERK6SkRectff: argument 0"}
!8 = distinct !{!8, !"_ZN7SkRRect10MakeRectXYERK6SkRectff"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!11 = distinct !{!11, !"_ZN8SkMatrix5ScaleEff"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK11TabSlotView5groupEv: argument 0"}
!14 = distinct !{!14, !"_ZNK11TabSlotView5groupEv"}
!15 = !{!"branch_weights", i32 1, i32 1048575}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK11TabSlotView5groupEv: argument 0"}
!18 = distinct !{!18, !"_ZNK11TabSlotView5groupEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK11TabSlotView5groupEv: argument 0"}
!21 = distinct !{!21, !"_ZNK11TabSlotView5groupEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK11TabSlotView5groupEv: argument 0"}
!24 = distinct !{!24, !"_ZNK11TabSlotView5groupEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK11TabSlotView5groupEv: argument 0"}
!27 = distinct !{!27, !"_ZNK11TabSlotView5groupEv"}
!28 = !{!"branch_weights", i32 1, i32 2000}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK11TabSlotView5groupEv: argument 0"}
!31 = distinct !{!31, !"_ZNK11TabSlotView5groupEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK12_GLOBAL__N_111GM2TabStyle18GetSeparatorBoundsEf: argument 0"}
!34 = distinct !{!34, !"_ZNK12_GLOBAL__N_111GM2TabStyle18GetSeparatorBoundsEf"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK11TabSlotView5groupEv: argument 0"}
!37 = distinct !{!37, !"_ZNK11TabSlotView5groupEv"}
!38 = !{!36, !33}
