; ModuleID = '../../sql/recover_module/table.cc'
source_filename = "../../sql/recover_module/table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.sql::recover::VirtualTable" = type { %struct.sqlite3_vtab, %struct.sqlite3_file*, i32, i32, %"class.std::__1::vector" }
%struct.sqlite3_vtab = type { %struct.sqlite3_module*, i32, i8* }
%struct.sqlite3_module = type { i32, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3*, i8*, i32, i8**, %struct.sqlite3_vtab**, i8**)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_index_info*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, %struct.sqlite3_vtab_cursor**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, i32, i8*, i32, %struct.sqlite3_value**)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*)*, i32 (%struct.sqlite3_vtab_cursor*, %struct.sqlite3_context*, i32)*, i32 (%struct.sqlite3_vtab_cursor*, i64*)*, i32 (%struct.sqlite3_vtab*, i32, %struct.sqlite3_value**, i64*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*)*, i32 (%struct.sqlite3_vtab*, i32, i8*, void (%struct.sqlite3_context*, i32, %struct.sqlite3_value**)**, i8**)*, i32 (%struct.sqlite3_vtab*, i8*)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (%struct.sqlite3_vtab*, i32)*, i32 (i8*)* }
%struct.sqlite3_index_info = type { i32, %"struct.sqlite3_index_info::sqlite3_index_constraint"*, i32, %"struct.sqlite3_index_info::sqlite3_index_orderby"*, %"struct.sqlite3_index_info::sqlite3_index_constraint_usage"*, i32, i8*, i32, i32, double, i64, i32, i64 }
%"struct.sqlite3_index_info::sqlite3_index_constraint" = type { i32, i8, i8, i32 }
%"struct.sqlite3_index_info::sqlite3_index_orderby" = type { i32, i8 }
%"struct.sqlite3_index_info::sqlite3_index_constraint_usage" = type { i32, i8 }
%struct.sqlite3_vtab_cursor = type { %struct.sqlite3_vtab* }
%struct.sqlite3_value = type opaque
%struct.sqlite3_context = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"*, %"class.std::__1::__compressed_pair.10" }
%"struct.sql::recover::RecoveredColumnSpec" = type <{ %"class.std::__1::basic_string", i32, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.sql::recover::RecoveredColumnSpec"* }
%struct.sqlite3 = type opaque
%struct.sqlite3_file = type { %struct.sqlite3_io_methods* }
%struct.sqlite3_io_methods = type { i32, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i8*, i32, i64)*, i32 (%struct.sqlite3_file*, i64)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i32*)*, i32 (%struct.sqlite3_file*, i32, i8*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32, i32, i32, i8**)*, i32 (%struct.sqlite3_file*, i32, i32, i32)*, void (%struct.sqlite3_file*)*, i32 (%struct.sqlite3_file*, i32)*, i32 (%struct.sqlite3_file*, i64, i32, i8**)*, i32 (%struct.sqlite3_file*, i64, i8*)* }
%"struct.sql::recover::TargetTableSpec" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%struct.sqlite3_stmt = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string"* }
%"class.sql::recover::VirtualCursor" = type { %struct.sqlite3_vtab_cursor, %"class.sql::recover::VirtualTable"*, %"class.sql::recover::DatabasePageReader", %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::RecordReader", %"class.std::__1::vector.50", %"class.std::__1::unique_ptr.58" }
%"class.sql::recover::DatabasePageReader" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.24", %"class.sql::recover::VirtualTable"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }
%"class.sql::recover::LeafPayloadReader" = type { %"class.sql::recover::DatabasePageReader"*, i64, i32, i32, i32, i32, i32, %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.sql::recover::RecordReader" = type <{ %"class.std::__1::vector.37", %"class.std::__1::vector.44", %"class.sql::recover::LeafPayloadReader"*, i32, [4 x i8] }>
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"*, %"class.std::__1::__compressed_pair.39" }
%"struct.sql::recover::RecordReader::ValueHeader" = type <{ i64, i64, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.sql::recover::RecordReader::ValueHeader"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i8*, i8*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.std::__1::unique_ptr.52"*, %"class.std::__1::unique_ptr.52"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::unique_ptr.52" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::unique_ptr.52"* }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.sql::recover::LeafPageDecoder"* }
%"class.sql::recover::LeafPageDecoder" = type <{ i64, %"class.sql::recover::DatabasePageReader"*, i32, i32, i64, i64, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [14 x i8] c"sqlite_master\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"SELECT rootpage FROM \00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c".sqlite_master WHERE type='table' AND tbl_name=?\00", align 1
@_ZZNK3sql7recover12VirtualTable16ToCreateTableSqlEvE20kCreateTableSqlStart = internal unnamed_addr constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0), i64 15 }, align 8
@.str.3 = private unnamed_addr constant [16 x i8] c"CREATE TABLE t(\00", align 1
@_ZZNK3sql7recover12VirtualTable16ToCreateTableSqlEvE18kCreateTableSqlEnd = internal unnamed_addr constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i64 1 }, align 8
@.str.4 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c",\00", align 1

@_ZN3sql7recover12VirtualTableC1EP7sqlite3P12sqlite3_fileiiNSt3__16vectorINS0_19RecoveredColumnSpecENS6_9allocatorIS8_EEEE = hidden unnamed_addr alias void (%"class.sql::recover::VirtualTable"*, %struct.sqlite3*, %struct.sqlite3_file*, i32, i32, %"class.std::__1::vector"*), void (%"class.sql::recover::VirtualTable"*, %struct.sqlite3*, %struct.sqlite3_file*, i32, i32, %"class.std::__1::vector"*)* @_ZN3sql7recover12VirtualTableC2EP7sqlite3P12sqlite3_fileiiNSt3__16vectorINS0_19RecoveredColumnSpecENS6_9allocatorIS8_EEEE
@_ZN3sql7recover12VirtualTableD1Ev = hidden unnamed_addr alias void (%"class.sql::recover::VirtualTable"*), void (%"class.sql::recover::VirtualTable"*)* @_ZN3sql7recover12VirtualTableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3sql7recover18GetTableRootPageIdEP7sqlite3RKNS0_15TargetTableSpecE(%struct.sqlite3*, %"struct.sql::recover::TargetTableSpec"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %5 = alloca %struct.sqlite3_stmt*, align 8
  %6 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 13
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %97, label %19

19:                                               ; preds = %2, %16
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast [3 x %"class.base::BasicStringPiece"]* %4 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #10
  %25 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0
  %26 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 1
  store i64 21, i64* %27, align 8
  %28 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 0
  %29 = bitcast %"struct.sql::recover::TargetTableSpec"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"struct.sql::recover::TargetTableSpec"* %1 to i8*
  %36 = select i1 %32, i8* %34, i8* %35
  store i8* %36, i8** %28, align 8
  %37 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 1
  %38 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %31 to i64
  %41 = select i1 %32, i64 %39, i64 %40
  store i64 %41, i64* %37, align 8
  %42 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 1
  store i64 48, i64* %43, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %3, i64 3, %"class.base::BasicStringPiece"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #10
  %44 = bitcast %struct.sqlite3_stmt** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  store %struct.sqlite3_stmt* inttoptr (i64 -6148914691236517206 to %struct.sqlite3_stmt*), %struct.sqlite3_stmt** %5, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8*, i8** %21, align 8
  %50 = load i64, i64* %22, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i8* %49, i8* %20
  %53 = select i1 %48, i64 %50, i64 %51
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = call i32 @chrome_sqlite3_prepare_v3(%struct.sqlite3* %0, i8* %52, i32 %55, i32 4, %struct.sqlite3_stmt** nonnull %5, i8** null) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %89

58:                                               ; preds = %19
  %59 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %5, align 8
  %60 = load i8, i8* %8, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = load i64, i64* %11, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %66 = zext i8 %60 to i64
  %67 = select i1 %61, i8* %63, i8* %65
  %68 = select i1 %61, i64 %64, i64 %66
  %69 = trunc i64 %68 to i32
  %70 = call i32 @chrome_sqlite3_bind_text(%struct.sqlite3_stmt* %59, i32 1, i8* %67, i32 %69, void (i8*)* null) #10
  %71 = icmp eq i32 %70, 0
  %72 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %5, align 8
  br i1 %71, label %75, label %73

73:                                               ; preds = %58
  %74 = call i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt* %72) #10
  br label %89

75:                                               ; preds = %58
  %76 = call i32 @chrome_sqlite3_step(%struct.sqlite3_stmt* %72) #10
  %77 = icmp eq i32 %76, 100
  %78 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %5, align 8
  br i1 %77, label %81, label %79

79:                                               ; preds = %75
  %80 = call i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt* %78) #10
  br label %89

81:                                               ; preds = %75
  %82 = call i64 @chrome_sqlite3_column_int64(%struct.sqlite3_stmt* %78, i32 0) #10
  %83 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %5, align 8
  %84 = call i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt* %83) #10
  %85 = add i64 %82, -1
  %86 = icmp ult i64 %85, 2147483647
  %87 = zext i1 %86 to i64
  %88 = select i1 %86, i64 %82, i64 0
  br label %89

89:                                               ; preds = %81, %19, %79, %73
  %90 = phi i64 [ 0, %79 ], [ 0, %73 ], [ 0, %19 ], [ %87, %81 ]
  %91 = phi i64 [ 0, %79 ], [ 0, %73 ], [ 0, %19 ], [ %88, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  %92 = load i8, i8* %46, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %95) #11
  br label %96

96:                                               ; preds = %89, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br label %97

97:                                               ; preds = %16, %96
  %98 = phi i64 [ %90, %96 ], [ 1, %16 ]
  %99 = phi i64 [ %91, %96 ], [ 1, %16 ]
  %100 = shl i64 %99, 32
  %101 = and i64 %98, 255
  %102 = or i64 %100, %101
  ret i64 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @chrome_sqlite3_prepare_v3(%struct.sqlite3*, i8*, i32, i32, %struct.sqlite3_stmt**, i8**) local_unnamed_addr #2

declare i32 @chrome_sqlite3_bind_text(%struct.sqlite3_stmt*, i32, i8*, i32, void (i8*)*) local_unnamed_addr #2

declare i32 @chrome_sqlite3_finalize(%struct.sqlite3_stmt*) local_unnamed_addr #2

declare i32 @chrome_sqlite3_step(%struct.sqlite3_stmt*) local_unnamed_addr #2

declare i64 @chrome_sqlite3_column_int64(%struct.sqlite3_stmt*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3sql7recover19GetDatabasePageSizeEP12sqlite3_file(%struct.sqlite3_file*) local_unnamed_addr #0 {
  %2 = alloca [100 x i8], align 16
  %3 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 100, i1 false)
  %4 = call i32 @_ZN3sql7recover18DatabasePageReader7RawReadEP12sqlite3_fileilPh(%struct.sqlite3_file* %0, i32 100, i64 0, i8* nonnull %3) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %1
  %7 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 16
  %8 = load i8, i8* %7, align 16
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 8
  %11 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 17
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = or i32 %10, %13
  %15 = add nsw i32 %14, -512
  %16 = icmp ult i32 %15, 65025
  %17 = call i32 @llvm.ctpop.i32(i32 %14) #10, !range !2
  %18 = icmp ult i32 %17, 2
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %6
  %21 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 20
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 59
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 1
  %28 = select i1 %27, i32 0, i32 11
  %29 = zext i32 %14 to i64
  %30 = shl nuw nsw i64 %29, 32
  %31 = select i1 %27, i64 %30, i64 0
  br label %32

32:                                               ; preds = %24, %6, %20, %1
  %33 = phi i32 [ %4, %1 ], [ 11, %6 ], [ 11, %20 ], [ %28, %24 ]
  %34 = phi i64 [ 0, %1 ], [ 0, %6 ], [ 0, %20 ], [ %31, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %3) #10
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN3sql7recover18DatabasePageReader7RawReadEP12sqlite3_fileilPh(%struct.sqlite3_file*, i32, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i32, %"class.sql::recover::VirtualTable"* } @_ZN3sql7recover12VirtualTable6CreateEP7sqlite3NS0_15TargetTableSpecENSt3__16vectorINS0_19RecoveredColumnSpecENS5_9allocatorIS7_EEEE(%struct.sqlite3*, %"struct.sql::recover::TargetTableSpec"*, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [100 x i8], align 16
  %5 = alloca %struct.sqlite3_file*, align 8
  %6 = tail call i64 @_ZN3sql7recover18GetTableRootPageIdEP7sqlite3RKNS0_15TargetTableSpecE(%struct.sqlite3* %0, %"struct.sql::recover::TargetTableSpec"* dereferenceable(48) %1)
  %7 = trunc i64 %6 to i8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %89, label %9

9:                                                ; preds = %3
  %10 = lshr i64 %6, 32
  %11 = trunc i64 %10 to i32
  %12 = bitcast %struct.sqlite3_file** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  store %struct.sqlite3_file* inttoptr (i64 -6148914691236517206 to %struct.sqlite3_file*), %struct.sqlite3_file** %5, align 8
  %13 = bitcast %"struct.sql::recover::TargetTableSpec"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.sql::recover::TargetTableSpec", %"struct.sql::recover::TargetTableSpec"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  br label %22

20:                                               ; preds = %9
  %21 = bitcast %"struct.sql::recover::TargetTableSpec"* %1 to i8*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %19, %17 ], [ %21, %20 ]
  %24 = call i32 @chrome_sqlite3_file_control(%struct.sqlite3* %0, i8* %23, i32 7, i8* nonnull %12) #10
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %86

26:                                               ; preds = %22
  %27 = load %struct.sqlite3_file*, %struct.sqlite3_file** %5, align 8
  %28 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 100, i1 false) #10
  %29 = call i32 @_ZN3sql7recover18DatabasePageReader7RawReadEP12sqlite3_fileilPh(%struct.sqlite3_file* %27, i32 100, i64 0, i8* nonnull %28) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %57

31:                                               ; preds = %26
  %32 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 16
  %33 = load i8, i8* %32, align 16
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 17
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %35, %38
  %40 = add nsw i32 %39, -512
  %41 = icmp ult i32 %40, 65025
  %42 = call i32 @llvm.ctpop.i32(i32 %39) #10, !range !2
  %43 = icmp ult i32 %42, 2
  %44 = and i1 %41, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %31
  %46 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 20
  %47 = load i8, i8* %46, align 4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 59
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 1
  %53 = select i1 %52, i32 0, i32 11
  %54 = zext i32 %39 to i64
  %55 = shl nuw nsw i64 %54, 32
  %56 = select i1 %52, i64 %55, i64 0
  br label %57

57:                                               ; preds = %26, %31, %45, %49
  %58 = phi i32 [ %29, %26 ], [ 11, %31 ], [ 11, %45 ], [ %53, %49 ]
  %59 = phi i64 [ 0, %26 ], [ 0, %31 ], [ 0, %45 ], [ %56, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %28) #10
  %60 = trunc i64 %59 to i32
  %61 = or i32 %58, %60
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %86

63:                                               ; preds = %57
  %64 = lshr i64 %59, 32
  %65 = trunc i64 %64 to i32
  %66 = call i8* @_Znwm(i64 64) #11
  %67 = bitcast %struct.sqlite3_file** %5 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #10
  %75 = getelementptr inbounds i8, i8* %66, i64 24
  %76 = bitcast i8* %75 to i64*
  store i64 %68, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %66, i64 32
  %78 = bitcast i8* %77 to i32*
  store i32 %11, i32* %78, align 8
  %79 = getelementptr inbounds i8, i8* %66, i64 36
  %80 = bitcast i8* %79 to i32*
  store i32 %65, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %66, i64 40
  %82 = bitcast i8* %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8
  %83 = getelementptr inbounds i8, i8* %66, i64 56
  %84 = bitcast i8* %83 to i64*
  store i64 %73, i64* %84, align 8
  %85 = ptrtoint i8* %66 to i64
  br label %86

86:                                               ; preds = %57, %63, %22
  %87 = phi i32 [ %24, %22 ], [ %61, %57 ], [ 0, %63 ]
  %88 = phi i64 [ 0, %22 ], [ 0, %57 ], [ %85, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %89

89:                                               ; preds = %3, %86
  %90 = phi i32 [ %87, %86 ], [ 11, %3 ]
  %91 = phi i64 [ %88, %86 ], [ 0, %3 ]
  %92 = insertvalue { i32, %"class.sql::recover::VirtualTable"* } undef, i32 %90, 0
  %93 = inttoptr i64 %91 to %"class.sql::recover::VirtualTable"*
  %94 = insertvalue { i32, %"class.sql::recover::VirtualTable"* } %92, %"class.sql::recover::VirtualTable"* %93, 1
  ret { i32, %"class.sql::recover::VirtualTable"* } %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @chrome_sqlite3_file_control(%struct.sqlite3*, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover12VirtualTableC2EP7sqlite3P12sqlite3_fileiiNSt3__16vectorINS0_19RecoveredColumnSpecENS6_9allocatorIS8_EEEE(%"class.sql::recover::VirtualTable"* nocapture, %struct.sqlite3* nocapture readnone, %struct.sqlite3_file*, i32, i32, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 1
  store %struct.sqlite3_file* %2, %struct.sqlite3_file** %7, align 8
  %8 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 3
  store i32 %4, i32* %9, align 4
  %10 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = bitcast %"class.std::__1::vector"* %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %16 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover12VirtualTableD2Ev(%"class.sql::recover::VirtualTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %3, align 8
  %5 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %4 to i8*
  %8 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %8, align 8
  %10 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %12, i64 -1
  %14 = bitcast %"struct.sql::recover::RecoveredColumnSpec"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"struct.sql::recover::RecoveredColumnSpec"* %4, %"struct.sql::recover::RecoveredColumnSpec"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3sql7recover12VirtualTable16ToCreateTableSqlEv(%"class.std::__1::basic_string"* noalias sret, %"class.sql::recover::VirtualTable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.17", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::vector.17"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %1, i64 0, i32 4
  %12 = getelementptr inbounds %"class.sql::recover::VirtualTable", %"class.sql::recover::VirtualTable"* %1, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast %"struct.sql::recover::RecoveredColumnSpec"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 5
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.17"* nonnull %3, i64 %18)
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %20 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %19, align 8
  %21 = load %"struct.sql::recover::RecoveredColumnSpec"*, %"struct.sql::recover::RecoveredColumnSpec"** %12, align 8
  %22 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %20, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  br label %31

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %27 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %86

31:                                               ; preds = %100, %23
  %32 = phi i64* [ %24, %23 ], [ %27, %100 ]
  %33 = bitcast [3 x %"class.base::BasicStringPiece"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #10
  %34 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 bitcast (%"class.base::BasicStringPiece"* @_ZZNK3sql7recover12VirtualTable16ToCreateTableSqlEvE20kCreateTableSqlStart to i8*), i64 16, i1 false)
  %35 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  %36 = bitcast %"class.std::__1::vector.17"* %3 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %32, align 8
  %39 = sub i64 %38, %37
  %40 = sdiv exact i64 %39, 24
  %41 = inttoptr i64 %37 to %"class.std::__1::basic_string"*
  call void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* nonnull sret %6, i64 %40, %"class.std::__1::basic_string"* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #10
  %42 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = select i1 %46, i8* %48, i8* %35
  store i8* %49, i8** %42, align 8
  %50 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %45 to i64
  %54 = select i1 %46, i64 %52, i64 %53
  store i64 %54, i64* %50, align 8
  %55 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 2
  %56 = bitcast %"class.base::BasicStringPiece"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 bitcast (%"class.base::BasicStringPiece"* @_ZZNK3sql7recover12VirtualTable16ToCreateTableSqlEvE18kCreateTableSqlEnd to i8*), i64 16, i1 false)
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 3, %"class.base::BasicStringPiece"* nonnull %34) #10
  %57 = load i8, i8* %44, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %31
  %60 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %31, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #10
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %63 = icmp eq %"class.std::__1::basic_string"* %62, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %67 = icmp eq %"class.std::__1::basic_string"* %66, %62
  br i1 %67, label %83, label %68

68:                                               ; preds = %64, %78
  %69 = phi %"class.std::__1::basic_string"* [ %70, %78 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 -1
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %75, %68
  %79 = icmp eq %"class.std::__1::basic_string"* %70, %62
  br i1 %79, label %80, label %68

80:                                               ; preds = %78
  %81 = bitcast %"class.std::__1::vector.17"* %3 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %64
  %84 = phi i8* [ %82, %80 ], [ %65, %64 ]
  store %"class.std::__1::basic_string"* %62, %"class.std::__1::basic_string"** %9, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %61, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void

86:                                               ; preds = %25, %100
  %87 = phi %"struct.sql::recover::RecoveredColumnSpec"* [ %20, %25 ], [ %101, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  call void @_ZNK3sql7recover19RecoveredColumnSpec16ToCreateTableSqlEv(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.sql::recover::RecoveredColumnSpec"* %87) #10
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %90 = icmp ult %"class.std::__1::basic_string"* %88, %89
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %26, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #10
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 1
  %94 = ptrtoint %"class.std::__1::basic_string"* %93 to i64
  store i64 %94, i64* %27, align 8
  br label %100

95:                                               ; preds = %86
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.17"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %96 = load i8, i8* %29, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %99) #11
  br label %100

100:                                              ; preds = %91, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %101 = getelementptr inbounds %"struct.sql::recover::RecoveredColumnSpec", %"struct.sql::recover::RecoveredColumnSpec"* %87, i64 1
  %102 = icmp eq %"struct.sql::recover::RecoveredColumnSpec"* %101, %21
  br i1 %102, label %31, label %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.17"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

declare void @_ZNK3sql7recover19RecoveredColumnSpec16ToCreateTableSqlEv(%"class.std::__1::basic_string"* sret, %"struct.sql::recover::RecoveredColumnSpec"*) local_unnamed_addr #2

declare void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* sret, i64, %"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.sql::recover::VirtualCursor"* @_ZN3sql7recover12VirtualTable12CreateCursorEv(%"class.sql::recover::VirtualTable"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 208) #11
  %3 = bitcast i8* %2 to %"class.sql::recover::VirtualCursor"*
  tail call void @_ZN3sql7recover13VirtualCursorC1EPNS0_12VirtualTableE(%"class.sql::recover::VirtualCursor"* nonnull %3, %"class.sql::recover::VirtualTable"* %0) #10
  ret %"class.sql::recover::VirtualCursor"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN3sql7recover13VirtualCursorC1EPNS0_12VirtualTableE(%"class.sql::recover::VirtualCursor"*, %"class.sql::recover::VirtualTable"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3sql7recover12VirtualTable16WillDeleteCursorEPNS0_13VirtualCursorE(%"class.sql::recover::VirtualTable"* nocapture, %"class.sql::recover::VirtualCursor"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.17"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
