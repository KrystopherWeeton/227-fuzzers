; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_animation.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_animation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CompositorAnimation" = type { %"class.cc::AnimationDelegate", %class.scoped_refptr, %"class.blink::CompositorAnimationDelegate"* }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.cc::Animation"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.cc::Animation" = type { i32 (...)**, %"class.base::RefCounted", %"class.cc::AnimationHost"*, %"class.cc::AnimationTimeline"*, %"class.cc::AnimationDelegate"*, i32, %"class.std::__1::unique_ptr.103" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::AnimationHost" = type { %"class.cc::MutatorHost", %"class.cc::LayerTreeMutatorClient", %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.std::__1::unordered_map.22", %"class.cc::MutatorHostClient"*, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.52", i32, i8, %"class.std::__1::unique_ptr.58", i64, i8, i8, i8, i8, i8, %"class.std::__1::vector.64", %"class.base::WeakPtrFactory" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.0", %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.14", [4 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.scoped_refptr* }
%"class.std::__1::unordered_map.22" = type { %"class.std::__1::__hash_table.23" }
%"class.std::__1::__hash_table.23" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.42", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base.27"** }
%"struct.std::__1::__hash_node_base.27" = type { %"struct.std::__1::__hash_node_base.27"* }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__bucket_list_deallocator.29" }
%"class.std::__1::__bucket_list_deallocator.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.27" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.cc::ScrollOffsetAnimations"* }
%"class.cc::ScrollOffsetAnimations" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.cc::ScrollOffsetAnimationsImpl"* }
%"class.cc::ScrollOffsetAnimationsImpl" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.cc::LayerTreeMutator"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"class.std::__1::__compressed_pair.66" }
%"struct.cc::MutatorHost::PendingThroughputTrackerInfo" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.71 }
%class.scoped_refptr.71 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.73" }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i8 }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.78", [4 x i8], %"class.std::__1::unordered_map.79", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.78" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map.79" = type { %"class.std::__1::__hash_table.80" }
%"class.std::__1::__hash_table.80" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.84"** }
%"struct.std::__1::__hash_node_base.84" = type { %"struct.std::__1::__hash_node_base.84"* }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__bucket_list_deallocator.86" }
%"class.std::__1::__bucket_list_deallocator.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.84" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cc::KeyframeEffect"* }
%"class.cc::KeyframeEffect" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.113" }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i32 }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.cc::WorkletAnimation" = type <{ %"class.cc::Animation", %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.137", %"class.absl::optional", i8, [3 x i8], i32, i8, [7 x i8] }>
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.cc::AnimationOptions"* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.cc::AnimationEffectTimings"* }
%"class.absl::optional.137" = type { %"class.absl::optional_internal::optional_data.138" }
%"class.absl::optional_internal::optional_data.138" = type { %"class.absl::optional_internal::optional_data_base.139" }
%"class.absl::optional_internal::optional_data_base.139" = type { %"class.absl::optional_internal::optional_data_dtor_base.140" }
%"class.absl::optional_internal::optional_data_dtor_base.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.cc::ElementId" = type { i64 }
%"class.blink::CompositorKeyframeModel" = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.cc::KeyframeModel"* }
%"class.cc::KeyframeModel" = type <{ %"class.gfx::KeyframeModel", i32, [4 x i8], %"class.cc::KeyframeModel::TargetPropertyId", %"struct.cc::ElementId", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::KeyframeModel" = type { i32 (...)**, %"class.std::__1::unique_ptr.148", i32, i32, i32, double, double, i32, double, i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.gfx::AnimationCurve"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.cc::KeyframeModel::TargetPropertyId" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>

@_ZTVN5blink19CompositorAnimationE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositorAnimation"*, i64, i32, i32)* @_ZN5blink19CompositorAnimation22NotifyAnimationStartedEN4base9TimeTicksEii to i8*), i8* bitcast (void (%"class.blink::CompositorAnimation"*, i64, i32, i32)* @_ZN5blink19CompositorAnimation23NotifyAnimationFinishedEN4base9TimeTicksEii to i8*), i8* bitcast (void (%"class.blink::CompositorAnimation"*, i64, i32, i32)* @_ZN5blink19CompositorAnimation22NotifyAnimationAbortedEN4base9TimeTicksEii to i8*), i8* bitcast (void (%"class.blink::CompositorAnimation"*, i64, i32, i64, %"class.gfx::AnimationCurve"*)* @_ZN5blink19CompositorAnimation23NotifyAnimationTakeoverEN4base9TimeTicksEiS2_NSt3__110unique_ptrIN3gfx14AnimationCurveENS3_14default_deleteIS6_EEEE to i8*), i8* bitcast (void (%"class.blink::CompositorAnimation"*, i8, i64)* @_ZN5blink19CompositorAnimation22NotifyLocalTimeUpdatedEN4absl8optionalIN4base9TimeDeltaEEE to i8*), i8* bitcast (void (%"class.blink::CompositorAnimation"*)* @_ZN5blink19CompositorAnimationD2Ev to i8*), i8* bitcast (void (%"class.blink::CompositorAnimation"*)* @_ZN5blink19CompositorAnimationD0Ev to i8*)] }, align 8

@_ZN5blink19CompositorAnimationC1E13scoped_refptrIN2cc9AnimationEE = hidden unnamed_addr alias void (%"class.blink::CompositorAnimation"*, %"class.cc::Animation"*), void (%"class.blink::CompositorAnimation"*, %"class.cc::Animation"*)* @_ZN5blink19CompositorAnimationC2E13scoped_refptrIN2cc9AnimationEE
@_ZN5blink19CompositorAnimationD1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorAnimation"*), void (%"class.blink::CompositorAnimation"*)* @_ZN5blink19CompositorAnimationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::CompositorAnimation"* @_ZN5blink19CompositorAnimation6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i32 @_ZN2cc19AnimationIdProvider15NextAnimationIdEv() #8
  %2 = tail call %"class.cc::Animation"* @_ZN2cc9Animation6CreateEi(i32 %1) #8
  %3 = tail call i8* @_Znwm(i64 24) #9
  %4 = bitcast i8* %3 to %"class.blink::CompositorAnimation"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink19CompositorAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to %"class.cc::Animation"**
  store %"class.cc::Animation"* %2, %"class.cc::Animation"** %7, align 8
  %8 = icmp eq %"class.cc::Animation"* %2, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %0
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i8* %10 to %"class.blink::CompositorAnimationDelegate"**
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %11, align 8
  br label %28

12:                                               ; preds = %0
  %13 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %2, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #8
  %14 = getelementptr inbounds i8, i8* %3, i64 16
  %15 = bitcast i8* %14 to %"class.blink::CompositorAnimationDelegate"**
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %15, align 8
  %16 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #8
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 -2
  %23 = bitcast %"class.base::RefCounted"* %22 to %"class.cc::Animation"*
  %24 = bitcast %"class.base::RefCounted"* %22 to void (%"class.cc::Animation"*)***
  %25 = load void (%"class.cc::Animation"*)**, void (%"class.cc::Animation"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %25, i64 8
  %27 = load void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %26, align 8
  tail call void %27(%"class.cc::Animation"* nonnull %23) #8
  br label %28

28:                                               ; preds = %21, %12, %9
  ret %"class.blink::CompositorAnimation"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.cc::Animation"* @_ZN2cc9Animation6CreateEi(i32) local_unnamed_addr #2

declare i32 @_ZN2cc19AnimationIdProvider15NextAnimationIdEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::CompositorAnimation"* @_ZN5blink19CompositorAnimation22CreateWorkletAnimationEN2cc18WorkletAnimationIdERKN3WTF6StringEdNSt3__110unique_ptrINS1_16AnimationOptionsENS7_14default_deleteIS9_EEEENS8_INS1_22AnimationEffectTimingsENSA_ISD_EEEE(i64, %"class.WTF::String"* dereferenceable(8), double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %1, i32 0) #8
  %8 = call %"class.cc::WorkletAnimation"* @_ZN2cc16WorkletAnimation6CreateENS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEE(i64 %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, double %2, %"class.cc::AnimationOptions"* %3, %"class.cc::AnimationEffectTimings"* %4) #8
  %9 = call i8* @_Znwm(i64 24) #9
  %10 = bitcast i8* %9 to %"class.blink::CompositorAnimation"*
  %11 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %8, i64 0, i32 0
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink19CompositorAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = bitcast i8* %13 to %"class.cc::Animation"**
  store %"class.cc::Animation"* %11, %"class.cc::Animation"** %14, align 8
  %15 = icmp eq %"class.cc::WorkletAnimation"* %8, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = getelementptr inbounds i8, i8* %9, i64 16
  %18 = bitcast i8* %17 to %"class.blink::CompositorAnimationDelegate"**
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %18, align 8
  br label %35

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %8, i64 0, i32 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #8
  %21 = getelementptr inbounds i8, i8* %9, i64 16
  %22 = bitcast i8* %21 to %"class.blink::CompositorAnimationDelegate"**
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %22, align 8
  %23 = getelementptr inbounds %"class.cc::WorkletAnimation", %"class.cc::WorkletAnimation"* %8, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #8
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 -2
  %30 = bitcast %"class.base::RefCounted"* %29 to %"class.cc::Animation"*
  %31 = bitcast %"class.base::RefCounted"* %29 to void (%"class.cc::Animation"*)***
  %32 = load void (%"class.cc::Animation"*)**, void (%"class.cc::Animation"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %32, i64 8
  %34 = load void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %33, align 8
  call void %34(%"class.cc::Animation"* nonnull %30) #8
  br label %35

35:                                               ; preds = %28, %19, %16
  %36 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret %"class.blink::CompositorAnimation"* %10
}

declare %"class.cc::WorkletAnimation"* @_ZN2cc16WorkletAnimation6CreateENS_18WorkletAnimationIdERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdNS2_10unique_ptrINS_16AnimationOptionsENS2_14default_deleteISC_EEEENSB_INS_22AnimationEffectTimingsENSD_ISG_EEEE(i64, %"class.std::__1::basic_string"* dereferenceable(24), double, %"class.cc::AnimationOptions"*, %"class.cc::AnimationEffectTimings"*) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimationC2E13scoped_refptrIN2cc9AnimationEE(%"class.blink::CompositorAnimation"* nocapture, %"class.cc::Animation"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink19CompositorAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  store %"class.cc::Animation"* %1, %"class.cc::Animation"** %4, align 8
  %5 = icmp eq %"class.cc::Animation"* %1, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %7, align 8
  br label %23

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #8
  %10 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %10, align 8
  %11 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #8
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %11, i64 -2
  %18 = bitcast %"class.base::RefCounted"* %17 to %"class.cc::Animation"*
  %19 = bitcast %"class.base::RefCounted"* %17 to void (%"class.cc::Animation"*)***
  %20 = load void (%"class.cc::Animation"*)**, void (%"class.cc::Animation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %20, i64 8
  %22 = load void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %21, align 8
  tail call void %22(%"class.cc::Animation"* nonnull %18) #8
  br label %23

23:                                               ; preds = %6, %8, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimationD2Ev(%"class.blink::CompositorAnimation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink19CompositorAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %5, i64 0, i32 4
  store %"class.cc::AnimationDelegate"* null, %"class.cc::AnimationDelegate"** %6, align 8
  %7 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  %8 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %7, i64 0, i32 3
  %9 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %8, align 8
  %10 = icmp eq %"class.cc::AnimationTimeline"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = icmp eq %"class.cc::Animation"* %7, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %7, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #8
  br label %15

15:                                               ; preds = %11, %13
  tail call void @_ZN2cc17AnimationTimeline15DetachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"* nonnull %9, %"class.cc::Animation"* %7) #8
  %16 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  br label %17

17:                                               ; preds = %1, %15
  %18 = phi %"class.cc::Animation"* [ %7, %1 ], [ %16, %15 ]
  %19 = icmp eq %"class.cc::Animation"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.cc::Animation"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.cc::Animation"*)***
  %30 = load void (%"class.cc::Animation"*)**, void (%"class.cc::Animation"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %30, i64 8
  %32 = load void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %31, align 8
  tail call void %32(%"class.cc::Animation"* nonnull %28) #8
  br label %33

33:                                               ; preds = %17, %20, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation20SetAnimationDelegateEPNS_27CompositorAnimationDelegateE(%"class.blink::CompositorAnimation"*, %"class.blink::CompositorAnimationDelegate"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  store %"class.blink::CompositorAnimationDelegate"* %1, %"class.blink::CompositorAnimationDelegate"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  %6 = icmp eq %"class.blink::CompositorAnimationDelegate"* %1, null
  %7 = select i1 %6, %"class.blink::CompositorAnimation"* null, %"class.blink::CompositorAnimation"* %0
  %8 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %5, i64 0, i32 4
  store %"class.cc::AnimationDelegate"* %8, %"class.cc::AnimationDelegate"** %9, align 8
  ret void
}

declare void @_ZN2cc17AnimationTimeline15DetachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"*, %"class.cc::Animation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimationD0Ev(%"class.blink::CompositorAnimation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink19CompositorAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  store %"class.blink::CompositorAnimationDelegate"* null, %"class.blink::CompositorAnimationDelegate"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %5, i64 0, i32 4
  store %"class.cc::AnimationDelegate"* null, %"class.cc::AnimationDelegate"** %6, align 8
  %7 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  %8 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %7, i64 0, i32 3
  %9 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %8, align 8
  %10 = icmp eq %"class.cc::AnimationTimeline"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = icmp eq %"class.cc::Animation"* %7, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %7, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #8
  br label %15

15:                                               ; preds = %13, %11
  tail call void @_ZN2cc17AnimationTimeline15DetachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"* nonnull %9, %"class.cc::Animation"* %7) #8
  %16 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi %"class.cc::Animation"* [ %7, %1 ], [ %16, %15 ]
  %19 = icmp eq %"class.cc::Animation"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.cc::Animation"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.cc::Animation"*)***
  %30 = load void (%"class.cc::Animation"*)**, void (%"class.cc::Animation"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %30, i64 8
  %32 = load void (%"class.cc::Animation"*)*, void (%"class.cc::Animation"*)** %31, align 8
  tail call void %32(%"class.cc::Animation"* nonnull %28) #8
  br label %33

33:                                               ; preds = %17, %20, %26
  %34 = bitcast %"class.blink::CompositorAnimation"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::Animation"* @_ZNK5blink19CompositorAnimation11CcAnimationEv(%"class.blink::CompositorAnimation"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.cc::Animation"*, %"class.cc::Animation"** %2, align 8
  ret %"class.cc::Animation"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation13AttachElementERKN2cc9ElementIdE(%"class.blink::CompositorAnimation"* nocapture readonly, %"struct.cc::ElementId"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::Animation"*, %"class.cc::Animation"** %3, align 8
  %5 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN2cc9Animation13AttachElementENS_9ElementIdE(%"class.cc::Animation"* %4, i64 %6) #8
  ret void
}

declare void @_ZN2cc9Animation13AttachElementENS_9ElementIdE(%"class.cc::Animation"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation15AttachNoElementEv(%"class.blink::CompositorAnimation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.cc::Animation"*, %"class.cc::Animation"** %2, align 8
  tail call void @_ZN2cc9Animation15AttachNoElementEv(%"class.cc::Animation"* %3) #8
  ret void
}

declare void @_ZN2cc9Animation15AttachNoElementEv(%"class.cc::Animation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation13DetachElementEv(%"class.blink::CompositorAnimation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.cc::Animation"*, %"class.cc::Animation"** %2, align 8
  tail call void @_ZN2cc9Animation13DetachElementEv(%"class.cc::Animation"* %3) #8
  ret void
}

declare void @_ZN2cc9Animation13DetachElementEv(%"class.cc::Animation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19CompositorAnimation17IsElementAttachedEv(%"class.blink::CompositorAnimation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.cc::Animation"*, %"class.cc::Animation"** %2, align 8
  %4 = tail call i64 @_ZNK2cc9Animation10element_idEv(%"class.cc::Animation"* %3) #8
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

declare i64 @_ZNK2cc9Animation10element_idEv(%"class.cc::Animation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation16AddKeyframeModelENSt3__110unique_ptrINS_23CompositorKeyframeModelENS1_14default_deleteIS3_EEEE(%"class.blink::CompositorAnimation"* nocapture readonly, %"class.blink::CompositorKeyframeModel"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::Animation"*, %"class.cc::Animation"** %3, align 8
  %5 = tail call %"class.cc::KeyframeModel"* @_ZN5blink23CompositorKeyframeModel22ReleaseCcKeyframeModelEv(%"class.blink::CompositorKeyframeModel"* %1) #8
  tail call void @_ZN2cc9Animation16AddKeyframeModelENSt3__110unique_ptrINS_13KeyframeModelENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"* %4, %"class.cc::KeyframeModel"* %5) #8
  %6 = icmp eq %"class.blink::CompositorKeyframeModel"* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"* nonnull %1) #8
  %8 = bitcast %"class.blink::CompositorKeyframeModel"* %1 to i8*
  tail call void @free(i8* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

declare void @_ZN2cc9Animation16AddKeyframeModelENSt3__110unique_ptrINS_13KeyframeModelENS1_14default_deleteIS3_EEEE(%"class.cc::Animation"*, %"class.cc::KeyframeModel"*) local_unnamed_addr #2

declare %"class.cc::KeyframeModel"* @_ZN5blink23CompositorKeyframeModel22ReleaseCcKeyframeModelEv(%"class.blink::CompositorKeyframeModel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation19RemoveKeyframeModelEi(%"class.blink::CompositorAnimation"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::Animation"*, %"class.cc::Animation"** %3, align 8
  %5 = bitcast %"class.cc::Animation"* %4 to void (%"class.cc::Animation"*, i32)***
  %6 = load void (%"class.cc::Animation"*, i32)**, void (%"class.cc::Animation"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.cc::Animation"*, i32)*, void (%"class.cc::Animation"*, i32)** %6, i64 1
  %8 = load void (%"class.cc::Animation"*, i32)*, void (%"class.cc::Animation"*, i32)** %7, align 8
  tail call void %8(%"class.cc::Animation"* %4, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation18PauseKeyframeModelEiN4base9TimeDeltaE(%"class.blink::CompositorAnimation"* nocapture readonly, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.cc::Animation"*, %"class.cc::Animation"** %4, align 8
  tail call void @_ZN2cc9Animation18PauseKeyframeModelEiN4base9TimeDeltaE(%"class.cc::Animation"* %5, i32 %1, i64 %2) #8
  ret void
}

declare void @_ZN2cc9Animation18PauseKeyframeModelEiN4base9TimeDeltaE(%"class.cc::Animation"*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation18AbortKeyframeModelEi(%"class.blink::CompositorAnimation"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.cc::Animation"*, %"class.cc::Animation"** %3, align 8
  tail call void @_ZN2cc9Animation18AbortKeyframeModelEi(%"class.cc::Animation"* %4, i32 %1) #8
  ret void
}

declare void @_ZN2cc9Animation18AbortKeyframeModelEi(%"class.cc::Animation"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation18UpdatePlaybackRateEd(%"class.blink::CompositorAnimation"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.cc::Animation"** %3 to %"class.cc::WorkletAnimation"**
  %5 = load %"class.cc::WorkletAnimation"*, %"class.cc::WorkletAnimation"** %4, align 8
  tail call void @_ZN2cc16WorkletAnimation18UpdatePlaybackRateEd(%"class.cc::WorkletAnimation"* %5, double %1) #8
  ret void
}

declare void @_ZN2cc16WorkletAnimation18UpdatePlaybackRateEd(%"class.cc::WorkletAnimation"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation22NotifyAnimationStartedEN4base9TimeTicksEii(%"class.blink::CompositorAnimation"* nocapture readonly, i64, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  %6 = load %"class.blink::CompositorAnimationDelegate"*, %"class.blink::CompositorAnimationDelegate"** %5, align 8
  %7 = icmp eq %"class.blink::CompositorAnimationDelegate"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = add i64 %1, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = sitofp i64 %1 to double
  %13 = fdiv double %12, 1.000000e+06
  br label %17

14:                                               ; preds = %8
  %15 = icmp slt i64 %1, 0
  %16 = select i1 %15, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %17

17:                                               ; preds = %11, %14
  %18 = phi double [ %16, %14 ], [ %13, %11 ]
  %19 = bitcast %"class.blink::CompositorAnimationDelegate"* %6 to void (%"class.blink::CompositorAnimationDelegate"*, double, i32)***
  %20 = load void (%"class.blink::CompositorAnimationDelegate"*, double, i32)**, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)** %20, i64 2
  %22 = load void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)** %21, align 8
  tail call void %22(%"class.blink::CompositorAnimationDelegate"* nonnull %6, double %18, i32 %3) #8
  br label %23

23:                                               ; preds = %4, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation23NotifyAnimationFinishedEN4base9TimeTicksEii(%"class.blink::CompositorAnimation"* nocapture readonly, i64, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  %6 = load %"class.blink::CompositorAnimationDelegate"*, %"class.blink::CompositorAnimationDelegate"** %5, align 8
  %7 = icmp eq %"class.blink::CompositorAnimationDelegate"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = add i64 %1, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = sitofp i64 %1 to double
  %13 = fdiv double %12, 1.000000e+06
  br label %17

14:                                               ; preds = %8
  %15 = icmp slt i64 %1, 0
  %16 = select i1 %15, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %17

17:                                               ; preds = %11, %14
  %18 = phi double [ %16, %14 ], [ %13, %11 ]
  %19 = bitcast %"class.blink::CompositorAnimationDelegate"* %6 to void (%"class.blink::CompositorAnimationDelegate"*, double, i32)***
  %20 = load void (%"class.blink::CompositorAnimationDelegate"*, double, i32)**, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)** %20, i64 3
  %22 = load void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)** %21, align 8
  tail call void %22(%"class.blink::CompositorAnimationDelegate"* nonnull %6, double %18, i32 %3) #8
  br label %23

23:                                               ; preds = %4, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation22NotifyAnimationAbortedEN4base9TimeTicksEii(%"class.blink::CompositorAnimation"* nocapture readonly, i64, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  %6 = load %"class.blink::CompositorAnimationDelegate"*, %"class.blink::CompositorAnimationDelegate"** %5, align 8
  %7 = icmp eq %"class.blink::CompositorAnimationDelegate"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = add i64 %1, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = sitofp i64 %1 to double
  %13 = fdiv double %12, 1.000000e+06
  br label %17

14:                                               ; preds = %8
  %15 = icmp slt i64 %1, 0
  %16 = select i1 %15, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %17

17:                                               ; preds = %11, %14
  %18 = phi double [ %16, %14 ], [ %13, %11 ]
  %19 = bitcast %"class.blink::CompositorAnimationDelegate"* %6 to void (%"class.blink::CompositorAnimationDelegate"*, double, i32)***
  %20 = load void (%"class.blink::CompositorAnimationDelegate"*, double, i32)**, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)** %20, i64 4
  %22 = load void (%"class.blink::CompositorAnimationDelegate"*, double, i32)*, void (%"class.blink::CompositorAnimationDelegate"*, double, i32)** %21, align 8
  tail call void %22(%"class.blink::CompositorAnimationDelegate"* nonnull %6, double %18, i32 %3) #8
  br label %23

23:                                               ; preds = %4, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation23NotifyAnimationTakeoverEN4base9TimeTicksEiS2_NSt3__110unique_ptrIN3gfx14AnimationCurveENS3_14default_deleteIS6_EEEE(%"class.blink::CompositorAnimation"* nocapture readonly, i64, i32, i64, %"class.gfx::AnimationCurve"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  %7 = load %"class.blink::CompositorAnimationDelegate"*, %"class.blink::CompositorAnimationDelegate"** %6, align 8
  %8 = icmp eq %"class.blink::CompositorAnimationDelegate"* %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %5
  %10 = add i64 %1, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = sitofp i64 %1 to double
  %14 = fdiv double %13, 1.000000e+06
  br label %18

15:                                               ; preds = %9
  %16 = icmp slt i64 %1, 0
  %17 = select i1 %16, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %18

18:                                               ; preds = %12, %15
  %19 = phi double [ %17, %15 ], [ %14, %12 ]
  %20 = add i64 %3, -9223372036854775807
  %21 = icmp ult i64 %20, 2
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = sitofp i64 %3 to double
  %24 = fdiv double %23, 1.000000e+06
  br label %28

25:                                               ; preds = %18
  %26 = icmp slt i64 %3, 0
  %27 = select i1 %26, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %28

28:                                               ; preds = %25, %22
  %29 = phi double [ %27, %25 ], [ %24, %22 ]
  %30 = bitcast %"class.blink::CompositorAnimationDelegate"* %7 to void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)***
  %31 = load void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)**, void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)*, void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)** %31, i64 5
  %33 = load void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)*, void (%"class.blink::CompositorAnimationDelegate"*, double, double, %"class.gfx::AnimationCurve"*)** %32, align 8
  tail call void %33(%"class.blink::CompositorAnimationDelegate"* nonnull %7, double %19, double %29, %"class.gfx::AnimationCurve"* %4) #8
  br label %41

34:                                               ; preds = %5
  %35 = icmp eq %"class.gfx::AnimationCurve"* %4, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.gfx::AnimationCurve"* %4 to void (%"class.gfx::AnimationCurve"*)***
  %38 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %38, i64 1
  %40 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %39, align 8
  tail call void %40(%"class.gfx::AnimationCurve"* nonnull %4) #8
  br label %41

41:                                               ; preds = %28, %34, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19CompositorAnimation22NotifyLocalTimeUpdatedEN4absl8optionalIN4base9TimeDeltaEEE(%"class.blink::CompositorAnimation"* nocapture readonly, i8, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CompositorAnimation", %"class.blink::CompositorAnimation"* %0, i64 0, i32 2
  %5 = load %"class.blink::CompositorAnimationDelegate"*, %"class.blink::CompositorAnimationDelegate"** %4, align 8
  %6 = icmp eq %"class.blink::CompositorAnimationDelegate"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::CompositorAnimationDelegate"* %5 to void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)***
  %9 = load void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)**, void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)*, void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)** %9, i64 6
  %11 = load void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)*, void (%"class.blink::CompositorAnimationDelegate"*, i8, i64)** %10, align 8
  tail call void %11(%"class.blink::CompositorAnimationDelegate"* nonnull %5, i8 %1, i64 %2) #8
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
