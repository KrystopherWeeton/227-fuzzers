; ModuleID = '../../third_party/angle/src/libANGLE/angletypes.cpp'
source_filename = "../../third_party/angle/src/libANGLE/angletypes.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.23, i8, [3 x i8] }>
%union.anon.23 = type { %"struct.angle::Color" }
%"struct.angle::Color" = type { float, float, float, float }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.26" }
%"class.angle::BindingPointer.26" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.28", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.48", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.28" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.29" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.gl::ImageDesc"* }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.34", i64, i64 }
%"class.gl::BindingPointer.34" = type { %"class.angle::BindingPointer.35" }
%"class.angle::BindingPointer.35" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.37", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.37" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BitSetT" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.egl::Surface" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.47", i32, i32 }
%"class.egl::Display" = type opaque
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type opaque
%"struct.std::__1::array.47" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.48" = type { %"struct.std::__1::array.49", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.49" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.50", %"class.angle::BitSetT.50", i64 }
%"class.angle::BitSetT.50" = type { i8 }
%"struct.gl::PackedSamplerCompleteness" = type { i8, i8, i8, i8 }
%"struct.gl::Box" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::Offset" = type { i32, i32, i32 }

$_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN2gl14BindingPointerINS_7TextureEED0Ev = comdat any

$_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZTVN2gl14BindingPointerINS_7TextureEEE = comdat any

$_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE = comdat any

@__const._ZN2gl12SamplerState22CreateDefaultForTargetENS_11TextureTypeE.state = private unnamed_addr constant %"class.gl::SamplerState" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"struct.angle::ColorGeneric" <{ %union.anon.23 { %"struct.angle::Color" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"union.gl::SamplerState::Completeness" { i32 -1431655766 } }, align 4
@_ZTVN2gl14BindingPointerINS_7TextureEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.26"*)* @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.gl::BindingPointer"*)* @_ZN2gl14BindingPointerINS_7TextureEED0Ev to i8*)] }, comdat, align 8
@_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer.26"*)* @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer.26"*)* @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8

@_ZN2gl15RasterizerStateC1Ev = hidden unnamed_addr alias void (%"struct.gl::RasterizerState"*), void (%"struct.gl::RasterizerState"*)* @_ZN2gl15RasterizerStateC2Ev
@_ZN2gl15RasterizerStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gl::RasterizerState"*, %"struct.gl::RasterizerState"*), void (%"struct.gl::RasterizerState"*, %"struct.gl::RasterizerState"*)* @_ZN2gl15RasterizerStateC2ERKS0_
@_ZN2gl10BlendStateC1Ev = hidden unnamed_addr alias void (%"struct.gl::BlendState"*), void (%"struct.gl::BlendState"*)* @_ZN2gl10BlendStateC2Ev
@_ZN2gl10BlendStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gl::BlendState"*, %"struct.gl::BlendState"*), void (%"struct.gl::BlendState"*, %"struct.gl::BlendState"*)* @_ZN2gl10BlendStateC2ERKS0_
@_ZN2gl17DepthStencilStateC1Ev = hidden unnamed_addr alias void (%"struct.gl::DepthStencilState"*), void (%"struct.gl::DepthStencilState"*)* @_ZN2gl17DepthStencilStateC2Ev
@_ZN2gl17DepthStencilStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gl::DepthStencilState"*, %"struct.gl::DepthStencilState"*), void (%"struct.gl::DepthStencilState"*, %"struct.gl::DepthStencilState"*)* @_ZN2gl17DepthStencilStateC2ERKS0_
@_ZN2gl12SamplerStateC1Ev = hidden unnamed_addr alias void (%"class.gl::SamplerState"*), void (%"class.gl::SamplerState"*)* @_ZN2gl12SamplerStateC2Ev
@_ZN2gl12SamplerStateC1ERKS0_ = hidden unnamed_addr alias void (%"class.gl::SamplerState"*, %"class.gl::SamplerState"*), void (%"class.gl::SamplerState"*, %"class.gl::SamplerState"*)* @_ZN2gl12SamplerStateC2ERKS0_
@_ZN2gl9ImageUnitC1Ev = hidden unnamed_addr alias void (%"struct.gl::ImageUnit"*), void (%"struct.gl::ImageUnit"*)* @_ZN2gl9ImageUnitC2Ev
@_ZN2gl9ImageUnitC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*), void (%"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*)* @_ZN2gl9ImageUnitC2ERKS0_
@_ZN2gl9ImageUnitD1Ev = hidden unnamed_addr alias void (%"struct.gl::ImageUnit"*), void (%"struct.gl::ImageUnit"*)* @_ZN2gl9ImageUnitD2Ev
@_ZN2gl13BlendStateExtC1Em = hidden unnamed_addr alias void (%"class.gl::BlendStateExt"*, i64), void (%"class.gl::BlendStateExt"*, i64)* @_ZN2gl13BlendStateExtC2Em

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15RasterizerStateC2Ev(%"struct.gl::RasterizerState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 24, i1 false)
  store i32 2305, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 3
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 9
  %7 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 10, i1 false)
  store i8 1, i8* %6, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15RasterizerStateC2ERKS0_(%"struct.gl::RasterizerState"* nocapture, %"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gleqERKNS_15RasterizerStateES2_(%"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24), %"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 24)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2glneERKNS_15RasterizerStateES2_(%"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24), %"struct.gl::RasterizerState"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::RasterizerState", %"struct.gl::RasterizerState"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 24) #11
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10BlendStateC2Ev(%"struct.gl::BlendState"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.gl::BlendState"* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 1>, <4 x i32>* %2, align 4
  %3 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %0, i64 0, i32 4
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 0, i32 32774, i32 32774, i32 16843009>, <4 x i32>* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10BlendStateC2ERKS0_(%"struct.gl::BlendState"* nocapture, %"struct.gl::BlendState"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gleqERKNS_10BlendStateES2_(%"struct.gl::BlendState"* nocapture readonly dereferenceable(32), %"struct.gl::BlendState"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 32)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2glneERKNS_10BlendStateES2_(%"struct.gl::BlendState"* nocapture readonly dereferenceable(32), %"struct.gl::BlendState"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::BlendState", %"struct.gl::BlendState"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 32) #11
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17DepthStencilStateC2Ev(%"struct.gl::DepthStencilState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false)
  store i32 513, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 2
  store i8 1, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 4
  %7 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 519, i32 -1, i32 7680, i32 7680>, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 8
  %9 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 7680, i32 -1, i32 519, i32 -1>, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 12
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 7680, i32 7680, i32 7680, i32 -1>, <4 x i32>* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17DepthStencilStateC2ERKS0_(%"struct.gl::DepthStencilState"* nocapture, %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 60, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17DepthStencilState16isDepthMaskedOutEv(%"struct.gl::DepthStencilState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17DepthStencilState18isStencilMaskedOutEv(%"struct.gl::DepthStencilState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  %7 = icmp eq i32 %6, 0
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17DepthStencilState13isStencilNoOpEv(%"struct.gl::DepthStencilState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %10, 512
  %18 = icmp eq i32 %12, 7680
  %19 = and i1 %17, %18
  %20 = icmp eq i32 %10, 519
  %21 = or i1 %20, %18
  %22 = icmp eq i32 %14, 7680
  %23 = and i1 %21, %22
  %24 = icmp eq i32 %16, 7680
  %25 = and i1 %23, %24
  %26 = or i1 %19, %25
  br label %27

27:                                               ; preds = %8, %1
  %28 = phi i1 [ true, %1 ], [ %26, %8 ]
  ret i1 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17DepthStencilState17isStencilBackNoOpEv(%"struct.gl::DepthStencilState"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 15
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 12
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 13
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 14
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %10, 512
  %18 = icmp eq i32 %12, 7680
  %19 = and i1 %17, %18
  %20 = icmp eq i32 %10, 519
  %21 = or i1 %20, %18
  %22 = icmp eq i32 %14, 7680
  %23 = and i1 %21, %22
  %24 = icmp eq i32 %16, 7680
  %25 = and i1 %23, %24
  %26 = or i1 %19, %25
  br label %27

27:                                               ; preds = %8, %1
  %28 = phi i1 [ true, %1 ], [ %26, %8 ]
  ret i1 %28
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gleqERKNS_17DepthStencilStateES2_(%"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 60)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2glneERKNS_17DepthStencilStateES2_(%"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60), %"struct.gl::DepthStencilState"* nocapture readonly dereferenceable(60)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gl::DepthStencilState", %"struct.gl::DepthStencilState"* %1, i64 0, i32 0
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 60) #11
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12SamplerStateC2Ev(%"class.gl::SamplerState"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 1
  %3 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 64, i1 false)
  %4 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 0
  store i32 9986, i32* %4, align 4
  %5 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_10FilterModeEEET_j(i32 9986) #11
  %6 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %7 = bitcast %"union.gl::SamplerState::Completeness"* %6 to i8*
  store i8 %5, i8* %7, align 4
  %8 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 9729
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 1
  store i32 9729, i32* %12, align 4
  %13 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_10FilterModeEEET_j(i32 9729) #11
  %14 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %15 = bitcast %"union.gl::SamplerState::Completeness"* %14 to %"struct.gl::PackedSamplerCompleteness"*
  %16 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %15, i64 0, i32 1
  store i8 %13, i8* %16, align 1
  br label %17

17:                                               ; preds = %1, %11
  %18 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 10497
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  store i32 10497, i32* %18, align 4
  %22 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 10497) #11
  %23 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %24 = bitcast %"union.gl::SamplerState::Completeness"* %23 to %"struct.gl::PackedSamplerCompleteness"*
  %25 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %24, i64 0, i32 2
  store i8 %22, i8* %25, align 2
  br label %26

26:                                               ; preds = %17, %21
  %27 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 10497
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  store i32 10497, i32* %27, align 4
  %31 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 10497) #11
  %32 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i8 16, i8 0
  %36 = or i8 %35, %31
  %37 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %38 = bitcast %"union.gl::SamplerState::Completeness"* %37 to %"struct.gl::PackedSamplerCompleteness"*
  %39 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %38, i64 0, i32 3
  store i8 %36, i8* %39, align 1
  br label %40

40:                                               ; preds = %26, %30
  %41 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 10497
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  store i32 10497, i32* %41, align 4
  br label %45

45:                                               ; preds = %40, %44
  %46 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 5
  %47 = load float, float* %46, align 4
  %48 = fcmp une float %47, 1.000000e+00
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store float 1.000000e+00, float* %46, align 4
  br label %50

50:                                               ; preds = %45, %49
  %51 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 6
  %52 = load float, float* %51, align 4
  %53 = fcmp une float %52, -1.000000e+03
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store float -1.000000e+03, float* %51, align 4
  br label %55

55:                                               ; preds = %50, %54
  %56 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 7
  %57 = load float, float* %56, align 4
  %58 = fcmp une float %57, 1.000000e+03
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  store float 1.000000e+03, float* %56, align 4
  br label %60

60:                                               ; preds = %55, %59
  %61 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 8
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  store i32 0, i32* %61, align 4
  %65 = load i32, i32* %27, align 4
  %66 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 %65) #11
  %67 = load i32, i32* %61, align 4
  %68 = icmp eq i32 %67, 0
  %69 = select i1 %68, i8 16, i8 0
  %70 = or i8 %69, %66
  %71 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %72 = bitcast %"union.gl::SamplerState::Completeness"* %71 to %"struct.gl::PackedSamplerCompleteness"*
  %73 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %72, i64 0, i32 3
  store i8 %70, i8* %73, align 1
  br label %74

74:                                               ; preds = %60, %64
  %75 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 9
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 515
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  store i32 515, i32* %75, align 4
  br label %79

79:                                               ; preds = %74, %78
  %80 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 10
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 35401
  br i1 %82, label %84, label %83

83:                                               ; preds = %79
  store i32 35401, i32* %80, align 4
  br label %84

84:                                               ; preds = %79, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState12setMinFilterEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_10FilterModeEEET_j(i32 %1) #11
  %8 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %9 = bitcast %"union.gl::SamplerState::Completeness"* %8 to i8*
  store i8 %7, i8* %9, align 4
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState12setMagFilterEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_10FilterModeEEET_j(i32 %1) #11
  %8 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %9 = bitcast %"union.gl::SamplerState::Completeness"* %8 to %"struct.gl::PackedSamplerCompleteness"*
  %10 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %9, i64 0, i32 1
  store i8 %7, i8* %10, align 1
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState8setWrapSEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 %1) #11
  %8 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %9 = bitcast %"union.gl::SamplerState::Completeness"* %8 to %"struct.gl::PackedSamplerCompleteness"*
  %10 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %9, i64 0, i32 2
  store i8 %7, i8* %10, align 2
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState8setWrapTEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 %1) #11
  %8 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i8 16, i8 0
  %12 = or i8 %11, %7
  %13 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %14 = bitcast %"union.gl::SamplerState::Completeness"* %13 to %"struct.gl::PackedSamplerCompleteness"*
  %15 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %14, i64 0, i32 3
  store i8 %12, i8* %15, align 1
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState8setWrapREj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState16setMaxAnisotropyEf(%"class.gl::SamplerState"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 5
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState9setMinLodEf(%"class.gl::SamplerState"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 6
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState9setMaxLodEf(%"class.gl::SamplerState"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 7
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState14setCompareModeEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  %7 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 %8) #11
  %10 = load i32, i32* %3, align 4
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i8 16, i8 0
  %13 = or i8 %12, %9
  %14 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %15 = bitcast %"union.gl::SamplerState::Completeness"* %14 to %"struct.gl::PackedSamplerCompleteness"*
  %16 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %15, i64 0, i32 3
  store i8 %13, i8* %16, align 1
  br label %17

17:                                               ; preds = %2, %6
  %18 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState14setCompareFuncEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState13setSRGBDecodeEj(%"class.gl::SamplerState"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12SamplerStateC2ERKS0_(%"class.gl::SamplerState"* nocapture, %"class.gl::SamplerState"* nocapture readonly dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::SamplerState"* %0 to i8*
  %4 = bitcast %"class.gl::SamplerState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 68, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(68) %"class.gl::SamplerState"* @_ZN2gl12SamplerStateaSERKS0_(%"class.gl::SamplerState"* returned, %"class.gl::SamplerState"* nocapture readonly dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::SamplerState"* %0 to i8*
  %4 = bitcast %"class.gl::SamplerState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 68, i1 false)
  ret %"class.gl::SamplerState"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12SamplerState22CreateDefaultForTargetENS_11TextureTypeE(%"class.gl::SamplerState"* noalias nocapture sret, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::SamplerState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast (%"class.gl::SamplerState"* @__const._ZN2gl12SamplerState22CreateDefaultForTargetENS_11TextureTypeE.state to i8*), i64 68, i1 false)
  tail call void @_ZN2gl12SamplerStateC2Ev(%"class.gl::SamplerState"* %0)
  %4 = add i8 %1, -5
  %5 = icmp ult i8 %4, 2
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 0
  store i32 9729, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 2
  store i32 33071, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 3
  store i32 33071, i32* %9, align 4
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

declare zeroext i8 @_ZN2gl10FromGLenumINS_10FilterModeEEET_j(i32) local_unnamed_addr #5

declare zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl12SamplerState22updateWrapTCompareModeEv(%"class.gl::SamplerState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i8 @_ZN2gl10FromGLenumINS_8WrapModeEEET_j(i32 %3) #11
  %5 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i8 16, i8 0
  %9 = or i8 %8, %4
  %10 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 12
  %11 = bitcast %"union.gl::SamplerState::Completeness"* %10 to %"struct.gl::PackedSamplerCompleteness"*
  %12 = getelementptr inbounds %"struct.gl::PackedSamplerCompleteness", %"struct.gl::PackedSamplerCompleteness"* %11, i64 0, i32 3
  store i8 %9, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl12SamplerState14setBorderColorERKN5angle12ColorGenericE(%"class.gl::SamplerState"* nocapture, %"struct.angle::ColorGeneric"* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %5, %7
  br i1 %8, label %9, label %94

9:                                                ; preds = %2
  switch i8 %5, label %10 [
    i8 2, label %64
    i8 1, label %34
  ]

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %12, %14
  br i1 %15, label %16, label %94

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %94

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %94

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 3
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 3
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %97, label %94

34:                                               ; preds = %9
  %35 = bitcast %"struct.angle::ColorGeneric"* %3 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"struct.angle::ColorGeneric"* %1 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %94

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %43, %46
  br i1 %47, label %48, label %94

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 2
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %51, %54
  br i1 %55, label %56, label %94

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 3
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 3
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %59, %62
  br i1 %63, label %97, label %94

64:                                               ; preds = %9
  %65 = bitcast %"struct.angle::ColorGeneric"* %3 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"struct.angle::ColorGeneric"* %1 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %94

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast float* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %73, %76
  br i1 %77, label %78, label %94

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %81, %84
  br i1 %85, label %86, label %94

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.gl::SamplerState", %"class.gl::SamplerState"* %0, i64 0, i32 11, i32 0, i32 0, i32 3
  %88 = bitcast float* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.angle::ColorGeneric", %"struct.angle::ColorGeneric"* %1, i64 0, i32 0, i32 0, i32 3
  %91 = bitcast float* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %89, %92
  br i1 %93, label %97, label %94

94:                                               ; preds = %56, %28, %86, %64, %70, %78, %34, %40, %48, %10, %16, %22, %2
  %95 = bitcast %"struct.angle::ColorGeneric"* %3 to i8*
  %96 = bitcast %"struct.angle::ColorGeneric"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 17, i1 false)
  br label %97

97:                                               ; preds = %56, %28, %86, %94
  %98 = phi i1 [ true, %94 ], [ false, %86 ], [ false, %28 ], [ false, %56 ]
  ret i1 %98
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9ImageUnitC2Ev(%"struct.gl::ImageUnit"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 0, i32 0, i32 1
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 5
  store i32 35000, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 6
  store i32 33334, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9ImageUnitC2ERKS0_(%"struct.gl::ImageUnit"* nocapture, %"struct.gl::ImageUnit"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.gl::Texture"*, %"class.gl::Texture"** %5, align 8
  store %"class.gl::Texture"* %6, %"class.gl::Texture"** %4, align 8
  %7 = icmp eq %"class.gl::Texture"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_7TextureEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %13 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %1, i64 0, i32 1
  %15 = bitcast i32* %13 to i8*
  %16 = bitcast i32* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 20, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9ImageUnitD2Ev(%"struct.gl::ImageUnit"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.gl::ImageUnit", %"struct.gl::ImageUnit"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer.26"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer.26", %"class.angle::BindingPointer.26"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExtC2Em(%"class.gl::BlendStateExt"* nocapture, i64) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %4 = shl i64 %1, 3
  %5 = sub i64 64, %4
  %6 = lshr i64 -1, %5
  store i64 %6, i64* %3, align 8
  %7 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 1
  %8 = and i64 %6, 72340172838076673
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 3
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 4
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 5
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 8
  %15 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  store i64 %6, i64* %14, align 8
  %16 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  %17 = and i64 %6, 1085102592571150095
  store i64 %17, i64* %16, align 8
  %18 = trunc i64 %1 to i32
  %19 = sub i32 8, %18
  %20 = lshr i32 255, %19
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 10, i32 0
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 11, i32 0
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 12
  store i64 %1, i64* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.gl::BlendStateExt"* @_ZN2gl13BlendStateExtaSERKS0_(%"class.gl::BlendStateExt"* returned, %"class.gl::BlendStateExt"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::BlendStateExt"* %0 to i8*
  %4 = bitcast %"class.gl::BlendStateExt"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 96, i1 false)
  ret %"class.gl::BlendStateExt"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt10setEnabledEb(%"class.gl::BlendStateExt"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %6

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 10, i32 0
  %5 = load i8, i8* %4, align 1
  br label %6

6:                                                ; preds = %2, %3
  %7 = phi i8 [ %5, %3 ], [ 0, %2 ]
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 11, i32 0
  store i8 %7, i8* %8, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt17setEnabledIndexedEmb(%"class.gl::BlendStateExt"* nocapture, i64, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 11
  %5 = trunc i64 %1 to i32
  %6 = shl i32 1, %5
  %7 = trunc i32 %6 to i8
  br i1 %2, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.angle::BitSetT.50", %"class.angle::BitSetT.50"* %4, i64 0, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = or i8 %10, %7
  store i8 %11, i8* %9, align 1
  br label %17

12:                                               ; preds = %3
  %13 = xor i8 %7, -1
  %14 = getelementptr inbounds %"class.angle::BitSetT.50", %"class.angle::BitSetT.50"* %4, i64 0, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, %13
  store i8 %16, i8* %14, align 1
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt20expandColorMaskValueEbbbb(%"class.gl::BlendStateExt"* nocapture readonly, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = zext i1 %1 to i64
  %7 = select i1 %2, i64 2, i64 0
  %8 = or i64 %7, %6
  %9 = select i1 %3, i64 4, i64 0
  %10 = or i64 %8, %9
  %11 = select i1 %4, i64 8, i64 0
  %12 = or i64 %10, %11
  %13 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = mul nuw nsw i64 %12, 72340172838076673
  %16 = and i64 %14, %15
  ret i64 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt22expandColorMaskIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 8
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %6, 255
  %10 = mul nuw i64 %9, 72340172838076673
  %11 = and i64 %10, %8
  ret i64 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt12setColorMaskEbbbb(%"class.gl::BlendStateExt"* nocapture, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %6 = zext i1 %1 to i64
  %7 = select i1 %2, i64 2, i64 0
  %8 = or i64 %7, %6
  %9 = select i1 %3, i64 4, i64 0
  %10 = or i64 %8, %9
  %11 = select i1 %4, i64 8, i64 0
  %12 = or i64 %10, %11
  %13 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = mul nuw nsw i64 %12, 72340172838076673
  %16 = and i64 %14, %15
  %17 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  store i64 %16, i64* %17, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt19setColorMaskIndexedEmh(%"class.gl::BlendStateExt"* nocapture, i64, i8 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  %5 = shl i64 %1, 3
  %6 = shl i64 255, %5
  %7 = zext i8 %2 to i64
  %8 = shl i64 %7, %5
  %9 = load i64, i64* %4, align 8
  %10 = xor i64 %9, %8
  %11 = and i64 %10, %6
  %12 = xor i64 %11, %9
  store i64 %12, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt19setColorMaskIndexedEmbbbb(%"class.gl::BlendStateExt"* nocapture, i64, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %7 = zext i1 %2 to i64
  %8 = select i1 %3, i64 2, i64 0
  %9 = or i64 %8, %7
  %10 = select i1 %4, i64 4, i64 0
  %11 = or i64 %9, %10
  %12 = select i1 %5, i64 8, i64 0
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  %15 = shl i64 %1, 3
  %16 = shl i64 255, %15
  %17 = shl i64 %13, %15
  %18 = load i64, i64* %14, align 8
  %19 = xor i64 %18, %17
  %20 = and i64 %19, %16
  %21 = xor i64 %20, %18
  store i64 %21, i64* %14, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK2gl13BlendStateExt19getColorMaskIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i8
  ret i8 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2gl13BlendStateExt19getColorMaskIndexedEmPbS1_S1_S1_(%"class.gl::BlendStateExt"* nocapture readonly, i64, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture) local_unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 9
  %8 = load i64, i64* %7, align 8
  %9 = shl i64 %1, 3
  %10 = lshr i64 %8, %9
  %11 = trunc i64 %10 to i8
  %12 = and i8 %11, 1
  store i8 %12, i8* %2, align 1
  %13 = lshr i64 %10, 1
  %14 = trunc i64 %13 to i8
  %15 = and i8 %14, 1
  store i8 %15, i8* %3, align 1
  %16 = lshr i64 %10, 2
  %17 = trunc i64 %16 to i8
  %18 = and i8 %17, 1
  store i8 %18, i8* %4, align 1
  %19 = lshr i64 %10, 3
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  store i8 %21, i8* %5, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2gl13BlendStateExt16compareColorMaskEm(%"class.angle::BitSetT.50"* noalias nocapture sret, %"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 9
  %5 = load i64, i64* %4, align 8
  %6 = xor i64 %5, %2
  %7 = and i64 %6, 9187201950435737471
  %8 = add nuw i64 %7, 9187201950435737471
  %9 = or i64 %8, %6
  %10 = and i64 %9, -9187201950435737472
  %11 = mul i64 %10, 567382630219905
  %12 = lshr i64 %11, 56
  %13 = trunc i64 %12 to i8
  %14 = getelementptr inbounds %"class.angle::BitSetT.50", %"class.angle::BitSetT.50"* %0, i64 0, i32 0
  store i8 %13, i8* %14, align 1, !alias.scope !3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt19expandEquationValueEj(%"class.gl::BlendStateExt"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = add i32 %1, -32774
  %4 = icmp eq i32 %3, 3
  %5 = icmp ugt i32 %3, 5
  %6 = or i1 %4, %5
  %7 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = sext i32 %3 to i64
  %10 = mul i64 %9, 72340172838076673
  %11 = select i1 %6, i64 434041037028460038, i64 %10
  %12 = and i64 %8, %11
  ret i64 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt26expandEquationColorIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = mul nuw i64 %7, 72340172838076673
  %11 = and i64 %10, %9
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt26expandEquationAlphaIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = mul nuw i64 %7, 72340172838076673
  %11 = and i64 %10, %9
  ret i64 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt12setEquationsEjj(%"class.gl::BlendStateExt"* nocapture, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = add i32 %1, -32774
  %5 = icmp eq i32 %4, 3
  %6 = icmp ugt i32 %4, 5
  %7 = or i1 %5, %6
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = sext i32 %4 to i64
  %11 = mul i64 %10, 72340172838076673
  %12 = select i1 %7, i64 434041037028460038, i64 %11
  %13 = and i64 %9, %12
  %14 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 6
  store i64 %13, i64* %14, align 8
  %15 = add i32 %2, -32774
  %16 = icmp eq i32 %15, 3
  %17 = icmp ugt i32 %15, 5
  %18 = or i1 %16, %17
  %19 = sext i32 %15 to i64
  %20 = mul i64 %19, 72340172838076673
  %21 = select i1 %18, i64 434041037028460038, i64 %20
  %22 = and i64 %9, %21
  %23 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 7
  store i64 %22, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt19setEquationsIndexedEmjj(%"class.gl::BlendStateExt"* nocapture, i64, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = add i32 %2, -32774
  %6 = icmp eq i32 %5, 3
  %7 = icmp ugt i32 %5, 5
  %8 = or i1 %6, %7
  %9 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 6
  %10 = shl i64 %1, 3
  %11 = shl i64 255, %10
  %12 = sext i32 %5 to i64
  %13 = select i1 %8, i64 6, i64 %12
  %14 = shl i64 %13, %10
  %15 = load i64, i64* %9, align 8
  %16 = xor i64 %15, %14
  %17 = and i64 %16, %11
  %18 = xor i64 %17, %15
  store i64 %18, i64* %9, align 8
  %19 = add i32 %3, -32774
  %20 = icmp eq i32 %19, 3
  %21 = icmp ugt i32 %19, 5
  %22 = or i1 %20, %21
  %23 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 7
  %24 = sext i32 %19 to i64
  %25 = select i1 %22, i64 6, i64 %24
  %26 = shl i64 %25, %10
  %27 = load i64, i64* %23, align 8
  %28 = xor i64 %27, %26
  %29 = and i64 %28, %11
  %30 = xor i64 %29, %27
  store i64 %30, i64* %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt19setEquationsIndexedEmmRKS0_(%"class.gl::BlendStateExt"* nocapture, i64, i64, %"class.gl::BlendStateExt"* nocapture readonly dereferenceable(96)) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %3, i64 0, i32 6
  %6 = load i64, i64* %5, align 8
  %7 = shl i64 %2, 3
  %8 = lshr i64 %6, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 6
  %11 = shl i64 %1, 3
  %12 = shl i64 255, %11
  %13 = shl i64 %9, %11
  %14 = load i64, i64* %10, align 8
  %15 = xor i64 %13, %14
  %16 = and i64 %15, %12
  %17 = xor i64 %16, %14
  store i64 %17, i64* %10, align 8
  %18 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %3, i64 0, i32 7
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, %7
  %21 = and i64 %20, 255
  %22 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 7
  %23 = shl i64 %21, %11
  %24 = load i64, i64* %22, align 8
  %25 = xor i64 %23, %24
  %26 = and i64 %25, %12
  %27 = xor i64 %26, %24
  store i64 %27, i64* %22, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl13BlendStateExt23getEquationColorIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 255
  %9 = add nuw nsw i32 %8, 32774
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl13BlendStateExt23getEquationAlphaIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 255
  %9 = add nuw nsw i32 %8, 32774
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl13BlendStateExt16compareEquationsEmm(%"class.angle::BitSetT.50"* noalias nocapture sret, %"class.gl::BlendStateExt"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 6
  %6 = load i64, i64* %5, align 8
  %7 = xor i64 %6, %2
  %8 = and i64 %7, 9187201950435737471
  %9 = add nuw i64 %8, 9187201950435737471
  %10 = or i64 %9, %7
  %11 = and i64 %10, -9187201950435737472
  %12 = mul i64 %11, 567382630219905
  %13 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 7
  %14 = load i64, i64* %13, align 8
  %15 = xor i64 %14, %3
  %16 = and i64 %15, 9187201950435737471
  %17 = add nuw i64 %16, 9187201950435737471
  %18 = or i64 %17, %15
  %19 = and i64 %18, -9187201950435737472
  %20 = mul i64 %19, 567382630219905
  %21 = getelementptr inbounds %"class.angle::BitSetT.50", %"class.angle::BitSetT.50"* %0, i64 0, i32 0
  %22 = or i64 %20, %12
  %23 = lshr i64 %22, 56
  %24 = trunc i64 %23 to i8
  store i8 %24, i8* %21, align 1, !alias.scope !6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt17expandFactorValueEj(%"class.gl::BlendStateExt"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = add i32 %1, -768
  %6 = icmp ult i32 %5, 9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = add nsw i32 %1, -766
  br label %21

9:                                                ; preds = %4
  %10 = add i32 %1, -32769
  %11 = icmp ult i32 %10, 4
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = add nsw i32 %1, -32758
  br label %21

14:                                               ; preds = %9
  %15 = icmp eq i32 %1, 34185
  br i1 %15, label %21, label %16

16:                                               ; preds = %14
  %17 = add i32 %1, -35065
  %18 = icmp ult i32 %17, 3
  %19 = add i32 %1, -35049
  %20 = select i1 %18, i32 %19, i32 19
  br label %21

21:                                               ; preds = %2, %7, %12, %14, %16
  %22 = phi i32 [ %20, %16 ], [ %8, %7 ], [ %13, %12 ], [ %1, %2 ], [ 15, %14 ]
  %23 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = sext i32 %22 to i64
  %26 = mul i64 %25, 72340172838076673
  %27 = and i64 %26, %24
  ret i64 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt21expandSrcColorIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = mul nuw i64 %7, 72340172838076673
  %11 = and i64 %10, %9
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt21expandDstColorIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = mul nuw i64 %7, 72340172838076673
  %11 = and i64 %10, %9
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt21expandSrcAlphaIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = mul nuw i64 %7, 72340172838076673
  %11 = and i64 %10, %9
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2gl13BlendStateExt21expandDstAlphaIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = mul nuw i64 %7, 72340172838076673
  %11 = and i64 %10, %9
  ret i64 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt10setFactorsEjjjj(%"class.gl::BlendStateExt"* nocapture, i32, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %6 = icmp ult i32 %1, 2
  br i1 %6, label %24, label %7

7:                                                ; preds = %5
  %8 = add i32 %1, -768
  %9 = icmp ult i32 %8, 9
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = add nsw i32 %1, -766
  br label %24

12:                                               ; preds = %7
  %13 = add i32 %1, -32769
  %14 = icmp ult i32 %13, 4
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = add nsw i32 %1, -32758
  br label %24

17:                                               ; preds = %12
  %18 = icmp eq i32 %1, 34185
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = add i32 %1, -35065
  %21 = icmp ult i32 %20, 3
  %22 = add i32 %1, -35049
  %23 = select i1 %21, i32 %22, i32 19
  br label %24

24:                                               ; preds = %5, %10, %15, %17, %19
  %25 = phi i32 [ %23, %19 ], [ %11, %10 ], [ %16, %15 ], [ %1, %5 ], [ 15, %17 ]
  %26 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = sext i32 %25 to i64
  %29 = mul i64 %28, 72340172838076673
  %30 = and i64 %29, %27
  %31 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 1
  store i64 %30, i64* %31, align 8
  %32 = icmp ult i32 %2, 2
  br i1 %32, label %50, label %33

33:                                               ; preds = %24
  %34 = add i32 %2, -768
  %35 = icmp ult i32 %34, 9
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = add nsw i32 %2, -766
  br label %50

38:                                               ; preds = %33
  %39 = add i32 %2, -32769
  %40 = icmp ult i32 %39, 4
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = add nsw i32 %2, -32758
  br label %50

43:                                               ; preds = %38
  %44 = icmp eq i32 %2, 34185
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = add i32 %2, -35065
  %47 = icmp ult i32 %46, 3
  %48 = add i32 %2, -35049
  %49 = select i1 %47, i32 %48, i32 19
  br label %50

50:                                               ; preds = %24, %36, %41, %43, %45
  %51 = phi i32 [ %49, %45 ], [ %37, %36 ], [ %42, %41 ], [ %2, %24 ], [ 15, %43 ]
  %52 = sext i32 %51 to i64
  %53 = mul i64 %52, 72340172838076673
  %54 = and i64 %53, %27
  %55 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = icmp ult i32 %3, 2
  br i1 %56, label %74, label %57

57:                                               ; preds = %50
  %58 = add i32 %3, -768
  %59 = icmp ult i32 %58, 9
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = add nsw i32 %3, -766
  br label %74

62:                                               ; preds = %57
  %63 = add i32 %3, -32769
  %64 = icmp ult i32 %63, 4
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = add nsw i32 %3, -32758
  br label %74

67:                                               ; preds = %62
  %68 = icmp eq i32 %3, 34185
  br i1 %68, label %74, label %69

69:                                               ; preds = %67
  %70 = add i32 %3, -35065
  %71 = icmp ult i32 %70, 3
  %72 = add i32 %3, -35049
  %73 = select i1 %71, i32 %72, i32 19
  br label %74

74:                                               ; preds = %50, %60, %65, %67, %69
  %75 = phi i32 [ %73, %69 ], [ %61, %60 ], [ %66, %65 ], [ %3, %50 ], [ 15, %67 ]
  %76 = sext i32 %75 to i64
  %77 = mul i64 %76, 72340172838076673
  %78 = and i64 %77, %27
  %79 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 3
  store i64 %78, i64* %79, align 8
  %80 = icmp ult i32 %4, 2
  br i1 %80, label %98, label %81

81:                                               ; preds = %74
  %82 = add i32 %4, -768
  %83 = icmp ult i32 %82, 9
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = add nsw i32 %4, -766
  br label %98

86:                                               ; preds = %81
  %87 = add i32 %4, -32769
  %88 = icmp ult i32 %87, 4
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = add nsw i32 %4, -32758
  br label %98

91:                                               ; preds = %86
  %92 = icmp eq i32 %4, 34185
  br i1 %92, label %98, label %93

93:                                               ; preds = %91
  %94 = add i32 %4, -35065
  %95 = icmp ult i32 %94, 3
  %96 = add i32 %4, -35049
  %97 = select i1 %95, i32 %96, i32 19
  br label %98

98:                                               ; preds = %74, %84, %89, %91, %93
  %99 = phi i32 [ %97, %93 ], [ %85, %84 ], [ %90, %89 ], [ %4, %74 ], [ 15, %91 ]
  %100 = sext i32 %99 to i64
  %101 = mul i64 %100, 72340172838076673
  %102 = and i64 %101, %27
  %103 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 4
  store i64 %102, i64* %103, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt17setFactorsIndexedEmjjjj(%"class.gl::BlendStateExt"* nocapture, i64, i32, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %7 = icmp ult i32 %2, 2
  br i1 %7, label %25, label %8

8:                                                ; preds = %6
  %9 = add i32 %2, -768
  %10 = icmp ult i32 %9, 9
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = add nsw i32 %2, -766
  br label %25

13:                                               ; preds = %8
  %14 = add i32 %2, -32769
  %15 = icmp ult i32 %14, 4
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = add nsw i32 %2, -32758
  br label %25

18:                                               ; preds = %13
  %19 = icmp eq i32 %2, 34185
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = add i32 %2, -35065
  %22 = icmp ult i32 %21, 3
  %23 = add i32 %2, -35049
  %24 = select i1 %22, i32 %23, i32 19
  br label %25

25:                                               ; preds = %6, %11, %16, %18, %20
  %26 = phi i32 [ %24, %20 ], [ %12, %11 ], [ %17, %16 ], [ %2, %6 ], [ 15, %18 ]
  %27 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 1
  %28 = shl i64 %1, 3
  %29 = shl i64 255, %28
  %30 = sext i32 %26 to i64
  %31 = shl i64 %30, %28
  %32 = load i64, i64* %27, align 8
  %33 = xor i64 %31, %32
  %34 = and i64 %33, %29
  %35 = xor i64 %34, %32
  store i64 %35, i64* %27, align 8
  %36 = icmp ult i32 %3, 2
  br i1 %36, label %54, label %37

37:                                               ; preds = %25
  %38 = add i32 %3, -768
  %39 = icmp ult i32 %38, 9
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = add nsw i32 %3, -766
  br label %54

42:                                               ; preds = %37
  %43 = add i32 %3, -32769
  %44 = icmp ult i32 %43, 4
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = add nsw i32 %3, -32758
  br label %54

47:                                               ; preds = %42
  %48 = icmp eq i32 %3, 34185
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = add i32 %3, -35065
  %51 = icmp ult i32 %50, 3
  %52 = add i32 %3, -35049
  %53 = select i1 %51, i32 %52, i32 19
  br label %54

54:                                               ; preds = %25, %40, %45, %47, %49
  %55 = phi i32 [ %53, %49 ], [ %41, %40 ], [ %46, %45 ], [ %3, %25 ], [ 15, %47 ]
  %56 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 2
  %57 = sext i32 %55 to i64
  %58 = shl i64 %57, %28
  %59 = load i64, i64* %56, align 8
  %60 = xor i64 %58, %59
  %61 = and i64 %60, %29
  %62 = xor i64 %61, %59
  store i64 %62, i64* %56, align 8
  %63 = icmp ult i32 %4, 2
  br i1 %63, label %81, label %64

64:                                               ; preds = %54
  %65 = add i32 %4, -768
  %66 = icmp ult i32 %65, 9
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = add nsw i32 %4, -766
  br label %81

69:                                               ; preds = %64
  %70 = add i32 %4, -32769
  %71 = icmp ult i32 %70, 4
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = add nsw i32 %4, -32758
  br label %81

74:                                               ; preds = %69
  %75 = icmp eq i32 %4, 34185
  br i1 %75, label %81, label %76

76:                                               ; preds = %74
  %77 = add i32 %4, -35065
  %78 = icmp ult i32 %77, 3
  %79 = add i32 %4, -35049
  %80 = select i1 %78, i32 %79, i32 19
  br label %81

81:                                               ; preds = %54, %67, %72, %74, %76
  %82 = phi i32 [ %80, %76 ], [ %68, %67 ], [ %73, %72 ], [ %4, %54 ], [ 15, %74 ]
  %83 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 3
  %84 = sext i32 %82 to i64
  %85 = shl i64 %84, %28
  %86 = load i64, i64* %83, align 8
  %87 = xor i64 %85, %86
  %88 = and i64 %87, %29
  %89 = xor i64 %88, %86
  store i64 %89, i64* %83, align 8
  %90 = icmp ult i32 %5, 2
  br i1 %90, label %108, label %91

91:                                               ; preds = %81
  %92 = add i32 %5, -768
  %93 = icmp ult i32 %92, 9
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = add nsw i32 %5, -766
  br label %108

96:                                               ; preds = %91
  %97 = add i32 %5, -32769
  %98 = icmp ult i32 %97, 4
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = add nsw i32 %5, -32758
  br label %108

101:                                              ; preds = %96
  %102 = icmp eq i32 %5, 34185
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = add i32 %5, -35065
  %105 = icmp ult i32 %104, 3
  %106 = add i32 %5, -35049
  %107 = select i1 %105, i32 %106, i32 19
  br label %108

108:                                              ; preds = %81, %94, %99, %101, %103
  %109 = phi i32 [ %107, %103 ], [ %95, %94 ], [ %100, %99 ], [ %5, %81 ], [ 15, %101 ]
  %110 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 4
  %111 = sext i32 %109 to i64
  %112 = shl i64 %111, %28
  %113 = load i64, i64* %110, align 8
  %114 = xor i64 %112, %113
  %115 = and i64 %114, %29
  %116 = xor i64 %115, %113
  store i64 %116, i64* %110, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13BlendStateExt17setFactorsIndexedEmmRKS0_(%"class.gl::BlendStateExt"* nocapture, i64, i64, %"class.gl::BlendStateExt"* nocapture readonly dereferenceable(96)) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %3, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = shl i64 %2, 3
  %8 = lshr i64 %6, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 1
  %11 = shl i64 %1, 3
  %12 = shl i64 255, %11
  %13 = shl i64 %9, %11
  %14 = load i64, i64* %10, align 8
  %15 = xor i64 %13, %14
  %16 = and i64 %15, %12
  %17 = xor i64 %16, %14
  store i64 %17, i64* %10, align 8
  %18 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %3, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, %7
  %21 = and i64 %20, 255
  %22 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 2
  %23 = shl i64 %21, %11
  %24 = load i64, i64* %22, align 8
  %25 = xor i64 %23, %24
  %26 = and i64 %25, %12
  %27 = xor i64 %26, %24
  store i64 %27, i64* %22, align 8
  %28 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %3, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, %7
  %31 = and i64 %30, 255
  %32 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 3
  %33 = shl i64 %31, %11
  %34 = load i64, i64* %32, align 8
  %35 = xor i64 %33, %34
  %36 = and i64 %35, %12
  %37 = xor i64 %36, %34
  store i64 %37, i64* %32, align 8
  %38 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %3, i64 0, i32 4
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %39, %7
  %41 = and i64 %40, 255
  %42 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 4
  %43 = shl i64 %41, %11
  %44 = load i64, i64* %42, align 8
  %45 = xor i64 %43, %44
  %46 = and i64 %45, %12
  %47 = xor i64 %46, %44
  store i64 %47, i64* %42, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl13BlendStateExt18getSrcColorIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 255
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = add nsw i32 %8, -2
  %12 = icmp ult i32 %11, 9
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = add nuw nsw i32 %8, 766
  br label %24

15:                                               ; preds = %10
  %16 = add nsw i32 %8, -11
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = add nuw nsw i32 %8, 32758
  br label %24

20:                                               ; preds = %15
  %21 = icmp eq i32 %8, 15
  %22 = add nuw nsw i32 %8, 35049
  %23 = select i1 %21, i32 34185, i32 %22
  br label %24

24:                                               ; preds = %2, %13, %18, %20
  %25 = phi i32 [ %23, %20 ], [ %14, %13 ], [ %19, %18 ], [ %8, %2 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl13BlendStateExt18getDstColorIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 255
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = add nsw i32 %8, -2
  %12 = icmp ult i32 %11, 9
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = add nuw nsw i32 %8, 766
  br label %24

15:                                               ; preds = %10
  %16 = add nsw i32 %8, -11
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = add nuw nsw i32 %8, 32758
  br label %24

20:                                               ; preds = %15
  %21 = icmp eq i32 %8, 15
  %22 = add nuw nsw i32 %8, 35049
  %23 = select i1 %21, i32 34185, i32 %22
  br label %24

24:                                               ; preds = %2, %13, %18, %20
  %25 = phi i32 [ %23, %20 ], [ %14, %13 ], [ %19, %18 ], [ %8, %2 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl13BlendStateExt18getSrcAlphaIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 255
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = add nsw i32 %8, -2
  %12 = icmp ult i32 %11, 9
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = add nuw nsw i32 %8, 766
  br label %24

15:                                               ; preds = %10
  %16 = add nsw i32 %8, -11
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = add nuw nsw i32 %8, 32758
  br label %24

20:                                               ; preds = %15
  %21 = icmp eq i32 %8, 15
  %22 = add nuw nsw i32 %8, 35049
  %23 = select i1 %21, i32 34185, i32 %22
  br label %24

24:                                               ; preds = %2, %13, %18, %20
  %25 = phi i32 [ %23, %20 ], [ %14, %13 ], [ %19, %18 ], [ %8, %2 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl13BlendStateExt18getDstAlphaIndexedEm(%"class.gl::BlendStateExt"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %1, 3
  %6 = lshr i64 %4, %5
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 255
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = add nsw i32 %8, -2
  %12 = icmp ult i32 %11, 9
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = add nuw nsw i32 %8, 766
  br label %24

15:                                               ; preds = %10
  %16 = add nsw i32 %8, -11
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = add nuw nsw i32 %8, 32758
  br label %24

20:                                               ; preds = %15
  %21 = icmp eq i32 %8, 15
  %22 = add nuw nsw i32 %8, 35049
  %23 = select i1 %21, i32 34185, i32 %22
  br label %24

24:                                               ; preds = %2, %13, %18, %20
  %25 = phi i32 [ %23, %20 ], [ %14, %13 ], [ %19, %18 ], [ %8, %2 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl13BlendStateExt14compareFactorsEmmmm(%"class.angle::BitSetT.50"* noalias nocapture sret, %"class.gl::BlendStateExt"* nocapture readonly, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = xor i64 %8, %2
  %10 = and i64 %9, 9187201950435737471
  %11 = add nuw i64 %10, 9187201950435737471
  %12 = or i64 %11, %9
  %13 = and i64 %12, -9187201950435737472
  %14 = mul i64 %13, 567382630219905
  %15 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = xor i64 %16, %3
  %18 = and i64 %17, 9187201950435737471
  %19 = add nuw i64 %18, 9187201950435737471
  %20 = or i64 %19, %17
  %21 = and i64 %20, -9187201950435737472
  %22 = mul i64 %21, 567382630219905
  %23 = or i64 %22, %14
  %24 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = xor i64 %25, %4
  %27 = and i64 %26, 9187201950435737471
  %28 = add nuw i64 %27, 9187201950435737471
  %29 = or i64 %28, %26
  %30 = and i64 %29, -9187201950435737472
  %31 = mul i64 %30, 567382630219905
  %32 = or i64 %23, %31
  %33 = getelementptr inbounds %"class.gl::BlendStateExt", %"class.gl::BlendStateExt"* %1, i64 0, i32 4
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, %5
  %36 = and i64 %35, 9187201950435737471
  %37 = add nuw i64 %36, 9187201950435737471
  %38 = or i64 %37, %35
  %39 = and i64 %38, -9187201950435737472
  %40 = mul i64 %39, 567382630219905
  %41 = getelementptr inbounds %"class.angle::BitSetT.50", %"class.angle::BitSetT.50"* %0, i64 0, i32 0
  %42 = or i64 %32, %40
  %43 = lshr i64 %42, 56
  %44 = trunc i64 %43 to i8
  store i8 %44, i8* %41, align 1, !alias.scope !9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2gl9Rectangle4flipEbb(%"struct.gl::Rectangle"* nocapture readonly, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = bitcast %"struct.gl::Rectangle"* %0 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = lshr i64 %5, 32
  %7 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %8 = bitcast i32* %7 to i64*
  %9 = load i64, i64* %8, align 4
  br i1 %1, label %10, label %16

10:                                               ; preds = %3
  %11 = add i64 %9, %5
  %12 = sub i64 0, %9
  %13 = and i64 %12, 4294967295
  %14 = and i64 %9, -4294967296
  %15 = or i64 %14, %13
  br label %16

16:                                               ; preds = %10, %3
  %17 = phi i64 [ %15, %10 ], [ %9, %3 ]
  %18 = phi i64 [ %11, %10 ], [ %5, %3 ]
  br i1 %2, label %19, label %26

19:                                               ; preds = %16
  %20 = lshr i64 %17, 32
  %21 = add nuw nsw i64 %20, %6
  %22 = and i64 %17, -4294967296
  %23 = sub i64 0, %22
  %24 = and i64 %17, 4294967295
  %25 = or i64 %24, %23
  br label %26

26:                                               ; preds = %19, %16
  %27 = phi i64 [ %25, %19 ], [ %17, %16 ]
  %28 = phi i64 [ %21, %19 ], [ %6, %16 ]
  %29 = shl i64 %28, 32
  %30 = and i64 %18, 4294967295
  %31 = or i64 %29, %30
  %32 = insertvalue { i64, i64 } undef, i64 %31, 0
  %33 = insertvalue { i64, i64 } %32, i64 %27, 1
  ret { i64, i64 } %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2gl9Rectangle14removeReversalEv(%"struct.gl::Rectangle"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  %5 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = bitcast %"struct.gl::Rectangle"* %0 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = lshr i64 %9, 32
  %11 = bitcast i32* %2 to i64*
  %12 = load i64, i64* %11, align 4
  br i1 %4, label %13, label %19

13:                                               ; preds = %1
  %14 = add i64 %12, %9
  %15 = sub i64 0, %12
  %16 = and i64 %15, 4294967295
  %17 = and i64 %12, -4294967296
  %18 = or i64 %17, %16
  br label %19

19:                                               ; preds = %13, %1
  %20 = phi i64 [ %18, %13 ], [ %12, %1 ]
  %21 = phi i64 [ %14, %13 ], [ %9, %1 ]
  br i1 %7, label %22, label %29

22:                                               ; preds = %19
  %23 = lshr i64 %20, 32
  %24 = add nuw nsw i64 %23, %10
  %25 = and i64 %20, -4294967296
  %26 = sub i64 0, %25
  %27 = and i64 %20, 4294967295
  %28 = or i64 %27, %26
  br label %29

29:                                               ; preds = %19, %22
  %30 = phi i64 [ %28, %22 ], [ %20, %19 ]
  %31 = phi i64 [ %24, %22 ], [ %10, %19 ]
  %32 = shl i64 %31, 32
  %33 = and i64 %21, 4294967295
  %34 = or i64 %32, %33
  %35 = insertvalue { i64, i64 } undef, i64 %34, 0
  %36 = insertvalue { i64, i64 } %35, i64 %30, 1
  ret { i64, i64 } %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl9Rectangle8enclosesERKS0_(%"struct.gl::Rectangle"* nocapture readonly, %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %10, %12
  br i1 %13, label %30, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, %4
  %18 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, %6
  %21 = icmp slt i32 %17, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, %10
  %26 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, %12
  %29 = icmp sge i32 %25, %28
  br label %30

30:                                               ; preds = %14, %8, %2, %22
  %31 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %29, %22 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl13ClipRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %5
  %9 = xor i32 %8, %5
  %10 = xor i32 %8, %7
  %11 = and i32 %9, %10
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %84

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %15
  %19 = xor i32 %18, %15
  %20 = xor i32 %18, %17
  %21 = and i32 %19, %20
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %84

23:                                               ; preds = %13
  %24 = icmp slt i32 %5, %8
  %25 = select i1 %24, i32 %5, i32 %8
  %26 = select i1 %24, i32 %8, i32 %5
  %27 = icmp slt i32 %15, %18
  %28 = select i1 %27, i32 %15, i32 %18
  %29 = select i1 %27, i32 %18, i32 %15
  %30 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, %31
  %35 = xor i32 %34, %31
  %36 = xor i32 %34, %33
  %37 = and i32 %35, %36
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %39, label %84

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, %41
  %45 = xor i32 %44, %41
  %46 = xor i32 %44, %43
  %47 = and i32 %45, %46
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %49, label %84

49:                                               ; preds = %39
  %50 = icmp slt i32 %31, %34
  %51 = select i1 %50, i32 %31, i32 %34
  %52 = select i1 %50, i32 %34, i32 %31
  %53 = icmp slt i32 %41, %44
  %54 = select i1 %53, i32 %41, i32 %44
  %55 = select i1 %53, i32 %44, i32 %41
  %56 = icmp slt i32 %25, %52
  %57 = icmp sgt i32 %26, %51
  %58 = and i1 %56, %57
  %59 = icmp slt i32 %28, %55
  %60 = and i1 %58, %59
  %61 = icmp sgt i32 %29, %54
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %84

63:                                               ; preds = %49
  %64 = icmp slt i32 %25, %51
  %65 = select i1 %64, i32 %51, i32 %25
  %66 = icmp slt i32 %28, %54
  %67 = select i1 %66, i32 %54, i32 %28
  %68 = icmp slt i32 %52, %26
  %69 = select i1 %68, i32 %52, i32 %26
  %70 = sub nsw i32 %69, %65
  %71 = icmp slt i32 %55, %29
  %72 = select i1 %71, i32 %55, i32 %29
  %73 = sub nsw i32 %72, %67
  %74 = icmp eq %"struct.gl::Rectangle"* %2, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  store i32 %65, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  store i32 %67, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  store i32 %70, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  store i32 %73, i32* %79, align 4
  br label %80

80:                                               ; preds = %63, %75
  %81 = icmp ne i32 %70, 0
  %82 = icmp ne i32 %73, 0
  %83 = and i1 %81, %82
  br label %84

84:                                               ; preds = %13, %39, %49, %80, %23, %3
  %85 = phi i1 [ false, %3 ], [ false, %13 ], [ false, %23 ], [ false, %39 ], [ %83, %80 ], [ false, %49 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl21GetEnclosingRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %5
  %9 = select i1 %8, i32 %7, i32 %5
  %10 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %11
  %15 = select i1 %14, i32 %13, i32 %11
  %16 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %5
  %19 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, %7
  %22 = icmp slt i32 %18, %21
  %23 = select i1 %22, i32 %21, i32 %18
  %24 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %11
  %27 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, %13
  %30 = icmp slt i32 %26, %29
  %31 = select i1 %30, i32 %29, i32 %26
  %32 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  store i32 %9, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  store i32 %15, i32* %33, align 4
  %34 = sub nsw i32 %23, %9
  %35 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  store i32 %34, i32* %35, align 4
  %36 = sub nsw i32 %31, %15
  %37 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  store i32 %36, i32* %37, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15ExtendRectangleERKNS_9RectangleES2_PS0_(%"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture readonly dereferenceable(16), %"struct.gl::Rectangle"* nocapture) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %5
  %9 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, %10
  %14 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, %15
  %19 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %22, %20
  %24 = icmp sle i32 %20, %10
  %25 = icmp sge i32 %23, %13
  %26 = and i1 %24, %25
  %27 = icmp sge i32 %15, %5
  %28 = icmp slt i32 %18, %5
  %29 = or i1 %27, %28
  %30 = select i1 %26, i32 %15, i32 %5
  %31 = select i1 %29, i32 %5, i32 %30
  %32 = icmp sle i32 %15, %8
  %33 = icmp sgt i32 %18, %8
  %34 = and i1 %32, %33
  %35 = and i1 %34, %26
  %36 = select i1 %35, i32 %18, i32 %8
  %37 = icmp sle i32 %15, %31
  %38 = icmp sge i32 %18, %36
  %39 = and i1 %37, %38
  %40 = icmp sge i32 %20, %10
  %41 = icmp slt i32 %23, %10
  %42 = or i1 %40, %41
  %43 = select i1 %39, i32 %20, i32 %10
  %44 = select i1 %42, i32 %10, i32 %43
  %45 = icmp sle i32 %20, %13
  %46 = icmp sgt i32 %23, %13
  %47 = and i1 %45, %46
  %48 = and i1 %47, %39
  %49 = select i1 %48, i32 %23, i32 %13
  %50 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 0
  store i32 %31, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 1
  store i32 %44, i32* %51, align 4
  %52 = sub nsw i32 %36, %31
  %53 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 2
  store i32 %52, i32* %53, align 4
  %54 = sub nsw i32 %49, %44
  %55 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %2, i64 0, i32 3
  store i32 %54, i32* %55, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl3BoxeqERKS0_(%"struct.gl::Box"* nocapture readonly, %"struct.gl::Box"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br label %38

38:                                               ; preds = %32, %26, %20, %14, %8, %2
  %39 = phi i1 [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %37, %32 ]
  ret i1 %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl3BoxneERKS0_(%"struct.gl::Box"* nocapture readonly, %"struct.gl::Box"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %34, %36
  br label %38

38:                                               ; preds = %2, %8, %14, %20, %26, %32
  %39 = phi i1 [ true, %26 ], [ true, %20 ], [ true, %14 ], [ true, %8 ], [ true, %2 ], [ %37, %32 ]
  ret i1 %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK2gl3Box6toRectEv(%"struct.gl::Box"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %5 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %3 to i64
  %13 = or i64 %11, %12
  %14 = insertvalue { i64, i64 } undef, i64 %13, 0
  %15 = zext i32 %9 to i64
  %16 = shl nuw i64 %15, 32
  %17 = zext i32 %7 to i64
  %18 = or i64 %16, %17
  %19 = insertvalue { i64, i64 } %14, i64 %18, 1
  ret { i64, i64 } %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl3Box16coversSameExtentERKNS_7ExtentsE(%"struct.gl::Box"* nocapture readonly, %"struct.gl::Extents"* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.gl::Box", %"struct.gl::Box"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br label %32

32:                                               ; preds = %26, %20, %14, %10, %6, %2
  %33 = phi i1 [ false, %20 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ false, %2 ], [ %31, %26 ]
  ret i1 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gleqERKNS_6OffsetES2_(%"struct.gl::Offset"* nocapture readonly dereferenceable(12), %"struct.gl::Offset"* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2glneERKNS_6OffsetES2_(%"struct.gl::Offset"* nocapture readonly dereferenceable(12), %"struct.gl::Offset"* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Offset", %"struct.gl::Offset"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ true, %8 ], [ true, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gleqERKNS_7ExtentsES2_(%"struct.gl::Extents"* nocapture readonly dereferenceable(12), %"struct.gl::Extents"* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2glneERKNS_7ExtentsES2_(%"struct.gl::Extents"* nocapture readonly dereferenceable(12), %"struct.gl::Extents"* nocapture readonly dereferenceable(12)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.gl::Extents", %"struct.gl::Extents"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ true, %8 ], [ true, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl26ValidateComponentTypeMasksEmmmm(i64, i64, i64, i64) local_unnamed_addr #7 {
  %5 = shl i64 %2, 16
  %6 = or i64 %5, %2
  %7 = shl i64 %3, 16
  %8 = or i64 %7, %3
  %9 = and i64 %6, %1
  %10 = xor i64 %9, %0
  %11 = and i64 %10, %8
  %12 = icmp eq i64 %11, 0
  ret i1 %12
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl27GetBoundBufferAvailableSizeERKNS_20OffsetBindingPointerINS_6BufferEEE(%"class.gl::OffsetBindingPointer"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %2, align 8
  %4 = icmp eq %"class.gl::Buffer"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %3, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.gl::OffsetBindingPointer", %"class.gl::OffsetBindingPointer"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp sgt i64 %7, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = sub nsw i64 %7, %13
  %17 = icmp slt i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  br label %19

19:                                               ; preds = %15, %11, %5, %1
  %20 = phi i64 [ 0, %1 ], [ %7, %5 ], [ %18, %15 ], [ 0, %11 ]
  ret i64 %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14BindingPointerINS_7TextureEED0Ev(%"class.gl::BindingPointer"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.gl::BindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl7TextureENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer.26"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer.26"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2gl13BlendStateExt11StorageTypeIhLm16EE11GetDiffMaskEmm: argument 0"}
!5 = distinct !{!5, !"_ZN2gl13BlendStateExt11StorageTypeIhLm16EE11GetDiffMaskEmm"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZorILm8EhmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!8 = distinct !{!8, !"_ZorILm8EhmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZorILm8EhmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!11 = distinct !{!11, !"_ZorILm8EhmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
