; ModuleID = '../../components/visitedlink/browser/visitedlink_event_listener.cc'
source_filename = "../../components/visitedlink/browser/visitedlink_event_listener.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.visitedlink::VisitedLinkEventListener" = type { %"class.visitedlink::VisitedLinkWriter::Listener", %"class.content::NotificationObserver", %"class.base::OneShotTimer", %"class.base::OneShotTimer"*, %"class.std::__1::vector", %"class.content::NotificationRegistrar", %"class.std::__1::map", %"class.base::ReadOnlySharedMemoryRegion", %"class.content::BrowserContext"* }
%"class.visitedlink::VisitedLinkWriter::Listener" = type { i32 (...)** }
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair.13" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.content::BrowserContext" = type opaque
%"class.content::Source" = type { %"class.content::NotificationSource" }
%"class.content::NotificationSource" = type { i8* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.visitedlink::VisitedLinkUpdater"* }
%"class.visitedlink::VisitedLinkUpdater" = type { i8, i8, i32, %"class.mojo::Remote", %"class.std::__1::vector" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.207" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.39, %"class.std::__1::unique_ptr.158", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr, i32 }>
%class.scoped_refptr.39 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.120", %"class.absl::optional.125", %"class.absl::optional.72", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.149", i8, [7 x i8], %class.scoped_refptr, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.40" }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.50", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.56" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.56" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr, %"class.std::__1::unique_ptr.57", %"class.absl::optional", %"struct.std::__1::atomic.68", i8, i8, i8, i8, i32, i32, %"class.absl::optional.72", %"class.std::__1::unique_ptr.77", i8, i64, %class.scoped_refptr.109, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.119" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr, i8, %"class.mojo::ScopedHandleBase.60", %class.scoped_refptr.61, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.62" }
%"class.mojo::ScopedHandleBase.60" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.61 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.62" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.67", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.67" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.80", i8, i64, %class.scoped_refptr.81, %class.scoped_refptr.105 }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.81 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.83", %"class.std::__1::map.94", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.83" = type { %"class.std::__1::__tree.84" }
%"class.std::__1::__tree.84" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.94" = type { %"class.std::__1::__tree.95" }
%"class.std::__1::__tree.95" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%class.scoped_refptr.105 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.109 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.110", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.112", %"struct.std::__1::atomic.112", %"struct.std::__1::atomic.112", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.110" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.216", [4 x i8], %"class.base::RepeatingCallback.161", %class.scoped_refptr, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.217", [4 x i8] }>
%"class.base::RefCountedThreadSafe.216" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.161" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.119" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, [7 x i8], %union.anon.129 }
%union.anon.129 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.134 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.134 = type { %"class.std::__1::map.137" }
%"class.std::__1::map.137" = type { %"class.std::__1::__tree.138" }
%"class.std::__1::__tree.138" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.148"*, i64 }
%"class.std::__1::unique_ptr.148" = type opaque
%"class.std::__1::map.149" = type { %"class.std::__1::__tree.150" }
%"class.std::__1::__tree.150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.161", %"class.base::OnceCallback.162", %"class.absl::optional.163", %"class.absl::optional.168", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.174", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.182", %"class.std::__1::map.193", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.202", i8, %class.scoped_refptr, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.203" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.162" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.163" = type { %"class.absl::optional_internal::optional_data.164" }
%"class.absl::optional_internal::optional_data.164" = type { %"class.absl::optional_internal::optional_data_base.165" }
%"class.absl::optional_internal::optional_data_base.165" = type { %"class.absl::optional_internal::optional_data_dtor_base.166" }
%"class.absl::optional_internal::optional_data_dtor_base.166" = type { i8, %union.anon.167 }
%union.anon.167 = type { %"class.base::TimeDelta" }
%"class.absl::optional.168" = type { %"class.absl::optional_internal::optional_data.169" }
%"class.absl::optional_internal::optional_data.169" = type { %"class.absl::optional_internal::optional_data_base.170" }
%"class.absl::optional_internal::optional_data_base.170" = type { %"class.absl::optional_internal::optional_data_dtor_base.171" }
%"class.absl::optional_internal::optional_data_dtor_base.171" = type { i8, %union.anon.172 }
%union.anon.172 = type { %"class.base::OneShotTimer" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.177", %class.scoped_refptr.178 }
%"class.base::RepeatingCallback.177" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.178 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.40", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.193" = type { %"class.std::__1::__tree.194" }
%"class.std::__1::__tree.194" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::OnceCallback.202" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.203" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* }
%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy" = type { %"class.visitedlink::mojom::VisitedLinkNotificationSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.visitedlink::mojom::VisitedLinkNotificationSink" = type { i32 (...)** }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.26", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.content::NotificationDetails" = type { i8* }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.39, %"class.std::__1::unique_ptr.158", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr, i32, [4 x i8] }>
%"class.content::RenderWidgetHost" = type { i32 (...)** }
%"class.mojo::PassThroughFilter" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::GenericPendingReceiver" = type <{ %"class.absl::optional.246", %"class.mojo::ScopedHandleBase", [4 x i8] }>
%"class.absl::optional.246" = type { %"class.absl::optional_internal::optional_data.247" }
%"class.absl::optional_internal::optional_data.247" = type { %"class.absl::optional_internal::optional_data_base.248" }
%"class.absl::optional_internal::optional_data_base.248" = type { %"class.absl::optional_internal::optional_data_dtor_base.249" }
%"class.absl::optional_internal::optional_data_dtor_base.249" = type { i8, %union.anon.250 }
%union.anon.250 = type { %"class.std::__1::basic_string" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

$_ZN11visitedlink18VisitedLinkUpdater6UpdateEv = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE6insertINS_11__wrap_iterIPKmEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPmEEE4typeES8_SA_SA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN11visitedlink18VisitedLinkUpdaterC2Ei = comdat any

$_ZN4mojo6RemoteIN11visitedlink5mojom27VisitedLinkNotificationSinkEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN11visitedlink5mojom27VisitedLinkNotificationSinkEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN11visitedlink24VisitedLinkEventListenerE = hidden unnamed_addr constant { [8 x i8*], [5 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*)* @_ZN11visitedlink24VisitedLinkEventListenerD2Ev to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*)* @_ZN11visitedlink24VisitedLinkEventListenerD0Ev to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*, %"class.base::ReadOnlySharedMemoryRegion"*)* @_ZN11visitedlink24VisitedLinkEventListener8NewTableEPN4base26ReadOnlySharedMemoryRegionE to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*, i64)* @_ZN11visitedlink24VisitedLinkEventListener3AddEm to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*, i1)* @_ZN11visitedlink24VisitedLinkEventListener5ResetEb to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*, i32, %"class.content::NotificationSource"*, %"class.content::NotificationDetails"*)* @_ZN11visitedlink24VisitedLinkEventListener7ObserveEiRKN7content18NotificationSourceERKNS1_19NotificationDetailsE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*, i32, %"class.content::NotificationSource"*, %"class.content::NotificationDetails"*)* @_ZThn8_N11visitedlink24VisitedLinkEventListener7ObserveEiRKN7content18NotificationSourceERKNS1_19NotificationDetailsE to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*)* @_ZThn8_N11visitedlink24VisitedLinkEventListenerD1Ev to i8*), i8* bitcast (void (%"class.visitedlink::VisitedLinkEventListener"*)* @_ZThn8_N11visitedlink24VisitedLinkEventListenerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"../../components/visitedlink/browser/visitedlink_event_listener.cc\00", align 1
@_ZN11visitedlink5mojom27VisitedLinkNotificationSink5Name_E = external constant [0 x i8], align 1

@_ZN11visitedlink24VisitedLinkEventListenerC1EPN7content14BrowserContextE = hidden unnamed_addr alias void (%"class.visitedlink::VisitedLinkEventListener"*, %"class.content::BrowserContext"*), void (%"class.visitedlink::VisitedLinkEventListener"*, %"class.content::BrowserContext"*)* @_ZN11visitedlink24VisitedLinkEventListenerC2EPN7content14BrowserContextE
@_ZN11visitedlink24VisitedLinkEventListenerD1Ev = hidden unnamed_addr alias void (%"class.visitedlink::VisitedLinkEventListener"*), void (%"class.visitedlink::VisitedLinkEventListener"*)* @_ZN11visitedlink24VisitedLinkEventListenerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListenerC2EPN7content14BrowserContextE(%"class.visitedlink::VisitedLinkEventListener"*, %"class.content::BrowserContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.content::Source", align 8
  %4 = alloca %"class.content::Source", align 8
  %5 = alloca %"class.content::Source", align 8
  %6 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 1
  %7 = bitcast %"class.visitedlink::VisitedLinkEventListener"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 2
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %8) #10
  %9 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 3
  store %"class.base::OneShotTimer"* %8, %"class.base::OneShotTimer"** %9, align 8
  %10 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 5
  tail call void @_ZN7content21NotificationRegistrarC1Ev(%"class.content::NotificationRegistrar"* %12) #10
  %13 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 7
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %17) #10
  %18 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 8
  store %"class.content::BrowserContext"* %1, %"class.content::BrowserContext"** %18, align 8
  %19 = bitcast %"class.content::Source"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %3, i64 0, i32 0, i32 0
  store i8* null, i8** %20, align 8, !alias.scope !2
  %21 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %3, i64 0, i32 0
  call void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"* %12, %"class.content::NotificationObserver"* %6, i32 6, %"class.content::NotificationSource"* nonnull dereferenceable(8) %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %22 = bitcast %"class.content::Source"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %4, i64 0, i32 0, i32 0
  store i8* null, i8** %23, align 8, !alias.scope !5
  %24 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %4, i64 0, i32 0
  call void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"* %12, %"class.content::NotificationObserver"* %6, i32 7, %"class.content::NotificationSource"* nonnull dereferenceable(8) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %25 = bitcast %"class.content::Source"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %5, i64 0, i32 0, i32 0
  store i8* null, i8** %26, align 8, !alias.scope !8
  %27 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %5, i64 0, i32 0
  call void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"* %12, %"class.content::NotificationObserver"* %6, i32 10, %"class.content::NotificationSource"* nonnull dereferenceable(8) %27) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  ret void
}

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

declare void @_ZN7content21NotificationRegistrarC1Ev(%"class.content::NotificationRegistrar"*) unnamed_addr #1

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #1

declare void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"*, %"class.content::NotificationObserver"*, i32, %"class.content::NotificationSource"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListenerD2Ev(%"class.visitedlink::VisitedLinkEventListener"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.visitedlink::VisitedLinkEventListener"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = ptrtoint i64* %4 to i64
  %10 = bitcast i64** %5 to i64*
  store i64 %9, i64* %10, align 8
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 7
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %12) #10
  %13 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0
  %14 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %13, %"class.std::__1::__tree_node"* %16) #10
  %17 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 5
  tail call void @_ZN7content21NotificationRegistrarD1Ev(%"class.content::NotificationRegistrar"* %17) #10
  %18 = load i64*, i64** %3, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %11
  %21 = ptrtoint i64* %18 to i64
  %22 = bitcast i64** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast i64* %18 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %11, %20
  %25 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 2
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %25) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content21NotificationRegistrarD1Ev(%"class.content::NotificationRegistrar"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11visitedlink24VisitedLinkEventListenerD1Ev(%"class.visitedlink::VisitedLinkEventListener"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 -1, i32 8
  %3 = bitcast %"class.content::BrowserContext"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 19
  %5 = bitcast %"class.content::BrowserContext"** %4 to i64**
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 20
  %8 = bitcast %"class.content::BrowserContext"** %7 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = icmp eq i64* %6, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = ptrtoint i64* %6 to i64
  %13 = bitcast %"class.content::BrowserContext"** %7 to i64*
  store i64 %12, i64* %13, align 8
  br label %14

14:                                               ; preds = %11, %1
  %15 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 28
  %16 = bitcast %"class.content::BrowserContext"** %15 to %"class.base::ReadOnlySharedMemoryRegion"*
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %16) #10
  %17 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 25
  %18 = bitcast %"class.content::BrowserContext"** %17 to %"class.std::__1::__tree"*
  %19 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 26
  %20 = bitcast %"class.content::BrowserContext"** %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %18, %"class.std::__1::__tree_node"* %21) #10
  %22 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 22
  %23 = bitcast %"class.content::BrowserContext"** %22 to %"class.content::NotificationRegistrar"*
  tail call void @_ZN7content21NotificationRegistrarD1Ev(%"class.content::NotificationRegistrar"* %23) #10
  %24 = load i64*, i64** %5, align 8
  %25 = icmp eq i64* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %14
  %27 = ptrtoint i64* %24 to i64
  %28 = bitcast %"class.content::BrowserContext"** %7 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast i64* %24 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %14, %26
  %31 = getelementptr inbounds %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %2, i64 2
  %32 = bitcast %"class.content::BrowserContext"** %31 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %32) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListenerD0Ev(%"class.visitedlink::VisitedLinkEventListener"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.visitedlink::VisitedLinkEventListener"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [5 x i8*] }, { [8 x i8*], [5 x i8*] }* @_ZTVN11visitedlink24VisitedLinkEventListenerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = ptrtoint i64* %4 to i64
  %10 = bitcast i64** %5 to i64*
  store i64 %9, i64* %10, align 8
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 7
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %12) #10
  %13 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0
  %14 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %13, %"class.std::__1::__tree_node"* %16) #10
  %17 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 5
  tail call void @_ZN7content21NotificationRegistrarD1Ev(%"class.content::NotificationRegistrar"* %17) #10
  %18 = load i64*, i64** %3, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %11
  %21 = ptrtoint i64* %18 to i64
  %22 = bitcast i64** %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast i64* %18 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %11, %20
  %25 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 2
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %25) #10
  %26 = bitcast %"class.visitedlink::VisitedLinkEventListener"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11visitedlink24VisitedLinkEventListenerD0Ev(%"class.visitedlink::VisitedLinkEventListener"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 -1, i32 8
  %3 = bitcast %"class.content::BrowserContext"** %2 to %"class.visitedlink::VisitedLinkEventListener"*
  tail call void @_ZN11visitedlink24VisitedLinkEventListenerD0Ev(%"class.visitedlink::VisitedLinkEventListener"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListener8NewTableEPN4base26ReadOnlySharedMemoryRegionE(%"class.visitedlink::VisitedLinkEventListener"*, %"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %4 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %5 = bitcast %"class.base::ReadOnlySharedMemoryRegion"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #10
  call void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* nonnull sret %4, %"class.base::ReadOnlySharedMemoryRegion"* %1) #10
  %6 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 7
  %7 = call dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"* %6, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %4) #10
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #10
  %8 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %6) #10
  br i1 %8, label %9, label %64

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %13 = icmp eq %"class.std::__1::__tree_end_node"* %11, %12
  br i1 %13, label %64, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::ReadOnlySharedMemoryRegion"* %3 to i8*
  br label %16

16:                                               ; preds = %14, %61
  %17 = phi %"class.std::__1::__tree_end_node"* [ %11, %14 ], [ %62, %61 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 4
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = call %"class.content::RenderProcessHost"* @_ZN7content17RenderProcessHost6FromIDEi(i32 %20) #10
  %22 = icmp eq %"class.content::RenderProcessHost"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 5
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.visitedlink::VisitedLinkUpdater"**
  %26 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15)
  %27 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %6) #10
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %26, i64 0, i32 3, i32 0
  call void @_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %29) #10
  %30 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %26, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %30, align 8
  call void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* nonnull sret %3, %"class.base::ReadOnlySharedMemoryRegion"* %6) #10
  call void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy18UpdateVisitedLinksEN4base26ReadOnlySharedMemoryRegionE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %31, %"class.base::ReadOnlySharedMemoryRegion"* nonnull %3) #10
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %3) #10
  br label %32

32:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15)
  br label %33

33:                                               ; preds = %16, %32
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 1, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node_base"*
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 2
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_end_node"**
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %38
  br i1 %44, label %61, label %52

45:                                               ; preds = %33, %45
  %46 = phi %"class.std::__1::__tree_node_base"* [ %48, %45 ], [ %35, %33 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0
  br label %61

52:                                               ; preds = %37, %52
  %53 = phi %"class.std::__1::__tree_end_node"** [ %56, %52 ], [ %40, %37 ]
  %54 = bitcast %"class.std::__1::__tree_end_node"** %53 to %"class.std::__1::__tree_node_base"**
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 2
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %55
  br i1 %60, label %61, label %52

61:                                               ; preds = %52, %37, %50
  %62 = phi %"class.std::__1::__tree_end_node"* [ %51, %50 ], [ %41, %37 ], [ %57, %52 ]
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %12
  br i1 %63, label %64, label %16

64:                                               ; preds = %61, %9, %2
  ret void
}

declare void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

declare dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

declare %"class.content::RenderProcessHost"* @_ZN7content17RenderProcessHost6FromIDEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListener3AddEm(%"class.visitedlink::VisitedLinkEventListener"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = icmp eq i64* %7, %9
  %11 = ptrtoint i64* %9 to i64
  br i1 %10, label %16, label %12

12:                                               ; preds = %2
  store i64 %1, i64* %7, align 8
  %13 = getelementptr inbounds i64, i64* %7, i64 1
  %14 = ptrtoint i64* %13 to i64
  %15 = bitcast i64** %6 to i64*
  store i64 %14, i64* %15, align 8
  br label %72

16:                                               ; preds = %2
  %17 = ptrtoint i64* %7 to i64
  %18 = bitcast i64** %6 to i64*
  %19 = bitcast %"class.std::__1::vector"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i64** %8 to i64*
  %29 = sub i64 %11, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %43 to i64*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i64* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 %22
  %49 = getelementptr inbounds i64, i64* %47, i64 %46
  %50 = ptrtoint i64* %49 to i64
  store i64 %1, i64* %48, align 8
  %51 = getelementptr inbounds i64, i64* %48, i64 1
  %52 = ptrtoint i64* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = load i64, i64* %18, align 8
  %56 = ptrtoint i64* %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds i64, i64* %48, i64 %59
  %61 = ptrtoint i64* %60 to i64
  %62 = icmp sgt i64 %57, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %45
  %64 = bitcast i64* %60 to i8*
  %65 = bitcast i64* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %57, i1 false) #10
  %66 = load i64*, i64** %53, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi i64* [ %54, %45 ], [ %66, %63 ]
  store i64 %61, i64* %19, align 8
  store i64 %52, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast i64* %68 to i8*
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %12, %67, %70
  %73 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 3
  %74 = bitcast %"class.base::OneShotTimer"** %73 to %"class.base::internal::TimerBase"**
  %75 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %75) #10
  br i1 %76, label %93, label %77

77:                                               ; preds = %72
  %78 = load %"class.base::OneShotTimer"*, %"class.base::OneShotTimer"** %73, align 8
  %79 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 162) #10
  %80 = ptrtoint %"class.visitedlink::VisitedLinkEventListener"* %0 to i64
  %81 = call i8* @_Znwm(i64 56) #11, !noalias !11
  %82 = bitcast i8* %81 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %82, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !11
  %83 = getelementptr inbounds i8, i8* %81, i64 32
  %84 = bitcast i8* %83 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.visitedlink::VisitedLinkEventListener"*)* @_ZN11visitedlink24VisitedLinkEventListener18CommitVisitedLinksEv to i64), i64 0>, <2 x i64>* %84, align 8, !noalias !11
  %85 = getelementptr inbounds i8, i8* %81, i64 48
  %86 = bitcast i8* %85 to i64*
  store i64 %80, i64* %86, align 8, !noalias !11
  %87 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %81, i8** %87, align 8, !alias.scope !11
  %88 = bitcast %"class.base::OneShotTimer"* %78 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %89 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %89, i64 7
  %91 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %90, align 8
  call void %91(%"class.base::OneShotTimer"* %78, %"class.base::Location"* nonnull dereferenceable(32) %3, i64 100000, %"class.base::OnceCallback"* nonnull %4) #10
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #10
  br label %93

93:                                               ; preds = %77, %72
  ret void
}

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListener18CommitVisitedLinksEv(%"class.visitedlink::VisitedLinkEventListener"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  %10 = bitcast %"class.std::__1::vector"* %7 to i64*
  br label %17

11:                                               ; preds = %75, %1
  %12 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::vector"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = bitcast i64** %15 to i64*
  store i64 %14, i64* %16, align 8
  ret void

17:                                               ; preds = %6, %75
  %18 = phi %"class.std::__1::__tree_end_node"* [ %3, %6 ], [ %76, %75 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.visitedlink::VisitedLinkUpdater"**
  %21 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %20, align 8
  %22 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %21, i64 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !16
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %21, i64 0, i32 4
  %27 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %21, i64 0, i32 4, i32 0, i32 1
  %28 = bitcast i64** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  %34 = load i64, i64* %9, align 8
  %35 = load i64, i64* %10, align 8
  %36 = sub i64 %34, %35
  %37 = ashr exact i64 %36, 3
  %38 = add nsw i64 %37, %33
  %39 = icmp ugt i64 %38, 50
  br i1 %39, label %40, label %41

40:                                               ; preds = %25
  store i8 1, i8* %22, align 8
  store i64 %31, i64* %28, align 8
  br label %46

41:                                               ; preds = %25
  %42 = inttoptr i64 %34 to i64*
  %43 = inttoptr i64 %35 to i64*
  %44 = inttoptr i64 %29 to i64*
  %45 = tail call i64* @_ZNSt3__16vectorImNS_9allocatorImEEE6insertINS_11__wrap_iterIPKmEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPmEEE4typeES8_SA_SA_(%"class.std::__1::vector"* %26, i64* %44, i64* %43, i64* %42) #10
  br label %46

46:                                               ; preds = %17, %40, %41
  %47 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %20, align 8
  tail call void @_ZN11visitedlink18VisitedLinkUpdater6UpdateEv(%"class.visitedlink::VisitedLinkUpdater"* %47)
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %46
  %52 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %75, label %66

59:                                               ; preds = %46, %59
  %60 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %49, %46 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0
  br label %75

66:                                               ; preds = %51, %66
  %67 = phi %"class.std::__1::__tree_end_node"** [ %70, %66 ], [ %54, %51 ]
  %68 = bitcast %"class.std::__1::__tree_end_node"** %67 to %"class.std::__1::__tree_node_base"**
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %69
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %51, %64
  %76 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %55, %51 ], [ %71, %66 ]
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %4
  br i1 %77, label %11, label %17
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListener5ResetEb(%"class.visitedlink::VisitedLinkEventListener"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::vector"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 3
  %9 = bitcast %"class.base::OneShotTimer"** %8 to %"class.base::internal::TimerBase"**
  %10 = load %"class.base::internal::TimerBase"*, %"class.base::internal::TimerBase"** %9, align 8
  %11 = bitcast %"class.base::internal::TimerBase"* %10 to void (%"class.base::internal::TimerBase"*)***
  %12 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %12, i64 3
  %14 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::TimerBase"* %10) #10
  %15 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %62, %2
  ret void

20:                                               ; preds = %2, %62
  %21 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %16, %2 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.visitedlink::VisitedLinkUpdater"**
  %24 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %23, align 8
  %25 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %24, i64 0, i32 0
  store i8 1, i8* %25, align 8
  br i1 %1, label %26, label %28

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %24, i64 0, i32 1
  store i8 1, i8* %27, align 1
  br label %28

28:                                               ; preds = %20, %26
  %29 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %24, i64 0, i32 4
  %30 = bitcast %"class.std::__1::vector"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %24, i64 0, i32 4, i32 0, i32 1
  %33 = bitcast i64** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %23, align 8
  tail call void @_ZN11visitedlink18VisitedLinkUpdater6UpdateEv(%"class.visitedlink::VisitedLinkUpdater"* %34)
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %28
  %39 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_end_node"**
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %39
  br i1 %45, label %62, label %53

46:                                               ; preds = %28, %46
  %47 = phi %"class.std::__1::__tree_node_base"* [ %49, %46 ], [ %36, %28 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0
  br label %62

53:                                               ; preds = %38, %53
  %54 = phi %"class.std::__1::__tree_end_node"** [ %57, %53 ], [ %41, %38 ]
  %55 = bitcast %"class.std::__1::__tree_end_node"** %54 to %"class.std::__1::__tree_node_base"**
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, %56
  br i1 %61, label %62, label %53

62:                                               ; preds = %53, %38, %51
  %63 = phi %"class.std::__1::__tree_end_node"* [ %52, %51 ], [ %42, %38 ], [ %58, %53 ]
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %63, %17
  br i1 %64, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11visitedlink18VisitedLinkUpdater6UpdateEv(%"class.visitedlink::VisitedLinkUpdater"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call %"class.content::RenderProcessHost"* @_ZN7content17RenderProcessHost6FromIDEi(i32 %3) #10
  %5 = icmp eq %"class.content::RenderProcessHost"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::RenderProcessHost"* %4 to i32 (%"class.content::RenderProcessHost"*)***
  %8 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %8, i64 12
  %10 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %9, align 8
  %11 = tail call i32 %10(%"class.content::RenderProcessHost"* nonnull %4) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !16
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %18) #10
  %19 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %19, align 8
  %21 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 1
  %22 = load i8, i8* %21, align 1, !range !16
  %23 = icmp ne i8 %22, 0
  tail call void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy17ResetVisitedLinksEb(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %20, i1 zeroext %23) #10
  store i8 0, i8* %14, align 8
  store i8 0, i8* %21, align 1
  br label %38

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 4, i32 0, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %32) #10
  %33 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %33, align 8
  tail call void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy15AddVisitedLinksERKNSt3__16vectorImNS2_9allocatorImEEEE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %34, %"class.std::__1::vector"* dereferenceable(24) %25) #10
  %35 = bitcast %"class.std::__1::vector"* %25 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i64** %28 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %24, %6, %1, %31, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11visitedlink24VisitedLinkEventListener23SetCoalesceTimerForTestEPN4base12OneShotTimerE(%"class.visitedlink::VisitedLinkEventListener"* nocapture, %"class.base::OneShotTimer"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 3
  store %"class.base::OneShotTimer"* %1, %"class.base::OneShotTimer"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11visitedlink24VisitedLinkEventListener7ObserveEiRKN7content18NotificationSourceERKNS1_19NotificationDetailsE(%"class.visitedlink::VisitedLinkEventListener"*, i32, %"class.content::NotificationSource"* nocapture readonly dereferenceable(8), %"class.content::NotificationDetails"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  switch i32 %1, label %363 [
    i32 6, label %6
    i32 7, label %211
    i32 10, label %270
  ]

6:                                                ; preds = %4
  %7 = bitcast %"class.content::NotificationSource"* %2 to %"class.content::RenderProcessHost"**
  %8 = load %"class.content::RenderProcessHost"*, %"class.content::RenderProcessHost"** %7, align 8
  %9 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 8
  %10 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %9, align 8
  %11 = bitcast %"class.content::RenderProcessHost"* %8 to %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)***
  %12 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)**, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %12, i64 27
  %14 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %13, align 8
  %15 = tail call %"class.content::BrowserContext"* %14(%"class.content::RenderProcessHost"* %8) #10
  %16 = icmp eq %"class.content::BrowserContext"* %10, %15
  br i1 %16, label %17, label %363

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 7
  %19 = tail call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %18) #10
  br i1 %19, label %20, label %363

20:                                               ; preds = %17
  %21 = bitcast %"class.content::RenderProcessHost"* %8 to i32 (%"class.content::RenderProcessHost"*)***
  %22 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %22, i64 29
  %24 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %23, align 8
  %25 = tail call i32 %24(%"class.content::RenderProcessHost"* %8) #10
  %26 = tail call i8* @_Znwm(i64 80) #11
  %27 = bitcast i8* %26 to %"class.visitedlink::VisitedLinkUpdater"*
  tail call void @_ZN11visitedlink18VisitedLinkUpdaterC2Ei(%"class.visitedlink::VisitedLinkUpdater"* nonnull %27, i32 %25) #10
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6
  %30 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %21, align 8
  %31 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %30, i64 29
  %32 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %31, align 8
  %33 = tail call i32 %32(%"class.content::RenderProcessHost"* %8) #10
  %34 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node"**
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node"* %36, null
  br i1 %37, label %66, label %38

38:                                               ; preds = %20
  %39 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %62, %38
  %41 = phi %"class.std::__1::__tree_node"* [ %65, %62 ], [ %36, %38 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %64, %62 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %33, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %62

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %68

52:                                               ; preds = %40
  %53 = icmp slt i32 %44, %33
  br i1 %53, label %54, label %60

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %68

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %68

62:                                               ; preds = %54, %46
  %63 = phi %"class.std::__1::__tree_node_base"* [ %48, %46 ], [ %56, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %55, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"* %63 to %"class.std::__1::__tree_node"*
  br label %40

66:                                               ; preds = %20
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  br label %68

68:                                               ; preds = %66, %60, %58, %50
  %69 = phi %"class.std::__1::__tree_end_node"* [ %34, %66 ], [ %51, %50 ], [ %59, %58 ], [ %61, %60 ]
  %70 = phi %"class.std::__1::__tree_node_base"** [ %67, %66 ], [ %47, %50 ], [ %55, %58 ], [ %42, %60 ]
  %71 = bitcast %"class.std::__1::__tree_node_base"** %70 to %"class.std::__1::__tree_node"**
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node"* %72, null
  br i1 %73, label %74, label %101

74:                                               ; preds = %68
  %75 = tail call i8* @_Znwm(i64 48) #11, !noalias !17
  %76 = getelementptr inbounds i8, i8* %75, i64 32
  %77 = bitcast i8* %76 to i32*
  store i32 %33, i32* %77, align 8, !noalias !17
  %78 = getelementptr inbounds i8, i8* %75, i64 40
  %79 = bitcast i8* %78 to i64*
  store i64 0, i64* %79, align 8, !noalias !17
  %80 = bitcast i8* %75 to %"class.std::__1::__tree_node"*
  %81 = bitcast i8* %75 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds i8, i8* %75, i64 16
  %83 = bitcast i8* %82 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %83, align 8
  %84 = bitcast %"class.std::__1::__tree_node_base"** %70 to i8**
  store i8* %75, i8** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %29, i64 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %74
  %91 = ptrtoint %"class.std::__1::__tree_node_base"* %88 to i64
  %92 = bitcast %"class.std::__1::map"* %29 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  br label %94

94:                                               ; preds = %90, %74
  %95 = phi %"class.std::__1::__tree_node_base"* [ %81, %74 ], [ %93, %90 ]
  %96 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %97, %"class.std::__1::__tree_node_base"* %95) #10
  %98 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %68, %94
  %102 = phi %"class.std::__1::__tree_node"* [ %80, %94 ], [ %72, %68 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 1, i32 0, i32 1
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %104, align 8
  %106 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %28, i64* %106, align 8
  %107 = icmp eq %"class.visitedlink::VisitedLinkUpdater"* %105, null
  br i1 %107, label %130, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %105, i64 0, i32 4, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = icmp eq i64* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = ptrtoint i64* %110 to i64
  %114 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %105, i64 0, i32 4, i32 0, i32 1
  %115 = bitcast i64** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast i64* %110 to i8*
  tail call void @_ZdlPv(i8* %116) #11
  br label %117

117:                                              ; preds = %112, %108
  %118 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %105, i64 0, i32 3
  %119 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %105, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %120 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %119, align 8
  store %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* null, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %119, align 8
  %121 = icmp eq %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %120 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)***
  %124 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %124, i64 1
  %126 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %125, align 8
  tail call void %126(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* nonnull %120) #10
  br label %127

127:                                              ; preds = %122, %117
  %128 = bitcast %"class.mojo::Remote"* %118 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %128) #10
  %129 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %105, i64 0, i32 0
  tail call void @_ZdlPv(i8* %129) #11
  br label %130

130:                                              ; preds = %127, %101
  %131 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %21, align 8
  %132 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %131, i64 29
  %133 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %132, align 8
  %134 = tail call i32 %133(%"class.content::RenderProcessHost"* %8) #10
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %35, align 8
  %136 = icmp eq %"class.std::__1::__tree_node"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp slt i32 %134, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  br label %167

151:                                              ; preds = %139
  %152 = icmp slt i32 %143, %134
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  br label %167

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  br label %167

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node"*
  br label %139

165:                                              ; preds = %130
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  br label %167

167:                                              ; preds = %165, %159, %157, %149
  %168 = phi %"class.std::__1::__tree_end_node"* [ %34, %165 ], [ %150, %149 ], [ %158, %157 ], [ %160, %159 ]
  %169 = phi %"class.std::__1::__tree_node_base"** [ %166, %165 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ]
  %170 = bitcast %"class.std::__1::__tree_node_base"** %169 to %"class.std::__1::__tree_node"**
  %171 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node"* %171, null
  br i1 %172, label %173, label %200

173:                                              ; preds = %167
  %174 = tail call i8* @_Znwm(i64 48) #11, !noalias !20
  %175 = getelementptr inbounds i8, i8* %174, i64 32
  %176 = bitcast i8* %175 to i32*
  store i32 %134, i32* %176, align 8, !noalias !20
  %177 = getelementptr inbounds i8, i8* %174, i64 40
  %178 = bitcast i8* %177 to i64*
  store i64 0, i64* %178, align 8, !noalias !20
  %179 = bitcast i8* %174 to %"class.std::__1::__tree_node"*
  %180 = bitcast i8* %174 to %"class.std::__1::__tree_node_base"*
  %181 = getelementptr inbounds i8, i8* %174, i64 16
  %182 = bitcast i8* %181 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %168, %"class.std::__1::__tree_end_node"** %182, align 8
  %183 = bitcast %"class.std::__1::__tree_node_base"** %169 to i8**
  store i8* %174, i8** %183, align 8
  %184 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %29, i64 0, i32 0, i32 0
  %185 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %184, align 8
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %185, i64 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, null
  br i1 %188, label %193, label %189

189:                                              ; preds = %173
  %190 = ptrtoint %"class.std::__1::__tree_node_base"* %187 to i64
  %191 = bitcast %"class.std::__1::map"* %29 to i64*
  store i64 %190, i64* %191, align 8
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  br label %193

193:                                              ; preds = %189, %173
  %194 = phi %"class.std::__1::__tree_node_base"* [ %180, %173 ], [ %192, %189 ]
  %195 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %196, %"class.std::__1::__tree_node_base"* %194) #10
  %197 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %197, align 8
  br label %200

200:                                              ; preds = %167, %193
  %201 = phi %"class.std::__1::__tree_node"* [ %179, %193 ], [ %171, %167 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %203 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %202, align 8
  %204 = bitcast %"class.base::ReadOnlySharedMemoryRegion"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %204)
  %205 = tail call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %18) #10
  br i1 %205, label %206, label %210

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %203, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %207) #10
  %208 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %203, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %209 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %208, align 8
  call void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* nonnull sret %5, %"class.base::ReadOnlySharedMemoryRegion"* %18) #10
  call void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy18UpdateVisitedLinksEN4base26ReadOnlySharedMemoryRegionE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %209, %"class.base::ReadOnlySharedMemoryRegion"* nonnull %5) #10
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %5) #10
  br label %210

210:                                              ; preds = %200, %206
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %204)
  br label %363

211:                                              ; preds = %4
  %212 = bitcast %"class.content::NotificationSource"* %2 to %"class.content::RenderProcessHost"**
  %213 = load %"class.content::RenderProcessHost"*, %"class.content::RenderProcessHost"** %212, align 8
  %214 = bitcast %"class.content::RenderProcessHost"* %213 to i32 (%"class.content::RenderProcessHost"*)***
  %215 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %214, align 8
  %216 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %215, i64 29
  %217 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %216, align 8
  %218 = tail call i32 %217(%"class.content::RenderProcessHost"* %213) #10
  %219 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %220 = bitcast %"class.std::__1::__tree_end_node"* %219 to %"class.std::__1::__tree_node"**
  %221 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %220, align 8
  %222 = icmp eq %"class.std::__1::__tree_node"* %221, null
  br i1 %222, label %363, label %223

223:                                              ; preds = %211, %235
  %224 = phi %"class.std::__1::__tree_node"* [ %237, %235 ], [ %221, %211 ]
  %225 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %224, i64 0, i32 1, i32 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = icmp slt i32 %218, %226
  br i1 %227, label %228, label %230

228:                                              ; preds = %223
  %229 = bitcast %"class.std::__1::__tree_node"* %224 to %"class.std::__1::__tree_node"**
  br label %235

230:                                              ; preds = %223
  %231 = icmp slt i32 %226, %218
  br i1 %231, label %232, label %239

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %224, i64 0, i32 0, i32 1
  %234 = bitcast %"class.std::__1::__tree_node_base"** %233 to %"class.std::__1::__tree_node"**
  br label %235

235:                                              ; preds = %232, %228
  %236 = phi %"class.std::__1::__tree_node"** [ %229, %228 ], [ %234, %232 ]
  %237 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node"* %237, null
  br i1 %238, label %363, label %223

239:                                              ; preds = %230
  %240 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %214, align 8
  %241 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %240, i64 29
  %242 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %241, align 8
  %243 = tail call i32 %242(%"class.content::RenderProcessHost"* %213) #10
  %244 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0
  %245 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %220, align 8
  %246 = icmp eq %"class.std::__1::__tree_node"* %245, null
  br i1 %246, label %363, label %247

247:                                              ; preds = %239, %247
  %248 = phi %"class.std::__1::__tree_end_node"* [ %258, %247 ], [ %219, %239 ]
  %249 = phi %"class.std::__1::__tree_node"* [ %259, %247 ], [ %245, %239 ]
  %250 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 1, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = icmp slt i32 %251, %243
  %253 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 1
  %254 = bitcast %"class.std::__1::__tree_node_base"** %253 to %"class.std::__1::__tree_node"**
  %255 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  %256 = bitcast %"class.std::__1::__tree_node"* %249 to %"class.std::__1::__tree_node"**
  %257 = select i1 %252, %"class.std::__1::__tree_node"** %254, %"class.std::__1::__tree_node"** %256
  %258 = select i1 %252, %"class.std::__1::__tree_end_node"* %248, %"class.std::__1::__tree_end_node"* %255
  %259 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %257, align 8
  %260 = icmp eq %"class.std::__1::__tree_node"* %259, null
  br i1 %260, label %261, label %247

261:                                              ; preds = %247
  %262 = icmp eq %"class.std::__1::__tree_end_node"* %258, %219
  br i1 %262, label %363, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %258, i64 4
  %265 = bitcast %"class.std::__1::__tree_end_node"* %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = icmp slt i32 %243, %266
  br i1 %267, label %363, label %268

268:                                              ; preds = %263
  %269 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE(%"class.std::__1::__tree"* %244, %"class.std::__1::__tree_end_node"* %258) #10
  br label %363

270:                                              ; preds = %4
  %271 = bitcast %"class.content::NotificationSource"* %2 to %"class.content::RenderWidgetHost"**
  %272 = load %"class.content::RenderWidgetHost"*, %"class.content::RenderWidgetHost"** %271, align 8
  %273 = bitcast %"class.content::RenderWidgetHost"* %272 to %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)***
  %274 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*** %273, align 8
  %275 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %274, i64 14
  %276 = load %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderWidgetHost"*)** %275, align 8
  %277 = tail call %"class.content::RenderProcessHost"* %276(%"class.content::RenderWidgetHost"* %272) #10
  %278 = bitcast %"class.content::RenderProcessHost"* %277 to i32 (%"class.content::RenderProcessHost"*)***
  %279 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %278, align 8
  %280 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %279, i64 29
  %281 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %280, align 8
  %282 = tail call i32 %281(%"class.content::RenderProcessHost"* %277) #10
  %283 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6
  %284 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %285 = bitcast %"class.std::__1::__tree_end_node"* %284 to %"class.std::__1::__tree_node"**
  %286 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %285, align 8
  %287 = icmp eq %"class.std::__1::__tree_node"* %286, null
  br i1 %287, label %363, label %288

288:                                              ; preds = %270, %300
  %289 = phi %"class.std::__1::__tree_node"* [ %302, %300 ], [ %286, %270 ]
  %290 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %289, i64 0, i32 1, i32 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp slt i32 %282, %291
  br i1 %292, label %293, label %295

293:                                              ; preds = %288
  %294 = bitcast %"class.std::__1::__tree_node"* %289 to %"class.std::__1::__tree_node"**
  br label %300

295:                                              ; preds = %288
  %296 = icmp slt i32 %291, %282
  br i1 %296, label %297, label %304

297:                                              ; preds = %295
  %298 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %289, i64 0, i32 0, i32 1
  %299 = bitcast %"class.std::__1::__tree_node_base"** %298 to %"class.std::__1::__tree_node"**
  br label %300

300:                                              ; preds = %297, %293
  %301 = phi %"class.std::__1::__tree_node"** [ %294, %293 ], [ %299, %297 ]
  %302 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node"* %302, null
  br i1 %303, label %363, label %288

304:                                              ; preds = %295
  %305 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %306

306:                                              ; preds = %322, %304
  %307 = phi %"class.std::__1::__tree_node"* [ %325, %322 ], [ %286, %304 ]
  %308 = phi %"class.std::__1::__tree_node_base"** [ %324, %322 ], [ %305, %304 ]
  %309 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 1, i32 0, i32 0
  %310 = load i32, i32* %309, align 4
  %311 = icmp slt i32 %282, %310
  br i1 %311, label %312, label %316

312:                                              ; preds = %306
  %313 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = icmp eq %"class.std::__1::__tree_node_base"* %314, null
  br i1 %315, label %326, label %322

316:                                              ; preds = %306
  %317 = icmp slt i32 %310, %282
  br i1 %317, label %318, label %326

318:                                              ; preds = %316
  %319 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 1
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %326, label %322

322:                                              ; preds = %318, %312
  %323 = phi %"class.std::__1::__tree_node_base"* [ %314, %312 ], [ %320, %318 ]
  %324 = phi %"class.std::__1::__tree_node_base"** [ %313, %312 ], [ %319, %318 ]
  %325 = bitcast %"class.std::__1::__tree_node_base"* %323 to %"class.std::__1::__tree_node"*
  br label %306

326:                                              ; preds = %316, %318, %312
  %327 = phi %"class.std::__1::__tree_node_base"** [ %313, %312 ], [ %319, %318 ], [ %308, %316 ]
  %328 = bitcast %"class.std::__1::__tree_node_base"** %327 to %"class.std::__1::__tree_node"**
  %329 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node"* %329, null
  br i1 %330, label %331, label %359

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 0
  %333 = tail call i8* @_Znwm(i64 48) #11, !noalias !23
  %334 = getelementptr inbounds i8, i8* %333, i64 32
  %335 = bitcast i8* %334 to i32*
  store i32 %282, i32* %335, align 8, !noalias !23
  %336 = getelementptr inbounds i8, i8* %333, i64 40
  %337 = bitcast i8* %336 to i64*
  store i64 0, i64* %337, align 8, !noalias !23
  %338 = bitcast i8* %333 to %"class.std::__1::__tree_node"*
  %339 = bitcast i8* %333 to %"class.std::__1::__tree_node_base"*
  %340 = getelementptr inbounds i8, i8* %333, i64 16
  %341 = bitcast i8* %340 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %333, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %332, %"class.std::__1::__tree_end_node"** %341, align 8
  %342 = bitcast %"class.std::__1::__tree_node_base"** %327 to i8**
  store i8* %333, i8** %342, align 8
  %343 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %283, i64 0, i32 0, i32 0
  %344 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %344, i64 0, i32 0
  %346 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %345, align 8
  %347 = icmp eq %"class.std::__1::__tree_node_base"* %346, null
  br i1 %347, label %352, label %348

348:                                              ; preds = %331
  %349 = ptrtoint %"class.std::__1::__tree_node_base"* %346 to i64
  %350 = bitcast %"class.std::__1::map"* %283 to i64*
  store i64 %349, i64* %350, align 8
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  br label %352

352:                                              ; preds = %348, %331
  %353 = phi %"class.std::__1::__tree_node_base"* [ %339, %331 ], [ %351, %348 ]
  %354 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %355 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %354, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %355, %"class.std::__1::__tree_node_base"* %353) #10
  %356 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %357 = load i64, i64* %356, align 8
  %358 = add i64 %357, 1
  store i64 %358, i64* %356, align 8
  br label %359

359:                                              ; preds = %326, %352
  %360 = phi %"class.std::__1::__tree_node"* [ %338, %352 ], [ %329, %326 ]
  %361 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %360, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %362 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %361, align 8
  tail call void @_ZN11visitedlink18VisitedLinkUpdater6UpdateEv(%"class.visitedlink::VisitedLinkUpdater"* %362)
  br label %363

363:                                              ; preds = %300, %235, %270, %211, %359, %268, %263, %261, %239, %210, %6, %17, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11visitedlink24VisitedLinkEventListener7ObserveEiRKN7content18NotificationSourceERKNS1_19NotificationDetailsE(%"class.visitedlink::VisitedLinkEventListener"*, i32, %"class.content::NotificationSource"* nocapture readonly dereferenceable(8), %"class.content::NotificationDetails"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.visitedlink::VisitedLinkEventListener", %"class.visitedlink::VisitedLinkEventListener"* %0, i64 -1, i32 8
  %6 = bitcast %"class.content::BrowserContext"** %5 to %"class.visitedlink::VisitedLinkEventListener"*
  tail call void @_ZN11visitedlink24VisitedLinkEventListener7ObserveEiRKN7content18NotificationSourceERKNS1_19NotificationDetailsE(%"class.visitedlink::VisitedLinkEventListener"* %6, i32 %1, %"class.content::NotificationSource"* dereferenceable(8) %2, %"class.content::NotificationDetails"* dereferenceable(8) undef)
  ret void
}

declare void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy18UpdateVisitedLinksEN4base26ReadOnlySharedMemoryRegionE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.207"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %3, align 8
  %5 = icmp eq %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %4, null
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::internal::InterfacePtrState"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %8 = tail call i8* @_Znwm(i64 8) #11
  %9 = bitcast i8* %8 to %"class.mojo::PassThroughFilter"*
  tail call void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"* nonnull %9) #10
  %10 = bitcast i8* %8 to %"class.mojo::MessageReceiver"*
  %11 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %7, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11visitedlink5mojom27VisitedLinkNotificationSink5Name_E, i64 0, i64 0)) #10
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::InterfaceEndpointClient"** %13 to %"class.mojo::MessageReceiverWithResponder"**
  %15 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 16) #11
  %17 = bitcast i8* %16 to %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*
  tail call void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* nonnull %17, %"class.mojo::MessageReceiverWithResponder"* %15) #10
  %18 = ptrtoint i8* %16 to i64
  %19 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %3, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.207"* %2 to i64*
  store i64 %18, i64* %20, align 8
  %21 = icmp eq %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %19 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)***
  %24 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %24, i64 1
  %26 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %25, align 8
  tail call void %26(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* nonnull %19) #10
  br label %27

27:                                               ; preds = %1, %12, %22, %6
  ret void
}

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4mojo17PassThroughFilterC1Ev(%"class.mojo::PassThroughFilter"*) unnamed_addr #1

declare void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #1

declare void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy17ResetVisitedLinksEb(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, i1 zeroext) unnamed_addr #1

declare void @_ZN11visitedlink5mojom32VisitedLinkNotificationSinkProxy15AddVisitedLinksERKNSt3__16vectorImNS2_9allocatorImEEEE(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorImNS_9allocatorImEEE6insertINS_11__wrap_iterIPKmEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPmEEE4typeES8_SA_SA_(%"class.std::__1::vector"*, i64*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i64* %2 to i8*
  %6 = bitcast i64* %1 to i8*
  %7 = ptrtoint i64* %1 to i64
  %8 = ptrtoint i64* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i64* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i64** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = ptrtoint i64* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i64** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i64, i64* %2, i64 %27
  %31 = icmp eq i64* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i64, i64* %3, i64 %33
  %35 = ptrtoint i64* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i64, i64* %3, i64 %41
  %43 = ptrtoint i64* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i64, i64* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr i64, i64* %2, i64 %49
  %51 = icmp ult i64* %19, %50
  %52 = icmp ult i64* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr i64, i64* %19, i64 %55
  %57 = getelementptr i64, i64* %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i64, i64* %19, i64 %66
  %69 = getelementptr i64, i64* %30, i64 %66
  %70 = bitcast i64* %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !26
  %72 = getelementptr i64, i64* %69, i64 2
  %73 = bitcast i64* %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !26
  %75 = bitcast i64* %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !29, !noalias !26
  %76 = getelementptr i64, i64* %68, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !29, !noalias !26
  %78 = or i64 %66, 4
  %79 = getelementptr i64, i64* %19, i64 %78
  %80 = getelementptr i64, i64* %30, i64 %78
  %81 = bitcast i64* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !26
  %83 = getelementptr i64, i64* %80, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !26
  %86 = bitcast i64* %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !29, !noalias !26
  %87 = getelementptr i64, i64* %79, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !29, !noalias !26
  %89 = or i64 %66, 8
  %90 = getelementptr i64, i64* %19, i64 %89
  %91 = getelementptr i64, i64* %30, i64 %89
  %92 = bitcast i64* %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !26
  %94 = getelementptr i64, i64* %91, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !26
  %97 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !29, !noalias !26
  %98 = getelementptr i64, i64* %90, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !29, !noalias !26
  %100 = or i64 %66, 12
  %101 = getelementptr i64, i64* %19, i64 %100
  %102 = getelementptr i64, i64* %30, i64 %100
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !26
  %105 = getelementptr i64, i64* %102, i64 2
  %106 = bitcast i64* %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !26
  %108 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !29, !noalias !26
  %109 = getelementptr i64, i64* %101, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !29, !noalias !26
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !31

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i64, i64* %19, i64 %118
  %121 = getelementptr i64, i64* %30, i64 %118
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !26
  %124 = getelementptr i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !26
  %127 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !29, !noalias !26
  %128 = getelementptr i64, i64* %120, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !29, !noalias !26
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !33

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i64* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i64* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i64* %137 to i64
  %139 = getelementptr i64, i64* %3, i64 -1
  %140 = ptrtoint i64* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i64* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i64* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i64, i64* %148, align 8
  store i64 %150, i64* %147, align 8
  %151 = getelementptr inbounds i64, i64* %148, i64 1
  %152 = getelementptr inbounds i64, i64* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !35

155:                                              ; preds = %146, %135
  %156 = phi i64* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i64* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i64* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 56
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i64* [ %185, %160 ], [ %158, %155 ]
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %161, align 8
  %164 = getelementptr inbounds i64, i64* %162, i64 1
  %165 = getelementptr inbounds i64, i64* %161, i64 1
  %166 = load i64, i64* %164, align 8
  store i64 %166, i64* %165, align 8
  %167 = getelementptr inbounds i64, i64* %162, i64 2
  %168 = getelementptr inbounds i64, i64* %161, i64 2
  %169 = load i64, i64* %167, align 8
  store i64 %169, i64* %168, align 8
  %170 = getelementptr inbounds i64, i64* %162, i64 3
  %171 = getelementptr inbounds i64, i64* %161, i64 3
  %172 = load i64, i64* %170, align 8
  store i64 %172, i64* %171, align 8
  %173 = getelementptr inbounds i64, i64* %162, i64 4
  %174 = getelementptr inbounds i64, i64* %161, i64 4
  %175 = load i64, i64* %173, align 8
  store i64 %175, i64* %174, align 8
  %176 = getelementptr inbounds i64, i64* %162, i64 5
  %177 = getelementptr inbounds i64, i64* %161, i64 5
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %177, align 8
  %179 = getelementptr inbounds i64, i64* %162, i64 6
  %180 = getelementptr inbounds i64, i64* %161, i64 6
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds i64, i64* %162, i64 7
  %183 = getelementptr inbounds i64, i64* %161, i64 7
  %184 = load i64, i64* %182, align 8
  store i64 %184, i64* %183, align 8
  %185 = getelementptr inbounds i64, i64* %162, i64 8
  %186 = getelementptr inbounds i64, i64* %161, i64 8
  %187 = icmp eq i64* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !36

188:                                              ; preds = %155, %160, %133
  %189 = phi i64* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i64* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i64*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i64* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i64* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i64, i64* %1, i64 %12
  %201 = ptrtoint i64* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 3
  %204 = getelementptr inbounds i64, i64* %1, i64 %203
  %205 = icmp ult i64* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i64, i64* %19, i64 %207
  %209 = bitcast i64* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 3
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 4
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i64* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i64* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i64, i64* %19, i64 %220
  %222 = bitcast i64* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i64, i64* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add nsw i64 %229, 1
  %231 = getelementptr i64, i64* %1, i64 %230
  %232 = icmp ult i64* %198, %231
  %233 = icmp ult i64* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 4611686018427387900
  %237 = getelementptr i64, i64* %198, i64 %236
  %238 = getelementptr i64, i64* %204, i64 %236
  %239 = add nsw i64 %236, -4
  %240 = lshr exact i64 %239, 2
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 12
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i64, i64* %198, i64 %247
  %250 = getelementptr i64, i64* %204, i64 %247
  %251 = bitcast i64* %250 to <2 x i64>*
  %252 = load <2 x i64>, <2 x i64>* %251, align 8, !alias.scope !37
  %253 = getelementptr i64, i64* %250, i64 2
  %254 = bitcast i64* %253 to <2 x i64>*
  %255 = load <2 x i64>, <2 x i64>* %254, align 8, !alias.scope !37
  %256 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %252, <2 x i64>* %256, align 8, !alias.scope !40, !noalias !37
  %257 = getelementptr i64, i64* %249, i64 2
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %255, <2 x i64>* %258, align 8, !alias.scope !40, !noalias !37
  %259 = or i64 %247, 4
  %260 = getelementptr i64, i64* %198, i64 %259
  %261 = getelementptr i64, i64* %204, i64 %259
  %262 = bitcast i64* %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !37
  %264 = getelementptr i64, i64* %261, i64 2
  %265 = bitcast i64* %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8, !alias.scope !37
  %267 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %267, align 8, !alias.scope !40, !noalias !37
  %268 = getelementptr i64, i64* %260, i64 2
  %269 = bitcast i64* %268 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %269, align 8, !alias.scope !40, !noalias !37
  %270 = or i64 %247, 8
  %271 = getelementptr i64, i64* %198, i64 %270
  %272 = getelementptr i64, i64* %204, i64 %270
  %273 = bitcast i64* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !37
  %275 = getelementptr i64, i64* %272, i64 2
  %276 = bitcast i64* %275 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 8, !alias.scope !37
  %278 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %278, align 8, !alias.scope !40, !noalias !37
  %279 = getelementptr i64, i64* %271, i64 2
  %280 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %277, <2 x i64>* %280, align 8, !alias.scope !40, !noalias !37
  %281 = or i64 %247, 12
  %282 = getelementptr i64, i64* %198, i64 %281
  %283 = getelementptr i64, i64* %204, i64 %281
  %284 = bitcast i64* %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !37
  %286 = getelementptr i64, i64* %283, i64 2
  %287 = bitcast i64* %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !37
  %289 = bitcast i64* %282 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %289, align 8, !alias.scope !40, !noalias !37
  %290 = getelementptr i64, i64* %282, i64 2
  %291 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %291, align 8, !alias.scope !40, !noalias !37
  %292 = add i64 %247, 16
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !42

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i64, i64* %198, i64 %299
  %302 = getelementptr i64, i64* %204, i64 %299
  %303 = bitcast i64* %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !37
  %305 = getelementptr i64, i64* %302, i64 2
  %306 = bitcast i64* %305 to <2 x i64>*
  %307 = load <2 x i64>, <2 x i64>* %306, align 8, !alias.scope !37
  %308 = bitcast i64* %301 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %308, align 8, !alias.scope !40, !noalias !37
  %309 = getelementptr i64, i64* %301, i64 2
  %310 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %307, <2 x i64>* %310, align 8, !alias.scope !40, !noalias !37
  %311 = add i64 %299, 4
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !43

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i64* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i64* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i64, i64* %198, i64 %323
  %325 = bitcast i64* %324 to i8*
  %326 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %325, i8* align 8 %326, i64 %202, i1 false) #10
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i64* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i64* [ %331, %327 ], [ %218, %216 ]
  %330 = load i64, i64* %329, align 8
  store i64 %330, i64* %328, align 8
  %331 = getelementptr inbounds i64, i64* %329, i64 1
  %332 = getelementptr inbounds i64, i64* %328, i64 1
  %333 = icmp ult i64* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !44

334:                                              ; preds = %319, %322
  %335 = ptrtoint i64* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %336, i1 false) #10
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 3
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 2305843009213693951
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #12
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 3
  %351 = icmp ult i64 %350, 1152921504606846975
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 3
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 2
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 3
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 2305843009213693951
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #12
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 2305843009213693951, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 3
  %369 = tail call i8* @_Znwm(i64 %368) #11
  %370 = bitcast i8* %369 to i64*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i64* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i64, i64* %374, i64 %372
  %376 = getelementptr inbounds i64, i64* %374, i64 %373
  %377 = ptrtoint i64* %376 to i64
  %378 = getelementptr inbounds i64, i64* %375, i64 %12
  %379 = add i64 %11, -8
  %380 = lshr i64 %379, 3
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 4
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -8
  %385 = lshr i64 %384, 3
  %386 = add nsw i64 %372, %385
  %387 = add nsw i64 %386, 1
  %388 = getelementptr i64, i64* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i64, i64* %2, i64 %389
  %391 = icmp ult i64* %375, %390
  %392 = icmp ugt i64* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 4611686018427387900
  %396 = getelementptr i64, i64* %375, i64 %395
  %397 = getelementptr i64, i64* %2, i64 %395
  %398 = add nsw i64 %395, -4
  %399 = lshr exact i64 %398, 2
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 12
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i64, i64* %375, i64 %406
  %409 = getelementptr i64, i64* %2, i64 %406
  %410 = bitcast i64* %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8, !alias.scope !45
  %412 = getelementptr i64, i64* %409, i64 2
  %413 = bitcast i64* %412 to <2 x i64>*
  %414 = load <2 x i64>, <2 x i64>* %413, align 8, !alias.scope !45
  %415 = bitcast i64* %408 to <2 x i64>*
  store <2 x i64> %411, <2 x i64>* %415, align 8, !alias.scope !48, !noalias !45
  %416 = getelementptr i64, i64* %408, i64 2
  %417 = bitcast i64* %416 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %417, align 8, !alias.scope !48, !noalias !45
  %418 = or i64 %406, 4
  %419 = getelementptr i64, i64* %375, i64 %418
  %420 = getelementptr i64, i64* %2, i64 %418
  %421 = bitcast i64* %420 to <2 x i64>*
  %422 = load <2 x i64>, <2 x i64>* %421, align 8, !alias.scope !45
  %423 = getelementptr i64, i64* %420, i64 2
  %424 = bitcast i64* %423 to <2 x i64>*
  %425 = load <2 x i64>, <2 x i64>* %424, align 8, !alias.scope !45
  %426 = bitcast i64* %419 to <2 x i64>*
  store <2 x i64> %422, <2 x i64>* %426, align 8, !alias.scope !48, !noalias !45
  %427 = getelementptr i64, i64* %419, i64 2
  %428 = bitcast i64* %427 to <2 x i64>*
  store <2 x i64> %425, <2 x i64>* %428, align 8, !alias.scope !48, !noalias !45
  %429 = or i64 %406, 8
  %430 = getelementptr i64, i64* %375, i64 %429
  %431 = getelementptr i64, i64* %2, i64 %429
  %432 = bitcast i64* %431 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8, !alias.scope !45
  %434 = getelementptr i64, i64* %431, i64 2
  %435 = bitcast i64* %434 to <2 x i64>*
  %436 = load <2 x i64>, <2 x i64>* %435, align 8, !alias.scope !45
  %437 = bitcast i64* %430 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %437, align 8, !alias.scope !48, !noalias !45
  %438 = getelementptr i64, i64* %430, i64 2
  %439 = bitcast i64* %438 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %439, align 8, !alias.scope !48, !noalias !45
  %440 = or i64 %406, 12
  %441 = getelementptr i64, i64* %375, i64 %440
  %442 = getelementptr i64, i64* %2, i64 %440
  %443 = bitcast i64* %442 to <2 x i64>*
  %444 = load <2 x i64>, <2 x i64>* %443, align 8, !alias.scope !45
  %445 = getelementptr i64, i64* %442, i64 2
  %446 = bitcast i64* %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 8, !alias.scope !45
  %448 = bitcast i64* %441 to <2 x i64>*
  store <2 x i64> %444, <2 x i64>* %448, align 8, !alias.scope !48, !noalias !45
  %449 = getelementptr i64, i64* %441, i64 2
  %450 = bitcast i64* %449 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %450, align 8, !alias.scope !48, !noalias !45
  %451 = add i64 %406, 16
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !50

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i64, i64* %375, i64 %458
  %461 = getelementptr i64, i64* %2, i64 %458
  %462 = bitcast i64* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 8, !alias.scope !45
  %464 = getelementptr i64, i64* %461, i64 2
  %465 = bitcast i64* %464 to <2 x i64>*
  %466 = load <2 x i64>, <2 x i64>* %465, align 8, !alias.scope !45
  %467 = bitcast i64* %460 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %467, align 8, !alias.scope !48, !noalias !45
  %468 = getelementptr i64, i64* %460, i64 2
  %469 = bitcast i64* %468 to <2 x i64>*
  store <2 x i64> %466, <2 x i64>* %469, align 8, !alias.scope !48, !noalias !45
  %470 = add i64 %458, 4
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !51

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i64* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i64* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i64* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i64, i64* %374, i64 %480
  %482 = ptrtoint i64* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 3
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i64* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i64* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i64, i64* %490, align 8
  store i64 %492, i64* %489, align 8
  %493 = getelementptr inbounds i64, i64* %489, i64 1
  %494 = getelementptr inbounds i64, i64* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !52

497:                                              ; preds = %488, %475
  %498 = phi i64* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i64* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 56
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i64* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i64* [ %527, %501 ], [ %499, %497 ]
  %504 = load i64, i64* %503, align 8
  store i64 %504, i64* %502, align 8
  %505 = getelementptr inbounds i64, i64* %502, i64 1
  %506 = getelementptr inbounds i64, i64* %503, i64 1
  %507 = load i64, i64* %506, align 8
  store i64 %507, i64* %505, align 8
  %508 = getelementptr inbounds i64, i64* %502, i64 2
  %509 = getelementptr inbounds i64, i64* %503, i64 2
  %510 = load i64, i64* %509, align 8
  store i64 %510, i64* %508, align 8
  %511 = getelementptr inbounds i64, i64* %502, i64 3
  %512 = getelementptr inbounds i64, i64* %503, i64 3
  %513 = load i64, i64* %512, align 8
  store i64 %513, i64* %511, align 8
  %514 = getelementptr inbounds i64, i64* %502, i64 4
  %515 = getelementptr inbounds i64, i64* %503, i64 4
  %516 = load i64, i64* %515, align 8
  store i64 %516, i64* %514, align 8
  %517 = getelementptr inbounds i64, i64* %502, i64 5
  %518 = getelementptr inbounds i64, i64* %503, i64 5
  %519 = load i64, i64* %518, align 8
  store i64 %519, i64* %517, align 8
  %520 = getelementptr inbounds i64, i64* %502, i64 6
  %521 = getelementptr inbounds i64, i64* %503, i64 6
  %522 = load i64, i64* %521, align 8
  store i64 %522, i64* %520, align 8
  %523 = getelementptr inbounds i64, i64* %502, i64 7
  %524 = getelementptr inbounds i64, i64* %503, i64 7
  %525 = load i64, i64* %524, align 8
  store i64 %525, i64* %523, align 8
  %526 = getelementptr inbounds i64, i64* %502, i64 8
  %527 = getelementptr inbounds i64, i64* %503, i64 8
  %528 = icmp eq i64* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !53

529:                                              ; preds = %497, %501, %473
  %530 = load i64*, i64** %9, align 8
  %531 = ptrtoint i64* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 3
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i64, i64* %375, i64 %534
  %536 = ptrtoint i64* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i64* %535 to i8*
  %540 = bitcast i64* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %539, i8* align 8 %540, i64 %532, i1 false) #10
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i64*, i64** %18, align 8
  %543 = icmp eq i64* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i64, i64* %542, i64 -1
  %546 = ptrtoint i64* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 3
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 4
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i64, i64* %542, i64 -1
  %554 = ptrtoint i64* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 3
  %557 = add nsw i64 %552, %556
  %558 = add nsw i64 %557, 1
  %559 = getelementptr i64, i64* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i64, i64* %1, i64 %560
  %562 = icmp ult i64* %378, %561
  %563 = icmp ugt i64* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 4611686018427387900
  %567 = getelementptr i64, i64* %378, i64 %566
  %568 = getelementptr i64, i64* %1, i64 %566
  %569 = add nsw i64 %566, -4
  %570 = lshr exact i64 %569, 2
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 12
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i64, i64* %378, i64 %577
  %580 = getelementptr i64, i64* %1, i64 %577
  %581 = bitcast i64* %580 to <2 x i64>*
  %582 = load <2 x i64>, <2 x i64>* %581, align 8, !alias.scope !54
  %583 = getelementptr i64, i64* %580, i64 2
  %584 = bitcast i64* %583 to <2 x i64>*
  %585 = load <2 x i64>, <2 x i64>* %584, align 8, !alias.scope !54
  %586 = bitcast i64* %579 to <2 x i64>*
  store <2 x i64> %582, <2 x i64>* %586, align 8, !alias.scope !57, !noalias !54
  %587 = getelementptr i64, i64* %579, i64 2
  %588 = bitcast i64* %587 to <2 x i64>*
  store <2 x i64> %585, <2 x i64>* %588, align 8, !alias.scope !57, !noalias !54
  %589 = or i64 %577, 4
  %590 = getelementptr i64, i64* %378, i64 %589
  %591 = getelementptr i64, i64* %1, i64 %589
  %592 = bitcast i64* %591 to <2 x i64>*
  %593 = load <2 x i64>, <2 x i64>* %592, align 8, !alias.scope !54
  %594 = getelementptr i64, i64* %591, i64 2
  %595 = bitcast i64* %594 to <2 x i64>*
  %596 = load <2 x i64>, <2 x i64>* %595, align 8, !alias.scope !54
  %597 = bitcast i64* %590 to <2 x i64>*
  store <2 x i64> %593, <2 x i64>* %597, align 8, !alias.scope !57, !noalias !54
  %598 = getelementptr i64, i64* %590, i64 2
  %599 = bitcast i64* %598 to <2 x i64>*
  store <2 x i64> %596, <2 x i64>* %599, align 8, !alias.scope !57, !noalias !54
  %600 = or i64 %577, 8
  %601 = getelementptr i64, i64* %378, i64 %600
  %602 = getelementptr i64, i64* %1, i64 %600
  %603 = bitcast i64* %602 to <2 x i64>*
  %604 = load <2 x i64>, <2 x i64>* %603, align 8, !alias.scope !54
  %605 = getelementptr i64, i64* %602, i64 2
  %606 = bitcast i64* %605 to <2 x i64>*
  %607 = load <2 x i64>, <2 x i64>* %606, align 8, !alias.scope !54
  %608 = bitcast i64* %601 to <2 x i64>*
  store <2 x i64> %604, <2 x i64>* %608, align 8, !alias.scope !57, !noalias !54
  %609 = getelementptr i64, i64* %601, i64 2
  %610 = bitcast i64* %609 to <2 x i64>*
  store <2 x i64> %607, <2 x i64>* %610, align 8, !alias.scope !57, !noalias !54
  %611 = or i64 %577, 12
  %612 = getelementptr i64, i64* %378, i64 %611
  %613 = getelementptr i64, i64* %1, i64 %611
  %614 = bitcast i64* %613 to <2 x i64>*
  %615 = load <2 x i64>, <2 x i64>* %614, align 8, !alias.scope !54
  %616 = getelementptr i64, i64* %613, i64 2
  %617 = bitcast i64* %616 to <2 x i64>*
  %618 = load <2 x i64>, <2 x i64>* %617, align 8, !alias.scope !54
  %619 = bitcast i64* %612 to <2 x i64>*
  store <2 x i64> %615, <2 x i64>* %619, align 8, !alias.scope !57, !noalias !54
  %620 = getelementptr i64, i64* %612, i64 2
  %621 = bitcast i64* %620 to <2 x i64>*
  store <2 x i64> %618, <2 x i64>* %621, align 8, !alias.scope !57, !noalias !54
  %622 = add i64 %577, 16
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !59

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i64, i64* %378, i64 %629
  %632 = getelementptr i64, i64* %1, i64 %629
  %633 = bitcast i64* %632 to <2 x i64>*
  %634 = load <2 x i64>, <2 x i64>* %633, align 8, !alias.scope !54
  %635 = getelementptr i64, i64* %632, i64 2
  %636 = bitcast i64* %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !54
  %638 = bitcast i64* %631 to <2 x i64>*
  store <2 x i64> %634, <2 x i64>* %638, align 8, !alias.scope !57, !noalias !54
  %639 = getelementptr i64, i64* %631, i64 2
  %640 = bitcast i64* %639 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %640, align 8, !alias.scope !57, !noalias !54
  %641 = add i64 %629, 4
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !60

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i64* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i64* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i64* %648 to i64
  %650 = getelementptr i64, i64* %542, i64 -1
  %651 = ptrtoint i64* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 3
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i64* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i64* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i64, i64* %659, align 8
  store i64 %661, i64* %658, align 8
  %662 = getelementptr inbounds i64, i64* %659, i64 1
  %663 = getelementptr inbounds i64, i64* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !61

666:                                              ; preds = %657, %646
  %667 = phi i64* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i64* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i64* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 56
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i64* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i64* [ %696, %671 ], [ %669, %666 ]
  %674 = load i64, i64* %673, align 8
  store i64 %674, i64* %672, align 8
  %675 = getelementptr inbounds i64, i64* %673, i64 1
  %676 = getelementptr inbounds i64, i64* %672, i64 1
  %677 = load i64, i64* %675, align 8
  store i64 %677, i64* %676, align 8
  %678 = getelementptr inbounds i64, i64* %673, i64 2
  %679 = getelementptr inbounds i64, i64* %672, i64 2
  %680 = load i64, i64* %678, align 8
  store i64 %680, i64* %679, align 8
  %681 = getelementptr inbounds i64, i64* %673, i64 3
  %682 = getelementptr inbounds i64, i64* %672, i64 3
  %683 = load i64, i64* %681, align 8
  store i64 %683, i64* %682, align 8
  %684 = getelementptr inbounds i64, i64* %673, i64 4
  %685 = getelementptr inbounds i64, i64* %672, i64 4
  %686 = load i64, i64* %684, align 8
  store i64 %686, i64* %685, align 8
  %687 = getelementptr inbounds i64, i64* %673, i64 5
  %688 = getelementptr inbounds i64, i64* %672, i64 5
  %689 = load i64, i64* %687, align 8
  store i64 %689, i64* %688, align 8
  %690 = getelementptr inbounds i64, i64* %673, i64 6
  %691 = getelementptr inbounds i64, i64* %672, i64 6
  %692 = load i64, i64* %690, align 8
  store i64 %692, i64* %691, align 8
  %693 = getelementptr inbounds i64, i64* %673, i64 7
  %694 = getelementptr inbounds i64, i64* %672, i64 7
  %695 = load i64, i64* %693, align 8
  store i64 %695, i64* %694, align 8
  %696 = getelementptr inbounds i64, i64* %673, i64 8
  %697 = getelementptr inbounds i64, i64* %672, i64 8
  %698 = icmp eq i64* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !62

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i64* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i64* %700 to i64
  %702 = load i64*, i64** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i64* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i64* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #11
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i64* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i64* %707
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %10, align 8
  store %"class.visitedlink::VisitedLinkUpdater"* null, %"class.visitedlink::VisitedLinkUpdater"** %10, align 8
  %12 = icmp eq %"class.visitedlink::VisitedLinkUpdater"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %11, i64 0, i32 4, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint i64* %15 to i64
  %19 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %11, i64 0, i32 4, i32 0, i32 1
  %20 = bitcast i64** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast i64* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %11, i64 0, i32 3
  %24 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %11, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %24, align 8
  store %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* null, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %24, align 8
  %26 = icmp eq %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %25 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)***
  %29 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %29, i64 1
  %31 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %30, align 8
  tail call void %31(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* nonnull %25) #10
  br label %32

32:                                               ; preds = %27, %22
  %33 = bitcast %"class.mojo::Remote"* %23 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %33) #10
  %34 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %11, i64 0, i32 0
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %4, %32
  %36 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %2, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.visitedlink::VisitedLinkEventListener"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.visitedlink::VisitedLinkEventListener"*)**
  %21 = load void (%"class.visitedlink::VisitedLinkEventListener"*)*, void (%"class.visitedlink::VisitedLinkEventListener"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.visitedlink::VisitedLinkEventListener"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.visitedlink::VisitedLinkEventListener"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.visitedlink::VisitedLinkEventListener"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11visitedlink18VisitedLinkUpdaterC2Ei(%"class.visitedlink::VisitedLinkUpdater"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::ScopedHandleBase", align 4
  %4 = alloca %"class.mojo::GenericPendingReceiver", align 8
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 2
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 3
  %10 = bitcast %"class.mojo::Remote"* %9 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %10) #10
  %11 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.207"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  %13 = tail call %"class.content::RenderProcessHost"* @_ZN7content17RenderProcessHost6FromIDEi(i32 %1) #10
  call void @_ZN4mojo6RemoteIN11visitedlink5mojom27VisitedLinkNotificationSinkEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %5, %"class.mojo::Remote"* %9, %"class.base::SequencedTaskRunner"* null) #10
  %14 = bitcast %"class.mojo::ScopedHandleBase"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  %15 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11visitedlink5mojom27VisitedLinkNotificationSink5Name_E, i64 0, i64 0)) #10
  %16 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 8, !noalias !63
  store i32 %18, i32* %16, align 4, !alias.scope !63
  store i32 0, i32* %17, align 8, !noalias !63
  call void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11visitedlink5mojom27VisitedLinkNotificationSink5Name_E, i64 0, i64 0), i64 %15, %"class.mojo::ScopedHandleBase"* nonnull %3) #10
  %19 = load i32, i32* %16, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %2
  %22 = call i32 @MojoClose(i32 %19) #10
  br label %23

23:                                               ; preds = %2, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %24 = bitcast %"class.content::RenderProcessHost"* %13 to void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)***
  %25 = load void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)**, void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)*, void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)** %25, i64 51
  %27 = load void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)*, void (%"class.content::RenderProcessHost"*, %"class.mojo::GenericPendingReceiver"*)** %26, align 8
  call void %27(%"class.content::RenderProcessHost"* %13, %"class.mojo::GenericPendingReceiver"* nonnull %4) #10
  call void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"* nonnull %4) #10
  %28 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %28) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo22GenericPendingReceiverD1Ev(%"class.mojo::GenericPendingReceiver"*) unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN11visitedlink5mojom27VisitedLinkNotificationSinkEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* noalias sret, %"class.mojo::Remote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #10
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !68
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #10
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #10
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN11visitedlink5mojom27VisitedLinkNotificationSinkEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %1, %"class.mojo::PendingRemote"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #10
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !71
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #10
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #10
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN11visitedlink5mojom27VisitedLinkNotificationSinkEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #10
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.207"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.207"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %17, align 8
  store %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* null, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %17, align 8
  %19 = icmp eq %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %18 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)***
  %22 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %22, i64 1
  %24 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %23, align 8
  call void %24(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* nonnull %18) #10
  br label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  %28 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %28, %"struct.mojo::internal::PendingRemoteState"* %27, %"class.base::SequencedTaskRunner"* %2) #10
  tail call void @_ZN4mojo8internal17InterfacePtrStateIN11visitedlink5mojom27VisitedLinkNotificationSinkEE25ConfigureProxyIfNecessaryEv(%"class.mojo::internal::InterfacePtrState"* %26) #10
  br label %39

29:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  %30 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #10
  br label %39

39:                                               ; preds = %25, %29, %31, %36
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #1

declare i32 @MojoClose(i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4mojo22GenericPendingReceiverC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"class.mojo::GenericPendingReceiver"*, i8*, i64, %"class.mojo::ScopedHandleBase"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #10
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.visitedlink::VisitedLinkUpdater"**
  %47 = load %"class.visitedlink::VisitedLinkUpdater"*, %"class.visitedlink::VisitedLinkUpdater"** %46, align 8
  store %"class.visitedlink::VisitedLinkUpdater"* null, %"class.visitedlink::VisitedLinkUpdater"** %46, align 8
  %48 = icmp eq %"class.visitedlink::VisitedLinkUpdater"* %47, null
  br i1 %48, label %71, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %47, i64 0, i32 4, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = ptrtoint i64* %51 to i64
  %55 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %47, i64 0, i32 4, i32 0, i32 1
  %56 = bitcast i64** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast i64* %51 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %53, %49
  %59 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %47, i64 0, i32 3
  %60 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %47, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %60, align 8
  store %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* null, %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"** %60, align 8
  %62 = icmp eq %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* %61 to void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)***
  %65 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)**, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %65, i64 1
  %67 = load void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)*, void (%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"*)** %66, align 8
  tail call void %67(%"class.visitedlink::mojom::VisitedLinkNotificationSinkProxy"* nonnull %61) #10
  br label %68

68:                                               ; preds = %63, %58
  %69 = bitcast %"class.mojo::Remote"* %59 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %69) #10
  %70 = getelementptr inbounds %"class.visitedlink::VisitedLinkUpdater", %"class.visitedlink::VisitedLinkUpdater"* %47, i64 0, i32 0
  tail call void @_ZdlPv(i8* %70) #11
  br label %71

71:                                               ; preds = %38, %68
  %72 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %72) #11
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !16
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !16
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !16
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !16
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !16
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !16
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !16
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !16
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !16
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !16
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !16
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !16
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !16
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7content19NotificationService28AllBrowserContextsAndSourcesEv: argument 0"}
!4 = distinct !{!4, !"_ZN7content19NotificationService28AllBrowserContextsAndSourcesEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN7content19NotificationService28AllBrowserContextsAndSourcesEv: argument 0"}
!7 = distinct !{!7, !"_ZN7content19NotificationService28AllBrowserContextsAndSourcesEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN7content19NotificationService28AllBrowserContextsAndSourcesEv: argument 0"}
!10 = distinct !{!10, !"_ZN7content19NotificationService28AllBrowserContextsAndSourcesEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN11visitedlink24VisitedLinkEventListenerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN11visitedlink24VisitedLinkEventListenerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISQ_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISQ_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISQ_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISQ_EEEEEEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeINS_12__value_typeIiNS_10unique_ptrIN11visitedlink18VisitedLinkUpdaterENS_14default_deleteIS4_EEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSK_IJEEEEEENS2_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.isvectorized", i32 1}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.unroll.disable"}
!35 = distinct !{!35, !34}
!36 = distinct !{!36, !32}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !32}
!43 = distinct !{!43, !34}
!44 = distinct !{!44, !32}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !32}
!51 = distinct !{!51, !34}
!52 = distinct !{!52, !34}
!53 = distinct !{!53, !32}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !32}
!60 = distinct !{!60, !34}
!61 = distinct !{!61, !34}
!62 = distinct !{!62, !32}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!65 = distinct !{!65, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!66 = distinct !{!66, !67, !"_ZN4mojo15PendingReceiverIN11visitedlink5mojom27VisitedLinkNotificationSinkEE8PassPipeEv: argument 0"}
!67 = distinct !{!67, !"_ZN4mojo15PendingReceiverIN11visitedlink5mojom27VisitedLinkNotificationSinkEE8PassPipeEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!70 = distinct !{!70, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!73 = distinct !{!73, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
