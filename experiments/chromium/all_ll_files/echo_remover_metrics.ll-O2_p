; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/echo_remover_metrics.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/echo_remover_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::metrics::Histogram" = type opaque
%"struct.webrtc::EchoRemoverMetrics::DbMetric" = type { float, float, float }
%"class.webrtc::EchoRemoverMetrics" = type <{ i32, %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric", i8, i8, [2 x i8] }>
%"class.webrtc::AecState" = type { %"class.std::__1::unique_ptr", %"struct.webrtc::EchoCanceller3Config", i64, i8, i8, i8, %"class.webrtc::AecState::InitialState", %"class.webrtc::AecState::FilterDelay", %"class.std::__1::unique_ptr.4", %"class.webrtc::AecState::FilteringQualityAnalyzer", %"class.webrtc::AecState::SaturationDetector", %"class.webrtc::ErlEstimator", %"class.webrtc::ErleEstimator", i64, i64, i8, [7 x i8], %"class.webrtc::FilterAnalyzer", %"class.webrtc::EchoAudibility", %"class.webrtc::ReverbModelEstimator", %"class.webrtc::ReverbModel", %"class.webrtc::SubtractorOutputAnalyzer" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.webrtc::AecState::InitialState" = type { i8, float, i8, i8, i64 }
%"class.webrtc::AecState::FilterDelay" = type { i32, i8, %"class.std::__1::vector", i32, %"class.absl::optional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::DelayEstimate" }
%"struct.webrtc::DelayEstimate" = type { i32, i64, i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.webrtc::TransparentMode"* }
%"class.webrtc::TransparentMode" = type { i32 (...)** }
%"class.webrtc::AecState::FilteringQualityAnalyzer" = type { i8, i8, i64, i64, i8, %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { i64*, i64, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.webrtc::AecState::SaturationDetector" = type { i8 }
%"class.webrtc::ErlEstimator" = type { i64, %"struct.std::__1::array", %"struct.std::__1::array.16", float, i32, i64 }
%"struct.std::__1::array" = type { [65 x float] }
%"struct.std::__1::array.16" = type { [63 x i32] }
%"class.webrtc::ErleEstimator" = type { i64, %"class.webrtc::FullBandErleEstimator", %"class.webrtc::SubbandErleEstimator", %"class.std::__1::unique_ptr.66", i64 }
%"class.webrtc::FullBandErleEstimator" = type { float, float, %"class.std::__1::vector", %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.36" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.std::__1::__compressed_pair.31" }
%"class.webrtc::FullBandErleEstimator::ErleInstantaneous" = type { i8, i8, %"class.absl::optional.26", float, float, float, float, float, i32 }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { float }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.absl::optional.26"*, %"class.absl::optional.26"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.absl::optional.26"* }
%"class.webrtc::SubbandErleEstimator" = type { i8, float, %"struct.std::__1::array", i8, %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.50", %"class.std::__1::vector.58" }
%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra" = type { %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.50", %"class.std::__1::vector" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::array"* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.std::__1::array.52"*, %"struct.std::__1::array.52"*, %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::array.52" = type { [65 x i8] }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::array.52"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.std::__1::array.60"*, %"struct.std::__1::array.60"*, %"class.std::__1::__compressed_pair.61" }
%"struct.std::__1::array.60" = type { [65 x i32] }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::array.60"* }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.webrtc::SignalDependentErleEstimator"* }
%"class.webrtc::SignalDependentErleEstimator" = type { float, i64, i64, i64, %"struct.std::__1::array.69", %"struct.std::__1::array.70", %"class.std::__1::vector.71", i8, %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.75", %"class.std::__1::vector.82", %"class.std::__1::vector.84", %"class.std::__1::vector.82", %"class.std::__1::vector.96", %"class.std::__1::vector.104" }
%"struct.std::__1::array.69" = type { [65 x i64] }
%"struct.std::__1::array.70" = type { [6 x float] }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { i64*, i64*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { i64* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.std::__1::vector.43"*, %"class.std::__1::vector.43"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::vector.43"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.std::__1::array.70"*, %"struct.std::__1::array.70"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::array.70"* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.std::__1::vector.84"*, %"class.std::__1::vector.84"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::vector.84"* }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.std::__1::array.98"*, %"struct.std::__1::array.98"*, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::array.98" = type opaque
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::array.98"* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::array.69"*, %"struct.std::__1::array.69"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::array.69"* }
%"class.webrtc::FilterAnalyzer" = type <{ %"class.std::__1::unique_ptr", i8, [3 x i8], float, %"class.std::__1::vector.114", i64, %"struct.webrtc::FilterAnalyzer::FilterRegion", %"class.std::__1::vector.121", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::vector.17"*, %"class.std::__1::vector.17"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::vector.17"* }
%"struct.webrtc::FilterAnalyzer::FilterRegion" = type { i64, i64 }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"class.std::__1::__compressed_pair.123" }
%"struct.webrtc::FilterAnalyzer::FilterAnalysisState" = type { float, i64, i32, i8, [3 x i8], %"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" }
%"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" = type <{ i8, [3 x i8], float, float, [4 x i8], i64, i64, float, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"* }
%"class.webrtc::EchoAudibility" = type { %"class.absl::optional.128", i32, i8, i8, [2 x i8], %"class.webrtc::StationarityEstimator" }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { i32 }
%"class.webrtc::StationarityEstimator" = type <{ %"class.std::__1::unique_ptr", %"class.webrtc::StationarityEstimator::NoiseSpectrum", %"struct.std::__1::array.60", %"struct.std::__1::array.52", [3 x i8] }>
%"class.webrtc::StationarityEstimator::NoiseSpectrum" = type { %"struct.std::__1::array", i64 }
%"class.webrtc::ReverbModelEstimator" = type { %"class.std::__1::vector.133", %"class.std::__1::vector.146" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.std::__1::unique_ptr.135"*, %"class.std::__1::unique_ptr.135"*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.webrtc::ReverbDecayEstimator"* }
%"class.webrtc::ReverbDecayEstimator" = type <{ i32, i32, i8, [3 x i8], %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", i32, i32, i32, i32, i8, [7 x i8], %"class.std::__1::vector.17", float, float, float, [4 x i8] }>
%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor" = type { float, float, float, i32, i32 }
%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator" = type <{ %"class.std::__1::vector.17", %"class.std::__1::vector.17", i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.std::__1::unique_ptr.135"* }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.webrtc::ReverbFrequencyResponse"*, %"class.webrtc::ReverbFrequencyResponse"*, %"class.std::__1::__compressed_pair.148" }
%"class.webrtc::ReverbFrequencyResponse" = type { float, %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.webrtc::ReverbFrequencyResponse"* }
%"class.webrtc::ReverbModel" = type { %"struct.std::__1::array" }
%"class.webrtc::SubtractorOutputAnalyzer" = type { %"class.std::__1::vector.10" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.155 }
%union.anon.155 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::array.159" = type { [2 x %"struct.webrtc::EchoRemoverMetrics::DbMetric"] }

@.str = private unnamed_addr constant [48 x i8] c"WebRTC.Audio.EchoCanceller.UsableLinearEstimate\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.1 = private unnamed_addr constant [39 x i8] c"WebRTC.Audio.EchoCanceller.FilterDelay\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"WebRTC.Audio.EchoCanceller.CaptureSaturation\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_0 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.3 = private unnamed_addr constant [37 x i8] c"WebRTC.Audio.EchoCanceller.Erl.Value\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_1 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.4 = private unnamed_addr constant [35 x i8] c"WebRTC.Audio.EchoCanceller.Erl.Max\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_2 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.5 = private unnamed_addr constant [35 x i8] c"WebRTC.Audio.EchoCanceller.Erl.Min\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_3 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.6 = private unnamed_addr constant [38 x i8] c"WebRTC.Audio.EchoCanceller.Erle.Value\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_4 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.7 = private unnamed_addr constant [36 x i8] c"WebRTC.Audio.EchoCanceller.Erle.Max\00", align 1
@_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_5 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.8 = private unnamed_addr constant [36 x i8] c"WebRTC.Audio.EchoCanceller.Erle.Min\00", align 1

@_ZN6webrtc18EchoRemoverMetrics8DbMetricC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::EchoRemoverMetrics::DbMetric"*), void (%"struct.webrtc::EchoRemoverMetrics::DbMetric"*)* @_ZN6webrtc18EchoRemoverMetrics8DbMetricC2Ev
@_ZN6webrtc18EchoRemoverMetrics8DbMetricC1Efff = hidden unnamed_addr alias void (%"struct.webrtc::EchoRemoverMetrics::DbMetric"*, float, float, float), void (%"struct.webrtc::EchoRemoverMetrics::DbMetric"*, float, float, float)* @_ZN6webrtc18EchoRemoverMetrics8DbMetricC2Efff
@_ZN6webrtc18EchoRemoverMetricsC1Ev = hidden unnamed_addr alias void (%"class.webrtc::EchoRemoverMetrics"*), void (%"class.webrtc::EchoRemoverMetrics"*)* @_ZN6webrtc18EchoRemoverMetricsC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc18EchoRemoverMetrics8DbMetricC2Ev(%"struct.webrtc::EchoRemoverMetrics::DbMetric"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc18EchoRemoverMetrics8DbMetricC2Efff(%"struct.webrtc::EchoRemoverMetrics::DbMetric"* nocapture, float, float, float) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 0
  store float %1, float* %5, align 4
  %6 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 1
  store float %2, float* %6, align 4
  %7 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 2
  store float %3, float* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc18EchoRemoverMetrics8DbMetric6UpdateEf(%"struct.webrtc::EchoRemoverMetrics::DbMetric"* nocapture, float) local_unnamed_addr #1 align 2 {
  %3 = alloca float, align 4
  store float %1, float* %3, align 4
  %4 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fadd float %5, %1
  store float %6, float* %4, align 4
  %7 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp ogt float %8, %1
  %10 = select i1 %9, float* %3, float* %7
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast float* %7 to i32*
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fcmp olt float %15, %1
  %17 = select i1 %16, float* %3, float* %14
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %14 to i32*
  store i32 %19, i32* %20, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc18EchoRemoverMetrics8DbMetric13UpdateInstantEf(%"struct.webrtc::EchoRemoverMetrics::DbMetric"* nocapture, float) local_unnamed_addr #1 align 2 {
  %3 = alloca float, align 4
  store float %1, float* %3, align 4
  %4 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 0
  store float %1, float* %4, align 4
  %5 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = fcmp ogt float %6, %1
  %8 = select i1 %7, float* %3, float* %5
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast float* %5 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.webrtc::EchoRemoverMetrics::DbMetric", %"struct.webrtc::EchoRemoverMetrics::DbMetric"* %0, i64 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = fcmp olt float %13, %1
  %15 = select i1 %14, float* %3, float* %12
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = bitcast float* %12 to i32*
  store i32 %17, i32* %18, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc18EchoRemoverMetricsC2Ev(%"class.webrtc::EchoRemoverMetrics"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 1
  %3 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 2
  %4 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 3
  %5 = bitcast %"class.webrtc::EchoRemoverMetrics"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 30, i1 false)
  %6 = bitcast float* %2 to <4 x float>*
  store <4 x float> <float 1.000000e+04, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %6, align 4
  store float 1.000000e+03, float* %3, align 4
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18EchoRemoverMetrics12ResetMetricsEv(%"class.webrtc::EchoRemoverMetrics"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 0
  %3 = bitcast float* %2 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+04, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 2
  store float 1.000000e+03, float* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_(%"class.webrtc::EchoRemoverMetrics"* nocapture, %"class.webrtc::AecState"* nocapture readonly dereferenceable(3016), %"struct.std::__1::array"* nocapture readnone dereferenceable(260), %"struct.std::__1::array"* nocapture readnone dereferenceable(260)) local_unnamed_addr #2 align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 4
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 4
  %20 = icmp slt i32 %19, 2498
  br i1 %20, label %21, label %123

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 11, i32 3
  %23 = load float, float* %22, align 8
  %24 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  store float %23, float* %6, align 4
  %25 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 0
  store float %23, float* %25, align 4
  %26 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 1
  %27 = load float, float* %26, align 4
  %28 = fcmp ogt float %27, %23
  %29 = select i1 %28, float* %6, float* %26
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast float* %26 to i32*
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 2
  %34 = load float, float* %33, align 4
  %35 = fcmp olt float %34, %23
  %36 = select i1 %35, float* %6, float* %33
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = bitcast float* %33 to i32*
  store i32 %38, i32* %39, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  %40 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 12, i32 1, i32 3, i32 0, i32 0
  %41 = load float*, float** %40, align 8
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 12, i32 1, i32 3, i32 0, i32 1
  %44 = bitcast float** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = ptrtoint float* %41 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 2
  %49 = icmp ugt i64 %48, 1
  br i1 %49, label %50, label %99

50:                                               ; preds = %21
  %51 = add nsw i64 %48, -1
  %52 = add nsw i64 %48, -2
  %53 = and i64 %51, 3
  %54 = icmp ult i64 %52, 3
  br i1 %54, label %83, label %55

55:                                               ; preds = %50
  %56 = sub nsw i64 %51, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi float [ %42, %55 ], [ %79, %57 ]
  %59 = phi i64 [ 1, %55 ], [ %80, %57 ]
  %60 = phi i64 [ %56, %55 ], [ %81, %57 ]
  %61 = getelementptr inbounds float, float* %41, i64 %59
  %62 = load float, float* %61, align 4
  %63 = fcmp olt float %62, %58
  %64 = select i1 %63, float %62, float %58
  %65 = add nuw nsw i64 %59, 1
  %66 = getelementptr inbounds float, float* %41, i64 %65
  %67 = load float, float* %66, align 4
  %68 = fcmp olt float %67, %64
  %69 = select i1 %68, float %67, float %64
  %70 = add nuw nsw i64 %59, 2
  %71 = getelementptr inbounds float, float* %41, i64 %70
  %72 = load float, float* %71, align 4
  %73 = fcmp olt float %72, %69
  %74 = select i1 %73, float %72, float %69
  %75 = add nuw i64 %59, 3
  %76 = getelementptr inbounds float, float* %41, i64 %75
  %77 = load float, float* %76, align 4
  %78 = fcmp olt float %77, %74
  %79 = select i1 %78, float %77, float %74
  %80 = add nuw i64 %59, 4
  %81 = add i64 %60, -4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %57

83:                                               ; preds = %57, %50
  %84 = phi float [ undef, %50 ], [ %79, %57 ]
  %85 = phi float [ %42, %50 ], [ %79, %57 ]
  %86 = phi i64 [ 1, %50 ], [ %80, %57 ]
  %87 = icmp eq i64 %53, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %83, %88
  %89 = phi float [ %95, %88 ], [ %85, %83 ]
  %90 = phi i64 [ %96, %88 ], [ %86, %83 ]
  %91 = phi i64 [ %97, %88 ], [ %53, %83 ]
  %92 = getelementptr inbounds float, float* %41, i64 %90
  %93 = load float, float* %92, align 4
  %94 = fcmp olt float %93, %89
  %95 = select i1 %94, float %93, float %89
  %96 = add nuw i64 %90, 1
  %97 = add i64 %91, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %88, !llvm.loop !2

99:                                               ; preds = %83, %88, %21
  %100 = phi float [ %42, %21 ], [ %84, %83 ], [ %95, %88 ]
  %101 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101)
  store float %100, float* %5, align 4
  %102 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 0
  store float %100, float* %102, align 4
  %103 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 1
  %104 = load float, float* %103, align 4
  %105 = fcmp ogt float %104, %100
  %106 = select i1 %105, float* %5, float* %103
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = bitcast float* %103 to i32*
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 2
  %111 = load float, float* %110, align 4
  %112 = fcmp olt float %111, %100
  %113 = select i1 %112, float* %5, float* %110
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = bitcast float* %110 to i32*
  store i32 %115, i32* %116, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101)
  %117 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 3
  %118 = load i8, i8* %117, align 4, !range !4
  %119 = icmp eq i8 %118, 0
  %120 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 15
  %121 = load i8, i8* %120, align 8
  %122 = select i1 %119, i8 %121, i8 1
  store i8 %122, i8* %117, align 4
  br label %414

123:                                              ; preds = %4
  switch i32 %18, label %414 [
    i32 2497, label %124
    i32 2498, label %195
    i32 2499, label %303
  ]

124:                                              ; preds = %123
  %125 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #9
  %126 = tail call i8* @_Znwm(i64 48) #10
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %126, i8** %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %129, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %126, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i64 47, i1 false) #9
  %130 = getelementptr inbounds i8, i8* %126, i64 47
  store i8 0, i8* %130, align 1
  %131 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 2) #9
  %132 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %124
  %137 = load i8*, i8** %127, align 8
  call void @_ZdlPv(i8* %137) #10
  br label %138

138:                                              ; preds = %124, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #9
  %139 = icmp eq %"class.webrtc::metrics::Histogram"* %131, null
  br i1 %139, label %149, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 9, i32 1
  %142 = load i8, i8* %141, align 1, !range !4
  %143 = icmp ne i8 %142, 0
  %144 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 1, i32 2, i32 9
  %145 = load i8, i8* %144, align 2
  %146 = icmp ne i8 %145, 0
  %147 = and i1 %143, %146
  %148 = zext i1 %147 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %131, i32 %148) #9
  br label %149

149:                                              ; preds = %138, %140
  %150 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer to i64*) acquire, align 8
  %151 = inttoptr i64 %150 to %"class.webrtc::metrics::Histogram"*
  %152 = icmp eq i64 %150, 0
  br i1 %152, label %153, label %171

153:                                              ; preds = %149
  %154 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #9
  %155 = call i8* @_Znwm(i64 48) #10
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %155, i8** %156, align 8
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = bitcast i64* %157 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %158, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i64 38, i1 false) #9
  %159 = getelementptr inbounds i8, i8* %155, i64 38
  store i8 0, i8* %159, align 1
  %160 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i32 0, i32 30, i32 31) #9
  %161 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %153
  %166 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %166) #10
  br label %167

167:                                              ; preds = %165, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #9
  %168 = ptrtoint %"class.webrtc::metrics::Histogram"* %160 to i64
  %169 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer to i64*), i64 0, i64 %168 seq_cst seq_cst
  %170 = icmp eq %"class.webrtc::metrics::Histogram"* %160, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %149, %167
  %172 = phi %"class.webrtc::metrics::Histogram"* [ %160, %167 ], [ %151, %149 ]
  %173 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %1, i64 0, i32 7, i32 3
  %174 = load i32, i32* %173, align 8
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %172, i32 %174) #9
  br label %175

175:                                              ; preds = %167, %171
  %176 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #9
  %177 = call i8* @_Znwm(i64 48) #10
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %177, i8** %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %180 = bitcast i64* %179 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %180, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %177, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44, i1 false) #9
  %181 = getelementptr inbounds i8, i8* %177, i64 44
  store i8 0, i8* %181, align 1
  %182 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 2) #9
  %183 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %175
  %188 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %188) #10
  br label %189

189:                                              ; preds = %175, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #9
  %190 = icmp eq %"class.webrtc::metrics::Histogram"* %182, null
  br i1 %190, label %414, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 3
  %193 = load i8, i8* %192, align 4, !range !4
  %194 = zext i8 %193 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %182, i32 %194) #9
  br label %414

195:                                              ; preds = %123
  %196 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_0 to i64*) acquire, align 8
  %197 = inttoptr i64 %196 to %"class.webrtc::metrics::Histogram"*
  %198 = icmp eq i64 %196, 0
  br i1 %198, label %199, label %217

199:                                              ; preds = %195
  %200 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #9
  %201 = tail call i8* @_Znwm(i64 48) #10
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %201, i8** %202, align 8
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = bitcast i64* %203 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %204, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %201, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i64 36, i1 false) #9
  %205 = getelementptr inbounds i8, i8* %201, i64 36
  store i8 0, i8* %205, align 1
  %206 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i32 0, i32 59, i32 30) #9
  %207 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %199
  %212 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %212) #10
  br label %213

213:                                              ; preds = %211, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #9
  %214 = ptrtoint %"class.webrtc::metrics::Histogram"* %206 to i64
  %215 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_0 to i64*), i64 0, i64 %214 seq_cst seq_cst
  %216 = icmp eq %"class.webrtc::metrics::Histogram"* %206, null
  br i1 %216, label %231, label %217

217:                                              ; preds = %195, %213
  %218 = phi %"class.webrtc::metrics::Histogram"* [ %206, %213 ], [ %197, %195 ]
  %219 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 0
  %220 = load float, float* %219, align 4
  %221 = fadd float %220, 0x3DDB7CDFE0000000
  %222 = call float @log10f(float %221) #9
  %223 = fmul float %222, 1.000000e+01
  %224 = fadd float %223, 3.000000e+01
  %225 = fsub float -0.000000e+00, %224
  %226 = fcmp oge float %224, 0.000000e+00
  %227 = fcmp oge float %225, 5.900000e+01
  %228 = select i1 %227, float 5.900000e+01, float %225
  %229 = select i1 %226, float 0.000000e+00, float %228
  %230 = fptosi float %229 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %218, i32 %230) #9
  br label %231

231:                                              ; preds = %213, %217
  %232 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_1 to i64*) acquire, align 8
  %233 = inttoptr i64 %232 to %"class.webrtc::metrics::Histogram"*
  %234 = icmp eq i64 %232, 0
  br i1 %234, label %235, label %253

235:                                              ; preds = %231
  %236 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #9
  %237 = call i8* @_Znwm(i64 48) #10
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %237, i8** %238, align 8
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %240 = bitcast i64* %239 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %240, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %237, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i64 34, i1 false) #9
  %241 = getelementptr inbounds i8, i8* %237, i64 34
  store i8 0, i8* %241, align 1
  %242 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i32 0, i32 59, i32 30) #9
  %243 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %235
  %248 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %248) #10
  br label %249

249:                                              ; preds = %247, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #9
  %250 = ptrtoint %"class.webrtc::metrics::Histogram"* %242 to i64
  %251 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_1 to i64*), i64 0, i64 %250 seq_cst seq_cst
  %252 = icmp eq %"class.webrtc::metrics::Histogram"* %242, null
  br i1 %252, label %267, label %253

253:                                              ; preds = %231, %249
  %254 = phi %"class.webrtc::metrics::Histogram"* [ %242, %249 ], [ %233, %231 ]
  %255 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 2
  %256 = load float, float* %255, align 4
  %257 = fadd float %256, 0x3DDB7CDFE0000000
  %258 = call float @log10f(float %257) #9
  %259 = fmul float %258, 1.000000e+01
  %260 = fadd float %259, 3.000000e+01
  %261 = fsub float -0.000000e+00, %260
  %262 = fcmp oge float %260, 0.000000e+00
  %263 = fcmp oge float %261, 5.900000e+01
  %264 = select i1 %263, float 5.900000e+01, float %261
  %265 = select i1 %262, float 0.000000e+00, float %264
  %266 = fptosi float %265 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %254, i32 %266) #9
  br label %267

267:                                              ; preds = %249, %253
  %268 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_2 to i64*) acquire, align 8
  %269 = inttoptr i64 %268 to %"class.webrtc::metrics::Histogram"*
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %271, label %289

271:                                              ; preds = %267
  %272 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #9
  %273 = call i8* @_Znwm(i64 48) #10
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %273, i8** %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %276 = bitcast i64* %275 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %276, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %273, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i64 34, i1 false) #9
  %277 = getelementptr inbounds i8, i8* %273, i64 34
  store i8 0, i8* %277, align 1
  %278 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i32 0, i32 59, i32 30) #9
  %279 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %279, i64 0, i32 1, i32 0
  %281 = load i8, i8* %280, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %271
  %284 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %284) #10
  br label %285

285:                                              ; preds = %283, %271
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #9
  %286 = ptrtoint %"class.webrtc::metrics::Histogram"* %278 to i64
  %287 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_2 to i64*), i64 0, i64 %286 seq_cst seq_cst
  %288 = icmp eq %"class.webrtc::metrics::Histogram"* %278, null
  br i1 %288, label %414, label %289

289:                                              ; preds = %267, %285
  %290 = phi %"class.webrtc::metrics::Histogram"* [ %278, %285 ], [ %269, %267 ]
  %291 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 1
  %292 = load float, float* %291, align 4
  %293 = fadd float %292, 0x3DDB7CDFE0000000
  %294 = call float @log10f(float %293) #9
  %295 = fmul float %294, 1.000000e+01
  %296 = fadd float %295, 3.000000e+01
  %297 = fsub float -0.000000e+00, %296
  %298 = fcmp oge float %296, 0.000000e+00
  %299 = fcmp oge float %297, 5.900000e+01
  %300 = select i1 %299, float 5.900000e+01, float %297
  %301 = select i1 %298, float 0.000000e+00, float %300
  %302 = fptosi float %301 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %290, i32 %302) #9
  br label %414

303:                                              ; preds = %123
  %304 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_3 to i64*) acquire, align 8
  %305 = inttoptr i64 %304 to %"class.webrtc::metrics::Histogram"*
  %306 = icmp eq i64 %304, 0
  br i1 %306, label %307, label %325

307:                                              ; preds = %303
  %308 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #9
  %309 = tail call i8* @_Znwm(i64 48) #10
  %310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %309, i8** %310, align 8
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %312 = bitcast i64* %311 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %312, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %309, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i64 37, i1 false) #9
  %313 = getelementptr inbounds i8, i8* %309, i64 37
  store i8 0, i8* %313, align 1
  %314 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i32 0, i32 19, i32 20) #9
  %315 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %321

319:                                              ; preds = %307
  %320 = load i8*, i8** %310, align 8
  call void @_ZdlPv(i8* %320) #10
  br label %321

321:                                              ; preds = %319, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #9
  %322 = ptrtoint %"class.webrtc::metrics::Histogram"* %314 to i64
  %323 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_3 to i64*), i64 0, i64 %322 seq_cst seq_cst
  %324 = icmp eq %"class.webrtc::metrics::Histogram"* %314, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %303, %321
  %326 = phi %"class.webrtc::metrics::Histogram"* [ %314, %321 ], [ %305, %303 ]
  %327 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 0
  %328 = load float, float* %327, align 4
  %329 = fadd float %328, 0x3DDB7CDFE0000000
  %330 = call float @log10f(float %329) #9
  %331 = fmul float %330, 1.000000e+01
  %332 = fadd float %331, 0.000000e+00
  %333 = fcmp ole float %332, 0.000000e+00
  %334 = fcmp oge float %332, 1.900000e+01
  %335 = select i1 %334, float 1.900000e+01, float %332
  %336 = select i1 %333, float 0.000000e+00, float %335
  %337 = fptosi float %336 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %326, i32 %337) #9
  br label %338

338:                                              ; preds = %321, %325
  %339 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_4 to i64*) acquire, align 8
  %340 = inttoptr i64 %339 to %"class.webrtc::metrics::Histogram"*
  %341 = icmp eq i64 %339, 0
  br i1 %341, label %342, label %360

342:                                              ; preds = %338
  %343 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #9
  %344 = call i8* @_Znwm(i64 48) #10
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %344, i8** %345, align 8
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %347 = bitcast i64* %346 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %347, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %344, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i64 35, i1 false) #9
  %348 = getelementptr inbounds i8, i8* %344, i64 35
  store i8 0, i8* %348, align 1
  %349 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, i32 0, i32 19, i32 20) #9
  %350 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %350, i64 0, i32 1, i32 0
  %352 = load i8, i8* %351, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %342
  %355 = load i8*, i8** %345, align 8
  call void @_ZdlPv(i8* %355) #10
  br label %356

356:                                              ; preds = %354, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #9
  %357 = ptrtoint %"class.webrtc::metrics::Histogram"* %349 to i64
  %358 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_4 to i64*), i64 0, i64 %357 seq_cst seq_cst
  %359 = icmp eq %"class.webrtc::metrics::Histogram"* %349, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %338, %356
  %361 = phi %"class.webrtc::metrics::Histogram"* [ %349, %356 ], [ %340, %338 ]
  %362 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 2
  %363 = load float, float* %362, align 4
  %364 = fadd float %363, 0x3DDB7CDFE0000000
  %365 = call float @log10f(float %364) #9
  %366 = fmul float %365, 1.000000e+01
  %367 = fadd float %366, 0.000000e+00
  %368 = fcmp ole float %367, 0.000000e+00
  %369 = fcmp oge float %367, 1.900000e+01
  %370 = select i1 %369, float 1.900000e+01, float %367
  %371 = select i1 %368, float 0.000000e+00, float %370
  %372 = fptosi float %371 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %361, i32 %372) #9
  br label %373

373:                                              ; preds = %356, %360
  %374 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_5 to i64*) acquire, align 8
  %375 = inttoptr i64 %374 to %"class.webrtc::metrics::Histogram"*
  %376 = icmp eq i64 %374, 0
  br i1 %376, label %377, label %395

377:                                              ; preds = %373
  %378 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #9
  %379 = call i8* @_Znwm(i64 48) #10
  %380 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %379, i8** %380, align 8
  %381 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %382 = bitcast i64* %381 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %382, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %379, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i64 35, i1 false) #9
  %383 = getelementptr inbounds i8, i8* %379, i64 35
  store i8 0, i8* %383, align 1
  %384 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, i32 0, i32 19, i32 20) #9
  %385 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %386 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %385, i64 0, i32 1, i32 0
  %387 = load i8, i8* %386, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %389, label %391

389:                                              ; preds = %377
  %390 = load i8*, i8** %380, align 8
  call void @_ZdlPv(i8* %390) #10
  br label %391

391:                                              ; preds = %389, %377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #9
  %392 = ptrtoint %"class.webrtc::metrics::Histogram"* %384 to i64
  %393 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc18EchoRemoverMetrics6UpdateERKNS_8AecStateERKNSt3__15arrayIfLm65EEES8_E24atomic_histogram_pointer_5 to i64*), i64 0, i64 %392 seq_cst seq_cst
  %394 = icmp eq %"class.webrtc::metrics::Histogram"* %384, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %373, %391
  %396 = phi %"class.webrtc::metrics::Histogram"* [ %384, %391 ], [ %375, %373 ]
  %397 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 1
  %398 = load float, float* %397, align 4
  %399 = fadd float %398, 0x3DDB7CDFE0000000
  %400 = call float @log10f(float %399) #9
  %401 = fmul float %400, 1.000000e+01
  %402 = fadd float %401, 0.000000e+00
  %403 = fcmp ole float %402, 0.000000e+00
  %404 = fcmp oge float %402, 1.900000e+01
  %405 = select i1 %404, float 1.900000e+01, float %402
  %406 = select i1 %403, float 0.000000e+00, float %405
  %407 = fptosi float %406 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %396, i32 %407) #9
  br label %408

408:                                              ; preds = %391, %395
  store i8 1, i8* %16, align 1
  store i32 0, i32* %17, align 4
  %409 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 1, i32 0
  %410 = bitcast float* %409 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+04, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %410, align 4
  %411 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %411, align 4
  %412 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 2, i32 2
  store float 1.000000e+03, float* %412, align 4
  %413 = getelementptr inbounds %"class.webrtc::EchoRemoverMetrics", %"class.webrtc::EchoRemoverMetrics"* %0, i64 0, i32 3
  store i8 0, i8* %413, align 4
  br label %414

414:                                              ; preds = %289, %285, %191, %189, %408, %123, %99
  ret void
}

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #4

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #4

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4aec329TransformDbMetricForReportingEbfffff(i1 zeroext, float, float, float, float, float) local_unnamed_addr #5 {
  %7 = fmul float %4, %5
  %8 = fadd float %7, 0x3DDB7CDFE0000000
  %9 = tail call float @log10f(float %8) #9
  %10 = fmul float %9, 1.000000e+01
  %11 = fadd float %10, %3
  %12 = fsub float -0.000000e+00, %11
  %13 = select i1 %0, float %12, float %11
  %14 = fcmp ole float %13, %1
  %15 = fcmp oge float %13, %2
  %16 = select i1 %15, float %2, float %13
  %17 = select i1 %14, float %1, float %16
  %18 = fptosi float %17 to i32
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4aec314UpdateDbMetricERKNSt3__15arrayIfLm65EEEPNS2_INS_18EchoRemoverMetrics8DbMetricELm2EEE(%"struct.std::__1::array"* readonly dereferenceable(260), %"struct.std::__1::array.159"* nocapture) local_unnamed_addr #2 {
  %3 = alloca float, align 4
  %4 = bitcast float* %3 to i8*
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = fadd float %6, 0.000000e+00
  %8 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1
  %9 = load float, float* %8, align 4
  %10 = fadd float %7, %9
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2
  %12 = load float, float* %11, align 4
  %13 = fadd float %10, %12
  %14 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3
  %15 = load float, float* %14, align 4
  %16 = fadd float %13, %15
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 4
  %18 = load float, float* %17, align 4
  %19 = fadd float %16, %18
  %20 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 5
  %21 = load float, float* %20, align 4
  %22 = fadd float %19, %21
  %23 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 6
  %24 = load float, float* %23, align 4
  %25 = fadd float %22, %24
  %26 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 7
  %27 = load float, float* %26, align 4
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 8
  %30 = load float, float* %29, align 4
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 9
  %33 = load float, float* %32, align 4
  %34 = fadd float %31, %33
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 10
  %36 = load float, float* %35, align 4
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 11
  %39 = load float, float* %38, align 4
  %40 = fadd float %37, %39
  %41 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 12
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 13
  %45 = load float, float* %44, align 4
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 14
  %48 = load float, float* %47, align 4
  %49 = fadd float %46, %48
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 15
  %51 = load float, float* %50, align 4
  %52 = fadd float %49, %51
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 16
  %54 = load float, float* %53, align 4
  %55 = fadd float %52, %54
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 17
  %57 = load float, float* %56, align 4
  %58 = fadd float %55, %57
  %59 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 18
  %60 = load float, float* %59, align 4
  %61 = fadd float %58, %60
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 19
  %63 = load float, float* %62, align 4
  %64 = fadd float %61, %63
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 20
  %66 = load float, float* %65, align 4
  %67 = fadd float %64, %66
  %68 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 21
  %69 = load float, float* %68, align 4
  %70 = fadd float %67, %69
  %71 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 22
  %72 = load float, float* %71, align 4
  %73 = fadd float %70, %72
  %74 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 23
  %75 = load float, float* %74, align 4
  %76 = fadd float %73, %75
  %77 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 24
  %78 = load float, float* %77, align 4
  %79 = fadd float %76, %78
  %80 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 25
  %81 = load float, float* %80, align 4
  %82 = fadd float %79, %81
  %83 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 26
  %84 = load float, float* %83, align 4
  %85 = fadd float %82, %84
  %86 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 27
  %87 = load float, float* %86, align 4
  %88 = fadd float %85, %87
  %89 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 28
  %90 = load float, float* %89, align 4
  %91 = fadd float %88, %90
  %92 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 29
  %93 = load float, float* %92, align 4
  %94 = fadd float %91, %93
  %95 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 30
  %96 = load float, float* %95, align 4
  %97 = fadd float %94, %96
  %98 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 31
  %99 = load float, float* %98, align 4
  %100 = fadd float %97, %99
  %101 = fmul float %100, 3.125000e-02
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4)
  store float %101, float* %3, align 4
  %102 = getelementptr inbounds %"struct.std::__1::array.159", %"struct.std::__1::array.159"* %1, i64 0, i32 0, i64 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fadd float %101, %103
  store float %104, float* %102, align 4
  %105 = getelementptr inbounds %"struct.std::__1::array.159", %"struct.std::__1::array.159"* %1, i64 0, i32 0, i64 0, i32 1
  %106 = load float, float* %105, align 4
  %107 = fcmp ogt float %106, %101
  %108 = select i1 %107, float* %3, float* %105
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast float* %105 to i32*
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.std::__1::array.159", %"struct.std::__1::array.159"* %1, i64 0, i32 0, i64 0, i32 2
  %113 = load float, float* %112, align 4
  %114 = fcmp olt float %113, %101
  %115 = select i1 %114, float* %3, float* %112
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = bitcast float* %112 to i32*
  store i32 %117, i32* %118, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4)
  %119 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 32
  %120 = load float, float* %119, align 4
  %121 = fadd float %120, 0.000000e+00
  %122 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 33
  %123 = load float, float* %122, align 4
  %124 = fadd float %121, %123
  %125 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 34
  %126 = load float, float* %125, align 4
  %127 = fadd float %124, %126
  %128 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 35
  %129 = load float, float* %128, align 4
  %130 = fadd float %127, %129
  %131 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 36
  %132 = load float, float* %131, align 4
  %133 = fadd float %130, %132
  %134 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 37
  %135 = load float, float* %134, align 4
  %136 = fadd float %133, %135
  %137 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 38
  %138 = load float, float* %137, align 4
  %139 = fadd float %136, %138
  %140 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 39
  %141 = load float, float* %140, align 4
  %142 = fadd float %139, %141
  %143 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 40
  %144 = load float, float* %143, align 4
  %145 = fadd float %142, %144
  %146 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 41
  %147 = load float, float* %146, align 4
  %148 = fadd float %145, %147
  %149 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 42
  %150 = load float, float* %149, align 4
  %151 = fadd float %148, %150
  %152 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 43
  %153 = load float, float* %152, align 4
  %154 = fadd float %151, %153
  %155 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 44
  %156 = load float, float* %155, align 4
  %157 = fadd float %154, %156
  %158 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 45
  %159 = load float, float* %158, align 4
  %160 = fadd float %157, %159
  %161 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 46
  %162 = load float, float* %161, align 4
  %163 = fadd float %160, %162
  %164 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 47
  %165 = load float, float* %164, align 4
  %166 = fadd float %163, %165
  %167 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 48
  %168 = load float, float* %167, align 4
  %169 = fadd float %166, %168
  %170 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 49
  %171 = load float, float* %170, align 4
  %172 = fadd float %169, %171
  %173 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 50
  %174 = load float, float* %173, align 4
  %175 = fadd float %172, %174
  %176 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 51
  %177 = load float, float* %176, align 4
  %178 = fadd float %175, %177
  %179 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 52
  %180 = load float, float* %179, align 4
  %181 = fadd float %178, %180
  %182 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 53
  %183 = load float, float* %182, align 4
  %184 = fadd float %181, %183
  %185 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 54
  %186 = load float, float* %185, align 4
  %187 = fadd float %184, %186
  %188 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 55
  %189 = load float, float* %188, align 4
  %190 = fadd float %187, %189
  %191 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 56
  %192 = load float, float* %191, align 4
  %193 = fadd float %190, %192
  %194 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 57
  %195 = load float, float* %194, align 4
  %196 = fadd float %193, %195
  %197 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 58
  %198 = load float, float* %197, align 4
  %199 = fadd float %196, %198
  %200 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 59
  %201 = load float, float* %200, align 4
  %202 = fadd float %199, %201
  %203 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 60
  %204 = load float, float* %203, align 4
  %205 = fadd float %202, %204
  %206 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 61
  %207 = load float, float* %206, align 4
  %208 = fadd float %205, %207
  %209 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 62
  %210 = load float, float* %209, align 4
  %211 = fadd float %208, %210
  %212 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 63
  %213 = load float, float* %212, align 4
  %214 = fadd float %211, %213
  %215 = fmul float %214, 3.125000e-02
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4)
  store float %215, float* %3, align 4
  %216 = getelementptr inbounds %"struct.std::__1::array.159", %"struct.std::__1::array.159"* %1, i64 0, i32 0, i64 1, i32 0
  %217 = load float, float* %216, align 4
  %218 = fadd float %215, %217
  store float %218, float* %216, align 4
  %219 = getelementptr inbounds %"struct.std::__1::array.159", %"struct.std::__1::array.159"* %1, i64 0, i32 0, i64 1, i32 1
  %220 = load float, float* %219, align 4
  %221 = fcmp ogt float %220, %215
  %222 = select i1 %221, float* %3, float* %219
  %223 = bitcast float* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = bitcast float* %219 to i32*
  store i32 %224, i32* %225, align 4
  %226 = getelementptr inbounds %"struct.std::__1::array.159", %"struct.std::__1::array.159"* %1, i64 0, i32 0, i64 1, i32 2
  %227 = load float, float* %226, align 4
  %228 = fcmp olt float %227, %215
  %229 = select i1 %228, float* %3, float* %226
  %230 = bitcast float* %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = bitcast float* %226 to i32*
  store i32 %231, i32* %232, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4)
  ret void
}

; Function Attrs: nofree nounwind
declare float @log10f(float) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
