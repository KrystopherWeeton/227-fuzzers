; ModuleID = '../../third_party/icu/source/i18n/inputext.cpp'
source_filename = "../../third_party/icu/source/i18n/inputext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::InputText" = type <{ i8*, i32, [4 x i8], i16*, i8, [7 x i8], i8*, i8*, i32, [4 x i8] }>

@_ZN6icu_699InputTextC1ER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::InputText"*, i32*), void (%"class.icu_69::InputText"*, i32*)* @_ZN6icu_699InputTextC2ER10UErrorCode
@_ZN6icu_699InputTextD1Ev = hidden unnamed_addr alias void (%"class.icu_69::InputText"*), void (%"class.icu_69::InputText"*)* @_ZN6icu_699InputTextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699InputTextC2ER10UErrorCode(%"class.icu_69::InputText"* nocapture, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 0
  %4 = tail call noalias i8* @uprv_malloc_69(i64 8192) #8
  store i8* %4, i8** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 3
  %6 = tail call noalias i8* @uprv_malloc_69(i64 512) #8
  %7 = bitcast i16** %5 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 6
  %9 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  %10 = load i8*, i8** %3, align 8
  %11 = icmp eq i8* %10, null
  %12 = icmp eq i8* %6, null
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  store i32 7, i32* %1, align 4
  br label %15

15:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699InputTextD2Ev(%"class.icu_69::InputText"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 6
  %3 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %3) #9
  %4 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 3
  %5 = bitcast i16** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @uprv_free_69(i8* %6) #9
  %7 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #9
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6icu_699InputText7setTextEPKci(%"class.icu_69::InputText"* nocapture, i8*, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 4
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 7
  store i8* %1, i8** %6, align 8
  %7 = icmp eq i32 %2, -1
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* %1) #10
  %10 = trunc i64 %9 to i32
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ %10, %8 ], [ %2, %3 ]
  %13 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 8
  store i32 %12, i32* %13, align 8
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699InputText19setDeclaredEncodingEPKci(%"class.icu_69::InputText"* nocapture, i8* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %2, -1
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call i64 @strlen(i8* nonnull %1) #10
  %9 = trunc i64 %8 to i32
  br label %10

10:                                               ; preds = %7, %5
  %11 = phi i32 [ %9, %7 ], [ %2, %5 ]
  %12 = add nsw i32 %11, 1
  %13 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 6
  %14 = load i8*, i8** %13, align 8
  tail call void @uprv_free_69(i8* %14) #9
  %15 = sext i32 %12 to i64
  %16 = tail call noalias i8* @uprv_malloc_69(i64 %15) #8
  store i8* %16, i8** %13, align 8
  %17 = tail call i8* @strncpy(i8* %16, i8* nonnull %1, i64 %15) #9
  br label %18

18:                                               ; preds = %3, %10
  ret void
}

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_699InputText5isSetEv(%"class.icu_69::InputText"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  %5 = zext i1 %4 to i8
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699InputText10MungeInputEa(%"class.icu_69::InputText"* nocapture, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8 %1, 0
  %4 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  br i1 %3, label %61, label %6

6:                                                ; preds = %2
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  br label %82

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 0
  br label %13

13:                                               ; preds = %10, %38
  %14 = phi i32 [ %5, %10 ], [ %39, %38 ]
  %15 = phi i64 [ 0, %10 ], [ %46, %38 ]
  %16 = phi i32 [ 0, %10 ], [ %40, %38 ]
  %17 = phi i32 [ 0, %10 ], [ %41, %38 ]
  %18 = phi i8 [ 0, %10 ], [ %45, %38 ]
  %19 = phi i32 [ 0, %10 ], [ %43, %38 ]
  %20 = load i8*, i8** %11, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %15
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 60
  %24 = and i8 %18, 1
  %25 = icmp eq i8 %24, 0
  br i1 %23, label %26, label %31

26:                                               ; preds = %13
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i32
  %29 = add nsw i32 %16, %28
  %30 = add nsw i32 %17, 1
  br label %38

31:                                               ; preds = %13
  br i1 %25, label %32, label %38

32:                                               ; preds = %31
  %33 = load i8*, i8** %12, align 8
  %34 = add nsw i32 %19, 1
  %35 = sext i32 %19 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  store i8 %22, i8* %36, align 1
  %37 = load i32, i32* %4, align 8
  br label %38

38:                                               ; preds = %26, %31, %32
  %39 = phi i32 [ %14, %31 ], [ %37, %32 ], [ %14, %26 ]
  %40 = phi i32 [ %16, %31 ], [ %16, %32 ], [ %29, %26 ]
  %41 = phi i32 [ %17, %31 ], [ %17, %32 ], [ %30, %26 ]
  %42 = phi i8 [ %18, %31 ], [ %18, %32 ], [ 1, %26 ]
  %43 = phi i32 [ %19, %31 ], [ %34, %32 ], [ %19, %26 ]
  %44 = icmp eq i8 %22, 62
  %45 = select i1 %44, i8 0, i8 %42
  %46 = add nuw nsw i64 %15, 1
  %47 = sext i32 %39 to i64
  %48 = icmp slt i64 %46, %47
  %49 = icmp slt i32 %43, 8192
  %50 = and i1 %49, %48
  br i1 %50, label %13, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 1
  store i32 %43, i32* %52, align 8
  %53 = icmp slt i32 %41, 5
  %54 = sdiv i32 %41, 5
  %55 = icmp slt i32 %54, %40
  %56 = or i1 %53, %55
  br i1 %56, label %61, label %57

57:                                               ; preds = %51
  %58 = icmp slt i32 %43, 100
  %59 = icmp sgt i32 %39, 600
  %60 = and i1 %58, %59
  br i1 %60, label %64, label %85

61:                                               ; preds = %2, %51
  %62 = phi i32 [ %39, %51 ], [ %5, %2 ]
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %82

64:                                               ; preds = %57, %61
  %65 = phi i32 [ %62, %61 ], [ %39, %57 ]
  %66 = icmp slt i32 %65, 8192
  %67 = select i1 %66, i32 %65, i32 8192
  %68 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 7
  %69 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 0
  %70 = sext i32 %67 to i64
  br label %71

71:                                               ; preds = %64, %71
  %72 = phi i64 [ 0, %64 ], [ %78, %71 ]
  %73 = load i8*, i8** %68, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  %75 = load i8, i8* %74, align 1
  %76 = load i8*, i8** %69, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 %72
  store i8 %75, i8* %77, align 1
  %78 = add nuw nsw i64 %72, 1
  %79 = icmp slt i64 %78, %70
  br i1 %79, label %71, label %80

80:                                               ; preds = %71
  %81 = trunc i64 %78 to i32
  br label %82

82:                                               ; preds = %8, %80, %61
  %83 = phi i32 [ 0, %61 ], [ %81, %80 ], [ 0, %8 ]
  %84 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 1
  store i32 %83, i32* %84, align 8
  br label %85

85:                                               ; preds = %82, %57
  %86 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 3
  %87 = bitcast i16** %86 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %88, i8 0, i64 512, i1 false)
  %89 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 0
  br label %99

94:                                               ; preds = %99, %85
  %95 = load i16*, i16** %86, align 8
  %96 = getelementptr inbounds i16, i16* %95, i64 128
  %97 = load i16, i16* %96, align 2
  %98 = icmp eq i16 %97, 0
  br i1 %98, label %113, label %117

99:                                               ; preds = %92, %99
  %100 = phi i64 [ 0, %92 ], [ %109, %99 ]
  %101 = load i16*, i16** %86, align 8
  %102 = load i8*, i8** %93, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %100
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds i16, i16* %101, i64 %105
  %107 = load i16, i16* %106, align 2
  %108 = add i16 %107, 1
  store i16 %108, i16* %106, align 2
  %109 = add nuw nsw i64 %100, 1
  %110 = load i32, i32* %89, align 8
  %111 = sext i32 %110 to i64
  %112 = icmp slt i64 %109, %111
  br i1 %112, label %99, label %94

113:                                              ; preds = %94
  %114 = getelementptr inbounds i16, i16* %95, i64 129
  %115 = load i16, i16* %114, align 2
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %236, %232, %228, %224, %220, %216, %212, %208, %204, %200, %196, %192, %188, %184, %180, %176, %172, %168, %164, %160, %156, %152, %148, %144, %140, %136, %132, %128, %124, %120, %113, %94
  %118 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %0, i64 0, i32 4
  store i8 1, i8* %118, align 8
  br label %119

119:                                              ; preds = %236, %117
  ret void

120:                                              ; preds = %113
  %121 = getelementptr inbounds i16, i16* %95, i64 130
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %124, label %117

124:                                              ; preds = %120
  %125 = getelementptr inbounds i16, i16* %95, i64 131
  %126 = load i16, i16* %125, align 2
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %128, label %117

128:                                              ; preds = %124
  %129 = getelementptr inbounds i16, i16* %95, i64 132
  %130 = load i16, i16* %129, align 2
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %132, label %117

132:                                              ; preds = %128
  %133 = getelementptr inbounds i16, i16* %95, i64 133
  %134 = load i16, i16* %133, align 2
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %136, label %117

136:                                              ; preds = %132
  %137 = getelementptr inbounds i16, i16* %95, i64 134
  %138 = load i16, i16* %137, align 2
  %139 = icmp eq i16 %138, 0
  br i1 %139, label %140, label %117

140:                                              ; preds = %136
  %141 = getelementptr inbounds i16, i16* %95, i64 135
  %142 = load i16, i16* %141, align 2
  %143 = icmp eq i16 %142, 0
  br i1 %143, label %144, label %117

144:                                              ; preds = %140
  %145 = getelementptr inbounds i16, i16* %95, i64 136
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %117

148:                                              ; preds = %144
  %149 = getelementptr inbounds i16, i16* %95, i64 137
  %150 = load i16, i16* %149, align 2
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %152, label %117

152:                                              ; preds = %148
  %153 = getelementptr inbounds i16, i16* %95, i64 138
  %154 = load i16, i16* %153, align 2
  %155 = icmp eq i16 %154, 0
  br i1 %155, label %156, label %117

156:                                              ; preds = %152
  %157 = getelementptr inbounds i16, i16* %95, i64 139
  %158 = load i16, i16* %157, align 2
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %160, label %117

160:                                              ; preds = %156
  %161 = getelementptr inbounds i16, i16* %95, i64 140
  %162 = load i16, i16* %161, align 2
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %164, label %117

164:                                              ; preds = %160
  %165 = getelementptr inbounds i16, i16* %95, i64 141
  %166 = load i16, i16* %165, align 2
  %167 = icmp eq i16 %166, 0
  br i1 %167, label %168, label %117

168:                                              ; preds = %164
  %169 = getelementptr inbounds i16, i16* %95, i64 142
  %170 = load i16, i16* %169, align 2
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %172, label %117

172:                                              ; preds = %168
  %173 = getelementptr inbounds i16, i16* %95, i64 143
  %174 = load i16, i16* %173, align 2
  %175 = icmp eq i16 %174, 0
  br i1 %175, label %176, label %117

176:                                              ; preds = %172
  %177 = getelementptr inbounds i16, i16* %95, i64 144
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %178, 0
  br i1 %179, label %180, label %117

180:                                              ; preds = %176
  %181 = getelementptr inbounds i16, i16* %95, i64 145
  %182 = load i16, i16* %181, align 2
  %183 = icmp eq i16 %182, 0
  br i1 %183, label %184, label %117

184:                                              ; preds = %180
  %185 = getelementptr inbounds i16, i16* %95, i64 146
  %186 = load i16, i16* %185, align 2
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %188, label %117

188:                                              ; preds = %184
  %189 = getelementptr inbounds i16, i16* %95, i64 147
  %190 = load i16, i16* %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %192, label %117

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %95, i64 148
  %194 = load i16, i16* %193, align 2
  %195 = icmp eq i16 %194, 0
  br i1 %195, label %196, label %117

196:                                              ; preds = %192
  %197 = getelementptr inbounds i16, i16* %95, i64 149
  %198 = load i16, i16* %197, align 2
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %200, label %117

200:                                              ; preds = %196
  %201 = getelementptr inbounds i16, i16* %95, i64 150
  %202 = load i16, i16* %201, align 2
  %203 = icmp eq i16 %202, 0
  br i1 %203, label %204, label %117

204:                                              ; preds = %200
  %205 = getelementptr inbounds i16, i16* %95, i64 151
  %206 = load i16, i16* %205, align 2
  %207 = icmp eq i16 %206, 0
  br i1 %207, label %208, label %117

208:                                              ; preds = %204
  %209 = getelementptr inbounds i16, i16* %95, i64 152
  %210 = load i16, i16* %209, align 2
  %211 = icmp eq i16 %210, 0
  br i1 %211, label %212, label %117

212:                                              ; preds = %208
  %213 = getelementptr inbounds i16, i16* %95, i64 153
  %214 = load i16, i16* %213, align 2
  %215 = icmp eq i16 %214, 0
  br i1 %215, label %216, label %117

216:                                              ; preds = %212
  %217 = getelementptr inbounds i16, i16* %95, i64 154
  %218 = load i16, i16* %217, align 2
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %220, label %117

220:                                              ; preds = %216
  %221 = getelementptr inbounds i16, i16* %95, i64 155
  %222 = load i16, i16* %221, align 2
  %223 = icmp eq i16 %222, 0
  br i1 %223, label %224, label %117

224:                                              ; preds = %220
  %225 = getelementptr inbounds i16, i16* %95, i64 156
  %226 = load i16, i16* %225, align 2
  %227 = icmp eq i16 %226, 0
  br i1 %227, label %228, label %117

228:                                              ; preds = %224
  %229 = getelementptr inbounds i16, i16* %95, i64 157
  %230 = load i16, i16* %229, align 2
  %231 = icmp eq i16 %230, 0
  br i1 %231, label %232, label %117

232:                                              ; preds = %228
  %233 = getelementptr inbounds i16, i16* %95, i64 158
  %234 = load i16, i16* %233, align 2
  %235 = icmp eq i16 %234, 0
  br i1 %235, label %236, label %117

236:                                              ; preds = %232
  %237 = getelementptr inbounds i16, i16* %95, i64 159
  %238 = load i16, i16* %237, align 2
  %239 = icmp eq i16 %238, 0
  br i1 %239, label %119, label %117
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
