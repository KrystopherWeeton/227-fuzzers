; ModuleID = '../../extensions/renderer/extension_throttle_entry.cc'
source_filename = "../../extensions/renderer/extension_throttle_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.extensions::ExtensionThrottleEntry" = type { i32 (...)**, %"struct.net::BackoffEntry::Policy", %"class.base::TimeTicks", %"class.std::__1::queue", %"class.base::TimeDelta", i32, i8, %"class.net::BackoffEntry", %"class.std::__1::basic_string" }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TickClock" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4base14circular_dequeINS_9TimeTicksEED2Ev = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

$_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_ = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZN10extensions22ExtensionThrottleEntry29kDefaultSlidingWindowPeriodMsE = hidden local_unnamed_addr constant i32 2000, align 4
@_ZN10extensions22ExtensionThrottleEntry24kDefaultMaxSendThresholdE = hidden local_unnamed_addr constant i32 20, align 4
@_ZN10extensions22ExtensionThrottleEntry25kDefaultNumErrorsToIgnoreE = hidden local_unnamed_addr constant i32 2, align 4
@_ZN10extensions22ExtensionThrottleEntry22kDefaultInitialDelayMsE = hidden local_unnamed_addr constant i32 700, align 4
@_ZN10extensions22ExtensionThrottleEntry22kDefaultMultiplyFactorE = hidden local_unnamed_addr constant double 1.400000e+00, align 8
@_ZN10extensions22ExtensionThrottleEntry20kDefaultJitterFactorE = hidden local_unnamed_addr constant double 4.000000e-01, align 8
@_ZN10extensions22ExtensionThrottleEntry24kDefaultMaximumBackoffMsE = hidden local_unnamed_addr constant i32 900000, align 4
@_ZN10extensions22ExtensionThrottleEntry23kDefaultEntryLifetimeMsE = hidden local_unnamed_addr constant i32 120000, align 4
@_ZTVN10extensions22ExtensionThrottleEntryE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ExtensionThrottleEntry"*)* @_ZN10extensions22ExtensionThrottleEntryD2Ev to i8*), i8* bitcast (void (%"class.extensions::ExtensionThrottleEntry"*)* @_ZN10extensions22ExtensionThrottleEntryD0Ev to i8*), i8* bitcast (i64 (%"class.extensions::ExtensionThrottleEntry"*)* @_ZNK10extensions22ExtensionThrottleEntry14ImplGetTimeNowEv to i8*), i8* bitcast (%"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)* @_ZNK10extensions22ExtensionThrottleEntry15GetBackoffEntryEv to i8*), i8* bitcast (%"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)* @_ZN10extensions22ExtensionThrottleEntry15GetBackoffEntryEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN10extensions22ExtensionThrottleEntryC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.extensions::ExtensionThrottleEntry"*, %"class.std::__1::basic_string"*), void (%"class.extensions::ExtensionThrottleEntry"*, %"class.std::__1::basic_string"*)* @_ZN10extensions22ExtensionThrottleEntryC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN10extensions22ExtensionThrottleEntryC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN3net12BackoffEntry6PolicyE = hidden unnamed_addr alias void (%"class.extensions::ExtensionThrottleEntry"*, %"class.std::__1::basic_string"*, %"struct.net::BackoffEntry::Policy"*), void (%"class.extensions::ExtensionThrottleEntry"*, %"class.std::__1::basic_string"*, %"struct.net::BackoffEntry::Policy"*)* @_ZN10extensions22ExtensionThrottleEntryC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN3net12BackoffEntry6PolicyE
@_ZN10extensions22ExtensionThrottleEntryD1Ev = hidden unnamed_addr alias void (%"class.extensions::ExtensionThrottleEntry"*), void (%"class.extensions::ExtensionThrottleEntry"*)* @_ZN10extensions22ExtensionThrottleEntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntryC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionThrottleEntry"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions22ExtensionThrottleEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 4, i32 0
  %6 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  store i64 2000000, i64* %5, align 8
  %7 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 5
  store i32 20, i32* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 6
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"* %9, %"struct.net::BackoffEntry::Policy"* %10) #11
  %11 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #11
  br label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #11
  br label %24

24:                                               ; preds = %16, %19
  %25 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  store i64 %25, i64* %4, align 8
  %26 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 0
  store i32 2, i32* %26, align 8
  %27 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 1
  store i32 700, i32* %27, align 4
  %28 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 2
  %29 = bitcast double* %28 to <2 x double>*
  store <2 x double> <double 1.400000e+00, double 4.000000e-01>, <2 x double>* %29, align 8
  %30 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 4
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 900000, i64 120000>, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %32, align 8
  ret void
}

declare void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"*, %"struct.net::BackoffEntry::Policy"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntry10InitializeEv(%"class.extensions::ExtensionThrottleEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %3 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %3, align 8
  %4 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 0
  store i32 2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 1
  store i32 700, i32* %5, align 4
  %6 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 2
  %7 = bitcast double* %6 to <2 x double>*
  store <2 x double> <double 1.400000e+00, double 4.000000e-01>, <2 x double>* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 4
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 900000, i64 120000>, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntryC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN3net12BackoffEntry6PolicyE(%"class.extensions::ExtensionThrottleEntry"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"struct.net::BackoffEntry::Policy"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions22ExtensionThrottleEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 4, i32 0
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false)
  store i64 2000000, i64* %6, align 8
  %8 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 5
  store i32 20, i32* %8, align 8
  %9 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 6
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"* %10, %"struct.net::BackoffEntry::Policy"* %11) #11
  %12 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  br label %25

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %22, i64 %24) #11
  br label %25

25:                                               ; preds = %17, %20
  %26 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  store i64 %26, i64* %5, align 8
  %27 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 0
  store i32 2, i32* %27, align 8
  %28 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 1
  store i32 700, i32* %28, align 4
  %29 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 2
  %30 = bitcast double* %29 to <2 x double>*
  store <2 x double> <double 1.400000e+00, double 4.000000e-01>, <2 x double>* %30, align 8
  %31 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 4
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 900000, i64 120000>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %33, align 8
  %34 = bitcast %"struct.net::BackoffEntry::Policy"* %11 to i8*
  %35 = bitcast %"struct.net::BackoffEntry::Policy"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 48, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions22ExtensionThrottleEntry15IsEntryOutdatedEv(%"class.extensions::ExtensionThrottleEntry"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %47, label %8

8:                                                ; preds = %1
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %8, %10
  %14 = phi i64 [ %12, %10 ], [ %6, %8 ]
  %15 = add i64 %14, -1
  %16 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %16, i64 %15) #11
  %18 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 4, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %17, i64 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %19, -9223372036854775807
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %31, label %24

24:                                               ; preds = %13
  %25 = icmp slt i64 %19, 0
  %26 = select i1 %25, i64 -9223372036854775808, i64 9223372036854775807
  %27 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %21, i64 %19) #11
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 %26, i64 %29, !prof !2
  br label %39

31:                                               ; preds = %13
  %32 = add i64 %21, -9223372036854775807
  %33 = icmp ugt i64 %32, 1
  %34 = icmp eq i64 %21, %19
  %35 = or i1 %34, %33
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #11
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %39

39:                                               ; preds = %24, %31, %36
  %40 = phi i64 [ %30, %24 ], [ %19, %31 ], [ %19, %36 ]
  %41 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to i64 (%"class.extensions::ExtensionThrottleEntry"*)***
  %42 = load i64 (%"class.extensions::ExtensionThrottleEntry"*)**, i64 (%"class.extensions::ExtensionThrottleEntry"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.extensions::ExtensionThrottleEntry"*)*, i64 (%"class.extensions::ExtensionThrottleEntry"*)** %42, i64 2
  %44 = load i64 (%"class.extensions::ExtensionThrottleEntry"*)*, i64 (%"class.extensions::ExtensionThrottleEntry"*)** %43, align 8
  %45 = call i64 %44(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  %46 = icmp sgt i64 %40, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %1, %39
  %48 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)***
  %49 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %49, i64 3
  %51 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %50, align 8
  %52 = call %"class.net::BackoffEntry"* %51(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  %53 = call zeroext i1 @_ZNK3net12BackoffEntry10CanDiscardEv(%"class.net::BackoffEntry"* %52) #11
  br label %54

54:                                               ; preds = %39, %47
  %55 = phi i1 [ %53, %47 ], [ false, %39 ]
  ret i1 %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK3net12BackoffEntry10CanDiscardEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions22ExtensionThrottleEntry24DisableBackoffThrottlingEv(%"class.extensions::ExtensionThrottleEntry"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 6
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions22ExtensionThrottleEntry19ShouldRejectRequestEv(%"class.extensions::ExtensionThrottleEntry"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)***
  %7 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %7, i64 3
  %9 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %8, align 8
  %10 = tail call %"class.net::BackoffEntry"* %9(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  %11 = tail call zeroext i1 @_ZNK3net12BackoffEntry19ShouldRejectRequestEv(%"class.net::BackoffEntry"* %10) #11
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ %11, %5 ], [ false, %1 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK3net12BackoffEntry19ShouldRejectRequestEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10extensions22ExtensionThrottleEntry32ReserveSendingTimeForNextRequestERKN4base9TimeTicksE(%"class.extensions::ExtensionThrottleEntry"*, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to i64 (%"class.extensions::ExtensionThrottleEntry"*)***
  %10 = load i64 (%"class.extensions::ExtensionThrottleEntry"*)**, i64 (%"class.extensions::ExtensionThrottleEntry"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.extensions::ExtensionThrottleEntry"*)*, i64 (%"class.extensions::ExtensionThrottleEntry"*)** %10, i64 2
  %12 = load i64 (%"class.extensions::ExtensionThrottleEntry"*)*, i64 (%"class.extensions::ExtensionThrottleEntry"*)** %11, align 8
  %13 = tail call i64 %12(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %13, %15
  %17 = bitcast i64* %5 to %"class.base::TimeTicks"*
  %18 = select i1 %16, %"class.base::TimeTicks"* %1, %"class.base::TimeTicks"* %17
  %19 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)***
  %21 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %21, i64 4
  %23 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %22, align 8
  %24 = tail call %"class.net::BackoffEntry"* %23(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  %25 = tail call i64 @_ZNK3net12BackoffEntry14GetReleaseTimeEv(%"class.net::BackoffEntry"* %24) #11
  store i64 %25, i64* %6, align 8
  %26 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %26, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %25, %28
  %30 = bitcast i64* %6 to %"class.base::TimeTicks"*
  %31 = select i1 %29, %"class.base::TimeTicks"* %26, %"class.base::TimeTicks"* %30
  %32 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %31, i64 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %18, i64 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %35, %33
  %37 = select i1 %36, %"class.base::TimeTicks"* %31, %"class.base::TimeTicks"* %18
  %38 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %37, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %40 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %40, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %41, i64 1) #11
  %42 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %40, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %44) #11
  %46 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %45, i64 0, i32 0, i32 0
  store i64 %39, i64* %46, align 8
  %47 = load i64, i64* %43, align 8
  %48 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = icmp eq i64 %47, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %2
  store i64 0, i64* %43, align 8
  br label %56

53:                                               ; preds = %2
  %54 = add i64 %47, 1
  store i64 %54, i64* %43, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53, %52
  br label %57

57:                                               ; preds = %53, %56
  %58 = phi i64 [ %50, %56 ], [ %47, %53 ]
  %59 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %58) #11
  store i64 %39, i64* %27, align 8
  %60 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0, i32 1
  %61 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 4, i32 0
  %62 = bitcast %"class.logging::CheckError"* %3 to i8*
  %63 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 5
  br label %65

65:                                               ; preds = %106, %57
  %66 = load i64, i64* %60, align 8
  %67 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %66) #11
  %68 = load i64, i64* %61, align 8
  %69 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %67, i64 0, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %68, -9223372036854775807
  %72 = icmp ult i64 %71, 2
  br i1 %72, label %80, label %73

73:                                               ; preds = %65
  %74 = icmp slt i64 %68, 0
  %75 = select i1 %74, i64 -9223372036854775808, i64 9223372036854775807
  %76 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %70, i64 %68) #11
  %77 = extractvalue { i64, i1 } %76, 1
  %78 = extractvalue { i64, i1 } %76, 0
  %79 = select i1 %77, i64 %75, i64 %78, !prof !2
  br label %87

80:                                               ; preds = %65
  %81 = add i64 %70, -9223372036854775807
  %82 = icmp ugt i64 %81, 1
  %83 = icmp eq i64 %70, %68
  %84 = or i1 %83, %82
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #11
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  br label %87

87:                                               ; preds = %73, %80, %85
  %88 = phi i64 [ %79, %73 ], [ %68, %80 ], [ %68, %85 ]
  %89 = load i64, i64* %63, align 8
  %90 = icmp sgt i64 %88, %89
  %91 = load i64, i64* %60, align 8
  br i1 %90, label %92, label %106

92:                                               ; preds = %87
  %93 = load i64, i64* %43, align 8
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = sub i64 %93, %91
  br label %101

97:                                               ; preds = %92
  %98 = load i64, i64* %48, align 8
  %99 = sub i64 %93, %91
  %100 = add i64 %99, %98
  br label %101

101:                                              ; preds = %95, %97
  %102 = phi i64 [ %96, %95 ], [ %100, %97 ]
  %103 = load i32, i32* %64, align 8
  %104 = zext i32 %103 to i64
  %105 = icmp ugt i64 %102, %104
  br i1 %105, label %106, label %116

106:                                              ; preds = %87, %101
  %107 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %91) #11
  %108 = load i64, i64* %60, align 8
  %109 = add i64 %108, 1
  %110 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %109) #11
  %111 = load i64, i64* %60, align 8
  %112 = add i64 %111, 1
  %113 = load i64, i64* %48, align 8
  %114 = icmp eq i64 %112, %113
  %115 = select i1 %114, i64 0, i64 %112
  store i64 %115, i64* %60, align 8
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %41) #11
  br label %65

116:                                              ; preds = %101
  %117 = zext i32 %103 to i64
  br i1 %94, label %120, label %118

118:                                              ; preds = %116
  %119 = sub i64 %93, %91
  br label %124

120:                                              ; preds = %116
  %121 = load i64, i64* %48, align 8
  %122 = sub i64 %93, %91
  %123 = add i64 %122, %121
  br label %124

124:                                              ; preds = %118, %120
  %125 = phi i64 [ %119, %118 ], [ %123, %120 ]
  %126 = icmp eq i64 %125, %117
  br i1 %126, label %127, label %151

127:                                              ; preds = %124
  %128 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %91) #11
  %129 = load i64, i64* %61, align 8
  %130 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %128, i64 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %129, -9223372036854775807
  %133 = icmp ult i64 %132, 2
  br i1 %133, label %141, label %134

134:                                              ; preds = %127
  %135 = icmp slt i64 %129, 0
  %136 = select i1 %135, i64 -9223372036854775808, i64 9223372036854775807
  %137 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %131, i64 %129) #11
  %138 = extractvalue { i64, i1 } %137, 1
  %139 = extractvalue { i64, i1 } %137, 0
  %140 = select i1 %138, i64 %136, i64 %139, !prof !2
  br label %149

141:                                              ; preds = %127
  %142 = add i64 %131, -9223372036854775807
  %143 = icmp ugt i64 %142, 1
  %144 = icmp eq i64 %131, %129
  %145 = or i1 %144, %143
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #11
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  br label %149

149:                                              ; preds = %134, %141, %146
  %150 = phi i64 [ %140, %134 ], [ %129, %141 ], [ %129, %146 ]
  store i64 %150, i64* %63, align 8
  br label %151

151:                                              ; preds = %149, %124
  %152 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #11
  %153 = sub nsw i64 %39, %13
  %154 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %153, i64* %154, align 8
  %155 = call i64 @_ZNK4base9TimeDelta23InMillisecondsRoundedUpEv(%"class.base::TimeDelta"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  ret i64 %155
}

declare i64 @_ZNK3net12BackoffEntry14GetReleaseTimeEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta23InMillisecondsRoundedUpEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10extensions22ExtensionThrottleEntry32GetExponentialBackoffReleaseTimeEv(%"class.extensions::ExtensionThrottleEntry"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to i64 (%"class.extensions::ExtensionThrottleEntry"*)***
  %7 = load i64 (%"class.extensions::ExtensionThrottleEntry"*)**, i64 (%"class.extensions::ExtensionThrottleEntry"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.extensions::ExtensionThrottleEntry"*)*, i64 (%"class.extensions::ExtensionThrottleEntry"*)** %7, i64 2
  %9 = load i64 (%"class.extensions::ExtensionThrottleEntry"*)*, i64 (%"class.extensions::ExtensionThrottleEntry"*)** %8, align 8
  %10 = tail call i64 %9(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  br label %18

11:                                               ; preds = %1
  %12 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)***
  %13 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %13, i64 3
  %15 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %14, align 8
  %16 = tail call %"class.net::BackoffEntry"* %15(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  %17 = tail call i64 @_ZNK3net12BackoffEntry14GetReleaseTimeEv(%"class.net::BackoffEntry"* %16) #11
  br label %18

18:                                               ; preds = %11, %5
  %19 = phi i64 [ %10, %5 ], [ %17, %11 ]
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntry18UpdateWithResponseEi(%"class.extensions::ExtensionThrottleEntry"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)***
  %4 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %4, i64 4
  %6 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %5, align 8
  %7 = tail call %"class.net::BackoffEntry"* %6(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  %8 = add i32 %1, -500
  %9 = icmp ugt i32 %8, 9
  %10 = trunc i32 %8 to i10
  %11 = lshr i10 502, %10
  %12 = and i10 %11, 1
  %13 = icmp ne i10 %12, 0
  %14 = or i1 %13, %9
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %7, i1 zeroext %14) #11
  ret void
}

declare void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10extensions22ExtensionThrottleEntry19IsConsideredSuccessEi(%"class.extensions::ExtensionThrottleEntry"* nocapture readnone, i32) local_unnamed_addr #4 align 2 {
  %3 = add i32 %1, -500
  %4 = icmp ult i32 %3, 10
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = trunc i32 %3 to i10
  %7 = lshr i10 502, %6
  %8 = and i10 %7, 1
  %9 = icmp ne i10 %8, 0
  ret i1 %9

10:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntry27ReceivedContentWasMalformedEi(%"class.extensions::ExtensionThrottleEntry"*, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %3 [
    i32 503, label %13
    i32 500, label %13
    i32 509, label %13
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)***
  %5 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %5, i64 4
  %7 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %6, align 8
  %8 = tail call %"class.net::BackoffEntry"* %7(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %8, i1 zeroext false) #11
  %9 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)**, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*** %4, align 8
  %10 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %9, i64 4
  %11 = load %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)*, %"class.net::BackoffEntry"* (%"class.extensions::ExtensionThrottleEntry"*)** %10, align 8
  %12 = tail call %"class.net::BackoffEntry"* %11(%"class.extensions::ExtensionThrottleEntry"* %0) #11
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %12, i1 zeroext false) #11
  br label %13

13:                                               ; preds = %2, %2, %2, %3
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions22ExtensionThrottleEntry20GetURLIdForDebuggingEv(%"class.extensions::ExtensionThrottleEntry"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 8
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntryD2Ev(%"class.extensions::ExtensionThrottleEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions22ExtensionThrottleEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 7
  tail call void @_ZN3net12BackoffEntryD1Ev(%"class.net::BackoffEntry"* %12) #11
  %13 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"* %13) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12BackoffEntryD1Ev(%"class.net::BackoffEntry"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionThrottleEntryD0Ev(%"class.extensions::ExtensionThrottleEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions22ExtensionThrottleEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 7
  tail call void @_ZN3net12BackoffEntryD1Ev(%"class.net::BackoffEntry"* %12) #11
  %13 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"* %13) #11
  %14 = bitcast %"class.extensions::ExtensionThrottleEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10extensions22ExtensionThrottleEntry14ImplGetTimeNowEv(%"class.extensions::ExtensionThrottleEntry"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  ret i64 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.net::BackoffEntry"* @_ZNK10extensions22ExtensionThrottleEntry15GetBackoffEntryEv(%"class.extensions::ExtensionThrottleEntry"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 7
  ret %"class.net::BackoffEntry"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.net::BackoffEntry"* @_ZN10extensions22ExtensionThrottleEntry15GetBackoffEntryEv(%"class.extensions::ExtensionThrottleEntry"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionThrottleEntry", %"class.extensions::ExtensionThrottleEntry"* %0, i64 0, i32 7
  ret %"class.net::BackoffEntry"* %2
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #11
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #11
  %15 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #11
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #11
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %11, %"class.base::TimeTicks"* %12, %"class.base::TimeTicks"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %19, %"class.base::TimeTicks"* %20, %"class.base::TimeTicks"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %24, %"class.base::TimeTicks"* %25, %"class.base::TimeTicks"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.base::TimeTicks"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.base::TimeTicks"* %0 to i64
  %6 = icmp ult %"class.base::TimeTicks"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"class.base::TimeTicks"* %2 to i64
  %9 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %7
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #11
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14) #11
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #11
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #11
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #11
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %41
  call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"class.base::TimeTicks"* %0 to i8*
  %50 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #11
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #11
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #11
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #11
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #11
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
