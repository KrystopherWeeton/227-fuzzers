; ModuleID = '../../third_party/blink/renderer/core/css/offscreen_font_selector.cc'
source_filename = "../../third_party/blink/renderer/core/css/offscreen_font_selector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.309", i32, [4 x i8], %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.447", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.489", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.381", %"class.std::__1::unique_ptr.381", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.427", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__cxx_atomic_impl.348" }
%"struct.std::__1::__cxx_atomic_impl.348" = type { %"struct.std::__1::__cxx_atomic_base_impl.349" }
%"struct.std::__1::__cxx_atomic_base_impl.349" = type { i64 }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::Worklist.356"* }
%"class.blink::Worklist.356" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::Worklist.363"* }
%"class.blink::Worklist.363" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::Worklist.370"* }
%"class.blink::Worklist.370" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::Worklist.377"* }
%"class.blink::Worklist.377" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::Worklist.384"* }
%"class.blink::Worklist.384" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::Worklist.391"* }
%"class.blink::Worklist.391" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::Worklist.398"* }
%"class.blink::Worklist.398" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.345" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.420", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { float }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.430", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.439" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"struct.std::__1::pair.457"*, i32, i32 }
%"struct.std::__1::pair.457" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.470" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.356"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.363"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.370"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.377"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.384"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1251", i64 }
%"class.std::__1::vector.1251" = type { %"class.std::__1::__vector_base.1252" }
%"class.std::__1::__vector_base.1252" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1253" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.489" = type { %"struct.std::__1::__atomic_base.490" }
%"struct.std::__1::__atomic_base.490" = type { %"struct.std::__1::__cxx_atomic_impl.491" }
%"struct.std::__1::__cxx_atomic_impl.491" = type { %"struct.std::__1::__cxx_atomic_base_impl.492" }
%"struct.std::__1::__cxx_atomic_base_impl.492" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::OffscreenFontSelector" = type { %"class.blink::FontSelector", %"class.blink::GenericFontFamilySettings", %"class.blink::Member.1", %"class.blink::Member.33" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.std::__1::unique_ptr" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"struct.std::__1::pair.1425"*, i32, i32 }
%"struct.std::__1::pair.1425" = type { i32, %"class.WTF::String" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.11", %"class.blink::HeapHashMap.18", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.7" }
%"class.WTF::HashMap.7" = type { %"class.WTF::HashTable.8" }
%"class.WTF::HashTable.8" = type <{ %"struct.WTF::KeyValuePair.10"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.10" = type opaque
%"class.blink::HeapHashMap.11" = type { %"class.WTF::HashMap.14" }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.blink::HeapHashMap.18" = type { %"class.WTF::HashMap.21" }
%"class.WTF::HashMap.21" = type { %"class.WTF::HashTable.22" }
%"class.WTF::HashTable.22" = type <{ %"struct.WTF::KeyValuePair.24"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.24" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.27", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.27" = type { %"class.WTF::HashTable.28" }
%"class.WTF::HashTable.28" = type <{ %"struct.WTF::KeyValuePair.30"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.30" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.31", i32, i32 }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.520", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.539", %"class.blink::Member.545", %"class.blink::Member.547", %"class.blink::Member.558", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.560", i32, %"class.blink::Member.567", %"class.std::__1::unique_ptr.569", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.695", %"class.absl::optional.704", i32, %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.493", %"class.blink::Member.499", %"class.blink::HeapHashSet.501", %class.scoped_refptr.508, %"class.blink::Member.510", %"class.blink::Member.512", i32, %"class.WTF::Vector.146", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.516" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.50" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43", [32 x i8] }
%"class.WTF::VectorBufferBase.43" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.45" }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::HeapVector.47"* }
%"class.blink::HeapVector.47" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.WTF::Vector.53"* }
%"class.WTF::Vector.53" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.118", i32, i8, [3 x i8], %"class.blink::HeapVector.120", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.129", %"class.blink::Member.131", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.140", %"class.blink::Member.281", %"class.blink::Member.283", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.57" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.57" = type { %"class.WTF::HashMap.60" }
%"class.WTF::HashMap.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.68" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.68" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.69" }
%"class.blink::HeapHashMap.69" = type { %"class.WTF::HashMap.72" }
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.75"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.75" = type { i8*, %"class.blink::Member.1391" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1393" }
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.76, %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %"class.blink::Member.112", i32, [4 x i8], %"class.WTF::HashSet.114", i32, i32 }
%class.scoped_refptr.76 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.77 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.77 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.93", %"class.std::__1::map.102"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.83 }
%union.anon.83 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.102" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.118", i32, i8, [3 x i8], %"class.blink::HeapVector.120", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.129", %"class.blink::Member.131", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.140", %"class.blink::Member.281", %"class.blink::Member.283", i8, [7 x i8] }>
%"class.WTF::HashSet.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.120" = type { %"class.WTF::Vector.123" }
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"class.blink::Member.126"*, i32, i32 }
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.133", i32, i32 }
%"class.blink::HeapHashMap.133" = type { %"class.WTF::HashMap.136" }
%"class.WTF::HashMap.136" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"struct.WTF::KeyValuePair.139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.139" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.146" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.272" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.190", i32 }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.199", %"class.absl::optional.204", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.225", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.247", %"class.std::__1::map.258", i64, %"class.base::OnceCallback.218", %"class.base::OnceCallback.267", i8, %class.scoped_refptr.209, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.268" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.194" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.199" = type { %"class.absl::optional_internal::optional_data.200" }
%"class.absl::optional_internal::optional_data.200" = type { %"class.absl::optional_internal::optional_data_base.201" }
%"class.absl::optional_internal::optional_data_base.201" = type { %"class.absl::optional_internal::optional_data_dtor_base.202" }
%"class.absl::optional_internal::optional_data_dtor_base.202" = type { i8, %union.anon.203 }
%union.anon.203 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.204" = type { %"class.absl::optional_internal::optional_data.205" }
%"class.absl::optional_internal::optional_data.205" = type { %"class.absl::optional_internal::optional_data_base.206" }
%"class.absl::optional_internal::optional_data_base.206" = type { %"class.absl::optional_internal::optional_data_dtor_base.207" }
%"class.absl::optional_internal::optional_data_dtor_base.207" = type { i8, %union.anon.208 }
%union.anon.208 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.218" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.209, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.212", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.212" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.213" }
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1258", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.209, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1258" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.228", %class.scoped_refptr.229 }
%"class.base::RepeatingCallback.228" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.229 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.230", [4 x i8] }>
%"class.base::RefCountedThreadSafe.230" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.246" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.247" = type { %"class.std::__1::__tree.248" }
%"class.std::__1::__tree.248" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.258" = type { %"class.std::__1::__tree.259" }
%"class.std::__1::__tree.259" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallback.218" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.267" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.209 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.210" }>
%"class.base::RefCountedThreadSafe.210" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.218" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.268" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.131", i8, [7 x i8], %"class.WTF::Vector.146", %"class.blink::HeapVector.287", i8, [7 x i8], %"class.WTF::HashSet.114", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.287" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::Member.293"*, i32, i32 }
%"class.blink::Member.293" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.297" }
%"class.blink::Supplementable.297" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.298" }
%"class.blink::HeapHashMap.298" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { i8*, %"class.blink::Member.1409" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::Supplement.1411"* }
%"class.blink::Supplement.1411" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1412" }
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.305" }
%"struct.std::__1::atomic.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__cxx_atomic_impl.307" }
%"struct.std::__1::__cxx_atomic_impl.307" = type { %"struct.std::__1::__cxx_atomic_base_impl.308" }
%"struct.std::__1::__cxx_atomic_base_impl.308" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.954", %"class.blink::Member.956", %"class.blink::Member.960", %class.scoped_refptr.581, %class.scoped_refptr.581, %"class.blink::Member.962", %"class.blink::Member.964", %"class.blink::Member.970", %"class.blink::Member.974", %"class.blink::Member.1026", %"class.blink::HeapHashMap.1028", %"class.blink::HeapHashSet.1035", %"class.blink::HeapHashSet.1035", %"class.blink::HeapHashMap.1200", %"class.blink::HeapVector.1207", %"class.blink::Member.1215", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1217", %"class.WTF::Vector.1224", %"class.blink::HeapHashSet.1230", %"class.blink::HeapHashSet.1230", %"class.std::__1::unique_ptr.1236", %"class.base::WeakPtr.1019", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1248", i8, i8, %"class.base::WeakPtrFactory.1250" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.581 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.968" }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.978", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.980", %"class.WTF::HashSet.985", i8, [3 x i8], i32, %"class.blink::HeapHashMap.989", %"class.std::__1::map.996", %"class.std::__1::map.1007", %"class.std::__1::unique_ptr.1016", %"class.blink::Member.964", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1023", %"class.mojo::InlinedStructPtr.1025", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.980" = type { %"class.WTF::HashTable.981" }
%"class.WTF::HashTable.981" = type <{ %"struct.WTF::KeyValuePair.984"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.984" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.985" = type { %"class.WTF::HashTable.986" }
%"class.WTF::HashTable.986" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.989" = type { %"class.WTF::HashMap.992" }
%"class.WTF::HashMap.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type opaque
%"class.std::__1::map.996" = type { %"class.std::__1::__tree.997" }
%"class.std::__1::__tree.997" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.998", %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.1007" = type { %"class.std::__1::__tree.1008" }
%"class.std::__1::__tree.1008" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1019", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1025" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1028" = type { %"class.WTF::HashMap.1031" }
%"class.WTF::HashMap.1031" = type { %"class.WTF::HashTable.1032" }
%"class.WTF::HashTable.1032" = type <{ %"struct.WTF::KeyValuePair.1034"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1034" = type opaque
%"class.blink::HeapHashSet.1035" = type { %"class.WTF::HashSet.1038" }
%"class.WTF::HashSet.1038" = type { %"class.WTF::HashTable.1039" }
%"class.WTF::HashTable.1039" = type <{ %"class.blink::WeakMember.1041"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1045", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1065", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1148", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1175", %"class.blink::ResourceResponse", %class.scoped_refptr.1177, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1045" = type { %"class.absl::optional_internal::optional_data.1046" }
%"class.absl::optional_internal::optional_data.1046" = type { %"class.absl::optional_internal::optional_data_base.1047" }
%"class.absl::optional_internal::optional_data_base.1047" = type { %"class.absl::optional_internal::optional_data_dtor_base.1048" }
%"class.absl::optional_internal::optional_data_dtor_base.1048" = type { i8, %union.anon.1049 }
%union.anon.1049 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1050", i8, %"class.absl::optional.1055", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1050" = type { %"class.absl::optional_internal::optional_data.1051" }
%"class.absl::optional_internal::optional_data.1051" = type { %"class.absl::optional_internal::optional_data_base.1052" }
%"class.absl::optional_internal::optional_data_base.1052" = type { %"class.absl::optional_internal::optional_data_dtor_base.1053" }
%"class.absl::optional_internal::optional_data_dtor_base.1053" = type { i8, [7 x i8], %union.anon.1054 }
%union.anon.1054 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1055" = type { %"class.absl::optional_internal::optional_data.1056" }
%"class.absl::optional_internal::optional_data.1056" = type { %"class.absl::optional_internal::optional_data_base.1057" }
%"class.absl::optional_internal::optional_data_base.1057" = type { %"class.absl::optional_internal::optional_data_dtor_base.1058" }
%"class.absl::optional_internal::optional_data_dtor_base.1058" = type { i8, %union.anon.1059 }
%union.anon.1059 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1060", %"class.WTF::Vector.170" }
%"class.WTF::Vector.1060" = type { %"class.WTF::VectorBuffer.1061" }
%"class.WTF::VectorBuffer.1061" = type { %"class.WTF::VectorBufferBase.1062" }
%"class.WTF::VectorBufferBase.1062" = type { i32*, i32, i32 }
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1065" = type { %"class.WTF::VectorBuffer.1066" }
%"class.WTF::VectorBuffer.1066" = type { %"class.WTF::VectorBufferBase.1067" }
%"class.WTF::VectorBufferBase.1067" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1144" }
%"class.WTF::HashMap.1144" = type { %"class.WTF::HashTable.1145" }
%"class.WTF::HashTable.1145" = type <{ %"struct.WTF::KeyValuePair.1147"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1147" = type <{ %"class.blink::WeakMember.1414", i32, [4 x i8] }>
%"class.blink::WeakMember.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1416", [7 x i8], %"class.blink::Member.1213", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1416" = type { i8 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1042" }
%"class.blink::HeapHashSet.1148" = type { %"class.WTF::HashSet.1151" }
%"class.WTF::HashSet.1151" = type { %"class.WTF::HashTable.1152" }
%"class.WTF::HashTable.1152" = type <{ %"class.blink::WeakMember.1154"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1154" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.699", i8, i8, %class.scoped_refptr.1155, %class.scoped_refptr.1170, %class.scoped_refptr.1172 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.std::__1::pair.703"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.703" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1155 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1156", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1156" = type { %"class.base::RefCounted.1157" }
%"class.base::RefCounted.1157" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1158" }
%"class.blink::PersistentBase.1158" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1161" }
%"class.blink::HeapHashMap.1161" = type { %"class.WTF::HashMap.1164" }
%"class.WTF::HashMap.1164" = type { %"class.WTF::HashTable.1165" }
%"class.WTF::HashTable.1165" = type <{ %"struct.WTF::KeyValuePair.1167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1167" = type { %"class.blink::WeakMember.1168", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.1170 = type { %"class.base::RefCountedData.1171"* }
%"class.base::RefCountedData.1171" = type opaque
%class.scoped_refptr.1172 = type { %"class.base::RefCountedData.1173"* }
%"class.base::RefCountedData.1173" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.723" }
%"class.base::time_internal::TimeBase.723" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.77, %class.scoped_refptr.77, %class.scoped_refptr.77, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1073, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1085", %"class.absl::optional.1090", %"class.absl::optional.1100", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.919", %"class.absl::optional.1100", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1100", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.919", %"class.absl::optional.1105", i8, %class.scoped_refptr.1111 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1068" }
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1072"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1072" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1073 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1074", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1083, i8, %"class.url::Origin" }
%"class.base::RefCounted.1074" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1075" }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"class.std::__1::unique_ptr.1077"*, %"class.std::__1::unique_ptr.1077"*, %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1395" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.std::__1::unique_ptr.1077"* }
%class.scoped_refptr.1083 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1084", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1084" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1085" = type { %"class.absl::optional_internal::optional_data.1086" }
%"class.absl::optional_internal::optional_data.1086" = type { %"class.absl::optional_internal::optional_data_base.1087" }
%"class.absl::optional_internal::optional_data_base.1087" = type { %"class.absl::optional_internal::optional_data_dtor_base.1088" }
%"class.absl::optional_internal::optional_data_dtor_base.1088" = type { i8, %union.anon.1089 }
%union.anon.1089 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1090" = type { %"class.absl::optional_internal::optional_data.1091" }
%"class.absl::optional_internal::optional_data.1091" = type { %"class.absl::optional_internal::optional_data_base.1092" }
%"class.absl::optional_internal::optional_data_base.1092" = type { %"class.absl::optional_internal::optional_data_dtor_base.1093" }
%"class.absl::optional_internal::optional_data_dtor_base.1093" = type { i8, %union.anon.1094 }
%union.anon.1094 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1095", %"class.WTF::Vector.170", %"class.WTF::String" }
%"class.WTF::Vector.1095" = type { %"class.WTF::VectorBuffer.1096" }
%"class.WTF::VectorBuffer.1096" = type { %"class.WTF::VectorBufferBase.1097" }
%"class.WTF::VectorBufferBase.1097" = type { %class.scoped_refptr.77*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.199", %"class.absl::optional.199" }
%"class.absl::optional.1100" = type { %"class.absl::optional_internal::optional_data.1101" }
%"class.absl::optional_internal::optional_data.1101" = type { %"class.absl::optional_internal::optional_data_base.1102" }
%"class.absl::optional_internal::optional_data_base.1102" = type { %"class.absl::optional_internal::optional_data_dtor_base.1103" }
%"class.absl::optional_internal::optional_data_dtor_base.1103" = type { i8, %union.anon.1104 }
%union.anon.1104 = type { %"class.WTF::String" }
%"class.absl::optional.919" = type { %"class.absl::optional_internal::optional_data.920" }
%"class.absl::optional_internal::optional_data.920" = type { %"class.absl::optional_internal::optional_data_base.921" }
%"class.absl::optional_internal::optional_data_base.921" = type { %"class.absl::optional_internal::optional_data_dtor_base.922" }
%"class.absl::optional_internal::optional_data_dtor_base.922" = type { i8, %union.anon.923 }
%union.anon.923 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1105" = type { %"class.absl::optional_internal::optional_data.1106" }
%"class.absl::optional_internal::optional_data.1106" = type { %"class.absl::optional_internal::optional_data_base.1107" }
%"class.absl::optional_internal::optional_data_base.1107" = type { %"class.absl::optional_internal::optional_data_dtor_base.1108" }
%"class.absl::optional_internal::optional_data_dtor_base.1108" = type { i8, %union.anon.1109 }
%union.anon.1109 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1110" }
%"class.mojo::PendingRemote.1110" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1111 = type { %"class.base::RefCountedData.1112"* }
%"class.base::RefCountedData.1112" = type { %"class.base::RefCountedThreadSafe.1400", %"class.base::internal::flat_tree.1401" }
%"class.base::RefCountedThreadSafe.1400" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1401" = type { %"class.std::__1::vector.1402" }
%"class.std::__1::vector.1402" = type { %"class.std::__1::__vector_base.1403" }
%"class.std::__1::__vector_base.1403" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1404" }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { i32* }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1113", %class.scoped_refptr.1128, %class.scoped_refptr.1129, %"struct.blink::CacheControlHeader", %"class.absl::optional.199", %"class.absl::optional.1130", %"class.absl::optional.1130", %"class.absl::optional.1130", i64, %"class.blink::KURL", %"class.WTF::Vector.1135", %"class.WTF::String", %"class.WTF::Vector.170", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.919", %"class.WTF::Vector.170", %"class.blink::KURL", %"class.absl::optional.803" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1113" = type { %"class.absl::optional_internal::optional_data.1114" }
%"class.absl::optional_internal::optional_data.1114" = type { %"class.absl::optional_internal::optional_data_base.1115" }
%"class.absl::optional_internal::optional_data_base.1115" = type { %"class.absl::optional_internal::optional_data_dtor_base.1116" }
%"class.absl::optional_internal::optional_data_dtor_base.1116" = type { i8, %union.anon.1117 }
%union.anon.1117 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.170", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1118", %"class.WTF::Vector.1123" }
%"class.WTF::Vector.1118" = type { %"class.WTF::VectorBuffer.1119" }
%"class.WTF::VectorBuffer.1119" = type { %"class.WTF::VectorBufferBase.1120" }
%"class.WTF::VectorBufferBase.1120" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1123" = type { %"class.WTF::VectorBuffer.1124" }
%"class.WTF::VectorBuffer.1124" = type { %"class.WTF::VectorBufferBase.1125" }
%"class.WTF::VectorBufferBase.1125" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1128 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1129 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1130" = type { %"class.absl::optional_internal::optional_data.1131" }
%"class.absl::optional_internal::optional_data.1131" = type { %"class.absl::optional_internal::optional_data_base.1132" }
%"class.absl::optional_internal::optional_data_base.1132" = type { %"class.absl::optional_internal::optional_data_dtor_base.1133" }
%"class.absl::optional_internal::optional_data_dtor_base.1133" = type { i8, %union.anon.1134 }
%union.anon.1134 = type { %"class.base::Time" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.803" = type { %"class.absl::optional_internal::optional_data.804" }
%"class.absl::optional_internal::optional_data.804" = type { %"class.absl::optional_internal::optional_data_base.805" }
%"class.absl::optional_internal::optional_data_base.805" = type { %"class.absl::optional_internal::optional_data_dtor_base.806" }
%"class.absl::optional_internal::optional_data_dtor_base.806" = type { i8, %union.anon.807 }
%union.anon.807 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1177 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1178", i64, %"class.WTF::Vector.1180", %"class.WTF::Vector.1185" }
%"class.WTF::RefCounted.1178" = type { %"class.base::RefCounted.1179" }
%"class.base::RefCounted.1179" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1180" = type { %"class.WTF::VectorBuffer.1181" }
%"class.WTF::VectorBuffer.1181" = type { %"class.WTF::VectorBufferBase.1182" }
%"class.WTF::VectorBufferBase.1182" = type { i8*, i32, i32 }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.std::__1::unique_ptr.1188"*, i32, i32 }
%"class.std::__1::unique_ptr.1188" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1191" }
%"class.std::__1::__tree.1191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1192", %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.blink::HeapHashMap.1200" = type { %"class.WTF::HashMap.1203" }
%"class.WTF::HashMap.1203" = type { %"class.WTF::HashTable.1204" }
%"class.WTF::HashTable.1204" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type opaque
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.507", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.581, %"class.base::WeakPtrFactory.582" }
%"class.base::WeakPtrFactory.582" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.507" = type { %"class.blink::MemberBase.500" }
%"class.blink::HeapHashMap.1217" = type { %"class.WTF::HashMap.1220" }
%"class.WTF::HashMap.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"struct.WTF::KeyValuePair.1223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1223" = type opaque
%"class.WTF::Vector.1224" = type { %"class.WTF::VectorBuffer.1225" }
%"class.WTF::VectorBuffer.1225" = type { %"class.WTF::VectorBufferBase.1226" }
%"class.WTF::VectorBufferBase.1226" = type { %class.scoped_refptr.1227*, i32, i32 }
%class.scoped_refptr.1227 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1230" = type { %"class.WTF::HashSet.1233" }
%"class.WTF::HashSet.1233" = type { %"class.WTF::HashTable.1234" }
%"class.WTF::HashTable.1234" = type <{ %"class.blink::Member.1175"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.WTF::HashSet.1239"* }
%"class.WTF::HashSet.1239" = type { %"class.WTF::HashTable.1240" }
%"class.WTF::HashTable.1240" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.1019" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.642 }
%class.scoped_refptr.642 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1174 }
%class.scoped_refptr.1174 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1246" }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1250" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::WeakMember.507"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.508 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.509", [4 x i8] }>
%"class.base::RefCounted.509" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.146" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"class.mojo::StructPtr.149"*, i32, i32 }
%"class.mojo::StructPtr.149" = type { %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.153", %"class.WTF::HashMap.160", %"class.WTF::HashMap.165", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.170", i32, %"class.mojo::StructPtr.175", %"class.WTF::Vector.170" }
%"class.mojo::StructPtr.153" = type { %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.160" = type { %"class.WTF::HashTable.161" }
%"class.WTF::HashTable.161" = type <{ %"struct.WTF::KeyValuePair.164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.164" = type opaque
%"class.WTF::HashMap.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"struct.WTF::KeyValuePair.169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.169" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.175" = type { %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.170", i8, i8, [6 x i8] }>
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.514", i32, [4 x i8] }>
%"class.std::__1::bitset.514" = type { %"class.std::__1::__bitset.515" }
%"class.std::__1::__bitset.515" = type { [25 x i64] }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.520" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.521" }
%"class.blink::HeapHashMap.521" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.528" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::KURL"* }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.534" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.550" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.549", %"class.WTF::Vector.170", i8 }>
%"class.blink::WeakMember.549" = type { %"class.blink::MemberBase.113" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.549" }
%"class.blink::Supplementable.550" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.551" }
%"class.blink::HeapHashMap.551" = type { %"class.WTF::HashMap.554" }
%"class.WTF::HashMap.554" = type { %"class.WTF::HashTable.555" }
%"class.WTF::HashTable.555" = type <{ %"struct.WTF::KeyValuePair.557"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.557" = type { i8*, %"class.blink::Member.1418" }
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::Supplement.1420"* }
%"class.blink::Supplement.1420" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1421" }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.560" = type { %"class.WTF::HashMap.563" }
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.566" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::OffscreenFontSelector"* }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", i32, [4 x i8], %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type opaque
%"class.ukm::UkmRecorder" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.684" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.678" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.586, %"class.std::__1::unique_ptr.190", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.209, i32 }>
%class.scoped_refptr.586 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.209, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.644", %"class.absl::optional.649", %"class.absl::optional.603", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.669", i8, [7 x i8], %class.scoped_refptr.209, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.230" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.218", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.209, %"class.std::__1::unique_ptr.587", %"class.absl::optional.597", %"struct.std::__1::atomic.489", i8, i8, i8, i8, i32, i32, %"class.absl::optional.603", %"class.std::__1::unique_ptr.608", i8, i64, %class.scoped_refptr.641, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.643" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.209, i8, %"class.mojo::ScopedHandleBase.590", %class.scoped_refptr.591, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.592", i8*, %"class.base::WeakPtrFactory.593" }
%"class.mojo::ScopedHandleBase.590" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.591 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.592" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.593" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.597" = type { %"class.absl::optional_internal::optional_data.598" }
%"class.absl::optional_internal::optional_data.598" = type { %"class.absl::optional_internal::optional_data_base.599" }
%"class.absl::optional_internal::optional_data_base.599" = type { %"class.absl::optional_internal::optional_data_dtor_base.600" }
%"class.absl::optional_internal::optional_data_dtor_base.600" = type { i8, %union.anon.601 }
%union.anon.601 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.602", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.602" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.611", i8, i64, %class.scoped_refptr.612, %class.scoped_refptr.637 }
%"class.base::RepeatingCallback.611" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.612 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.613", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.615", %"class.std::__1::map.626", i8, [7 x i8] }>
%"class.base::RefCounted.613" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.614 }
%class.scoped_refptr.614 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.615" = type { %"class.std::__1::__tree.616" }
%"class.std::__1::__tree.616" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%class.scoped_refptr.637 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.641 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.643" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.644" = type { %"class.absl::optional_internal::optional_data.645" }
%"class.absl::optional_internal::optional_data.645" = type { %"class.absl::optional_internal::optional_data_base.646" }
%"class.absl::optional_internal::optional_data_base.646" = type { %"class.absl::optional_internal::optional_data_dtor_base.647" }
%"class.absl::optional_internal::optional_data_dtor_base.647" = type { i8, %union.anon.648 }
%union.anon.648 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.649" = type { %"class.absl::optional_internal::optional_data.650" }
%"class.absl::optional_internal::optional_data.650" = type { %"class.absl::optional_internal::optional_data_base.651" }
%"class.absl::optional_internal::optional_data_base.651" = type { %"class.absl::optional_internal::optional_data_dtor_base.652" }
%"class.absl::optional_internal::optional_data_dtor_base.652" = type { i8, [7 x i8], %union.anon.653 }
%union.anon.653 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.603" = type { %"class.absl::optional_internal::optional_data.604" }
%"class.absl::optional_internal::optional_data.604" = type { %"class.absl::optional_internal::optional_data_base.605" }
%"class.absl::optional_internal::optional_data_base.605" = type { %"class.absl::optional_internal::optional_data_dtor_base.606" }
%"class.absl::optional_internal::optional_data_dtor_base.606" = type { i8, %union.anon.607 }
%union.anon.607 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.654 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.654 = type { %"class.std::__1::map.657" }
%"class.std::__1::map.657" = type { %"class.std::__1::__tree.658" }
%"class.std::__1::__tree.658" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.659", %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.668"*, i64 }
%"class.std::__1::unique_ptr.668" = type opaque
%"class.std::__1::map.669" = type { %"class.std::__1::__tree.670" }
%"class.std::__1::__tree.670" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.671", %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.684" = type { %"class.std::__1::__tree.685" }
%"class.std::__1::__tree.685" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.686", %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.699", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.absl::optional.704" = type { %"class.absl::optional_internal::optional_data.705" }
%"class.absl::optional_internal::optional_data.705" = type { %"class.absl::optional_internal::optional_data_base.706" }
%"class.absl::optional_internal::optional_data_base.706" = type { %"class.absl::optional_internal::optional_data_dtor_base.707" }
%"class.absl::optional_internal::optional_data_dtor_base.707" = type { i8, [7 x i8], %union.anon.708 }
%union.anon.708 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.709", i8, [7 x i8] }>
%"struct.std::__1::pair.709" = type { i64, i64 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.ukm::UkmRecorder"* }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.719", %"class.mojo::ScopedHandleBase.927", %"class.mojo::StructPtr.928", %"class.std::__1::vector.935", %"class.std::__1::vector.942" }
%"class.mojo::StructPtr.719" = type { %"class.std::__1::unique_ptr.720" }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.724, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.739", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.755", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.761", %"class.std::__1::vector.768", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.803", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.808", %"class.absl::optional.908", %"class.absl::optional.919", %"class.std::__1::vector.768", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.724 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.725", %"class.std::__1::vector.726", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.725" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.726" = type { %"class.std::__1::__vector_base.727" }
%"class.std::__1::__vector_base.727" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.728" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.739" = type { %"class.std::__1::unique_ptr.740" }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.743", %"class.std::__1::vector.743", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.743" = type { %"class.std::__1::__vector_base.744" }
%"class.std::__1::__vector_base.744" = type { %"class.mojo::InlinedStructPtr.745"*, %"class.mojo::InlinedStructPtr.745"*, %"class.std::__1::__compressed_pair.747" }
%"class.mojo::InlinedStructPtr.745" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.mojo::InlinedStructPtr.745"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.755" = type { %"class.std::__1::__vector_base.756" }
%"class.std::__1::__vector_base.756" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %class.GURL* }
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, [7 x i8], %union.anon.765 }
%union.anon.765 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.766, %class.scoped_refptr.766, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.786", %"class.std::__1::basic_string", %"class.std::__1::vector.794", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.766 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.767", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.775", %"class.std::__1::vector.779" }
%"class.base::RefCountedThreadSafe.767" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.768", %"class.std::__1::vector.768", %"class.std::__1::vector.768", %"class.std::__1::vector.768" }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.std::__1::unique_ptr.775"*, %"class.std::__1::unique_ptr.775"*, %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.std::__1::unique_ptr.775"* }
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.789" }
%"class.net::HashValue" = type { i32, %union.anon.788 }
%union.anon.788 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.798" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.796, i32, [4 x i8] }>
%class.scoped_refptr.796 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.797", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.797" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.808" = type { %"class.std::__1::unique_ptr.809" }
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.812", %"class.mojo::StructPtr.860", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.872", %"class.base::TimeDelta", %"class.absl::optional.872", i32, [4 x i8], %"class.std::__1::vector.884", %"class.mojo::StructPtr.898", i8, [7 x i8] }>
%"class.std::__1::vector.812" = type { %"class.std::__1::__vector_base.813" }
%"class.std::__1::__vector_base.813" = type { %"class.mojo::StructPtr.814"*, %"class.mojo::StructPtr.814"*, %"class.std::__1::__compressed_pair.855" }
%"class.mojo::StructPtr.814" = type { %"class.std::__1::unique_ptr.815" }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.818", %"class.base::flat_map", %"class.base::flat_map.833", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.843", i8, %"class.std::__1::vector.768", i32, %"class.mojo::StructPtr.845", %"class.std::__1::vector.768" }
%"class.mojo::StructPtr.818" = type { %"class.std::__1::unique_ptr.819" }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.825" }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.std::__1::pair.827"*, %"struct.std::__1::pair.827"*, %"class.std::__1::__compressed_pair.828" }
%"struct.std::__1::pair.827" = type opaque
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::pair.827"* }
%"class.base::flat_map.833" = type { %"class.base::internal::flat_tree.834" }
%"class.base::internal::flat_tree.834" = type { %"class.std::__1::vector.835" }
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.std::__1::pair.837"*, %"struct.std::__1::pair.837"*, %"class.std::__1::__compressed_pair.838" }
%"struct.std::__1::pair.837" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::pair.837"* }
%"class.mojo::InlinedStructPtr.843" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.845" = type { %"class.std::__1::unique_ptr.846" }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.768", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.mojo::StructPtr.814"* }
%"class.mojo::StructPtr.860" = type { %"class.std::__1::unique_ptr.861" }
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.867", i32, %"class.absl::optional.867" }
%"class.absl::optional.867" = type { %"class.absl::optional_internal::optional_data.868" }
%"class.absl::optional_internal::optional_data.868" = type { %"class.absl::optional_internal::optional_data_base.869" }
%"class.absl::optional_internal::optional_data_base.869" = type { %"class.absl::optional_internal::optional_data_dtor_base.870" }
%"class.absl::optional_internal::optional_data_dtor_base.870" = type { i8, %union.anon.871 }
%union.anon.871 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.867", i32, %"class.absl::optional.867" }
%"class.absl::optional.872" = type { %"class.absl::optional_internal::optional_data.873" }
%"class.absl::optional_internal::optional_data.873" = type { %"class.absl::optional_internal::optional_data_base.874" }
%"class.absl::optional_internal::optional_data_base.874" = type { %"class.absl::optional_internal::optional_data_dtor_base.875" }
%"class.absl::optional_internal::optional_data_dtor_base.875" = type { i8, %union.anon.876 }
%union.anon.876 = type { %"class.std::__1::vector.877" }
%"class.std::__1::vector.877" = type { %"class.std::__1::__vector_base.878" }
%"class.std::__1::__vector_base.878" = type { i32*, i32*, %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { i32* }
%"class.std::__1::vector.884" = type { %"class.std::__1::__vector_base.885" }
%"class.std::__1::__vector_base.885" = type { %"class.mojo::StructPtr.886"*, %"class.mojo::StructPtr.886"*, %"class.std::__1::__compressed_pair.893" }
%"class.mojo::StructPtr.886" = type { %"class.std::__1::unique_ptr.887" }
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.867" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.mojo::StructPtr.886"* }
%"class.mojo::StructPtr.898" = type { %"class.std::__1::unique_ptr.899" }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.768"* }
%"class.absl::optional.908" = type { %"class.absl::optional_internal::optional_data.909" }
%"class.absl::optional_internal::optional_data.909" = type { %"class.absl::optional_internal::optional_data_base.910" }
%"class.absl::optional_internal::optional_data_base.910" = type { %"class.absl::optional_internal::optional_data_dtor_base.911" }
%"class.absl::optional_internal::optional_data_dtor_base.911" = type { i8, %union.anon.912 }
%union.anon.912 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.913" }
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.768", %"class.absl::optional.867", %"class.std::__1::vector.768", %"class.std::__1::vector.768" }
%"class.std::__1::vector.768" = type { %"class.std::__1::__vector_base.769" }
%"class.std::__1::__vector_base.769" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.733" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"class.mojo::ScopedHandleBase.927" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.928" = type { %"class.std::__1::unique_ptr.929" }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.935" = type { %"class.std::__1::__vector_base.936" }
%"class.std::__1::__vector_base.936" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.937" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.942" = type { %"class.std::__1::__vector_base.943" }
%"class.std::__1::__vector_base.943" = type { %"class.mojo::StructPtr.719"*, %"class.mojo::StructPtr.719"*, %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.mojo::StructPtr.719"* }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp, i16, i8, [5 x i8], %"class.blink::Persistent.1259", %"class.WTF::HashMap.1262", %"class.WTF::HashMap.1267", %"class.blink::FontDataCache", %"class.blink::Persistent.1290", float, [4 x i8] }>
%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.194" }>
%"class.blink::Persistent.1259" = type { %"class.blink::PersistentBase.1260" }
%"class.blink::PersistentBase.1260" = type { %"class.blink::HeapHashSet.1261"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet.1261" = type opaque
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type opaque
%"class.WTF::HashMap.1267" = type { %"class.WTF::HashTable.1268" }
%"class.WTF::HashTable.1268" = type <{ %"struct.WTF::KeyValuePair.1271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1271" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.1272", %"class.WTF::LinkedHashSet.1277" }
%"class.WTF::HashMap.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"struct.WTF::KeyValuePair.1276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1276" = type opaque
%"class.WTF::LinkedHashSet.1277" = type { %"class.WTF::HashMap.1278", %"class.WTF::VectorBackedLinkedList.1283" }
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1282" = type opaque
%"class.WTF::VectorBackedLinkedList.1283" = type { %"class.WTF::Vector.1284", i32, i32 }
%"class.WTF::Vector.1284" = type { %"class.WTF::VectorBuffer.1285" }
%"class.WTF::VectorBuffer.1285" = type { %"class.WTF::VectorBufferBase.1286" }
%"class.WTF::VectorBufferBase.1286" = type { %"class.WTF::VectorBackedLinkedListNode.1287"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1287" = type opaque
%"class.blink::Persistent.1290" = type { %"class.blink::PersistentBase.1291" }
%"class.blink::PersistentBase.1291" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1293", [4 x i8] }>
%"class.WTF::RefCounted.1293" = type { %"class.base::RefCounted.1294" }
%"class.base::RefCounted.1294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1296, %class.scoped_refptr.1304, %class.scoped_refptr.1314, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1320 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1295 }
%class.scoped_refptr.1295 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1321", [4 x i8] }>
%"class.WTF::RefCounted.1321" = type { %"class.base::RefCounted.1322" }
%"class.base::RefCounted.1322" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1296 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1302", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1297" }
%"class.WTF::Vector.1297" = type { %"class.WTF::VectorBuffer.1298" }
%"class.WTF::VectorBuffer.1298" = type { %"class.WTF::VectorBufferBase.1299" }
%"class.WTF::VectorBufferBase.1299" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1302" = type { %"class.base::RefCounted.1303" }
%"class.base::RefCounted.1303" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1304 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1305", %"class.WTF::RefCounted.1312", [4 x i8] }>
%"class.blink::FontSettings.1305" = type { %"class.WTF::Vector.1306" }
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { %"class.blink::FontTagValuePair.1309"*, i32, i32 }
%"class.blink::FontTagValuePair.1309" = type { i32, float }
%"class.WTF::RefCounted.1312" = type { %"class.base::RefCounted.1313" }
%"class.base::RefCounted.1313" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1314 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1315", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1317, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1315" = type { %"class.base::RefCounted.1316" }
%"class.base::RefCounted.1316" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1317 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1318", [4 x i8] }>
%"class.WTF::RefCounted.1318" = type { %"class.base::RefCounted.1319" }
%"class.base::RefCounted.1319" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1320 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member.1330", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.1325", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"struct.WTF::KeyValuePair.1329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1329" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1337", %"class.blink::Member.1339", %"class.blink::Member.1339", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1337" = type <{ %"class.blink::Member.1339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1343", %"class.blink::Member.1339", %"class.blink::Member.1339" }
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.1345", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", %"class.blink::Member.1346", i32, %"class.blink::Member.1350", %"class.blink::Member.1352", %"class.blink::Member.1354", %"class.blink::HeapVector.1356" }
%"class.blink::ActiveScriptWrappable.1345" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type opaque
%"class.blink::HeapVector.1356" = type { %"class.WTF::Vector.1359" }
%"class.WTF::Vector.1359" = type { %"class.WTF::VectorBuffer.1360" }
%"class.WTF::VectorBuffer.1360" = type { %"class.WTF::VectorBufferBase.1361" }
%"class.WTF::VectorBufferBase.1361" = type { %"class.blink::Member.1362"*, i32, i32 }
%"class.blink::Member.1362" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1372", %class.scoped_refptr.1378, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1293" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1365", %"class.absl::optional.1365", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1365" = type { %"class.absl::optional_internal::optional_data.1366" }
%"class.absl::optional_internal::optional_data.1366" = type { %"class.absl::optional_internal::optional_data_base.1367" }
%"class.absl::optional_internal::optional_data_base.1367" = type { %"class.absl::optional_internal::optional_data_dtor_base.1368" }
%"class.absl::optional_internal::optional_data_dtor_base.1368" = type { i8, %union.anon.1369 }
%union.anon.1369 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.1370, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1371, i8, [7 x i8] }>
%class.sk_sp.1370 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.194" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.213" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1371 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.1370, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1364, %class.scoped_refptr.1364 }
%class.scoped_refptr.1364 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1378 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1379", [4 x i8] }>
%"class.WTF::RefCounted.1379" = type { %"class.base::RefCounted.1380" }
%"class.base::RefCounted.1380" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.1381", %class.scoped_refptr.1364, %class.scoped_refptr.1383 }
%"class.WTF::RefCounted.1381" = type { %"class.base::RefCounted.1382" }
%"class.base::RefCounted.1382" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1383 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.1384", %"class.WTF::Vector.1386" }
%"class.WTF::RefCounted.1384" = type { %"class.base::RefCounted.1385" }
%"class.base::RefCounted.1385" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink25GenericFontFamilySettingsD2Ev = comdat any

$_ZNK5blink21OffscreenFontSelector7VersionEv = comdat any

$_ZNK5blink21OffscreenFontSelector19GetExecutionContextEv = comdat any

$_ZN5blink21OffscreenFontSelector16GetFontFaceCacheEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13FontFaceCacheEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13FontFaceCacheEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_13FontFaceCacheEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink21OffscreenFontSelectorE = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::OffscreenFontSelector"*)* @_ZN5blink21OffscreenFontSelectorD2Ev to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*)* @_ZN5blink21OffscreenFontSelectorD0Ev to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*)* @_ZN5blink21OffscreenFontSelector20FontCacheInvalidatedEv to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.blink::Visitor"*)* @_ZNK5blink21OffscreenFontSelector5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::FontData"* (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)* @_ZN5blink21OffscreenFontSelector11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.WTF::String"*)* @_ZN5blink21OffscreenFontSelector15WillUseFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS4_6StringE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*, %"class.blink::FontDataForRangeSet"*)* @_ZN5blink21OffscreenFontSelector12WillUseRangeERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS_19FontDataForRangeSetE to i8*), i8* bitcast (i32 (%"class.blink::OffscreenFontSelector"*)* @_ZNK5blink21OffscreenFontSelector7VersionEv to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink21OffscreenFontSelector31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink21OffscreenFontSelector27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink21OffscreenFontSelector30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.WTF::AtomicString"*)* @_ZN5blink21OffscreenFontSelector26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)* @_ZN5blink21OffscreenFontSelector36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.WTF::AtomicString"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)* @_ZN5blink21OffscreenFontSelector32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, i32, i32, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)* @_ZN5blink21OffscreenFontSelector35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*)* @_ZN5blink21OffscreenFontSelector34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*)* @_ZNK5blink21OffscreenFontSelector17ReportNotDefGlyphEv to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, i32, i32)* @_ZN5blink21OffscreenFontSelector31ReportEmojiSegmentGlyphCoverageEjj to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontSelectorClient"*)* @_ZN5blink21OffscreenFontSelector32RegisterForInvalidationCallbacksEPNS_18FontSelectorClientE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontSelectorClient"*)* @_ZN5blink21OffscreenFontSelector34UnregisterForInvalidationCallbacksEPNS_18FontSelectorClientE to i8*), i8* bitcast (void (%"class.blink::OffscreenFontSelector"*, i32)* @_ZN5blink21OffscreenFontSelector19FontFaceInvalidatedENS_22FontInvalidationReasonE to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::OffscreenFontSelector"*)* @_ZNK5blink21OffscreenFontSelector19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::FontFaceCache"* (%"class.blink::OffscreenFontSelector"*)* @_ZN5blink21OffscreenFontSelector16GetFontFaceCacheEv to i8*), i8* bitcast (i1 (%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"*, %"class.WTF::AtomicString"*)* @_ZN5blink21OffscreenFontSelector30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13FontFaceCacheEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13FontFaceCacheEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink21OffscreenFontSelectorC1EPNS_17WorkerGlobalScopeE = hidden unnamed_addr alias void (%"class.blink::OffscreenFontSelector"*, %"class.blink::WorkerGlobalScope"*), void (%"class.blink::OffscreenFontSelector"*, %"class.blink::WorkerGlobalScope"*)* @_ZN5blink21OffscreenFontSelectorC2EPNS_17WorkerGlobalScopeE
@_ZN5blink21OffscreenFontSelectorD1Ev = hidden unnamed_addr alias void (%"class.blink::OffscreenFontSelector"*), void (%"class.blink::OffscreenFontSelector"*)* @_ZN5blink21OffscreenFontSelectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelectorC2EPNS_17WorkerGlobalScopeE(%"class.blink::OffscreenFontSelector"*, %"class.blink::WorkerGlobalScope"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::FontFallbackMap"* null, %"class.blink::FontFallbackMap"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN5blink21OffscreenFontSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::GenericFontFamilySettings"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #8
  %7 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 1
  %8 = bitcast %"class.WTF::HashMap"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #8
  %9 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 2
  %10 = bitcast %"class.WTF::HashMap"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #8
  %11 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 3
  %12 = bitcast %"class.WTF::HashMap"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #8
  %13 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 4
  %14 = bitcast %"class.WTF::HashMap"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #8
  %15 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 5
  %16 = bitcast %"class.WTF::HashMap"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #8
  %17 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 6
  %18 = bitcast %"class.WTF::HashMap"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #8
  %19 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1, i32 7
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13FontFaceCacheEEEPhm(i64 128) #8
  %22 = bitcast i8* %21 to %"class.blink::FontFaceCache"*
  tail call void @_ZN5blink13FontFaceCacheC1Ev(%"class.blink::FontFaceCache"* %22) #8
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.blink::FontFaceCache"** %27 to i8**
  store i8* %21, i8** %28, align 8
  %29 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::WorkerGlobalScope"* %1, %"class.blink::WorkerGlobalScope"** %29, align 8
  %30 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #8
  %31 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9FontCache9AddClientEPNS_15FontCacheClientE(%"class.blink::FontCache"* %30, %"class.blink::FontCacheClient"* %31) #8
  ret void
}

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #1

declare void @_ZN5blink9FontCache9AddClientEPNS_15FontCacheClientE(%"class.blink::FontCache"*, %"class.blink::FontCacheClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelectorD2Ev(%"class.blink::OffscreenFontSelector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN5blink21OffscreenFontSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1
  tail call void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"* %3) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector"* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 -1, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i8*
  %8 = bitcast i32* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 %9
  br label %13

13:                                               ; preds = %53, %11
  %14 = phi %"class.WTF::Vector"* [ %15, %53 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 -1
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.1425"*, %"struct.std::__1::pair.1425"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair.1425"* %17, null
  br i1 %18, label %53, label %19, !prof !2

19:                                               ; preds = %13
  %20 = bitcast %"struct.std::__1::pair.1425"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 -1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !3

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.1425", %"struct.std::__1::pair.1425"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"struct.std::__1::pair.1425"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.1425", %"struct.std::__1::pair.1425"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"struct.std::__1::pair.1425", %"struct.std::__1::pair.1425"* %28, i64 1
  %47 = icmp eq %"struct.std::__1::pair.1425"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #8
  store %"struct.std::__1::pair.1425"* null, %"struct.std::__1::pair.1425"** %16, align 8
  br label %53

53:                                               ; preds = %51, %13
  %54 = icmp eq %"class.WTF::Vector"* %15, %3
  br i1 %54, label %55, label %13

55:                                               ; preds = %53, %5
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %7) #8
  br label %56

56:                                               ; preds = %1, %55
  %57 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 0
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %57, align 8
  %59 = icmp eq %"struct.WTF::KeyValuePair"* %58, null
  br i1 %59, label %93, label %60, !prof !2

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %60
  %65 = zext i32 %62 to i64
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi i64 [ 0, %64 ], [ %89, %88 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %67, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, -3
  br i1 %70, label %88, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %67, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #8
  br label %88

88:                                               ; preds = %87, %84, %71, %66
  %89 = add nuw nsw i64 %67, 1
  %90 = icmp eq i64 %89, %65
  br i1 %90, label %91, label %66

91:                                               ; preds = %88, %60
  %92 = bitcast %"struct.WTF::KeyValuePair"* %58 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %57, align 8
  br label %93

93:                                               ; preds = %56, %91
  %94 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 0
  %95 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %94, align 8
  %96 = icmp eq %"struct.WTF::KeyValuePair"* %95, null
  br i1 %96, label %130, label %97, !prof !2

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %97
  %102 = zext i32 %99 to i64
  br label %103

103:                                              ; preds = %125, %101
  %104 = phi i64 [ 0, %101 ], [ %126, %125 ]
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %104, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, -3
  br i1 %107, label %125, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 %104, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #8
  br label %125

125:                                              ; preds = %124, %121, %108, %103
  %126 = add nuw nsw i64 %104, 1
  %127 = icmp eq i64 %126, %102
  br i1 %127, label %128, label %103

128:                                              ; preds = %125, %97
  %129 = bitcast %"struct.WTF::KeyValuePair"* %95 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %94, align 8
  br label %130

130:                                              ; preds = %93, %128
  %131 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 0
  %132 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %131, align 8
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, null
  br i1 %133, label %167, label %134, !prof !2

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %165, label %138

138:                                              ; preds = %134
  %139 = zext i32 %136 to i64
  br label %140

140:                                              ; preds = %162, %138
  %141 = phi i64 [ 0, %138 ], [ %163, %162 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 %141, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, -3
  br i1 %144, label %162, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 %141, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #8
  br label %162

162:                                              ; preds = %161, %158, %145, %140
  %163 = add nuw nsw i64 %141, 1
  %164 = icmp eq i64 %163, %139
  br i1 %164, label %165, label %140

165:                                              ; preds = %162, %134
  %166 = bitcast %"struct.WTF::KeyValuePair"* %132 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %131, align 8
  br label %167

167:                                              ; preds = %130, %165
  %168 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 0
  %169 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %168, align 8
  %170 = icmp eq %"struct.WTF::KeyValuePair"* %169, null
  br i1 %170, label %204, label %171, !prof !2

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %202, label %175

175:                                              ; preds = %171
  %176 = zext i32 %173 to i64
  br label %177

177:                                              ; preds = %199, %175
  %178 = phi i64 [ 0, %175 ], [ %200, %199 ]
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %169, i64 %178, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, -3
  br i1 %181, label %199, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %169, i64 %178, i32 1, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #8
  br label %199

199:                                              ; preds = %198, %195, %182, %177
  %200 = add nuw nsw i64 %178, 1
  %201 = icmp eq i64 %200, %176
  br i1 %201, label %202, label %177

202:                                              ; preds = %199, %171
  %203 = bitcast %"struct.WTF::KeyValuePair"* %169 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %203) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %168, align 8
  br label %204

204:                                              ; preds = %167, %202
  %205 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 0
  %206 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %205, align 8
  %207 = icmp eq %"struct.WTF::KeyValuePair"* %206, null
  br i1 %207, label %241, label %208, !prof !2

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %239, label %212

212:                                              ; preds = %208
  %213 = zext i32 %210 to i64
  br label %214

214:                                              ; preds = %236, %212
  %215 = phi i64 [ 0, %212 ], [ %237, %236 ]
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %215, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, -3
  br i1 %218, label %236, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %215, i32 1, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #8
  br label %236

236:                                              ; preds = %235, %232, %219, %214
  %237 = add nuw nsw i64 %215, 1
  %238 = icmp eq i64 %237, %213
  br i1 %238, label %239, label %214

239:                                              ; preds = %236, %208
  %240 = bitcast %"struct.WTF::KeyValuePair"* %206 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %240) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %205, align 8
  br label %241

241:                                              ; preds = %204, %239
  %242 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 0
  %243 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %242, align 8
  %244 = icmp eq %"struct.WTF::KeyValuePair"* %243, null
  br i1 %244, label %278, label %245, !prof !2

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %276, label %249

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  br label %251

251:                                              ; preds = %273, %249
  %252 = phi i64 [ 0, %249 ], [ %274, %273 ]
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %243, i64 %252, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, -3
  br i1 %255, label %273, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %243, i64 %252, i32 1, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #8
  br label %273

273:                                              ; preds = %272, %269, %256, %251
  %274 = add nuw nsw i64 %252, 1
  %275 = icmp eq i64 %274, %250
  br i1 %275, label %276, label %251

276:                                              ; preds = %273, %245
  %277 = bitcast %"struct.WTF::KeyValuePair"* %243 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %277) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %242, align 8
  br label %278

278:                                              ; preds = %241, %276
  %279 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 0
  %280 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %279, align 8
  %281 = icmp eq %"struct.WTF::KeyValuePair"* %280, null
  br i1 %281, label %315, label %282, !prof !2

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %313, label %286

286:                                              ; preds = %282
  %287 = zext i32 %284 to i64
  br label %288

288:                                              ; preds = %310, %286
  %289 = phi i64 [ 0, %286 ], [ %311, %310 ]
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %280, i64 %289, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, -3
  br i1 %292, label %310, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %280, i64 %289, i32 1, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #8
  br label %310

310:                                              ; preds = %309, %306, %293, %288
  %311 = add nuw nsw i64 %289, 1
  %312 = icmp eq i64 %311, %287
  br i1 %312, label %313, label %288

313:                                              ; preds = %310, %282
  %314 = bitcast %"struct.WTF::KeyValuePair"* %280 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %314) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %279, align 8
  br label %315

315:                                              ; preds = %278, %313
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelectorD0Ev(%"class.blink::OffscreenFontSelector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN5blink21OffscreenFontSelectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1
  tail call void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector31UpdateGenericFontFamilySettingsERKNS_25GenericFontFamilySettingsE(%"class.blink::OffscreenFontSelector"*, %"class.blink::GenericFontFamilySettings"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1
  %4 = tail call dereferenceable(176) %"class.blink::GenericFontFamilySettings"* @_ZN5blink25GenericFontFamilySettingsaSERKS0_(%"class.blink::GenericFontFamilySettings"* %3, %"class.blink::GenericFontFamilySettings"* dereferenceable(176) %1) #8
  ret void
}

declare dereferenceable(176) %"class.blink::GenericFontFamilySettings"* @_ZN5blink25GenericFontFamilySettingsaSERKS0_(%"class.blink::GenericFontFamilySettings"*, %"class.blink::GenericFontFamilySettings"* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector32RegisterForInvalidationCallbacksEPNS_18FontSelectorClientE(%"class.blink::OffscreenFontSelector"* nocapture, %"class.blink::FontSelectorClient"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector34UnregisterForInvalidationCallbacksEPNS_18FontSelectorClientE(%"class.blink::OffscreenFontSelector"* nocapture, %"class.blink::FontSelectorClient"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontData"* @_ZN5blink21OffscreenFontSelector11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %5, align 8
  %7 = tail call %"class.blink::CSSSegmentedFontFace"* @_ZN5blink13FontFaceCache3GetERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontFaceCache"* %6, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  %8 = icmp eq %"class.blink::CSSSegmentedFontFace"* %7, null
  %9 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %9, align 8
  %11 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %10) #8
  br i1 %8, label %15, label %12

12:                                               ; preds = %3
  tail call void @_ZN5blink19FontMatchingMetrics19ReportWebFontFamilyERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  %13 = tail call %"class.blink::FontData"* @_ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE(%"class.blink::CSSSegmentedFontFace"* nonnull %7, %"class.blink::FontDescription"* dereferenceable(80) %1) #8
  %14 = ptrtoint %"class.blink::FontData"* %13 to i64
  br label %67

15:                                               ; preds = %3
  tail call void @_ZN5blink19FontMatchingMetrics22ReportSystemFontFamilyERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  %16 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink12FontSelector22FamilyNameFromSettingsERKNS_25GenericFontFamilySettingsERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::GenericFontFamilySettings"* dereferenceable(176) %18, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %65, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %50, label %25

25:                                               ; preds = %21
  %26 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %9, align 8
  %27 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %26) #8
  %28 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3, i32 0
  %29 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutLocale"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = tail call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #8
  br label %33

33:                                               ; preds = %25, %31
  %34 = phi %"class.blink::LayoutLocale"* [ %32, %31 ], [ %29, %25 ]
  %35 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %34, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %38 = bitcast %"struct.blink::FontDescription::BitFields"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %39, 8
  %41 = trunc i64 %40 to i32
  %42 = and i32 %41, 7
  call void @_ZN5blink19FontMatchingMetrics37ReportFontFamilyLookupByGenericFamilyERKN3WTF12AtomicStringE11UScriptCodeNS_15FontDescription17GenericFamilyTypeES4_(%"class.blink::FontMatchingMetrics"* %27, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 %36, i32 %42, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #8
  %43 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #8
  %44 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"* %43, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, i32 0, i32 0) #8
  %45 = ptrtoint %"class.blink::SimpleFontData"* %44 to i64
  %46 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %9, align 8
  %47 = call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %46) #8
  call void @_ZN5blink19FontMatchingMetrics36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"* %47, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* %44) #8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %65, label %50

50:                                               ; preds = %21, %33
  %51 = phi i64 [ %45, %33 ], [ 0, %21 ]
  %52 = phi %"class.WTF::StringImpl"* [ %48, %33 ], [ %19, %21 ]
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %50
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %50
  %62 = phi i32 [ %60, %59 ], [ %58, %50 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %65

65:                                               ; preds = %15, %33, %61, %64
  %66 = phi i64 [ %45, %33 ], [ %51, %61 ], [ %51, %64 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %67

67:                                               ; preds = %12, %65
  %68 = phi i64 [ %66, %65 ], [ %14, %12 ]
  %69 = inttoptr i64 %68 to %"class.blink::FontData"*
  ret %"class.blink::FontData"* %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.blink::CSSSegmentedFontFace"* @_ZN5blink13FontFaceCache3GetERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontFaceCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"*) local_unnamed_addr #1

declare void @_ZN5blink19FontMatchingMetrics19ReportWebFontFamilyERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::FontData"* @_ZN5blink20CSSSegmentedFontFace11GetFontDataERKNS_15FontDescriptionE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5blink19FontMatchingMetrics22ReportSystemFontFamilyERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink12FontSelector22FamilyNameFromSettingsERKNS_25GenericFontFamilySettingsERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::GenericFontFamilySettings"* dereferenceable(176), %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink19FontMatchingMetrics37ReportFontFamilyLookupByGenericFamilyERKN3WTF12AtomicStringE11UScriptCodeNS_15FontDescription17GenericFamilyTypeES4_(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache11GetFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringENS_17AlternateFontNameENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink19FontMatchingMetrics36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector15WillUseFontDataERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS4_6StringE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %5, align 8
  %7 = tail call %"class.blink::CSSSegmentedFontFace"* @_ZN5blink13FontFaceCache3GetERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontFaceCache"* %6, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  %8 = icmp eq %"class.blink::CSSSegmentedFontFace"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void @_ZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS_15FontDescriptionERKN3WTF6StringE(%"class.blink::CSSSegmentedFontFace"* nonnull %7, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::String"* dereferenceable(8) %3) #8
  br label %10

10:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN5blink20CSSSegmentedFontFace15WillUseFontDataERKNS_15FontDescriptionERKN3WTF6StringE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector12WillUseRangeERKNS_15FontDescriptionERKN3WTF12AtomicStringERKNS_19FontDataForRangeSetE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDataForRangeSet"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %5, align 8
  %7 = tail call %"class.blink::CSSSegmentedFontFace"* @_ZN5blink13FontFaceCache3GetERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontFaceCache"* %6, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  %8 = icmp eq %"class.blink::CSSSegmentedFontFace"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void @_ZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS_15FontDescriptionERKNS_19FontDataForRangeSetE(%"class.blink::CSSSegmentedFontFace"* nonnull %7, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontDataForRangeSet"* dereferenceable(32) %3) #8
  br label %10

10:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN5blink20CSSSegmentedFontFace12WillUseRangeERKNS_15FontDescriptionERKNS_19FontDataForRangeSetE(%"class.blink::CSSSegmentedFontFace"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontDataForRangeSet"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21OffscreenFontSelector30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::OffscreenFontSelector"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 1
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink12FontSelector22FamilyNameFromSettingsERKNS_25GenericFontFamilySettingsERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::GenericFontFamilySettings"* dereferenceable(176) %7, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #8
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %54

14:                                               ; preds = %3, %10
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #8
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %23
  tail call void @llvm.trap() #8
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %36

36:                                               ; preds = %33, %18, %14
  %37 = phi %"class.WTF::StringImpl"* [ %35, %33 ], [ %8, %18 ], [ %8, %14 ]
  %38 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %39 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %38, i64* %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #8
  br label %54

54:                                               ; preds = %53, %50, %36, %10
  %55 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #8
  %56 = call zeroext i1 @_ZN5blink9FontCache30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"* %55, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %54, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret i1 %56
}

declare zeroext i1 @_ZN5blink9FontCache30IsPlatformFamilyMatchAvailableERKNS_15FontDescriptionERKN3WTF12AtomicStringE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink21OffscreenFontSelector17ReportNotDefGlyphEv(%"class.blink::OffscreenFontSelector"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::OffscreenFontSelector"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %4, align 8
  %6 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %5) #8
  tail call void @_ZN5blink19FontMatchingMetrics31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::FontMatchingMetrics"* %6, i32 %1, i32 %2) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::FontMatchingMetrics"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %3, align 8
  %5 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %4) #8
  tail call void @_ZN5blink19FontMatchingMetrics31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %3, align 8
  %5 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %4) #8
  tail call void @_ZN5blink19FontMatchingMetrics27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %3, align 8
  %5 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %4) #8
  tail call void @_ZN5blink19FontMatchingMetrics30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %3, align 8
  %5 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %4) #8
  tail call void @_ZN5blink19FontMatchingMetrics26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %5, align 8
  %7 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %6) #8
  tail call void @_ZN5blink19FontMatchingMetrics36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"* %7, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontDescription"* dereferenceable(80) %2, %"class.blink::SimpleFontData"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %6, align 8
  %8 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %7) #8
  tail call void @_ZN5blink19FontMatchingMetrics32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::FontMatchingMetrics"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontDescription"* dereferenceable(80) %2, %"class.blink::SimpleFontData"* %3, i1 zeroext %4) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::OffscreenFontSelector"* nocapture readonly, i32, i32, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %6, align 8
  %8 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %7) #8
  tail call void @_ZN5blink19FontMatchingMetrics35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"* %8, i32 %1, i32 %2, %"class.blink::FontDescription"* dereferenceable(80) %3, %"class.blink::SimpleFontData"* %4) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"*, i32, i32, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::OffscreenFontSelector"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %4, align 8
  %6 = tail call %"class.blink::FontMatchingMetrics"* @_ZN5blink17WorkerGlobalScope22GetFontMatchingMetricsEv(%"class.blink::WorkerGlobalScope"* %5) #8
  tail call void @_ZN5blink19FontMatchingMetrics34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"* %6, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::SimpleFontData"* %2) #8
  ret void
}

declare void @_ZN5blink19FontMatchingMetrics34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector20FontCacheInvalidatedEv(%"class.blink::OffscreenFontSelector"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %2, align 8
  tail call void @_ZN5blink13FontFaceCache16IncrementVersionEv(%"class.blink::FontFaceCache"* %3) #8
  ret void
}

declare void @_ZN5blink13FontFaceCache16IncrementVersionEv(%"class.blink::FontFaceCache"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21OffscreenFontSelector19FontFaceInvalidatedENS_22FontInvalidationReasonE(%"class.blink::OffscreenFontSelector"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::OffscreenFontSelector"* %0 to void (%"class.blink::OffscreenFontSelector"*)***
  %4 = load void (%"class.blink::OffscreenFontSelector"*)**, void (%"class.blink::OffscreenFontSelector"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::OffscreenFontSelector"*)*, void (%"class.blink::OffscreenFontSelector"*)** %4, i64 2
  %6 = load void (%"class.blink::OffscreenFontSelector"*)*, void (%"class.blink::OffscreenFontSelector"*)** %5, align 8
  tail call void %6(%"class.blink::OffscreenFontSelector"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21OffscreenFontSelector5TraceEPNS_7VisitorE(%"class.blink::OffscreenFontSelector"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.33"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.1"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13FontFaceCacheEE5TraceEPNS_7VisitorEPKv) #8
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 0
  tail call void @_ZNK5blink12FontSelector5TraceEPNS_7VisitorE(%"class.blink::FontSelector"* %25, %"class.blink::Visitor"* %1) #8
  ret void
}

declare void @_ZNK5blink12FontSelector5TraceEPNS_7VisitorE(%"class.blink::FontSelector"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21OffscreenFontSelector7VersionEv(%"class.blink::OffscreenFontSelector"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ExecutionContext"* @_ZNK5blink21OffscreenFontSelector19GetExecutionContextEv(%"class.blink::OffscreenFontSelector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %2, align 8
  %4 = icmp eq %"class.blink::WorkerGlobalScope"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink17WorkerGlobalScope19GetExecutionContextEv(%"class.blink::WorkerGlobalScope"* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.blink::ExecutionContext"* [ %6, %5 ], [ null, %1 ]
  ret %"class.blink::ExecutionContext"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FontFaceCache"* @_ZN5blink21OffscreenFontSelector16GetFontFaceCacheEv(%"class.blink::OffscreenFontSelector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::FontFaceCache"*, %"class.blink::FontFaceCache"** %2, align 8
  ret %"class.blink::FontFaceCache"* %3
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare %"class.blink::ExecutionContext"* @_ZNK5blink17WorkerGlobalScope19GetExecutionContextEv(%"class.blink::WorkerGlobalScope"*) unnamed_addr #1

declare void @_ZN5blink13FontFaceCacheC1Ev(%"class.blink::FontFaceCache"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13FontFaceCacheEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13FontFaceCacheEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13FontFaceCacheEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFaceCache"*
  tail call void @_ZNK5blink13FontFaceCache5TraceEPNS_7VisitorE(%"class.blink::FontFaceCache"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13FontFaceCacheEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink13FontFaceCache5TraceEPNS_7VisitorE(%"class.blink::FontFaceCache"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerGlobalScope"*
  %4 = bitcast i8* %1 to void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)**, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WorkerGlobalScope"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
