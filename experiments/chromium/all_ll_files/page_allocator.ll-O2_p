; ModuleID = '../../base/allocator/partition_allocator/page_allocator.cc'
source_filename = "../../base/allocator/partition_allocator/page_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.base::LazyInstance" = type { i64, [40 x i8] }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }

@_ZN4base20s_allocPageErrorCodeE = hidden local_unnamed_addr global { { i32 } } zeroinitializer, align 4
@_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE = internal global %"struct.std::__1::atomic.5" zeroinitializer, align 8
@.str = private unnamed_addr constant [99 x i8] c"../../base/allocator/partition_allocator/page_allocator.cc(220) Check failed: try_length >= length\00", align 1
@_ZN4base12_GLOBAL__N_121s_reservation_addressE = internal unnamed_addr global i8* null, align 8
@_ZN4base12_GLOBAL__N_118s_reservation_sizeE = internal unnamed_addr global i64 0, align 8
@_ZN4base12_GLOBAL__N_114g_reserve_lockE = internal global %"class.base::LazyInstance" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base24SystemAllocPagesInternalEPvmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  %6 = tail call i8* @mmap64(i8* %0, i64 %1, i32 %5, i32 34, i32 -1, i64 0) #8
  %7 = icmp eq i8* %6, inttoptr (i64 -1 to i8*)
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  store atomic i32 %10, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ null, %8 ], [ %6, %4 ]
  ret i8* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base31TrySetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8*, i64, i32) local_unnamed_addr #0 {
  br label %4

4:                                                ; preds = %8, %3
  %5 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  %6 = tail call i32 @mprotect(i8* %0, i64 %1, i32 %5) #8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %4, label %12

12:                                               ; preds = %4, %8
  %13 = icmp eq i32 %6, 0
  ret i1 %13
}

; Function Attrs: nounwind
declare i32 @mprotect(i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base28SetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8*, i64, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  br label %6

6:                                                ; preds = %8, %3
  %7 = tail call i32 @mprotect(i8* %0, i64 %1, i32 %5) #8
  switch i32 %7, label %18 [
    i32 -1, label %8
    i32 0, label %24
  ]

8:                                                ; preds = %6
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %6, label %12

12:                                               ; preds = %8
  %13 = icmp ne i32 %10, 12
  %14 = and i32 %5, 2
  %15 = icmp eq i32 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #10
  unreachable

18:                                               ; preds = %6
  %19 = tail call i32* @__errno_location() #9
  br label %20

20:                                               ; preds = %18, %12
  %21 = phi i32* [ %19, %18 ], [ %9, %12 ]
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8
  store i32 -1431655766, i32* %4, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %4, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %22) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !2
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !3
  unreachable

24:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #5 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #8
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #8
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !4
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  unreachable
}

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17FreePagesInternalEPvm(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @munmap(i8* %0, i64 %1) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %3, align 4
  %8 = tail call i32* @__errno_location() #9
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %3, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %7) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !7
  unreachable

10:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base19TrimMappingInternalEPvmmNS_30PageAccessibilityConfigurationEmm(i8*, i64, i64, i32, i64, i64) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = icmp eq i64 %4, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = tail call i32 @munmap(i8* %0, i64 %4) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 -1431655766, i32* %8, align 4
  %15 = tail call i32* @__errno_location() #9
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %8, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %14) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !7
  unreachable

17:                                               ; preds = %10
  %18 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %4 monotonic
  %19 = getelementptr inbounds i8, i8* %0, i64 %4
  br label %20

20:                                               ; preds = %6, %17
  %21 = phi i8* [ %19, %17 ], [ %0, %6 ]
  %22 = icmp eq i64 %5, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %21, i64 %2
  %25 = tail call i32 @munmap(i8* %24, i64 %5) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #8
  store i32 -1431655766, i32* %7, align 4
  %29 = tail call i32* @__errno_location() #9
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %7, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %28) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !7
  unreachable

31:                                               ; preds = %23
  %32 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %5 monotonic
  br label %33

33:                                               ; preds = %20, %31
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9FreePagesEPvm(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @munmap(i8* %0, i64 %1) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %3, align 4
  %8 = tail call i32* @__errno_location() #9
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %3, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %7) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !7
  unreachable

10:                                               ; preds = %2
  %11 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27DecommitSystemPagesInternalEPvmNS_28PageAccessibilityDispositionE(i8*, i64, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i32 @madvise(i8* %0, i64 %1, i32 4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 -1431655766, i32* %4, align 4
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %4, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %8) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !8
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !9
  unreachable

11:                                               ; preds = %3
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @_ZN4base28SetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8* %0, i64 %1, i32 0) #8
  br label %14

14:                                               ; preds = %13, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18DiscardSystemPagesEPvm(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @madvise(i8* %0, i64 %1, i32 4) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %3, align 4
  %8 = tail call i32* @__errno_location() #9
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %3, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %7) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !8
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !9
  unreachable

10:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20SetSystemPagesAccessEPvmNS_30PageAccessibilityConfigurationE(i8*, i64, i32) local_unnamed_addr #0 {
  tail call void @_ZN4base28SetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8* %0, i64 %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27RecommitSystemPagesInternalEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN4base28SetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8* %0, i64 %1, i32 %2) #8
  br label %7

7:                                                ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base30TryRecommitSystemPagesInternalEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4, %9
  %7 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  %8 = tail call i32 @mprotect(i8* %0, i64 %1, i32 %7) #8
  switch i32 %8, label %13 [
    i32 -1, label %9
    i32 0, label %14
  ]

9:                                                ; preds = %6
  %10 = tail call i32* @__errno_location() #9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 4
  br i1 %12, label %6, label %13

13:                                               ; preds = %9, %6
  br label %14

14:                                               ; preds = %6, %13, %4
  %15 = phi i1 [ true, %4 ], [ false, %13 ], [ true, %6 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base23TrySetSystemPagesAccessEPvmNS_30PageAccessibilityConfigurationE(i8*, i64, i32) local_unnamed_addr #0 {
  br label %4

4:                                                ; preds = %8, %3
  %5 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  %6 = tail call i32 @mprotect(i8* %0, i64 %1, i32 %5) #8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %4, label %12

12:                                               ; preds = %4, %8
  %13 = icmp eq i32 %6, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26DiscardSystemPagesInternalEPvm(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @madvise(i8* %0, i64 %1, i32 4) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %3, align 4
  %8 = tail call i32* @__errno_location() #9
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %3, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %7) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !8
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !9
  unreachable

10:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare i32 @madvise(i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base21NextAlignedWithOffsetEmmm(i64, i64, i64) local_unnamed_addr #6 {
  %4 = add i64 %1, -1
  %5 = and i64 %4, %0
  %6 = icmp ugt i64 %5, %2
  %7 = select i1 %6, i64 %1, i64 0
  %8 = add i64 %2, %0
  %9 = sub i64 %8, %5
  %10 = add i64 %9, %7
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base16SystemAllocPagesEPvmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  %6 = tail call i8* @mmap64(i8* %0, i64 %1, i32 %5, i32 34, i32 -1, i64 0) #8
  %7 = ptrtoint i8* %6 to i64
  switch i64 %7, label %11 [
    i64 -1, label %8
    i64 0, label %13
  ]

8:                                                ; preds = %4
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  store atomic i32 %10, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %13

11:                                               ; preds = %4
  %12 = atomicrmw add i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  br label %13

13:                                               ; preds = %4, %8, %11
  %14 = phi i8* [ null, %8 ], [ %6, %11 ], [ null, %4 ]
  ret i8* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base10AllocPagesEPvmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8*, i64, i64, i32, i32) local_unnamed_addr #0 {
  %6 = tail call i8* @_ZN4base25AllocPagesWithAlignOffsetEPvmmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8* %0, i64 %1, i64 %2, i64 0, i32 %3, i32 %4)
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base25AllocPagesWithAlignOffsetEPvmmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8*, i64, i64, i64, i32, i32) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = add i64 %2, -1
  %9 = icmp eq i8* %0, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = sub i64 0, %2
  %12 = tail call i8* @_ZN4base17GetRandomPageBaseEv() #8
  %13 = ptrtoint i8* %12 to i64
  %14 = and i64 %13, %11
  %15 = add i64 %14, %3
  %16 = inttoptr i64 %15 to i8*
  br label %17

17:                                               ; preds = %10, %6
  %18 = phi i8* [ %16, %10 ], [ %0, %6 ]
  %19 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %20 = tail call i8* @mmap64(i8* %18, i64 %1, i32 %19, i32 34, i32 -1, i64 0) #8
  %21 = ptrtoint i8* %20 to i64
  switch i64 %21, label %33 [
    i64 -1, label %22
    i64 0, label %25
  ]

22:                                               ; preds = %17
  %23 = tail call i32* @__errno_location() #9
  %24 = load i32, i32* %23, align 4
  store atomic i32 %24, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %25

25:                                               ; preds = %22, %17
  %26 = tail call zeroext i1 @_ZN4base18ReleaseReservationEv() #8
  %27 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %28 = tail call i8* @mmap64(i8* %18, i64 %1, i32 %27, i32 34, i32 -1, i64 0) #8
  %29 = ptrtoint i8* %28 to i64
  switch i64 %29, label %33 [
    i64 -1, label %30
    i64 0, label %94
  ]

30:                                               ; preds = %132, %99, %25
  %31 = tail call i32* @__errno_location() #9
  %32 = load i32, i32* %31, align 4
  store atomic i32 %32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %94

33:                                               ; preds = %25, %17
  %34 = phi i8* [ %20, %17 ], [ %28, %25 ]
  %35 = atomicrmw add i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  %36 = icmp eq i8* %34, null
  br i1 %36, label %94, label %37

37:                                               ; preds = %33
  %38 = ptrtoint i8* %34 to i64
  %39 = and i64 %8, %38
  %40 = icmp eq i64 %39, %3
  br i1 %40, label %94, label %41

41:                                               ; preds = %37
  %42 = tail call i32 @munmap(i8* nonnull %34, i64 %1) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %145, %112, %41
  %45 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #8
  store i32 -1431655766, i32* %7, align 4
  %46 = tail call i32* @__errno_location() #9
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %7, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %45) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !7
  unreachable

48:                                               ; preds = %41
  %49 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  %50 = tail call i8* @_ZN4base17GetRandomPageBaseEv() #8
  %51 = ptrtoint i8* %50 to i64
  %52 = and i64 %8, %51
  %53 = icmp ugt i64 %52, %3
  %54 = select i1 %53, i64 %2, i64 0
  %55 = add i64 %51, %3
  %56 = sub i64 %55, %52
  %57 = add i64 %56, %54
  %58 = inttoptr i64 %57 to i8*
  %59 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %60 = tail call i8* @mmap64(i8* %58, i64 %1, i32 %59, i32 34, i32 -1, i64 0) #8
  %61 = ptrtoint i8* %60 to i64
  switch i64 %61, label %104 [
    i64 -1, label %96
    i64 0, label %99
  ]

62:                                               ; preds = %148
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str, i64 0, i64 0)) #8
  br label %63

63:                                               ; preds = %148, %62
  br label %64

64:                                               ; preds = %63, %84
  %65 = tail call i8* @_ZN4base17GetRandomPageBaseEv() #8
  %66 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %67 = tail call i8* @mmap64(i8* %65, i64 %152, i32 %66, i32 34, i32 -1, i64 0) #8
  %68 = ptrtoint i8* %67 to i64
  switch i64 %68, label %80 [
    i64 -1, label %69
    i64 0, label %72
  ]

69:                                               ; preds = %64
  %70 = tail call i32* @__errno_location() #9
  %71 = load i32, i32* %70, align 4
  store atomic i32 %71, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %72

72:                                               ; preds = %69, %64
  %73 = tail call zeroext i1 @_ZN4base18ReleaseReservationEv() #8
  %74 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %75 = tail call i8* @mmap64(i8* %65, i64 %152, i32 %74, i32 34, i32 -1, i64 0) #8
  %76 = ptrtoint i8* %75 to i64
  switch i64 %76, label %80 [
    i64 -1, label %77
    i64 0, label %94
  ]

77:                                               ; preds = %72
  %78 = tail call i32* @__errno_location() #9
  %79 = load i32, i32* %78, align 4
  store atomic i32 %79, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %94

80:                                               ; preds = %72, %64
  %81 = phi i8* [ %67, %64 ], [ %75, %72 ]
  %82 = atomicrmw add i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %152 monotonic
  %83 = icmp eq i8* %81, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i8* %81 to i64
  %86 = and i64 %8, %85
  %87 = icmp ugt i64 %86, %3
  %88 = select i1 %87, i64 %2, i64 0
  %89 = sub i64 %3, %86
  %90 = add i64 %88, %89
  %91 = sub i64 %151, %90
  %92 = tail call i8* @_ZN4base19TrimMappingInternalEPvmmNS_30PageAccessibilityConfigurationEmm(i8* nonnull %81, i64 undef, i64 %1, i32 undef, i64 %90, i64 %91) #8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %64, label %94

94:                                               ; preds = %72, %84, %80, %25, %33, %37, %99, %104, %108, %132, %137, %141, %77, %30
  %95 = phi i8* [ null, %30 ], [ null, %77 ], [ null, %33 ], [ %34, %37 ], [ null, %25 ], [ null, %99 ], [ null, %104 ], [ %105, %108 ], [ null, %132 ], [ null, %137 ], [ %138, %141 ], [ null, %72 ], [ null, %80 ], [ %92, %84 ]
  ret i8* %95

96:                                               ; preds = %48
  %97 = tail call i32* @__errno_location() #9
  %98 = load i32, i32* %97, align 4
  store atomic i32 %98, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %99

99:                                               ; preds = %96, %48
  %100 = tail call zeroext i1 @_ZN4base18ReleaseReservationEv() #8
  %101 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %102 = tail call i8* @mmap64(i8* %58, i64 %1, i32 %101, i32 34, i32 -1, i64 0) #8
  %103 = ptrtoint i8* %102 to i64
  switch i64 %103, label %104 [
    i64 -1, label %30
    i64 0, label %94
  ]

104:                                              ; preds = %48, %99
  %105 = phi i8* [ %102, %99 ], [ %60, %48 ]
  %106 = atomicrmw add i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  %107 = icmp eq i8* %105, null
  br i1 %107, label %94, label %108

108:                                              ; preds = %104
  %109 = ptrtoint i8* %105 to i64
  %110 = and i64 %8, %109
  %111 = icmp eq i64 %110, %3
  br i1 %111, label %94, label %112

112:                                              ; preds = %108
  %113 = tail call i32 @munmap(i8* nonnull %105, i64 %1) #8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %44

115:                                              ; preds = %112
  %116 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  %117 = tail call i8* @_ZN4base17GetRandomPageBaseEv() #8
  %118 = ptrtoint i8* %117 to i64
  %119 = and i64 %8, %118
  %120 = icmp ugt i64 %119, %3
  %121 = select i1 %120, i64 %2, i64 0
  %122 = add i64 %118, %3
  %123 = sub i64 %122, %119
  %124 = add i64 %123, %121
  %125 = inttoptr i64 %124 to i8*
  %126 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %127 = tail call i8* @mmap64(i8* %125, i64 %1, i32 %126, i32 34, i32 -1, i64 0) #8
  %128 = ptrtoint i8* %127 to i64
  switch i64 %128, label %137 [
    i64 -1, label %129
    i64 0, label %132
  ]

129:                                              ; preds = %115
  %130 = tail call i32* @__errno_location() #9
  %131 = load i32, i32* %130, align 4
  store atomic i32 %131, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %132

132:                                              ; preds = %129, %115
  %133 = tail call zeroext i1 @_ZN4base18ReleaseReservationEv() #8
  %134 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %4) #8
  %135 = tail call i8* @mmap64(i8* %125, i64 %1, i32 %134, i32 34, i32 -1, i64 0) #8
  %136 = ptrtoint i8* %135 to i64
  switch i64 %136, label %137 [
    i64 -1, label %30
    i64 0, label %94
  ]

137:                                              ; preds = %115, %132
  %138 = phi i8* [ %135, %132 ], [ %127, %115 ]
  %139 = atomicrmw add i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  %140 = icmp eq i8* %138, null
  br i1 %140, label %94, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i8* %138 to i64
  %143 = and i64 %8, %142
  %144 = icmp eq i64 %143, %3
  br i1 %144, label %94, label %145

145:                                              ; preds = %141
  %146 = tail call i32 @munmap(i8* nonnull %138, i64 %1) #8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %44

148:                                              ; preds = %145
  %149 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1 monotonic
  %150 = tail call i8* @_ZN4base17GetRandomPageBaseEv() #8
  %151 = add i64 %2, -4096
  %152 = add i64 %151, %1
  %153 = icmp ult i64 %152, %1
  br i1 %153, label %62, label %63, !prof !10
}

declare i8* @_ZN4base17GetRandomPageBaseEv() local_unnamed_addr #2

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8*, i64, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i32 @madvise(i8* %0, i64 %1, i32 4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 -1431655766, i32* %4, align 4
  %9 = tail call i32* @__errno_location() #9
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %4, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %8) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !8
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !9
  unreachable

11:                                               ; preds = %3
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @_ZN4base28SetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8* %0, i64 %1, i32 0) #8
  br label %14

14:                                               ; preds = %11, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN4base28SetSystemPagesAccessInternalEPvmNS_30PageAccessibilityConfigurationE(i8* %0, i64 %1, i32 %2) #8
  br label %7

7:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %4, %9
  %7 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 %2) #8
  %8 = tail call i32 @mprotect(i8* %0, i64 %1, i32 %7) #8
  switch i32 %8, label %14 [
    i32 -1, label %9
    i32 0, label %13
  ]

9:                                                ; preds = %6
  %10 = tail call i32* @__errno_location() #9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 4
  br i1 %12, label %6, label %14

13:                                               ; preds = %6
  br label %14

14:                                               ; preds = %6, %9, %13, %4
  %15 = phi i1 [ true, %4 ], [ true, %13 ], [ false, %9 ], [ false, %6 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19ReserveAddressSpaceEm(i64) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0)) #8
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE to i8*)) #8
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::Lock"*
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !11

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #8
  br label %17

17:                                               ; preds = %9, %15
  %18 = load i8*, i8** @_ZN4base12_GLOBAL__N_121s_reservation_addressE, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %29

20:                                               ; preds = %17
  %21 = tail call i32 @_ZN4base14GetAccessFlagsENS_30PageAccessibilityConfigurationE(i32 0) #8
  %22 = tail call i8* @mmap64(i8* null, i64 %0, i32 %21, i32 34, i32 -1, i64 0) #8
  %23 = ptrtoint i8* %22 to i64
  switch i64 %23, label %27 [
    i64 -1, label %24
    i64 0, label %29
  ]

24:                                               ; preds = %20
  %25 = tail call i32* @__errno_location() #9
  %26 = load i32, i32* %25, align 4
  store atomic i32 %26, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  br label %29

27:                                               ; preds = %20
  %28 = atomicrmw add i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %0 monotonic
  store i8* %22, i8** @_ZN4base12_GLOBAL__N_121s_reservation_addressE, align 8
  store i64 %0, i64* @_ZN4base12_GLOBAL__N_118s_reservation_sizeE, align 8
  br label %29

29:                                               ; preds = %20, %24, %17, %27
  %30 = phi i1 [ true, %27 ], [ false, %17 ], [ false, %24 ], [ false, %20 ]
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #8
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base18ReleaseReservationEv() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %0
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0)) #8
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE to i8*)) #8
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %0, %6, %7
  %10 = phi i64 [ %2, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::Lock"*
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !11

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %11, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #8
  br label %17

17:                                               ; preds = %9, %15
  %18 = load i8*, i8** @_ZN4base12_GLOBAL__N_121s_reservation_addressE, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = load i64, i64* @_ZN4base12_GLOBAL__N_118s_reservation_sizeE, align 8
  %22 = tail call i32 @munmap(i8* nonnull %18, i64 %21) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8
  store i32 -1431655766, i32* %1, align 4
  %26 = tail call i32* @__errno_location() #9
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %1, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %25) #8
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !7
  unreachable

28:                                               ; preds = %20
  %29 = atomicrmw sub i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %21 monotonic
  store i8* null, i8** @_ZN4base12_GLOBAL__N_121s_reservation_addressE, align 8
  store i64 0, i64* @_ZN4base12_GLOBAL__N_118s_reservation_sizeE, align 8
  br label %30

30:                                               ; preds = %17, %28
  %31 = phi i1 [ true, %28 ], [ false, %17 ]
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #8
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24HasReservationForTestingEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0)) #8
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE to i8*)) #8
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_114g_reserve_lockE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::Lock"*
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !11

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #8
  br label %16

16:                                               ; preds = %8, %14
  %17 = load i8*, i8** @_ZN4base12_GLOBAL__N_121s_reservation_addressE, align 8
  %18 = icmp ne i8* %17, null
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #8
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base21GetAllocPageErrorCodeEv() local_unnamed_addr #7 {
  %1 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN4base20s_allocPageErrorCodeE, i64 0, i32 0, i32 0) seq_cst, align 4
  ret i32 %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN4base18GetTotalMappedSizeEv() local_unnamed_addr #7 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5"* @_ZN4base12_GLOBAL__N_128g_total_mapped_address_spaceE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) seq_cst, align 8
  ret i64 %1
}

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2140188571}
!3 = !{i32 -2140188550}
!4 = !{i32 -2140206596}
!5 = !{i32 -2140206575}
!6 = !{i32 -2140188058}
!7 = !{i32 -2140188037}
!8 = !{i32 -2140187532}
!9 = !{i32 -2140187511}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{!"branch_weights", i32 2000, i32 1}
