; ModuleID = '../../extensions/renderer/programmatic_script_injector.cc'
source_filename = "../../extensions/renderer/programmatic_script_injector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ProgrammaticScriptInjector" = type <{ %"class.extensions::ScriptInjector", %"class.mojo::StructPtr", %"class.base::OnceCallback", %class.GURL, %"class.std::__1::basic_string", %"class.absl::optional.12", i8, [7 x i8] }>
%"class.extensions::ScriptInjector" = type { i32 (...)** }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.extensions::mojom::ExecuteCodeParams"* }
%"class.extensions::mojom::ExecuteCodeParams" = type { %"class.mojo::InlinedStructPtr", i32, %"class.std::__1::basic_string", %class.GURL, i8, i32, i8, i8, %class.GURL, i8, i32, %"class.absl::optional" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.extensions::mojom::HostID", i32, [4 x i8] }>
%"class.extensions::mojom::HostID" = type { i32, %"class.std::__1::basic_string" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"class.std::__1::basic_string" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64 }
%class.InjectionHost = type { i32 (...)**, %"class.extensions::mojom::HostID" }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebDocument" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr.57" }
%"class.blink::WebPrivatePtr.57" = type { i8* }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.blink::WebScriptSource"*, %"struct.blink::WebScriptSource"*, %"class.std::__1::__compressed_pair.69" }
%"struct.blink::WebScriptSource" = type <{ %"class.blink::WebString", %"class.blink::WebURL", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.blink::WebScriptSource"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::WebString"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.extensions::RendererExtensionRegistry" = type { %"class.extensions::ExtensionSet", %"class.std::__1::map.202", %"class.base::Lock" }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.193" }
%"class.std::__1::map.193" = type { %"class.std::__1::__tree.194" }
%"class.std::__1::__tree.194" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.86", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::vector.158", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.172", %"class.std::__1::map.184", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set.87" }
%"class.std::__1::set.87" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type { i32 (...)**, %"class.std::__1::basic_string", i32, i32, %"class.base::Lock", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.absl::optional.133", %"class.std::__1::map.138", %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.extensions::PermissionSet"* }
%"class.extensions::PermissionSet" = type { %"class.extensions::APIPermissionSet", %"class.extensions::ManifestPermissionSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", i32, i32 }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map.109" }
%"class.std::__1::map.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.extensions::ManifestPermissionSet" = type { %"class.extensions::BaseSetOperators.120" }
%"class.extensions::BaseSetOperators.120" = type { %"class.std::__1::map.121" }
%"class.std::__1::map.121" = type { %"class.std::__1::__tree.122" }
%"class.std::__1::__tree.122" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { i32 }
%"class.std::__1::map.138" = type { %"class.std::__1::__tree.139" }
%"class.std::__1::__tree.139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.base::ThreadChecker"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.160" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.165" }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { i32*, i32*, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { i32* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.std::__1::map.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }

@_ZTVN10extensions26ProgrammaticScriptInjectorE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZN10extensions26ProgrammaticScriptInjectorD2Ev to i8*), i8* bitcast (void (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZN10extensions26ProgrammaticScriptInjectorD0Ev to i8*), i8* bitcast (i32 (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector11script_typeEv to i8*), i8* bitcast (i1 (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector13IsUserGestureEv to i8*), i8* bitcast (i32 (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector12GetCssOriginEv to i8*), i8* bitcast (i1 (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector13IsRemovingCSSEv to i8*), i8* bitcast (i1 (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector11IsAddingCSSEv to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector15GetInjectionKeyEv to i8*), i8* bitcast (i1 (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZNK10extensions26ProgrammaticScriptInjector14ExpectsResultsEv to i8*), i8* bitcast (i1 (%"class.extensions::ProgrammaticScriptInjector"*, i32, %"class.std::__1::set"*)* @_ZNK10extensions26ProgrammaticScriptInjector14ShouldInjectJsENS_5mojom11RunLocationERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE to i8*), i8* bitcast (i1 (%"class.extensions::ProgrammaticScriptInjector"*, i32, %"class.std::__1::set"*)* @_ZNK10extensions26ProgrammaticScriptInjector23ShouldInjectOrRemoveCssENS_5mojom11RunLocationERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE to i8*), i8* bitcast (i32 (%"class.extensions::ProgrammaticScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)* @_ZN10extensions26ProgrammaticScriptInjector17CanExecuteOnFrameEPK13InjectionHostPN5blink13WebLocalFrameEi to i8*), i8* bitcast (void (%"class.std::__1::vector.67"*, %"class.extensions::ProgrammaticScriptInjector"*, i32, %"class.std::__1::set"*, i64*)* @_ZNK10extensions26ProgrammaticScriptInjector12GetJsSourcesENS_5mojom11RunLocationEPNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEPm to i8*), i8* bitcast (void (%"class.std::__1::vector.74"*, %"class.extensions::ProgrammaticScriptInjector"*, i32, %"class.std::__1::set"*, i64*)* @_ZNK10extensions26ProgrammaticScriptInjector13GetCssSourcesENS_5mojom11RunLocationEPNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEPm to i8*), i8* bitcast (void (%"class.extensions::ProgrammaticScriptInjector"*, %"class.base::Value"*, i32)* @_ZN10extensions26ProgrammaticScriptInjector19OnInjectionCompleteENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS_5mojom11RunLocationE to i8*), i8* bitcast (void (%"class.extensions::ProgrammaticScriptInjector"*, i32)* @_ZN10extensions26ProgrammaticScriptInjector15OnWillNotInjectENS_14ScriptInjector19InjectFailureReasonE to i8*)] }, align 8
@_ZN3url12kAboutSchemeE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors17kCannotAccessPageE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors21kCannotAccessAboutUrlE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors24kCannotAccessPageWithUrlE = external constant [0 x i8], align 1

@_ZN10extensions26ProgrammaticScriptInjectorC1EN4mojo9StructPtrINS_5mojom17ExecuteCodeParamsEEEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERK4GURLN4absl8optionalINS6_5ValueEEEEEE = hidden unnamed_addr alias void (%"class.extensions::ProgrammaticScriptInjector"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*), void (%"class.extensions::ProgrammaticScriptInjector"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)* @_ZN10extensions26ProgrammaticScriptInjectorC2EN4mojo9StructPtrINS_5mojom17ExecuteCodeParamsEEEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERK4GURLN4absl8optionalINS6_5ValueEEEEEE
@_ZN10extensions26ProgrammaticScriptInjectorD1Ev = hidden unnamed_addr alias void (%"class.extensions::ProgrammaticScriptInjector"*), void (%"class.extensions::ProgrammaticScriptInjector"*)* @_ZN10extensions26ProgrammaticScriptInjectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions26ProgrammaticScriptInjectorC2EN4mojo9StructPtrINS_5mojom17ExecuteCodeParamsEEEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERK4GURLN4absl8optionalINS6_5ValueEEEEEE(%"class.extensions::ProgrammaticScriptInjector"*, %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN10extensions26ProgrammaticScriptInjectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1
  %6 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.extensions::mojom::ExecuteCodeParams"* null, %"class.extensions::mojom::ExecuteCodeParams"** %7, align 8
  %8 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %6, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %15) #10
  %16 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false)
  %19 = bitcast %union.anon.16* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 33, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions26ProgrammaticScriptInjectorD2Ev(%"class.extensions::ProgrammaticScriptInjector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN10extensions26ProgrammaticScriptInjectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %7) #10
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %8, %14
  %18 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %18) #10
  %19 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %19) #10
  %20 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %20, align 8
  store %"class.extensions::mojom::ExecuteCodeParams"* null, %"class.extensions::mojom::ExecuteCodeParams"** %20, align 8
  %22 = icmp eq %"class.extensions::mojom::ExecuteCodeParams"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  tail call void @_ZN10extensions5mojom17ExecuteCodeParamsD1Ev(%"class.extensions::mojom::ExecuteCodeParams"* nonnull %21) #10
  %24 = bitcast %"class.extensions::mojom::ExecuteCodeParams"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %17, %23
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions26ProgrammaticScriptInjectorD0Ev(%"class.extensions::ProgrammaticScriptInjector"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions26ProgrammaticScriptInjectorD2Ev(%"class.extensions::ProgrammaticScriptInjector"* %0) #10
  %2 = bitcast %"class.extensions::ProgrammaticScriptInjector"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK10extensions26ProgrammaticScriptInjector11script_typeEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector13IsUserGestureEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %3, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions26ProgrammaticScriptInjector12GetCssOriginEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %3, i64 0, i32 10
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector13IsRemovingCSSEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector11IsAddingCSSEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions26ProgrammaticScriptInjector15GetInjectionKeyEv(%"class.absl::optional"* noalias sret, %"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %3, align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %4, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %4, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #10
  br label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %4, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #10
  br label %24

24:                                               ; preds = %19, %16
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector14ExpectsResultsEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %3, i64 0, i32 7
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector14ShouldInjectJsENS_5mojom11RunLocationERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly, i32, %"class.std::__1::set"* nocapture readnone dereferenceable(24)) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %9, %3
  %14 = phi i1 [ false, %3 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector23ShouldInjectOrRemoveCssENS_5mojom11RunLocationERKNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEE(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly, i32, %"class.std::__1::set"* nocapture readnone dereferenceable(24)) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = icmp ult i32 %12, 2
  ret i1 %13

14:                                               ; preds = %3
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions26ProgrammaticScriptInjector17CanExecuteOnFrameEPK13InjectionHostPN5blink13WebLocalFrameEi(%"class.extensions::ProgrammaticScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::WebString", align 8
  %9 = alloca %"class.blink::WebSecurityOrigin", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.blink::WebURL", align 8
  %13 = alloca %"class.blink::WebDocument", align 8
  %14 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #10
  call void @_ZN10extensions13ScriptContext28GetDocumentLoaderURLForFrameEPKN5blink13WebLocalFrameE(%class.GURL* nonnull sret %6, %"class.blink::WebLocalFrame"* %2) #10
  %15 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  %16 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %15, %class.GURL* nonnull dereferenceable(120) %6) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #10
  %17 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #10
  %18 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %15, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %17) #10
  br i1 %18, label %19, label %36

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = bitcast %"class.blink::WebString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = bitcast %"class.blink::WebSecurityOrigin"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.blink::WebLocalFrame", %"class.blink::WebLocalFrame"* %2, i64 0, i32 0
  call void @_ZNK5blink8WebFrame17GetSecurityOriginEv(%"class.blink::WebSecurityOrigin"* nonnull sret %9, %"class.blink::WebFrame"* %23) #10
  call void @_ZNK5blink17WebSecurityOrigin8ToStringEv(%"class.blink::WebString"* nonnull sret %8, %"class.blink::WebSecurityOrigin"* nonnull %9) #10
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::WebString"* nonnull %8, i32 0) #10
  %24 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 4
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %29, %19
  %33 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %20, i64 24, i1 false) #10
  %34 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 0, i8* %35, align 1
  store i8 0, i8* %20, align 8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %8) #10
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br label %36

36:                                               ; preds = %32, %4
  %37 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 120, i1 false)
  %38 = bitcast %class.GURL* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %38) #10
  %39 = bitcast %"class.blink::WebURL"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %39) #10
  %40 = bitcast %"class.blink::WebDocument"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #10
  %41 = bitcast %"class.blink::WebLocalFrame"* %2 to void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)***
  %42 = load void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)**, void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)*, void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)** %42, i64 19
  %44 = load void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)*, void (%"class.blink::WebDocument"*, %"class.blink::WebLocalFrame"*)** %43, align 8
  call void %44(%"class.blink::WebDocument"* nonnull sret %13, %"class.blink::WebLocalFrame"* %2) #10
  call void @_ZNK5blink11WebDocument3UrlEv(%"class.blink::WebURL"* nonnull sret %12, %"class.blink::WebDocument"* nonnull %13) #10
  %45 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45)
  %46 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %12, i64 0, i32 0
  %47 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* nonnull %46) #10, !noalias !3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %36
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %11) #10
  br label %62

50:                                               ; preds = %36
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.blink::WebString"* nonnull %46, i32 0) #10
  %51 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %12, i64 0, i32 1
  %52 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %12, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !2, !noalias !3
  %54 = icmp ne i8 %53, 0
  call void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL* nonnull %11, %"class.std::__1::basic_string"* nonnull %5, %"struct.url::Parsed"* dereferenceable(80) %51, i1 zeroext %54) #10
  %55 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1, !noalias !3
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8, !noalias !3
  call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %49, %50, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45)
  %63 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %63, align 8
  %65 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %64, i64 0, i32 4
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = zext i8 %66 to i32
  call void @_ZN10extensions13ScriptContext35GetEffectiveDocumentURLForInjectionEPN5blink13WebLocalFrameERK4GURLNS_29MatchOriginAsFallbackBehaviorE(%class.GURL* nonnull sret %10, %"class.blink::WebLocalFrame"* %2, %class.GURL* nonnull dereferenceable(120) %11, i32 %67) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #10
  %68 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %12, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %68) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %46) #10
  %69 = getelementptr inbounds %"class.blink::WebDocument", %"class.blink::WebDocument"* %13, i64 0, i32 0
  call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %38) #10
  %70 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %63, align 8
  %71 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %70, i64 0, i32 6
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.blink::WebLocalFrame", %"class.blink::WebLocalFrame"* %2, i64 0, i32 0
  %76 = call %"class.blink::WebFrame"* @_ZNK5blink8WebFrame6ParentEv(%"class.blink::WebFrame"* %75) #10
  %77 = icmp eq %"class.blink::WebFrame"* %76, null
  br i1 %77, label %78, label %90

78:                                               ; preds = %74
  %79 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %63, align 8
  %80 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %79, i64 0, i32 3
  %81 = call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* nonnull dereferenceable(120) %10, %class.GURL* dereferenceable(120) %80) #10
  %82 = zext i1 %81 to i32
  br label %90

83:                                               ; preds = %62
  %84 = call %"class.content::RenderFrame"* @_ZN7content11RenderFrame12FromWebFrameEPN5blink13WebLocalFrameE(%"class.blink::WebLocalFrame"* %2) #10
  %85 = bitcast %class.InjectionHost* %1 to i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)***
  %86 = load i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)**, i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)*** %85, align 8
  %87 = getelementptr inbounds i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)*, i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)** %86, i64 5
  %88 = load i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)*, i32 (%class.InjectionHost*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)** %87, align 8
  %89 = call i32 %88(%class.InjectionHost* %1, %class.GURL* nonnull dereferenceable(120) %10, %"class.content::RenderFrame"* %84, i32 %3, i1 zeroext true) #10
  br label %90

90:                                               ; preds = %74, %83, %78
  %91 = phi i32 [ %82, %78 ], [ %89, %83 ], [ 1, %74 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %37) #10
  ret i32 %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZN10extensions13ScriptContext28GetDocumentLoaderURLForFrameEPKN5blink13WebLocalFrameE(%class.GURL* sret, %"class.blink::WebLocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

declare void @_ZNK5blink8WebFrame17GetSecurityOriginEv(%"class.blink::WebSecurityOrigin"* sret, %"class.blink::WebFrame"*) local_unnamed_addr #1

declare void @_ZNK5blink17WebSecurityOrigin8ToStringEv(%"class.blink::WebString"* sret, %"class.blink::WebSecurityOrigin"*) local_unnamed_addr #1

declare void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.blink::WebString"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN10extensions13ScriptContext35GetEffectiveDocumentURLForInjectionEPN5blink13WebLocalFrameERK4GURLNS_29MatchOriginAsFallbackBehaviorE(%class.GURL* sret, %"class.blink::WebLocalFrame"*, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #1

declare void @_ZNK5blink11WebDocument3UrlEv(%"class.blink::WebURL"* sret, %"class.blink::WebDocument"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"*) unnamed_addr #2

declare %"class.blink::WebFrame"* @_ZNK5blink8WebFrame6ParentEv(%"class.blink::WebFrame"*) local_unnamed_addr #1

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare %"class.content::RenderFrame"* @_ZN7content11RenderFrame12FromWebFrameEPN5blink13WebLocalFrameE(%"class.blink::WebLocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions26ProgrammaticScriptInjector12GetJsSourcesENS_5mojom11RunLocationEPNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEPm(%"class.std::__1::vector.67"* noalias nocapture sret, %"class.extensions::ProgrammaticScriptInjector"* nocapture readonly, i32, %"class.std::__1::set"* nocapture readnone, i64* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::WebScriptSource", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = alloca %"class.blink::WebURL", align 8
  %9 = bitcast %"struct.blink::WebScriptSource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #10
  %10 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %11, align 8
  %13 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %12, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !6
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !6
  %20 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !6
  %22 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i8* %19, i8* %22
  %25 = select i1 %17, i64 %21, i64 %23
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %7, i8* %24, i64 %25) #10
  %26 = bitcast %"class.blink::WebURL"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %26) #10
  %27 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %11, align 8
  %28 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %27, i64 0, i32 8
  %29 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %8, i64 0, i32 0
  %30 = bitcast %class.GURL* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !9
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !noalias !9
  %36 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %27, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !9
  %38 = bitcast %class.GURL* %28 to i8*
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i8* %35, i8* %38
  %41 = select i1 %33, i64 %37, i64 %39
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %29, i8* %40, i64 %41) #10
  %42 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %8, i64 0, i32 1
  %43 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %27, i64 0, i32 8, i32 2
  call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %42, %"struct.url::Parsed"* dereferenceable(80) %43) #10
  %44 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %8, i64 0, i32 2
  %45 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %27, i64 0, i32 8, i32 1
  %46 = load i8, i8* %45, align 8, !range !2
  store i8 %46, i8* %44, align 8
  %47 = getelementptr inbounds %"struct.blink::WebScriptSource", %"struct.blink::WebScriptSource"* %6, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %47, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #10
  %48 = getelementptr inbounds %"struct.blink::WebScriptSource", %"struct.blink::WebScriptSource"* %6, i64 0, i32 1, i32 0
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %48, %"class.blink::WebString"* nonnull dereferenceable(8) %29) #10
  %49 = getelementptr inbounds %"struct.blink::WebScriptSource", %"struct.blink::WebScriptSource"* %6, i64 0, i32 1, i32 1
  call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %49, %"struct.url::Parsed"* dereferenceable(80) %42) #10
  %50 = getelementptr inbounds %"struct.blink::WebScriptSource", %"struct.blink::WebScriptSource"* %6, i64 0, i32 1, i32 2
  %51 = load i8, i8* %44, align 8, !range !2
  store i8 %51, i8* %50, align 8
  %52 = getelementptr inbounds %"struct.blink::WebScriptSource", %"struct.blink::WebScriptSource"* %6, i64 0, i32 2
  store i32 1, i32* %52, align 8
  %53 = call i8* @_Znwm(i64 112) #11
  %54 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %0, i64 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::vector.67"* %0 to i8**
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 112
  %57 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"struct.blink::WebScriptSource"** %57 to i8**
  store i8* %56, i8** %58, align 8
  %59 = bitcast i8* %53 to %"class.blink::WebString"*
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %59, %"class.blink::WebString"* nonnull dereferenceable(8) %47) #10
  %60 = getelementptr inbounds i8, i8* %53, i64 8
  %61 = bitcast i8* %60 to %"class.blink::WebString"*
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %61, %"class.blink::WebString"* dereferenceable(8) %48) #10
  %62 = getelementptr inbounds i8, i8* %53, i64 16
  %63 = bitcast i8* %62 to %"struct.url::Parsed"*
  call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %63, %"struct.url::Parsed"* dereferenceable(80) %49) #10
  %64 = getelementptr inbounds i8, i8* %53, i64 96
  %65 = load i8, i8* %50, align 8, !range !2
  store i8 %65, i8* %64, align 8
  %66 = getelementptr inbounds i8, i8* %53, i64 104
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %52, align 8
  store i32 %68, i32* %67, align 8
  %69 = bitcast %"struct.blink::WebScriptSource"** %54 to i64*
  %70 = ptrtoint i8* %56 to i64
  store i64 %70, i64* %69, align 8
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %49) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %48) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %47) #10
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %42) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %26) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions26ProgrammaticScriptInjector13GetCssSourcesENS_5mojom11RunLocationEPNSt3__13setINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_4lessISA_EENS8_ISA_EEEEPm(%"class.std::__1::vector.74"* noalias nocapture sret, %"class.extensions::ProgrammaticScriptInjector"* nocapture readonly, i32, %"class.std::__1::set"* nocapture readnone, i64* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::WebString", align 8
  %7 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %9, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !12
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8, !noalias !12
  %17 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !12
  %19 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %20 = zext i8 %13 to i64
  %21 = select i1 %14, i8* %16, i8* %19
  %22 = select i1 %14, i64 %18, i64 %20
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %6, i8* %21, i64 %22) #10
  %23 = call i8* @_Znwm(i64 8) #11
  %24 = bitcast i8* %23 to %"class.blink::WebString"*
  %25 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::vector.74"* %0 to i8**
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 8
  %28 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.blink::WebString"** %28 to i8**
  store i8* %27, i8** %29, align 8
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %24, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #10
  %30 = bitcast %"class.blink::WebString"** %25 to i64*
  %31 = ptrtoint i8* %27 to i64
  store i64 %31, i64* %30, align 8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions26ProgrammaticScriptInjector19OnInjectionCompleteENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS_5mojom11RunLocationE(%"class.extensions::ProgrammaticScriptInjector"*, %"class.base::Value"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.absl::optional.12", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = ptrtoint %"class.base::Value"* %1 to i64
  %9 = icmp eq %"class.base::Value"* %1, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %6, %"class.base::Value"* nonnull %1) #10
  %12 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %14, label %18, label %16

16:                                               ; preds = %10
  %17 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* %15, %"class.base::Value"* nonnull dereferenceable(32) %6) #10
  br label %19

18:                                               ; preds = %10
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %15, %"class.base::Value"* nonnull dereferenceable(32) %6) #10
  store i8 1, i8* %12, align 8
  br label %19

19:                                               ; preds = %16, %18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  br label %20

20:                                               ; preds = %3, %19
  %21 = phi i64 [ 0, %19 ], [ %8, %3 ]
  %22 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  %23 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 6
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = icmp eq %"class.base::internal::BindStateBase"* %27, null
  br i1 %28, label %53, label %29

29:                                               ; preds = %20
  %30 = ptrtoint %"class.base::internal::BindStateBase"* %27 to i64
  %31 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 40, i1 false) #10
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %36) #10
  store i8 1, i8* %23, align 8
  %38 = bitcast %"class.base::OnceCallback"* %25 to i64*
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %35, %29
  %41 = phi i64 [ %39, %35 ], [ %30, %29 ]
  %42 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  %43 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %45 = inttoptr i64 %41 to %"class.base::internal::BindStateBase"*
  %46 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %45, i64 0, i32 1
  %47 = bitcast void ()** %46 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)**
  %48 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)** %47, align 8
  call void %48(%"class.base::internal::BindStateBase"* %45, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %class.GURL* dereferenceable(120) %31, %"class.absl::optional.12"* nonnull dereferenceable(40) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  %49 = load i8, i8* %23, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %52) #10
  store i8 0, i8* %23, align 8
  br label %53

53:                                               ; preds = %20, %40, %51
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23)
  %54 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %62 = icmp eq i64 %21, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = inttoptr i64 %21 to %"class.base::Value"*
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %64) #10
  %65 = inttoptr i64 %21 to i8*
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %61, %63
  ret void
}

declare void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions26ProgrammaticScriptInjector6FinishERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ProgrammaticScriptInjector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.absl::optional.12", align 8
  %5 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 6
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %2
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %8 to i64
  %12 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 40, i1 false) #10
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %19, %"class.base::Value"* dereferenceable(32) %18) #10
  store i8 1, i8* %13, align 8
  %20 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %10, %17
  %23 = phi i64 [ %21, %17 ], [ %11, %10 ]
  %24 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %23, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %27 = inttoptr i64 %23 to %"class.base::internal::BindStateBase"*
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %29 = bitcast void ()** %28 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)**
  %30 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)** %29, align 8
  call void %30(%"class.base::internal::BindStateBase"* %27, %"class.std::__1::basic_string"* dereferenceable(24) %1, %class.GURL* dereferenceable(120) %12, %"class.absl::optional.12"* nonnull dereferenceable(40) %4) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %31 = load i8, i8* %13, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %34) #10
  store i8 0, i8* %13, align 8
  br label %35

35:                                               ; preds = %2, %33, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions26ProgrammaticScriptInjector15OnWillNotInjectENS_14ScriptInjector19InjectFailureReasonE(%"class.extensions::ProgrammaticScriptInjector"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.absl::optional.12", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #10
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %12, label %122

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %13, align 8
  %15 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %12
  %19 = tail call %"class.extensions::RendererExtensionRegistry"* @_ZN10extensions25RendererExtensionRegistry3GetEv() #10
  %20 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %13, align 8
  %21 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %20, i64 0, i32 0, i32 0, i32 1
  %22 = tail call %"class.extensions::Extension"* @_ZNK10extensions25RendererExtensionRegistry7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::RendererExtensionRegistry"* %19, %"class.std::__1::basic_string"* dereferenceable(24) %21) #10
  %23 = icmp eq %"class.extensions::Extension"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %22, i64 0, i32 8, i32 0, i32 0, i32 0
  %26 = load %"class.extensions::PermissionsData"*, %"class.extensions::PermissionsData"** %25, align 8
  %27 = getelementptr inbounds %"class.extensions::PermissionsData", %"class.extensions::PermissionsData"* %26, i64 0, i32 5, i32 0, i32 0, i32 0
  %28 = load %"class.extensions::PermissionSet"*, %"class.extensions::PermissionSet"** %27, align 8
  %29 = tail call zeroext i1 @_ZNK10extensions13PermissionSet16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionSet"* %28, i32 139) #10
  br i1 %29, label %48, label %30

30:                                               ; preds = %18, %12, %24
  %31 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kCannotAccessPageE, i64 0, i64 0), align 1
  %32 = tail call i1 @llvm.is.constant.i8(i8 %31) #10
  br i1 %32, label %33, label %46

33:                                               ; preds = %30
  %34 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kCannotAccessPageE, i64 0, i64 0)) #10
  %35 = icmp ult i64 %34, 23
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = trunc i64 %34 to i8
  store i8 %39, i8* %38, align 1
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kCannotAccessPageE, i64 0, i64 0), i64 %34, i1 false) #10
  br label %42

42:                                               ; preds = %41, %36
  %43 = getelementptr inbounds i8, i8* %9, i64 %34
  store i8 0, i8* %43, align 1
  br label %122

44:                                               ; preds = %33
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kCannotAccessPageE, i64 0, i64 0), i64 %34) #10
  br label %122

46:                                               ; preds = %30
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kCannotAccessPageE, i64 0, i64 0)) #10
  br label %122

48:                                               ; preds = %24
  %49 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 4
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  br label %59

57:                                               ; preds = %48
  %58 = zext i8 %52 to i64
  br label %59

59:                                               ; preds = %54, %57
  %60 = phi i64 [ %56, %54 ], [ %58, %57 ]
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %98, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  %64 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors21kCannotAccessAboutUrlE, i64 0, i64 0)) #10
  %65 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  %66 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %65) #10
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %74 = select i1 %70, i8* %72, i8* %73
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %69 to i64
  %78 = select i1 %70, i64 %76, i64 %77
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %80 = load i8, i8* %51, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %85 = select i1 %81, i8* %83, i8* %84
  store i8* %85, i8** %79, align 8
  %86 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %87 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %80 to i64
  %90 = select i1 %81, i64 %88, i64 %89
  store i64 %90, i64* %86, align 8
  call void @_ZN10extensions10ErrorUtils18FormatErrorMessageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_S6_(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors21kCannotAccessAboutUrlE, i64 0, i64 0), i64 %64, i8* %74, i64 %78, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %7) #10
  %91 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %62
  %96 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %95, %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %63, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  br label %122

98:                                               ; preds = %59
  %99 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #10
  %100 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors24kCannotAccessPageWithUrlE, i64 0, i64 0)) #10
  %101 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %101) #10
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  %110 = select i1 %106, i8* %108, i8* %109
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %105 to i64
  %114 = select i1 %106, i64 %112, i64 %113
  call void @_ZN10extensions10ErrorUtils18FormatErrorMessageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors24kCannotAccessPageWithUrlE, i64 0, i64 0), i64 %100, i8* %110, i64 %114) #10
  %115 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %98
  %120 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %120) #11
  br label %121

121:                                              ; preds = %119, %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %99, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #10
  br label %122

122:                                              ; preds = %46, %44, %42, %2, %121, %97
  %123 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123)
  %124 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 6
  store i8 1, i8* %124, align 8
  %125 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 2
  %126 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %126, align 8
  %128 = icmp eq %"class.base::internal::BindStateBase"* %127, null
  br i1 %128, label %153, label %129

129:                                              ; preds = %122
  %130 = ptrtoint %"class.base::internal::BindStateBase"* %127 to i64
  %131 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 3
  %132 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 40, i1 false) #10
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %137 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %137, %"class.base::Value"* dereferenceable(32) %136) #10
  store i8 1, i8* %123, align 8
  %138 = bitcast %"class.base::OnceCallback"* %125 to i64*
  %139 = load i64, i64* %138, align 8
  br label %140

140:                                              ; preds = %135, %129
  %141 = phi i64 [ %139, %135 ], [ %130, %129 ]
  %142 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #10
  %143 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %126, align 8
  %144 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %145 = inttoptr i64 %141 to %"class.base::internal::BindStateBase"*
  %146 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %145, i64 0, i32 1
  %147 = bitcast void ()** %146 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)**
  %148 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %class.GURL*, %"class.absl::optional.12"*)** %147, align 8
  call void %148(%"class.base::internal::BindStateBase"* %145, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %class.GURL* dereferenceable(120) %131, %"class.absl::optional.12"* nonnull dereferenceable(40) %4) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  %149 = load i8, i8* %123, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %152) #10
  store i8 0, i8* %123, align 8
  br label %153

153:                                              ; preds = %122, %140, %151
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123)
  %154 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %153
  %159 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %159) #11
  br label %160

160:                                              ; preds = %153, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions26ProgrammaticScriptInjector17CanShowUrlInErrorEv(%"class.extensions::ProgrammaticScriptInjector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ProgrammaticScriptInjector", %"class.extensions::ProgrammaticScriptInjector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = tail call %"class.extensions::RendererExtensionRegistry"* @_ZN10extensions25RendererExtensionRegistry3GetEv() #10
  %9 = load %"class.extensions::mojom::ExecuteCodeParams"*, %"class.extensions::mojom::ExecuteCodeParams"** %2, align 8
  %10 = getelementptr inbounds %"class.extensions::mojom::ExecuteCodeParams", %"class.extensions::mojom::ExecuteCodeParams"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = tail call %"class.extensions::Extension"* @_ZNK10extensions25RendererExtensionRegistry7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::RendererExtensionRegistry"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %10) #10
  %12 = icmp eq %"class.extensions::Extension"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %11, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.extensions::PermissionsData"*, %"class.extensions::PermissionsData"** %14, align 8
  %16 = getelementptr inbounds %"class.extensions::PermissionsData", %"class.extensions::PermissionsData"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %"class.extensions::PermissionSet"*, %"class.extensions::PermissionSet"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK10extensions13PermissionSet16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionSet"* %17, i32 139) #10
  br label %19

19:                                               ; preds = %13, %7, %1
  %20 = phi i1 [ false, %1 ], [ %18, %13 ], [ false, %7 ]
  ret i1 %20
}

declare void @_ZN10extensions10ErrorUtils18FormatErrorMessageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_S6_(%"class.std::__1::basic_string"* sret, i8*, i64, i8*, i64, %"class.base::BasicStringPiece"* byval(%"class.base::BasicStringPiece") align 8) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZN10extensions10ErrorUtils18FormatErrorMessageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.std::__1::basic_string"* sret, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.extensions::RendererExtensionRegistry"* @_ZN10extensions25RendererExtensionRegistry3GetEv() local_unnamed_addr #1

declare %"class.extensions::Extension"* @_ZNK10extensions25RendererExtensionRegistry7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::RendererExtensionRegistry"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions13PermissionSet16HasAPIPermissionENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionSet"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions5mojom17ExecuteCodeParamsD1Ev(%"class.extensions::mojom::ExecuteCodeParams"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #1

declare void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL*, %"class.std::__1::basic_string"*, %"struct.url::Parsed"* dereferenceable(80), i1 zeroext) unnamed_addr #1

declare i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #2

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink6WebURLcv4GURLEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink6WebURLcv4GURLEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!11 = distinct !{!11, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!14 = distinct !{!14, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
