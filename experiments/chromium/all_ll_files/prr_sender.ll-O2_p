; ModuleID = '../../net/third_party/quiche/src/quic/core/congestion_control/prr_sender.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/congestion_control/prr_sender.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::PrrSender" = type { i64, i64, i64, i64 }

@_ZN4quic9PrrSenderC1Ev = hidden unnamed_addr alias void (%"class.quic::PrrSender"*), void (%"class.quic::PrrSender"*)* @_ZN4quic9PrrSenderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic9PrrSenderC2Ev(%"class.quic::PrrSender"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::PrrSender"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic9PrrSender12OnPacketSentEm(%"class.quic::PrrSender"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic9PrrSender12OnPacketLostEm(%"class.quic::PrrSender"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 3
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic9PrrSender13OnPacketAckedEm(%"class.quic::PrrSender"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = insertelement <2 x i64> <i64 undef, i64 1>, i64 %1, i32 0
  %7 = add <2 x i64> %5, %6
  %8 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic9PrrSender7CanSendEmmm(%"class.quic::PrrSender"* nocapture readonly, i64, i64, i64) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = icmp ult i64 %2, 1460
  %9 = or i1 %8, %7
  br i1 %9, label %26, label %10

10:                                               ; preds = %4
  %11 = icmp ugt i64 %1, %2
  %12 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br i1 %11, label %14, label %20

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %16, 1460
  %18 = add i64 %17, %13
  %19 = icmp ugt i64 %18, %6
  br label %26

20:                                               ; preds = %10
  %21 = mul i64 %13, %3
  %22 = getelementptr inbounds %"class.quic::PrrSender", %"class.quic::PrrSender"* %0, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = mul i64 %23, %6
  %25 = icmp ugt i64 %21, %24
  br label %26

26:                                               ; preds = %20, %14, %4
  %27 = phi i1 [ true, %4 ], [ %19, %14 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
