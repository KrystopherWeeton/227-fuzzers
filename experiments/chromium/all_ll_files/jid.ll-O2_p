; ModuleID = '../../third_party/libjingle_xmpp/xmpp/jid.cc'
source_filename = "../../third_party/libjingle_xmpp/xmpp/jid.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }

@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"/\00", align 1

@_ZN11jingle_xmpp3JidC1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::Jid"*), void (%"class.jingle_xmpp::Jid"*)* @_ZN11jingle_xmpp3JidC2Ev
@_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*), void (%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp3JidC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_ = hidden unnamed_addr alias void (%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp3JidC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_
@_ZN11jingle_xmpp3JidD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::Jid"*), void (%"class.jingle_xmpp::Jid"*)* @_ZN11jingle_xmpp3JidD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3JidC2Ev(%"class.jingle_xmpp::Jid"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3JidC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %7 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %9 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 72, i1 false)
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %100, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 47, i64 0) #14
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %24 = icmp eq i64 %22, -1
  br i1 %24, label %25, label %50

25:                                               ; preds = %21
  %26 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #15
  unreachable

30:                                               ; preds = %25
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #16
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %23, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %26, i1 false) #14
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %23, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  br label %53

50:                                               ; preds = %21
  %51 = add nuw i64 %22, 1
  %52 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %51, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %52) #14
  br label %53

53:                                               ; preds = %50, %47
  %54 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #16
  br label %61

61:                                               ; preds = %58, %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %23, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  %62 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 64, i64 0) #14
  %63 = icmp ult i64 %62, %22
  %64 = icmp ne i64 %62, -1
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #14
  %68 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 %62, %"class.std::__1::allocator"* dereferenceable(1) %68) #14
  %69 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #16
  br label %76

76:                                               ; preds = %73, %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %67, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #14
  %77 = add nuw i64 %62, 1
  br label %78

78:                                               ; preds = %61, %76
  %79 = phi i64 [ %77, %76 ], [ 0, %61 ]
  br i1 %24, label %80, label %87

80:                                               ; preds = %78
  %81 = load i8, i8* %12, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = load i64, i64* %16, align 8
  br label %87

85:                                               ; preds = %80
  %86 = zext i8 %81 to i64
  br label %87

87:                                               ; preds = %85, %83, %78
  %88 = phi i64 [ %22, %78 ], [ %84, %83 ], [ %86, %85 ]
  %89 = sub i64 %88, %79
  %90 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #14
  %91 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %79, i64 %89, %"class.std::__1::allocator"* dereferenceable(1) %91) #14
  %92 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #16
  br label %99

99:                                               ; preds = %96, %87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %90, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #14
  call void @_ZN11jingle_xmpp3Jid15ValidateOrResetEv(%"class.jingle_xmpp::Jid"* %0)
  br label %100

100:                                              ; preds = %2, %99
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid15ValidateOrResetEv(%"class.jingle_xmpp::Jid"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #14
  store i8 -86, i8* %2, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14
  store i8 -86, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  call void @_ZN11jingle_xmpp3Jid8PrepNodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %9, i8* nonnull %2)
  %10 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %14, %1
  %18 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %8, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  call void @_ZN11jingle_xmpp3Jid10PrepDomainERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %20, i8* nonnull %3)
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #16
  br label %28

28:                                               ; preds = %25, %17
  %29 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %19, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  %30 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  call void @_ZN11jingle_xmpp3Jid12PrepResourceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* dereferenceable(24) %31, i8* nonnull %4)
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %36, %28
  %40 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %30, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #14
  %41 = load i8, i8* %2, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = load i8, i8* %3, align 1
  %44 = icmp eq i8 %43, 0
  %45 = or i1 %42, %44
  %46 = load i8, i8* %4, align 1
  %47 = icmp eq i8 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %73

49:                                               ; preds = %39
  %50 = load i8, i8* %11, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %55, align 8
  br label %57

56:                                               ; preds = %49
  store i8 0, i8* %18, align 1
  store i8 0, i8* %11, align 1
  br label %57

57:                                               ; preds = %52, %56
  %58 = load i8, i8* %22, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %63, align 8
  br label %65

64:                                               ; preds = %57
  store i8 0, i8* %29, align 1
  store i8 0, i8* %22, align 1
  br label %65

65:                                               ; preds = %60, %64
  %66 = load i8, i8* %33, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %71, align 8
  br label %73

72:                                               ; preds = %65
  store i8 0, i8* %40, align 1
  store i8 0, i8* %33, align 1
  br label %73

73:                                               ; preds = %72, %68, %39
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3JidC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #14
  br label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %15, i64 %17) #14
  br label %18

18:                                               ; preds = %9, %12
  %19 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #14
  br label %32

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %29, i64 %31) #14
  br label %32

32:                                               ; preds = %24, %27
  %33 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #14
  br label %46

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %33, i8* %43, i64 %45) #14
  br label %46

46:                                               ; preds = %38, %41
  tail call void @_ZN11jingle_xmpp3Jid15ValidateOrResetEv(%"class.jingle_xmpp::Jid"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid8PrepNodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i8, align 1
  store i8 0, i8* %2, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = select i1 %12, i64 %16, i64 %17
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %20, label %106

20:                                               ; preds = %3
  %21 = load i8*, i8** %13, align 8
  %22 = select i1 %12, i8* %21, i8* %14
  br label %23

23:                                               ; preds = %20, %61
  %24 = phi i8* [ %62, %61 ], [ %22, %20 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 1, i8* %5, align 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp sgt i8 %25, -1
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = tail call i32** @__ctype_tolower_loc() #17
  %29 = load i32*, i32** %28, align 8
  %30 = zext i8 %25 to i64
  %31 = getelementptr inbounds i32, i32* %29, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext %33) #14
  br label %61

34:                                               ; preds = %23
  %35 = call signext i8 @_ZN11jingle_xmpp3Jid13PrepNodeAsciiEcPb(i8 signext %25, i8* nonnull %5)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext %35) #14
  %36 = load i8, i8* %5, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %61

38:                                               ; preds = %34
  %39 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %42) #15
  unreachable

43:                                               ; preds = %38
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %39, 16
  %47 = and i64 %46, -16
  %48 = call i8* @_Znwm(i64 %47) #16
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %52, align 8
  br label %59

53:                                               ; preds = %43
  %54 = trunc i64 %39 to i8
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %58 = icmp eq i64 %39, 0
  br i1 %58, label %108, label %59

59:                                               ; preds = %53, %45
  %60 = phi i8* [ %48, %45 ], [ %57, %53 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %39, i1 false) #14
  br label %108

61:                                               ; preds = %27, %34
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  %62 = getelementptr inbounds i8, i8* %24, i64 1
  %63 = load i8, i8* %10, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %13, align 8
  %66 = load i64, i64* %15, align 8
  %67 = zext i8 %63 to i64
  %68 = select i1 %64, i8* %65, i8* %14
  %69 = select i1 %64, i64 %66, i64 %67
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = icmp ult i8* %62, %70
  br i1 %71, label %23, label %72

72:                                               ; preds = %61
  %73 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = load i64, i64* %8, align 8
  %77 = icmp ugt i64 %76, 1023
  %78 = icmp slt i8 %75, 0
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %106

80:                                               ; preds = %72
  %81 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %82 = icmp ugt i64 %81, -17
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %84) #15
  unreachable

85:                                               ; preds = %80
  %86 = icmp ult i64 %81, 23
  br i1 %86, label %95, label %87

87:                                               ; preds = %85
  %88 = add nuw i64 %81, 16
  %89 = and i64 %88, -16
  %90 = call i8* @_Znwm(i64 %89) #16
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %90, i8** %91, align 8
  %92 = or i64 %89, -9223372036854775808
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %81, i64* %94, align 8
  br label %101

95:                                               ; preds = %85
  %96 = trunc i64 %81 to i8
  %97 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  store i8 %96, i8* %98, align 1
  %99 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %100 = icmp eq i64 %81, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %95, %87
  %102 = phi i8* [ %90, %87 ], [ %99, %95 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %81, i1 false) #14
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i8* [ %99, %95 ], [ %102, %101 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %81
  store i8 0, i8* %105, align 1
  br label %115

106:                                              ; preds = %72, %3
  store i8 1, i8* %2, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %6, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %117

108:                                              ; preds = %59, %53
  %109 = phi i8* [ %57, %53 ], [ %60, %59 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %39
  store i8 0, i8* %110, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  %111 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %103, %108
  %116 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %116) #16
  br label %117

117:                                              ; preds = %106, %108, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid10PrepDomainERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  store i8 0, i8* %2, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %34, label %51

22:                                               ; preds = %46, %42
  %23 = phi i64 [ %35, %42 ], [ %50, %46 ]
  %24 = phi i8* [ %36, %42 ], [ %49, %46 ]
  %25 = phi i8 [ %37, %42 ], [ %48, %46 ]
  %26 = phi i8* [ %38, %42 ], [ %47, %46 ]
  %27 = getelementptr inbounds i8, i8* %39, i64 1
  %28 = icmp slt i8 %25, 0
  %29 = zext i8 %25 to i64
  %30 = select i1 %28, i8* %24, i8* %15
  %31 = select i1 %28, i64 %23, i64 %29
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = icmp ult i8* %27, %32
  br i1 %33, label %34, label %51

34:                                               ; preds = %3, %22
  %35 = phi i64 [ %23, %22 ], [ %18, %3 ]
  %36 = phi i8* [ %24, %22 ], [ %14, %3 ]
  %37 = phi i8 [ %25, %22 ], [ %11, %3 ]
  %38 = phi i8* [ %26, %22 ], [ %16, %3 ]
  %39 = phi i8* [ %27, %22 ], [ %16, %3 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 1, i8* %4, align 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 46
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br label %22

43:                                               ; preds = %34
  call void @_ZN11jingle_xmpp3Jid15PrepDomainLabelENSt3__111__wrap_iterIPKcEES5_PNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(i8* %38, i8* %39, %"class.std::__1::basic_string"* nonnull %5, i8* nonnull %4) #14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %5, i8 signext 46) #14
  %44 = load i8, i8* %4, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %56

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %39, i64 1
  %48 = load i8, i8* %10, align 1
  %49 = load i8*, i8** %13, align 8
  %50 = load i64, i64* %17, align 8
  br label %22

51:                                               ; preds = %22, %3
  %52 = phi i64 [ %20, %3 ], [ %31, %22 ]
  %53 = phi i8* [ %16, %3 ], [ %30, %22 ]
  %54 = phi i8* [ %16, %3 ], [ %26, %22 ]
  %55 = getelementptr inbounds i8, i8* %53, i64 %52
  call void @_ZN11jingle_xmpp3Jid15PrepDomainLabelENSt3__111__wrap_iterIPKcEES5_PNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(i8* %54, i8* %55, %"class.std::__1::basic_string"* nonnull %5, i8* %2) #14
  br label %56

56:                                               ; preds = %43, %51
  %57 = load i8, i8* %2, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %82

59:                                               ; preds = %56
  %60 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %61 = icmp ugt i64 %60, -17
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %63) #15
  unreachable

64:                                               ; preds = %59
  %65 = icmp ult i64 %60, 23
  br i1 %65, label %74, label %66

66:                                               ; preds = %64
  %67 = add nuw i64 %60, 16
  %68 = and i64 %67, -16
  %69 = call i8* @_Znwm(i64 %68) #16
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %69, i8** %70, align 8
  %71 = or i64 %68, -9223372036854775808
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %60, i64* %73, align 8
  br label %80

74:                                               ; preds = %64
  %75 = trunc i64 %60 to i8
  %76 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 %75, i8* %77, align 1
  %78 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %79 = icmp eq i64 %60, 0
  br i1 %79, label %118, label %80

80:                                               ; preds = %74, %66
  %81 = phi i8* [ %69, %66 ], [ %78, %74 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %60, i1 false) #14
  br label %118

82:                                               ; preds = %56
  %83 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = load i64, i64* %8, align 8
  %88 = icmp ugt i64 %87, 1023
  %89 = and i1 %86, %88
  br i1 %89, label %90, label %116

90:                                               ; preds = %82
  %91 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %92 = icmp ugt i64 %91, -17
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %94) #15
  unreachable

95:                                               ; preds = %90
  %96 = icmp ult i64 %91, 23
  br i1 %96, label %105, label %97

97:                                               ; preds = %95
  %98 = add nuw i64 %91, 16
  %99 = and i64 %98, -16
  %100 = call i8* @_Znwm(i64 %99) #16
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = or i64 %99, -9223372036854775808
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %104, align 8
  br label %111

105:                                              ; preds = %95
  %106 = trunc i64 %91 to i8
  %107 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  store i8 %106, i8* %108, align 1
  %109 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %110 = icmp eq i64 %91, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %105, %97
  %112 = phi i8* [ %100, %97 ], [ %109, %105 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %91, i1 false) #14
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i8* [ %109, %105 ], [ %112, %111 ]
  %115 = getelementptr inbounds i8, i8* %114, i64 %91
  store i8 0, i8* %115, align 1
  br label %125

116:                                              ; preds = %82
  store i8 1, i8* %2, align 1
  %117 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* nonnull align 8 %6, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %127

118:                                              ; preds = %80, %74
  %119 = phi i8* [ %78, %74 ], [ %81, %80 ]
  %120 = getelementptr inbounds i8, i8* %119, i64 %60
  store i8 0, i8* %120, align 1
  %121 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %113, %118
  %126 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %126) #16
  br label %127

127:                                              ; preds = %116, %118, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid12PrepResourceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i8, align 1
  store i8 0, i8* %2, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = select i1 %12, i64 %16, i64 %17
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %20, label %72

20:                                               ; preds = %3
  %21 = load i8*, i8** %13, align 8
  %22 = select i1 %12, i8* %21, i8* %14
  br label %31

23:                                               ; preds = %37
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = load i64, i64* %8, align 8
  %28 = icmp ugt i64 %27, 1023
  %29 = icmp slt i8 %26, 0
  %30 = and i1 %29, %28
  br i1 %30, label %49, label %72

31:                                               ; preds = %20, %37
  %32 = phi i8* [ %39, %37 ], [ %22, %20 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 1, i8* %5, align 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = call signext i8 @_ZN11jingle_xmpp3Jid17PrepResourceAsciiEcPb(i8 signext %33, i8* nonnull %5)
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi i8 [ %36, %35 ], [ %33, %31 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext %38) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  %39 = getelementptr inbounds i8, i8* %32, i64 1
  %40 = load i8, i8* %10, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i8*, i8** %13, align 8
  %43 = load i64, i64* %15, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i8* %42, i8* %14
  %46 = select i1 %41, i64 %43, i64 %44
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = icmp ult i8* %39, %47
  br i1 %48, label %31, label %23

49:                                               ; preds = %23
  %50 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %51 = icmp ugt i64 %50, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %53) #15
  unreachable

54:                                               ; preds = %49
  %55 = icmp ult i64 %50, 23
  br i1 %55, label %64, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %50, 16
  %58 = and i64 %57, -16
  %59 = call i8* @_Znwm(i64 %58) #16
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8
  %61 = or i64 %58, -9223372036854775808
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %50, i64* %63, align 8
  br label %70

64:                                               ; preds = %54
  %65 = trunc i64 %50 to i8
  %66 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  store i8 %65, i8* %67, align 1
  %68 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %69 = icmp eq i64 %50, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64, %56
  %71 = phi i8* [ %59, %56 ], [ %68, %64 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %50, i1 false) #14
  br label %74

72:                                               ; preds = %3, %23
  store i8 1, i8* %2, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %6, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %78

74:                                               ; preds = %70, %64
  %75 = phi i8* [ %68, %64 ], [ %71, %70 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %50
  store i8 0, i8* %76, align 1
  %77 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %72, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11jingle_xmpp3Jid3StrEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::Jid"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %2
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %45

19:                                               ; preds = %16
  %20 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %21 = icmp ugt i64 %20, -17
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %23) #15
  unreachable

24:                                               ; preds = %19
  %25 = icmp ult i64 %20, 23
  br i1 %25, label %34, label %26

26:                                               ; preds = %24
  %27 = add nuw i64 %20, 16
  %28 = and i64 %27, -16
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = or i64 %28, -9223372036854775808
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %33, align 8
  br label %40

34:                                               ; preds = %24
  %35 = trunc i64 %20 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %39 = icmp eq i64 %20, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34, %26
  %41 = phi i8* [ %29, %26 ], [ %38, %34 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %20, i1 false) #14
  br label %42

42:                                               ; preds = %34, %40
  %43 = phi i8* [ %38, %34 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %20
  store i8 0, i8* %44, align 1
  br label %152

45:                                               ; preds = %16
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #14
  %48 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  br label %57

55:                                               ; preds = %45
  %56 = zext i8 %50 to i64
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i64 [ %54, %52 ], [ %56, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %106, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #14
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #14, !alias.scope !3
  br i1 %51, label %65, label %70

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8, !noalias !3
  %68 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !noalias !3
  br label %73

70:                                               ; preds = %60
  %71 = zext i8 %50 to i64
  %72 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  br label %73

73:                                               ; preds = %70, %65
  %74 = phi i64 [ %67, %65 ], [ %71, %70 ]
  %75 = phi i8* [ %69, %65 ], [ %72, %70 ]
  %76 = add i64 %74, 1
  %77 = icmp ugt i64 %76, -17
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %79) #15
  unreachable

80:                                               ; preds = %73
  %81 = icmp ult i64 %76, 23
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = add nuw i64 %74, 17
  %84 = and i64 %83, -16
  %85 = tail call i8* @_Znwm(i64 %84) #16
  store i8* %85, i8** %62, align 8, !alias.scope !3
  %86 = or i64 %84, -9223372036854775808
  store i64 %86, i64* %64, align 8, !alias.scope !3
  store i64 %74, i64* %63, align 8, !alias.scope !3
  br label %92

87:                                               ; preds = %80
  %88 = trunc i64 %74 to i8
  %89 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  store i8 %88, i8* %90, align 1, !alias.scope !3
  %91 = icmp eq i64 %74, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %82, %87
  %93 = phi i8* [ %85, %82 ], [ %61, %87 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %93, i8* align 1 %75, i64 %74, i1 false) #14
  br label %94

94:                                               ; preds = %87, %92
  %95 = phi i8* [ %61, %87 ], [ %93, %92 ]
  %96 = getelementptr inbounds i8, i8* %95, i64 %74
  store i8 0, i8* %96, align 1
  %97 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #14
  %98 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %94
  %103 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %103) #16
  br label %104

104:                                              ; preds = %102, %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %61, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #14
  %105 = load i8, i8* %8, align 1
  br label %106

106:                                              ; preds = %104, %57
  %107 = phi i8 [ %105, %104 ], [ %9, %57 ]
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %114 = zext i8 %107 to i64
  %115 = select i1 %108, i8* %110, i8* %113
  %116 = select i1 %108, i64 %112, i64 %114
  %117 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %115, i64 %116) #14
  %118 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %106
  %124 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  br label %128

126:                                              ; preds = %106
  %127 = zext i8 %121 to i64
  br label %128

128:                                              ; preds = %123, %126
  %129 = phi i64 [ %125, %123 ], [ %127, %126 ]
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %150, label %131

131:                                              ; preds = %128
  %132 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #14
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %118) #14
  %133 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %135 to i64
  %142 = select i1 %136, i8* %138, i8* %132
  %143 = select i1 %136, i64 %140, i64 %141
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %142, i64 %143) #14
  %145 = load i8, i8* %134, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %131
  %148 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %148) #16
  br label %149

149:                                              ; preds = %131, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #14
  br label %150

150:                                              ; preds = %128, %149
  %151 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %46, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  br label %152

152:                                              ; preds = %150, %42
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_xmpp3Jid7IsValidEv(%"class.jingle_xmpp::Jid"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp ne i64 %13, 0
  ret i1 %14
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3JidD2Ev(%"class.jingle_xmpp::Jid"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #16
  br label %19

19:                                               ; preds = %10, %16
  %20 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_xmpp3Jid7IsEmptyEv(%"class.jingle_xmpp::Jid"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %14
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  br label %39

37:                                               ; preds = %28
  %38 = zext i8 %32 to i64
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i64 [ %36, %34 ], [ %38, %37 ]
  %41 = icmp eq i64 %40, 0
  br label %42

42:                                               ; preds = %39, %25, %11
  %43 = phi i1 [ false, %25 ], [ false, %11 ], [ %41, %39 ]
  ret i1 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_xmpp3Jid6IsBareEv(%"class.jingle_xmpp::Jid"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %9, %6
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = icmp eq i64 %12, 0
  %14 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  br i1 %13, label %18, label %42

18:                                               ; preds = %11
  %19 = icmp slt i8 %17, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %18
  %24 = zext i8 %17 to i64
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  br label %39

37:                                               ; preds = %28
  %38 = zext i8 %32 to i64
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i64 [ %36, %34 ], [ %38, %37 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %66, label %42

42:                                               ; preds = %11, %25, %39
  %43 = icmp slt i8 %17, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %42
  %48 = zext i8 %17 to i64
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i64 [ %46, %44 ], [ %48, %47 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  br label %63

61:                                               ; preds = %52
  %62 = zext i8 %56 to i64
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i64 [ %60, %58 ], [ %62, %61 ]
  %65 = icmp eq i64 %64, 0
  br label %66

66:                                               ; preds = %49, %63, %39
  %67 = phi i1 [ true, %39 ], [ false, %49 ], [ %65, %63 ]
  ret i1 %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_xmpp3Jid6IsFullEv(%"class.jingle_xmpp::Jid"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  br label %26

24:                                               ; preds = %15
  %25 = zext i8 %19 to i64
  br label %26

26:                                               ; preds = %21, %24
  %27 = phi i64 [ %23, %21 ], [ %25, %24 ]
  %28 = icmp ne i64 %27, 0
  br label %29

29:                                               ; preds = %12, %26
  %30 = phi i1 [ false, %12 ], [ %28, %26 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11jingle_xmpp3Jid7BareJidEv(%"class.jingle_xmpp::Jid"* noalias sret, %"class.jingle_xmpp::Jid"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 72, i1 false) #14
  br label %150

19:                                               ; preds = %14
  br i1 %8, label %20, label %23

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %19
  %24 = zext i8 %7 to i64
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  br label %39

37:                                               ; preds = %28
  %38 = zext i8 %32 to i64
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i64 [ %36, %34 ], [ %38, %37 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %84

42:                                               ; preds = %39, %25
  %43 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %49 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #14
  br label %57

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  %52 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %53, i64 %55) #14
  %56 = load i8, i8* %6, align 1
  br label %57

57:                                               ; preds = %50, %47
  %58 = phi i8 [ %56, %50 ], [ %7, %47 ]
  %59 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %60 = icmp slt i8 %58, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #14
  br label %69

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %59, i8* %66, i64 %68) #14
  br label %69

69:                                               ; preds = %64, %61
  %70 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %71 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %69
  %77 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #14
  br label %150

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %70, i8* %81, i64 %83) #14
  br label %150

84:                                               ; preds = %39
  %85 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #14
  %86 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %87 = icmp ugt i64 %86, -17
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %89) #15
  unreachable

90:                                               ; preds = %84
  %91 = icmp ult i64 %86, 23
  br i1 %91, label %100, label %92

92:                                               ; preds = %90
  %93 = add nuw i64 %86, 16
  %94 = and i64 %93, -16
  %95 = tail call i8* @_Znwm(i64 %94) #16
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = or i64 %94, -9223372036854775808
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %99, align 8
  br label %105

100:                                              ; preds = %90
  %101 = trunc i64 %86 to i8
  %102 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  store i8 %101, i8* %103, align 1
  %104 = icmp eq i64 %86, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100, %92
  %106 = phi i8* [ %95, %92 ], [ %85, %100 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %106, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %86, i1 false) #14
  br label %107

107:                                              ; preds = %100, %105
  %108 = phi i8* [ %85, %100 ], [ %106, %105 ]
  %109 = getelementptr inbounds i8, i8* %108, i64 %86
  store i8 0, i8* %109, align 1
  %110 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %107
  %115 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %116 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #14
  br label %124

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  %119 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %118, i8* %120, i64 %122) #14
  %123 = load i8, i8* %6, align 1
  br label %124

124:                                              ; preds = %117, %114
  %125 = phi i8 [ %123, %117 ], [ %7, %114 ]
  %126 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %127 = icmp slt i8 %125, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  %130 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #14
  br label %136

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %126, i8* %133, i64 %135) #14
  br label %136

136:                                              ; preds = %131, %128
  %137 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %138 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %136
  %143 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 8 %85, i64 24, i1 false) #14
  tail call void @_ZN11jingle_xmpp3Jid15ValidateOrResetEv(%"class.jingle_xmpp::Jid"* %0) #14
  br label %149

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %137, i8* %146, i64 %148) #14
  tail call void @_ZN11jingle_xmpp3Jid15ValidateOrResetEv(%"class.jingle_xmpp::Jid"* %0) #14
  tail call void @_ZdlPv(i8* %146) #16
  br label %149

149:                                              ; preds = %142, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #14
  br label %150

150:                                              ; preds = %79, %76, %149, %17
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_xmpp3Jid10BareEqualsERKS0_(%"class.jingle_xmpp::Jid"* nocapture readonly, %"class.jingle_xmpp::Jid"* nocapture readonly dereferenceable(72)) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %104

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %104

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %104

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #14
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %104

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %54 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = icmp eq i64 %62, %70
  br i1 %71, label %72, label %104

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %76 = select i1 %58, i8* %74, i8* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %80 = select i1 %66, i8* %78, i8* %79
  %81 = icmp eq i64 %62, 0
  br i1 %58, label %88, label %82

82:                                               ; preds = %72
  br i1 %81, label %104, label %83

83:                                               ; preds = %82
  %84 = ptrtoint i8* %74 to i64
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %80, align 1
  %87 = icmp eq i8 %86, %85
  br i1 %87, label %92, label %104

88:                                               ; preds = %72
  br i1 %81, label %104, label %89

89:                                               ; preds = %88
  %90 = tail call i32 @bcmp(i8* %76, i8* %80, i64 %62) #14
  %91 = icmp eq i32 %90, 0
  br label %104

92:                                               ; preds = %83, %99
  %93 = phi i64 [ %96, %99 ], [ %61, %83 ]
  %94 = phi i8* [ %97, %99 ], [ %75, %83 ]
  %95 = phi i8* [ %100, %99 ], [ %80, %83 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %104

104:                                              ; preds = %44, %99, %92, %31, %83, %2, %89, %88, %82, %52, %49
  %105 = phi i1 [ false, %49 ], [ false, %52 ], [ %91, %89 ], [ true, %88 ], [ true, %82 ], [ false, %2 ], [ false, %83 ], [ false, %31 ], [ true, %92 ], [ false, %99 ], [ false, %44 ]
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid8CopyFromERKS0_(%"class.jingle_xmpp::Jid"*, %"class.jingle_xmpp::Jid"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  %4 = icmp eq %"class.jingle_xmpp::Jid"* %0, %1
  br i1 %4, label %96, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %17 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #14
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #14
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #14
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #14
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %36, i8* %51, i64 %53) #14
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %36, i8* %62, i64 %63) #14
  br label %65

65:                                               ; preds = %46, %49, %55
  %66 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %67 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %71, label %86, label %76

76:                                               ; preds = %65
  br i1 %75, label %80, label %77

77:                                               ; preds = %76
  %78 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #14
  br label %96

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %67, i8* %82, i64 %84) #14
  br label %96

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %92 = zext i8 %74 to i64
  %93 = select i1 %75, i8* %88, i8* %91
  %94 = select i1 %75, i64 %90, i64 %92
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %67, i8* %93, i64 %94) #14
  br label %96

96:                                               ; preds = %2, %77, %80, %86
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11jingle_xmpp3JideqERKS0_(%"class.jingle_xmpp::Jid"* nocapture readonly, %"class.jingle_xmpp::Jid"* nocapture readonly dereferenceable(72)) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %156

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %156

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %156

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #14
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %156

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %54 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = icmp eq i64 %62, %70
  br i1 %71, label %72, label %156

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %76 = select i1 %58, i8* %74, i8* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %80 = select i1 %66, i8* %78, i8* %79
  %81 = icmp eq i64 %62, 0
  br i1 %58, label %88, label %82

82:                                               ; preds = %72
  br i1 %81, label %104, label %83

83:                                               ; preds = %82
  %84 = ptrtoint i8* %74 to i64
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %80, align 1
  %87 = icmp eq i8 %86, %85
  br i1 %87, label %89, label %156

88:                                               ; preds = %72
  br i1 %81, label %104, label %101

89:                                               ; preds = %83, %96
  %90 = phi i64 [ %93, %96 ], [ %61, %83 ]
  %91 = phi i8* [ %94, %96 ], [ %75, %83 ]
  %92 = phi i8* [ %97, %96 ], [ %80, %83 ]
  %93 = add i64 %90, -1
  %94 = getelementptr inbounds i8, i8* %91, i64 1
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds i8, i8* %92, i64 1
  %98 = load i8, i8* %94, align 1
  %99 = load i8, i8* %97, align 1
  %100 = icmp eq i8 %98, %99
  br i1 %100, label %89, label %156

101:                                              ; preds = %88
  %102 = tail call i32 @bcmp(i8* %76, i8* %80, i64 %62) #14
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %156

104:                                              ; preds = %89, %82, %88, %101
  %105 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %106 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %107 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %109 to i64
  %114 = select i1 %110, i64 %112, i64 %113
  %115 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = zext i8 %117 to i64
  %122 = select i1 %118, i64 %120, i64 %121
  %123 = icmp eq i64 %114, %122
  br i1 %123, label %124, label %156

124:                                              ; preds = %104
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %128 = select i1 %110, i8* %126, i8* %127
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %132 = select i1 %118, i8* %130, i8* %131
  %133 = icmp eq i64 %114, 0
  br i1 %110, label %140, label %134

134:                                              ; preds = %124
  br i1 %133, label %156, label %135

135:                                              ; preds = %134
  %136 = ptrtoint i8* %126 to i64
  %137 = trunc i64 %136 to i8
  %138 = load i8, i8* %132, align 1
  %139 = icmp eq i8 %138, %137
  br i1 %139, label %144, label %156

140:                                              ; preds = %124
  br i1 %133, label %156, label %141

141:                                              ; preds = %140
  %142 = tail call i32 @bcmp(i8* %128, i8* %132, i64 %114) #14
  %143 = icmp eq i32 %142, 0
  br label %156

144:                                              ; preds = %135, %151
  %145 = phi i64 [ %148, %151 ], [ %113, %135 ]
  %146 = phi i8* [ %149, %151 ], [ %127, %135 ]
  %147 = phi i8* [ %152, %151 ], [ %132, %135 ]
  %148 = add i64 %145, -1
  %149 = getelementptr inbounds i8, i8* %146, i64 1
  %150 = icmp eq i64 %148, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds i8, i8* %147, i64 1
  %153 = load i8, i8* %149, align 1
  %154 = load i8, i8* %152, align 1
  %155 = icmp eq i8 %153, %154
  br i1 %155, label %144, label %156

156:                                              ; preds = %44, %96, %151, %144, %31, %83, %135, %52, %2, %141, %140, %134, %104, %101, %49
  %157 = phi i1 [ false, %101 ], [ false, %49 ], [ false, %104 ], [ %143, %141 ], [ true, %140 ], [ true, %134 ], [ false, %2 ], [ false, %52 ], [ false, %135 ], [ false, %83 ], [ false, %31 ], [ true, %144 ], [ false, %151 ], [ false, %96 ], [ false, %44 ]
  ret i1 %157
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK11jingle_xmpp3Jid7CompareERKS0_(%"class.jingle_xmpp::Jid"* nocapture readonly, %"class.jingle_xmpp::Jid"* nocapture readonly dereferenceable(72)) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %27

24:                                               ; preds = %2
  %25 = zext i8 %17 to i64
  %26 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi i64 [ %21, %19 ], [ %25, %24 ]
  %29 = phi i8* [ %23, %19 ], [ %26, %24 ]
  %30 = icmp ult i64 %14, %28
  %31 = select i1 %30, i64 %14, i64 %28
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = tail call i32 @memcmp(i8* %29, i8* %13, i64 %31) #14
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %120

36:                                               ; preds = %33, %27
  %37 = icmp ugt i64 %14, %28
  %38 = icmp eq i64 %14, %28
  %39 = select i1 %37, i32 -1, i32 1
  br i1 %38, label %40, label %120

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %52 = zext i8 %45 to i64
  %53 = select i1 %46, i8* %48, i8* %51
  %54 = select i1 %46, i64 %50, i64 %52
  %55 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %40
  %60 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  br label %67

64:                                               ; preds = %40
  %65 = zext i8 %57 to i64
  %66 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  br label %67

67:                                               ; preds = %64, %59
  %68 = phi i64 [ %61, %59 ], [ %65, %64 ]
  %69 = phi i8* [ %63, %59 ], [ %66, %64 ]
  %70 = icmp ult i64 %54, %68
  %71 = select i1 %70, i64 %54, i64 %68
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = tail call i32 @memcmp(i8* %69, i8* %53, i64 %71) #14
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %120

76:                                               ; preds = %73, %67
  %77 = icmp ugt i64 %54, %68
  %78 = icmp eq i64 %54, %68
  %79 = select i1 %77, i32 -1, i32 1
  br i1 %78, label %80, label %120

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %82 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %92 = zext i8 %85 to i64
  %93 = select i1 %86, i8* %88, i8* %91
  %94 = select i1 %86, i64 %90, i64 %92
  %95 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %80
  %100 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  br label %107

104:                                              ; preds = %80
  %105 = zext i8 %97 to i64
  %106 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  br label %107

107:                                              ; preds = %104, %99
  %108 = phi i64 [ %101, %99 ], [ %105, %104 ]
  %109 = phi i8* [ %103, %99 ], [ %106, %104 ]
  %110 = icmp ult i64 %94, %108
  %111 = select i1 %110, i64 %94, i64 %108
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %107
  %114 = tail call i32 @memcmp(i8* %109, i8* %93, i64 %111) #14
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %113, %107
  %117 = icmp ult i64 %108, %94
  %118 = zext i1 %110 to i32
  %119 = select i1 %117, i32 -1, i32 %118
  br label %120

120:                                              ; preds = %76, %36, %73, %33, %116, %113
  %121 = phi i32 [ %119, %116 ], [ %114, %113 ], [ %34, %33 ], [ %39, %36 ], [ %74, %73 ], [ %79, %76 ]
  ret i32 %121
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden signext i8 @_ZN11jingle_xmpp3Jid13PrepNodeAsciiEcPb(i8 signext, i8* nocapture) local_unnamed_addr #6 align 2 {
  store i8 1, i8* %1, align 1
  %3 = sext i8 %0 to i32
  switch i32 %3, label %7 [
    i32 65, label %4
    i32 66, label %4
    i32 67, label %4
    i32 68, label %4
    i32 69, label %4
    i32 70, label %4
    i32 71, label %4
    i32 72, label %4
    i32 73, label %4
    i32 74, label %4
    i32 75, label %4
    i32 76, label %4
    i32 77, label %4
    i32 78, label %4
    i32 79, label %4
    i32 80, label %4
    i32 81, label %4
    i32 82, label %4
    i32 83, label %4
    i32 84, label %4
    i32 85, label %4
    i32 86, label %4
    i32 87, label %4
    i32 88, label %4
    i32 89, label %4
    i32 90, label %4
    i32 0, label %6
    i32 1, label %6
    i32 2, label %6
    i32 3, label %6
    i32 4, label %6
    i32 5, label %6
    i32 6, label %6
    i32 7, label %6
    i32 8, label %6
    i32 9, label %6
    i32 10, label %6
    i32 11, label %6
    i32 12, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 18, label %6
    i32 19, label %6
    i32 20, label %6
    i32 21, label %6
    i32 22, label %6
    i32 23, label %6
    i32 32, label %6
    i32 38, label %6
    i32 47, label %6
    i32 58, label %6
    i32 60, label %6
    i32 62, label %6
    i32 64, label %6
    i32 34, label %6
    i32 39, label %6
    i32 127, label %6
  ]

4:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %5 = add i8 %0, 32
  br label %7

6:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  store i8 0, i8* %1, align 1
  br label %7

7:                                                ; preds = %2, %6, %4
  %8 = phi i8 [ 0, %6 ], [ %5, %4 ], [ %0, %2 ]
  ret i8 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden signext i8 @_ZN11jingle_xmpp3Jid17PrepResourceAsciiEcPb(i8 signext, i8* nocapture) local_unnamed_addr #6 align 2 {
  store i8 1, i8* %1, align 1
  %3 = sext i8 %0 to i32
  switch i32 %3, label %5 [
    i32 0, label %4
    i32 1, label %4
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %4
    i32 6, label %4
    i32 7, label %4
    i32 8, label %4
    i32 9, label %4
    i32 10, label %4
    i32 11, label %4
    i32 12, label %4
    i32 13, label %4
    i32 14, label %4
    i32 15, label %4
    i32 16, label %4
    i32 17, label %4
    i32 18, label %4
    i32 19, label %4
    i32 20, label %4
    i32 21, label %4
    i32 22, label %4
    i32 23, label %4
    i32 127, label %4
  ]

4:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  store i8 0, i8* %1, align 1
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i8 [ 0, %4 ], [ %0, %2 ]
  ret i8 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid10PrepDomainERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_Pb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  store i8 0, i8* %2, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %30, label %40

18:                                               ; preds = %35, %36
  %19 = phi i8* [ %31, %35 ], [ %37, %36 ]
  %20 = getelementptr inbounds i8, i8* %32, i64 1
  %21 = load i8, i8* %6, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i8*, i8** %9, align 8
  %24 = load i64, i64* %13, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i8* %23, i8* %11
  %27 = select i1 %22, i64 %24, i64 %25
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = icmp ult i8* %20, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %3, %18
  %31 = phi i8* [ %19, %18 ], [ %12, %3 ]
  %32 = phi i8* [ %20, %18 ], [ %12, %3 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 1, i8* %4, align 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 46
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br label %18

36:                                               ; preds = %30
  call void @_ZN11jingle_xmpp3Jid15PrepDomainLabelENSt3__111__wrap_iterIPKcEES5_PNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(i8* %31, i8* %32, %"class.std::__1::basic_string"* %1, i8* nonnull %4)
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %1, i8 signext 46) #14
  %37 = getelementptr inbounds i8, i8* %32, i64 1
  %38 = load i8, i8* %4, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %18, label %45

40:                                               ; preds = %18, %3
  %41 = phi i64 [ %16, %3 ], [ %27, %18 ]
  %42 = phi i8* [ %12, %3 ], [ %26, %18 ]
  %43 = phi i8* [ %12, %3 ], [ %19, %18 ]
  %44 = getelementptr inbounds i8, i8* %42, i64 %41
  tail call void @_ZN11jingle_xmpp3Jid15PrepDomainLabelENSt3__111__wrap_iterIPKcEES5_PNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(i8* %43, i8* %44, %"class.std::__1::basic_string"* %1, i8* %2)
  br label %45

45:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp3Jid15PrepDomainLabelENSt3__111__wrap_iterIPKcEES5_PNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(i8*, i8*, %"class.std::__1::basic_string"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  store i8 0, i8* %3, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %4
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp ult i8* %0, %1
  br i1 %17, label %21, label %32

18:                                               ; preds = %25, %26
  %19 = getelementptr inbounds i8, i8* %22, i64 1
  %20 = icmp eq i8* %19, %1
  br i1 %20, label %30, label %21

21:                                               ; preds = %15, %18
  %22 = phi i8* [ %19, %18 ], [ %0, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 1, i8* %5, align 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp sgt i8 %23, -1
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext %23) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  br label %18

26:                                               ; preds = %21
  %27 = call signext i8 @_ZN11jingle_xmpp3Jid20PrepDomainLabelAsciiEcPb(i8 signext %23, i8* nonnull %5)
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext %27) #14
  %28 = load i8, i8* %5, align 1, !range !2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  %29 = icmp eq i8 %28, 1
  br i1 %29, label %18, label %77

30:                                               ; preds = %18
  %31 = load i8, i8* %7, align 1
  br label %32

32:                                               ; preds = %30, %15
  %33 = phi i8 [ %31, %30 ], [ %8, %15 ]
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %32
  %39 = zext i8 %33 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  %42 = shl i64 %16, 32
  %43 = ashr exact i64 %42, 32
  %44 = sub i64 %41, %43
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %45, 0
  %47 = icmp sgt i32 %45, 63
  %48 = or i1 %46, %47
  br i1 %48, label %77, label %49

49:                                               ; preds = %40
  br i1 %34, label %50, label %53

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  br label %55

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi i8* [ %52, %50 ], [ %54, %53 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 %43
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 45
  br i1 %59, label %77, label %60

60:                                               ; preds = %55
  br i1 %34, label %61, label %66

61:                                               ; preds = %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  br label %69

66:                                               ; preds = %60
  %67 = zext i8 %33 to i64
  %68 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi i64 [ %63, %61 ], [ %67, %66 ]
  %71 = phi i8* [ %65, %61 ], [ %68, %66 ]
  %72 = add i64 %70, -1
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 45
  br i1 %75, label %77, label %76

76:                                               ; preds = %69
  store i8 1, i8* %3, align 1
  br label %77

77:                                               ; preds = %26, %76, %40, %55, %69
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden signext i8 @_ZN11jingle_xmpp3Jid20PrepDomainLabelAsciiEcPb(i8 signext, i8* nocapture) local_unnamed_addr #6 align 2 {
  store i8 1, i8* %1, align 1
  %3 = sext i8 %0 to i32
  switch i32 %3, label %7 [
    i32 65, label %4
    i32 66, label %4
    i32 67, label %4
    i32 68, label %4
    i32 69, label %4
    i32 70, label %4
    i32 71, label %4
    i32 72, label %4
    i32 73, label %4
    i32 74, label %4
    i32 75, label %4
    i32 76, label %4
    i32 77, label %4
    i32 78, label %4
    i32 79, label %4
    i32 80, label %4
    i32 81, label %4
    i32 82, label %4
    i32 83, label %4
    i32 84, label %4
    i32 85, label %4
    i32 86, label %4
    i32 87, label %4
    i32 88, label %4
    i32 89, label %4
    i32 90, label %4
    i32 0, label %6
    i32 1, label %6
    i32 2, label %6
    i32 3, label %6
    i32 4, label %6
    i32 5, label %6
    i32 6, label %6
    i32 7, label %6
    i32 8, label %6
    i32 9, label %6
    i32 10, label %6
    i32 11, label %6
    i32 12, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 18, label %6
    i32 19, label %6
    i32 20, label %6
    i32 21, label %6
    i32 22, label %6
    i32 23, label %6
    i32 24, label %6
    i32 25, label %6
    i32 26, label %6
    i32 27, label %6
    i32 28, label %6
    i32 29, label %6
    i32 30, label %6
    i32 31, label %6
    i32 32, label %6
    i32 33, label %6
    i32 34, label %6
    i32 35, label %6
    i32 36, label %6
    i32 37, label %6
    i32 38, label %6
    i32 39, label %6
    i32 40, label %6
    i32 41, label %6
    i32 42, label %6
    i32 43, label %6
    i32 44, label %6
    i32 46, label %6
    i32 47, label %6
    i32 58, label %6
    i32 59, label %6
    i32 60, label %6
    i32 61, label %6
    i32 62, label %6
    i32 63, label %6
    i32 64, label %6
    i32 91, label %6
    i32 92, label %6
    i32 93, label %6
    i32 94, label %6
    i32 95, label %6
    i32 96, label %6
    i32 123, label %6
    i32 124, label %6
    i32 125, label %6
    i32 126, label %6
    i32 127, label %6
  ]

4:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %5 = add i8 %0, 32
  br label %7

6:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  store i8 0, i8* %1, align 1
  br label %7

7:                                                ; preds = %2, %6, %4
  %8 = phi i8 [ 0, %6 ], [ %5, %4 ], [ %0, %2 ]
  ret i8 %8
}

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
