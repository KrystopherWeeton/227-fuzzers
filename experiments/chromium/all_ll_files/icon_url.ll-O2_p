; ModuleID = '../../third_party/blink/renderer/core/dom/icon_url.cc'
source_filename = "../../third_party/blink/renderer/core/dom/icon_url.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::IconURL" = type <{ i32, [4 x i8], %"class.WTF::Vector", %"class.WTF::String", %"class.blink::KURL", i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink7IconURLC2ERKNS_4KURLERKN3WTF6VectorIN3gfx4SizeELj0ENS4_18PartitionAllocatorEEERKNS4_6StringENS_5mojom15FaviconIconTypeE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm = comdat any

@.str = private unnamed_addr constant [13 x i8] c"/favicon.ico\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.1 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv = private unnamed_addr constant [57 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::Size]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7IconURL14DefaultFaviconERKNS_4KURLE(%"struct.blink::IconURL"* noalias sret, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #6
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %1) #6
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = call zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #6
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %29 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %1) #6
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  call void @_ZN5blink4KURL7SetHostERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #6
  br label %47

47:                                               ; preds = %28, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  %48 = call zeroext i1 @_ZNK5blink4KURL7HasPortEv(%"class.blink::KURL"* %1) #6
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = call zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"* %1) #6
  call void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"* nonnull %3, i16 zeroext %50) #6
  br label %51

51:                                               ; preds = %49, %47
  %52 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #6
  call void @_ZN5blink4KURL7SetPathERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #6
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #6
  br label %69

69:                                               ; preds = %51, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #6
  %70 = bitcast %"struct.blink::IconURL"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 -86, i64 152, i1 false)
  %71 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #6
  %72 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  call void @_ZN5blink7IconURLC2ERKNS_4KURLERKN3WTF6VectorIN3gfx4SizeELj0ENS4_18PartitionAllocatorEEERKNS4_6StringENS_5mojom15FaviconIconTypeE(%"struct.blink::IconURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %3, %"class.WTF::Vector"* nonnull dereferenceable(16) %7, %"class.WTF::String"* dereferenceable(8) %72, i32 1)
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.gfx::Size"*, %"class.gfx::Size"** %73, align 8
  %75 = icmp eq %"class.gfx::Size"* %74, null
  %76 = bitcast %"class.gfx::Size"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !2

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #6
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %73, align 8
  br label %83

83:                                               ; preds = %69, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #6
  %84 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 5
  store i8 1, i8* %84, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink4KURL7SetHostERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7HasPortEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetPathERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7IconURLC2ERKNS_4KURLERKN3WTF6VectorIN3gfx4SizeELj0ENS4_18PartitionAllocatorEEERKNS4_6StringENS_5mojom15FaviconIconTypeE(%"struct.blink::IconURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::Vector"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 0
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %10, align 8
  %11 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %5
  %14 = zext i32 %9 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %14) #6
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %15, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #6
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.WTF::Vector"* %7 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = lshr i64 %15, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %11, align 8
  %21 = icmp ne i8* %16, null
  br label %22

22:                                               ; preds = %13, %5
  %23 = phi i8* [ null, %5 ], [ %16, %13 ]
  %24 = phi i1 [ false, %5 ], [ %21, %13 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.gfx::Size"*, %"class.gfx::Size"** %28, align 8
  %30 = icmp ne %"class.gfx::Size"* %29, null
  %31 = and i1 %24, %30
  br i1 %31, label %32, label %37, !prof !2

32:                                               ; preds = %22
  %33 = load i32, i32* %25, align 4
  %34 = zext i32 %33 to i64
  %35 = bitcast %"class.gfx::Size"* %29 to i8*
  %36 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* nonnull align 4 %35, i64 %36, i1 false) #6
  br label %37

37:                                               ; preds = %22, %32
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #6
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %47
  tail call void @llvm.trap() #6
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %37, %42, %57
  %60 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 4
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %60, %"class.blink::KURL"* dereferenceable(112) %1) #6
  %61 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 5
  store i8 0, i8* %61, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkeqERKNS_7IconURLES2_(%"struct.blink::IconURL"* dereferenceable(152), %"struct.blink::IconURL"* dereferenceable(152)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %57

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %1, i64 0, i32 5
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %57

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %1, i64 0, i32 4
  %17 = tail call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %15, %"class.blink::KURL"* dereferenceable(112) %16) #6
  br i1 %17, label %18, label %57

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %57

24:                                               ; preds = %18
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %51, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.gfx::Size"*, %"class.gfx::Size"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.gfx::Size"*, %"class.gfx::Size"** %29, align 8
  %31 = zext i32 %20 to i64
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %28, i64 %31
  br label %33

33:                                               ; preds = %47, %26
  %34 = phi %"class.gfx::Size"* [ %49, %47 ], [ %30, %26 ]
  %35 = phi %"class.gfx::Size"* [ %48, %47 ], [ %28, %26 ]
  %36 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %34, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %57

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %35, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %34, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %35, i64 1
  %49 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %34, i64 1
  %50 = icmp eq %"class.gfx::Size"* %48, %32
  br i1 %50, label %51, label %33

51:                                               ; preds = %47, %24
  %52 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %0, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::IconURL", %"struct.blink::IconURL"* %1, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"* %55) #6
  br label %57

57:                                               ; preds = %41, %33, %18, %51, %14, %8, %2
  %58 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %56, %51 ], [ false, %18 ], [ false, %33 ], [ false, %41 ]
  ret i1 %58
}

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
