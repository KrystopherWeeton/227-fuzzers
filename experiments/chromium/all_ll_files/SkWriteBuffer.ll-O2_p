; ModuleID = '../../third_party/skia/src/core/SkWriteBuffer.cpp'
source_filename = "../../third_party/skia/src/core/SkWriteBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBinaryWriteBuffer = type { %class.SkWriteBuffer, %class.sk_sp.12, %class.sk_sp.13, %class.SkWriter32, %class.SkTHashMap }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.1", [7 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.5, i32, i32 }
%class.sk_sp.5 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.6, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.12 = type { %class.SkFactorySet* }
%class.SkFactorySet = type { %class.SkTPtrSet }
%class.SkTPtrSet = type { %class.SkPtrSet }
%class.SkPtrSet = type { %class.SkRefCnt.base, %class.SkTDArray }
%class.SkTDArray = type { %"struct.SkPtrSet::Pair"*, i32, i32 }
%"struct.SkPtrSet::Pair" = type { i8*, i32 }
%class.sk_sp.13 = type { %class.SkRefCntSet* }
%class.SkRefCntSet = type { %class.SkTPtrSet.14 }
%class.SkTPtrSet.14 = type { %class.SkPtrSet }
%class.SkWriter32 = type { i8*, i64, i64, i8*, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type <{ i8*, i32 }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%struct.SkPoint3 = type { float, float, float }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkPath = type <{ %class.sk_sp.20, i32, %"struct.std::__1::atomic.7", %"struct.std::__1::atomic.7", i8, i8 }>
%class.sk_sp.20 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.21, %struct.SkRect, [4 x i8], %class.SkTDArray.22, %class.SkTDArray.23, %class.SkTDArray.24, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.22 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.23 = type { i8*, i32, i32 }
%class.SkTDArray.24 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.25 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.25 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1", [3 x i8] }
%class.SkStream = type { i32 (...)** }
%class.SkWStream = type { i32 (...)** }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.1", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.5, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8 }>
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkSize = type { float, float }
%class.SkPaint = type <{ %class.sk_sp.26, %class.sk_sp.27, %class.sk_sp.28, %class.sk_sp.29, %class.sk_sp.30, %struct.SkRGBA4f, float, float, %union.anon.31, [4 x i8] }>
%class.sk_sp.26 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.27 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.28 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.29 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.30 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%union.anon.31 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.32 = type { %class.SkFlattenable* }
%class.SkReadBuffer = type opaque

$_ZN10SkTHashMapIPKcj10SkGoodHashE3setES1_j = comdat any

$_ZN19SkBinaryWriteBuffer10writePad32EPKvm = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIPKcj10SkGoodHashE4PairES2_S5_E6resizeEi = comdat any

@_ZTV19SkBinaryWriteBuffer = hidden unnamed_addr constant { [31 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBinaryWriteBuffer*)* @_ZN19SkBinaryWriteBufferD2Ev to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*)* @_ZN19SkBinaryWriteBufferD0Ev to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i8*, i64)* @_ZN19SkBinaryWriteBuffer10writePad32EPKvm to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i8*, i64)* @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i1)* @_ZN19SkBinaryWriteBuffer9writeBoolEb to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, float)* @_ZN19SkBinaryWriteBuffer11writeScalarEf to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, float*, i32)* @_ZN19SkBinaryWriteBuffer16writeScalarArrayEPKfj to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i32)* @_ZN19SkBinaryWriteBuffer8writeIntEi to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i32*, i32)* @_ZN19SkBinaryWriteBuffer13writeIntArrayEPKij to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i32)* @_ZN19SkBinaryWriteBuffer9writeUIntEj to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i8*)* @_ZN19SkBinaryWriteBuffer11writeStringEPKc to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkFlattenable*)* @_ZN19SkBinaryWriteBuffer16writeFlattenableEPK13SkFlattenable to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i32)* @_ZN19SkBinaryWriteBuffer10writeColorEj to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, i32*, i32)* @_ZN19SkBinaryWriteBuffer15writeColorArrayEPKjj to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkRGBA4f*)* @_ZN19SkBinaryWriteBuffer12writeColor4fERK8SkRGBA4fIL11SkAlphaType3EE to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkRGBA4f*, i32)* @_ZN19SkBinaryWriteBuffer17writeColor4fArrayEPK8SkRGBA4fIL11SkAlphaType3EEj to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkPoint*)* @_ZN19SkBinaryWriteBuffer10writePointERK7SkPoint to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkPoint*, i32)* @_ZN19SkBinaryWriteBuffer15writePointArrayEPK7SkPointj to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkPoint3*)* @_ZN19SkBinaryWriteBuffer11writePoint3ERK8SkPoint3 to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkM44*)* @_ZN19SkBinaryWriteBuffer5writeERK5SkM44 to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkMatrix*)* @_ZN19SkBinaryWriteBuffer11writeMatrixERK8SkMatrix to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkIRect*)* @_ZN19SkBinaryWriteBuffer10writeIRectERK7SkIRect to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %struct.SkRect*)* @_ZN19SkBinaryWriteBuffer9writeRectERK6SkRect to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkRegion*)* @_ZN19SkBinaryWriteBuffer11writeRegionERK8SkRegion to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkPath*)* @_ZN19SkBinaryWriteBuffer9writePathERK6SkPath to i8*), i8* bitcast (i64 (%class.SkBinaryWriteBuffer*, %class.SkStream*, i64)* @_ZN19SkBinaryWriteBuffer11writeStreamEP8SkStreamm to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkImage*)* @_ZN19SkBinaryWriteBuffer10writeImageEPK7SkImage to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkTypeface*)* @_ZN19SkBinaryWriteBuffer13writeTypefaceEP10SkTypeface to i8*), i8* bitcast (void (%class.SkBinaryWriteBuffer*, %class.SkPaint*)* @_ZN19SkBinaryWriteBuffer10writePaintERK7SkPaint to i8*)] }, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8

@_ZN19SkBinaryWriteBufferC1Ev = hidden unnamed_addr alias void (%class.SkBinaryWriteBuffer*), void (%class.SkBinaryWriteBuffer*)* @_ZN19SkBinaryWriteBufferC2Ev
@_ZN19SkBinaryWriteBufferC1EPvm = hidden unnamed_addr alias void (%class.SkBinaryWriteBuffer*, i8*, i64), void (%class.SkBinaryWriteBuffer*, i8*, i64)* @_ZN19SkBinaryWriteBufferC2EPvm
@_ZN19SkBinaryWriteBufferD1Ev = hidden unnamed_addr alias void (%class.SkBinaryWriteBuffer*), void (%class.SkBinaryWriteBuffer*)* @_ZN19SkBinaryWriteBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBufferC2Ev(%class.SkBinaryWriteBuffer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.SkSerialProcs* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTV19SkBinaryWriteBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 1, i32 0
  %6 = bitcast %class.SkFactorySet** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBufferC2EPvm(%class.SkBinaryWriteBuffer* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 1
  %6 = bitcast %struct.SkSerialProcs* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTV19SkBinaryWriteBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 4
  %9 = bitcast %class.SkAutoTMalloc* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = and i64 %2, -4
  %11 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 0
  %12 = bitcast %class.SkFactorySet** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  store i8* %1, i8** %11, align 8
  %13 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 3
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 4
  %17 = bitcast %class.SkTHashMap* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBufferD2Ev(%class.SkBinaryWriteBuffer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTV19SkBinaryWriteBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %3, align 8
  store %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %3, align 8
  %5 = icmp eq %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_Z7sk_freePv(i8* nonnull %10) #8
  br label %13

13:                                               ; preds = %8, %12
  %14 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 2, i32 0
  %15 = load %class.SkRefCntSet*, %class.SkRefCntSet** %14, align 8
  %16 = icmp eq %class.SkRefCntSet* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkRefCntSet* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkRefCntSet* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #8
  br label %27

27:                                               ; preds = %13, %17, %21
  %28 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 1, i32 0
  %29 = load %class.SkFactorySet*, %class.SkFactorySet** %28, align 8
  %30 = icmp eq %class.SkFactorySet* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkFactorySet* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkFactorySet* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #8
  br label %41

41:                                               ; preds = %27, %31, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBufferD0Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTV19SkBinaryWriteBuffer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %3, align 8
  store %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %3, align 8
  %5 = icmp eq %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #9
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_Z7sk_freePv(i8* nonnull %10) #8
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 2, i32 0
  %15 = load %class.SkRefCntSet*, %class.SkRefCntSet** %14, align 8
  %16 = icmp eq %class.SkRefCntSet* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkRefCntSet* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkRefCntSet* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #8
  br label %27

27:                                               ; preds = %21, %17, %13
  %28 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 1, i32 0
  %29 = load %class.SkFactorySet*, %class.SkFactorySet** %28, align 8
  %30 = icmp eq %class.SkFactorySet* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkFactorySet* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkFactorySet* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #8
  br label %41

41:                                               ; preds = %27, %31, %35
  %42 = bitcast %class.SkBinaryWriteBuffer* %0 to i8*
  tail call void @_ZdlPv(i8* %42) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK19SkBinaryWriteBuffer19usingInitialStorageEv(%class.SkBinaryWriteBuffer* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer14writeByteArrayEPKvm(%class.SkBinaryWriteBuffer*, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = trunc i64 %2 to i32
  %6 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4
  %9 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %8) #8
  br label %13

13:                                               ; preds = %3, %12
  store i64 %8, i64* %6, align 8
  %14 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %7
  %17 = bitcast i8* %16 to i32*
  store i32 %5, i32* %17, align 4
  %18 = add i64 %2, 3
  %19 = and i64 %18, -4
  %20 = load i64, i64* %6, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %9, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %13
  store i64 %21, i64* %6, align 8
  %26 = load i8*, i8** %14, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %20
  %28 = icmp eq i64 %19, %2
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast i8* %27 to i32*
  %31 = lshr i64 %18, 2
  %32 = add nsw i64 %31, -1
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %29, %25
  %35 = icmp eq i64 %2, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %1, i64 %2, i1 false) #8
  br label %37

37:                                               ; preds = %34, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer9writeBoolEb(%class.SkBinaryWriteBuffer*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = zext i1 %1 to i32
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %7) #8
  br label %12

12:                                               ; preds = %2, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = bitcast i8* %15 to i32*
  store i32 %4, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer11writeScalarEf(%class.SkBinaryWriteBuffer*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %6) #8
  br label %11

11:                                               ; preds = %2, %10
  store i64 %6, i64* %4, align 8
  %12 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %5
  %15 = bitcast i8* %14 to float*
  store float %1, float* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer16writeScalarArrayEPKfj(%class.SkBinaryWriteBuffer*, float* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %7) #8
  br label %12

12:                                               ; preds = %3, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = bitcast float* %1 to i8*
  %18 = zext i32 %2 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %8, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %12
  store i64 %21, i64* %5, align 8
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = load i8*, i8** %13, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %17, i64 %19, i1 false) #8
  br label %30

30:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer8writeIntEi(%class.SkBinaryWriteBuffer*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %6) #8
  br label %11

11:                                               ; preds = %2, %10
  store i64 %6, i64* %4, align 8
  %12 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %5
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer13writeIntArrayEPKij(%class.SkBinaryWriteBuffer*, i32* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %7) #8
  br label %12

12:                                               ; preds = %3, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = bitcast i32* %1 to i8*
  %18 = zext i32 %2 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %8, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %12
  store i64 %21, i64* %5, align 8
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = load i8*, i8** %13, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %17, i64 %19, i1 false) #8
  br label %30

30:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer9writeUIntEj(%class.SkBinaryWriteBuffer*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %6) #8
  br label %11

11:                                               ; preds = %2, %10
  store i64 %6, i64* %4, align 8
  %12 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %5
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer11writeStringEPKc(%class.SkBinaryWriteBuffer*, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  tail call void @_ZN10SkWriter3211writeStringEPKcm(%class.SkWriter32* %3, i8* %1, i64 -1) #8
  ret void
}

declare void @_ZN10SkWriter3211writeStringEPKcm(%class.SkWriter32*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer10writeColorEj(%class.SkBinaryWriteBuffer*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %6) #8
  br label %11

11:                                               ; preds = %2, %10
  store i64 %6, i64* %4, align 8
  %12 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %5
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer15writeColorArrayEPKjj(%class.SkBinaryWriteBuffer*, i32* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %7) #8
  br label %12

12:                                               ; preds = %3, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = bitcast i32* %1 to i8*
  %18 = zext i32 %2 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %8, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %12
  store i64 %21, i64* %5, align 8
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = load i8*, i8** %13, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %17, i64 %19, i1 false) #8
  br label %30

30:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer12writeColor4fERK8SkRGBA4fIL11SkAlphaType3EE(%class.SkBinaryWriteBuffer*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = bitcast %struct.SkRGBA4f* %1 to i8*
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 16
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %7) #8
  br label %12

12:                                               ; preds = %2, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %4, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer17writeColor4fArrayEPK8SkRGBA4fIL11SkAlphaType3EEj(%class.SkBinaryWriteBuffer*, %struct.SkRGBA4f* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %7) #8
  br label %12

12:                                               ; preds = %3, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = bitcast %struct.SkRGBA4f* %1 to i8*
  %18 = zext i32 %2 to i64
  %19 = shl nuw nsw i64 %18, 4
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %8, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %12
  store i64 %21, i64* %5, align 8
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = load i8*, i8** %13, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %17, i64 %19, i1 false) #8
  br label %30

30:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer10writePointERK7SkPoint(%class.SkBinaryWriteBuffer*, %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = bitcast %struct.SkPoint* %1 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4
  %9 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %8) #8
  br label %13

13:                                               ; preds = %2, %12
  store i64 %8, i64* %6, align 8
  %14 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %7
  %17 = bitcast i8* %16 to i32*
  store i32 %5, i32* %17, align 4
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load i64, i64* %6, align 8
  %22 = add i64 %21, 4
  %23 = load i64, i64* %9, align 8
  %24 = icmp ugt i64 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %13
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %22) #8
  br label %26

26:                                               ; preds = %13, %25
  store i64 %22, i64* %6, align 8
  %27 = load i8*, i8** %14, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %21
  %29 = bitcast i8* %28 to i32*
  store i32 %20, i32* %29, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer11writePoint3ERK8SkPoint3(%class.SkBinaryWriteBuffer*, %struct.SkPoint3* dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.SkPoint3* %1 to i8*
  %4 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkBinaryWriteBuffer*, i8*, i64)***
  %5 = load void (%class.SkBinaryWriteBuffer*, i8*, i64)**, void (%class.SkBinaryWriteBuffer*, i8*, i64)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkBinaryWriteBuffer*, i8*, i64)*, void (%class.SkBinaryWriteBuffer*, i8*, i64)** %5, i64 2
  %7 = load void (%class.SkBinaryWriteBuffer*, i8*, i64)*, void (%class.SkBinaryWriteBuffer*, i8*, i64)** %6, align 8
  tail call void %7(%class.SkBinaryWriteBuffer* %0, i8* %3, i64 12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer15writePointArrayEPK7SkPointj(%class.SkBinaryWriteBuffer*, %struct.SkPoint* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %7) #8
  br label %12

12:                                               ; preds = %3, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = bitcast %struct.SkPoint* %1 to i8*
  %18 = zext i32 %2 to i64
  %19 = shl nuw nsw i64 %18, 3
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %8, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %12
  store i64 %21, i64* %5, align 8
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = load i8*, i8** %13, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %17, i64 %19, i1 false) #8
  br label %30

30:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer5writeERK5SkM44(%class.SkBinaryWriteBuffer*, %class.SkM44* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = bitcast %class.SkM44* %1 to i8*
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 64
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %7) #8
  br label %12

12:                                               ; preds = %2, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %4, i64 64, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer11writeMatrixERK8SkMatrix(%class.SkBinaryWriteBuffer*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  tail call void @_ZN10SkWriter3211writeMatrixERK8SkMatrix(%class.SkWriter32* %3, %class.SkMatrix* dereferenceable(40) %1) #8
  ret void
}

declare void @_ZN10SkWriter3211writeMatrixERK8SkMatrix(%class.SkWriter32*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer10writeIRectERK7SkIRect(%class.SkBinaryWriteBuffer*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = bitcast %struct.SkIRect* %1 to i8*
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 16
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %7) #8
  br label %12

12:                                               ; preds = %2, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %4, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer9writeRectERK6SkRect(%class.SkBinaryWriteBuffer*, %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 16
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %6) #8
  br label %11

11:                                               ; preds = %2, %10
  store i64 %6, i64* %4, align 8
  %12 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %5
  %15 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer11writeRegionERK8SkRegion(%class.SkBinaryWriteBuffer*, %class.SkRegion* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = tail call i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion* %1, i8* null) #8
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %7) #8
  br label %12

12:                                               ; preds = %2, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = tail call i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion* %1, i8* %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer9writePathERK6SkPath(%class.SkBinaryWriteBuffer*, %class.SkPath* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %4 = tail call i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath* %1, i8* null) #8
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %3, i64 %7) #8
  br label %12

12:                                               ; preds = %2, %11
  store i64 %7, i64* %5, align 8
  %13 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %3, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %6
  %16 = tail call i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath* %1, i8* %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN19SkBinaryWriteBuffer11writeStreamEP8SkStreamm(%class.SkBinaryWriteBuffer*, %class.SkStream*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = trunc i64 %2 to i32
  %6 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 4
  %9 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %8) #8
  br label %13

13:                                               ; preds = %3, %12
  store i64 %8, i64* %6, align 8
  %14 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %7
  %17 = bitcast i8* %16 to i32*
  store i32 %5, i32* %17, align 4
  %18 = add i64 %2, 3
  %19 = and i64 %18, -4
  %20 = load i64, i64* %6, align 8
  %21 = add i64 %20, %19
  %22 = load i64, i64* %9, align 8
  %23 = icmp ugt i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %21) #8
  br label %25

25:                                               ; preds = %24, %13
  store i64 %21, i64* %6, align 8
  %26 = load i8*, i8** %14, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %20
  %28 = icmp eq i64 %19, %2
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast i8* %27 to i32*
  %31 = lshr i64 %18, 2
  %32 = add nsw i64 %31, -1
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %25, %29
  %35 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*, i8*, i64)***
  %36 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %36, i64 2
  %38 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %37, align 8
  %39 = tail call i64 %38(%class.SkStream* %1, i8* %27, i64 %2) #8
  %40 = icmp ult i64 %39, %2
  br i1 %40, label %41, label %59

41:                                               ; preds = %34
  %42 = sub i64 %2, %39
  %43 = add i64 %42, 3
  %44 = and i64 %43, -4
  %45 = load i64, i64* %6, align 8
  %46 = add i64 %45, %44
  %47 = load i64, i64* %9, align 8
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %41
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %46) #8
  br label %50

50:                                               ; preds = %49, %41
  store i64 %46, i64* %6, align 8
  %51 = icmp eq i64 %44, %42
  br i1 %51, label %59, label %52

52:                                               ; preds = %50
  %53 = load i8*, i8** %14, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %45
  %55 = bitcast i8* %54 to i32*
  %56 = lshr i64 %43, 2
  %57 = add nsw i64 %56, -1
  %58 = getelementptr inbounds i32, i32* %55, i64 %57
  store i32 0, i32* %58, align 4
  br label %59

59:                                               ; preds = %52, %50, %34
  ret i64 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SkBinaryWriteBuffer13writeToStreamEP9SkWStream(%class.SkBinaryWriteBuffer* nocapture readonly, %class.SkWStream*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %8 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %8, i64 2
  %10 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkWStream* %1, i8* %4, i64 %6) #8
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer10writeImageEPK7SkImage(%class.SkBinaryWriteBuffer*, %class.SkImage*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %7 = bitcast %class.SkImage* %1 to %class.SkMipmap* (%class.SkImage_Base*)***
  %8 = load %class.SkMipmap* (%class.SkImage_Base*)**, %class.SkMipmap* (%class.SkImage_Base*)*** %7, align 8
  %9 = getelementptr inbounds %class.SkMipmap* (%class.SkImage_Base*)*, %class.SkMipmap* (%class.SkImage_Base*)** %8, i64 7
  %10 = load %class.SkMipmap* (%class.SkImage_Base*)*, %class.SkMipmap* (%class.SkImage_Base*)** %9, align 8
  %11 = tail call %class.SkMipmap* %10(%class.SkImage_Base* %6) #8
  %12 = icmp eq %class.SkMipmap* %11, null
  %13 = select i1 %12, i32 0, i32 512
  %14 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0
  %15 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkWriteBuffer*, i32)***
  %16 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %16, i64 7
  %18 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %14, i32 %13) #8
  %19 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 1, i32 2
  %20 = load void (%class.sk_sp*, %class.SkImage*, i8*)*, void (%class.sk_sp*, %class.SkImage*, i8*)** %19, align 8
  %21 = icmp eq void (%class.sk_sp*, %class.SkImage*, i8*)* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %2
  %23 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  %24 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 1, i32 3
  %25 = load i8*, i8** %24, align 8
  call void %20(%class.sk_sp* nonnull sret %3, %class.SkImage* %1, i8* %25) #8
  %26 = bitcast %class.sk_sp* %3 to i64*
  %27 = load i64, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  %30 = inttoptr i64 %27 to %class.SkData*
  br label %41

31:                                               ; preds = %2, %22
  %32 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZNK7SkImage12encodeToDataEv(%class.sk_sp* nonnull sret %4, %class.SkImage* %1) #8
  %33 = bitcast %class.sk_sp* %4 to i64*
  %34 = load i64, i64* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = inttoptr i64 %34 to %class.SkData*
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  %38 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %15, align 8
  %39 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %38, i64 7
  %40 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %39, align 8
  call void %40(%class.SkWriteBuffer* %14, i32 0) #8
  br label %52

41:                                               ; preds = %29, %31
  %42 = phi %class.SkData* [ %30, %29 ], [ %35, %31 ]
  %43 = phi i64 [ %27, %29 ], [ %34, %31 ]
  %44 = getelementptr inbounds %class.SkData, %class.SkData* %42, i64 0, i32 3
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %class.SkData, %class.SkData* %42, i64 0, i32 4
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkWriteBuffer*, i8*, i64)***
  %49 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %49, i64 3
  %51 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %50, align 8
  call void %51(%class.SkWriteBuffer* %14, i8* %45, i64 %47) #8
  br label %52

52:                                               ; preds = %37, %41
  %53 = phi i1 [ true, %37 ], [ false, %41 ]
  %54 = phi %class.SkData* [ %35, %37 ], [ %42, %41 ]
  %55 = phi i64 [ 0, %37 ], [ %43, %41 ]
  br i1 %12, label %84, label %56

56:                                               ; preds = %52
  %57 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  call void @_ZNK8SkMipmap9serializeEv(%class.sk_sp* nonnull sret %5, %class.SkMipmap* nonnull %11) #8
  %58 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %59 = load %class.SkData*, %class.SkData** %58, align 8
  %60 = icmp eq %class.SkData* %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %56
  %62 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %15, align 8
  %63 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %62, i64 7
  %64 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %63, align 8
  call void %64(%class.SkWriteBuffer* %14, i32 0) #8
  br label %74

65:                                               ; preds = %56
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %59, i64 0, i32 3
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %class.SkData, %class.SkData* %59, i64 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkWriteBuffer*, i8*, i64)***
  %71 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %71, i64 3
  %73 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %72, align 8
  call void %73(%class.SkWriteBuffer* %14, i8* %67, i64 %69) #8
  br label %74

74:                                               ; preds = %61, %65
  %75 = load %class.SkData*, %class.SkData** %58, align 8
  %76 = icmp eq %class.SkData* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.SkData, %class.SkData* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %75) #8
  %82 = bitcast %class.SkData* %75 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %82) #8
  br label %83

83:                                               ; preds = %74, %77, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %84

84:                                               ; preds = %52, %83
  br i1 %53, label %91, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %class.SkData, %class.SkData* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %54) #8
  %90 = inttoptr i64 %55 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %90) #8
  br label %91

91:                                               ; preds = %84, %85, %89
  ret void
}

declare void @_ZNK7SkImage12encodeToDataEv(%class.sk_sp* sret, %class.SkImage*) local_unnamed_addr #3

declare void @_ZNK8SkMipmap9serializeEv(%class.sk_sp* sret, %class.SkMipmap*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer13writeTypefaceEP10SkTypeface(%class.SkBinaryWriteBuffer*, %class.SkTypeface*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = icmp eq %class.SkTypeface* %1, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 4
  %10 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %6, i64 %9) #8
  br label %14

14:                                               ; preds = %5, %13
  store i64 %9, i64* %7, align 8
  %15 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %6, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %8
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  br label %69

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 1, i32 4
  %21 = load void (%class.sk_sp*, %class.SkTypeface*, i8*)*, void (%class.sk_sp*, %class.SkTypeface*, i8*)** %20, align 8
  %22 = icmp eq void (%class.sk_sp*, %class.SkTypeface*, i8*)* %21, null
  br i1 %22, label %69, label %23

23:                                               ; preds = %19
  %24 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %25, align 8
  %26 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0, i32 1, i32 5
  %27 = load i8*, i8** %26, align 8
  call void %21(%class.sk_sp* nonnull sret %3, %class.SkTypeface* nonnull %1, i8* %27) #8
  %28 = load %class.SkData*, %class.SkData** %25, align 8
  %29 = icmp eq %class.SkData* %28, null
  br i1 %29, label %68, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.SkData, %class.SkData* %28, i64 0, i32 4
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 2147483648
  %34 = select i1 %33, i64 %32, i64 0
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %37 = sub nsw i32 0, %35
  %38 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 4
  %41 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %40, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %30
  call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %36, i64 %40) #8
  br label %45

45:                                               ; preds = %30, %44
  store i64 %40, i64* %38, align 8
  %46 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %36, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %39
  %49 = bitcast i8* %48 to i32*
  store i32 %37, i32* %49, align 4
  %50 = icmp eq i64 %34, 0
  %51 = load %class.SkData*, %class.SkData** %25, align 8
  br i1 %50, label %92, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %class.SkData, %class.SkData* %51, i64 0, i32 3
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkBinaryWriteBuffer*, i8*, i64)***
  %56 = load void (%class.SkBinaryWriteBuffer*, i8*, i64)**, void (%class.SkBinaryWriteBuffer*, i8*, i64)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkBinaryWriteBuffer*, i8*, i64)*, void (%class.SkBinaryWriteBuffer*, i8*, i64)** %56, i64 2
  %58 = load void (%class.SkBinaryWriteBuffer*, i8*, i64)*, void (%class.SkBinaryWriteBuffer*, i8*, i64)** %57, align 8
  call void %58(%class.SkBinaryWriteBuffer* %0, i8* %54, i64 %34) #8
  %59 = load %class.SkData*, %class.SkData** %25, align 8
  %60 = icmp eq %class.SkData* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %class.SkData, %class.SkData* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %59) #8
  %66 = bitcast %class.SkData* %59 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %66) #8
  br label %67

67:                                               ; preds = %52, %61, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %101

68:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %69

69:                                               ; preds = %68, %19, %14
  %70 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %71 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 2, i32 0
  %72 = load %class.SkRefCntSet*, %class.SkRefCntSet** %71, align 8
  %73 = icmp eq %class.SkRefCntSet* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %72, i64 0, i32 0, i32 0
  %76 = bitcast %class.SkTypeface* %1 to i8*
  %77 = call i32 @_ZN8SkPtrSet3addEPv(%class.SkPtrSet* %75, i8* %76) #8
  br label %78

78:                                               ; preds = %69, %74
  %79 = phi i32 [ %77, %74 ], [ 0, %69 ]
  %80 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 4
  %83 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %82, %84
  br i1 %85, label %86, label %87

86:                                               ; preds = %78
  call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %70, i64 %82) #8
  br label %87

87:                                               ; preds = %78, %86
  store i64 %82, i64* %80, align 8
  %88 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %70, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %81
  %91 = bitcast i8* %90 to i32*
  store i32 %79, i32* %91, align 4
  br label %101

92:                                               ; preds = %45
  %93 = icmp eq %class.SkData* %51, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %class.SkData, %class.SkData* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %51) #8
  %99 = bitcast %class.SkData* %51 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %99) #8
  br label %100

100:                                              ; preds = %92, %94, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %101

101:                                              ; preds = %67, %100, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer10writePaintERK7SkPaint(%class.SkBinaryWriteBuffer*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0
  tail call void @_ZN11SkPaintPriv7FlattenERK7SkPaintR13SkWriteBuffer(%class.SkPaint* dereferenceable(72) %1, %class.SkWriteBuffer* dereferenceable(56) %3) #8
  ret void
}

declare void @_ZN11SkPaintPriv7FlattenERK7SkPaintR13SkWriteBuffer(%class.SkPaint* dereferenceable(72), %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer18setFactoryRecorderE5sk_spI12SkFactorySetE(%class.SkBinaryWriteBuffer* nocapture, %class.sk_sp.12* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.12* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkFactorySet* null, %class.SkFactorySet** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %3, i64 0, i32 0
  %8 = load %class.SkFactorySet*, %class.SkFactorySet** %7, align 8
  %9 = bitcast %class.sk_sp.12* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.SkFactorySet* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkFactorySet* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkFactorySet* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer19setTypefaceRecorderE5sk_spI11SkRefCntSetE(%class.SkBinaryWriteBuffer* nocapture, %class.sk_sp.13* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.13* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkRefCntSet* null, %class.SkRefCntSet** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %3, i64 0, i32 0
  %8 = load %class.SkRefCntSet*, %class.SkRefCntSet** %7, align 8
  %9 = bitcast %class.sk_sp.13* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.SkRefCntSet* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkRefCntSet* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkRefCntSet* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkBinaryWriteBuffer16writeFlattenableEPK13SkFlattenable(%class.SkBinaryWriteBuffer*, %class.SkFlattenable*) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = icmp eq %class.SkFlattenable* %1, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0
  %7 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkWriteBuffer*, i32)***
  %8 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %8, i64 7
  %10 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %9, align 8
  tail call void %10(%class.SkWriteBuffer* %6, i32 0) #8
  br label %120

11:                                               ; preds = %2
  %12 = bitcast %class.SkFlattenable* %1 to void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)***
  %13 = load void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)**, void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)*, void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)** %13, i64 3
  %15 = load void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)*, void (%class.sk_sp.32*, %class.SkReadBuffer*)* (%class.SkFlattenable*)** %14, align 8
  %16 = tail call void (%class.sk_sp.32*, %class.SkReadBuffer*)* %15(%class.SkFlattenable* nonnull %1) #8
  %17 = icmp eq void (%class.sk_sp.32*, %class.SkReadBuffer*)* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 1, i32 0
  %20 = load %class.SkFactorySet*, %class.SkFactorySet** %19, align 8
  %21 = icmp eq %class.SkFactorySet* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0
  %24 = getelementptr inbounds %class.SkFactorySet, %class.SkFactorySet* %20, i64 0, i32 0, i32 0
  %25 = bitcast void (%class.sk_sp.32*, %class.SkReadBuffer*)* %16 to i8*
  %26 = tail call i32 @_ZN8SkPtrSet3addEPv(%class.SkPtrSet* %24, i8* nonnull %25) #8
  %27 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkWriteBuffer*, i32)***
  %28 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %28, i64 7
  %30 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %29, align 8
  tail call void %30(%class.SkWriteBuffer* %23, i32 %26) #8
  br label %98

31:                                               ; preds = %18, %11
  %32 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = bitcast %class.SkFlattenable* %1 to i8* (%class.SkFlattenable*)***
  %34 = load i8* (%class.SkFlattenable*)**, i8* (%class.SkFlattenable*)*** %33, align 8
  %35 = getelementptr inbounds i8* (%class.SkFlattenable*)*, i8* (%class.SkFlattenable*)** %34, i64 4
  %36 = load i8* (%class.SkFlattenable*)*, i8* (%class.SkFlattenable*)** %35, align 8
  %37 = tail call i8* %36(%class.SkFlattenable* nonnull %1) #8
  store i8* %37, i8** %3, align 8
  %38 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 4
  %39 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %40 = call i32 %39(i8* nonnull %32, i64 8, i32 0) #8
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 1, i32 %40
  %43 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 4, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %86

46:                                               ; preds = %31
  %47 = add nsw i32 %44, -1
  %48 = and i32 %42, %47
  %49 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %50 = load %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %49, align 8
  %51 = load i8*, i8** %3, align 8
  br label %52

52:                                               ; preds = %66, %46
  %53 = phi i32 [ 0, %46 ], [ %71, %66 ]
  %54 = phi i32 [ %48, %46 ], [ %70, %66 ]
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %50, i64 %55, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %86, label %59

59:                                               ; preds = %52
  %60 = icmp eq i32 %42, %57
  br i1 %60, label %61, label %66

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %50, i64 %55, i32 0
  %63 = getelementptr inbounds %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair", %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* %62, i64 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %51, %64
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %59
  %67 = add nsw i32 %54, -1
  %68 = icmp slt i32 %54, 1
  %69 = select i1 %68, i32 %44, i32 0
  %70 = add nsw i32 %67, %69
  %71 = add nuw nsw i32 %53, 1
  %72 = icmp eq i32 %71, %44
  br i1 %72, label %86, label %52

73:                                               ; preds = %61
  %74 = icmp eq %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* %62, null
  %75 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %50, i64 %55, i32 0, i32 0, i32 1
  %76 = icmp eq i32* %75, null
  %77 = or i1 %74, %76
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0
  %80 = load i32, i32* %75, align 4
  %81 = shl i32 %80, 8
  %82 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkWriteBuffer*, i32)***
  %83 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %83, i64 7
  %85 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %84, align 8
  call void %85(%class.SkWriteBuffer* %79, i32 %81) #8
  br label %97

86:                                               ; preds = %52, %66, %31, %73
  %87 = load i8*, i8** %3, align 8
  %88 = bitcast %class.SkBinaryWriteBuffer* %0 to void (%class.SkBinaryWriteBuffer*, i8*)***
  %89 = load void (%class.SkBinaryWriteBuffer*, i8*)**, void (%class.SkBinaryWriteBuffer*, i8*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkBinaryWriteBuffer*, i8*)*, void (%class.SkBinaryWriteBuffer*, i8*)** %89, i64 10
  %91 = load void (%class.SkBinaryWriteBuffer*, i8*)*, void (%class.SkBinaryWriteBuffer*, i8*)** %90, align 8
  call void %91(%class.SkBinaryWriteBuffer* %0, i8* %87) #8
  %92 = load i8*, i8** %3, align 8
  %93 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %38, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = add nsw i32 %94, 1
  %96 = call i32* @_ZN10SkTHashMapIPKcj10SkGoodHashE3setES1_j(%class.SkTHashMap* %38, i8* %92, i32 %95)
  br label %97

97:                                               ; preds = %86, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %98

98:                                               ; preds = %97, %22
  %99 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %100 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 4
  %103 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = icmp ugt i64 %102, %104
  br i1 %105, label %106, label %107

106:                                              ; preds = %98
  call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %99, i64 %102) #8
  br label %107

107:                                              ; preds = %98, %106
  store i64 %102, i64* %100, align 8
  %108 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %99, i64 0, i32 0
  %109 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 0
  %110 = bitcast %class.SkFlattenable* %1 to void (%class.SkFlattenable*, %class.SkWriteBuffer*)***
  %111 = load void (%class.SkFlattenable*, %class.SkWriteBuffer*)**, void (%class.SkFlattenable*, %class.SkWriteBuffer*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkFlattenable*, %class.SkWriteBuffer*)*, void (%class.SkFlattenable*, %class.SkWriteBuffer*)** %111, i64 5
  %113 = load void (%class.SkFlattenable*, %class.SkWriteBuffer*)*, void (%class.SkFlattenable*, %class.SkWriteBuffer*)** %112, align 8
  call void %113(%class.SkFlattenable* nonnull %1, %class.SkWriteBuffer* dereferenceable(56) %109) #8
  %114 = load i64, i64* %100, align 8
  %115 = sub i64 %114, %102
  %116 = trunc i64 %115 to i32
  %117 = load i8*, i8** %108, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 %101
  %119 = bitcast i8* %118 to i32*
  store i32 %116, i32* %119, align 4
  br label %120

120:                                              ; preds = %107, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN10SkTHashMapIPKcj10SkGoodHashE3setES1_j(%class.SkTHashMap*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { i8*, i32 }, align 8
  %5 = bitcast { i8*, i32 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = shl nsw i32 %9, 2
  %11 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, 3
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0
  %17 = icmp sgt i32 %12, 0
  %18 = shl nsw i32 %12, 1
  %19 = select i1 %17, i32 %18, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapIPKcj10SkGoodHashE4PairES2_S5_E6resizeEi(%class.SkTHashTable* %16, i32 %19) #8
  br label %20

20:                                               ; preds = %3, %15
  %21 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %22 = call i32 %21(i8* nonnull %5, i64 8, i32 0) #8
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, i32 1, i32 %22
  %25 = load i32, i32* %11, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %67

27:                                               ; preds = %20
  %28 = add nsw i32 %25, -1
  %29 = and i32 %24, %28
  %30 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %30, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %60, %27
  %35 = phi i32 [ 0, %27 ], [ %65, %60 ]
  %36 = phi i32 [ %29, %27 ], [ %64, %60 ]
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %31, i64 %37
  %39 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %31, i64 %37, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %38, i64 0, i32 0
  %44 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %38 to i64*
  store i64 %33, i64* %44, align 8
  %45 = load i32, i32* %7, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %31, i64 %37, i32 0, i32 0, i32 1
  store i32 %45, i32* %46, align 8
  store i32 %24, i32* %39, align 8
  %47 = load i32, i32* %8, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %8, align 8
  br label %67

49:                                               ; preds = %34
  %50 = icmp eq i32 %24, %40
  br i1 %50, label %51, label %60

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %38, i64 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %32, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %38, i64 0, i32 0
  %57 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %38 to i64*
  store i64 %33, i64* %57, align 8
  %58 = load i32, i32* %7, align 8
  %59 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %31, i64 %37, i32 0, i32 0, i32 1
  store i32 %58, i32* %59, align 8
  br label %67

60:                                               ; preds = %51, %49
  %61 = add nsw i32 %36, -1
  %62 = icmp slt i32 %36, 1
  %63 = select i1 %62, i32 %25, i32 0
  %64 = add nsw i32 %61, %63
  %65 = add nuw nsw i32 %35, 1
  %66 = icmp eq i32 %65, %25
  br i1 %66, label %67, label %34

67:                                               ; preds = %60, %20, %42, %55
  %68 = phi %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* [ %56, %55 ], [ %43, %42 ], [ null, %20 ], [ null, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5)
  %69 = getelementptr inbounds %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair", %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* %68, i64 0, i32 0, i32 1
  ret i32* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkBinaryWriteBuffer10writePad32EPKvm(%class.SkBinaryWriteBuffer*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3
  %5 = add i64 %2, 3
  %6 = and i64 %5, -4
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %6
  %10 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %0, i64 0, i32 3, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  tail call void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32* %4, i64 %9) #8
  br label %14

14:                                               ; preds = %13, %3
  store i64 %9, i64* %7, align 8
  %15 = getelementptr inbounds %class.SkWriter32, %class.SkWriter32* %4, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %8
  %18 = icmp eq i64 %6, %2
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = bitcast i8* %17 to i32*
  %21 = lshr i64 %5, 2
  %22 = add nsw i64 %21, -1
  %23 = getelementptr inbounds i32, i32* %20, i64 %22
  store i32 0, i32* %23, align 4
  br label %24

24:                                               ; preds = %19, %14
  %25 = icmp eq i64 %2, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %1, i64 %2, i1 false) #8
  br label %27

27:                                               ; preds = %24, %26
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i64 @_ZNK8SkRegion13writeToMemoryEPv(%class.SkRegion*, i8*) local_unnamed_addr #3

declare i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath*, i8*) local_unnamed_addr #3

declare void @_ZN10SkWriter3213growToAtLeastEm(%class.SkWriter32*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare i32 @_ZN8SkPtrSet3addEPv(%class.SkPtrSet*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIPKcj10SkGoodHashE4PairES2_S5_E6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %32

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 24) #8
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #9
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %19, i64 %13
  br label %21

21:                                               ; preds = %21, %12
  %22 = phi %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* [ %19, %12 ], [ %24, %21 ]
  %23 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #8
  %24 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %22, i64 1
  %25 = icmp eq %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %24, %20
  br i1 %25, label %26, label %21

26:                                               ; preds = %21
  %27 = ptrtoint i8* %18 to i64
  %28 = load %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %7, align 8
  %29 = icmp eq %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %28, null
  store i64 %27, i64* %8, align 8
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %28 to i8*
  tail call void @_ZdaPv(i8* %31) #9
  br label %32

32:                                               ; preds = %30, %26, %11
  %33 = icmp sgt i32 %4, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = inttoptr i64 %9 to %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*
  %36 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %37 = zext i32 %4 to i64
  br label %43

38:                                               ; preds = %99, %32
  %39 = icmp eq i64 %9, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %41) #9
  br label %42

42:                                               ; preds = %38, %40
  ret void

43:                                               ; preds = %99, %34
  %44 = phi i64 [ 0, %34 ], [ %100, %99 ]
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %99, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 0
  %50 = getelementptr inbounds %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair", %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* %49, i64 0, i32 0, i32 0
  %51 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %52 = bitcast %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* %49 to i8*
  %53 = tail call i32 %51(i8* %52, i64 8, i32 0) #8
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %54, i32 1, i32 %53
  %56 = load i32, i32* %3, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %99

58:                                               ; preds = %48
  %59 = add nsw i32 %56, -1
  %60 = and i32 %55, %59
  %61 = load %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"** %36, align 8
  br label %62

62:                                               ; preds = %92, %58
  %63 = phi i32 [ 0, %58 ], [ %97, %92 ]
  %64 = phi i32 [ %60, %58 ], [ %96, %92 ]
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %61, i64 %65
  %67 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %61, i64 %65, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %79

70:                                               ; preds = %62
  %71 = bitcast %"struct.SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair"* %49 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %66 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %61, i64 %65, i32 0, i32 0, i32 1
  store i32 %75, i32* %76, align 8
  store i32 %55, i32* %67, align 8
  %77 = load i32, i32* %5, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %5, align 8
  br label %99

79:                                               ; preds = %62
  %80 = icmp eq i32 %55, %68
  br i1 %80, label %81, label %92

81:                                               ; preds = %79
  %82 = load i8*, i8** %50, align 8
  %83 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %66, i64 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %82, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %81
  %87 = ptrtoint i8* %82 to i64
  %88 = bitcast %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %66 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* %61, i64 %65, i32 0, i32 0, i32 1
  store i32 %90, i32* %91, align 8
  br label %99

92:                                               ; preds = %81, %79
  %93 = add nsw i32 %64, -1
  %94 = icmp slt i32 %64, 1
  %95 = select i1 %94, i32 %56, i32 0
  %96 = add nsw i32 %93, %95
  %97 = add nuw nsw i32 %63, 1
  %98 = icmp eq i32 %97, %56
  br i1 %98, label %99, label %62

99:                                               ; preds = %92, %86, %70, %48, %43
  %100 = add nuw nsw i64 %44, 1
  %101 = icmp eq i64 %100, %37
  br i1 %101, label %38, label %43
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
