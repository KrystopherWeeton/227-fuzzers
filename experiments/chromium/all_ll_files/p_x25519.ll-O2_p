; ModuleID = '../../third_party/boringssl/src/crypto/evp/p_x25519.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/p_x25519.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_ctx_st = type { %struct.evp_pkey_method_st*, %struct.engine_st*, %struct.evp_pkey_st*, %struct.evp_pkey_st*, i32, i8* }
%struct.evp_pkey_method_st = type { i32, {}*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* }
%struct.engine_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.cbs_st = type opaque
%struct.cbb_st = type opaque
%struct.X25519_KEY = type { [32 x i8], [32 x i8], i8 }

@x25519_pkey_meth = hidden local_unnamed_addr constant { i32, i32 (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* } { i32 948, i32 (%struct.evp_pkey_ctx_st*)* null, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)* @pkey_x25519_copy, void (%struct.evp_pkey_ctx_st*)* null, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* @pkey_x25519_keygen, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)* @pkey_x25519_derive, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* null, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* @pkey_x25519_ctrl }, align 8
@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/evp/p_x25519.c\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @pkey_x25519_copy(%struct.evp_pkey_ctx_st* nocapture readnone, %struct.evp_pkey_ctx_st* nocapture readnone) #0 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_x25519_keygen(%struct.evp_pkey_ctx_st* nocapture readnone, %struct.evp_pkey_st*) #1 {
  %3 = tail call i8* @OPENSSL_malloc(i64 65) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 30) #3
  br label %15

6:                                                ; preds = %2
  %7 = tail call i32 @EVP_PKEY_set_type(%struct.evp_pkey_st* %1, i32 948) #3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @OPENSSL_free(i8* nonnull %3) #3
  br label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %3, i64 32
  tail call void @X25519_keypair(i8* nonnull %3, i8* %11) #3
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @OPENSSL_free(i8* %14) #3
  store i8* %3, i8** %13, align 8
  br label %15

15:                                               ; preds = %10, %9, %5
  %16 = phi i32 [ 0, %5 ], [ 1, %10 ], [ 0, %9 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_x25519_derive(%struct.evp_pkey_ctx_st* nocapture readonly, i8*, i64* nocapture) #1 {
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %5 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 3
  %9 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_st* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 117, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 50) #3
  br label %41

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %5, i64 0, i32 2, i32 0
  %14 = bitcast i8** %13 to %struct.X25519_KEY**
  %15 = load %struct.X25519_KEY*, %struct.X25519_KEY** %14, align 8
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %9, i64 0, i32 2, i32 0
  %17 = bitcast i8** %16 to %struct.X25519_KEY**
  %18 = load %struct.X25519_KEY*, %struct.X25519_KEY** %17, align 8
  %19 = icmp eq %struct.X25519_KEY* %15, null
  %20 = icmp eq %struct.X25519_KEY* %18, null
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %12
  tail call void @ERR_put_error(i32 6, i32 0, i32 117, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 57) #3
  br label %41

23:                                               ; preds = %12
  %24 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %15, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @ERR_put_error(i32 6, i32 0, i32 130, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 62) #3
  br label %41

28:                                               ; preds = %23
  %29 = icmp eq i8* %1, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %28
  %31 = load i64, i64* %2, align 8
  %32 = icmp ult i64 %31, 32
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @ERR_put_error(i32 6, i32 0, i32 100, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 68) #3
  br label %41

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %15, i64 0, i32 1, i64 0
  %36 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %18, i64 0, i32 0, i64 0
  %37 = tail call i32 @X25519(i8* nonnull %1, i8* %35, i8* %36) #3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  tail call void @ERR_put_error(i32 6, i32 0, i32 134, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 72) #3
  br label %41

40:                                               ; preds = %34, %28
  store i64 32, i64* %2, align 8
  br label %41

41:                                               ; preds = %22, %27, %33, %39, %40, %11
  %42 = phi i32 [ 0, %11 ], [ 0, %22 ], [ 0, %33 ], [ 1, %40 ], [ 0, %39 ], [ 0, %27 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_x25519_ctrl(%struct.evp_pkey_ctx_st* nocapture readnone, i32, i32, i8* nocapture readnone) #1 {
  %5 = icmp eq i32 %1, 3
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @ERR_put_error(i32 6, i32 0, i32 101, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 89) #3
  br label %7

7:                                                ; preds = %4, %6
  %8 = phi i32 [ 0, %6 ], [ 1, %4 ]
  ret i32 %8
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32 @EVP_PKEY_set_type(%struct.evp_pkey_st*, i32) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @X25519_keypair(i8*, i8*) local_unnamed_addr #2

declare i32 @X25519(i8*, i8*, i8*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
