; ModuleID = '../../components/autofill/core/browser/data_model/autofill_data_model.cc'
source_filename = "../../components/autofill/core/browser/data_model/autofill_data_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::TimeDelta" = type { i64 }
%"struct.autofill::AutofillMetadata" = type { %"class.std::__1::basic_string", i64, %"class.base::Time", i8, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.autofill::DenseSet" = type opaque
%"class.autofill::AutofillType" = type { i32, i32, i32 }

@_ZTVN8autofill17AutofillDataModelE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AutofillDataModel"*)* @_ZN8autofill17AutofillDataModelD2Ev to i8*), i8* bitcast (void (%"class.autofill::AutofillDataModel"*)* @_ZN8autofill17AutofillDataModelD0Ev to i8*), i8* bitcast (void (%"class.autofill::FormGroup"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string"*, %"class.autofill::DenseSet"*)* @_ZNK8autofill9FormGroup16GetMatchingTypesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS2_IcNS3_IcEENS5_IcEEEEPNS_8DenseSetINS_15ServerFieldTypeELSG_118EEE to i8*), i8* bitcast (void (%"class.autofill::FormGroup"*, %"class.std::__1::basic_string"*, %"class.autofill::DenseSet"*)* @_ZNK8autofill9FormGroup16GetNonEmptyTypesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_8DenseSetINS_15ServerFieldTypeELSB_118EEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.autofill::FormGroup"*, i32)* @_ZNK8autofill9FormGroup21GetVerificationStatusENS_15ServerFieldTypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.std::__1::basic_string.4"*, %"class.autofill::FormGroup"*, %"class.autofill::AutofillType"*, %"class.std::__1::basic_string"*)* @_ZNK8autofill9FormGroup11GetInfoImplERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.autofill::FormGroup"*, %"class.autofill::AutofillType"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string"*, i32)* @_ZN8autofill9FormGroup33SetInfoWithVerificationStatusImplERKNS_12AutofillTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS5_IcNS6_IcEENS8_IcEEEENS_18structured_address18VerificationStatusE to i8*), i8* bitcast (i32 (%"class.autofill::FormGroup"*, i32)* @_ZNK8autofill9FormGroup25GetVerificationStatusImplENS_15ServerFieldTypeE to i8*), i8* bitcast (void (%"struct.autofill::AutofillMetadata"*, %"class.autofill::AutofillDataModel"*)* @_ZNK8autofill17AutofillDataModel11GetMetadataEv to i8*), i8* bitcast (i1 (%"class.autofill::AutofillDataModel"*, %"struct.autofill::AutofillMetadata"*)* @_ZN8autofill17AutofillDataModel11SetMetadataENS_16AutofillMetadataE to i8*), i8* bitcast (i1 (%"class.autofill::AutofillDataModel"*)* @_ZNK8autofill17AutofillDataModel11IsDeletableEv to i8*), i8* bitcast (i32 (%"class.autofill::AutofillDataModel"*, i32, i32)* @_ZNK8autofill17AutofillDataModel16GetValidityStateENS_15ServerFieldTypeENS0_16ValidationSourceE to i8*)] }, align 8

@_ZN8autofill17AutofillDataModelD1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillDataModel"*), void (%"class.autofill::AutofillDataModel"*)* @_ZN8autofill17AutofillDataModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill17AutofillDataModelC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.autofill::AutofillDataModel"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN8autofill17AutofillDataModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #13
  br label %18

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %15, i64 %17) #13
  br label %18

18:                                               ; preds = %10, %13
  %19 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #13
  br label %32

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %29, i64 %31) #13
  br label %32

32:                                               ; preds = %24, %27
  %33 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 3
  store i64 1, i64* %33, align 8
  %34 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4, i32 0, i32 0
  %35 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 5, i32 0, i32 0
  %36 = bitcast i64* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  %37 = tail call i64 @_ZN8autofill13AutofillClock3NowEv() #13
  store i64 %37, i64* %34, align 8
  %38 = tail call i64 @_ZN8autofill13AutofillClock3NowEv() #13
  store i64 %38, i64* %35, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN8autofill13AutofillClock3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill17AutofillDataModelD2Ev(%"class.autofill::AutofillDataModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN8autofill17AutofillDataModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8autofill17AutofillDataModelD0Ev(%"class.autofill::AutofillDataModel"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill17AutofillDataModel10IsVerifiedEv(%"class.autofill::AutofillDataModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %1
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %21 = select i1 %7, i8* %19, i8* %20
  %22 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %6 to i64
  %25 = select i1 %7, i64 %23, i64 %24
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %2, i8* %21, i64 %25) #13
  %26 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #13
  br label %29

29:                                               ; preds = %13, %16
  %30 = phi i1 [ %28, %16 ], [ false, %13 ]
  ret i1 %30
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill17AutofillDataModel9RecordUseEv(%"class.autofill::AutofillDataModel"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  %5 = tail call i64 @_ZN8autofill13AutofillClock3NowEv() #13
  %6 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8autofill17AutofillDataModel22UseDateEqualsInSecondsEPKS0_(%"class.autofill::AutofillDataModel"* nocapture readonly, %"class.autofill::AutofillDataModel"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub nsw i64 %6, %4
  %8 = add i64 %7, -9223372036854775807
  %9 = icmp ult i64 %8, 2
  %10 = sdiv i64 %7, 1000000
  %11 = select i1 %9, i64 %7, i64 %10
  %12 = icmp eq i64 %11, 0
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill17AutofillDataModel22HasGreaterFrecencyThanEPKS0_N4base4TimeE(%"class.autofill::AutofillDataModel"* nocapture readonly, %"class.autofill::AutofillDataModel"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %2, %8
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %5) #13
  %12 = add nsw i32 %11, 2
  %13 = sitofp i32 %12 to double
  %14 = call double @log(double %13) #13
  %15 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  %18 = uitofp i64 %17 to double
  %19 = call double @log(double %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %20 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %1, i64 0, i32 4, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = sub nsw i64 %2, %22
  %24 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %4) #13
  %26 = add nsw i32 %25, 2
  %27 = sitofp i32 %26 to double
  %28 = call double @log(double %27) #13
  %29 = insertelement <2 x double> undef, double %14, i32 0
  %30 = insertelement <2 x double> %29, double %28, i32 1
  %31 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %30
  %32 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %1, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  %35 = uitofp i64 %34 to double
  %36 = call double @log(double %35) #13
  %37 = insertelement <2 x double> undef, double %19, i32 0
  %38 = insertelement <2 x double> %37, double %36, i32 1
  %39 = fdiv <2 x double> %31, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %40 = extractelement <2 x double> %39, i32 0
  %41 = extractelement <2 x double> %39, i32 1
  %42 = fsub double %40, %41
  %43 = call double @llvm.fabs.f64(double %42)
  %44 = fcmp ogt double %43, 1.000000e-05
  br i1 %44, label %45, label %47

45:                                               ; preds = %3
  %46 = fcmp ogt double %40, %41
  br label %93

47:                                               ; preds = %3
  %48 = load i64, i64* %21, align 8
  %49 = load i64, i64* %7, align 8
  %50 = icmp eq i64 %49, %48
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = icmp sgt i64 %49, %48
  br label %93

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 1
  %55 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %1, i64 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i64 %61, i64 %62
  %64 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %66 to i64
  %71 = select i1 %67, i64 %69, i64 %70
  %72 = icmp ult i64 %63, %71
  %73 = select i1 %72, i64 %63, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %53
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %79 = select i1 %67, i8* %77, i8* %78
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %83 = select i1 %59, i8* %81, i8* %82
  %84 = call i32 @memcmp(i8* %79, i8* %83, i64 %73) #13
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %75, %53
  %87 = icmp ult i64 %71, %63
  %88 = zext i1 %72 to i32
  %89 = select i1 %87, i32 -1, i32 %88
  br label %90

90:                                               ; preds = %75, %86
  %91 = phi i32 [ %89, %86 ], [ %84, %75 ]
  %92 = icmp slt i32 %91, 0
  br label %93

93:                                               ; preds = %90, %51, %45
  %94 = phi i1 [ %46, %45 ], [ %52, %51 ], [ %92, %90 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK8autofill17AutofillDataModel16GetFrecencyScoreEN4base4TimeE(%"class.autofill::AutofillDataModel"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub nsw i64 %1, %6
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %3) #13
  %10 = add nsw i32 %9, 2
  %11 = sitofp i32 %10 to double
  %12 = call double @log(double %11) #13
  %13 = fsub double -0.000000e+00, %12
  %14 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  %17 = uitofp i64 %16 to double
  %18 = call double @log(double %17) #13
  %19 = fdiv double %13, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret double %19
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill17AutofillDataModel11GetMetadataEv(%"struct.autofill::AutofillMetadata"* noalias nocapture sret, %"class.autofill::AutofillDataModel"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.autofill::AutofillMetadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 48, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = getelementptr inbounds %"struct.autofill::AutofillMetadata", %"struct.autofill::AutofillMetadata"* %0, i64 0, i32 3
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.autofill::AutofillMetadata", %"struct.autofill::AutofillMetadata"* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %7 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.autofill::AutofillMetadata", %"struct.autofill::AutofillMetadata"* %0, i64 0, i32 1
  %9 = bitcast i64* %7 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill17AutofillDataModel11SetMetadataENS_16AutofillMetadataE(%"class.autofill::AutofillDataModel"* nocapture, %"struct.autofill::AutofillMetadata"* nocapture readonly) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.autofill::AutofillMetadata", %"struct.autofill::AutofillMetadata"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 3
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.autofill::AutofillMetadata", %"struct.autofill::AutofillMetadata"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  ret i1 true
}

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill17AutofillDataModel11IsDeletableEv(%"class.autofill::AutofillDataModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %0, i64 0, i32 4
  %3 = tail call zeroext i1 @_ZN8autofill35IsAutofillEntryWithUseDateDeletableERKN4base4TimeE(%"class.base::Time"* dereferenceable(8) %2) #13
  ret i1 %3
}

declare zeroext i1 @_ZN8autofill35IsAutofillEntryWithUseDateDeletableERKN4base4TimeE(%"class.base::Time"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8autofill17AutofillDataModel16GetValidityStateENS_15ServerFieldTypeENS0_16ValidationSourceE(%"class.autofill::AutofillDataModel"* nocapture readnone, i32, i32) unnamed_addr #9 align 2 {
  ret i32 4
}

declare void @_ZNK8autofill9FormGroup16GetMatchingTypesERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS2_IcNS3_IcEENS5_IcEEEEPNS_8DenseSetINS_15ServerFieldTypeELSG_118EEE(%"class.autofill::FormGroup"*, %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.autofill::DenseSet"*) unnamed_addr #2

declare void @_ZNK8autofill9FormGroup16GetNonEmptyTypesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_8DenseSetINS_15ServerFieldTypeELSB_118EEE(%"class.autofill::FormGroup"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.autofill::DenseSet"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZNK8autofill9FormGroup21GetVerificationStatusENS_15ServerFieldTypeE(%"class.autofill::FormGroup"*, i32) unnamed_addr #2

declare void @_ZNK8autofill9FormGroup11GetInfoImplERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string.4"* sret, %"class.autofill::FormGroup"*, %"class.autofill::AutofillType"* dereferenceable(12), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN8autofill9FormGroup33SetInfoWithVerificationStatusImplERKNS_12AutofillTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS5_IcNS6_IcEENS8_IcEEEENS_18structured_address18VerificationStatusE(%"class.autofill::FormGroup"*, %"class.autofill::AutofillType"* dereferenceable(12), %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #2

declare i32 @_ZNK8autofill9FormGroup25GetVerificationStatusImplENS_15ServerFieldTypeE(%"class.autofill::FormGroup"*, i32) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
