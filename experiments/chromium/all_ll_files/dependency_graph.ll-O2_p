; ModuleID = '../../components/keyed_service/core/dependency_graph.cc'
source_filename = "../../components/keyed_service/core/dependency_graph.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%class.DependencyGraph = type { %"class.std::__1::vector", %"class.std::__1::multimap", %"class.std::__1::vector" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.DependencyNode**, %class.DependencyNode**, %"class.std::__1::__compressed_pair" }
%class.DependencyNode = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.DependencyNode** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %class.DependencyNode*, %class.DependencyNode* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::identity" = type { i8 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %class.DependencyNode**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4base14circular_dequeIP14DependencyNodeED2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIP14DependencyNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm = comdat any

$_ZN4base14circular_dequeIP14DependencyNodeE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIP14DependencyNodeE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZN4base8internal12VectorBufferIP14DependencyNodeE9MoveRangeIS3_Li0EEEvPS3_S6_S6_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeIP14DependencyNodeE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_ = comdat any

$_ZNSt3__19remove_ifIN4base8internal23circular_deque_iteratorIP14DependencyNodeEEZNS1_6ranges6removeIS6_S5_NS1_8identityENS_26random_access_iterator_tagEEEDaT_SB_RKT0_T1_EUlTyOSB_E_EESB_SB_SB_SC_ = comdat any

$_ZN4base14circular_dequeIP14DependencyNodeE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm = comdat any

@.str = private unnamed_addr constant [11 x i8] c"digraph {\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"  /* Dependencies */\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"\0A  /* Toplevel attachments */\0A\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"\0A  /* Toplevel node */\0A\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c" [shape=box];\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN15DependencyGraphC1Ev = hidden unnamed_addr alias void (%class.DependencyGraph*), void (%class.DependencyGraph*)* @_ZN15DependencyGraphC2Ev
@_ZN15DependencyGraphD1Ev = hidden unnamed_addr alias void (%class.DependencyGraph*), void (%class.DependencyGraph*)* @_ZN15DependencyGraphD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15DependencyGraphC2Ev(%class.DependencyGraph*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.DependencyGraph* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #12
  %3 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15DependencyGraphD2Ev(%class.DependencyGraph*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %class.DependencyNode**, %class.DependencyNode*** %2, align 8
  %4 = icmp eq %class.DependencyNode** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %class.DependencyNode** %3 to i64
  %7 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %class.DependencyNode*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %class.DependencyNode** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %11, %"class.std::__1::__tree_node"* %14) #12
  %15 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.DependencyNode**, %class.DependencyNode*** %15, align 8
  %17 = icmp eq %class.DependencyNode** %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %10
  %19 = ptrtoint %class.DependencyNode** %16 to i64
  %20 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %class.DependencyNode*** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %class.DependencyNode** %16 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %10, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15DependencyGraph7AddNodeEP14DependencyNode(%class.DependencyGraph*, %class.DependencyNode*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.DependencyNode* %1 to i64
  %4 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %class.DependencyNode**, %class.DependencyNode*** %4, align 8
  %6 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %class.DependencyNode**, %class.DependencyNode*** %6, align 8
  %8 = icmp eq %class.DependencyNode** %5, %7
  %9 = ptrtoint %class.DependencyNode** %7 to i64
  br i1 %8, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %class.DependencyNode** %5 to i64*
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %5, i64 1
  %13 = ptrtoint %class.DependencyNode** %12 to i64
  %14 = bitcast %class.DependencyNode*** %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %72

15:                                               ; preds = %2
  %16 = ptrtoint %class.DependencyNode** %5 to i64
  %17 = bitcast %class.DependencyNode*** %4 to i64*
  %18 = bitcast %class.DependencyGraph* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = icmp ugt i64 %22, 2305843009213693951
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = bitcast %class.DependencyGraph* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #14
  unreachable

26:                                               ; preds = %15
  %27 = bitcast %class.DependencyNode*** %6 to i64*
  %28 = sub i64 %9, %19
  %29 = ashr exact i64 %28, 3
  %30 = icmp ult i64 %29, 1152921504606846975
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = ashr exact i64 %28, 2
  %33 = icmp ult i64 %32, %22
  %34 = select i1 %33, i64 %22, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = icmp ugt i64 %34, 2305843009213693951
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void @abort() #14
  unreachable

39:                                               ; preds = %36, %26
  %40 = phi i64 [ %34, %36 ], [ 2305843009213693951, %26 ]
  %41 = shl i64 %40, 3
  %42 = tail call i8* @_Znwm(i64 %41) #13
  %43 = bitcast i8* %42 to %class.DependencyNode**
  br label %44

44:                                               ; preds = %39, %31
  %45 = phi i64 [ %40, %39 ], [ 0, %31 ]
  %46 = phi %class.DependencyNode** [ %43, %39 ], [ null, %31 ]
  %47 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %46, i64 %21
  %48 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %46, i64 %45
  %49 = ptrtoint %class.DependencyNode** %48 to i64
  %50 = bitcast %class.DependencyNode** %47 to i64*
  store i64 %3, i64* %50, align 8
  %51 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %47, i64 1
  %52 = ptrtoint %class.DependencyNode** %51 to i64
  %53 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %class.DependencyNode**, %class.DependencyNode*** %53, align 8
  %55 = load i64, i64* %17, align 8
  %56 = ptrtoint %class.DependencyNode** %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %47, i64 %59
  %61 = ptrtoint %class.DependencyNode** %60 to i64
  %62 = icmp sgt i64 %57, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %44
  %64 = bitcast %class.DependencyNode** %60 to i8*
  %65 = bitcast %class.DependencyNode** %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %57, i1 false) #12
  %66 = load %class.DependencyNode**, %class.DependencyNode*** %53, align 8
  br label %67

67:                                               ; preds = %63, %44
  %68 = phi %class.DependencyNode** [ %54, %44 ], [ %66, %63 ]
  store i64 %61, i64* %18, align 8
  store i64 %52, i64* %17, align 8
  store i64 %49, i64* %27, align 8
  %69 = icmp eq %class.DependencyNode** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %class.DependencyNode** %68 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %10, %67, %70
  %73 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %74 = bitcast %"class.std::__1::vector"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 1
  %77 = bitcast %class.DependencyNode*** %76 to i64*
  store i64 %75, i64* %77, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15DependencyGraph10RemoveNodeEP14DependencyNode(%class.DependencyGraph*, %class.DependencyNode*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.DependencyNode**, %class.DependencyNode*** %3, align 8
  %5 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %class.DependencyNode**, %class.DependencyNode*** %5, align 8
  %7 = icmp eq %class.DependencyNode** %4, %6
  %8 = ptrtoint %class.DependencyNode** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %class.DependencyNode** [ %14, %13 ], [ %4, %2 ]
  %11 = load %class.DependencyNode*, %class.DependencyNode** %10, align 8
  %12 = icmp eq %class.DependencyNode* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %10, i64 1
  %15 = icmp eq %class.DependencyNode** %14, %6
  br i1 %15, label %72, label %9

16:                                               ; preds = %9, %2
  %17 = phi %class.DependencyNode** [ %4, %2 ], [ %10, %9 ]
  %18 = ptrtoint %class.DependencyNode** %17 to i64
  %19 = icmp eq %class.DependencyNode** %17, %6
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %17, i64 1
  %22 = icmp eq %class.DependencyNode** %21, %6
  br i1 %22, label %72, label %23

23:                                               ; preds = %20
  %24 = getelementptr %class.DependencyNode*, %class.DependencyNode** %6, i64 -2
  %25 = ptrtoint %class.DependencyNode** %24 to i64
  %26 = sub i64 %25, %18
  %27 = lshr i64 %26, 3
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %23, %43
  %32 = phi %class.DependencyNode** [ %45, %43 ], [ %21, %23 ]
  %33 = phi i64 [ %44, %43 ], [ %18, %23 ]
  %34 = phi i64 [ %46, %43 ], [ %29, %23 ]
  %35 = load %class.DependencyNode*, %class.DependencyNode** %32, align 8
  %36 = icmp eq %class.DependencyNode* %35, %1
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %class.DependencyNode* %35 to i64
  %39 = inttoptr i64 %33 to %class.DependencyNode**
  %40 = inttoptr i64 %33 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %39, i64 1
  %42 = ptrtoint %class.DependencyNode** %41 to i64
  br label %43

43:                                               ; preds = %37, %31
  %44 = phi i64 [ %33, %31 ], [ %42, %37 ]
  %45 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %32, i64 1
  %46 = add i64 %34, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %31, !llvm.loop !2

48:                                               ; preds = %43, %23
  %49 = phi i64 [ undef, %23 ], [ %44, %43 ]
  %50 = phi %class.DependencyNode** [ %21, %23 ], [ %45, %43 ]
  %51 = phi i64 [ %18, %23 ], [ %44, %43 ]
  %52 = icmp ult i64 %26, 24
  br i1 %52, label %69, label %53

53:                                               ; preds = %48, %203
  %54 = phi %class.DependencyNode** [ %205, %203 ], [ %50, %48 ]
  %55 = phi i64 [ %204, %203 ], [ %51, %48 ]
  %56 = load %class.DependencyNode*, %class.DependencyNode** %54, align 8
  %57 = icmp eq %class.DependencyNode* %56, %1
  br i1 %57, label %64, label %58

58:                                               ; preds = %53
  %59 = ptrtoint %class.DependencyNode* %56 to i64
  %60 = inttoptr i64 %55 to %class.DependencyNode**
  %61 = inttoptr i64 %55 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %60, i64 1
  %63 = ptrtoint %class.DependencyNode** %62 to i64
  br label %64

64:                                               ; preds = %58, %53
  %65 = phi i64 [ %55, %53 ], [ %63, %58 ]
  %66 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %54, i64 1
  %67 = load %class.DependencyNode*, %class.DependencyNode** %66, align 8
  %68 = icmp eq %class.DependencyNode* %67, %1
  br i1 %68, label %181, label %175

69:                                               ; preds = %203, %48
  %70 = phi i64 [ %49, %48 ], [ %204, %203 ]
  %71 = load %class.DependencyNode**, %class.DependencyNode*** %5, align 8
  br label %72

72:                                               ; preds = %13, %69, %20, %16
  %73 = phi %class.DependencyNode** [ %71, %69 ], [ %6, %16 ], [ %6, %20 ], [ %6, %13 ]
  %74 = phi i64 [ %70, %69 ], [ %18, %16 ], [ %18, %20 ], [ %8, %13 ]
  %75 = inttoptr i64 %74 to %class.DependencyNode**
  %76 = icmp eq %class.DependencyNode** %73, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %72
  store %class.DependencyNode** %75, %class.DependencyNode*** %5, align 8
  br label %78

78:                                               ; preds = %72, %77
  %79 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %79, i64 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::multimap"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %84 = inttoptr i64 %82 to %"class.std::__1::__tree_end_node"*
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %83, %84
  br i1 %85, label %169, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %88 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %86, %167
  %90 = phi %"class.std::__1::__tree_end_node"* [ %84, %86 ], [ %119, %167 ]
  %91 = phi i64 [ %82, %86 ], [ %120, %167 ]
  %92 = inttoptr i64 %91 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 1
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %102

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 2
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, %92
  br i1 %101, label %118, label %109

102:                                              ; preds = %89, %102
  %103 = phi %"class.std::__1::__tree_node_base"* [ %105, %102 ], [ %94, %89 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %102

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 0
  br label %118

109:                                              ; preds = %96, %109
  %110 = phi %"class.std::__1::__tree_end_node"** [ %113, %109 ], [ %97, %96 ]
  %111 = bitcast %"class.std::__1::__tree_end_node"** %110 to %"class.std::__1::__tree_node_base"**
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 2
  %114 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %114, i64 0, i32 0
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %115, align 8
  %117 = icmp eq %"class.std::__1::__tree_node_base"* %116, %112
  br i1 %117, label %118, label %109

118:                                              ; preds = %109, %96, %107
  %119 = phi %"class.std::__1::__tree_end_node"* [ %108, %107 ], [ %98, %96 ], [ %114, %109 ]
  %120 = ptrtoint %"class.std::__1::__tree_end_node"* %119 to i64
  %121 = inttoptr i64 %91 to %"class.std::__1::__tree_node"*
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load %class.DependencyNode*, %class.DependencyNode** %122, align 8
  %124 = icmp eq %class.DependencyNode* %123, %1
  br i1 %124, label %129, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 1, i32 0, i32 1
  %127 = load %class.DependencyNode*, %class.DependencyNode** %126, align 8
  %128 = icmp eq %class.DependencyNode* %127, %1
  br i1 %128, label %129, label %167

129:                                              ; preds = %125, %118
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %140

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %135 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_end_node"**
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, %92
  br i1 %139, label %156, label %147

140:                                              ; preds = %129, %140
  %141 = phi %"class.std::__1::__tree_node_base"* [ %143, %140 ], [ %131, %129 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, null
  br i1 %144, label %145, label %140

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 0
  br label %156

147:                                              ; preds = %133, %147
  %148 = phi %"class.std::__1::__tree_end_node"** [ %151, %147 ], [ %135, %133 ]
  %149 = bitcast %"class.std::__1::__tree_end_node"** %148 to %"class.std::__1::__tree_node_base"**
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %150, i64 0, i32 2
  %152 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, %150
  br i1 %155, label %156, label %147

156:                                              ; preds = %147, %145, %133
  %157 = phi %"class.std::__1::__tree_end_node"* [ %146, %145 ], [ %136, %133 ], [ %152, %147 ]
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %159 = icmp eq %"class.std::__1::__tree_end_node"* %158, %90
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = ptrtoint %"class.std::__1::__tree_end_node"* %157 to i64
  store i64 %161, i64* %81, align 8
  br label %162

162:                                              ; preds = %156, %160
  %163 = load i64, i64* %87, align 8
  %164 = add i64 %163, -1
  store i64 %164, i64* %87, align 8
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %165, %"class.std::__1::__tree_node_base"* %92) #12
  %166 = inttoptr i64 %91 to i8*
  tail call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %162, %125
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %83, %119
  br i1 %168, label %169, label %89

169:                                              ; preds = %167, %78
  %170 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %171 = bitcast %"class.std::__1::vector"* %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 1
  %174 = bitcast %class.DependencyNode*** %173 to i64*
  store i64 %172, i64* %174, align 8
  ret void

175:                                              ; preds = %64
  %176 = ptrtoint %class.DependencyNode* %67 to i64
  %177 = inttoptr i64 %65 to %class.DependencyNode**
  %178 = inttoptr i64 %65 to i64*
  store i64 %176, i64* %178, align 8
  %179 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %177, i64 1
  %180 = ptrtoint %class.DependencyNode** %179 to i64
  br label %181

181:                                              ; preds = %175, %64
  %182 = phi i64 [ %65, %64 ], [ %180, %175 ]
  %183 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %54, i64 2
  %184 = load %class.DependencyNode*, %class.DependencyNode** %183, align 8
  %185 = icmp eq %class.DependencyNode* %184, %1
  br i1 %185, label %192, label %186

186:                                              ; preds = %181
  %187 = ptrtoint %class.DependencyNode* %184 to i64
  %188 = inttoptr i64 %182 to %class.DependencyNode**
  %189 = inttoptr i64 %182 to i64*
  store i64 %187, i64* %189, align 8
  %190 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %188, i64 1
  %191 = ptrtoint %class.DependencyNode** %190 to i64
  br label %192

192:                                              ; preds = %186, %181
  %193 = phi i64 [ %182, %181 ], [ %191, %186 ]
  %194 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %54, i64 3
  %195 = load %class.DependencyNode*, %class.DependencyNode** %194, align 8
  %196 = icmp eq %class.DependencyNode* %195, %1
  br i1 %196, label %203, label %197

197:                                              ; preds = %192
  %198 = ptrtoint %class.DependencyNode* %195 to i64
  %199 = inttoptr i64 %193 to %class.DependencyNode**
  %200 = inttoptr i64 %193 to i64*
  store i64 %198, i64* %200, align 8
  %201 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %199, i64 1
  %202 = ptrtoint %class.DependencyNode** %201 to i64
  br label %203

203:                                              ; preds = %197, %192
  %204 = phi i64 [ %193, %192 ], [ %202, %197 ]
  %205 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %54, i64 4
  %206 = icmp eq %class.DependencyNode** %205, %6
  br i1 %206, label %69, label %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15DependencyGraph7AddEdgeEP14DependencyNodeS1_(%class.DependencyGraph*, %class.DependencyNode*, %class.DependencyNode*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1
  %5 = ptrtoint %class.DependencyNode* %1 to i64
  %6 = ptrtoint %class.DependencyNode* %2 to i64
  %7 = tail call i8* @_Znwm(i64 48) #13, !noalias !4
  %8 = getelementptr inbounds i8, i8* %7, i64 32
  %9 = bitcast i8* %8 to i64*
  store i64 %5, i64* %9, align 8, !noalias !4
  %10 = getelementptr inbounds i8, i8* %7, i64 40
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8, !noalias !4
  %12 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %3, %35
  %17 = phi %"class.std::__1::__tree_node"* [ %37, %35 ], [ %14, %3 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %class.DependencyNode*, %class.DependencyNode** %18, align 8
  %20 = icmp ugt %class.DependencyNode* %19, %1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  br label %40

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  br label %40

35:                                               ; preds = %28, %21
  %36 = phi %"class.std::__1::__tree_node_base"* [ %23, %21 ], [ %30, %28 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %16

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %25
  %41 = phi %"class.std::__1::__tree_end_node"* [ %12, %38 ], [ %27, %25 ], [ %34, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %26, %25 ], [ %33, %32 ]
  %43 = bitcast i8* %7 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds i8, i8* %7, i64 16
  %45 = bitcast i8* %44 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %45, align 8
  %46 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %7, i8** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %4, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %40
  %53 = ptrtoint %"class.std::__1::__tree_node_base"* %50 to i64
  %54 = bitcast %"class.std::__1::multimap"* %4 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %56

56:                                               ; preds = %40, %52
  %57 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %55, %52 ]
  %58 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %59, %"class.std::__1::__tree_node_base"* %57) #12
  %60 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %64 = bitcast %"class.std::__1::vector"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 1
  %67 = bitcast %class.DependencyNode*** %66 to i64*
  store i64 %65, i64* %67, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15DependencyGraph20GetConstructionOrderEPNSt3__16vectorIP14DependencyNodeNS0_9allocatorIS3_EEEE(%class.DependencyGraph*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.DependencyNode**, %class.DependencyNode*** %4, align 8
  %6 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %class.DependencyNode**, %class.DependencyNode*** %6, align 8
  %8 = icmp eq %class.DependencyNode** %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN15DependencyGraph22BuildConstructionOrderEv(%class.DependencyGraph* %0)
  br i1 %10, label %11, label %16

11:                                               ; preds = %9, %2
  %12 = icmp eq %"class.std::__1::vector"* %3, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = load %class.DependencyNode**, %class.DependencyNode*** %4, align 8
  %15 = load %class.DependencyNode**, %class.DependencyNode*** %6, align 8
  tail call void @_ZNSt3__16vectorIP14DependencyNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %1, %class.DependencyNode** %14, %class.DependencyNode** %15) #12
  br label %16

16:                                               ; preds = %13, %11, %9
  %17 = phi i1 [ false, %9 ], [ true, %11 ], [ true, %13 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15DependencyGraph22BuildConstructionOrderEv(%class.DependencyGraph*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::identity", align 1
  %3 = alloca %"class.base::circular_deque", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::multimap", align 8
  %6 = bitcast %"class.base::circular_deque"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.DependencyNode**, %class.DependencyNode*** %10, align 8
  %12 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %class.DependencyNode**, %class.DependencyNode*** %12, align 8
  %14 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %15 = icmp eq %class.DependencyNode** %11, %13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false) #12
  br i1 %15, label %37, label %16

16:                                               ; preds = %1, %32
  %17 = phi %class.DependencyNode** [ %35, %32 ], [ %11, %1 ]
  call void @_ZN4base14circular_dequeIP14DependencyNodeE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %3, i64 1) #12
  %18 = load i64, i64* %9, align 8
  %19 = call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %18) #12
  %20 = bitcast %class.DependencyNode** %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %class.DependencyNode** %19 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load i64, i64* %9, align 8
  %24 = load i64, i64* %7, align 8
  %25 = add i64 %24, -1
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %16
  store i64 0, i64* %9, align 8
  br label %31

28:                                               ; preds = %16
  %29 = add i64 %23, 1
  store i64 %29, i64* %9, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28, %27
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi i64 [ %25, %31 ], [ %23, %28 ]
  %34 = call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %33) #12
  %35 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %17, i64 1
  %36 = icmp eq %class.DependencyNode** %35, %13
  br i1 %36, label %37, label %16

37:                                               ; preds = %32, %1
  %38 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %39, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.base::identity", %"struct.base::identity"* %2, i64 0, i32 0
  br label %197

44:                                               ; preds = %235
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %39, %37 ]
  %48 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #12
  %52 = bitcast %"class.std::__1::multimap"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  %53 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %5, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %5, i64 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %5, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::__compressed_pair.1"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %53, align 8
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %47, %40
  br i1 %60, label %186, label %61

61:                                               ; preds = %46
  %62 = ptrtoint %"class.std::__1::__tree_end_node"* %57 to i64
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %64 = bitcast %"class.std::__1::multimap"* %5 to i64*
  br label %65

65:                                               ; preds = %182, %61
  %66 = phi %"class.std::__1::__tree_node"* [ %185, %182 ], [ null, %61 ]
  %67 = phi %"class.std::__1::__tree_node_base"* [ %184, %182 ], [ null, %61 ]
  %68 = phi %"class.std::__1::__tree_end_node"* [ %183, %182 ], [ %57, %61 ]
  %69 = phi %"class.std::__1::__tree_end_node"* [ %180, %182 ], [ %47, %61 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 4
  %71 = call i8* @_Znwm(i64 48) #13, !noalias !7
  %72 = getelementptr inbounds i8, i8* %71, i64 32
  %73 = bitcast %"class.std::__1::__tree_end_node"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false) #12, !noalias !7
  %74 = bitcast i8* %72 to %class.DependencyNode**
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %68, %57
  br i1 %75, label %102, label %76

76:                                               ; preds = %65
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %76, %78
  %79 = phi %"class.std::__1::__tree_node_base"* [ %81, %78 ], [ %67, %76 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %79, i64 0, i32 1
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %94, label %78

83:                                               ; preds = %76, %83
  %84 = phi %"class.std::__1::__tree_end_node"* [ %88, %83 ], [ %57, %76 ]
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"class.std::__1::__tree_end_node"**
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, %85
  br i1 %91, label %83, label %92

92:                                               ; preds = %83
  %93 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node_base"*
  br label %94

94:                                               ; preds = %78, %92
  %95 = phi %"class.std::__1::__tree_node_base"* [ %93, %92 ], [ %79, %78 ]
  %96 = ptrtoint %"class.std::__1::__tree_node_base"* %95 to i64
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 1
  %98 = bitcast %"class.std::__1::__tree_node_base"* %97 to %class.DependencyNode**
  %99 = load %class.DependencyNode*, %class.DependencyNode** %74, align 8
  %100 = load %class.DependencyNode*, %class.DependencyNode** %98, align 8
  %101 = icmp ult %class.DependencyNode* %99, %100
  br i1 %101, label %108, label %102

102:                                              ; preds = %94, %65
  %103 = phi i64 [ %96, %94 ], [ %62, %65 ]
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %104, label %132, label %105

105:                                              ; preds = %102
  %106 = inttoptr i64 %103 to %"class.std::__1::__tree_node_base"*
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 1
  br label %132

108:                                              ; preds = %94
  %109 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %109, label %132, label %110

110:                                              ; preds = %108, %129
  %111 = phi %"class.std::__1::__tree_node"* [ %131, %129 ], [ %66, %108 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 0, i32 0
  %113 = load %class.DependencyNode*, %class.DependencyNode** %112, align 8
  %114 = icmp ult %class.DependencyNode* %99, %113
  br i1 %114, label %115, label %122

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = ptrtoint %"class.std::__1::__tree_node"* %111 to i64
  br label %132

122:                                              ; preds = %110
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 1
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %126, label %129

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 1
  %128 = ptrtoint %"class.std::__1::__tree_node"* %111 to i64
  br label %132

129:                                              ; preds = %122, %115
  %130 = phi %"class.std::__1::__tree_node_base"* [ %117, %115 ], [ %124, %122 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"* %130 to %"class.std::__1::__tree_node"*
  br label %110

132:                                              ; preds = %108, %126, %119, %105, %102
  %133 = phi i64 [ %103, %105 ], [ %121, %119 ], [ %128, %126 ], [ %62, %102 ], [ %62, %108 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %107, %105 ], [ %120, %119 ], [ %127, %126 ], [ %63, %102 ], [ %63, %108 ]
  %135 = inttoptr i64 %133 to %"class.std::__1::__tree_end_node"*
  %136 = bitcast i8* %71 to %"class.std::__1::__tree_node_base"*
  %137 = getelementptr inbounds i8, i8* %71, i64 16
  %138 = bitcast i8* %137 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %135, %"class.std::__1::__tree_end_node"** %138, align 8
  %139 = bitcast %"class.std::__1::__tree_node_base"** %134 to i8**
  store i8* %71, i8** %139, align 8
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %132
  %145 = ptrtoint %"class.std::__1::__tree_node_base"* %142 to i64
  store i64 %145, i64* %64, align 8
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  br label %147

147:                                              ; preds = %132, %144
  %148 = phi %"class.std::__1::__tree_node_base"* [ %136, %132 ], [ %146, %144 ]
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %149, %"class.std::__1::__tree_node_base"* %148) #12
  %150 = load i64, i64* %55, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %55, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 1, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %163

155:                                              ; preds = %147
  %156 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node_base"*
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 2
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to %"class.std::__1::__tree_end_node"**
  %159 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %159, i64 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, %156
  br i1 %162, label %179, label %170

163:                                              ; preds = %147, %163
  %164 = phi %"class.std::__1::__tree_node_base"* [ %166, %163 ], [ %153, %147 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, null
  br i1 %167, label %168, label %163

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %164, i64 0, i32 0
  br label %179

170:                                              ; preds = %155, %170
  %171 = phi %"class.std::__1::__tree_end_node"** [ %174, %170 ], [ %158, %155 ]
  %172 = bitcast %"class.std::__1::__tree_end_node"** %171 to %"class.std::__1::__tree_node_base"**
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %172, align 8
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 2
  %175 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, %173
  br i1 %178, label %179, label %170

179:                                              ; preds = %170, %168, %155
  %180 = phi %"class.std::__1::__tree_end_node"* [ %169, %168 ], [ %159, %155 ], [ %175, %170 ]
  %181 = icmp eq %"class.std::__1::__tree_end_node"* %180, %40
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %185 = bitcast %"class.std::__1::__tree_node_base"* %184 to %"class.std::__1::__tree_node"*
  br label %65

186:                                              ; preds = %179, %46
  %187 = phi i64 [ 0, %46 ], [ %151, %179 ]
  %188 = load i64, i64* %8, align 8
  %189 = load i64, i64* %9, align 8
  %190 = icmp eq i64 %188, %189
  br i1 %190, label %523, label %191

191:                                              ; preds = %186
  %192 = bitcast %class.DependencyNode*** %50 to i64*
  %193 = bitcast %"class.std::__1::vector"* %4 to i64*
  %194 = bitcast %class.DependencyNode*** %51 to i64*
  %195 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node"**
  %196 = bitcast %"class.std::__1::multimap"* %5 to i64*
  br label %242

197:                                              ; preds = %42, %235
  %198 = phi %"class.std::__1::__tree_end_node"* [ %39, %42 ], [ %236, %235 ]
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 5
  %200 = bitcast %"class.std::__1::__tree_end_node"* %199 to %class.DependencyNode**
  %201 = load i64, i64* %8, align 8
  %202 = load i64, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #12
  %203 = call { %"class.base::circular_deque"*, i64 } @_ZNSt3__19remove_ifIN4base8internal23circular_deque_iteratorIP14DependencyNodeEEZNS1_6ranges6removeIS6_S5_NS1_8identityENS_26random_access_iterator_tagEEEDaT_SB_RKT0_T1_EUlTyOSB_E_EESB_SB_SB_SC_(%"class.base::circular_deque"* nonnull %3, i64 %201, %"class.base::circular_deque"* nonnull %3, i64 %202, %"struct.base::identity"* nonnull %2, %class.DependencyNode** %200) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #12
  %204 = extractvalue { %"class.base::circular_deque"*, i64 } %203, 0
  %205 = extractvalue { %"class.base::circular_deque"*, i64 } %203, 1
  %206 = load i64, i64* %9, align 8
  %207 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIP14DependencyNodeE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_(%"class.base::circular_deque"* nonnull %3, %"class.base::circular_deque"* %204, i64 %205, %"class.base::circular_deque"* nonnull %3, i64 %206) #12
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 1, i32 0
  %209 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %208, align 8
  %210 = icmp eq %"class.std::__1::__tree_node_base"* %209, null
  br i1 %210, label %211, label %219

211:                                              ; preds = %197
  %212 = bitcast %"class.std::__1::__tree_end_node"* %198 to %"class.std::__1::__tree_node_base"*
  %213 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 2
  %214 = bitcast %"class.std::__1::__tree_end_node"* %213 to %"class.std::__1::__tree_end_node"**
  %215 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %215, i64 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, %212
  br i1 %218, label %235, label %226

219:                                              ; preds = %197, %219
  %220 = phi %"class.std::__1::__tree_node_base"* [ %222, %219 ], [ %209, %197 ]
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0, i32 0
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = icmp eq %"class.std::__1::__tree_node_base"* %222, null
  br i1 %223, label %224, label %219

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  br label %235

226:                                              ; preds = %211, %226
  %227 = phi %"class.std::__1::__tree_end_node"** [ %230, %226 ], [ %214, %211 ]
  %228 = bitcast %"class.std::__1::__tree_end_node"** %227 to %"class.std::__1::__tree_node_base"**
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %229, i64 0, i32 2
  %231 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %231, i64 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, %229
  br i1 %234, label %235, label %226

235:                                              ; preds = %226, %211, %224
  %236 = phi %"class.std::__1::__tree_end_node"* [ %225, %224 ], [ %215, %211 ], [ %231, %226 ]
  %237 = icmp eq %"class.std::__1::__tree_end_node"* %236, %40
  br i1 %237, label %44, label %197

238:                                              ; preds = %518, %379
  %239 = load i64, i64* %8, align 8
  %240 = load i64, i64* %9, align 8
  %241 = icmp eq i64 %239, %240
  br i1 %241, label %521, label %242

242:                                              ; preds = %191, %238
  %243 = phi i64 [ %188, %191 ], [ %239, %238 ]
  %244 = call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %243) #12
  %245 = bitcast %class.DependencyNode** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = load i64, i64* %8, align 8
  %248 = call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %247) #12
  %249 = load i64, i64* %8, align 8
  %250 = add i64 %249, 1
  %251 = call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %250) #12
  %252 = load i64, i64* %8, align 8
  %253 = add i64 %252, 1
  %254 = load i64, i64* %7, align 8
  %255 = icmp eq i64 %253, %254
  %256 = select i1 %255, i64 0, i64 %253
  store i64 %256, i64* %8, align 8
  call void @_ZN4base14circular_dequeIP14DependencyNodeE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* nonnull %3) #12
  %257 = load %class.DependencyNode**, %class.DependencyNode*** %50, align 8
  %258 = load %class.DependencyNode**, %class.DependencyNode*** %51, align 8
  %259 = icmp eq %class.DependencyNode** %257, %258
  %260 = ptrtoint %class.DependencyNode** %258 to i64
  br i1 %259, label %265, label %261

261:                                              ; preds = %242
  %262 = bitcast %class.DependencyNode** %257 to i64*
  store i64 %246, i64* %262, align 8
  %263 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %257, i64 1
  %264 = ptrtoint %class.DependencyNode** %263 to i64
  store i64 %264, i64* %192, align 8
  br label %309

265:                                              ; preds = %242
  %266 = ptrtoint %class.DependencyNode** %257 to i64
  %267 = load i64, i64* %193, align 8
  %268 = sub i64 %266, %267
  %269 = ashr exact i64 %268, 3
  %270 = add nsw i64 %269, 1
  %271 = icmp ugt i64 %270, 2305843009213693951
  br i1 %271, label %272, label %274

272:                                              ; preds = %265
  %273 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %273) #14
  unreachable

274:                                              ; preds = %265
  %275 = sub i64 %260, %267
  %276 = ashr exact i64 %275, 3
  %277 = icmp ult i64 %276, 1152921504606846975
  br i1 %277, label %278, label %286

278:                                              ; preds = %274
  %279 = ashr exact i64 %275, 2
  %280 = icmp ult i64 %279, %270
  %281 = select i1 %280, i64 %270, i64 %279
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %291, label %283

283:                                              ; preds = %278
  %284 = icmp ugt i64 %281, 2305843009213693951
  br i1 %284, label %285, label %286

285:                                              ; preds = %283
  call void @abort() #14
  unreachable

286:                                              ; preds = %283, %274
  %287 = phi i64 [ %281, %283 ], [ 2305843009213693951, %274 ]
  %288 = shl i64 %287, 3
  %289 = call i8* @_Znwm(i64 %288) #13
  %290 = bitcast i8* %289 to %class.DependencyNode**
  br label %291

291:                                              ; preds = %286, %278
  %292 = phi i64 [ %287, %286 ], [ 0, %278 ]
  %293 = phi i8* [ %289, %286 ], [ null, %278 ]
  %294 = phi %class.DependencyNode** [ %290, %286 ], [ null, %278 ]
  %295 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %294, i64 %269
  %296 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %294, i64 %292
  %297 = ptrtoint %class.DependencyNode** %296 to i64
  %298 = bitcast %class.DependencyNode** %295 to i64*
  store i64 %246, i64* %298, align 8
  %299 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %295, i64 1
  %300 = ptrtoint %class.DependencyNode** %299 to i64
  %301 = ptrtoint %class.DependencyNode** %294 to i64
  %302 = icmp sgt i64 %268, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %291
  %304 = inttoptr i64 %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %304, i64 %268, i1 false) #12
  br label %305

305:                                              ; preds = %303, %291
  store i64 %301, i64* %193, align 8
  store i64 %300, i64* %192, align 8
  store i64 %297, i64* %194, align 8
  %306 = icmp eq i64 %267, 0
  br i1 %306, label %309, label %307

307:                                              ; preds = %305
  %308 = inttoptr i64 %267 to i8*
  call void @_ZdlPv(i8* %308) #13
  br label %309

309:                                              ; preds = %261, %305, %307
  %310 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %195, align 8
  %311 = icmp eq %"class.std::__1::__tree_node"* %310, null
  br i1 %311, label %376, label %312

312:                                              ; preds = %309
  %313 = inttoptr i64 %246 to %class.DependencyNode*
  br label %314

314:                                              ; preds = %371, %312
  %315 = phi %"class.std::__1::__tree_node"* [ %310, %312 ], [ %374, %371 ]
  %316 = phi %"class.std::__1::__tree_end_node"* [ %57, %312 ], [ %372, %371 ]
  %317 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %315, i64 0, i32 1, i32 0, i32 0
  %318 = load %class.DependencyNode*, %class.DependencyNode** %317, align 8
  %319 = icmp ugt %class.DependencyNode* %318, %313
  br i1 %319, label %320, label %323

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %315, i64 0, i32 0, i32 0
  %322 = bitcast %"class.std::__1::__tree_node"* %315 to %"class.std::__1::__tree_node"**
  br label %371

323:                                              ; preds = %314
  %324 = icmp ult %class.DependencyNode* %318, %313
  br i1 %324, label %325, label %328

325:                                              ; preds = %323
  %326 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %315, i64 0, i32 0, i32 1
  %327 = bitcast %"class.std::__1::__tree_node_base"** %326 to %"class.std::__1::__tree_node"**
  br label %371

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %315, i64 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::__tree_node"* %315 to %"class.std::__1::__tree_node"**
  %331 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %330, align 8
  %332 = icmp eq %"class.std::__1::__tree_node"* %331, null
  br i1 %332, label %347, label %333

333:                                              ; preds = %328, %333
  %334 = phi %"class.std::__1::__tree_end_node"* [ %344, %333 ], [ %329, %328 ]
  %335 = phi %"class.std::__1::__tree_node"* [ %345, %333 ], [ %331, %328 ]
  %336 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %335, i64 0, i32 1, i32 0, i32 0
  %337 = load %class.DependencyNode*, %class.DependencyNode** %336, align 8
  %338 = icmp ult %class.DependencyNode* %337, %313
  %339 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %335, i64 0, i32 0, i32 1
  %340 = bitcast %"class.std::__1::__tree_node_base"** %339 to %"class.std::__1::__tree_node"**
  %341 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %335, i64 0, i32 0, i32 0
  %342 = bitcast %"class.std::__1::__tree_node"* %335 to %"class.std::__1::__tree_node"**
  %343 = select i1 %338, %"class.std::__1::__tree_node"** %340, %"class.std::__1::__tree_node"** %342
  %344 = select i1 %338, %"class.std::__1::__tree_end_node"* %334, %"class.std::__1::__tree_end_node"* %341
  %345 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %343, align 8
  %346 = icmp eq %"class.std::__1::__tree_node"* %345, null
  br i1 %346, label %347, label %333

347:                                              ; preds = %333, %328
  %348 = phi %"class.std::__1::__tree_end_node"* [ %329, %328 ], [ %344, %333 ]
  %349 = ptrtoint %"class.std::__1::__tree_end_node"* %348 to i64
  %350 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %315, i64 0, i32 0, i32 1
  %351 = bitcast %"class.std::__1::__tree_node_base"** %350 to %"class.std::__1::__tree_node"**
  %352 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %351, align 8
  %353 = icmp eq %"class.std::__1::__tree_node"* %352, null
  br i1 %353, label %368, label %354

354:                                              ; preds = %347, %354
  %355 = phi %"class.std::__1::__tree_end_node"* [ %365, %354 ], [ %316, %347 ]
  %356 = phi %"class.std::__1::__tree_node"* [ %366, %354 ], [ %352, %347 ]
  %357 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %356, i64 0, i32 1, i32 0, i32 0
  %358 = load %class.DependencyNode*, %class.DependencyNode** %357, align 8
  %359 = icmp ugt %class.DependencyNode* %358, %313
  %360 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %356, i64 0, i32 0, i32 0
  %361 = bitcast %"class.std::__1::__tree_node"* %356 to %"class.std::__1::__tree_node"**
  %362 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %356, i64 0, i32 0, i32 1
  %363 = bitcast %"class.std::__1::__tree_node_base"** %362 to %"class.std::__1::__tree_node"**
  %364 = select i1 %359, %"class.std::__1::__tree_node"** %361, %"class.std::__1::__tree_node"** %363
  %365 = select i1 %359, %"class.std::__1::__tree_end_node"* %360, %"class.std::__1::__tree_end_node"* %355
  %366 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %364, align 8
  %367 = icmp eq %"class.std::__1::__tree_node"* %366, null
  br i1 %367, label %368, label %354

368:                                              ; preds = %354, %347
  %369 = phi %"class.std::__1::__tree_end_node"* [ %316, %347 ], [ %365, %354 ]
  %370 = ptrtoint %"class.std::__1::__tree_end_node"* %369 to i64
  br label %379

371:                                              ; preds = %325, %320
  %372 = phi %"class.std::__1::__tree_end_node"* [ %321, %320 ], [ %316, %325 ]
  %373 = phi %"class.std::__1::__tree_node"** [ %322, %320 ], [ %327, %325 ]
  %374 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %373, align 8
  %375 = icmp eq %"class.std::__1::__tree_node"* %374, null
  br i1 %375, label %376, label %314

376:                                              ; preds = %371, %309
  %377 = phi %"class.std::__1::__tree_end_node"* [ %57, %309 ], [ %372, %371 ]
  %378 = ptrtoint %"class.std::__1::__tree_end_node"* %377 to i64
  br label %379

379:                                              ; preds = %368, %376
  %380 = phi i64 [ %378, %376 ], [ %349, %368 ]
  %381 = phi i64 [ %378, %376 ], [ %370, %368 ]
  %382 = inttoptr i64 %381 to %"class.std::__1::__tree_end_node"*
  %383 = inttoptr i64 %380 to %"class.std::__1::__tree_end_node"*
  %384 = icmp eq %"class.std::__1::__tree_end_node"* %383, %382
  br i1 %384, label %238, label %385

385:                                              ; preds = %379, %518
  %386 = phi %"class.std::__1::__tree_end_node"* [ %519, %518 ], [ %383, %379 ]
  %387 = phi i64 [ %449, %518 ], [ %380, %379 ]
  %388 = inttoptr i64 %387 to %"class.std::__1::__tree_node"*
  %389 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %388, i64 0, i32 1, i32 0, i32 1
  %390 = bitcast %class.DependencyNode** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %386, i64 1, i32 0
  %393 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  %394 = icmp eq %"class.std::__1::__tree_node_base"* %393, null
  br i1 %394, label %395, label %405

395:                                              ; preds = %385
  %396 = inttoptr i64 %387 to %"class.std::__1::__tree_node_base"*
  %397 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %386, i64 2
  %398 = bitcast %"class.std::__1::__tree_end_node"* %397 to %"class.std::__1::__tree_end_node"**
  %399 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %398, align 8
  %400 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %399, i64 0, i32 0
  %401 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %400, align 8
  %402 = icmp eq %"class.std::__1::__tree_node_base"* %401, %396
  br i1 %402, label %403, label %412

403:                                              ; preds = %395
  %404 = ptrtoint %"class.std::__1::__tree_end_node"* %399 to i64
  br label %448

405:                                              ; preds = %385, %405
  %406 = phi %"class.std::__1::__tree_node_base"* [ %408, %405 ], [ %393, %385 ]
  %407 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %406, i64 0, i32 0, i32 0
  %408 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %407, align 8
  %409 = icmp eq %"class.std::__1::__tree_node_base"* %408, null
  br i1 %409, label %410, label %405

410:                                              ; preds = %405
  %411 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %406, i64 0, i32 0
  br label %421

412:                                              ; preds = %395, %412
  %413 = phi %"class.std::__1::__tree_end_node"** [ %416, %412 ], [ %398, %395 ]
  %414 = bitcast %"class.std::__1::__tree_end_node"** %413 to %"class.std::__1::__tree_node_base"**
  %415 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %414, align 8
  %416 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %415, i64 0, i32 2
  %417 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %416, align 8
  %418 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %417, i64 0, i32 0
  %419 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %418, align 8
  %420 = icmp eq %"class.std::__1::__tree_node_base"* %419, %415
  br i1 %420, label %421, label %412

421:                                              ; preds = %412, %410
  %422 = phi %"class.std::__1::__tree_end_node"* [ %411, %410 ], [ %417, %412 ]
  %423 = ptrtoint %"class.std::__1::__tree_end_node"* %422 to i64
  br i1 %394, label %424, label %432

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %386, i64 2
  %426 = bitcast %"class.std::__1::__tree_end_node"* %425 to %"class.std::__1::__tree_end_node"**
  %427 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %426, align 8
  %428 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 0, i32 0
  %429 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %428, align 8
  %430 = inttoptr i64 %387 to %"class.std::__1::__tree_node_base"*
  %431 = icmp eq %"class.std::__1::__tree_node_base"* %429, %430
  br i1 %431, label %448, label %439

432:                                              ; preds = %421, %432
  %433 = phi %"class.std::__1::__tree_node_base"* [ %435, %432 ], [ %393, %421 ]
  %434 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %433, i64 0, i32 0, i32 0
  %435 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %434, align 8
  %436 = icmp eq %"class.std::__1::__tree_node_base"* %435, null
  br i1 %436, label %437, label %432

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %433, i64 0, i32 0
  br label %448

439:                                              ; preds = %424, %439
  %440 = phi %"class.std::__1::__tree_end_node"** [ %443, %439 ], [ %426, %424 ]
  %441 = bitcast %"class.std::__1::__tree_end_node"** %440 to %"class.std::__1::__tree_node_base"**
  %442 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %441, align 8
  %443 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %442, i64 0, i32 2
  %444 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %443, align 8
  %445 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %444, i64 0, i32 0
  %446 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %445, align 8
  %447 = icmp eq %"class.std::__1::__tree_node_base"* %446, %442
  br i1 %447, label %448, label %439

448:                                              ; preds = %439, %403, %437, %424
  %449 = phi i64 [ %423, %437 ], [ %423, %424 ], [ %404, %403 ], [ %423, %439 ]
  %450 = phi %"class.std::__1::__tree_end_node"* [ %438, %437 ], [ %427, %424 ], [ %399, %403 ], [ %444, %439 ]
  %451 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %452 = icmp eq %"class.std::__1::__tree_end_node"* %451, %386
  br i1 %452, label %453, label %455

453:                                              ; preds = %448
  %454 = ptrtoint %"class.std::__1::__tree_end_node"* %450 to i64
  store i64 %454, i64* %196, align 8
  br label %455

455:                                              ; preds = %448, %453
  %456 = load i64, i64* %55, align 8
  %457 = add i64 %456, -1
  store i64 %457, i64* %55, align 8
  %458 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %459 = inttoptr i64 %387 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %458, %"class.std::__1::__tree_node_base"* %459) #12
  %460 = inttoptr i64 %387 to i8*
  call void @_ZdlPv(i8* %460) #13
  %461 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %462 = icmp eq %"class.std::__1::__tree_end_node"* %461, %57
  br i1 %462, label %502, label %463

463:                                              ; preds = %455
  %464 = inttoptr i64 %391 to %class.DependencyNode*
  br label %465

465:                                              ; preds = %463, %499
  %466 = phi %"class.std::__1::__tree_end_node"* [ %461, %463 ], [ %500, %499 ]
  %467 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %466, i64 5
  %468 = bitcast %"class.std::__1::__tree_end_node"* %467 to %class.DependencyNode**
  %469 = load %class.DependencyNode*, %class.DependencyNode** %468, align 8
  %470 = icmp eq %class.DependencyNode* %469, %464
  br i1 %470, label %518, label %471

471:                                              ; preds = %465
  %472 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %466, i64 1, i32 0
  %473 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %472, align 8
  %474 = icmp eq %"class.std::__1::__tree_node_base"* %473, null
  br i1 %474, label %475, label %483

475:                                              ; preds = %471
  %476 = bitcast %"class.std::__1::__tree_end_node"* %466 to %"class.std::__1::__tree_node_base"*
  %477 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %466, i64 2
  %478 = bitcast %"class.std::__1::__tree_end_node"* %477 to %"class.std::__1::__tree_end_node"**
  %479 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %478, align 8
  %480 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %479, i64 0, i32 0
  %481 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %480, align 8
  %482 = icmp eq %"class.std::__1::__tree_node_base"* %481, %476
  br i1 %482, label %499, label %490

483:                                              ; preds = %471, %483
  %484 = phi %"class.std::__1::__tree_node_base"* [ %486, %483 ], [ %473, %471 ]
  %485 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %484, i64 0, i32 0, i32 0
  %486 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %485, align 8
  %487 = icmp eq %"class.std::__1::__tree_node_base"* %486, null
  br i1 %487, label %488, label %483

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %484, i64 0, i32 0
  br label %499

490:                                              ; preds = %475, %490
  %491 = phi %"class.std::__1::__tree_end_node"** [ %494, %490 ], [ %478, %475 ]
  %492 = bitcast %"class.std::__1::__tree_end_node"** %491 to %"class.std::__1::__tree_node_base"**
  %493 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %492, align 8
  %494 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %493, i64 0, i32 2
  %495 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %494, align 8
  %496 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %495, i64 0, i32 0
  %497 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %496, align 8
  %498 = icmp eq %"class.std::__1::__tree_node_base"* %497, %493
  br i1 %498, label %499, label %490

499:                                              ; preds = %490, %475, %488
  %500 = phi %"class.std::__1::__tree_end_node"* [ %489, %488 ], [ %479, %475 ], [ %495, %490 ]
  %501 = icmp eq %"class.std::__1::__tree_end_node"* %500, %57
  br i1 %501, label %502, label %465

502:                                              ; preds = %499, %455
  call void @_ZN4base14circular_dequeIP14DependencyNodeE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %3, i64 1) #12
  %503 = load i64, i64* %9, align 8
  %504 = call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %503) #12
  %505 = bitcast %class.DependencyNode** %504 to i64*
  store i64 %391, i64* %505, align 8
  %506 = load i64, i64* %9, align 8
  %507 = load i64, i64* %7, align 8
  %508 = add i64 %507, -1
  %509 = icmp eq i64 %506, %508
  br i1 %509, label %510, label %511

510:                                              ; preds = %502
  store i64 0, i64* %9, align 8
  br label %514

511:                                              ; preds = %502
  %512 = add i64 %506, 1
  store i64 %512, i64* %9, align 8
  %513 = icmp eq i64 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511, %510
  br label %515

515:                                              ; preds = %511, %514
  %516 = phi i64 [ %508, %514 ], [ %506, %511 ]
  %517 = call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %14, i64 %516) #12
  br label %518

518:                                              ; preds = %465, %515
  %519 = inttoptr i64 %449 to %"class.std::__1::__tree_end_node"*
  %520 = icmp eq %"class.std::__1::__tree_end_node"* %519, %382
  br i1 %520, label %238, label %385

521:                                              ; preds = %238
  %522 = load i64, i64* %55, align 8
  br label %523

523:                                              ; preds = %521, %186
  %524 = phi i64 [ %522, %521 ], [ %187, %186 ]
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %526, label %532

526:                                              ; preds = %523
  %527 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %528 = icmp eq %"class.std::__1::vector"* %527, %4
  br i1 %528, label %532, label %529

529:                                              ; preds = %526
  %530 = load %class.DependencyNode**, %class.DependencyNode*** %49, align 8
  %531 = load %class.DependencyNode**, %class.DependencyNode*** %50, align 8
  call void @_ZNSt3__16vectorIP14DependencyNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %527, %class.DependencyNode** %530, %class.DependencyNode** %531) #12
  br label %532

532:                                              ; preds = %529, %526, %523
  %533 = phi i1 [ false, %523 ], [ true, %526 ], [ true, %529 ]
  %534 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node"**
  %535 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %534, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %56, %"class.std::__1::__tree_node"* %535) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  %536 = load %class.DependencyNode**, %class.DependencyNode*** %49, align 8
  %537 = icmp eq %class.DependencyNode** %536, null
  br i1 %537, label %542, label %538

538:                                              ; preds = %532
  %539 = ptrtoint %class.DependencyNode** %536 to i64
  %540 = bitcast %class.DependencyNode*** %50 to i64*
  store i64 %539, i64* %540, align 8
  %541 = bitcast %class.DependencyNode** %536 to i8*
  call void @_ZdlPv(i8* %541) #13
  br label %542

542:                                              ; preds = %532, %538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  call void @_ZN4base14circular_dequeIP14DependencyNodeED2Ev(%"class.base::circular_deque"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret i1 %533
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15DependencyGraph19GetDestructionOrderEPNSt3__16vectorIP14DependencyNodeNS0_9allocatorIS3_EEEE(%class.DependencyGraph*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.DependencyNode**, %class.DependencyNode*** %4, align 8
  %6 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %class.DependencyNode**, %class.DependencyNode*** %6, align 8
  %8 = icmp eq %class.DependencyNode** %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN15DependencyGraph22BuildConstructionOrderEv(%class.DependencyGraph* %0)
  br i1 %10, label %11, label %35

11:                                               ; preds = %9, %2
  %12 = icmp eq %"class.std::__1::vector"* %3, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = load %class.DependencyNode**, %class.DependencyNode*** %4, align 8
  %15 = load %class.DependencyNode**, %class.DependencyNode*** %6, align 8
  tail call void @_ZNSt3__16vectorIP14DependencyNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %1, %class.DependencyNode** %14, %class.DependencyNode** %15) #12
  br label %16

16:                                               ; preds = %11, %13
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %18 = load %class.DependencyNode**, %class.DependencyNode*** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %20 = load %class.DependencyNode**, %class.DependencyNode*** %19, align 8
  %21 = icmp eq %class.DependencyNode** %18, %20
  br i1 %21, label %35, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %20, i64 -1
  %24 = icmp ugt %class.DependencyNode** %23, %18
  br i1 %24, label %25, label %35

25:                                               ; preds = %22, %25
  %26 = phi %class.DependencyNode** [ %33, %25 ], [ %23, %22 ]
  %27 = phi %class.DependencyNode** [ %32, %25 ], [ %18, %22 ]
  %28 = bitcast %class.DependencyNode** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.DependencyNode** %26 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  %32 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %27, i64 1
  %33 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %26, i64 -1
  %34 = icmp ult %class.DependencyNode** %32, %33
  br i1 %34, label %25, label %35

35:                                               ; preds = %25, %22, %16, %9
  %36 = phi i1 [ false, %9 ], [ true, %16 ], [ true, %22 ], [ true, %25 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIP14DependencyNodeED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #12
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #12
  %15 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #12
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #12
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15DependencyGraph14DumpAsGraphvizERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base17RepeatingCallbackIFS6_P14DependencyNodeEEE(%"class.std::__1::basic_string"* noalias sret, %class.DependencyGraph*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.base::identity", align 1
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::circular_deque", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -86, i64 24, i1 false)
  store i8 10, i8* %15, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #12
  %18 = getelementptr inbounds i8, i8* %17, i64 10
  store i8 0, i8* %18, align 2
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = load i8, i8* %23, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %25 to i64
  %34 = select i1 %26, i64 %32, i64 %33
  call fastcc void @_ZN12_GLOBAL__N_16EscapeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %30, i64 %34)
  %35 = bitcast %"class.base::circular_deque"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 2
  %39 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %1, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.DependencyNode**, %class.DependencyNode*** %39, align 8
  %41 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %1, i64 0, i32 0, i32 0, i32 1
  %42 = load %class.DependencyNode**, %class.DependencyNode*** %41, align 8
  %43 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0
  %44 = icmp eq %class.DependencyNode** %40, %42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 32, i1 false) #12
  br i1 %44, label %66, label %45

45:                                               ; preds = %4, %61
  %46 = phi %class.DependencyNode** [ %64, %61 ], [ %40, %4 ]
  call void @_ZN4base14circular_dequeIP14DependencyNodeE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %7, i64 1) #12
  %47 = load i64, i64* %38, align 8
  %48 = call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %43, i64 %47) #12
  %49 = bitcast %class.DependencyNode** %46 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %class.DependencyNode** %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load i64, i64* %38, align 8
  %53 = load i64, i64* %36, align 8
  %54 = add i64 %53, -1
  %55 = icmp eq i64 %52, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %45
  store i64 0, i64* %38, align 8
  br label %60

57:                                               ; preds = %45
  %58 = add i64 %52, 1
  store i64 %58, i64* %38, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57, %56
  br label %61

61:                                               ; preds = %60, %57
  %62 = phi i64 [ %54, %60 ], [ %52, %57 ]
  %63 = call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %43, i64 %62) #12
  %64 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %46, i64 1
  %65 = icmp eq %class.DependencyNode** %64, %42
  br i1 %65, label %66, label %45

66:                                               ; preds = %61, %4
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #12
  %68 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %1, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %class.DependencyGraph, %class.DependencyGraph* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %69, %70
  br i1 %71, label %95, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %75 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"struct.base::identity", %"struct.base::identity"* %5, i64 0, i32 0
  br label %116

95:                                               ; preds = %219, %66
  %96 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0)) #12
  %97 = load i64, i64* %37, align 8
  %98 = load i64, i64* %38, align 8
  %99 = icmp eq i64 %97, %98
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %222

102:                                              ; preds = %95
  %103 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %105 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  br label %242

116:                                              ; preds = %72, %219
  %117 = phi %"class.std::__1::__tree_end_node"* [ %69, %72 ], [ %220, %219 ]
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 4
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 5
  %121 = bitcast %"class.std::__1::__tree_end_node"* %120 to %class.DependencyNode**
  %122 = load %class.DependencyNode*, %class.DependencyNode** %121, align 8
  %123 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %75, align 8, !noalias !10
  %124 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %123, i64 0, i32 1
  %125 = bitcast void ()** %124 to void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)**
  %126 = load void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)*, void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)** %125, align 8, !noalias !10
  call void %126(%"class.std::__1::basic_string"* nonnull sret %9, %"class.base::internal::BindStateBase"* %123, %class.DependencyNode* %122) #12
  %127 = load i8, i8* %77, align 1
  %128 = icmp slt i8 %127, 0
  %129 = load i8*, i8** %78, align 8
  %130 = select i1 %128, i8* %129, i8* %74
  %131 = load i64, i64* %79, align 8
  %132 = zext i8 %127 to i64
  %133 = select i1 %128, i64 %131, i64 %132
  call fastcc void @_ZN12_GLOBAL__N_16EscapeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i8* %130, i64 %133)
  %134 = load i8, i8* %81, align 1
  %135 = icmp slt i8 %134, 0
  %136 = load i8*, i8** %82, align 8
  %137 = load i64, i64* %83, align 8
  %138 = zext i8 %134 to i64
  %139 = select i1 %135, i8* %136, i8* %73
  %140 = select i1 %135, i64 %137, i64 %138
  %141 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %139, i64 %140) #12
  %142 = load i8, i8* %81, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %116
  %145 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %116, %144
  %147 = load i8, i8* %77, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  %152 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %153 = bitcast %"class.std::__1::__tree_end_node"* %118 to %class.DependencyNode**
  %154 = load %class.DependencyNode*, %class.DependencyNode** %153, align 8
  %155 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %75, align 8, !noalias !13
  %156 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %155, i64 0, i32 1
  %157 = bitcast void ()** %156 to void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)**
  %158 = load void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)*, void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)** %157, align 8, !noalias !13
  call void %158(%"class.std::__1::basic_string"* nonnull sret %11, %"class.base::internal::BindStateBase"* %155, %class.DependencyNode* %154) #12
  %159 = load i8, i8* %87, align 1
  %160 = icmp slt i8 %159, 0
  %161 = load i8*, i8** %88, align 8
  %162 = select i1 %160, i8* %161, i8* %85
  %163 = load i64, i64* %89, align 8
  %164 = zext i8 %159 to i64
  %165 = select i1 %160, i64 %163, i64 %164
  call fastcc void @_ZN12_GLOBAL__N_16EscapeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i8* %162, i64 %165)
  %166 = load i8, i8* %91, align 1
  %167 = icmp slt i8 %166, 0
  %168 = load i8*, i8** %92, align 8
  %169 = load i64, i64* %93, align 8
  %170 = zext i8 %166 to i64
  %171 = select i1 %167, i8* %168, i8* %84
  %172 = select i1 %167, i64 %169, i64 %170
  %173 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %171, i64 %172) #12
  %174 = load i8, i8* %91, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %151
  %177 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %177) #13
  br label %178

178:                                              ; preds = %151, %176
  %179 = load i8, i8* %87, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %182) #13
  br label %183

183:                                              ; preds = %178, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #12
  %184 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #12
  %185 = load i64, i64* %37, align 8
  %186 = load i64, i64* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #12
  %187 = call { %"class.base::circular_deque"*, i64 } @_ZNSt3__19remove_ifIN4base8internal23circular_deque_iteratorIP14DependencyNodeEEZNS1_6ranges6removeIS6_S5_NS1_8identityENS_26random_access_iterator_tagEEEDaT_SB_RKT0_T1_EUlTyOSB_E_EESB_SB_SB_SC_(%"class.base::circular_deque"* nonnull %7, i64 %185, %"class.base::circular_deque"* nonnull %7, i64 %186, %"struct.base::identity"* nonnull %5, %class.DependencyNode** %121) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #12
  %188 = extractvalue { %"class.base::circular_deque"*, i64 } %187, 0
  %189 = extractvalue { %"class.base::circular_deque"*, i64 } %187, 1
  %190 = load i64, i64* %38, align 8
  %191 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIP14DependencyNodeE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_(%"class.base::circular_deque"* nonnull %7, %"class.base::circular_deque"* %188, i64 %189, %"class.base::circular_deque"* nonnull %7, i64 %190) #12
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 1, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, null
  br i1 %194, label %195, label %203

195:                                              ; preds = %183
  %196 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_node_base"*
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 2
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"class.std::__1::__tree_end_node"**
  %199 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %199, i64 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, %196
  br i1 %202, label %219, label %210

203:                                              ; preds = %183, %203
  %204 = phi %"class.std::__1::__tree_node_base"* [ %206, %203 ], [ %193, %183 ]
  %205 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %204, i64 0, i32 0, i32 0
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = icmp eq %"class.std::__1::__tree_node_base"* %206, null
  br i1 %207, label %208, label %203

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %204, i64 0, i32 0
  br label %219

210:                                              ; preds = %195, %210
  %211 = phi %"class.std::__1::__tree_end_node"** [ %214, %210 ], [ %198, %195 ]
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 2
  %215 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %215, i64 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, %213
  br i1 %218, label %219, label %210

219:                                              ; preds = %210, %195, %208
  %220 = phi %"class.std::__1::__tree_end_node"* [ %209, %208 ], [ %199, %195 ], [ %215, %210 ]
  %221 = icmp eq %"class.std::__1::__tree_end_node"* %220, %70
  br i1 %221, label %95, label %116

222:                                              ; preds = %275, %100
  %223 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %101, %100 ], [ %114, %275 ]
  %224 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #12
  %225 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  %229 = load i8*, i8** %20, align 8
  %230 = load i64, i64* %21, align 8
  %231 = zext i8 %227 to i64
  %232 = select i1 %228, i8* %229, i8* %19
  %233 = select i1 %228, i64 %230, i64 %231
  %234 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %232, i64 %233) #12
  %235 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #12
  %236 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #12
  call void @_ZN4base14circular_dequeIP14DependencyNodeED2Ev(%"class.base::circular_deque"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #12
  %237 = load i8, i8* %226, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %222
  %240 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %240) #13
  br label %241

241:                                              ; preds = %222, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  ret void

242:                                              ; preds = %102, %275
  %243 = phi i64 [ %97, %102 ], [ %289, %275 ]
  %244 = call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* nonnull %43, i64 %243) #12
  %245 = load %class.DependencyNode*, %class.DependencyNode** %244, align 8
  %246 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %247 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %105, align 8, !noalias !16
  %248 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %247, i64 0, i32 1
  %249 = bitcast void ()** %248 to void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)**
  %250 = load void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)*, void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*, %class.DependencyNode*)** %249, align 8, !noalias !16
  call void %250(%"class.std::__1::basic_string"* nonnull sret %13, %"class.base::internal::BindStateBase"* %247, %class.DependencyNode* %245) #12
  %251 = load i8, i8* %107, align 1
  %252 = icmp slt i8 %251, 0
  %253 = load i8*, i8** %108, align 8
  %254 = select i1 %252, i8* %253, i8* %104
  %255 = load i64, i64* %109, align 8
  %256 = zext i8 %251 to i64
  %257 = select i1 %252, i64 %255, i64 %256
  call fastcc void @_ZN12_GLOBAL__N_16EscapeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i8* %254, i64 %257)
  %258 = load i8, i8* %111, align 1
  %259 = icmp slt i8 %258, 0
  %260 = load i8*, i8** %112, align 8
  %261 = load i64, i64* %113, align 8
  %262 = zext i8 %258 to i64
  %263 = select i1 %259, i8* %260, i8* %103
  %264 = select i1 %259, i64 %261, i64 %262
  %265 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %263, i64 %264) #12
  %266 = load i8, i8* %111, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %242
  %269 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %269) #13
  br label %270

270:                                              ; preds = %242, %268
  %271 = load i8, i8* %107, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %270
  %274 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %274) #13
  br label %275

275:                                              ; preds = %270, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  %276 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #12
  %277 = load i8, i8* %115, align 1
  %278 = icmp slt i8 %277, 0
  %279 = load i8*, i8** %20, align 8
  %280 = load i64, i64* %21, align 8
  %281 = zext i8 %277 to i64
  %282 = select i1 %278, i8* %279, i8* %19
  %283 = select i1 %278, i64 %280, i64 %281
  %284 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %282, i64 %283) #12
  %285 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #12
  %286 = add i64 %243, 1
  %287 = load i64, i64* %36, align 8
  %288 = icmp eq i64 %286, %287
  %289 = select i1 %288, i64 0, i64 %286
  %290 = icmp eq i64 %289, %98
  br i1 %290, label %222, label %242
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_16EscapeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  store i8 1, i8* %5, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 34, i8* %7, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 0, i8* %8, align 1
  %9 = add i64 %2, 2
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %9) #12
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %42, label %11

11:                                               ; preds = %3
  %12 = tail call i8* @memchr(i8* %1, i32 34, i64 %2) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %11
  %15 = ptrtoint i8* %12 to i64
  %16 = ptrtoint i8* %1 to i64
  %17 = sub i64 %15, %16
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %42, label %19

19:                                               ; preds = %14
  %20 = ptrtoint i8* %1 to i64
  br label %21

21:                                               ; preds = %19, %37
  %22 = phi i8* [ %1, %19 ], [ %41, %37 ]
  %23 = phi i64 [ %17, %19 ], [ %39, %37 ]
  %24 = phi i64 [ 0, %19 ], [ %28, %37 ]
  %25 = sub i64 %23, %24
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %22, i64 %25) #12
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #12
  %28 = add nuw i64 %23, 1
  %29 = icmp ult i64 %28, %2
  br i1 %29, label %30, label %35

30:                                               ; preds = %21
  %31 = getelementptr inbounds i8, i8* %1, i64 %28
  %32 = sub i64 %2, %28
  %33 = tail call i8* @memchr(i8* %31, i32 34, i64 %32) #12
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %21, %30
  %36 = getelementptr inbounds i8, i8* %1, i64 %28
  br label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %33 to i64
  %39 = sub i64 %38, %20
  %40 = icmp eq i64 %39, -1
  %41 = getelementptr inbounds i8, i8* %1, i64 %28
  br i1 %40, label %42, label %21

42:                                               ; preds = %37, %11, %3, %35, %14
  %43 = phi i64 [ 0, %14 ], [ %28, %35 ], [ 0, %3 ], [ 0, %11 ], [ %28, %37 ]
  %44 = phi i8* [ %1, %14 ], [ %36, %35 ], [ %1, %3 ], [ %1, %11 ], [ %41, %37 ]
  %45 = sub i64 %2, %43
  %46 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %44, i64 %45) #12
  %47 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #12
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !19
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !19
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !19
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !19
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !19
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !19
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !19
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !19
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !19
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !19
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !19
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !19
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !19
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !19
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !19
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !19
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIP14DependencyNodeNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %class.DependencyNode**, %class.DependencyNode**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %class.DependencyNode** %2 to i64
  %5 = ptrtoint %class.DependencyNode** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %class.DependencyNode*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %class.DependencyNode**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %class.DependencyNode*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %1, i64 %22
  %25 = select i1 %23, %class.DependencyNode** %24, %class.DependencyNode** %2
  %26 = ptrtoint %class.DependencyNode** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %class.DependencyNode** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %class.DependencyNode** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %class.DependencyNode**
  %43 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %42, i64 %39
  %44 = ptrtoint %class.DependencyNode** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %16, i64 %28
  store %class.DependencyNode** %48, %class.DependencyNode*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %class.DependencyNode*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %class.DependencyNode**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %class.DependencyNode*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %75, i64 %72
  store %class.DependencyNode** %79, %class.DependencyNode*** %8, align 8
  %80 = bitcast %class.DependencyNode*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %class.DependencyNode** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %75, i64 %84
  %87 = ptrtoint %class.DependencyNode** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.DependencyNode**, %class.DependencyNode*** %23, align 8
  %25 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %24, i64 %1
  ret %class.DependencyNode** %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIP14DependencyNodeE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #12
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #12
  br i1 %37, label %38, label %39, !prof !20

38:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #12
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIP14DependencyNodeE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #12
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #12
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIP14DependencyNodeE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %class.DependencyNode**, %class.DependencyNode*** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIP14DependencyNodeE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%class.DependencyNode** %11, %class.DependencyNode** %12, %class.DependencyNode** %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %class.DependencyNode**, %class.DependencyNode*** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIP14DependencyNodeE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%class.DependencyNode** %19, %class.DependencyNode** %20, %class.DependencyNode** %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIP14DependencyNodeE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%class.DependencyNode** %24, %class.DependencyNode** %25, %class.DependencyNode** %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIP14DependencyNodeE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%class.DependencyNode**, %class.DependencyNode**, %class.DependencyNode**) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %class.DependencyNode** %0 to i64
  %6 = icmp ult %class.DependencyNode** %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %class.DependencyNode** %2 to i64
  %9 = ptrtoint %class.DependencyNode** %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #12
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !20

16:                                               ; preds = %7
  tail call void @llvm.trap() #12
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0)) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i64 14) #12
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 14) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i64 8) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %class.DependencyNode** %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #12
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !20

45:                                               ; preds = %41
  call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %class.DependencyNode** %0 to i8*
  %50 = bitcast %class.DependencyNode** %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !19
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIP14DependencyNodeE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp eq i64 %2, %4
  br i1 %6, label %62, label %7

7:                                                ; preds = %5
  %8 = icmp ult i64 %2, %4
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %2)
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13)
  %15 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0)
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %4)
  %18 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, %2
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i64 %4, i64* %18, align 8
  br label %62

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  br label %26

26:                                               ; preds = %49, %22
  %27 = phi i64 [ %19, %22 ], [ %60, %49 ]
  %28 = phi i64 [ %4, %22 ], [ %56, %49 ]
  %29 = phi i64 [ %2, %22 ], [ %59, %49 ]
  %30 = icmp ult i64 %28, %27
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = sub i64 %28, %27
  br label %37

33:                                               ; preds = %26
  %34 = load i64, i64* %25, align 8
  %35 = sub i64 %28, %27
  %36 = add i64 %35, %34
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi i64 [ %32, %31 ], [ %36, %33 ]
  %39 = icmp ult i64 %24, %27
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = sub i64 %24, %27
  br label %46

42:                                               ; preds = %37
  %43 = load i64, i64* %25, align 8
  %44 = sub i64 %24, %27
  %45 = add i64 %44, %43
  br label %46

46:                                               ; preds = %40, %42
  %47 = phi i64 [ %41, %40 ], [ %45, %42 ]
  %48 = icmp ult i64 %38, %47
  br i1 %48, label %49, label %61

49:                                               ; preds = %46
  %50 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %28)
  %51 = add i64 %28, 1
  %52 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %51)
  %53 = tail call dereferenceable(8) %class.DependencyNode** @_ZN4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %29)
  tail call void @_ZN4base8internal12VectorBufferIP14DependencyNodeE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%class.DependencyNode** %50, %class.DependencyNode** %52, %class.DependencyNode** %53)
  %54 = load i64, i64* %25, align 8
  %55 = icmp eq i64 %51, %54
  %56 = select i1 %55, i64 0, i64 %51
  %57 = add i64 %29, 1
  %58 = icmp eq i64 %57, %54
  %59 = select i1 %58, i64 0, i64 %57
  %60 = load i64, i64* %18, align 8
  br label %26

61:                                               ; preds = %46
  store i64 %29, i64* %23, align 8
  br label %62

62:                                               ; preds = %5, %61, %21
  %63 = phi i64 [ %4, %21 ], [ %2, %61 ], [ %2, %5 ]
  %64 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %65 = insertvalue { %"class.base::circular_deque"*, i64 } %64, i64 %63, 1
  ret { %"class.base::circular_deque"*, i64 } %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZNSt3__19remove_ifIN4base8internal23circular_deque_iteratorIP14DependencyNodeEEZNS1_6ranges6removeIS6_S5_NS1_8identityENS_26random_access_iterator_tagEEEDaT_SB_RKT0_T1_EUlTyOSB_E_EESB_SB_SB_SC_(%"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64, %"struct.base::identity"*, %class.DependencyNode**) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = icmp eq i64 %1, %3
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  br label %11

11:                                               ; preds = %17, %9
  %12 = phi i64 [ %1, %9 ], [ %21, %17 ]
  %13 = tail call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %12) #12
  %14 = load %class.DependencyNode*, %class.DependencyNode** %13, align 8
  %15 = load %class.DependencyNode*, %class.DependencyNode** %5, align 8
  %16 = icmp eq %class.DependencyNode* %14, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = add i64 %12, 1
  %19 = load i64, i64* %10, align 8
  %20 = icmp eq i64 %18, %19
  %21 = select i1 %20, i64 0, i64 %18
  %22 = icmp eq i64 %21, %3
  br i1 %22, label %23, label %11

23:                                               ; preds = %17
  %24 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  br label %62

25:                                               ; preds = %11, %6
  %26 = phi i64 [ %1, %6 ], [ %12, %11 ]
  %27 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %28 = icmp eq i64 %26, %3
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = add i64 %26, 1
  %31 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  %34 = select i1 %33, i64 0, i64 %30
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %62, label %36

36:                                               ; preds = %29, %55
  %37 = phi i64 [ %60, %55 ], [ %34, %29 ]
  %38 = phi i64 [ %57, %55 ], [ %26, %29 ]
  %39 = tail call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %37) #12
  %40 = load %class.DependencyNode*, %class.DependencyNode** %39, align 8
  %41 = load %class.DependencyNode*, %class.DependencyNode** %5, align 8
  %42 = icmp eq %class.DependencyNode* %40, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = load i64, i64* %31, align 8
  br label %55

45:                                               ; preds = %36
  %46 = tail call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %37) #12
  %47 = bitcast %class.DependencyNode** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %38) #12
  %50 = bitcast %class.DependencyNode** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = add i64 %38, 1
  %52 = load i64, i64* %31, align 8
  %53 = icmp eq i64 %51, %52
  %54 = select i1 %53, i64 0, i64 %51
  br label %55

55:                                               ; preds = %43, %45
  %56 = phi i64 [ %44, %43 ], [ %52, %45 ]
  %57 = phi i64 [ %38, %43 ], [ %54, %45 ]
  %58 = add i64 %37, 1
  %59 = icmp eq i64 %58, %56
  %60 = select i1 %59, i64 0, i64 %58
  %61 = icmp eq i64 %60, %3
  br i1 %61, label %62, label %36

62:                                               ; preds = %55, %29, %25, %23
  %63 = phi { %"class.base::circular_deque"*, i64 } [ %27, %25 ], [ %24, %23 ], [ %27, %29 ], [ %27, %55 ]
  %64 = phi i64 [ %3, %25 ], [ %3, %23 ], [ %26, %29 ], [ %57, %55 ]
  %65 = insertvalue { %"class.base::circular_deque"*, i64 } %63, i64 %64, 1
  ret { %"class.base::circular_deque"*, i64 } %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIP14DependencyNodeE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #12
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #12
  br i1 %31, label %32, label %33, !prof !20

32:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #12
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIP14DependencyNodeE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #12
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #12
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.DependencyNode** @_ZNK4base8internal12VectorBufferIP14DependencyNodeEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.DependencyNode**, %class.DependencyNode*** %23, align 8
  %25 = getelementptr inbounds %class.DependencyNode*, %class.DependencyNode** %24, i64 %1
  ret %class.DependencyNode** %25
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS_4pairIS3_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS_4pairIS3_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_4pairIKS3_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISL_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeIP14DependencyNodeS3_EENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_4pairIKS3_S3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISL_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP14DependencyNodeEE3RunES9_: argument 0"}
!12 = distinct !{!12, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP14DependencyNodeEE3RunES9_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP14DependencyNodeEE3RunES9_: argument 0"}
!15 = distinct !{!15, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP14DependencyNodeEE3RunES9_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP14DependencyNodeEE3RunES9_: argument 0"}
!18 = distinct !{!18, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP14DependencyNodeEE3RunES9_"}
!19 = !{i8 0, i8 2}
!20 = !{!"branch_weights", i32 1, i32 2000}
