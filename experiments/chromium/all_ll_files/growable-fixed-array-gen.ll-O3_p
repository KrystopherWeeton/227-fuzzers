; ModuleID = '../../v8/src/builtins/growable-fixed-array-gen.cc'
source_filename = "../../v8/src/builtins/growable-fixed-array-gen.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::GrowableFixedArray" = type { %"class.v8::internal::CodeStubAssembler", %"class.v8::internal::compiler::TypedCodeAssemblerVariable", %"class.v8::internal::compiler::TypedCodeAssemblerVariable.30", %"class.v8::internal::compiler::TypedCodeAssemblerVariable.30" }
%"class.v8::internal::CodeStubAssembler" = type { %"class.v8::internal::compiler::CodeAssembler", %"class.v8::internal::TorqueGeneratedExportedMacrosAssembler" }
%"class.v8::internal::compiler::CodeAssembler" = type { %"class.v8::internal::compiler::CodeAssemblerState"* }
%"class.v8::internal::compiler::CodeAssemblerState" = type { %"class.std::__1::unique_ptr", i32, i8*, i32, i8, %"class.v8::internal::ZoneSet", %"class.std::__1::function", %"class.std::__1::function", %"class.std::__1::vector", i32, %"class.v8::internal::compiler::JSGraph"*, %"class.std::__1::vector.23" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::compiler::RawMachineAssembler"* }
%"class.v8::internal::compiler::RawMachineAssembler" = type opaque
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::CodeAssemblerParameterizedLabel"**, %"class.v8::internal::compiler::CodeAssemblerParameterizedLabel"**, %"class.std::__1::__compressed_pair.20" }
%"class.v8::internal::compiler::CodeAssemblerParameterizedLabel" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.v8::internal::compiler::CodeAssemblerParameterizedLabel"** }
%"class.v8::internal::compiler::JSGraph" = type opaque
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::TorqueGeneratedExportedMacrosAssembler" = type { %"class.v8::internal::compiler::CodeAssemblerState"* }
%"class.v8::internal::compiler::TypedCodeAssemblerVariable" = type { %"class.v8::internal::compiler::CodeAssemblerVariable" }
%"class.v8::internal::compiler::CodeAssemblerVariable" = type { %"class.v8::internal::compiler::CodeAssemblerVariable::Impl"*, %"class.v8::internal::compiler::CodeAssemblerState"* }
%"class.v8::internal::compiler::CodeAssemblerVariable::Impl" = type opaque
%"class.v8::internal::compiler::TypedCodeAssemblerVariable.30" = type { %"class.v8::internal::compiler::CodeAssemblerVariable" }
%"class.v8::internal::compiler::Node" = type opaque
%"class.v8::base::Optional.59" = type { %"class.v8::base::internal::OptionalBase.60" }
%"class.v8::base::internal::OptionalBase.60" = type { %"struct.v8::base::internal::OptionalStorage.61" }
%"struct.v8::base::internal::OptionalStorage.61" = type { %"struct.v8::base::internal::OptionalStorageBase.62" }
%"struct.v8::base::internal::OptionalStorageBase.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"class.v8::internal::TNode.31" }
%"class.v8::internal::TNode.31" = type { %"class.v8::internal::compiler::Node"* }
%"class.v8::base::Optional.65" = type { %"class.v8::base::internal::OptionalBase.66" }
%"class.v8::base::internal::OptionalBase.66" = type { %"struct.v8::base::internal::OptionalStorage.67" }
%"struct.v8::base::internal::OptionalStorage.67" = type { %"struct.v8::base::internal::OptionalStorageBase.68" }
%"struct.v8::base::internal::OptionalStorageBase.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"class.v8::internal::TNode.70" }
%"class.v8::internal::TNode.70" = type { %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::CodeAssemblerLabel" = type { i8, i64, %"class.v8::internal::compiler::CodeAssemblerState"*, %"class.v8::internal::compiler::RawMachineLabel"*, %"class.std::__1::map", %"class.std::__1::map.39" }
%"class.v8::internal::compiler::RawMachineLabel" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::map.39" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::compiler::TypedCodeAssemblerVariable.64" = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18GrowableFixedArray4PushENS0_5TNodeINS0_6ObjectEEE(%"class.v8::internal::GrowableFixedArray"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::base::Optional.59", align 8
  %4 = alloca %"class.v8::base::Optional.65", align 8
  %5 = alloca %"class.v8::internal::compiler::CodeAssemblerLabel", align 8
  %6 = alloca %"class.v8::internal::compiler::CodeAssemblerLabel", align 8
  %7 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 2, i32 0
  %8 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %7) #4
  %9 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 3, i32 0
  %10 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %9) #4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CodeAssemblerLabel", %"class.v8::internal::compiler::CodeAssemblerLabel"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0, i32 0
  call void @_ZN2v88internal8compiler18CodeAssemblerLabelC2EPNS1_13CodeAssemblerEmPKPNS1_21CodeAssemblerVariableENS2_4TypeE(%"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5, %"class.v8::internal::compiler::CodeAssembler"* %12, i64 0, %"class.v8::internal::compiler::CodeAssemblerVariable"** null, i32 1) #4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::CodeAssemblerLabel", %"class.v8::internal::compiler::CodeAssemblerLabel"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #4
  call void @_ZN2v88internal8compiler18CodeAssemblerLabelC2EPNS1_13CodeAssemblerEmPKPNS1_21CodeAssemblerVariableENS2_4TypeE(%"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %6, %"class.v8::internal::compiler::CodeAssembler"* %12, i64 0, %"class.v8::internal::compiler::CodeAssemblerVariable"** null, i32 1) #4
  %14 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler11IntPtrEqualENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::Node"* %10, %"class.v8::internal::compiler::Node"* %8) #4
  call void @_ZN2v88internal8compiler13CodeAssembler6BranchENS0_5TNodeINS0_9IntegralTEEEPNS1_18CodeAssemblerLabelES7_(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::Node"* %14, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %6) #4
  %15 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0
  call void @_ZN2v88internal17CodeStubAssembler4BindEPNS0_8compiler18CodeAssemblerLabelE(%"class.v8::internal::CodeStubAssembler"* %15, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5) #4
  %16 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler7WordShrENS0_5TNodeINS0_5WordTEEEi(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::Node"* %10, i32 1) #4
  %17 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9IntPtrAddENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::Node"* %10, %"class.v8::internal::compiler::Node"* %16) #4
  %18 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler14IntPtrConstantEl(%"class.v8::internal::compiler::CodeAssembler"* %12, i64 16) #4
  %19 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9IntPtrAddENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::Node"* %17, %"class.v8::internal::compiler::Node"* %18) #4
  call void @_ZN2v88internal8compiler21CodeAssemblerVariable4BindEPNS1_4NodeE(%"class.v8::internal::compiler::CodeAssemblerVariable"* %9, %"class.v8::internal::compiler::Node"* %19) #4
  %20 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %9) #4
  %21 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  %23 = ptrtoint %"class.v8::internal::compiler::Node"* %20 to i64
  %24 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 1, i32 0
  %25 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %24) #4
  store i8 1, i8* %21, align 8
  %26 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.v8::internal::TNode.31"* %26 to i64*
  store i64 %23, i64* %27, align 8
  store i8 0, i8* %22, align 8
  %28 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %union.anon.69* %28 to i8*
  store i8 0, i8* %29, align 8
  %30 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17ExtractFixedArrayINS0_7IntPtrTEEENS0_5TNodeINS0_14FixedArrayBaseEEES6_NS_4base8OptionalINS4_IT_EEEESB_SB_NS7_5FlagsINS1_21ExtractFixedArrayFlagEiEEPNS0_8compiler26TypedCodeAssemblerVariableINS0_5BoolTEEENS8_INS4_INS0_6Int32TEEEEE(%"class.v8::internal::CodeStubAssembler"* %15, %"class.v8::internal::compiler::Node"* %25, i8 0, %"class.v8::internal::compiler::Node"* null, i8 1, %"class.v8::internal::compiler::Node"* %8, %"class.v8::base::Optional.59"* nonnull byval(%"class.v8::base::Optional.59") align 8 %3, i32 1, %"class.v8::internal::compiler::TypedCodeAssemblerVariable.64"* null, %"class.v8::base::Optional.65"* nonnull byval(%"class.v8::base::Optional.65") align 8 %4) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  call void @_ZN2v88internal8compiler21CodeAssemblerVariable4BindEPNS1_4NodeE(%"class.v8::internal::compiler::CodeAssemblerVariable"* %24, %"class.v8::internal::compiler::Node"* %30) #4
  call void @_ZN2v88internal8compiler13CodeAssembler4GotoEPNS1_18CodeAssemblerLabelE(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %6) #4
  call void @_ZN2v88internal17CodeStubAssembler4BindEPNS0_8compiler18CodeAssemblerLabelE(%"class.v8::internal::CodeStubAssembler"* %15, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %6) #4
  %31 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %24) #4
  call void @_ZN2v88internal17CodeStubAssembler37StoreFixedArrayOrPropertyArrayElementINS0_7IntPtrTEEEvNS0_5TNodeINS0_6UnionTINS0_10FixedArrayENS0_13PropertyArrayEEEEENS4_IT_EENS4_INS0_6ObjectEEENS0_16WriteBarrierModeEi(%"class.v8::internal::CodeStubAssembler"* %15, %"class.v8::internal::compiler::Node"* %31, %"class.v8::internal::compiler::Node"* %8, %"class.v8::internal::compiler::Node"* %1, i32 4, i32 0) #4
  %32 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler14IntPtrConstantEl(%"class.v8::internal::compiler::CodeAssembler"* %12, i64 1) #4
  %33 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9IntPtrAddENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %12, %"class.v8::internal::compiler::Node"* %8, %"class.v8::internal::compiler::Node"* %32) #4
  call void @_ZN2v88internal8compiler21CodeAssemblerVariable4BindEPNS1_4NodeE(%"class.v8::internal::compiler::CodeAssemblerVariable"* %7, %"class.v8::internal::compiler::Node"* %33) #4
  call void @_ZN2v88internal8compiler18CodeAssemblerLabelD1Ev(%"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #4
  call void @_ZN2v88internal8compiler18CodeAssemblerLabelD1Ev(%"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal8compiler13CodeAssembler6BranchENS0_5TNodeINS0_9IntegralTEEEPNS1_18CodeAssemblerLabelES7_(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::CodeAssemblerLabel"*, %"class.v8::internal::compiler::CodeAssemblerLabel"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler11IntPtrEqualENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal17CodeStubAssembler4BindEPNS0_8compiler18CodeAssemblerLabelE(%"class.v8::internal::CodeStubAssembler"*, %"class.v8::internal::compiler::CodeAssemblerLabel"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal18GrowableFixedArray11NewCapacityENS0_5TNodeINS0_7IntPtrTEEE(%"class.v8::internal::GrowableFixedArray"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler7WordShrENS0_5TNodeINS0_5WordTEEEi(%"class.v8::internal::compiler::CodeAssembler"* %3, %"class.v8::internal::compiler::Node"* %1, i32 1) #4
  %5 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9IntPtrAddENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %3, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %4) #4
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler14IntPtrConstantEl(%"class.v8::internal::compiler::CodeAssembler"* %3, i64 16) #4
  %7 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9IntPtrAddENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %3, %"class.v8::internal::compiler::Node"* %5, %"class.v8::internal::compiler::Node"* %6) #4
  ret %"class.v8::internal::compiler::Node"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal18GrowableFixedArray16ResizeFixedArrayENS0_5TNodeINS0_7IntPtrTEEES4_(%"class.v8::internal::GrowableFixedArray"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::Optional.59", align 8
  %5 = alloca %"class.v8::base::Optional.65", align 8
  %6 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %7 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 1, i32 0
  %8 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %7) #4
  %9 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.v8::internal::TNode.31"* %11 to i64*
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %union.anon.69* %14 to i8*
  store i8 0, i8* %15, align 8
  %16 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17ExtractFixedArrayINS0_7IntPtrTEEENS0_5TNodeINS0_14FixedArrayBaseEEES6_NS_4base8OptionalINS4_IT_EEEESB_SB_NS7_5FlagsINS1_21ExtractFixedArrayFlagEiEEPNS0_8compiler26TypedCodeAssemblerVariableINS0_5BoolTEEENS8_INS4_INS0_6Int32TEEEEE(%"class.v8::internal::CodeStubAssembler"* %9, %"class.v8::internal::compiler::Node"* %8, i8 0, %"class.v8::internal::compiler::Node"* null, i8 1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::base::Optional.59"* nonnull byval(%"class.v8::base::Optional.59") align 8 %4, i32 1, %"class.v8::internal::compiler::TypedCodeAssemblerVariable.64"* null, %"class.v8::base::Optional.65"* nonnull byval(%"class.v8::base::Optional.65") align 8 %5) #4
  ret %"class.v8::internal::compiler::Node"* %16
}

declare void @_ZN2v88internal8compiler13CodeAssembler4GotoEPNS1_18CodeAssemblerLabelE(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::CodeAssemblerLabel"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler14IntPtrConstantEl(%"class.v8::internal::compiler::CodeAssembler"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal8compiler18CodeAssemblerLabelD1Ev(%"class.v8::internal::compiler::CodeAssemblerLabel"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal18GrowableFixedArray12ToFixedArrayEv(%"class.v8::internal::GrowableFixedArray"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::base::Optional.59", align 8
  %3 = alloca %"class.v8::base::Optional.65", align 8
  %4 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %4) #4
  %6 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %4) #4
  %7 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %6 to i64
  %10 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 1, i32 0
  %11 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %10) #4
  %12 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0
  store i8 1, i8* %7, align 8
  %13 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = bitcast %"class.v8::internal::TNode.31"* %13 to i64*
  store i64 %9, i64* %14, align 8
  store i8 0, i8* %8, align 8
  %15 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon.69* %15 to i8*
  store i8 0, i8* %16, align 8
  %17 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17ExtractFixedArrayINS0_7IntPtrTEEENS0_5TNodeINS0_14FixedArrayBaseEEES6_NS_4base8OptionalINS4_IT_EEEESB_SB_NS7_5FlagsINS1_21ExtractFixedArrayFlagEiEEPNS0_8compiler26TypedCodeAssemblerVariableINS0_5BoolTEEENS8_INS4_INS0_6Int32TEEEEE(%"class.v8::internal::CodeStubAssembler"* %12, %"class.v8::internal::compiler::Node"* %11, i8 0, %"class.v8::internal::compiler::Node"* null, i8 1, %"class.v8::internal::compiler::Node"* %5, %"class.v8::base::Optional.59"* nonnull byval(%"class.v8::base::Optional.59") align 8 %2, i32 1, %"class.v8::internal::compiler::TypedCodeAssemblerVariable.64"* null, %"class.v8::base::Optional.65"* nonnull byval(%"class.v8::base::Optional.65") align 8 %3) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  ret %"class.v8::internal::compiler::Node"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal18GrowableFixedArray9ToJSArrayENS0_5TNodeINS0_7ContextEEE(%"class.v8::internal::GrowableFixedArray"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::base::Optional.59", align 8
  %4 = alloca %"class.v8::base::Optional.65", align 8
  %5 = alloca %"class.v8::internal::compiler::CodeAssemblerLabel", align 8
  %6 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0
  %7 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17LoadNativeContextENS0_5TNodeINS0_7ContextEEE(%"class.v8::internal::CodeStubAssembler"* %6, %"class.v8::internal::compiler::Node"* %1) #4
  %8 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler22LoadJSArrayElementsMapENS0_12ElementsKindENS0_5TNodeINS0_13NativeContextEEE(%"class.v8::internal::CodeStubAssembler"* %6, i8 zeroext 2, %"class.v8::internal::compiler::Node"* %7) #4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CodeAssemblerLabel", %"class.v8::internal::compiler::CodeAssemblerLabel"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 0, i32 0
  call void @_ZN2v88internal8compiler18CodeAssemblerLabelC2EPNS1_13CodeAssemblerEmPKPNS1_21CodeAssemblerVariableENS2_4TypeE(%"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5, %"class.v8::internal::compiler::CodeAssembler"* %10, i64 0, %"class.v8::internal::compiler::CodeAssemblerVariable"** null, i32 1) #4
  %11 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 2, i32 0
  %12 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %11) #4
  %13 = ptrtoint %"class.v8::internal::compiler::Node"* %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 3, i32 0
  %15 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %14) #4
  %16 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9WordEqualENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"* %10, %"class.v8::internal::compiler::Node"* %12, %"class.v8::internal::compiler::Node"* %15) #4
  call void @_ZN2v88internal8compiler13CodeAssembler6GotoIfENS0_5TNodeINS0_9IntegralTEEEPNS1_18CodeAssemblerLabelE(%"class.v8::internal::compiler::CodeAssembler"* %10, %"class.v8::internal::compiler::Node"* %16, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5) #4
  %17 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.v8::internal::GrowableFixedArray", %"class.v8::internal::GrowableFixedArray"* %0, i64 0, i32 1, i32 0
  %20 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %19) #4
  store i8 1, i8* %17, align 8
  %21 = getelementptr inbounds %"class.v8::base::Optional.59", %"class.v8::base::Optional.59"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.v8::internal::TNode.31"* %21 to i64*
  store i64 %13, i64* %22, align 8
  store i8 0, i8* %18, align 8
  %23 = getelementptr inbounds %"class.v8::base::Optional.65", %"class.v8::base::Optional.65"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %union.anon.69* %23 to i8*
  store i8 0, i8* %24, align 8
  %25 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17ExtractFixedArrayINS0_7IntPtrTEEENS0_5TNodeINS0_14FixedArrayBaseEEES6_NS_4base8OptionalINS4_IT_EEEESB_SB_NS7_5FlagsINS1_21ExtractFixedArrayFlagEiEEPNS0_8compiler26TypedCodeAssemblerVariableINS0_5BoolTEEENS8_INS4_INS0_6Int32TEEEEE(%"class.v8::internal::CodeStubAssembler"* %6, %"class.v8::internal::compiler::Node"* %20, i8 0, %"class.v8::internal::compiler::Node"* null, i8 1, %"class.v8::internal::compiler::Node"* %12, %"class.v8::base::Optional.59"* nonnull byval(%"class.v8::base::Optional.59") align 8 %3, i32 1, %"class.v8::internal::compiler::TypedCodeAssemblerVariable.64"* null, %"class.v8::base::Optional.65"* nonnull byval(%"class.v8::base::Optional.65") align 8 %4) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  call void @_ZN2v88internal8compiler21CodeAssemblerVariable4BindEPNS1_4NodeE(%"class.v8::internal::compiler::CodeAssemblerVariable"* %19, %"class.v8::internal::compiler::Node"* %25) #4
  call void @_ZN2v88internal8compiler21CodeAssemblerVariable4BindEPNS1_4NodeE(%"class.v8::internal::compiler::CodeAssemblerVariable"* %14, %"class.v8::internal::compiler::Node"* %12) #4
  call void @_ZN2v88internal8compiler13CodeAssembler4GotoEPNS1_18CodeAssemblerLabelE(%"class.v8::internal::compiler::CodeAssembler"* %10, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5) #4
  call void @_ZN2v88internal17CodeStubAssembler4BindEPNS0_8compiler18CodeAssemblerLabelE(%"class.v8::internal::CodeStubAssembler"* %6, %"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5) #4
  call void @_ZN2v88internal8compiler18CodeAssemblerLabelD1Ev(%"class.v8::internal::compiler::CodeAssemblerLabel"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #4
  %26 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %11) #4
  %27 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler6SmiTagENS0_5TNodeINS0_7IntPtrTEEE(%"class.v8::internal::CodeStubAssembler"* %6, %"class.v8::internal::compiler::Node"* %26) #4
  %28 = call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"* %19) #4
  %29 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler15AllocateJSArrayENS0_5TNodeINS0_3MapEEENS2_INS0_14FixedArrayBaseEEENS2_INS0_3SmiEEENS_4base8OptionalINS2_INS0_14AllocationSiteEEEEEi(%"class.v8::internal::CodeStubAssembler"* %6, %"class.v8::internal::compiler::Node"* %8, %"class.v8::internal::compiler::Node"* %28, %"class.v8::internal::compiler::Node"* %27, i8 0, %"class.v8::internal::compiler::Node"* null, i32 16) #4
  ret %"class.v8::internal::compiler::Node"* %29
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17LoadNativeContextENS0_5TNodeINS0_7ContextEEE(%"class.v8::internal::CodeStubAssembler"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler22LoadJSArrayElementsMapENS0_12ElementsKindENS0_5TNodeINS0_13NativeContextEEE(%"class.v8::internal::CodeStubAssembler"*, i8 zeroext, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler13CodeAssembler6GotoIfENS0_5TNodeINS0_9IntegralTEEEPNS1_18CodeAssemblerLabelE(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::CodeAssemblerLabel"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9WordEqualENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler6SmiTagENS0_5TNodeINS0_7IntPtrTEEE(%"class.v8::internal::CodeStubAssembler"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler15AllocateJSArrayENS0_5TNodeINS0_3MapEEENS2_INS0_14FixedArrayBaseEEENS2_INS0_3SmiEEENS_4base8OptionalINS2_INS0_14AllocationSiteEEEEEi(%"class.v8::internal::CodeStubAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i8, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal17CodeStubAssembler17ExtractFixedArrayINS0_7IntPtrTEEENS0_5TNodeINS0_14FixedArrayBaseEEES6_NS_4base8OptionalINS4_IT_EEEESB_SB_NS7_5FlagsINS1_21ExtractFixedArrayFlagEiEEPNS0_8compiler26TypedCodeAssemblerVariableINS0_5BoolTEEENS8_INS4_INS0_6Int32TEEEEE(%"class.v8::internal::CodeStubAssembler"*, %"class.v8::internal::compiler::Node"*, i8, %"class.v8::internal::compiler::Node"*, i8, %"class.v8::internal::compiler::Node"*, %"class.v8::base::Optional.59"* byval(%"class.v8::base::Optional.59") align 8, i32, %"class.v8::internal::compiler::TypedCodeAssemblerVariable.64"*, %"class.v8::base::Optional.65"* byval(%"class.v8::base::Optional.65") align 8) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler18CodeAssemblerLabelC2EPNS1_13CodeAssemblerEmPKPNS1_21CodeAssemblerVariableENS2_4TypeE(%"class.v8::internal::compiler::CodeAssemblerLabel"*, %"class.v8::internal::compiler::CodeAssembler"*, i64, %"class.v8::internal::compiler::CodeAssemblerVariable"**, i32) unnamed_addr #2

declare void @_ZN2v88internal17CodeStubAssembler37StoreFixedArrayOrPropertyArrayElementINS0_7IntPtrTEEEvNS0_5TNodeINS0_6UnionTINS0_10FixedArrayENS0_13PropertyArrayEEEEENS4_IT_EENS4_INS0_6ObjectEEENS0_16WriteBarrierModeEi(%"class.v8::internal::CodeStubAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler9IntPtrAddENS0_5TNodeINS0_5WordTEEES5_(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler13CodeAssembler7WordShrENS0_5TNodeINS0_5WordTEEEi(%"class.v8::internal::compiler::CodeAssembler"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler21CodeAssemblerVariable5valueEv(%"class.v8::internal::compiler::CodeAssemblerVariable"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler21CodeAssemblerVariable4BindEPNS1_4NodeE(%"class.v8::internal::compiler::CodeAssemblerVariable"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
