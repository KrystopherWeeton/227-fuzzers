; ModuleID = '../../base/profiler/stack_sampler_impl.cc'
source_filename = "../../base/profiler/stack_sampler_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::StackSamplerImpl" = type <{ %"class.base::StackSampler", %"class.std::__1::unique_ptr", %"class.base::OnceCallback", %"class.base::circular_deque", %"class.base::ModuleCache"*, %"class.base::RepeatingCallback", %"class.base::StackSamplerTestDelegate"*, i8, [7 x i8] }>
%"class.base::StackSampler" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::StackCopier"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2"*, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::Unwinder"* }
%"class.base::Unwinder" = type { i32 (...)**, %"class.base::ModuleCache"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::StackCopier" = type { i32 (...)** }
%"class.base::ModuleCache" = type { %"class.std::__1::set", %"class.base::internal::flat_tree", %"class.std::__1::vector", %"class.base::ModuleCache::AuxiliaryModuleProvider"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.11"* }
%"class.base::ModuleCache::AuxiliaryModuleProvider" = type { i32 (...)** }
%"class.base::StackSamplerTestDelegate" = type { i32 (...)** }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr.2"* }
%"class.std::__1::move_iterator" = type { %"class.std::__1::reverse_iterator" }
%"class.std::__1::reverse_iterator" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::unique_ptr.2"* }
%"class.base::internal::circular_deque_iterator" = type { %"class.base::internal::circular_deque_const_iterator" }
%"class.base::internal::circular_deque_const_iterator" = type { %"class.base::circular_deque"*, i64 }
%"class.base::StackBuffer" = type { %"class.std::__1::unique_ptr.27", i64 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i8* }
%"class.base::ProfileBuilder" = type { i32 (...)** }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::MetadataRecorder::MetadataProvider" = type { %"class.base::MetadataRecorder"*, %"class.base::internal::BasicAutoLock" }
%"class.base::MetadataRecorder" = type { i32 (...)**, %"struct.std::__1::array", %"struct.std::__1::atomic.42", i64, %"class.base::Lock", %"class.base::Lock" }
%"struct.std::__1::array" = type { [50 x %"struct.base::MetadataRecorder::ItemInternal"] }
%"struct.base::MetadataRecorder::ItemInternal" = type { %"struct.std::__1::atomic.33", i64, %"class.absl::optional", %"struct.std::__1::atomic.37" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i64 }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::BasicAutoLock" = type { %"class.base::Lock"* }
%"class.base::(anonymous namespace)::StackCopierDelegate" = type { %"class.base::StackCopier::Delegate", %"class.base::circular_deque"*, %"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"* }
%"class.base::StackCopier::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.base::Frame"*, %"struct.base::Frame"*, %"class.std::__1::__compressed_pair.49" }
%"struct.base::Frame" = type { i64, %"class.base::ModuleCache::Module"* }
%"class.base::ModuleCache::Module" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.base::Frame"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE6insertINS1_13move_iteratorINS1_16reverse_iteratorINS1_11__wrap_iterIPS6_EEEEEEEENS1_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENS_8internal29circular_deque_const_iteratorIS6_EESH_SH_ = comdat any

$_ZN4base11StackCopier8DelegateD2Ev = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEE13DestructRangeIS7_Li0EEEvPS7_SA_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN4base8UnwinderENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS6_EESB_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE10MoveBufferERNS_8internal12VectorBufferIS6_EEmmPSA_PmSD_ = comdat any

@_ZTVN4base16StackSamplerImplE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::StackSamplerImpl"*)* @_ZN4base16StackSamplerImplD2Ev to i8*), i8* bitcast (void (%"class.base::StackSamplerImpl"*)* @_ZN4base16StackSamplerImplD0Ev to i8*), i8* bitcast (void (%"class.base::StackSamplerImpl"*)* @_ZN4base16StackSamplerImpl10InitializeEv to i8*), i8* bitcast (void (%"class.base::StackSamplerImpl"*, %"class.base::Unwinder"*)* @_ZN4base16StackSamplerImpl14AddAuxUnwinderENSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.base::StackSamplerImpl"*, %"class.base::StackBuffer"*, %"class.base::ProfileBuilder"*)* @_ZN4base16StackSamplerImpl17RecordStackFramesEPNS_11StackBufferEPNS_14ProfileBuilderE to i8*)] }, align 8
@_ZTVN4base12_GLOBAL__N_119StackCopierDelegateE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::StackCopier::Delegate"*)* @_ZN4base11StackCopier8DelegateD2Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::StackCopierDelegate"*)* @_ZN4base12_GLOBAL__N_119StackCopierDelegateD0Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::StackCopierDelegate"*)* @_ZN4base12_GLOBAL__N_119StackCopierDelegate11OnStackCopyEv to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN4base16StackSamplerImplC1ENSt3__110unique_ptrINS_11StackCopierENS1_14default_deleteIS3_EEEENS_12OnceCallbackIFNS1_6vectorINS2_INS_8UnwinderENS4_IS9_EEEENS1_9allocatorISB_EEEEvEEEPNS_11ModuleCacheENS_17RepeatingCallbackIFvvEEEPNS_24StackSamplerTestDelegateE = hidden unnamed_addr alias void (%"class.base::StackSamplerImpl"*, %"class.base::StackCopier"*, %"class.base::OnceCallback"*, %"class.base::ModuleCache"*, %"class.base::RepeatingCallback"*, %"class.base::StackSamplerTestDelegate"*), void (%"class.base::StackSamplerImpl"*, %"class.base::StackCopier"*, %"class.base::OnceCallback"*, %"class.base::ModuleCache"*, %"class.base::RepeatingCallback"*, %"class.base::StackSamplerTestDelegate"*)* @_ZN4base16StackSamplerImplC2ENSt3__110unique_ptrINS_11StackCopierENS1_14default_deleteIS3_EEEENS_12OnceCallbackIFNS1_6vectorINS2_INS_8UnwinderENS4_IS9_EEEENS1_9allocatorISB_EEEEvEEEPNS_11ModuleCacheENS_17RepeatingCallbackIFvvEEEPNS_24StackSamplerTestDelegateE
@_ZN4base16StackSamplerImplD1Ev = hidden unnamed_addr alias void (%"class.base::StackSamplerImpl"*), void (%"class.base::StackSamplerImpl"*)* @_ZN4base16StackSamplerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImplC2ENSt3__110unique_ptrINS_11StackCopierENS1_14default_deleteIS3_EEEENS_12OnceCallbackIFNS1_6vectorINS2_INS_8UnwinderENS4_IS9_EEEENS1_9allocatorISB_EEEEvEEEPNS_11ModuleCacheENS_17RepeatingCallbackIFvvEEEPNS_24StackSamplerTestDelegateE(%"class.base::StackSamplerImpl"*, %"class.base::StackCopier"*, %"class.base::OnceCallback"* nocapture, %"class.base::ModuleCache"*, %"class.base::RepeatingCallback"* nocapture, %"class.base::StackSamplerTestDelegate"*) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.base::StackCopier"* %1 to i64
  %8 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 0
  tail call void @_ZN4base12StackSamplerC2Ev(%"class.base::StackSampler"* %8) #10
  %9 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base16StackSamplerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %12 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3
  %18 = bitcast %"class.base::circular_deque"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #10
  %19 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 4
  store %"class.base::ModuleCache"* %3, %"class.base::ModuleCache"** %19, align 8
  %20 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::RepeatingCallback"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::RepeatingCallback"* %20 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 6
  store %"class.base::StackSamplerTestDelegate"* %5, %"class.base::StackSamplerTestDelegate"** %25, align 8
  %26 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 7
  store i8 0, i8* %26, align 8
  ret void
}

declare void @_ZN4base12StackSamplerC2Ev(%"class.base::StackSampler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImplD2Ev(%"class.base::StackSamplerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base16StackSamplerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %4, i64 %6, i64 %8) #10
  %9 = bitcast %"class.base::circular_deque"* %4 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #10
  %11 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #10
  %12 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::StackCopier"*, %"class.base::StackCopier"** %12, align 8
  store %"class.base::StackCopier"* null, %"class.base::StackCopier"** %12, align 8
  %14 = icmp eq %"class.base::StackCopier"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.base::StackCopier"* %13 to void (%"class.base::StackCopier"*)***
  %17 = load void (%"class.base::StackCopier"*)**, void (%"class.base::StackCopier"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::StackCopier"*)*, void (%"class.base::StackCopier"*)** %17, i64 1
  %19 = load void (%"class.base::StackCopier"*)*, void (%"class.base::StackCopier"*)** %18, align 8
  tail call void %19(%"class.base::StackCopier"* nonnull %13) #10
  br label %20

20:                                               ; preds = %1, %15
  %21 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 0
  tail call void @_ZN4base12StackSamplerD2Ev(%"class.base::StackSampler"* %21) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base12StackSamplerD2Ev(%"class.base::StackSampler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImplD0Ev(%"class.base::StackSamplerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base16StackSamplerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %4, i64 %6, i64 %8) #10
  %9 = bitcast %"class.base::circular_deque"* %4 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #10
  %11 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #10
  %12 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.base::StackCopier"*, %"class.base::StackCopier"** %12, align 8
  store %"class.base::StackCopier"* null, %"class.base::StackCopier"** %12, align 8
  %14 = icmp eq %"class.base::StackCopier"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.base::StackCopier"* %13 to void (%"class.base::StackCopier"*)***
  %17 = load void (%"class.base::StackCopier"*)**, void (%"class.base::StackCopier"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::StackCopier"*)*, void (%"class.base::StackCopier"*)** %17, i64 1
  %19 = load void (%"class.base::StackCopier"*)*, void (%"class.base::StackCopier"*)** %18, align 8
  tail call void %19(%"class.base::StackCopier"* nonnull %13) #10
  br label %20

20:                                               ; preds = %1, %15
  %21 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 0
  tail call void @_ZN4base12StackSamplerD2Ev(%"class.base::StackSampler"* %21) #10
  %22 = bitcast %"class.base::StackSamplerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImpl10InitializeEv(%"class.base::StackSamplerImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::vector.20", align 8
  %4 = alloca %"class.std::__1::move_iterator", align 8
  %5 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 2
  %9 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %10 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10, !noalias !2
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !2
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %13, i64* %14, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %16 = inttoptr i64 %13 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.std::__1::vector.20"*, %"class.base::internal::BindStateBase"*)**
  %19 = load void (%"class.std::__1::vector.20"*, %"class.base::internal::BindStateBase"*)*, void (%"class.std::__1::vector.20"*, %"class.base::internal::BindStateBase"*)** %18, align 8, !noalias !2
  call void %19(%"class.std::__1::vector.20"* nonnull sret %3, %"class.base::internal::BindStateBase"* %16) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10, !noalias !2
  %20 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %7, align 8
  %24 = bitcast %"class.std::__1::vector.20"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::move_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::move_iterator", %"class.std::__1::move_iterator"* %4, i64 0, i32 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.2"** %27 to i64*
  store i64 %25, i64* %28, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE6insertINS1_13move_iteratorINS1_16reverse_iteratorINS1_11__wrap_iterIPS6_EEEEEEEENS1_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENS_8internal29circular_deque_const_iteratorIS6_EESH_SH_(%"class.base::circular_deque"* %20, %"class.base::circular_deque"* %20, i64 %22, %"class.std::__1::unique_ptr.2"* %23, %"class.std::__1::unique_ptr.2"* %23, %"class.std::__1::move_iterator"* nonnull byval(%"class.std::__1::move_iterator") align 8 %4)
  %29 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %21, align 8
  %32 = icmp eq i64 %30, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %20, i64 0, i32 0
  %35 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 0, i32 1
  br label %64

37:                                               ; preds = %64, %1
  %38 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 7
  store i8 1, i8* %38, align 8
  %39 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %6, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.2"* %39, null
  br i1 %40, label %63, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::unique_ptr.2"* %39 to i8*
  %43 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %7, align 8
  %44 = icmp eq %"class.std::__1::unique_ptr.2"* %43, %39
  br i1 %44, label %61, label %45

45:                                               ; preds = %41, %56
  %46 = phi %"class.std::__1::unique_ptr.2"* [ %47, %56 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %46, i64 -1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %48, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %48, align 8
  %50 = icmp eq %"class.base::Unwinder"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.base::Unwinder"* %49 to void (%"class.base::Unwinder"*)***
  %53 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %53, i64 1
  %55 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %54, align 8
  call void %55(%"class.base::Unwinder"* nonnull %49) #10
  br label %56

56:                                               ; preds = %51, %45
  %57 = icmp eq %"class.std::__1::unique_ptr.2"* %47, %39
  br i1 %57, label %58, label %45

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %41
  %62 = phi i8* [ %60, %58 ], [ %42, %41 ]
  store %"class.std::__1::unique_ptr.2"* %39, %"class.std::__1::unique_ptr.2"** %7, align 8
  call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %37, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void

64:                                               ; preds = %33, %64
  %65 = phi i64 [ %30, %33 ], [ %73, %64 ]
  %66 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %34, i64 %65) #10
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %67, align 8
  %69 = load %"class.base::ModuleCache"*, %"class.base::ModuleCache"** %35, align 8
  call void @_ZN4base8Unwinder10InitializeEPNS_11ModuleCacheE(%"class.base::Unwinder"* %68, %"class.base::ModuleCache"* %69) #10
  %70 = add i64 %65, 1
  %71 = load i64, i64* %36, align 8
  %72 = icmp eq i64 %70, %71
  %73 = select i1 %72, i64 0, i64 %70
  %74 = icmp eq i64 %73, %31
  br i1 %74, label %37, label %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE6insertINS1_13move_iteratorINS1_16reverse_iteratorINS1_11__wrap_iterIPS6_EEEEEEEENS1_9enable_ifIXgssr4base8internal11is_iteratorIT_EE5valueEvE4typeENS_8internal29circular_deque_const_iteratorIS6_EESH_SH_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"*, %"class.std::__1::move_iterator"* byval(%"class.std::__1::move_iterator") align 8) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %8 = alloca %"class.base::internal::circular_deque_iterator", align 8
  %9 = getelementptr inbounds %"class.std::__1::move_iterator", %"class.std::__1::move_iterator"* %5, i64 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.2"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint %"class.std::__1::unique_ptr.2"* %4 to i64
  %13 = sub i64 %12, %11
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %86, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.base::internal::circular_deque_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #10
  %20 = bitcast %"class.base::internal::circular_deque_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %8, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #10
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, %2
  br i1 %25, label %26, label %33

26:                                               ; preds = %16
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %14)
  %27 = load i64, i64* %23, align 8
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %21, align 8
  store i64 %27, i64* %22, align 8
  %28 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %14
  %31 = add i64 %30, %29
  %32 = urem i64 %31, %29
  store i64 %32, i64* %23, align 8
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %18, align 8
  store i64 %32, i64* %19, align 8
  br label %36

33:                                               ; preds = %16
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %18, align 8
  store i64 %2, i64* %19, align 8
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS6_EESB_(%"class.base::circular_deque"* %0, i64 %14, %"class.base::internal::circular_deque_iterator"* nonnull %7, %"class.base::internal::circular_deque_iterator"* nonnull %8)
  %34 = load i64, i64* %19, align 8
  %35 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %18, align 8
  br label %36

36:                                               ; preds = %33, %26
  %37 = phi %"class.base::circular_deque"* [ %35, %33 ], [ %0, %26 ]
  %38 = phi i64 [ %34, %33 ], [ %32, %26 ]
  %39 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  br label %40

40:                                               ; preds = %71, %36
  %41 = phi %"class.base::circular_deque"* [ %37, %36 ], [ %80, %71 ]
  %42 = phi i64 [ %38, %36 ], [ %84, %71 ]
  %43 = phi %"class.std::__1::unique_ptr.2"* [ %4, %36 ], [ %73, %71 ]
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %41, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %42, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = sub i64 %42, %45
  br label %54

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %41, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %42, %45
  %53 = add i64 %52, %51
  br label %54

54:                                               ; preds = %49, %47
  %55 = phi i64 [ %48, %47 ], [ %53, %49 ]
  %56 = load i64, i64* %22, align 8
  %57 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %21, align 8
  %58 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %57, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %63, label %61

61:                                               ; preds = %54
  %62 = sub i64 %56, %59
  br label %68

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %57, i64 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %56, %59
  %67 = add i64 %66, %65
  br label %68

68:                                               ; preds = %61, %63
  %69 = phi i64 [ %62, %61 ], [ %67, %63 ]
  %70 = icmp ult i64 %55, %69
  br i1 %70, label %71, label %85

71:                                               ; preds = %68
  %72 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %39, i64 %42)
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %43, i64 -1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr.2"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %74, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.2"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load i64, i64* %19, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %19, align 8
  %80 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %18, align 8
  %81 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %80, i64 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %79, %82
  %84 = select i1 %83, i64 0, i64 %79
  store i64 %84, i64* %19, align 8
  br label %40

85:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  br label %86

86:                                               ; preds = %6, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Unwinder10InitializeEPNS_11ModuleCacheE(%"class.base::Unwinder"*, %"class.base::ModuleCache"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImpl14AddAuxUnwinderENSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEE(%"class.base::StackSamplerImpl"*, %"class.base::Unwinder"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::Unwinder"* %1 to i64
  %4 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 4
  %9 = load %"class.base::ModuleCache"*, %"class.base::ModuleCache"** %8, align 8
  tail call void @_ZN4base8Unwinder10InitializeEPNS_11ModuleCacheE(%"class.base::Unwinder"* %1, %"class.base::ModuleCache"* %9) #10
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %11, i64 1) #10
  %12 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %15, %10
  %19 = phi i64 [ %17, %15 ], [ %13, %10 ]
  %20 = add i64 %19, -1
  store i64 %20, i64* %12, align 8
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %11, i64 0, i32 0
  %22 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %20) #10
  %23 = bitcast %"class.std::__1::unique_ptr.2"* %22 to i64*
  store i64 %3, i64* %23, align 8
  %24 = load i64, i64* %12, align 8
  %25 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImpl17RecordStackFramesEPNS_11StackBufferEPNS_14ProfileBuilderE(%"class.base::StackSamplerImpl"*, %"class.base::StackBuffer"*, %"class.base::ProfileBuilder"*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.mcontext_t, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::MetadataRecorder::MetadataProvider", align 8
  %8 = alloca %"class.base::(anonymous namespace)::StackCopierDelegate", align 8
  %9 = alloca %"class.std::__1::vector.47", align 8
  %10 = alloca %"class.std::__1::vector.47", align 8
  %11 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = icmp eq %"class.base::internal::BindStateBase"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* nonnull %12) #10
  br label %18

18:                                               ; preds = %3, %14
  %19 = bitcast %struct.mcontext_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 256, i1 false)
  %20 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %21 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = bitcast %"class.base::MetadataRecorder::MetadataProvider"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = bitcast %"class.base::MetadataRecorder::MetadataProvider"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = tail call %"class.base::MetadataRecorder"* @_ZN4base25GetSampleMetadataRecorderEv() #10
  call void @_ZN4base16MetadataRecorder16MetadataProviderC1EPS0_(%"class.base::MetadataRecorder::MetadataProvider"* nonnull %7, %"class.base::MetadataRecorder"* %25) #10
  %26 = bitcast %"class.base::(anonymous namespace)::StackCopierDelegate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %8, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %8, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %8, i64 0, i32 2
  %30 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %8, i64 0, i32 3
  %31 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base12_GLOBAL__N_119StackCopierDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  store %"class.base::circular_deque"* %31, %"class.base::circular_deque"** %28, align 8
  store %"class.base::ProfileBuilder"* %2, %"class.base::ProfileBuilder"** %29, align 8
  store %"class.base::MetadataRecorder::MetadataProvider"* %7, %"class.base::MetadataRecorder::MetadataProvider"** %30, align 8
  %32 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.base::StackCopier"*, %"class.base::StackCopier"** %32, align 8
  %34 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %8, i64 0, i32 0
  %35 = bitcast %"class.base::StackCopier"* %33 to i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)***
  %36 = load i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)**, i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)*, i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)** %36, i64 2
  %38 = load i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)*, i1 (%"class.base::StackCopier"*, %"class.base::StackBuffer"*, i64*, %"class.base::TimeTicks"*, %struct.mcontext_t*, %"class.base::StackCopier::Delegate"*)** %37, align 8
  %39 = call zeroext i1 %38(%"class.base::StackCopier"* %33, %"class.base::StackBuffer"* %1, i64* nonnull %5, %"class.base::TimeTicks"* nonnull %6, %struct.mcontext_t* nonnull %4, %"class.base::StackCopier::Delegate"* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  call void @_ZN4base16MetadataRecorder16MetadataProviderD1Ev(%"class.base::MetadataRecorder::MetadataProvider"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br i1 %39, label %69, label %40

40:                                               ; preds = %18
  %41 = bitcast %"class.std::__1::vector.47"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #10
  %42 = load i64, i64* %22, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi i64 [ %45, %44 ], [ %42, %40 ]
  %48 = bitcast %"class.base::ProfileBuilder"* %2 to void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)***
  %49 = load void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)**, void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)*, void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)** %49, i64 5
  %51 = load void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)*, void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)** %50, align 8
  call void %51(%"class.base::ProfileBuilder"* %2, %"class.std::__1::vector.47"* nonnull %9, i64 %47) #10
  %52 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %9, i64 0, i32 0, i32 0
  %53 = load %"struct.base::Frame"*, %"struct.base::Frame"** %52, align 8
  %54 = icmp eq %"struct.base::Frame"* %53, null
  br i1 %54, label %127, label %55

55:                                               ; preds = %46
  %56 = bitcast %"struct.base::Frame"* %53 to i8*
  %57 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %9, i64 0, i32 0, i32 1
  %58 = load %"struct.base::Frame"*, %"struct.base::Frame"** %57, align 8
  %59 = icmp eq %"struct.base::Frame"* %58, %53
  br i1 %59, label %67, label %60

60:                                               ; preds = %55, %60
  %61 = phi %"struct.base::Frame"* [ %62, %60 ], [ %58, %55 ]
  %62 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %61, i64 -1
  call void @_ZN4base5FrameD1Ev(%"struct.base::Frame"* %62) #10
  %63 = icmp eq %"struct.base::Frame"* %62, %53
  br i1 %63, label %64, label %60

64:                                               ; preds = %60
  %65 = bitcast %"class.std::__1::vector.47"* %9 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %55
  %68 = phi i8* [ %66, %64 ], [ %56, %55 ]
  store %"struct.base::Frame"* %53, %"struct.base::Frame"** %57, align 8
  call void @_ZdlPv(i8* %68) #11
  br label %127

69:                                               ; preds = %18
  %70 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %71, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %31, i64 0, i32 0
  %77 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 3, i32 0, i32 1
  br label %82

78:                                               ; preds = %82, %69
  %79 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 6
  %80 = load %"class.base::StackSamplerTestDelegate"*, %"class.base::StackSamplerTestDelegate"** %79, align 8
  %81 = icmp eq %"class.base::StackSamplerTestDelegate"* %80, null
  br i1 %81, label %101, label %96

82:                                               ; preds = %75, %82
  %83 = phi i64 [ %71, %75 ], [ %94, %82 ]
  %84 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %76, i64 %83) #10
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %85, align 8
  %87 = bitcast %"class.base::Unwinder"* %86 to void (%"class.base::Unwinder"*)***
  %88 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %88, i64 3
  %90 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %89, align 8
  call void %90(%"class.base::Unwinder"* %86) #10
  %91 = add i64 %83, 1
  %92 = load i64, i64* %77, align 8
  %93 = icmp eq i64 %91, %92
  %94 = select i1 %93, i64 0, i64 %91
  %95 = icmp eq i64 %94, %73
  br i1 %95, label %78, label %82

96:                                               ; preds = %78
  %97 = bitcast %"class.base::StackSamplerTestDelegate"* %80 to void (%"class.base::StackSamplerTestDelegate"*)***
  %98 = load void (%"class.base::StackSamplerTestDelegate"*)**, void (%"class.base::StackSamplerTestDelegate"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.base::StackSamplerTestDelegate"*)*, void (%"class.base::StackSamplerTestDelegate"*)** %98, i64 2
  %100 = load void (%"class.base::StackSamplerTestDelegate"*)*, void (%"class.base::StackSamplerTestDelegate"*)** %99, align 8
  call void %100(%"class.base::StackSamplerTestDelegate"* nonnull %80) #10
  br label %101

101:                                              ; preds = %78, %96
  %102 = getelementptr inbounds %"class.base::StackSamplerImpl", %"class.base::StackSamplerImpl"* %0, i64 0, i32 4
  %103 = load %"class.base::ModuleCache"*, %"class.base::ModuleCache"** %102, align 8
  %104 = load i64, i64* %5, align 8
  call void @_ZN4base16StackSamplerImpl9WalkStackEPNS_11ModuleCacheEP10mcontext_tmRKNS_14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS6_14default_deleteIS8_EEEEEE(%"class.std::__1::vector.47"* nonnull sret %10, %"class.base::ModuleCache"* %103, %struct.mcontext_t* nonnull %4, i64 %104, %"class.base::circular_deque"* dereferenceable(32) %31)
  %105 = load i64, i64* %22, align 8
  %106 = bitcast %"class.base::ProfileBuilder"* %2 to void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)***
  %107 = load void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)**, void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)*, void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)** %107, i64 5
  %109 = load void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)*, void (%"class.base::ProfileBuilder"*, %"class.std::__1::vector.47"*, i64)** %108, align 8
  call void %109(%"class.base::ProfileBuilder"* %2, %"class.std::__1::vector.47"* nonnull %10, i64 %105) #10
  %110 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %10, i64 0, i32 0, i32 0
  %111 = load %"struct.base::Frame"*, %"struct.base::Frame"** %110, align 8
  %112 = icmp eq %"struct.base::Frame"* %111, null
  br i1 %112, label %127, label %113

113:                                              ; preds = %101
  %114 = bitcast %"struct.base::Frame"* %111 to i8*
  %115 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %10, i64 0, i32 0, i32 1
  %116 = load %"struct.base::Frame"*, %"struct.base::Frame"** %115, align 8
  %117 = icmp eq %"struct.base::Frame"* %116, %111
  br i1 %117, label %125, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"struct.base::Frame"* [ %120, %118 ], [ %116, %113 ]
  %120 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %119, i64 -1
  call void @_ZN4base5FrameD1Ev(%"struct.base::Frame"* %120) #10
  %121 = icmp eq %"struct.base::Frame"* %120, %111
  br i1 %121, label %122, label %118

122:                                              ; preds = %118
  %123 = bitcast %"class.std::__1::vector.47"* %10 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %113
  %126 = phi i8* [ %124, %122 ], [ %114, %113 ]
  store %"struct.base::Frame"* %111, %"struct.base::Frame"** %115, align 8
  call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %125, %101, %67, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %19) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare %"class.base::MetadataRecorder"* @_ZN4base25GetSampleMetadataRecorderEv() local_unnamed_addr #1

declare void @_ZN4base16MetadataRecorder16MetadataProviderC1EPS0_(%"class.base::MetadataRecorder::MetadataProvider"*, %"class.base::MetadataRecorder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11StackCopier8DelegateD2Ev(%"class.base::StackCopier::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base16MetadataRecorder16MetadataProviderD1Ev(%"class.base::MetadataRecorder::MetadataProvider"*) unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImpl9WalkStackEPNS_11ModuleCacheEP10mcontext_tmRKNS_14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS6_14default_deleteIS8_EEEEEE(%"class.std::__1::vector.47"* noalias sret, %"class.base::ModuleCache"*, %struct.mcontext_t*, i64, %"class.base::circular_deque"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.base::Frame"** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.47"* %0 to i64*
  %10 = bitcast %"struct.base::Frame"** %6 to i64*
  %11 = tail call i8* @_Znwm(i64 2048) #11
  %12 = ptrtoint i8* %11 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 2048
  %14 = ptrtoint i8* %13 to i64
  store i64 %12, i64* %9, align 8
  store i64 %12, i64* %10, align 8
  store i64 %14, i64* %8, align 8
  %15 = getelementptr inbounds %struct.mcontext_t, %struct.mcontext_t* %2, i64 0, i32 0, i64 16
  %16 = load i64, i64* %15, align 8
  %17 = tail call %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"* %1, i64 %16) #10
  %18 = bitcast i8* %11 to %"struct.base::Frame"*
  %19 = load i64, i64* %15, align 8
  tail call void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"* nonnull %18, i64 %19, %"class.base::ModuleCache::Module"* %17) #10
  %20 = getelementptr inbounds i8, i8* %11, i64 16
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"struct.base::Frame"** %6 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 2
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %66, %5
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %24, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %72, label %31

31:                                               ; preds = %27, %43
  %32 = phi i64 [ %47, %43 ], [ %28, %27 ]
  %33 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %25, i64 %32) #10
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %34, align 8
  %36 = load %"struct.base::Frame"*, %"struct.base::Frame"** %6, align 8
  %37 = getelementptr inbounds %"struct.base::Frame", %"struct.base::Frame"* %36, i64 -1
  %38 = bitcast %"class.base::Unwinder"* %35 to i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)***
  %39 = load i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)**, i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)*, i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)** %39, i64 4
  %41 = load i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)*, i1 (%"class.base::Unwinder"*, %"struct.base::Frame"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.base::Unwinder"* %35, %"struct.base::Frame"* dereferenceable(16) %37) #10
  br i1 %42, label %49, label %43

43:                                               ; preds = %31
  %44 = add i64 %32, 1
  %45 = load i64, i64* %26, align 8
  %46 = icmp eq i64 %44, %45
  %47 = select i1 %46, i64 0, i64 %44
  %48 = icmp eq i64 %47, %29
  br i1 %48, label %49, label %31

49:                                               ; preds = %31, %43
  %50 = phi i64 [ %29, %43 ], [ %32, %31 ]
  %51 = load i64, i64* %24, align 8
  %52 = icmp eq i64 %50, %51
  br i1 %52, label %72, label %53

53:                                               ; preds = %49
  %54 = load i64, i64* %22, align 8
  %55 = load i64, i64* %9, align 8
  %56 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %25, i64 %50) #10
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %57, align 8
  %59 = bitcast %"class.base::Unwinder"* %58 to i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)***
  %60 = load i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)**, i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)*, i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)** %60, i64 5
  %62 = load i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)*, i32 (%"class.base::Unwinder"*, %struct.mcontext_t*, i64, %"class.std::__1::vector.47"*)** %61, align 8
  %63 = call i32 %62(%"class.base::Unwinder"* %58, %struct.mcontext_t* %2, i64 %3, %"class.std::__1::vector.47"* %0) #10
  %64 = and i32 %63, -3
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %53
  %67 = sub i64 %54, %55
  %68 = load i64, i64* %22, align 8
  %69 = load i64, i64* %9, align 8
  %70 = sub i64 %68, %69
  %71 = icmp ugt i64 %70, %67
  br i1 %71, label %27, label %72

72:                                               ; preds = %27, %49, %66, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16StackSamplerImpl19WalkStackForTestingEPNS_11ModuleCacheEP10mcontext_tmRKNS_14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS6_14default_deleteIS8_EEEEEE(%"class.std::__1::vector.47"* noalias sret, %"class.base::ModuleCache"*, %struct.mcontext_t*, i64, %"class.base::circular_deque"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16StackSamplerImpl9WalkStackEPNS_11ModuleCacheEP10mcontext_tmRKNS_14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS6_14default_deleteIS8_EEEEEE(%"class.std::__1::vector.47"* sret %0, %"class.base::ModuleCache"* %1, %struct.mcontext_t* %2, i64 %3, %"class.base::circular_deque"* dereferenceable(32) %4)
  ret void
}

declare %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_119StackCopierDelegateD0Ev(%"class.base::(anonymous namespace)::StackCopierDelegate"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.base::(anonymous namespace)::StackCopierDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_119StackCopierDelegate11OnStackCopyEv(%"class.base::(anonymous namespace)::StackCopierDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %0, i64 0, i32 1
  %3 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0, i32 1
  br label %21

12:                                               ; preds = %21, %1
  %13 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %0, i64 0, i32 2
  %14 = load %"class.base::ProfileBuilder"*, %"class.base::ProfileBuilder"** %13, align 8
  %15 = getelementptr inbounds %"class.base::(anonymous namespace)::StackCopierDelegate", %"class.base::(anonymous namespace)::StackCopierDelegate"* %0, i64 0, i32 3
  %16 = load %"class.base::MetadataRecorder::MetadataProvider"*, %"class.base::MetadataRecorder::MetadataProvider"** %15, align 8
  %17 = bitcast %"class.base::ProfileBuilder"* %14 to void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)***
  %18 = load void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)**, void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)*, void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)** %18, i64 3
  %20 = load void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)*, void (%"class.base::ProfileBuilder"*, %"class.base::MetadataRecorder::MetadataProvider"*)** %19, align 8
  tail call void %20(%"class.base::ProfileBuilder"* %14, %"class.base::MetadataRecorder::MetadataProvider"* dereferenceable(16) %16) #10
  ret void

21:                                               ; preds = %9, %21
  %22 = phi i64 [ %5, %9 ], [ %33, %21 ]
  %23 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %22) #10
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %24, align 8
  %26 = bitcast %"class.base::Unwinder"* %25 to void (%"class.base::Unwinder"*)***
  %27 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %27, i64 2
  %29 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %28, align 8
  tail call void %29(%"class.base::Unwinder"* %25) #10
  %30 = add i64 %22, 1
  %31 = load i64, i64* %11, align 8
  %32 = icmp eq i64 %30, %31
  %33 = select i1 %32, i64 0, i64 %30
  %34 = icmp eq i64 %33, %7
  br i1 %34, label %12, label %21
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %24, i64 %1
  ret %"class.std::__1::unique_ptr.2"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEE13DestructRangeIS7_Li0EEEvPS7_SA_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr.2"* %8, %"class.std::__1::unique_ptr.2"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr.2"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEE13DestructRangeIS7_Li0EEEvPS7_SA_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr.2"* %15, %"class.std::__1::unique_ptr.2"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEE13DestructRangeIS7_Li0EEEvPS7_SA_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr.2"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.2"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr.2"* %1, %"class.std::__1::unique_ptr.2"** %5, align 8
  store %"class.std::__1::unique_ptr.2"* %2, %"class.std::__1::unique_ptr.2"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr.2"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr.2"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN4base8UnwinderENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #10
  %17 = bitcast %"class.std::__1::unique_ptr.2"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN4base8UnwinderENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %26 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.2"* %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %25, %39
  %30 = phi %"class.std::__1::unique_ptr.2"* [ %41, %39 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %31, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %31, align 8
  %33 = icmp eq %"class.base::Unwinder"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::Unwinder"* %32 to void (%"class.base::Unwinder"*)***
  %36 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %36, i64 1
  %38 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %37, align 8
  call void %38(%"class.base::Unwinder"* nonnull %32) #10
  br label %39

39:                                               ; preds = %29, %34
  %40 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %5, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %40, i64 1
  store %"class.std::__1::unique_ptr.2"* %41, %"class.std::__1::unique_ptr.2"** %5, align 8
  %42 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %6, align 8
  %43 = icmp eq %"class.std::__1::unique_ptr.2"* %41, %42
  br i1 %43, label %44, label %29

44:                                               ; preds = %39, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %24, i64 %1
  ret %"class.std::__1::unique_ptr.2"* %25
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN4base8UnwinderENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #10
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #10
  br i1 %37, label %38, label %39, !prof !6

38:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #10
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE10MoveBufferERNS_8internal12VectorBufferIS6_EEmmPSA_PmSD_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #10
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #10
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE11MakeRoomForEmPNS_8internal23circular_deque_iteratorIS6_EESB_(%"class.base::circular_deque"*, i64, %"class.base::internal::circular_deque_iterator"*, %"class.base::internal::circular_deque_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = bitcast %"class.base::internal::circular_deque_iterator"* %3 to i8*
  %9 = bitcast %"class.base::internal::circular_deque_iterator"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  br label %106

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.base::circular_deque"*, %"class.base::circular_deque"** %13, align 8
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %14, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %12, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = sub i64 %12, %16
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %14, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %16
  %24 = add i64 %23, %22
  br label %25

25:                                               ; preds = %18, %20
  %26 = phi i64 [ %19, %18 ], [ %24, %20 ]
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %1)
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %26
  %30 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = urem i64 %29, %32
  store i64 %33, i64* %11, align 8
  %34 = add i64 %33, %1
  %35 = load i64, i64* %31, align 8
  %36 = urem i64 %34, %35
  %37 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 0
  store %"class.base::circular_deque"* %0, %"class.base::circular_deque"** %37, align 8
  %38 = getelementptr inbounds %"class.base::internal::circular_deque_iterator", %"class.base::internal::circular_deque_iterator"* %3, i64 0, i32 0, i32 1
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %1
  %42 = load i64, i64* %31, align 8
  %43 = urem i64 %41, %42
  store i64 %43, i64* %39, align 8
  %44 = load i64, i64* %11, align 8
  %45 = icmp eq i64 %40, %44
  br i1 %45, label %106, label %46

46:                                               ; preds = %25
  %47 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %48

48:                                               ; preds = %46, %103
  %49 = phi i64 [ %43, %46 ], [ %62, %103 ]
  %50 = phi i64 [ %40, %46 ], [ %56, %103 ]
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = load i64, i64* %31, align 8
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i64 [ %53, %52 ], [ %50, %48 ]
  %56 = add i64 %55, -1
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = load i64, i64* %31, align 8
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi i64 [ %59, %58 ], [ %49, %54 ]
  %62 = add i64 %61, -1
  %63 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %56)
  %64 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %55)
  %65 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %30, i64 %62)
  %66 = ptrtoint %"class.std::__1::unique_ptr.2"* %63 to i64
  %67 = icmp ult %"class.std::__1::unique_ptr.2"* %65, %64
  br i1 %67, label %68, label %83

68:                                               ; preds = %60
  %69 = ptrtoint %"class.std::__1::unique_ptr.2"* %65 to i64
  %70 = ptrtoint %"class.std::__1::unique_ptr.2"* %64 to i64
  %71 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %70, i64 %66) #10
  %72 = extractvalue { i64, i1 } %71, 1
  %73 = extractvalue { i64, i1 } %71, 0
  %74 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %69, i64 %73) #10
  %75 = extractvalue { i64, i1 } %74, 1
  %76 = or i1 %72, %75
  br i1 %76, label %77, label %78, !prof !6

77:                                               ; preds = %68
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %68
  %79 = extractvalue { i64, i1 } %74, 0
  %80 = icmp ugt i64 %79, %66
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %83

83:                                               ; preds = %81, %78, %60
  %84 = icmp eq %"class.std::__1::unique_ptr.2"* %63, %64
  br i1 %84, label %103, label %85

85:                                               ; preds = %83, %99
  %86 = phi %"class.std::__1::unique_ptr.2"* [ %101, %99 ], [ %65, %83 ]
  %87 = phi %"class.std::__1::unique_ptr.2"* [ %100, %99 ], [ %63, %83 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.2"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.2"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %88, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %88, align 8
  %93 = icmp eq %"class.base::Unwinder"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %85
  %95 = bitcast %"class.base::Unwinder"* %92 to void (%"class.base::Unwinder"*)***
  %96 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %96, i64 1
  %98 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %97, align 8
  call void %98(%"class.base::Unwinder"* nonnull %92) #10
  br label %99

99:                                               ; preds = %94, %85
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %87, i64 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %86, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr.2"* %100, %64
  br i1 %102, label %103, label %85

103:                                              ; preds = %99, %83
  %104 = load i64, i64* %11, align 8
  %105 = icmp eq i64 %56, %104
  br i1 %105, label %106, label %48

106:                                              ; preds = %103, %25, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrINS_8UnwinderENS1_14default_deleteIS3_EEEEE10MoveBufferERNS_8internal12VectorBufferIS6_EEmmPSA_PmSD_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %58

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.2"* %14 to i64
  %19 = icmp ult %"class.std::__1::unique_ptr.2"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.std::__1::unique_ptr.2"* %17 to i64
  %22 = ptrtoint %"class.std::__1::unique_ptr.2"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #10
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #10
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !6

29:                                               ; preds = %20
  tail call void @llvm.trap() #10
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.std::__1::unique_ptr.2"* %14, %15
  br i1 %37, label %56, label %38

38:                                               ; preds = %36, %52
  %39 = phi %"class.std::__1::unique_ptr.2"* [ %54, %52 ], [ %17, %36 ]
  %40 = phi %"class.std::__1::unique_ptr.2"* [ %53, %52 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.2"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %41, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.2"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %41, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %41, align 8
  %46 = icmp eq %"class.base::Unwinder"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.base::Unwinder"* %45 to void (%"class.base::Unwinder"*)***
  %49 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %49, i64 1
  %51 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %50, align 8
  call void %51(%"class.base::Unwinder"* nonnull %45) #10
  br label %52

52:                                               ; preds = %47, %38
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %40, i64 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %39, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr.2"* %53, %15
  br i1 %55, label %56, label %38

56:                                               ; preds = %52, %36
  %57 = sub i64 %2, %1
  br label %148

58:                                               ; preds = %6
  %59 = icmp ult i64 %2, %1
  br i1 %59, label %60, label %148

60:                                               ; preds = %58
  %61 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %62 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %63 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.2"*, %"class.std::__1::unique_ptr.2"** %63, align 8
  %65 = ptrtoint %"class.std::__1::unique_ptr.2"* %61 to i64
  %66 = icmp ult %"class.std::__1::unique_ptr.2"* %64, %62
  br i1 %66, label %67, label %83

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::unique_ptr.2"* %64 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.2"* %62 to i64
  %70 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %69, i64 %65) #10
  %71 = extractvalue { i64, i1 } %70, 1
  %72 = extractvalue { i64, i1 } %70, 0
  %73 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %68, i64 %72) #10
  %74 = extractvalue { i64, i1 } %73, 1
  %75 = or i1 %71, %74
  br i1 %75, label %76, label %77, !prof !6

76:                                               ; preds = %67
  tail call void @llvm.trap() #10
  unreachable

77:                                               ; preds = %67
  %78 = extractvalue { i64, i1 } %73, 0
  %79 = icmp ugt i64 %78, %65
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #10
  br label %83

83:                                               ; preds = %80, %77, %60
  %84 = icmp eq %"class.std::__1::unique_ptr.2"* %61, %62
  br i1 %84, label %103, label %85

85:                                               ; preds = %83, %99
  %86 = phi %"class.std::__1::unique_ptr.2"* [ %101, %99 ], [ %64, %83 ]
  %87 = phi %"class.std::__1::unique_ptr.2"* [ %100, %99 ], [ %61, %83 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.2"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.2"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %88, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %88, align 8
  %93 = icmp eq %"class.base::Unwinder"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %85
  %95 = bitcast %"class.base::Unwinder"* %92 to void (%"class.base::Unwinder"*)***
  %96 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %96, i64 1
  %98 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %97, align 8
  call void %98(%"class.base::Unwinder"* nonnull %92) #10
  br label %99

99:                                               ; preds = %94, %85
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %87, i64 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %86, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr.2"* %100, %62
  br i1 %102, label %103, label %85

103:                                              ; preds = %99, %83
  %104 = sub i64 %11, %1
  %105 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %106 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %107 = call dereferenceable(8) %"class.std::__1::unique_ptr.2"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrINS_8UnwinderENS2_14default_deleteIS4_EEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %104)
  %108 = ptrtoint %"class.std::__1::unique_ptr.2"* %105 to i64
  %109 = icmp ult %"class.std::__1::unique_ptr.2"* %107, %106
  br i1 %109, label %110, label %126

110:                                              ; preds = %103
  %111 = ptrtoint %"class.std::__1::unique_ptr.2"* %107 to i64
  %112 = ptrtoint %"class.std::__1::unique_ptr.2"* %106 to i64
  %113 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %112, i64 %108) #10
  %114 = extractvalue { i64, i1 } %113, 1
  %115 = extractvalue { i64, i1 } %113, 0
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %111, i64 %115) #10
  %117 = extractvalue { i64, i1 } %116, 1
  %118 = or i1 %114, %117
  br i1 %118, label %119, label %120, !prof !6

119:                                              ; preds = %110
  call void @llvm.trap() #10
  unreachable

120:                                              ; preds = %110
  %121 = extractvalue { i64, i1 } %116, 0
  %122 = icmp ugt i64 %121, %108
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #10
  br label %126

126:                                              ; preds = %123, %120, %103
  %127 = icmp eq %"class.std::__1::unique_ptr.2"* %105, %106
  br i1 %127, label %146, label %128

128:                                              ; preds = %126, %142
  %129 = phi %"class.std::__1::unique_ptr.2"* [ %144, %142 ], [ %107, %126 ]
  %130 = phi %"class.std::__1::unique_ptr.2"* [ %143, %142 ], [ %105, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr.2"* %130 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %131, align 8
  %134 = bitcast %"class.std::__1::unique_ptr.2"* %129 to i64*
  store i64 %133, i64* %134, align 8
  %135 = load %"class.base::Unwinder"*, %"class.base::Unwinder"** %131, align 8
  store %"class.base::Unwinder"* null, %"class.base::Unwinder"** %131, align 8
  %136 = icmp eq %"class.base::Unwinder"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %128
  %138 = bitcast %"class.base::Unwinder"* %135 to void (%"class.base::Unwinder"*)***
  %139 = load void (%"class.base::Unwinder"*)**, void (%"class.base::Unwinder"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %139, i64 1
  %141 = load void (%"class.base::Unwinder"*)*, void (%"class.base::Unwinder"*)** %140, align 8
  call void %141(%"class.base::Unwinder"* nonnull %135) #10
  br label %142

142:                                              ; preds = %137, %128
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %130, i64 1
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %129, i64 1
  %145 = icmp eq %"class.std::__1::unique_ptr.2"* %143, %106
  br i1 %145, label %146, label %128

146:                                              ; preds = %142, %126
  %147 = add i64 %104, %2
  br label %148

148:                                              ; preds = %58, %146, %56
  %149 = phi i64 [ %147, %146 ], [ %57, %56 ], [ 0, %58 ]
  store i64 %149, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind
declare void @_ZN4base5FrameD1Ev(%"struct.base::Frame"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN4base5FrameC1EmPKNS_11ModuleCache6ModuleE(%"struct.base::Frame"*, i64, %"class.base::ModuleCache::Module"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNO4base12OnceCallbackIFNSt3__16vectorINS1_10unique_ptrINS_8UnwinderENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEvEE3RunEv: argument 0"}
!4 = distinct !{!4, !"_ZNO4base12OnceCallbackIFNSt3__16vectorINS1_10unique_ptrINS_8UnwinderENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEvEE3RunEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
