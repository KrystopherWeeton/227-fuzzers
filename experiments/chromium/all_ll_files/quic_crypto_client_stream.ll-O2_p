; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_crypto_client_stream.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_crypto_client_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicCryptoClientStream" = type { %"class.quic::QuicCryptoClientStreamBase", %"class.std::__1::unique_ptr.421" }
%"class.quic::QuicCryptoClientStreamBase" = type { %"class.quic::QuicCryptoStream" }
%"class.quic::QuicCryptoStream" = type { %"class.quic::QuicStream.base", [4 x %"class.quic::QuicIntervalSet"], %"struct.std::__1::array.420" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.410", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr", i64, %"class.quic::QuicIntervalSet" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.2" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.409 }
%union.anon.409 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.410" = type { %"class.absl::optional_internal::optional_data.411" }
%"class.absl::optional_internal::optional_data.411" = type { %"class.absl::optional_internal::optional_data_base.412" }
%"class.absl::optional_internal::optional_data_base.412" = type { %"class.absl::optional_internal::optional_data_dtor_base.413" }
%"class.absl::optional_internal::optional_data_dtor_base.413" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.65", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.39", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.192", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.214", %"class.quiche::QuicheCircularDeque.220", %"class.quiche::QuicheCircularDeque.223", %"class.std::__1::vector.226", %"class.absl::optional.233", %"class.quic::QuicConnectionId", %"class.absl::optional.233", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr.25"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.31"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.39", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.53" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.47", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.47"*, i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::vector.68"* }
%"class.std::__1::vector.68" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.72", %"class.absl::optional.72", %"class.absl::optional.72" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.81", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet.88" }
%"class.quic::QuicIntervalSet.88" = type { %"class.absl::btree_set.89" }
%"class.absl::btree_set.89" = type { %"class.absl::container_internal::btree_set_container.90" }
%"class.absl::container_internal::btree_set_container.90" = type { %"class.absl::container_internal::btree_container.91" }
%"class.absl::container_internal::btree_container.91" = type { %"class.absl::container_internal::btree.92" }
%"class.absl::container_internal::btree.92" = type { %"class.absl::container_internal::CompressedTuple.93", %"class.absl::container_internal::btree_node.100"*, i64 }
%"class.absl::container_internal::CompressedTuple.93" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.94" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.94" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.99" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.99" = type { %"class.absl::container_internal::btree_node.100"* }
%"class.absl::container_internal::btree_node.100" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.102", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.130" }
%"struct.quic::QuicFrame" = type { %union.anon.104 }
%union.anon.104 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.102", %"class.std::__1::vector.102", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.40", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.154", %"class.std::__1::vector.161", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.168", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.135", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.135" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.102", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.138", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.144", %"class.absl::optional.149" }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { i32 }
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.156" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.163" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.168" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.171"*, i64 }
%"struct.std::__1::pair.171" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node.100"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.37, i32 }
%union.anon.37 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.38 }
%union.anon.38 = type { [4 x i32] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.quic::ParsedQuicVersion"* }
%"struct.std::__1::array.39" = type { [16 x i8] }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::vector.182", %"class.std::__1::vector.182", %"class.std::__1::vector.182", %"class.quic::QuicIntervalSet", i64 }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.178", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.178" = type { i8* }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.184" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.39" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.195", %"class.std::__1::vector.203", %"class.std::__1::unique_ptr.175", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"class.std::__1::__compressed_pair.198" }
%"struct.std::__1::pair.197" = type opaque
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::pair.197"* }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::array.121"* }
%"struct.std::__1::array.121" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.220" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.121"*, i64 }
%"class.quiche::QuicheCircularDeque.223" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.121", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.17 }
%union.anon.17 = type { %struct.anon.19 }
%struct.anon.19 = type { i8, i8* }
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.238" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.242" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.248", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.std::__1::array.121"*, %"struct.std::__1::array.121"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.39", i8, i8, i64, i64, %"class.std::__1::unique_ptr.40", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.46 }
%union.anon.46 = type { %"class.quic::RttStats" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.417", %"class.absl::optional.149" }
%"class.quiche::QuicheCircularDeque.417" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"struct.std::__1::array.420" = type { [4 x %"struct.quic::QuicCryptoStream::CryptoSubstream"] }
%"struct.quic::QuicCryptoStream::CryptoSubstream" = type { %"class.quic::QuicStreamSequencer", %"class.quic::QuicStreamSendBuffer" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.quic::QuicCryptoClientStream::HandshakerInterface"* }
%"class.quic::QuicCryptoClientStream::HandshakerInterface" = type { i32 (...)** }
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.302", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.348", %"class.absl::flat_hash_map.357", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.175", %"class.std::__1::vector", %"class.absl::optional.404", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.3" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.5" = type { i64 }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.264", i64 }
%"class.std::__1::deque.264" = type { %"class.std::__1::__deque_base.265" }
%"class.std::__1::__deque_base.265" = type { %"struct.std::__1::__split_buffer.266", i64, %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::__split_buffer.266" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.267" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.276", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.295" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.297" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.std::__1::unique_ptr.304"*, %"class.std::__1::unique_ptr.304"*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.410", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::unique_ptr.304"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.322", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.327", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.315", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::flat_hash_map.333", %"class.absl::flat_hash_map.333" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.315", %"class.std::__1::vector.315" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"struct.std::__1::pair.332" }
%"struct.std::__1::pair.332" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.39" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.39", %"struct.std::__1::array.39", i8 }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { i32*, i32*, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.333" = type { %"class.absl::container_internal::raw_hash_map.334" }
%"class.absl::container_internal::raw_hash_map.334" = type { %"class.absl::container_internal::raw_hash_set.335" }
%"class.absl::container_internal::raw_hash_set.335" = type { i8*, %"union.absl::container_internal::map_slot_type.336"*, i64, i64, %"class.absl::container_internal::CompressedTuple.337" }
%"union.absl::container_internal::map_slot_type.336" = type opaque
%"class.absl::container_internal::CompressedTuple.337" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.338" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.338" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.348" = type { %"class.absl::container_internal::raw_hash_map.349" }
%"class.absl::container_internal::raw_hash_map.349" = type { %"class.absl::container_internal::raw_hash_set.350" }
%"class.absl::container_internal::raw_hash_set.350" = type { i8*, %"union.absl::container_internal::map_slot_type.351"*, i64, i64, %"class.absl::container_internal::CompressedTuple.352" }
%"union.absl::container_internal::map_slot_type.351" = type opaque
%"class.absl::container_internal::CompressedTuple.352" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.353" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.353" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.357" = type { %"class.absl::container_internal::raw_hash_map.358" }
%"class.absl::container_internal::raw_hash_map.358" = type { %"class.absl::container_internal::raw_hash_set.359" }
%"class.absl::container_internal::raw_hash_set.359" = type { i8*, %"union.absl::container_internal::map_slot_type.360"*, i64, i64, %"class.absl::container_internal::CompressedTuple.361" }
%"union.absl::container_internal::map_slot_type.360" = type opaque
%"class.absl::container_internal::CompressedTuple.361" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.367" }
%"class.absl::container_internal::CompressedTuple.367" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.370", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.386" }
%"class.quiche::QuicheCircularDeque.370" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.386" = type { %"class.absl::container_internal::raw_hash_map.387" }
%"class.absl::container_internal::raw_hash_map.387" = type { %"class.absl::container_internal::raw_hash_set.388" }
%"class.absl::container_internal::raw_hash_set.388" = type { i8*, %"union.absl::container_internal::map_slot_type.389"*, i64, i64, %"class.absl::container_internal::CompressedTuple.390" }
%"union.absl::container_internal::map_slot_type.389" = type opaque
%"class.absl::container_internal::CompressedTuple.390" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.391" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.391" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.395", %"class.std::__1::unique_ptr.398" }
%"class.quiche::QuicheCircularDeque.395" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.379" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.371" }
%"class.absl::container_internal::raw_hash_map.371" = type { %"class.absl::container_internal::raw_hash_set.372" }
%"class.absl::container_internal::raw_hash_set.372" = type { i8*, %"struct.std::__1::pair.373"**, i64, i64, %"class.absl::container_internal::CompressedTuple.374" }
%"struct.std::__1::pair.373" = type opaque
%"class.absl::container_internal::CompressedTuple.374" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.375" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.375" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.379" = type { %"class.std::__1::__list_imp.380" }
%"class.std::__1::__list_imp.380" = type { %"struct.std::__1::__list_node_base.381", %"class.std::__1::__compressed_pair.382" }
%"struct.std::__1::__list_node_base.381" = type { %"struct.std::__1::__list_node_base.381"*, %"struct.std::__1::__list_node_base.381"* }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.std::__1::basic_string" }
%"class.quic::ProofVerifyContext" = type { i32 (...)** }
%"class.quic::QuicCryptoClientConfig" = type <{ %"class.quic::QuicCryptoConfig", %"class.std::__1::map", %"class.std::__1::map.441", %"class.std::__1::vector.450", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.quic::QuicCryptoConfig" = type { %"class.std::__1::vector.315", %"class.std::__1::vector.315", %"class.quic::CommonCertSets"* }
%"class.quic::CommonCertSets" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::map.441" = type { %"class.std::__1::__tree.442" }
%"class.std::__1::__tree.442" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::vector.450" = type { %"class.std::__1::__vector_base.451" }
%"class.std::__1::__vector_base.451" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.quic::ProofVerifier"* }
%"class.quic::ProofVerifier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.quic::SessionCache"* }
%"class.quic::SessionCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.quic::ProofSource"* }
%"class.quic::ProofSource" = type { i32 (...)** }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type opaque
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.quic::QuicCryptoClientHandshaker" = type { %"class.quic::QuicCryptoClientStream::HandshakerInterface", %"class.quic::QuicCryptoHandshaker.base", %"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicSession"*, %"class.quic::HandshakerDelegateInterface"*, i32, i32, i32, %"class.quic::QuicCryptoClientConfig"*, %"class.std::__1::basic_string", %"class.quic::QuicServerId", i64, %"class.std::__1::unique_ptr.427", %"class.quic::QuicCryptoClientHandshaker::ProofVerifierCallbackImpl"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*, i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.506", %"class.quic::QuicTime", i32, i8, i8, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicCryptoHandshaker.base" = type <{ %"class.quic::CryptoFramerVisitorInterface", %"class.quic::QuicCryptoStream"*, %"class.quic::QuicSession"*, %"class.quic::CryptoFramer", i32 }>
%"class.quic::CryptoFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::CryptoFramer" = type <{ %"class.quic::CryptoMessageParser", %"class.quic::CryptoFramerVisitorInterface"*, i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8], %"class.quic::CryptoHandshakeMessage", %"class.std::__1::basic_string", i16, [6 x i8], %"class.std::__1::vector.498", i64, i8, [7 x i8] }>
%"class.quic::CryptoMessageParser" = type { i32 (...)** }
%"class.quic::CryptoHandshakeMessage" = type { i32, %"class.std::__1::map.482", i64, %"class.std::__1::unique_ptr.492" }
%"class.std::__1::map.482" = type { %"class.std::__1::__tree.483" }
%"class.std::__1::__tree.483" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.484", %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.quic::QuicData"* }
%"class.quic::QuicData" = type <{ i32 (...)**, i8*, i64, i8, [7 x i8] }>
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { %"struct.std::__1::pair.500"*, %"struct.std::__1::pair.500"*, %"class.std::__1::__compressed_pair.501" }
%"struct.std::__1::pair.500" = type opaque
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.std::__1::pair.500"* }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.quic::ProofVerifyContext"* }
%"class.quic::QuicCryptoClientHandshaker::ProofVerifierCallbackImpl" = type { %"class.quic::ProofVerifierCallback", %"class.quic::QuicCryptoClientHandshaker"* }
%"class.quic::ProofVerifierCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.quic::ProofVerifyDetails"* }
%"class.quic::ProofVerifyDetails" = type { i32 (...)** }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.512 }
%class.scoped_refptr.512 = type { %"struct.quic::QuicCryptoNegotiatedParameters"* }
%"struct.quic::QuicCryptoNegotiatedParameters" = type { %"class.quic::QuicReferenceCounted.base", i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.quic::CrypterPair", %"struct.quic::CrypterPair", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.450", %"class.std::__1::unique_ptr.514", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i16, i16, i16 }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.513" }>
%"class.base::RefCountedThreadSafe.513" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.quic::CrypterPair" = type { %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.quic::SynchronousKeyExchange"* }
%"class.quic::SynchronousKeyExchange" = type opaque
%"class.quic::TlsClientHandshaker" = type { %"class.quic::TlsHandshaker", %"class.quic::QuicCryptoClientStream::HandshakerInterface", %"class.quic::TlsClientConnection::Delegate", %"class.quic::QuicSession"*, %"class.quic::QuicServerId", %"class.quic::ProofVerifier"*, %"class.std::__1::unique_ptr.427", %"class.quic::QuicCryptoClientStream::ProofHandler"*, %"class.quic::SessionCache"*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, i8, %"class.quic::QuicReferenceCountedPointer", i8, i8, i8, %"class.std::__1::unique_ptr.533", %"class.quic::QuicCryptoClientConfig"*, %"class.quic::TlsClientConnection", [2 x %"class.std::__1::unique_ptr.536"], %"class.std::__1::unique_ptr.541", %"class.std::__1::unique_ptr.558" }
%"class.quic::TlsHandshaker" = type { %"class.quic::TlsConnection::Delegate", %"class.quic::CryptoMessageParser", i8, i8, %"class.quic::TlsHandshaker::ProofVerifierCallbackImpl"*, %"class.std::__1::unique_ptr.506", i32, i8, %"class.std::__1::basic_string", i32, i8, %"class.quic::QuicCryptoStream"*, %"class.quic::HandshakerDelegateInterface"*, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.526", %"class.std::__1::vector.526", %"class.std::__1::vector.526", %"class.std::__1::vector.526" }
%"class.quic::TlsConnection::Delegate" = type { i32 (...)** }
%"class.quic::TlsHandshaker::ProofVerifierCallbackImpl" = type { %"class.quic::ProofVerifierCallback", %"class.quic::TlsHandshaker"* }
%"class.std::__1::vector.526" = type { %"class.std::__1::__vector_base.527" }
%"class.std::__1::__vector_base.527" = type { i8*, i8*, %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { i8* }
%"class.quic::TlsClientConnection::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.quic::QuicResumptionState"* }
%"struct.quic::QuicResumptionState" = type { %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.541", %"class.std::__1::unique_ptr.558" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %struct.ssl_session_st* }
%struct.ssl_session_st = type opaque
%"class.quic::TlsClientConnection" = type { %"class.quic::TlsConnection", %"class.quic::TlsClientConnection::Delegate"* }
%"class.quic::TlsConnection" = type { %"class.quic::TlsConnection::Delegate"*, %"class.std::__1::unique_ptr.567" }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %struct.ssl_st* }
%struct.ssl_st = type opaque
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"struct.quic::TransportParameters"* }
%"struct.quic::TransportParameters" = type { i8, i32, %"class.std::__1::vector.315", %"class.absl::optional.233", %"class.quic::TransportParameters::IntegerParameter", %"class.std::__1::vector.526", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", i8, %"class.std::__1::unique_ptr.544", %"class.quic::TransportParameters::IntegerParameter", %"class.absl::optional.233", %"class.absl::optional.233", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.absl::optional.550", %"class.absl::optional.404", i8, %"class.absl::flat_hash_map.333" }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"struct.quic::TransportParameters::PreferredAddress"* }
%"struct.quic::TransportParameters::PreferredAddress" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.std::__1::vector.526" }
%"class.quic::TransportParameters::IntegerParameter" = type <{ i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.absl::optional.550" = type { %"class.absl::optional_internal::optional_data.551" }
%"class.absl::optional_internal::optional_data.551" = type { %"class.absl::optional_internal::optional_data_base.552" }
%"class.absl::optional_internal::optional_data_base.552" = type { %"class.absl::optional_internal::optional_data_dtor_base.553" }
%"class.absl::optional_internal::optional_data_dtor_base.553" = type { i8, %union.anon.554 }
%union.anon.554 = type { %"class.std::__1::vector.315" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::vector.526"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"struct.quic::QuicWindowUpdateFrame" = type { i32, i32, i64 }
%"class.quic::QuicReferenceCountedPointer.575" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK4quic10QuicStream2idEv = comdat any

$_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv = comdat any

$_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE = comdat any

$_ZN4quic10QuicStream17OnCanWriteNewDataEv = comdat any

$_ZN4quic22QuicCryptoClientStream17OnPacketDecryptedENS_15EncryptionLevelE = comdat any

$_ZN4quic26QuicCryptoClientStreamBaseD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4quic26QuicCryptoClientStreamBaseE = comdat any

@_ZN4quic22QuicCryptoClientStream16kMaxClientHellosE = hidden local_unnamed_addr constant i32 4, align 4
@_ZTVN4quic26QuicCryptoClientStreamBaseE = linkonce_odr hidden unnamed_addr constant { [58 x i8*] } { [58 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicCryptoStream"*)* @_ZN4quic16QuicCryptoStreamD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStreamBase"*)* @_ZN4quic26QuicCryptoClientStreamBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*)* @_ZN4quic16QuicCryptoStream15OnDataAvailableEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream9OnFinReadEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64)* @_ZN4quic10QuicStream16AddBytesConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32)* @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream2idEv to i8*), i8* bitcast (void (%"struct.quic::ParsedQuicVersion"*, %"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream7versionEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, %"struct.quic::QuicStreamFrame"*)* @_ZN4quic16QuicCryptoStream13OnStreamFrameERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream10OnCanWriteEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN4quic16QuicCryptoStream13OnStreamResetERKNS_18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i32)* @_ZN4quic10QuicStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"*)* @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream11StopReadingEv to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i64, i64, i1, i64, i64, i64*)* @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream17OnStreamFrameLostEmmb to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoStream"*, i64, i64, i1, i8)* @_ZN4quic16QuicCryptoStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream24HasPendingRetransmissionEv to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i32)* @_ZN4quic10QuicStream13OnStopSendingENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer.575"*)* @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream7OnCloseEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream17OnCanWriteNewDataEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, i64)* @_ZN4quic16QuicCryptoStream20OnStreamDataConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*)* @_ZN4quic16QuicCryptoStream26WritePendingRetransmissionEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream16OnDeadlinePassedEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream14CloseWriteSideEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, i8, i8*, i64)* @_ZN4quic16QuicCryptoStream15WriteCryptoDataENS_15EncryptionLevelEN4absl11string_viewE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.quic::QuicCryptoStream"*, i8)* @_ZNK4quic16QuicCryptoStream23BufferSizeLimitForLevelENS_15EncryptionLevelE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoStream"*)* @_ZNK4quic16QuicCryptoStream30HasPendingCryptoRetransmissionEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN4quic22QuicCryptoClientStreamE = hidden unnamed_addr constant { [58 x i8*] } { [58 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStreamD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStreamD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*)* @_ZN4quic16QuicCryptoStream15OnDataAvailableEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream9OnFinReadEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64)* @_ZN4quic10QuicStream16AddBytesConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32)* @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream2idEv to i8*), i8* bitcast (void (%"struct.quic::ParsedQuicVersion"*, %"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream7versionEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, %"struct.quic::QuicStreamFrame"*)* @_ZN4quic16QuicCryptoStream13OnStreamFrameERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream10OnCanWriteEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN4quic16QuicCryptoStream13OnStreamResetERKNS_18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*, i32, i32)* @_ZN4quic22QuicCryptoClientStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"*)* @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream11StopReadingEv to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i64, i64, i1, i64, i64, i64*)* @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream17OnStreamFrameLostEmmb to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoStream"*, i64, i64, i1, i8)* @_ZN4quic16QuicCryptoStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream24HasPendingRetransmissionEv to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i32)* @_ZN4quic10QuicStream13OnStopSendingENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer.575"*)* @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream7OnCloseEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream17OnCanWriteNewDataEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, i64)* @_ZN4quic16QuicCryptoStream20OnStreamDataConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*)* @_ZN4quic16QuicCryptoStream26WritePendingRetransmissionEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream16OnDeadlinePassedEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream14CloseWriteSideEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoStream"*, i8, i8*, i64)* @_ZN4quic16QuicCryptoStream15WriteCryptoDataENS_15EncryptionLevelEN4absl11string_viewE to i8*), i8* bitcast (i32 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream15EarlyDataReasonEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream22encryption_establishedEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream22one_rtt_keys_availableEv to i8*), i8* bitcast (%"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream24crypto_negotiated_paramsEv to i8*), i8* bitcast (%"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream21crypto_message_parserEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*, i8)* @_ZN4quic22QuicCryptoClientStream17OnPacketDecryptedENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream26OnOneRttPacketAcknowledgedEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream21OnHandshakePacketSentEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream23OnHandshakeDoneReceivedEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*, i8*, i64)* @_ZN4quic22QuicCryptoClientStream18OnNewTokenReceivedEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream15GetAddressTokenEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*, i8*, i64)* @_ZNK4quic22QuicCryptoClientStream20ValidateAddressTokenEN4absl11string_viewE to i8*), i8* bitcast (i32 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream17GetHandshakeStateEv to i8*), i8* bitcast (void (%"class.quic::QuicCryptoClientStream"*, %"class.std::__1::vector.526"*)* @_ZN4quic22QuicCryptoClientStream38SetServerApplicationStateForResumptionENSt3__110unique_ptrINS1_6vectorIhNS1_9allocatorIhEEEENS1_14default_deleteIS6_EEEE to i8*), i8* bitcast (i64 (%"class.quic::QuicCryptoClientStream"*, i8)* @_ZNK4quic22QuicCryptoClientStream23BufferSizeLimitForLevelENS_15EncryptionLevelE to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream25KeyUpdateSupportedLocallyEv to i8*), i8* bitcast (%"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream42AdvanceKeysAndCreateCurrentOneRttDecrypterEv to i8*), i8* bitcast (%"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream28CreateCurrentOneRttEncrypterEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoStream"*)* @_ZNK4quic16QuicCryptoStream30HasPendingCryptoRetransmissionEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStream13CryptoConnectEv to i8*), i8* bitcast (i32 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream22num_sent_client_hellosEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream12IsResumptionEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream17EarlyDataAcceptedEv to i8*), i8* bitcast (i1 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream22ReceivedInchoateRejectEv to i8*), i8* bitcast (i32 (%"class.quic::QuicCryptoClientStream"*)* @_ZNK4quic22QuicCryptoClientStream26num_scup_messages_receivedEv to i8*)] }, align 8
@.str = private unnamed_addr constant [72 x i8] c"../../net/third_party/quiche/src/quic/core/quic_crypto_client_stream.cc\00", align 1
@.str.1 = private unnamed_addr constant [75 x i8] c"Attempting to create QuicCryptoClientStream for unknown handshake protocol\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic22QuicCryptoClientStreamC1ERKNS_12QuicServerIdEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS6_14default_deleteIS8_EEEEPNS_22QuicCryptoClientConfigEPNS0_12ProofHandlerEb = hidden unnamed_addr alias void (%"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicServerId"*, %"class.quic::QuicSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*, i1), void (%"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicServerId"*, %"class.quic::QuicSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*, i1)* @_ZN4quic22QuicCryptoClientStreamC2ERKNS_12QuicServerIdEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS6_14default_deleteIS8_EEEEPNS_22QuicCryptoClientConfigEPNS0_12ProofHandlerEb
@_ZN4quic22QuicCryptoClientStreamD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicCryptoClientStream"*), void (%"class.quic::QuicCryptoClientStream"*)* @_ZN4quic22QuicCryptoClientStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QuicCryptoClientStreamBaseC2EPNS_11QuicSessionE(%"class.quic::QuicCryptoClientStreamBase"*, %"class.quic::QuicSession"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCryptoClientStreamBase", %"class.quic::QuicCryptoClientStreamBase"* %0, i64 0, i32 0
  tail call void @_ZN4quic16QuicCryptoStreamC2EPNS_11QuicSessionE(%"class.quic::QuicCryptoStream"* %3, %"class.quic::QuicSession"* %1) #8
  %4 = getelementptr inbounds %"class.quic::QuicCryptoClientStreamBase", %"class.quic::QuicCryptoClientStreamBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [58 x i8*] }, { [58 x i8*] }* @_ZTVN4quic26QuicCryptoClientStreamBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN4quic16QuicCryptoStreamC2EPNS_11QuicSessionE(%"class.quic::QuicCryptoStream"*, %"class.quic::QuicSession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStreamC2ERKNS_12QuicServerIdEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS6_14default_deleteIS8_EEEEPNS_22QuicCryptoClientConfigEPNS0_12ProofHandlerEb(%"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicServerId"* dereferenceable(32), %"class.quic::QuicSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4quic16QuicCryptoStreamC2EPNS_11QuicSessionE(%"class.quic::QuicCryptoStream"* %9, %"class.quic::QuicSession"* %2) #8
  %10 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [58 x i8*] }, { [58 x i8*] }* @_ZTVN4quic22QuicCryptoClientStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.421"* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %2, i64 0, i32 8
  %14 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %13, align 8
  %15 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %14, i64 0, i32 8, i32 8, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !2
  switch i32 %16, label %49 [
    i32 1, label %17
    i32 2, label %29
    i32 0, label %42
  ]

17:                                               ; preds = %7
  %18 = tail call i8* @_Znwm(i64 416) #9
  %19 = bitcast i8* %18 to %"class.quic::QuicCryptoClientHandshaker"*
  tail call void @_ZN4quic26QuicCryptoClientHandshakerC1ERKNS_12QuicServerIdEPNS_22QuicCryptoClientStreamEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS8_14default_deleteISA_EEEEPNS_22QuicCryptoClientConfigEPNS4_12ProofHandlerE(%"class.quic::QuicCryptoClientHandshaker"* nonnull %19, %"class.quic::QuicServerId"* dereferenceable(32) %1, %"class.quic::QuicCryptoClientStream"* %0, %"class.quic::QuicSession"* %2, %"class.quic::ProofVerifyContext"* %3, %"class.quic::QuicCryptoClientConfig"* %4, %"class.quic::QuicCryptoClientStream::ProofHandler"* %5) #8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %11, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.421"* %11 to i8**
  store i8* %18, i8** %22, align 8
  %23 = icmp eq %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %21, null
  br i1 %23, label %56, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %21 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %26 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %26, i64 1
  %28 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %27, align 8
  tail call void %28(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* nonnull %21) #8
  br label %56

29:                                               ; preds = %7
  %30 = tail call i8* @_Znwm(i64 456) #9
  %31 = bitcast i8* %30 to %"class.quic::TlsClientHandshaker"*
  tail call void @_ZN4quic19TlsClientHandshakerC1ERKNS_12QuicServerIdEPNS_16QuicCryptoStreamEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS8_14default_deleteISA_EEEEPNS_22QuicCryptoClientConfigEPNS_22QuicCryptoClientStream12ProofHandlerEb(%"class.quic::TlsClientHandshaker"* nonnull %31, %"class.quic::QuicServerId"* dereferenceable(32) %1, %"class.quic::QuicCryptoStream"* %9, %"class.quic::QuicSession"* %2, %"class.quic::ProofVerifyContext"* %3, %"class.quic::QuicCryptoClientConfig"* %4, %"class.quic::QuicCryptoClientStream::ProofHandler"* %5, i1 zeroext %6) #8
  %32 = getelementptr inbounds i8, i8* %30, i64 224
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %11, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.421"* %11 to i8**
  store i8* %32, i8** %35, align 8
  %36 = icmp eq %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %34, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %34 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %39 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %39, i64 1
  %41 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %40, align 8
  tail call void %41(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* nonnull %34) #8
  br label %56

42:                                               ; preds = %7
  %43 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %45) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i32 52, i32 2) #8
  %46 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_ostringstream"* %46 to %"class.std::__1::basic_ostream"*
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i64 74) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %45) #8
  br label %49

49:                                               ; preds = %44, %42, %7
  %50 = icmp eq %"class.quic::ProofVerifyContext"* %3, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.quic::ProofVerifyContext"* %3 to void (%"class.quic::ProofVerifyContext"*)***
  %53 = load void (%"class.quic::ProofVerifyContext"*)**, void (%"class.quic::ProofVerifyContext"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.quic::ProofVerifyContext"*)*, void (%"class.quic::ProofVerifyContext"*)** %53, i64 1
  %55 = load void (%"class.quic::ProofVerifyContext"*)*, void (%"class.quic::ProofVerifyContext"*)** %54, align 8
  call void %55(%"class.quic::ProofVerifyContext"* nonnull %3) #8
  br label %56

56:                                               ; preds = %29, %37, %17, %24, %49, %51
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStreamD2Ev(%"class.quic::QuicCryptoClientStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [58 x i8*] }, { [58 x i8*] }* @_ZTVN4quic22QuicCryptoClientStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  store %"class.quic::QuicCryptoClientStream::HandshakerInterface"* null, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  %5 = icmp eq %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %8 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %8, i64 1
  %10 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %9, align 8
  tail call void %10(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4quic16QuicCryptoStreamD2Ev(%"class.quic::QuicCryptoStream"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStreamD0Ev(%"class.quic::QuicCryptoClientStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [58 x i8*] }, { [58 x i8*] }* @_ZTVN4quic22QuicCryptoClientStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  store %"class.quic::QuicCryptoClientStream::HandshakerInterface"* null, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  %5 = icmp eq %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %8 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %8, i64 1
  %10 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %9, align 8
  tail call void %10(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4quic16QuicCryptoStreamD2Ev(%"class.quic::QuicCryptoStream"* %12) #8
  %13 = bitcast %"class.quic::QuicCryptoClientStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic22QuicCryptoClientStream13CryptoConnectEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 2
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic22QuicCryptoClientStream22num_sent_client_hellosEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 3
  %7 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call i32 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream12IsResumptionEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 4
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream17EarlyDataAcceptedEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 5
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic22QuicCryptoClientStream15EarlyDataReasonEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 6
  %7 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call i32 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream22ReceivedInchoateRejectEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 7
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic22QuicCryptoClientStream26num_scup_messages_receivedEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 8
  %7 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call i32 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream22encryption_establishedEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 10
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream22one_rtt_keys_availableEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 11
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(368) %"struct.quic::QuicCryptoNegotiatedParameters"* @_ZNK4quic22QuicCryptoClientStream24crypto_negotiated_paramsEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 12
  %7 = load %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"struct.quic::QuicCryptoNegotiatedParameters"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call dereferenceable(368) %"struct.quic::QuicCryptoNegotiatedParameters"* %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret %"struct.quic::QuicCryptoNegotiatedParameters"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::CryptoMessageParser"* @_ZN4quic22QuicCryptoClientStream21crypto_message_parserEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 13
  %7 = load %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"class.quic::CryptoMessageParser"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call %"class.quic::CryptoMessageParser"* %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret %"class.quic::CryptoMessageParser"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic22QuicCryptoClientStream17GetHandshakeStateEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 18
  %7 = load i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i32 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call i32 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic22QuicCryptoClientStream23BufferSizeLimitForLevelENS_15EncryptionLevelE(%"class.quic::QuicCryptoClientStream"* nocapture readonly, i8 signext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  %5 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4 to i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)***
  %6 = load i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)**, i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)*, i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)** %6, i64 14
  %8 = load i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)*, i64 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8)** %7, align 8
  %9 = tail call i64 %8(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4, i8 signext %1) #8
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream25KeyUpdateSupportedLocallyEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 15
  %7 = load i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, i1 (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicDecrypter"* @_ZN4quic22QuicCryptoClientStream42AdvanceKeysAndCreateCurrentOneRttDecrypterEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 16
  %7 = load %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"class.quic::QuicDecrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call %"class.quic::QuicDecrypter"* %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret %"class.quic::QuicDecrypter"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicEncrypter"* @_ZN4quic22QuicCryptoClientStream28CreateCurrentOneRttEncrypterEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 17
  %7 = load %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, %"class.quic::QuicEncrypter"* (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  %8 = tail call %"class.quic::QuicEncrypter"* %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret %"class.quic::QuicEncrypter"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic22QuicCryptoClientStream9chlo_hashEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QuicCryptoClientStream"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  %5 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4 to void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %6 = load void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, i64 9
  %8 = load void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.std::__1::basic_string"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %7, align 8
  tail call void %8(%"class.std::__1::basic_string"* sret %0, %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStream26OnOneRttPacketAcknowledgedEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 19
  %7 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  tail call void %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStream21OnHandshakePacketSentEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 20
  %7 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  tail call void %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE(%"class.quic::QuicCryptoClientStream"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %4, align 8
  %6 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %5 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)***
  %7 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)** %7, i64 21
  %9 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i32, i32)** %8, align 8
  tail call void %9(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %5, i32 %1, i32 %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStream23OnHandshakeDoneReceivedEv(%"class.quic::QuicCryptoClientStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %2, align 8
  %4 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)***
  %5 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %5, i64 22
  %7 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*)** %6, align 8
  tail call void %7(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStream18OnNewTokenReceivedEN4absl11string_viewE(%"class.quic::QuicCryptoClientStream"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %4, align 8
  %6 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %5 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)***
  %7 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)** %7, i64 23
  %9 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, i8*, i64)** %8, align 8
  tail call void %9(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %5, i8* %1, i64 %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic22QuicCryptoClientStream15GetAddressTokenEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QuicCryptoClientStream"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 0, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK4quic22QuicCryptoClientStream20ValidateAddressTokenEN4absl11string_viewE(%"class.quic::QuicCryptoClientStream"* nocapture readnone, i8* nocapture readnone, i64) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic22QuicCryptoClientStream38SetServerApplicationStateForResumptionENSt3__110unique_ptrINS1_6vectorIhNS1_9allocatorIhEEEENS1_14default_deleteIS6_EEEE(%"class.quic::QuicCryptoClientStream"* nocapture readonly, %"class.std::__1::vector.526"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicCryptoClientStream", %"class.quic::QuicCryptoClientStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.quic::QuicCryptoClientStream::HandshakerInterface"** %3, align 8
  %5 = bitcast %"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4 to void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)***
  %6 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)**, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)** %6, i64 24
  %8 = load void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)*, void (%"class.quic::QuicCryptoClientStream::HandshakerInterface"*, %"class.std::__1::vector.526"*)** %7, align 8
  tail call void %8(%"class.quic::QuicCryptoClientStream::HandshakerInterface"* %4, %"class.std::__1::vector.526"* %1) #8
  ret void
}

declare void @_ZN4quic16QuicCryptoStream15OnDataAvailableEv(%"class.quic::QuicCryptoStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream9OnFinReadEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream16AddBytesConsumedEm(%"class.quic::QuicStream"*, i64) unnamed_addr #1

declare void @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicStream"*, i32) unnamed_addr #1

declare void @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4quic10QuicStream2idEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStream", %"class.quic::QuicStream"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZNK4quic10QuicStream7versionEv(%"struct.quic::ParsedQuicVersion"* sret, %"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic16QuicCryptoStream13OnStreamFrameERKNS_15QuicStreamFrameE(%"class.quic::QuicCryptoStream"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic10QuicStream10OnCanWriteEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic16QuicCryptoStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicCryptoStream"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE(%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic10QuicStream11StopReadingEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm(%"class.quic::QuicStream"*, i64, i64, i1 zeroext, i64, i64, i64*) unnamed_addr #1

declare void @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb(%"class.quic::QuicStream"*, i64, i64, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic10QuicStream17OnStreamFrameLostEmmb(%"class.quic::QuicStream"*, i64, i64, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN4quic16QuicCryptoStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE(%"class.quic::QuicCryptoStream"*, i64, i64, i1 zeroext, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZNK4quic10QuicStream24HasPendingRetransmissionEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream13OnStopSendingENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicStream"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer.575"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream7OnCloseEv(%"class.quic::QuicStream"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream17OnCanWriteNewDataEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic16QuicCryptoStream20OnStreamDataConsumedEm(%"class.quic::QuicCryptoStream"*, i64) unnamed_addr #1

declare void @_ZN4quic16QuicCryptoStream26WritePendingRetransmissionEv(%"class.quic::QuicCryptoStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream16OnDeadlinePassedEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream14CloseWriteSideEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic16QuicCryptoStream15WriteCryptoDataENS_15EncryptionLevelEN4absl11string_viewE(%"class.quic::QuicCryptoStream"*, i8 signext, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic22QuicCryptoClientStream17OnPacketDecryptedENS_15EncryptionLevelE(%"class.quic::QuicCryptoClientStream"*, i8 signext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK4quic16QuicCryptoStream30HasPendingCryptoRetransmissionEv(%"class.quic::QuicCryptoStream"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic16QuicCryptoStreamD2Ev(%"class.quic::QuicCryptoStream"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic26QuicCryptoClientStreamBaseD0Ev(%"class.quic::QuicCryptoClientStreamBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @_ZN4quic10QuicStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE(%"class.quic::QuicStream"*, i32, i32) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare i64 @_ZNK4quic16QuicCryptoStream23BufferSizeLimitForLevelENS_15EncryptionLevelE(%"class.quic::QuicCryptoStream"*, i8 signext) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4quic26QuicCryptoClientHandshakerC1ERKNS_12QuicServerIdEPNS_22QuicCryptoClientStreamEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS8_14default_deleteISA_EEEEPNS_22QuicCryptoClientConfigEPNS4_12ProofHandlerE(%"class.quic::QuicCryptoClientHandshaker"*, %"class.quic::QuicServerId"* dereferenceable(32), %"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*) unnamed_addr #1

declare void @_ZN4quic19TlsClientHandshakerC1ERKNS_12QuicServerIdEPNS_16QuicCryptoStreamEPNS_11QuicSessionENSt3__110unique_ptrINS_18ProofVerifyContextENS8_14default_deleteISA_EEEEPNS_22QuicCryptoClientConfigEPNS_22QuicCryptoClientStream12ProofHandlerEb(%"class.quic::TlsClientHandshaker"*, %"class.quic::QuicServerId"* dereferenceable(32), %"class.quic::QuicCryptoStream"*, %"class.quic::QuicSession"*, %"class.quic::ProofVerifyContext"*, %"class.quic::QuicCryptoClientConfig"*, %"class.quic::QuicCryptoClientStream::ProofHandler"*, i1 zeroext) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4quic10QuicFramer7versionEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4quic10QuicFramer7versionEv"}
!5 = distinct !{!5, !6, !"_ZNK4quic14QuicConnection7versionEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4quic14QuicConnection7versionEv"}
!7 = !{i8 0, i8 2}
