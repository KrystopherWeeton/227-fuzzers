; ModuleID = '../../components/variations/variations_crash_keys.cc'
source_filename = "../../components/variations/variations_crash_keys.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.variations::(anonymous namespace)::VariationsCrashKeys" = type { %"class.base::FieldTrialList::Observer", %class.scoped_refptr, %"class.std::__1::basic_string", i64, %"class.std::__1::basic_string", i64 }
%"class.base::FieldTrialList::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.crash_reporter::internal::CrashKeyStringImpl" = type { i8*, i64*, i64 }
%"class.crashpad::Annotation" = type <{ %"struct.std::__1::atomic.14", i8*, i8*, i32, i16, [2 x i8] }>
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { %"class.crashpad::Annotation"* }
%"struct.crash_reporter::internal::InitializedArrayImpl" = type { [1 x i64] }
%"struct.crash_reporter::internal::InitializedArrayImpl.20" = type { [33 x i64] }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"*, %"class.std::__1::__compressed_pair.9" }
%"struct.base::FieldTrial::ActiveGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.base::FieldTrial::ActiveGroup"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"*, %"class.std::__1::__compressed_pair.2" }
%"struct.variations::SyntheticTrialGroup" = type <{ %"struct.variations::ActiveGroupId", %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.variations::ActiveGroupId" = type { i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.variations::SyntheticTrialGroup"* }
%"struct.variations::ExperimentListInfo" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::allocator" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZN10variations18kNumExperimentsKeyE = hidden constant [16 x i8] c"num-experiments\00", align 16
@_ZN10variations18kExperimentListKeyE = hidden constant [11 x i8] c"variations\00", align 1
@_ZN10variations12_GLOBAL__N_123g_variations_crash_keysE = internal unnamed_addr global %"class.variations::(anonymous namespace)::VariationsCrashKeys"* null, align 8
@_ZTVN10variations12_GLOBAL__N_119VariationsCrashKeysE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys26OnFieldTrialGroupFinalizedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ to i8*), i8* bitcast (void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)* @_ZN10variations12_GLOBAL__N_119VariationsCrashKeysD2Ev to i8*), i8* bitcast (void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)* @_ZN10variations12_GLOBAL__N_119VariationsCrashKeysD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"%x-%x,\00", align 1
@_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE = internal global { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } } { %"class.crash_reporter::internal::CrashKeyStringImpl"* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE to i8*), i64 16) to %"class.crash_reporter::internal::CrashKeyStringImpl"*), %"class.crashpad::Annotation"* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE to i8*), i64 48) to %"class.crashpad::Annotation"*), { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10variations18kNumExperimentsKeyE, i32 0, i32 0), i64* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE to i8*), i64 40) to i64*), i64 1, %"struct.crash_reporter::internal::InitializedArrayImpl" { [1 x i64] [i64 200] } }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } { { { %"class.crashpad::Annotation"* } } zeroinitializer, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10variations18kNumExperimentsKeyE, i32 0, i32 0), i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE to i8*), i64 78), i32 0, i16 1, [8 x i8] zeroinitializer } }, align 8
@_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE = internal global { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } } { %"class.crash_reporter::internal::CrashKeyStringImpl"* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE to i8*), i64 16) to %"class.crash_reporter::internal::CrashKeyStringImpl"*), %"class.crashpad::Annotation"* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE to i8*), i64 304) to %"class.crashpad::Annotation"*), { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10variations18kExperimentListKeyE, i32 0, i32 0), i64* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE to i8*), i64 40) to i64*), i64 33, %"struct.crash_reporter::internal::InitializedArrayImpl.20" { [33 x i64] [i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200] } }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } { { { %"class.crashpad::Annotation"* } } zeroinitializer, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10variations18kExperimentListKeyE, i32 0, i32 0), i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE to i8*), i64 334), i32 0, i16 1, [4096 x i8] zeroinitializer } }, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"OnFieldTrialGroupFinalized\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"../../components/variations/variations_crash_keys.cc\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations13InitCrashKeysEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::vector.7", align 8
  %2 = tail call i8* @_Znwm(i64 80) #7
  %3 = bitcast i8* %2 to %"class.variations::(anonymous namespace)::VariationsCrashKeys"*
  %4 = bitcast i8* %2 to %"class.base::FieldTrialList::Observer"*
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations12_GLOBAL__N_119VariationsCrashKeysE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %"class.base::SequencedTaskRunner"**
  %8 = bitcast %"class.std::__1::vector.7"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %1, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %1, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #8
  call void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.7"* nonnull %1) #8
  %11 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %9, align 8
  %12 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %10, align 8
  %13 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %11, %12
  br i1 %13, label %14, label %69

14:                                               ; preds = %69, %0
  call fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys15UpdateCrashKeysEv(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* nonnull %3) #8
  %15 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SequencedTaskRunner"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %17, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %19, %14
  %23 = ptrtoint %"class.base::SequencedTaskRunner"* %17 to i64
  %24 = bitcast i8* %6 to i64*
  %25 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %7, align 8
  store i64 %23, i64* %24, align 8
  %26 = icmp eq %"class.base::SequencedTaskRunner"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %25, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #8
  br label %35

35:                                               ; preds = %32, %27, %22
  %36 = call zeroext i1 @_ZN4base14FieldTrialList11AddObserverEPNS0_8ObserverE(%"class.base::FieldTrialList::Observer"* nonnull %4) #8
  %37 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %9, align 8
  %38 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %37, null
  br i1 %38, label %75, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %37 to i8*
  %41 = load %"struct.base::FieldTrial::ActiveGroup"*, %"struct.base::FieldTrial::ActiveGroup"** %10, align 8
  %42 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %41, %37
  br i1 %42, label %67, label %43

43:                                               ; preds = %39, %62
  %44 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %45, %62 ], [ %41, %39 ]
  %45 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %44, i64 -1
  %46 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %44, i64 -1, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #7
  br label %54

54:                                               ; preds = %51, %43
  %55 = bitcast %"struct.base::FieldTrial::ActiveGroup"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #7
  br label %62

62:                                               ; preds = %59, %54
  %63 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %45, %37
  br i1 %63, label %64, label %43

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::vector.7"* %1 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %39
  %68 = phi i8* [ %66, %64 ], [ %40, %39 ]
  store %"struct.base::FieldTrial::ActiveGroup"* %37, %"struct.base::FieldTrial::ActiveGroup"** %10, align 8
  call void @_ZdlPv(i8* %68) #7
  br label %75

69:                                               ; preds = %0, %69
  %70 = phi %"struct.base::FieldTrial::ActiveGroup"* [ %73, %69 ], [ %11, %0 ]
  %71 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %70, i64 0, i32 1
  call fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys16AppendFieldTrialERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %71, %"class.std::__1::basic_string"* dereferenceable(24) %72) #8
  %73 = getelementptr inbounds %"struct.base::FieldTrial::ActiveGroup", %"struct.base::FieldTrial::ActiveGroup"* %70, i64 1
  %74 = icmp eq %"struct.base::FieldTrial::ActiveGroup"* %73, %12
  br i1 %74, label %14, label %69

75:                                               ; preds = %35, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  store i8* %2, i8** bitcast (%"class.variations::(anonymous namespace)::VariationsCrashKeys"** @_ZN10variations12_GLOBAL__N_123g_variations_crash_keysE to i8**), align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations34UpdateCrashKeysWithSyntheticTrialsERKNSt3__16vectorINS_19SyntheticTrialGroupENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = load %"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.variations::(anonymous namespace)::VariationsCrashKeys"** @_ZN10variations12_GLOBAL__N_123g_variations_crash_keysE, align 8
  %4 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %3, i64 0, i32 4
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  store i8 0, i8* %14, align 1
  store i8 0, i8* %6, align 1
  br label %15

15:                                               ; preds = %13, %9
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %17 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %18, align 8
  %20 = icmp eq %"struct.variations::SyntheticTrialGroup"* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = ptrtoint %"struct.variations::SyntheticTrialGroup"* %17 to i64
  br label %55

23:                                               ; preds = %15
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %34

29:                                               ; preds = %52
  %30 = bitcast %"struct.variations::SyntheticTrialGroup"** %18 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  br label %55

34:                                               ; preds = %52, %23
  %35 = phi %"struct.variations::SyntheticTrialGroup"* [ %17, %23 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %36 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4, !noalias !2
  %38 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %35, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 4, !noalias !2
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %37, i32 %39) #8
  %40 = load i8, i8* %26, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i8*, i8** %27, align 8
  %43 = load i64, i64* %28, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i8* %42, i8* %24
  %46 = select i1 %41, i64 %43, i64 %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %45, i64 %46) #8
  %48 = load i8, i8* %26, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %34
  %51 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %51) #7
  br label %52

52:                                               ; preds = %50, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  %53 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %35, i64 1
  %54 = icmp eq %"struct.variations::SyntheticTrialGroup"* %53, %19
  br i1 %54, label %29, label %34

55:                                               ; preds = %21, %29
  %56 = phi i64 [ %33, %29 ], [ %22, %21 ]
  %57 = phi i64 [ %31, %29 ], [ %22, %21 ]
  %58 = sub i64 %57, %56
  %59 = sdiv exact i64 %58, 24
  %60 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %3, i64 0, i32 5
  store i64 %59, i64* %60, align 8
  call fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys15UpdateCrashKeysEv(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations32ClearCrashKeysInstanceForTestingEv() local_unnamed_addr #0 {
  %1 = load %"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.variations::(anonymous namespace)::VariationsCrashKeys"** @_ZN10variations12_GLOBAL__N_123g_variations_crash_keysE, align 8
  %2 = icmp eq %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %1 to void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)***
  %5 = load void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)**, void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)*, void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)** %5, i64 2
  %7 = load void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)*, void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*)** %6, align 8
  tail call void %7(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* nonnull %1) #8
  br label %8

8:                                                ; preds = %3, %0
  store %"class.variations::(anonymous namespace)::VariationsCrashKeys"* null, %"class.variations::(anonymous namespace)::VariationsCrashKeys"** @_ZN10variations12_GLOBAL__N_123g_variations_crash_keysE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations21GetExperimentListInfoEv(%"struct.variations::ExperimentListInfo"* noalias sret) local_unnamed_addr #0 {
  %2 = load %"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.variations::(anonymous namespace)::VariationsCrashKeys"** @_ZN10variations12_GLOBAL__N_123g_variations_crash_keysE, align 8
  %3 = bitcast %"struct.variations::ExperimentListInfo"* %0 to i64*
  store i64 -6148914691236517206, i64* %3, align 8, !alias.scope !5
  %4 = getelementptr inbounds %"struct.variations::ExperimentListInfo", %"struct.variations::ExperimentListInfo"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.variations::ExperimentListInfo", %"struct.variations::ExperimentListInfo"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8, !alias.scope !5
  %7 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 3
  %8 = load i64, i64* %7, align 8, !noalias !5
  %9 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 5
  %10 = load i64, i64* %9, align 8, !noalias !5
  %11 = add i64 %10, %8
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %4, align 8, !alias.scope !5
  %13 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !5
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !5
  br label %23

21:                                               ; preds = %1
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 4
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1, !noalias !5
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !noalias !5
  br label %35

33:                                               ; preds = %23
  %34 = zext i8 %28 to i64
  br label %35

35:                                               ; preds = %30, %33
  %36 = phi i64 [ %32, %30 ], [ %34, %33 ]
  %37 = add i64 %36, %24
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %5, i64 %37) #8
  %38 = load i8, i8* %15, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %45 = zext i8 %38 to i64
  %46 = select i1 %39, i8* %41, i8* %44
  %47 = select i1 %39, i64 %43, i64 %45
  %48 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %5, i8* %46, i64 %47) #8
  %49 = load i8, i8* %27, align 1, !noalias !5
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8, !noalias !5
  %53 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !5
  %55 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %56 = zext i8 %49 to i64
  %57 = select i1 %50, i8* %52, i8* %55
  %58 = select i1 %50, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %5, i8* %57, i64 %58) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base14FieldTrialList25GetActiveFieldTrialGroupsEPNSt3__16vectorINS_10FieldTrial11ActiveGroupENS1_9allocatorIS4_EEEE(%"class.std::__1::vector.7"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys16AppendFieldTrialERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %19 to i64
  %28 = select i1 %20, i64 %26, i64 %27
  %29 = tail call i64 @_ZN10variations17MakeActiveGroupIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %12, i64 %16, i8* %24, i64 %28) #8
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %30, i32 %32) #8
  %37 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i8*, i8** %34, align 8
  %43 = load i64, i64* %35, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i8* %42, i8* %33
  %46 = select i1 %41, i64 %43, i64 %44
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %37, i8* %45, i64 %46) #8
  %48 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = load i8, i8* %39, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %3
  %54 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %54) #7
  br label %55

55:                                               ; preds = %3, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys15UpdateCrashKeysEv(%"class.variations::(anonymous namespace)::VariationsCrashKeys"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.variations::ExperimentListInfo", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"struct.variations::ExperimentListInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.variations::ExperimentListInfo", %"struct.variations::ExperimentListInfo"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.variations::ExperimentListInfo", %"struct.variations::ExperimentListInfo"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %9 = bitcast %"struct.variations::ExperimentListInfo"* %2 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8, !alias.scope !8
  %10 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8, !noalias !8
  %12 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 5
  %13 = load i64, i64* %12, align 8, !noalias !8
  %14 = add i64 %13, %11
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8, !alias.scope !8
  %16 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !8
  br label %26

24:                                               ; preds = %1
  %25 = zext i8 %19 to i64
  br label %26

26:                                               ; preds = %24, %21
  %27 = phi i64 [ %23, %21 ], [ %25, %24 ]
  %28 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 4
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1, !noalias !8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !8
  br label %38

36:                                               ; preds = %26
  %37 = zext i8 %31 to i64
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i64 [ %35, %33 ], [ %37, %36 ]
  %40 = add i64 %39, %27
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %7, i64 %40) #8
  %41 = load i8, i8* %18, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %48 = zext i8 %41 to i64
  %49 = select i1 %42, i8* %44, i8* %47
  %50 = select i1 %42, i64 %46, i64 %48
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %7, i8* %49, i64 %50) #8
  %52 = load i8, i8* %30, align 1, !noalias !8
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8, !noalias !8
  %56 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8, !noalias !8
  %58 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %59 = zext i8 %52 to i64
  %60 = select i1 %53, i8* %55, i8* %58
  %61 = select i1 %53, i64 %57, i64 %59
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %7, i8* %60, i64 %61) #8
  %63 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #8
  %64 = load i32, i32* %6, align 8
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %64) #8
  %65 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = select i1 %68, i8* %70, i8* %63
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %67 to i64
  %75 = select i1 %68, i64 %73, i64 %74
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* bitcast (i8** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE, i64 0, i32 2, i32 0) to %"class.crash_reporter::internal::CrashKeyStringImpl"*), i8* %71, i64 %75) #8
  %76 = call i1 @llvm.is.constant.i64(i64 %75) #8
  %77 = icmp ult i64 %75, 4294967296
  %78 = trunc i64 %75 to i32
  %79 = select i1 %77, i32 %78, i32 -1
  %80 = icmp ult i64 %75, 4294967295
  %81 = select i1 %80, i64 %75, i64 4294967295
  %82 = trunc i64 %81 to i32
  %83 = select i1 %76, i32 %82, i32 %79
  %84 = icmp ult i32 %83, 8
  %85 = select i1 %84, i32 %83, i32 8
  %86 = zext i32 %85 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE, i64 0, i32 3, i32 5, i64 0), i8* align 1 %71, i64 %86, i1 false) #8
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::Annotation"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE, i64 0, i32 3, i32 0, i32 0, i32 0) to %"class.crashpad::Annotation"*), i32 %85) #8
  %87 = load i8, i8* %66, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %38
  %90 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %90) #7
  br label %91

91:                                               ; preds = %38, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #8
  %92 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %116

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.variations::ExperimentListInfo", %"struct.variations::ExperimentListInfo"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 4096
  br i1 %99, label %100, label %116

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #8
  %102 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %7, i64 0, i64 4096, %"class.std::__1::allocator"* dereferenceable(1) %102) #8
  %103 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %4, i8 signext 44, i64 -1) #8
  %104 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #7
  br label %111

111:                                              ; preds = %100, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #8
  %112 = shl i64 %103, 32
  %113 = add i64 %112, 4294967296
  %114 = ashr exact i64 %113, 32
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %7, i64 %114, i8 signext 0) #8
  %115 = load i8, i8* %93, align 1
  br label %116

116:                                              ; preds = %91, %111, %96
  %117 = phi i8 [ %94, %91 ], [ %115, %111 ], [ %94, %96 ]
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = select i1 %118, i8* %120, i8* %8
  %122 = getelementptr inbounds %"struct.variations::ExperimentListInfo", %"struct.variations::ExperimentListInfo"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = zext i8 %117 to i64
  %125 = select i1 %118, i64 %123, i64 %124
  call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* bitcast (i8** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE, i64 0, i32 2, i32 0) to %"class.crash_reporter::internal::CrashKeyStringImpl"*), i8* %121, i64 %125) #8
  %126 = call i1 @llvm.is.constant.i64(i64 %125) #8
  %127 = icmp ult i64 %125, 4294967296
  %128 = trunc i64 %125 to i32
  %129 = select i1 %127, i32 %128, i32 -1
  %130 = icmp ult i64 %125, 4294967295
  %131 = select i1 %130, i64 %125, i64 4294967295
  %132 = trunc i64 %131 to i32
  %133 = select i1 %126, i32 %132, i32 %129
  %134 = icmp ult i32 %133, 4096
  %135 = select i1 %134, i32 %133, i32 4096
  %136 = zext i32 %135 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE, i64 0, i32 3, i32 5, i64 0), i8* align 1 %121, i64 %136, i1 false) #8
  call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::Annotation"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE, i64 0, i32 3, i32 0, i32 0, i32 0) to %"class.crashpad::Annotation"*), i32 %135) #8
  %137 = load i8, i8* %93, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %116
  %140 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %140) #7
  br label %141

141:                                              ; preds = %116, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret void
}

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base14FieldTrialList11AddObserverEPNS0_8ObserverE(%"class.base::FieldTrialList::Observer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys26OnFieldTrialGroupFinalizedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %6, align 8
  %8 = bitcast %"class.base::SequencedTaskRunner"* %7 to i1 (%"class.base::SequencedTaskRunner"*)***
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %9, i64 5
  %11 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.base::SequencedTaskRunner"* %7) #8
  br i1 %12, label %55, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.base::SequencedTaskRunner"** %6 to %"class.base::TaskRunner"**
  %15 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %14, align 8
  %16 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i32 137) #8
  %17 = ptrtoint %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0 to i64
  %18 = call i8* @_Znwm(i64 104) #7, !noalias !11
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_EJNS0_17UnretainedWrapperIS5_EESC_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_EJNS0_17UnretainedWrapperIS4_EESB_SB_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !11
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %21, align 8, !noalias !11
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %17, i64* %23, align 8, !noalias !11
  %24 = getelementptr inbounds i8, i8* %18, i64 56
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1, !noalias !11
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %13
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %30, i64 24, i1 false) #8, !noalias !11
  br label %37

31:                                               ; preds = %13
  %32 = bitcast i8* %24 to %"class.std::__1::basic_string"*
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8, !noalias !11
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %32, i8* %34, i64 %36) #8, !noalias !11
  br label %37

37:                                               ; preds = %31, %29
  %38 = getelementptr inbounds i8, i8* %18, i64 80
  %39 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1, !noalias !11
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %44, i64 24, i1 false) #8, !noalias !11
  br label %51

45:                                               ; preds = %37
  %46 = bitcast i8* %38 to %"class.std::__1::basic_string"*
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !11
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %46, i8* %48, i64 %50) #8, !noalias !11
  br label %51

51:                                               ; preds = %43, %45
  %52 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %18, i8** %52, align 8, !alias.scope !11
  %53 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %15, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #8
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8
  br label %56

55:                                               ; preds = %3
  tail call fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys16AppendFieldTrialERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  tail call fastcc void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeys15UpdateCrashKeysEv(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0)
  br label %56

56:                                               ; preds = %55, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeysD2Ev(%"class.variations::(anonymous namespace)::VariationsCrashKeys"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations12_GLOBAL__N_119VariationsCrashKeysE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 0
  tail call void @_ZN4base14FieldTrialList14RemoveObserverEPNS0_8ObserverE(%"class.base::FieldTrialList::Observer"* %3) #8
  %4 = load %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crash_reporter::internal::CrashKeyStringImpl"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE, i64 0, i32 0), align 8
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl5ClearEv(%"class.crash_reporter::internal::CrashKeyStringImpl"* %4) #8
  %5 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [8 x i8] } }* @_ZN10variations12_GLOBAL__N_126g_num_variations_crash_keyE, i64 0, i32 1), align 8
  tail call void @_ZN8crashpad10Annotation5ClearEv(%"class.crashpad::Annotation"* %5) #8
  %6 = load %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crash_reporter::internal::CrashKeyStringImpl"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE, i64 0, i32 0), align 8
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl5ClearEv(%"class.crash_reporter::internal::CrashKeyStringImpl"* %6) #8
  %7 = load %"class.crashpad::Annotation"*, %"class.crashpad::Annotation"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl.20" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [4096 x i8] } }* @_ZN10variations12_GLOBAL__N_122g_variations_crash_keyE, i64 0, i32 1), align 8
  tail call void @_ZN8crashpad10Annotation5ClearEv(%"class.crashpad::Annotation"* %7) #8
  %8 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %1, %13
  %17 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %16, %22
  %26 = getelementptr inbounds %"class.variations::(anonymous namespace)::VariationsCrashKeys", %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0, i64 0, i32 1, i32 0
  %27 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %26, align 8
  %28 = icmp eq %"class.base::SequencedTaskRunner"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %27, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %36) #8
  br label %37

37:                                               ; preds = %25, %29, %34
  tail call void @_ZN4base14FieldTrialList8ObserverD2Ev(%"class.base::FieldTrialList::Observer"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeysD0Ev(%"class.variations::(anonymous namespace)::VariationsCrashKeys"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10variations12_GLOBAL__N_119VariationsCrashKeysD2Ev(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0) #8
  %2 = bitcast %"class.variations::(anonymous namespace)::VariationsCrashKeys"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare i64 @_ZN10variations17MakeActiveGroupIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #5

declare void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_EJNS0_17UnretainedWrapperIS5_EESC_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.std::__1::basic_string"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.std::__1::basic_string"*
  %10 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 %14
  %16 = bitcast i8* %15 to %"class.variations::(anonymous namespace)::VariationsCrashKeys"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**
  %25 = load void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %11 to void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.variations::(anonymous namespace)::VariationsCrashKeys"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* [ %25, %19 ], [ %27, %26 ]
  tail call void %29(%"class.variations::(anonymous namespace)::VariationsCrashKeys"* %16, %"class.std::__1::basic_string"* dereferenceable(24) %7, %"class.std::__1::basic_string"* dereferenceable(24) %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_EJNS0_17UnretainedWrapperIS4_EESB_SB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %9, %3
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %14 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %13 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %12, %18
  %22 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

23:                                               ; preds = %21, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base14FieldTrialList14RemoveObserverEPNS0_8ObserverE(%"class.base::FieldTrialList::Observer"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base14FieldTrialList8ObserverD2Ev(%"class.base::FieldTrialList::Observer"*) unnamed_addr #5

declare void @_ZN14crash_reporter8internal18CrashKeyStringImpl5ClearEv(%"class.crash_reporter::internal::CrashKeyStringImpl"*) local_unnamed_addr #3

declare void @_ZN8crashpad10Annotation5ClearEv(%"class.crashpad::Annotation"*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN10variations12_GLOBAL__N_119ActiveGroupToStringERKNS_13ActiveGroupIdE: argument 0"}
!4 = distinct !{!4, !"_ZN10variations12_GLOBAL__N_119ActiveGroupToStringERKNS_13ActiveGroupIdE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN10variations12_GLOBAL__N_119VariationsCrashKeys21GetExperimentListInfoEv: argument 0"}
!7 = distinct !{!7, !"_ZN10variations12_GLOBAL__N_119VariationsCrashKeys21GetExperimentListInfoEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN10variations12_GLOBAL__N_119VariationsCrashKeys21GetExperimentListInfoEv: argument 0"}
!10 = distinct !{!10, !"_ZN10variations12_GLOBAL__N_119VariationsCrashKeys21GetExperimentListInfoEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_EJNS0_17UnretainedWrapperIS5_EESE_SE_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_EJNS0_17UnretainedWrapperIS5_EESE_SE_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EJNS_8internal17UnretainedWrapperIS3_EESC_SC_EEENS_12OnceCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN10variations12_GLOBAL__N_119VariationsCrashKeysEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_EJNS_8internal17UnretainedWrapperIS3_EESC_SC_EEENS_12OnceCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
