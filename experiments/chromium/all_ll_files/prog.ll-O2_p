; ModuleID = '../../third_party/re2/src/re2/prog.cc'
source_filename = "../../third_party/re2/src/re2/prog.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.re2::Prog" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i64, i32, i32, i32, [8 x i32], [4 x i8], %"class.re2::PODArray", %"class.re2::PODArray.6", %"class.re2::PODArray.12", i64, %"class.re2::DFA"*, %"class.re2::DFA"*, [256 x i8], %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::PODArray" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type <{ %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.4" = type { i16* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.re2::PODArray<unsigned short>::Deleter" }
%"struct.re2::PODArray<unsigned short>::Deleter" = type { i32 }
%"class.re2::PODArray.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type <{ %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.re2::Prog::Inst"* }
%"class.re2::Prog::Inst" = type { i32, %union.anon }
%union.anon = type { i32 }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.re2::PODArray<re2::Prog::Inst>::Deleter" }
%"struct.re2::PODArray<re2::Prog::Inst>::Deleter" = type { i32 }
%"class.re2::PODArray.12" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type <{ %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.re2::PODArray<unsigned char>::Deleter" }
%"struct.re2::PODArray<unsigned char>::Deleter" = type { i32 }
%"class.re2::DFA" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::Bitmap256" = type { [4 x i64] }
%struct.anon = type { i8, i8, i16 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::SparseSetT" = type { i32, [4 x i8], %"class.re2::PODArray.18", %"class.re2::PODArray.18" }
%"class.re2::PODArray.18" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type <{ %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.21" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.re2::PODArray<int>::Deleter" }
%"struct.re2::PODArray<int>::Deleter" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.1 }
%struct.anon.1 = type { i8 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::ByteMapBuilder" = type { %"class.re2::Bitmap256", [256 x i32], i32, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.re2::SparseArray<int>::IndexValue" = type { i32, i32 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.re2::SparseArray" = type { i32, [4 x i8], %"class.re2::PODArray.18", %"class.re2::PODArray.36" }
%"class.re2::PODArray.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type <{ %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.re2::SparseArray<int>::IndexValue"* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.re2::PODArray<re2::SparseArray<int>::IndexValue>::Deleter" }
%"struct.re2::PODArray<re2::SparseArray<int>::IndexValue>::Deleter" = type { i32 }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::vector.30"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.anon.57 = type { %"class.re2::Bitmap256"*, [256 x i32]*, i32*, i32* }

$_ZN3re211SparseArrayIiE4lessERKNS1_10IndexValueES4_ = comdat any

$_ZNSt3__16__sortIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEbT0_SB_T_ = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

@.str.1 = private unnamed_addr constant [15 x i8] c"alt -> %d | %d\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"altmatch -> %d | %d\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"byte%s [%02x-%02x] %d -> %d\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"/i\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"capture %d -> %d\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"emptywidth %#x -> %d\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"match! %d\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"nop -> %d\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"[%02x-%02x] -> %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"%d. %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"%d+ %s\0A\00", align 1

@_ZN3re24ProgC1Ev = hidden unnamed_addr alias void (%"class.re2::Prog"*), void (%"class.re2::Prog"*)* @_ZN3re24ProgC2Ev
@_ZN3re24ProgD1Ev = hidden unnamed_addr alias void (%"class.re2::Prog"*), void (%"class.re2::Prog"*)* @_ZN3re24ProgD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3re29Bitmap25614FindNextSetBitEi(%"class.re2::Bitmap256"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sdiv i32 %1, 64
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %0, i64 0, i32 0, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = srem i32 %1, 64
  %8 = zext i32 %7 to i64
  %9 = shl i64 -1, %8
  %10 = and i64 %6, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = shl nsw i32 %3, 6
  %14 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #15, !range !2
  %15 = trunc i64 %14 to i32
  %16 = or i32 %13, %15
  br label %42

17:                                               ; preds = %2
  switch i32 %3, label %42 [
    i32 0, label %18
    i32 1, label %26
    i32 2, label %34
  ]

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %0, i64 0, i32 0, i64 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = tail call i64 @llvm.cttz.i64(i64 %20, i1 true) #15, !range !2
  %24 = trunc i64 %23 to i32
  %25 = or i32 %24, 64
  br label %42

26:                                               ; preds = %18, %17
  %27 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %0, i64 0, i32 0, i64 2
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = tail call i64 @llvm.cttz.i64(i64 %28, i1 true) #15, !range !2
  %32 = trunc i64 %31 to i32
  %33 = or i32 %32, 128
  br label %42

34:                                               ; preds = %26, %17
  %35 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %0, i64 0, i32 0, i64 3
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = tail call i64 @llvm.cttz.i64(i64 %36, i1 true) #15, !range !2
  %40 = trunc i64 %39 to i32
  %41 = or i32 %40, 192
  br label %42

42:                                               ; preds = %17, %34, %38, %30, %22, %12
  %43 = phi i32 [ %16, %12 ], [ %41, %38 ], [ %33, %30 ], [ %25, %22 ], [ -1, %34 ], [ -1, %17 ]
  ret i32 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* nocapture, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = shl i32 %1, 4
  %5 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8
  %8 = or i32 %7, %4
  store i32 %8, i32* %5, align 4
  %9 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 1, i32 0
  store i32 %2, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* nocapture, i32, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %6 = shl i32 %4, 4
  %7 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 8
  %10 = or i32 %6, %9
  %11 = or i32 %10, 2
  store i32 %11, i32* %7, align 4
  %12 = trunc i32 %1 to i8
  %13 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 1
  %14 = bitcast %union.anon* %13 to %struct.anon*
  %15 = bitcast %union.anon* %13 to i8*
  store i8 %12, i8* %15, align 4
  %16 = trunc i32 %2 to i8
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %14, i64 0, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i32 %3 to i16
  %19 = and i16 %18, 1
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %14, i64 0, i32 2
  store i16 %19, i16* %20, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst11InitCaptureEij(%"class.re2::Prog::Inst"* nocapture, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = shl i32 %2, 4
  %5 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8
  %8 = or i32 %4, %7
  %9 = or i32 %8, 3
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* nocapture, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = shl i32 %2, 4
  %5 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8
  %8 = or i32 %4, %7
  %9 = or i32 %8, 4
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst9InitMatchEi(%"class.re2::Prog::Inst"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -8
  %6 = or i32 %5, 5
  store i32 %6, i32* %3, align 4
  %7 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst7InitNopEj(%"class.re2::Prog::Inst"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -8
  %6 = or i32 %5, 6
  store i32 %6, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst8InitFailEv(%"class.re2::Prog::Inst"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 7
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog4Inst4DumpEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prog::Inst"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 7
  switch i32 %5, label %6 [
    i32 0, label %7
    i32 1, label %11
    i32 2, label %15
    i32 3, label %32
    i32 4, label %36
    i32 5, label %40
    i32 6, label %43
    i32 7, label %45
  ]

6:                                                ; preds = %2
  unreachable

7:                                                ; preds = %2
  %8 = lshr i32 %4, 4
  %9 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %8, i32 %10) #15
  br label %46

11:                                               ; preds = %2
  %12 = lshr i32 %4, 4
  %13 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i32 %12, i32 %14) #15
  br label %46

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 1
  %17 = bitcast %union.anon* %16 to %struct.anon*
  %18 = getelementptr inbounds %struct.anon, %struct.anon* %17, i64 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  %22 = select i1 %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)
  %23 = bitcast %union.anon* %16 to i8*
  %24 = load i8, i8* %23, align 4
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %struct.anon, %struct.anon* %17, i64 0, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = lshr i16 %19, 1
  %30 = zext i16 %29 to i32
  %31 = lshr i32 %4, 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* %22, i32 %25, i32 %28, i32 %30, i32 %31) #15
  br label %46

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = lshr i32 %4, 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i32 %34, i32 %35) #15
  br label %46

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = lshr i32 %4, 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 %38, i32 %39) #15
  br label %46

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %1, i64 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 %42) #15
  br label %46

43:                                               ; preds = %2
  %44 = lshr i32 %4, 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i32 %44) #15
  br label %46

45:                                               ; preds = %2
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #15
  br label %46

46:                                               ; preds = %45, %43, %40, %36, %32, %15, %11, %7
  ret void
}

declare void @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3re24ProgC2Ev(%"class.re2::Prog"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 10
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 5, i1 false)
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  store i32 -1, i32* %4, align 8
  %6 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 11
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 12
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 15
  %9 = bitcast %"class.re2::PODArray"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 15, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16
  %12 = bitcast %"class.re2::PODArray.6"* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17
  %15 = bitcast %"class.re2::PODArray.12"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 18
  %18 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 22, i32 0
  %19 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24ProgD2Ev(%"class.re2::Prog"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 20
  %3 = load %"class.re2::DFA"*, %"class.re2::DFA"** %2, align 8
  tail call void @_ZN3re24Prog9DeleteDFAEPNS_3DFAE(%"class.re2::Prog"* %0, %"class.re2::DFA"* %3) #15
  %4 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 19
  %5 = load %"class.re2::DFA"*, %"class.re2::DFA"** %4, align 8
  tail call void @_ZN3re24Prog9DeleteDFAEPNS_3DFAE(%"class.re2::Prog"* %0, %"class.re2::DFA"* %5) #15
  %6 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  store i8* null, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdlPv(i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %11, align 8
  store %"class.re2::Prog::Inst"* null, %"class.re2::Prog::Inst"** %11, align 8
  %13 = icmp eq %"class.re2::Prog::Inst"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.re2::Prog::Inst"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #16
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  store i16* null, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast i16* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %16, %20
  ret void
}

declare void @_ZN3re24Prog9DeleteDFAEPNS_3DFAE(%"class.re2::Prog"*, %"class.re2::DFA"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog4DumpEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prog"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.re2::SparseSetT", align 8
  %4 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  tail call fastcc void @_ZN3re2L21FlattenedProgToStringEPNS_4ProgEi(%"class.std::__1::basic_string"* sret %0, %"class.re2::Prog"* %1, i32 %9)
  br label %53

10:                                               ; preds = %2
  %11 = bitcast %"class.re2::SparseSetT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 0
  store i32 0, i32* %14, align 8
  %15 = icmp slt i32 %13, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @abort() #17
  unreachable

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2
  %19 = sext i32 %13 to i64
  %20 = shl nsw i64 %19, 2
  %21 = tail call i8* @_Znwm(i64 %20) #16
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.re2::PODArray.18"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %13, i32* %24, align 8
  %25 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3
  %26 = tail call i8* @_Znwm(i64 %20) #16
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.re2::PODArray.18"* %25 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %13, i32* %29, align 8
  %30 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 5
  %31 = load i32, i32* %30, align 8
  %32 = icmp ne i32 %31, 0
  %33 = icmp ugt i32 %13, %31
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %17
  %36 = bitcast i8* %21 to i32*
  %37 = bitcast i8* %26 to i32*
  %38 = sext i32 %31 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  store i32 0, i32* %39, align 4
  store i32 %31, i32* %37, align 4
  store i32 1, i32* %14, align 8
  br label %40

40:                                               ; preds = %17, %35
  call fastcc void @_ZN3re2L12ProgToStringEPNS_4ProgEPNS_10SparseSetTIvEE(%"class.std::__1::basic_string"* sret %0, %"class.re2::Prog"* %1, %"class.re2::SparseSetT"* nonnull %3)
  %41 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  store i32* null, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast i32* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  store i32* null, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #15
  br label %53

53:                                               ; preds = %52, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3re2L21FlattenedProgToStringEPNS_4ProgEi(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prog"* nocapture readonly, i32) unnamed_addr #3 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #15
  %9 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %12, label %94

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = sext i32 %2 to i64
  br label %33

33:                                               ; preds = %12, %87
  %34 = phi i64 [ %32, %12 ], [ %90, %87 ]
  %35 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %13, align 8
  %36 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %35, i64 %34
  %37 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %64, label %41

41:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  call void @_ZN3re24Prog4Inst4DumpEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.re2::Prog::Inst"* %36)
  %42 = load i8, i8* %17, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %18, align 8
  %45 = select i1 %43, i8* %44, i8* %15
  %46 = trunc i64 %34 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 %46, i8* %45) #15
  %47 = load i8, i8* %20, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8*, i8** %21, align 8
  %50 = load i64, i64* %22, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i8* %49, i8* %14
  %53 = select i1 %48, i64 %50, i64 %51
  %54 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %52, i64 %53) #15
  %55 = load i8, i8* %20, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %41
  %58 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %41, %57
  %60 = load i8, i8* %17, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %87

62:                                               ; preds = %59
  %63 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %63) #16
  br label %87

64:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  call void @_ZN3re24Prog4Inst4DumpEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.re2::Prog::Inst"* %36)
  %65 = load i8, i8* %26, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %27, align 8
  %68 = select i1 %66, i8* %67, i8* %24
  %69 = trunc i64 %34 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i32 %69, i8* %68) #15
  %70 = load i8, i8* %29, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i8*, i8** %30, align 8
  %73 = load i64, i64* %31, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i8* %72, i8* %23
  %76 = select i1 %71, i64 %73, i64 %74
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %75, i64 %76) #15
  %78 = load i8, i8* %29, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %64
  %81 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %64, %80
  %83 = load i8, i8* %26, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %86) #16
  br label %87

87:                                               ; preds = %85, %82, %62, %59
  %88 = phi i8* [ %15, %59 ], [ %15, %62 ], [ %24, %82 ], [ %24, %85 ]
  %89 = phi i8* [ %14, %59 ], [ %14, %62 ], [ %23, %82 ], [ %23, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #15
  %90 = add nsw i64 %34, 1
  %91 = load i32, i32* %9, align 8
  %92 = sext i32 %91 to i64
  %93 = icmp slt i64 %90, %92
  br i1 %93, label %33, label %94

94:                                               ; preds = %87, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3re2L12ProgToStringEPNS_4ProgEPNS_10SparseSetTIvEE(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prog"* nocapture readonly, %"class.re2::SparseSetT"* nocapture) unnamed_addr #3 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #15
  %7 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %123, label %11

11:                                               ; preds = %3
  %12 = load i32*, i32** %7, align 8
  %13 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %2, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %11, %116
  %26 = phi i32* [ %12, %11 ], [ %117, %116 ]
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %13, align 8
  %30 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %29, i64 %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  call void @_ZN3re24Prog4Inst4DumpEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.re2::Prog::Inst"* %30)
  %31 = load i8, i8* %17, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i8*, i8** %18, align 8
  %34 = select i1 %32, i8* %33, i8* %15
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 %27, i8* %34) #15
  %35 = load i8, i8* %20, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i8*, i8** %21, align 8
  %38 = load i64, i64* %22, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i8* %37, i8* %14
  %41 = select i1 %36, i64 %38, i64 %39
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %40, i64 %41) #15
  %43 = load i8, i8* %20, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %25
  %46 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %25, %45
  %48 = load i8, i8* %17, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  %53 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %30, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = lshr i32 %54, 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %83, label %57

57:                                               ; preds = %52
  %58 = load i32*, i32** %7, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %83, label %60

60:                                               ; preds = %57
  %61 = load i32, i32* %23, align 4
  %62 = icmp ugt i32 %61, %55
  br i1 %62, label %63, label %83

63:                                               ; preds = %60
  %64 = zext i32 %55 to i64
  %65 = load i32*, i32** %24, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %64
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* %8, align 8
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %63
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %55
  br i1 %74, label %83, label %75

75:                                               ; preds = %70, %63
  store i32 %68, i32* %66, align 4
  %76 = load i32, i32* %8, align 8
  %77 = sext i32 %76 to i64
  %78 = load i32*, i32** %7, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 %77
  store i32 %55, i32* %79, align 4
  %80 = load i32, i32* %8, align 8
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %8, align 8
  %82 = load i32, i32* %53, align 4
  br label %83

83:                                               ; preds = %52, %57, %60, %70, %75
  %84 = phi i32 [ %54, %52 ], [ %54, %57 ], [ %54, %60 ], [ %54, %70 ], [ %82, %75 ]
  %85 = and i32 %84, 6
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %116

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %29, i64 %28, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %116, label %91

91:                                               ; preds = %87
  %92 = load i32*, i32** %7, align 8
  %93 = icmp eq i32* %92, null
  br i1 %93, label %116, label %94

94:                                               ; preds = %91
  %95 = load i32, i32* %23, align 4
  %96 = icmp ugt i32 %95, %89
  br i1 %96, label %97, label %116

97:                                               ; preds = %94
  %98 = sext i32 %89 to i64
  %99 = load i32*, i32** %24, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %98
  %101 = load i32, i32* %100, align 4
  %102 = load i32, i32* %8, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %97
  %105 = sext i32 %101 to i64
  %106 = getelementptr inbounds i32, i32* %92, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %89
  br i1 %108, label %116, label %109

109:                                              ; preds = %104, %97
  store i32 %102, i32* %100, align 4
  %110 = load i32, i32* %8, align 8
  %111 = sext i32 %110 to i64
  %112 = load i32*, i32** %7, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %111
  store i32 %89, i32* %113, align 4
  %114 = load i32, i32* %8, align 8
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %8, align 8
  br label %116

116:                                              ; preds = %83, %109, %104, %94, %91, %87
  %117 = getelementptr inbounds i32, i32* %26, i64 1
  %118 = load i32*, i32** %7, align 8
  %119 = load i32, i32* %8, align 8
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = icmp eq i32* %117, %121
  br i1 %122, label %123, label %25

123:                                              ; preds = %116, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog14DumpUnanchoredEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prog"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.re2::SparseSetT", align 8
  %4 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  tail call fastcc void @_ZN3re2L21FlattenedProgToStringEPNS_4ProgEi(%"class.std::__1::basic_string"* sret %0, %"class.re2::Prog"* %1, i32 %9)
  br label %53

10:                                               ; preds = %2
  %11 = bitcast %"class.re2::SparseSetT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 0
  store i32 0, i32* %14, align 8
  %15 = icmp slt i32 %13, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @abort() #17
  unreachable

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2
  %19 = sext i32 %13 to i64
  %20 = shl nsw i64 %19, 2
  %21 = tail call i8* @_Znwm(i64 %20) #16
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.re2::PODArray.18"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %13, i32* %24, align 8
  %25 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3
  %26 = tail call i8* @_Znwm(i64 %20) #16
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.re2::PODArray.18"* %25 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %13, i32* %29, align 8
  %30 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 6
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne i32 %31, 0
  %33 = icmp ugt i32 %13, %31
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %40

35:                                               ; preds = %17
  %36 = bitcast i8* %21 to i32*
  %37 = bitcast i8* %26 to i32*
  %38 = sext i32 %31 to i64
  %39 = getelementptr inbounds i32, i32* %36, i64 %38
  store i32 0, i32* %39, align 4
  store i32 %31, i32* %37, align 4
  store i32 1, i32* %14, align 8
  br label %40

40:                                               ; preds = %17, %35
  call fastcc void @_ZN3re2L12ProgToStringEPNS_4ProgEPNS_10SparseSetTIvEE(%"class.std::__1::basic_string"* sret %0, %"class.re2::Prog"* %1, %"class.re2::SparseSetT"* nonnull %3)
  %41 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  store i32* null, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast i32* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  store i32* null, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #15
  br label %53

53:                                               ; preds = %52, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog11DumpByteMapEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prog"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %10

10:                                               ; preds = %2, %38
  %11 = phi i32 [ 0, %2 ], [ %39, %38 ]
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 21, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  br label %16

16:                                               ; preds = %19, %10
  %17 = phi i64 [ %20, %19 ], [ %12, %10 ]
  %18 = icmp slt i64 %17, 255
  br i1 %18, label %19, label %24

19:                                               ; preds = %16
  %20 = add nsw i64 %17, 1
  %21 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %1, i64 0, i32 21, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, %14
  br i1 %23, label %16, label %24

24:                                               ; preds = %16, %19
  %25 = trunc i64 %17 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i32 %11, i32 %25, i32 %15) #15
  %26 = load i8, i8* %7, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i8*, i8** %8, align 8
  %29 = load i64, i64* %9, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i8* %28, i8* %5
  %32 = select i1 %27, i64 %29, i64 %30
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %31, i64 %32) #15
  %34 = load i8, i8* %7, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %24
  %37 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %24, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  %39 = add nsw i32 %25, 1
  %40 = icmp slt i32 %39, 256
  br i1 %40, label %10, label %41

41:                                               ; preds = %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog8OptimizeEv(%"class.re2::Prog"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @abort() #17
  unreachable

6:                                                ; preds = %1
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = tail call i8* @_Znwm(i64 %8) #16
  %10 = tail call i8* @_Znwm(i64 %8) #16
  %11 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 0
  %14 = icmp ugt i32 %3, %12
  %15 = and i1 %13, %14
  %16 = bitcast i8* %10 to i32*
  br i1 %15, label %17, label %27

17:                                               ; preds = %6
  %18 = sext i32 %12 to i64
  %19 = bitcast i8* %9 to i32*
  %20 = getelementptr inbounds i32, i32* %19, i64 %18
  store i32 0, i32* %20, align 4
  store i32 %12, i32* %16, align 4
  %21 = getelementptr inbounds i8, i8* %10, i64 4
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %9 to i32*
  br label %40

25:                                               ; preds = %116
  %26 = load i32, i32* %11, align 8
  br label %27

27:                                               ; preds = %6, %25
  %28 = phi i32 [ %26, %25 ], [ %12, %6 ]
  %29 = icmp ne i32 %28, 0
  %30 = icmp ugt i32 %3, %28
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %124

32:                                               ; preds = %27
  %33 = sext i32 %28 to i64
  %34 = bitcast i8* %9 to i32*
  %35 = getelementptr inbounds i32, i32* %34, i64 %33
  store i32 0, i32* %35, align 4
  store i32 %28, i32* %16, align 4
  %36 = getelementptr inbounds i8, i8* %10, i64 4
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast i8* %9 to i32*
  br label %125

40:                                               ; preds = %122, %17
  %41 = phi i32 [ %12, %17 ], [ %123, %122 ]
  %42 = phi i32* [ %22, %17 ], [ %120, %122 ]
  %43 = phi i32* [ %16, %17 ], [ %118, %122 ]
  %44 = phi i32 [ 1, %17 ], [ %117, %122 ]
  %45 = sext i32 %41 to i64
  %46 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %23, align 8
  %47 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %46, i64 %45, i32 0
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %53, %40
  %50 = phi i32 [ %48, %40 ], [ %56, %53 ]
  %51 = lshr i32 %50, 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %46, i64 %54, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 7
  %58 = icmp eq i32 %57, 6
  br i1 %58, label %49, label %59

59:                                               ; preds = %49, %53
  %60 = and i32 %50, -16
  %61 = and i32 %48, 15
  %62 = or i32 %61, %60
  store i32 %62, i32* %47, align 4
  %63 = icmp ne i32 %51, 0
  %64 = icmp ugt i32 %3, %51
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %79

66:                                               ; preds = %59
  %67 = zext i32 %51 to i64
  %68 = getelementptr inbounds i32, i32* %24, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = icmp ult i32 %69, %44
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds i32, i32* %16, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %51
  br i1 %75, label %79, label %76

76:                                               ; preds = %71, %66
  store i32 %44, i32* %68, align 4
  store i32 %51, i32* %42, align 4
  %77 = add nsw i32 %44, 1
  %78 = load i32, i32* %47, align 4
  br label %79

79:                                               ; preds = %59, %71, %76
  %80 = phi i32 [ %62, %59 ], [ %62, %71 ], [ %78, %76 ]
  %81 = phi i32 [ %44, %59 ], [ %44, %71 ], [ %77, %76 ]
  %82 = and i32 %80, 7
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %116

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %46, i64 %45, i32 1, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %23, align 8
  br label %93

90:                                               ; preds = %93
  %91 = icmp eq i32 %100, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %90, %84
  store i32 0, i32* %85, align 4
  br label %116

93:                                               ; preds = %88, %90
  %94 = phi i32 [ %86, %88 ], [ %100, %90 ]
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %89, i64 %95, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 7
  %99 = icmp eq i32 %98, 6
  %100 = lshr i32 %97, 4
  br i1 %99, label %90, label %101

101:                                              ; preds = %93
  store i32 %94, i32* %85, align 4
  %102 = icmp ugt i32 %3, %94
  br i1 %102, label %103, label %116

103:                                              ; preds = %101
  %104 = getelementptr inbounds i32, i32* %24, i64 %95
  %105 = load i32, i32* %104, align 4
  %106 = icmp ult i32 %105, %81
  br i1 %106, label %107, label %112

107:                                              ; preds = %103
  %108 = sext i32 %105 to i64
  %109 = getelementptr inbounds i32, i32* %16, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, %94
  br i1 %111, label %116, label %112

112:                                              ; preds = %107, %103
  store i32 %81, i32* %104, align 4
  %113 = sext i32 %81 to i64
  %114 = getelementptr inbounds i32, i32* %16, i64 %113
  store i32 %94, i32* %114, align 4
  %115 = add nsw i32 %81, 1
  br label %116

116:                                              ; preds = %112, %107, %101, %92, %79
  %117 = phi i32 [ %81, %79 ], [ %81, %107 ], [ %115, %112 ], [ %81, %101 ], [ %81, %92 ]
  %118 = getelementptr inbounds i32, i32* %43, i64 1
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds i32, i32* %16, i64 %119
  %121 = icmp eq i32* %118, %120
  br i1 %121, label %25, label %122

122:                                              ; preds = %116
  %123 = load i32, i32* %118, align 4
  br label %40

124:                                              ; preds = %248, %27
  tail call void @_ZdlPv(i8* nonnull %10) #16
  tail call void @_ZdlPv(i8* nonnull %9) #16
  ret void

125:                                              ; preds = %32, %248
  %126 = phi i32* [ %37, %32 ], [ %251, %248 ]
  %127 = phi i32* [ %16, %32 ], [ %249, %248 ]
  %128 = phi i32 [ 1, %32 ], [ %179, %248 ]
  %129 = load i32, i32* %127, align 4
  %130 = sext i32 %129 to i64
  %131 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %38, align 8
  %132 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %130, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = lshr i32 %133, 4
  %135 = icmp ne i32 %134, 0
  %136 = icmp ugt i32 %3, %134
  %137 = and i1 %135, %136
  br i1 %137, label %138, label %151

138:                                              ; preds = %125
  %139 = zext i32 %134 to i64
  %140 = getelementptr inbounds i32, i32* %39, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = icmp ult i32 %141, %128
  br i1 %142, label %143, label %148

143:                                              ; preds = %138
  %144 = sext i32 %141 to i64
  %145 = getelementptr inbounds i32, i32* %16, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, %134
  br i1 %147, label %151, label %148

148:                                              ; preds = %143, %138
  store i32 %128, i32* %140, align 4
  store i32 %134, i32* %126, align 4
  %149 = add nsw i32 %128, 1
  %150 = load i32, i32* %132, align 4
  br label %151

151:                                              ; preds = %125, %143, %148
  %152 = phi i32 [ %133, %125 ], [ %133, %143 ], [ %150, %148 ]
  %153 = phi i32 [ %128, %125 ], [ %128, %143 ], [ %149, %148 ]
  %154 = and i32 %152, 7
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %177

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %130, i32 1, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = icmp ne i32 %158, 0
  %160 = icmp ugt i32 %3, %158
  %161 = and i1 %159, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %156
  %163 = sext i32 %158 to i64
  %164 = getelementptr inbounds i32, i32* %39, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = icmp ult i32 %165, %153
  br i1 %166, label %167, label %172

167:                                              ; preds = %162
  %168 = sext i32 %165 to i64
  %169 = getelementptr inbounds i32, i32* %16, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, %158
  br i1 %171, label %177, label %172

172:                                              ; preds = %167, %162
  store i32 %153, i32* %164, align 4
  %173 = sext i32 %153 to i64
  %174 = getelementptr inbounds i32, i32* %16, i64 %173
  store i32 %158, i32* %174, align 4
  %175 = add nsw i32 %153, 1
  %176 = load i32, i32* %132, align 4
  br label %177

177:                                              ; preds = %156, %172, %167, %151
  %178 = phi i32 [ %152, %151 ], [ %152, %156 ], [ %152, %167 ], [ %176, %172 ]
  %179 = phi i32 [ %153, %151 ], [ %153, %156 ], [ %153, %167 ], [ %175, %172 ]
  %180 = and i32 %178, 7
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %248

182:                                              ; preds = %177
  %183 = lshr i32 %178, 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %130, i32 1, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %184, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 7
  %191 = icmp eq i32 %190, 2
  %192 = lshr i32 %189, 4
  %193 = icmp eq i32 %192, %129
  %194 = and i1 %191, %193
  br i1 %194, label %196, label %195

195:                                              ; preds = %206, %206, %206, %206, %206, %201, %196, %182
  br label %218

196:                                              ; preds = %182
  %197 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %184, i32 1
  %198 = bitcast %union.anon* %197 to i8*
  %199 = load i8, i8* %198, align 4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %195

201:                                              ; preds = %196
  %202 = bitcast %union.anon* %197 to %struct.anon*
  %203 = getelementptr inbounds %struct.anon, %struct.anon* %202, i64 0, i32 1
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, -1
  br i1 %205, label %206, label %195

206:                                              ; preds = %201, %212
  %207 = phi i64 [ %214, %212 ], [ %187, %201 ]
  %208 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %207, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 7
  switch i32 %210, label %211 [
    i32 0, label %195
    i32 1, label %195
    i32 2, label %195
    i32 7, label %195
    i32 4, label %195
    i32 3, label %212
    i32 6, label %212
    i32 5, label %215
  ]

211:                                              ; preds = %206
  unreachable

212:                                              ; preds = %206, %206
  %213 = lshr i32 %209, 4
  %214 = zext i32 %213 to i64
  br label %206

215:                                              ; preds = %206
  %216 = and i32 %178, -8
  %217 = or i32 %216, 1
  store i32 %217, i32* %132, align 4
  br label %248

218:                                              ; preds = %195, %222
  %219 = phi i32 [ %226, %222 ], [ %189, %195 ]
  %220 = and i32 %219, 7
  switch i32 %220, label %221 [
    i32 0, label %248
    i32 1, label %248
    i32 2, label %248
    i32 7, label %248
    i32 4, label %248
    i32 3, label %222
    i32 6, label %222
    i32 5, label %227
  ]

221:                                              ; preds = %218
  unreachable

222:                                              ; preds = %218, %218
  %223 = lshr i32 %219, 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %224, i32 0
  %226 = load i32, i32* %225, align 4
  br label %218

227:                                              ; preds = %218
  %228 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %187, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = and i32 %229, 7
  %231 = icmp eq i32 %230, 2
  %232 = lshr i32 %229, 4
  %233 = icmp eq i32 %232, %129
  %234 = and i1 %231, %233
  br i1 %234, label %235, label %248

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %187, i32 1
  %237 = bitcast %union.anon* %236 to i8*
  %238 = load i8, i8* %237, align 4
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %248

240:                                              ; preds = %235
  %241 = bitcast %union.anon* %236 to %struct.anon*
  %242 = getelementptr inbounds %struct.anon, %struct.anon* %241, i64 0, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, -1
  br i1 %244, label %245, label %248

245:                                              ; preds = %240
  %246 = and i32 %178, -8
  %247 = or i32 %246, 1
  store i32 %247, i32* %132, align 4
  br label %248

248:                                              ; preds = %218, %218, %218, %218, %218, %177, %227, %235, %240, %245, %215
  %249 = getelementptr inbounds i32, i32* %127, i64 1
  %250 = sext i32 %179 to i64
  %251 = getelementptr inbounds i32, i32* %16, i64 %250
  %252 = icmp eq i32* %249, %251
  br i1 %252, label %124, label %125
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3re24Prog10EmptyFlagsERKNS_11StringPieceEPKc(%"class.re2::StringPiece"* nocapture readonly dereferenceable(16), i8* readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 -1
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 10
  %10 = zext i1 %9 to i32
  br label %11

11:                                               ; preds = %6, %2
  %12 = phi i32 [ 5, %2 ], [ %10, %6 ]
  %13 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 %14
  %16 = icmp eq i8* %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = or i32 %12, 10
  br label %26

19:                                               ; preds = %11
  %20 = icmp ugt i8* %15, %1
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  %22 = load i8, i8* %1, align 1
  %23 = icmp eq i8 %22, 10
  %24 = or i32 %12, 2
  %25 = select i1 %23, i32 %24, i32 %12
  br label %26

26:                                               ; preds = %21, %19, %17
  %27 = phi i32 [ %18, %17 ], [ %12, %19 ], [ %25, %21 ]
  br i1 %5, label %28, label %41

28:                                               ; preds = %26
  br i1 %16, label %72, label %29

29:                                               ; preds = %28
  %30 = load i8, i8* %1, align 1
  %31 = and i8 %30, -33
  %32 = add i8 %31, -65
  %33 = icmp ult i8 %32, 26
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = add i8 %30, -48
  %36 = icmp ult i8 %35, 10
  %37 = icmp eq i8 %30, 95
  %38 = or i1 %37, %36
  br i1 %38, label %39, label %72

39:                                               ; preds = %29, %34
  %40 = or i32 %27, 16
  br label %72

41:                                               ; preds = %26
  %42 = getelementptr inbounds i8, i8* %1, i64 -1
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, -33
  %45 = add i8 %44, -65
  %46 = icmp ult i8 %45, 26
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = add i8 %43, -48
  %49 = icmp ult i8 %48, 10
  %50 = icmp eq i8 %43, 95
  %51 = or i1 %50, %49
  br label %52

52:                                               ; preds = %41, %47
  %53 = phi i1 [ %51, %47 ], [ true, %41 ]
  br i1 %16, label %54, label %57

54:                                               ; preds = %52
  %55 = or i32 %27, 16
  %56 = select i1 %53, i32 %55, i32 %27
  br label %72

57:                                               ; preds = %52
  %58 = load i8, i8* %1, align 1
  %59 = and i8 %58, -33
  %60 = add i8 %59, -65
  %61 = icmp ult i8 %60, 26
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = add i8 %58, -48
  %64 = icmp ult i8 %63, 10
  %65 = icmp eq i8 %58, 95
  %66 = or i1 %65, %64
  br label %67

67:                                               ; preds = %57, %62
  %68 = phi i1 [ %66, %62 ], [ true, %57 ]
  %69 = xor i1 %53, %68
  %70 = or i32 %27, 16
  %71 = select i1 %69, i32 %70, i32 %27
  br label %72

72:                                               ; preds = %39, %34, %67, %54, %28
  %73 = phi i32 [ %27, %28 ], [ %56, %54 ], [ %71, %67 ], [ %40, %39 ], [ %27, %34 ]
  %74 = shl i32 %73, 1
  %75 = and i32 %74, 32
  %76 = xor i32 %75, 32
  %77 = or i32 %76, %73
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re214ByteMapBuilder4MarkEii(%"class.re2::ByteMapBuilder"*, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp eq i32 %2, 255
  %6 = and i1 %4, %5
  br i1 %6, label %79, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  br i1 %13, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0
  store i32 %1, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 1
  store i32 %2, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 1
  %19 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %20 = bitcast %"struct.std::__1::pair"** %9 to i64*
  store i64 %19, i64* %20, align 8
  br label %79

21:                                               ; preds = %7
  %22 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %23 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %24 = bitcast %"class.std::__1::vector"* %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 3
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #17
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %34 = sub i64 %14, %25
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 1152921504606846975
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 2
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 2305843009213693951
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #17
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 2305843009213693951, %32 ]
  %47 = shl i64 %46, 3
  %48 = tail call i8* @_Znwm(i64 %47) #16
  %49 = bitcast i8* %48 to %"struct.std::__1::pair"*
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %"struct.std::__1::pair"* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %27
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %51
  %55 = ptrtoint %"struct.std::__1::pair"* %54 to i64
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 0
  store i32 %1, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %27, i32 1
  store i32 %2, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 1
  %59 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %61 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %60, align 8
  %62 = load i64, i64* %23, align 8
  %63 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 %66
  %68 = ptrtoint %"struct.std::__1::pair"* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %50
  %71 = bitcast %"struct.std::__1::pair"* %67 to i8*
  %72 = bitcast %"struct.std::__1::pair"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %64, i1 false) #15
  %73 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %60, align 8
  br label %74

74:                                               ; preds = %70, %50
  %75 = phi %"struct.std::__1::pair"* [ %61, %50 ], [ %73, %70 ]
  store i64 %68, i64* %24, align 8
  store i64 %59, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %76 = icmp eq %"struct.std::__1::pair"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.std::__1::pair"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #16
  br label %79

79:                                               ; preds = %15, %74, %77, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re214ByteMapBuilder5MergeEv(%"class.re2::ByteMapBuilder"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 1
  %12 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 2
  %13 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 3
  br label %25

14:                                               ; preds = %193
  %15 = bitcast %"class.std::__1::vector"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %9, %8 ]
  %19 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 3
  %20 = bitcast %"class.std::__1::vector"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::pair"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::pair"** %5 to i64*
  store i64 %18, i64* %24, align 8
  ret void

25:                                               ; preds = %10, %193
  %26 = phi %"struct.std::__1::pair"* [ %4, %10 ], [ %194, %193 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, -1
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %28, 0
  br i1 %32, label %33, label %88

33:                                               ; preds = %25
  %34 = sdiv i32 %29, 64
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 %35
  %37 = load i64, i64* %36, align 8
  %38 = srem i32 %29, 64
  %39 = zext i32 %38 to i64
  %40 = shl i64 1, %39
  %41 = and i64 %37, %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %88

43:                                               ; preds = %33
  %44 = or i64 %37, %40
  store i64 %44, i64* %36, align 8
  %45 = lshr i32 %28, 6
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 %46
  %48 = load i64, i64* %47, align 8
  %49 = and i32 %28, 63
  %50 = zext i32 %49 to i64
  %51 = shl i64 -1, %50
  %52 = and i64 %48, %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %43
  %55 = and i32 %28, -64
  %56 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #15, !range !2
  %57 = trunc i64 %56 to i32
  %58 = or i32 %55, %57
  br label %81

59:                                               ; preds = %43
  switch i32 %45, label %81 [
    i32 0, label %60
    i32 1, label %67
    i32 2, label %74
  ]

60:                                               ; preds = %59
  %61 = load i64, i64* %11, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = tail call i64 @llvm.cttz.i64(i64 %61, i1 true) #15, !range !2
  %65 = trunc i64 %64 to i32
  %66 = or i32 %65, 64
  br label %81

67:                                               ; preds = %60, %59
  %68 = load i64, i64* %12, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = tail call i64 @llvm.cttz.i64(i64 %68, i1 true) #15, !range !2
  %72 = trunc i64 %71 to i32
  %73 = or i32 %72, 128
  br label %81

74:                                               ; preds = %67, %59
  %75 = load i64, i64* %13, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = tail call i64 @llvm.cttz.i64(i64 %75, i1 true) #15, !range !2
  %79 = trunc i64 %78 to i32
  %80 = or i32 %79, 192
  br label %81

81:                                               ; preds = %54, %59, %63, %70, %74, %77
  %82 = phi i32 [ %58, %54 ], [ %80, %77 ], [ %73, %70 ], [ %66, %63 ], [ -1, %74 ], [ -1, %59 ]
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 1, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %29 to i64
  %87 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 1, i64 %86
  store i32 %85, i32* %87, align 4
  br label %88

88:                                               ; preds = %33, %81, %25
  %89 = sdiv i32 %31, 64
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 %90
  %92 = load i64, i64* %91, align 8
  %93 = srem i32 %31, 64
  %94 = zext i32 %93 to i64
  %95 = shl i64 1, %94
  %96 = and i64 %92, %95
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %144

98:                                               ; preds = %88
  %99 = or i64 %92, %95
  store i64 %99, i64* %91, align 8
  %100 = add nsw i32 %31, 1
  %101 = sdiv i32 %100, 64
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 %102
  %104 = load i64, i64* %103, align 8
  %105 = srem i32 %100, 64
  %106 = zext i32 %105 to i64
  %107 = shl i64 -1, %106
  %108 = and i64 %104, %107
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %98
  %111 = shl nsw i32 %101, 6
  %112 = tail call i64 @llvm.cttz.i64(i64 %108, i1 true) #15, !range !2
  %113 = trunc i64 %112 to i32
  %114 = or i32 %111, %113
  br label %137

115:                                              ; preds = %98
  switch i32 %101, label %137 [
    i32 0, label %116
    i32 1, label %123
    i32 2, label %130
  ]

116:                                              ; preds = %115
  %117 = load i64, i64* %11, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = tail call i64 @llvm.cttz.i64(i64 %117, i1 true) #15, !range !2
  %121 = trunc i64 %120 to i32
  %122 = or i32 %121, 64
  br label %137

123:                                              ; preds = %116, %115
  %124 = load i64, i64* %12, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %123
  %127 = tail call i64 @llvm.cttz.i64(i64 %124, i1 true) #15, !range !2
  %128 = trunc i64 %127 to i32
  %129 = or i32 %128, 128
  br label %137

130:                                              ; preds = %123, %115
  %131 = load i64, i64* %13, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %130
  %134 = tail call i64 @llvm.cttz.i64(i64 %131, i1 true) #15, !range !2
  %135 = trunc i64 %134 to i32
  %136 = or i32 %135, 192
  br label %137

137:                                              ; preds = %110, %115, %119, %126, %130, %133
  %138 = phi i32 [ %114, %110 ], [ %136, %133 ], [ %129, %126 ], [ %122, %119 ], [ -1, %130 ], [ -1, %115 ]
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %31 to i64
  %143 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 1, i64 %142
  store i32 %141, i32* %143, align 4
  br label %144

144:                                              ; preds = %88, %137
  br label %145

145:                                              ; preds = %144, %185
  %146 = phi i32 [ %192, %185 ], [ %28, %144 ]
  %147 = icmp slt i32 %146, 256
  br i1 %147, label %148, label %193

148:                                              ; preds = %145
  %149 = sdiv i32 %146, 64
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = srem i32 %146, 64
  %154 = zext i32 %153 to i64
  %155 = shl i64 -1, %154
  %156 = and i64 %152, %155
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %148
  %159 = shl nsw i32 %149, 6
  %160 = tail call i64 @llvm.cttz.i64(i64 %156, i1 true) #15, !range !2
  %161 = trunc i64 %160 to i32
  %162 = or i32 %159, %161
  br label %185

163:                                              ; preds = %148
  switch i32 %149, label %185 [
    i32 0, label %164
    i32 1, label %171
    i32 2, label %178
  ]

164:                                              ; preds = %163
  %165 = load i64, i64* %11, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %171, label %167

167:                                              ; preds = %164
  %168 = tail call i64 @llvm.cttz.i64(i64 %165, i1 true) #15, !range !2
  %169 = trunc i64 %168 to i32
  %170 = or i32 %169, 64
  br label %185

171:                                              ; preds = %164, %163
  %172 = load i64, i64* %12, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %171
  %175 = tail call i64 @llvm.cttz.i64(i64 %172, i1 true) #15, !range !2
  %176 = trunc i64 %175 to i32
  %177 = or i32 %176, 128
  br label %185

178:                                              ; preds = %171, %163
  %179 = load i64, i64* %13, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %178
  %182 = tail call i64 @llvm.cttz.i64(i64 %179, i1 true) #15, !range !2
  %183 = trunc i64 %182 to i32
  %184 = or i32 %183, 192
  br label %185

185:                                              ; preds = %158, %163, %167, %174, %178, %181
  %186 = phi i32 [ %162, %158 ], [ %184, %181 ], [ %177, %174 ], [ %170, %167 ], [ -1, %178 ], [ -1, %163 ]
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 1, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = tail call i32 @_ZN3re214ByteMapBuilder7RecolorEi(%"class.re2::ByteMapBuilder"* %0, i32 %189)
  store i32 %190, i32* %188, align 4
  %191 = icmp eq i32 %186, %31
  %192 = add nsw i32 %186, 1
  br i1 %191, label %193, label %145

193:                                              ; preds = %185, %145
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %195 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %196 = icmp eq %"struct.std::__1::pair"* %194, %195
  br i1 %196, label %14, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re214ByteMapBuilder7RecolorEi(%"class.re2::ByteMapBuilder"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %10 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  br i1 %8, label %23, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"struct.std::__1::pair"* [ %21, %20 ], [ %5, %2 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %1
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %1
  %19 = or i1 %15, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 1
  %22 = icmp eq %"struct.std::__1::pair"* %21, %7
  br i1 %22, label %29, label %11

23:                                               ; preds = %11, %2
  %24 = phi %"struct.std::__1::pair"* [ %5, %2 ], [ %12, %11 ]
  %25 = icmp eq %"struct.std::__1::pair"* %24, %7
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  br label %98

29:                                               ; preds = %20, %23
  %30 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 8
  %33 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %34 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %33, align 8
  %35 = icmp ult %"struct.std::__1::pair"* %7, %34
  %36 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  br i1 %35, label %37, label %43

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 0
  store i32 %1, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 1
  store i32 %31, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 1
  %41 = ptrtoint %"struct.std::__1::pair"* %40 to i64
  %42 = bitcast %"struct.std::__1::pair"** %6 to i64*
  store i64 %41, i64* %42, align 8
  br label %98

43:                                               ; preds = %29
  %44 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %45 = bitcast %"class.std::__1::vector"* %3 to i64*
  %46 = sub i64 %9, %10
  %47 = ashr exact i64 %46, 3
  %48 = add nsw i64 %47, 1
  %49 = icmp ugt i64 %48, 2305843009213693951
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #17
  unreachable

52:                                               ; preds = %43
  %53 = bitcast %"struct.std::__1::pair"** %33 to i64*
  %54 = sub i64 %36, %10
  %55 = ashr exact i64 %54, 3
  %56 = icmp ult i64 %55, 1152921504606846975
  br i1 %56, label %57, label %65

57:                                               ; preds = %52
  %58 = ashr exact i64 %54, 2
  %59 = icmp ult i64 %58, %48
  %60 = select i1 %59, i64 %48, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = icmp ugt i64 %60, 2305843009213693951
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @abort() #17
  unreachable

65:                                               ; preds = %62, %52
  %66 = phi i64 [ %60, %62 ], [ 2305843009213693951, %52 ]
  %67 = shl i64 %66, 3
  %68 = tail call i8* @_Znwm(i64 %67) #16
  %69 = bitcast i8* %68 to %"struct.std::__1::pair"*
  br label %70

70:                                               ; preds = %65, %57
  %71 = phi i64 [ %66, %65 ], [ 0, %57 ]
  %72 = phi %"struct.std::__1::pair"* [ %69, %65 ], [ null, %57 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 %47
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 %71
  %75 = ptrtoint %"struct.std::__1::pair"* %74 to i64
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 0
  store i32 %1, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 %47, i32 1
  store i32 %31, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 1
  %79 = ptrtoint %"struct.std::__1::pair"* %78 to i64
  %80 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %81 = load i64, i64* %44, align 8
  %82 = ptrtoint %"struct.std::__1::pair"* %80 to i64
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 3
  %85 = sub nsw i64 0, %84
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 %85
  %87 = ptrtoint %"struct.std::__1::pair"* %86 to i64
  %88 = icmp sgt i64 %83, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %70
  %90 = bitcast %"struct.std::__1::pair"* %86 to i8*
  %91 = bitcast %"struct.std::__1::pair"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 %83, i1 false) #15
  %92 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %93

93:                                               ; preds = %89, %70
  %94 = phi %"struct.std::__1::pair"* [ %80, %70 ], [ %92, %89 ]
  store i64 %87, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %75, i64* %53, align 8
  %95 = icmp eq %"struct.std::__1::pair"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %93
  %97 = bitcast %"struct.std::__1::pair"* %94 to i8*
  tail call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %37, %93, %96, %26
  %99 = phi i32 [ %28, %26 ], [ %31, %96 ], [ %31, %93 ], [ %31, %37 ]
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re214ByteMapBuilder5BuildEPhPi(%"class.re2::ByteMapBuilder"*, i8* nocapture, i32* nocapture) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 1
  %6 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 2
  %7 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 3
  br label %13

8:                                                ; preds = %66
  %9 = trunc i64 %68 to i32
  br label %10

10:                                               ; preds = %8, %51
  %11 = phi i32 [ %14, %51 ], [ %9, %8 ]
  %12 = icmp slt i32 %11, 256
  br i1 %12, label %13, label %70

13:                                               ; preds = %3, %10
  %14 = phi i32 [ 0, %3 ], [ %11, %10 ]
  %15 = sdiv i32 %14, 64
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 0, i32 0, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = srem i32 %14, 64
  %20 = zext i32 %19 to i64
  %21 = shl i64 -1, %20
  %22 = and i64 %18, %21
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %13
  %25 = shl nsw i32 %15, 6
  %26 = tail call i64 @llvm.cttz.i64(i64 %22, i1 true) #15, !range !2
  %27 = trunc i64 %26 to i32
  %28 = or i32 %25, %27
  br label %51

29:                                               ; preds = %13
  switch i32 %15, label %51 [
    i32 0, label %30
    i32 1, label %37
    i32 2, label %44
  ]

30:                                               ; preds = %29
  %31 = load i64, i64* %5, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = tail call i64 @llvm.cttz.i64(i64 %31, i1 true) #15, !range !2
  %35 = trunc i64 %34 to i32
  %36 = or i32 %35, 64
  br label %51

37:                                               ; preds = %30, %29
  %38 = load i64, i64* %6, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #15, !range !2
  %42 = trunc i64 %41 to i32
  %43 = or i32 %42, 128
  br label %51

44:                                               ; preds = %37, %29
  %45 = load i64, i64* %7, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = tail call i64 @llvm.cttz.i64(i64 %45, i1 true) #15, !range !2
  %49 = trunc i64 %48 to i32
  %50 = or i32 %49, 192
  br label %51

51:                                               ; preds = %24, %29, %33, %40, %44, %47
  %52 = phi i32 [ %28, %24 ], [ %50, %47 ], [ %43, %40 ], [ %36, %33 ], [ -1, %44 ], [ -1, %29 ]
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %0, i64 0, i32 1, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = tail call i32 @_ZN3re214ByteMapBuilder7RecolorEi(%"class.re2::ByteMapBuilder"* %0, i32 %55)
  %57 = icmp sgt i32 %14, %52
  br i1 %57, label %10, label %58

58:                                               ; preds = %51
  %59 = trunc i32 %56 to i8
  %60 = sext i32 %14 to i64
  %61 = getelementptr i8, i8* %1, i64 %60
  %62 = icmp sgt i64 %53, %60
  %63 = select i1 %62, i64 %53, i64 %60
  %64 = add nsw i64 %63, 1
  %65 = sub nsw i64 %64, %60
  call void @llvm.memset.p0i8.i64(i8* align 1 %61, i8 %59, i64 %65, i1 false)
  br label %66

66:                                               ; preds = %58, %66
  %67 = phi i64 [ %60, %58 ], [ %68, %66 ]
  %68 = add nsw i64 %67, 1
  %69 = icmp slt i64 %67, %53
  br i1 %69, label %66, label %8

70:                                               ; preds = %10
  %71 = load i32, i32* %4, align 8
  store i32 %71, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog14ComputeByteMapEv(%"class.re2::Prog"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.re2::ByteMapBuilder", align 8
  %3 = bitcast %"class.re2::ByteMapBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1112, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 1
  %5 = bitcast [256 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 1032, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #15
  %6 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 3
  %7 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 0, i32 0, i64 3
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #15
  store i64 -9223372036854775808, i64* %7, align 8
  %9 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 1, i64 255
  store i32 256, i32* %9, align 4
  %10 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 2
  store i32 257, i32* %10, align 8
  %11 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  br label %37

16:                                               ; preds = %155, %1
  %17 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 21, i64 0
  %18 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 8
  call void @_ZN3re214ByteMapBuilder5BuildEPhPi(%"class.re2::ByteMapBuilder"* nonnull %2, i8* %17, i32* %18)
  %19 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 4, i32 0, i32 0
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = ptrtoint %"struct.std::__1::pair"* %20 to i64
  %24 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 4, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"struct.std::__1::pair"* %20 to i8*
  call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %22, %16
  %28 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 3, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = icmp eq %"struct.std::__1::pair"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  %33 = getelementptr inbounds %"class.re2::ByteMapBuilder", %"class.re2::ByteMapBuilder"* %2, i64 0, i32 3, i32 0, i32 1
  %34 = bitcast %"struct.std::__1::pair"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"struct.std::__1::pair"* %29 to i8*
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %27, %31
  call void @llvm.lifetime.end.p0i8(i64 1112, i8* nonnull %3) #15
  ret void

37:                                               ; preds = %14, %155
  %38 = phi i64 [ 0, %14 ], [ %158, %155 ]
  %39 = phi i8 [ 0, %14 ], [ %157, %155 ]
  %40 = phi i8 [ 0, %14 ], [ %156, %155 ]
  %41 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %15, align 8
  %42 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %41, i64 %38, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 7
  switch i32 %44, label %155 [
    i32 2, label %45
    i32 4, label %86
  ]

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %41, i64 %38, i32 1
  %47 = bitcast %union.anon* %46 to i8*
  %48 = load i8, i8* %47, align 4
  %49 = zext i8 %48 to i32
  %50 = bitcast %union.anon* %46 to %struct.anon*
  %51 = getelementptr inbounds %struct.anon, %struct.anon* %50, i64 0, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  call void @_ZN3re214ByteMapBuilder4MarkEii(%"class.re2::ByteMapBuilder"* nonnull %2, i32 %49, i32 %53)
  %54 = getelementptr inbounds %struct.anon, %struct.anon* %50, i64 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = and i16 %55, 1
  %57 = icmp ne i16 %56, 0
  %58 = icmp ult i8 %48, 123
  %59 = and i1 %58, %57
  %60 = icmp ugt i8 %52, 96
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %71

62:                                               ; preds = %45
  %63 = icmp ugt i32 %49, 97
  %64 = select i1 %63, i32 %49, i32 97
  %65 = icmp ult i32 %53, 122
  %66 = select i1 %65, i32 %53, i32 122
  %67 = icmp sgt i32 %64, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = add nsw i32 %64, -32
  %70 = add nsw i32 %66, -32
  call void @_ZN3re214ByteMapBuilder4MarkEii(%"class.re2::ByteMapBuilder"* nonnull %2, i32 %69, i32 %70)
  br label %71

71:                                               ; preds = %68, %62, %45
  %72 = load i32, i32* %42, align 4
  %73 = and i32 %72, 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %85

75:                                               ; preds = %71
  %76 = add nuw nsw i64 %38, 1
  %77 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %15, align 8
  %78 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %77, i64 %76, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 7
  %81 = icmp eq i32 %80, 2
  %82 = xor i32 %79, %72
  %83 = icmp ult i32 %82, 16
  %84 = and i1 %81, %83
  br i1 %84, label %155, label %85

85:                                               ; preds = %71, %75
  call void @_ZN3re214ByteMapBuilder5MergeEv(%"class.re2::ByteMapBuilder"* nonnull %2)
  br label %155

86:                                               ; preds = %37
  %87 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %41, i64 %38, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 3
  %90 = icmp ne i32 %89, 0
  %91 = and i8 %39, 1
  %92 = icmp eq i8 %91, 0
  %93 = and i1 %92, %90
  br i1 %93, label %94, label %96

94:                                               ; preds = %86
  call void @_ZN3re214ByteMapBuilder4MarkEii(%"class.re2::ByteMapBuilder"* nonnull %2, i32 10, i32 10)
  call void @_ZN3re214ByteMapBuilder5MergeEv(%"class.re2::ByteMapBuilder"* nonnull %2)
  %95 = load i32, i32* %87, align 4
  br label %96

96:                                               ; preds = %86, %94
  %97 = phi i32 [ %95, %94 ], [ %88, %86 ]
  %98 = phi i8 [ 1, %94 ], [ %39, %86 ]
  %99 = and i32 %97, 48
  %100 = icmp ne i32 %99, 0
  %101 = and i8 %40, 1
  %102 = icmp eq i8 %101, 0
  %103 = and i1 %102, %100
  br i1 %103, label %104, label %155

104:                                              ; preds = %96, %152
  %105 = phi i32 [ %153, %152 ], [ 0, %96 ]
  %106 = add nsw i32 %105, 1
  %107 = icmp slt i32 %106, 256
  %108 = trunc i32 %105 to i8
  %109 = and i8 %108, -33
  %110 = add i8 %109, -65
  br i1 %107, label %111, label %136

111:                                              ; preds = %104
  %112 = icmp ult i8 %110, 26
  %113 = add i8 %108, -48
  %114 = icmp ult i8 %113, 10
  %115 = icmp eq i8 %108, 95
  %116 = or i1 %115, %114
  %117 = or i1 %112, %116
  br label %119

118:                                              ; preds = %152
  call void @_ZN3re214ByteMapBuilder5MergeEv(%"class.re2::ByteMapBuilder"* nonnull %2)
  br label %162

119:                                              ; preds = %133, %111
  %120 = phi i32 [ %106, %111 ], [ %134, %133 ]
  %121 = phi i32 [ %105, %111 ], [ %120, %133 ]
  %122 = trunc i32 %120 to i8
  %123 = and i8 %122, -33
  %124 = add i8 %123, -65
  %125 = icmp ult i8 %124, 26
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  br i1 %117, label %133, label %141

127:                                              ; preds = %119
  %128 = add i8 %122, -48
  %129 = icmp ult i8 %128, 10
  %130 = icmp eq i8 %122, 95
  %131 = or i1 %130, %129
  %132 = xor i1 %131, %117
  br i1 %132, label %136, label %133

133:                                              ; preds = %127, %126
  %134 = add i32 %120, 1
  %135 = icmp eq i32 %134, 256
  br i1 %135, label %136, label %119

136:                                              ; preds = %127, %133, %104
  %137 = phi i8 [ -1, %104 ], [ %108, %133 ], [ %108, %127 ]
  %138 = phi i32 [ 255, %104 ], [ %121, %127 ], [ 255, %133 ]
  %139 = phi i32 [ %106, %104 ], [ %120, %127 ], [ 256, %133 ]
  %140 = icmp ult i8 %110, 26
  br i1 %140, label %149, label %141

141:                                              ; preds = %126, %136
  %142 = phi i32 [ %139, %136 ], [ %120, %126 ]
  %143 = phi i32 [ %138, %136 ], [ %121, %126 ]
  %144 = phi i8 [ %137, %136 ], [ %108, %126 ]
  %145 = add i8 %144, -48
  %146 = icmp ult i8 %145, 10
  %147 = icmp eq i8 %144, 95
  %148 = or i1 %147, %146
  br i1 %148, label %149, label %152

149:                                              ; preds = %136, %141
  %150 = phi i32 [ %143, %141 ], [ %138, %136 ]
  %151 = phi i32 [ %142, %141 ], [ %139, %136 ]
  call void @_ZN3re214ByteMapBuilder4MarkEii(%"class.re2::ByteMapBuilder"* nonnull %2, i32 %105, i32 %150)
  br label %152

152:                                              ; preds = %141, %149
  %153 = phi i32 [ %142, %141 ], [ %151, %149 ]
  %154 = icmp slt i32 %153, 256
  br i1 %154, label %104, label %118

155:                                              ; preds = %210, %75, %37, %85, %96
  %156 = phi i8 [ %40, %96 ], [ %40, %85 ], [ %40, %37 ], [ %40, %75 ], [ 1, %210 ]
  %157 = phi i8 [ %98, %96 ], [ %39, %85 ], [ %39, %37 ], [ %39, %75 ], [ %98, %210 ]
  %158 = add nuw nsw i64 %38, 1
  %159 = load i32, i32* %11, align 8
  %160 = sext i32 %159 to i64
  %161 = icmp slt i64 %158, %160
  br i1 %161, label %37, label %16

162:                                              ; preds = %207, %118
  %163 = phi i32 [ 0, %118 ], [ %208, %207 ]
  %164 = add nsw i32 %163, 1
  %165 = icmp slt i32 %164, 256
  %166 = trunc i32 %163 to i8
  %167 = and i8 %166, -33
  %168 = add i8 %167, -65
  br i1 %165, label %169, label %193

169:                                              ; preds = %162
  %170 = icmp ult i8 %168, 26
  %171 = add i8 %166, -48
  %172 = icmp ult i8 %171, 10
  %173 = icmp eq i8 %166, 95
  %174 = or i1 %173, %172
  %175 = or i1 %170, %174
  br label %176

176:                                              ; preds = %190, %169
  %177 = phi i32 [ %164, %169 ], [ %191, %190 ]
  %178 = phi i32 [ %163, %169 ], [ %177, %190 ]
  %179 = trunc i32 %177 to i8
  %180 = and i8 %179, -33
  %181 = add i8 %180, -65
  %182 = icmp ult i8 %181, 26
  br i1 %182, label %189, label %183

183:                                              ; preds = %176
  %184 = add i8 %179, -48
  %185 = icmp ult i8 %184, 10
  %186 = icmp eq i8 %179, 95
  %187 = or i1 %186, %185
  %188 = xor i1 %187, %175
  br i1 %188, label %193, label %190

189:                                              ; preds = %176
  br i1 %175, label %190, label %198

190:                                              ; preds = %189, %183
  %191 = add i32 %177, 1
  %192 = icmp eq i32 %191, 256
  br i1 %192, label %193, label %176

193:                                              ; preds = %183, %190, %162
  %194 = phi i8 [ -1, %162 ], [ %166, %190 ], [ %166, %183 ]
  %195 = phi i32 [ 255, %162 ], [ %178, %183 ], [ 255, %190 ]
  %196 = phi i32 [ %164, %162 ], [ %177, %183 ], [ 256, %190 ]
  %197 = icmp ult i8 %168, 26
  br i1 %197, label %207, label %198

198:                                              ; preds = %189, %193
  %199 = phi i32 [ %196, %193 ], [ %177, %189 ]
  %200 = phi i32 [ %195, %193 ], [ %178, %189 ]
  %201 = phi i8 [ %194, %193 ], [ %166, %189 ]
  %202 = add i8 %201, -48
  %203 = icmp ult i8 %202, 10
  %204 = icmp eq i8 %201, 95
  %205 = or i1 %204, %203
  br i1 %205, label %207, label %206

206:                                              ; preds = %198
  call void @_ZN3re214ByteMapBuilder4MarkEii(%"class.re2::ByteMapBuilder"* nonnull %2, i32 %163, i32 %200)
  br label %207

207:                                              ; preds = %193, %198, %206
  %208 = phi i32 [ %199, %198 ], [ %199, %206 ], [ %196, %193 ]
  %209 = icmp slt i32 %208, 256
  br i1 %209, label %162, label %210

210:                                              ; preds = %207
  call void @_ZN3re214ByteMapBuilder5MergeEv(%"class.re2::ByteMapBuilder"* nonnull %2)
  br label %155
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog7FlattenEv(%"class.re2::Prog"*) local_unnamed_addr #3 align 2 {
  %2 = alloca i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, align 8
  %3 = alloca %"class.re2::SparseSetT", align 8
  %4 = alloca %"class.std::__1::vector.30", align 16
  %5 = alloca %"class.re2::SparseArray", align 8
  %6 = alloca %"class.re2::SparseArray", align 8
  %7 = alloca %"class.std::__1::vector.42", align 8
  %8 = alloca %"class.std::__1::vector.30", align 8
  %9 = alloca %"class.std::__1::vector.49", align 8
  %10 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %458

13:                                               ; preds = %1
  store i8 1, i8* %10, align 1
  %14 = bitcast %"class.re2::SparseSetT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 0
  store i32 0, i32* %17, align 8
  %18 = icmp slt i32 %16, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  tail call void @abort() #17
  unreachable

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2
  %22 = sext i32 %16 to i64
  %23 = shl nsw i64 %22, 2
  %24 = tail call i8* @_Znwm(i64 %23) #16
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.re2::PODArray.18"* %21 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %16, i32* %27, align 8
  %28 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3
  %29 = tail call i8* @_Znwm(i64 %23) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.re2::PODArray.18"* %28 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %16, i32* %32, align 8
  %33 = bitcast %"class.std::__1::vector.30"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #15
  %36 = icmp eq i32 %16, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast i32** %38 to i64*
  %40 = tail call i8* @_Znwm(i64 %23) #16
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds i32, i32* %41, i64 %22
  %43 = ptrtoint i32* %42 to i64
  %44 = insertelement <2 x i8*> undef, i8* %40, i32 0
  %45 = shufflevector <2 x i8*> %44, <2 x i8*> undef, <2 x i32> zeroinitializer
  %46 = ptrtoint <2 x i8*> %45 to <2 x i64>
  %47 = bitcast %"class.std::__1::vector.30"* %4 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %47, align 16
  store i64 %43, i64* %39, align 16
  br label %48

48:                                               ; preds = %20, %37
  %49 = bitcast %"class.re2::SparseArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 40, i1 false)
  %50 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 2
  %52 = tail call i8* @_Znwm(i64 %23) #16
  %53 = ptrtoint i8* %52 to i64
  %54 = bitcast %"class.re2::PODArray.18"* %51 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %16, i32* %55, align 8
  %56 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 3
  %57 = shl nsw i64 %22, 3
  %58 = tail call i8* @_Znwm(i64 %57) #16
  %59 = ptrtoint i8* %58 to i64
  %60 = bitcast %"class.re2::PODArray.36"* %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %16, i32* %61, align 8
  %62 = bitcast %"class.re2::SparseArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 40, i1 false)
  %63 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 2
  %65 = tail call i8* @_Znwm(i64 %23) #16
  %66 = ptrtoint i8* %65 to i64
  %67 = bitcast %"class.re2::PODArray.18"* %64 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %16, i32* %68, align 8
  %69 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 3
  %70 = tail call i8* @_Znwm(i64 %57) #16
  %71 = ptrtoint i8* %70 to i64
  %72 = bitcast %"class.re2::PODArray.36"* %69 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %16, i32* %73, align 8
  %74 = bitcast %"class.std::__1::vector.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #15
  %75 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #15
  call void @_ZN3re24Prog14MarkSuccessorsEPNS_11SparseArrayIiEES3_PNSt3__16vectorINS5_IiNS4_9allocatorIiEEEENS6_IS8_EEEEPNS_10SparseSetTIvEEPS8_(%"class.re2::Prog"* %0, %"class.re2::SparseArray"* nonnull %5, %"class.re2::SparseArray"* nonnull %6, %"class.std::__1::vector.42"* nonnull %7, %"class.re2::SparseSetT"* nonnull %3, %"class.std::__1::vector.30"* nonnull %4)
  %77 = load i32, i32* %50, align 8
  %78 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %78, align 8
  %80 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %79, null
  %81 = xor i1 %80, true
  %82 = load i32, i32* %61, align 8
  %83 = icmp slt i32 %82, 0
  %84 = and i1 %83, %81
  br i1 %84, label %85, label %86

85:                                               ; preds = %48
  call void @abort() #17
  unreachable

86:                                               ; preds = %48
  %87 = xor i1 %83, true
  %88 = or i1 %80, %87
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  call void @abort() #17
  unreachable

90:                                               ; preds = %86
  %91 = sext i32 %82 to i64
  %92 = shl nsw i64 %91, 3
  %93 = select i1 %80, i64 0, i64 %92
  %94 = call i8* @_Znwm(i64 %93) #16
  %95 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %96 = icmp eq i32 %82, 0
  %97 = or i1 %80, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %90
  %99 = sext i32 %82 to i64
  %100 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %79 to i8*
  %101 = shl nuw nsw i64 %99, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %94, i8* nonnull align 4 %100, i64 %101, i1 false) #15
  br label %102

102:                                              ; preds = %90, %98
  %103 = bitcast i8* %94 to %"class.re2::SparseArray<int>::IndexValue"*
  %104 = sext i32 %77 to i64
  %105 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %103, i64 %104
  %106 = bitcast i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  store i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)* @_ZN3re211SparseArrayIiE4lessERKNS1_10IndexValueES4_, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  call void @_ZNSt3__16__sortIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* nonnull %103, %"class.re2::SparseArray<int>::IndexValue"* %105, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** nonnull dereferenceable(8) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  %107 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %105, i64 -1
  %108 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %107, %103
  br i1 %108, label %112, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 6
  %111 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 5
  br label %176

112:                                              ; preds = %186, %102
  %113 = bitcast %"class.std::__1::vector.30"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #15
  %114 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = load i32, i32* %50, align 8
  %118 = sext i32 %117 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 24, i1 false) #15
  %119 = icmp eq i32 %117, 0
  br i1 %119, label %139, label %120

120:                                              ; preds = %112
  %121 = icmp slt i32 %117, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = bitcast %"class.std::__1::vector.30"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %123) #17
  unreachable

124:                                              ; preds = %120
  %125 = shl nsw i64 %118, 2
  %126 = call i8* @_Znwm(i64 %125) #16
  %127 = bitcast i8* %126 to i32*
  %128 = bitcast %"class.std::__1::vector.30"* %8 to i8**
  store i8* %126, i8** %128, align 8
  %129 = getelementptr inbounds i32, i32* %127, i64 %118
  store i32* %129, i32** %116, align 8
  %130 = bitcast i32** %115 to i64*
  %131 = ptrtoint i8* %126 to i64
  %132 = add nsw i64 %118, -1
  %133 = getelementptr i32, i32* %127, i64 %132
  %134 = ptrtoint i32* %133 to i64
  %135 = sub i64 4, %131
  %136 = add i64 %135, %134
  %137 = and i64 %136, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %126, i8 0, i64 %137, i1 false) #15
  %138 = ptrtoint i32* %129 to i64
  store i64 %138, i64* %130, align 8
  br label %139

139:                                              ; preds = %112, %124
  %140 = phi i64 [ 0, %112 ], [ %131, %124 ]
  %141 = phi i64 [ 0, %112 ], [ %138, %124 ]
  %142 = phi i32* [ null, %112 ], [ %127, %124 ]
  %143 = bitcast %"class.std::__1::vector.49"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #15
  %144 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %9, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %9, i64 0, i32 0, i32 1
  %146 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 0, i64 24, i1 false) #15
  %147 = load i32, i32* %15, align 8
  %148 = sext i32 %147 to i64
  %149 = bitcast %"class.re2::Prog::Inst"** %146 to i64*
  %150 = bitcast %"class.std::__1::vector.49"* %9 to i64*
  %151 = icmp eq i32 %147, 0
  br i1 %151, label %165, label %152

152:                                              ; preds = %139
  %153 = icmp slt i32 %147, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %152
  call void @abort() #17
  unreachable

155:                                              ; preds = %152
  %156 = bitcast %"class.re2::Prog::Inst"** %145 to i64*
  %157 = shl nsw i64 %148, 3
  %158 = call i8* @_Znwm(i64 %157) #16
  %159 = bitcast i8* %158 to %"class.re2::Prog::Inst"*
  %160 = ptrtoint i8* %158 to i64
  %161 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %159, i64 %148
  %162 = ptrtoint %"class.re2::Prog::Inst"* %161 to i64
  %163 = ptrtoint i8* %158 to i64
  store i64 %163, i64* %150, align 8
  store i64 %160, i64* %156, align 8
  store i64 %162, i64* %149, align 8
  %164 = bitcast i8* %158 to %"class.re2::Prog::Inst"*
  br label %165

165:                                              ; preds = %155, %139
  %166 = phi i8* [ null, %139 ], [ %158, %155 ]
  %167 = phi %"class.re2::Prog::Inst"* [ null, %139 ], [ %164, %155 ]
  %168 = phi i64 [ 0, %139 ], [ %163, %155 ]
  %169 = phi i64 [ 0, %139 ], [ %160, %155 ]
  br i1 %119, label %170, label %173

170:                                              ; preds = %165
  %171 = bitcast i32** %115 to i64*
  %172 = bitcast %"class.re2::Prog::Inst"** %145 to i64*
  br label %198

173:                                              ; preds = %165
  %174 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %78, align 8
  %175 = bitcast %"class.re2::Prog::Inst"** %145 to i64*
  br label %217

176:                                              ; preds = %109, %186
  %177 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %107, %109 ], [ %187, %186 ]
  %178 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %177, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = load i32, i32* %110, align 4
  %181 = icmp eq i32 %179, %180
  br i1 %181, label %186, label %182

182:                                              ; preds = %176
  %183 = load i32, i32* %111, align 8
  %184 = icmp eq i32 %179, %183
  br i1 %184, label %186, label %185

185:                                              ; preds = %182
  call void @_ZN3re24Prog13MarkDominatorEiPNS_11SparseArrayIiEES3_PNSt3__16vectorINS5_IiNS4_9allocatorIiEEEENS6_IS8_EEEEPNS_10SparseSetTIvEEPS8_(%"class.re2::Prog"* %0, i32 %179, %"class.re2::SparseArray"* nonnull %5, %"class.re2::SparseArray"* nonnull %6, %"class.std::__1::vector.42"* nonnull %7, %"class.re2::SparseSetT"* nonnull %3, %"class.std::__1::vector.30"* nonnull %4)
  br label %186

186:                                              ; preds = %182, %176, %185
  %187 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %177, i64 -1
  %188 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %187, %103
  br i1 %188, label %112, label %176

189:                                              ; preds = %217
  %190 = bitcast i32** %115 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::vector.30"* %8 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = load i64, i64* %175, align 8
  %195 = load i64, i64* %150, align 8
  %196 = inttoptr i64 %195 to %"class.re2::Prog::Inst"*
  %197 = inttoptr i64 %195 to i8*
  br label %198

198:                                              ; preds = %170, %189
  %199 = phi i64* [ %172, %170 ], [ %175, %189 ]
  %200 = phi i64* [ %171, %170 ], [ %190, %189 ]
  %201 = phi i8* [ %166, %170 ], [ %197, %189 ]
  %202 = phi %"class.re2::Prog::Inst"* [ %167, %170 ], [ %196, %189 ]
  %203 = phi i64 [ %168, %170 ], [ %195, %189 ]
  %204 = phi i64 [ %169, %170 ], [ %194, %189 ]
  %205 = phi i64 [ %140, %170 ], [ %193, %189 ]
  %206 = phi i64 [ %141, %170 ], [ %191, %189 ]
  %207 = sub i64 %206, %205
  %208 = lshr exact i64 %207, 2
  %209 = trunc i64 %208 to i32
  %210 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 12
  store i32 %209, i32* %210, align 8
  %211 = getelementptr %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 13, i64 0
  %212 = bitcast i32* %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %212, i8 0, i64 32, i1 false)
  %213 = sub i64 %204, %203
  %214 = lshr exact i64 %213, 3
  %215 = trunc i64 %214 to i32
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %265, label %258

217:                                              ; preds = %251, %173
  %218 = phi i32* [ %142, %173 ], [ %254, %251 ]
  %219 = phi i64 [ %168, %173 ], [ %253, %251 ]
  %220 = phi i64 [ %169, %173 ], [ %252, %251 ]
  %221 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %174, %173 ], [ %245, %251 ]
  %222 = sub i64 %220, %219
  %223 = lshr exact i64 %222, 3
  %224 = trunc i64 %223 to i32
  %225 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %221, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %218, i64 %227
  store i32 %224, i32* %228, align 4
  %229 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %221, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  call void @_ZN3re24Prog8EmitListEiPNS_11SparseArrayIiEEPNSt3__16vectorINS0_4InstENS4_9allocatorIS6_EEEEPNS_10SparseSetTIvEEPNS5_IiNS7_IiEEEE(%"class.re2::Prog"* %0, i32 %230, %"class.re2::SparseArray"* nonnull %5, %"class.std::__1::vector.49"* nonnull %9, %"class.re2::SparseSetT"* nonnull %3, %"class.std::__1::vector.30"* nonnull %4)
  %231 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %145, align 8
  %232 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %231, i64 -1, i32 0
  %233 = load i32, i32* %232, align 4
  %234 = or i32 %233, 8
  store i32 %234, i32* %232, align 4
  %235 = load i32, i32* %225, align 4
  %236 = sext i32 %235 to i64
  %237 = load i32*, i32** %114, align 8
  %238 = getelementptr inbounds i32, i32* %237, i64 %236
  %239 = load i32, i32* %238, align 4
  %240 = load i64, i64* %175, align 8
  %241 = load i64, i64* %150, align 8
  %242 = sub i64 %240, %241
  %243 = lshr exact i64 %242, 3
  %244 = trunc i64 %243 to i32
  call void @_ZN3re24Prog12ComputeHintsEPNSt3__16vectorINS0_4InstENS1_9allocatorIS3_EEEEii(%"class.re2::Prog"* undef, %"class.std::__1::vector.49"* nonnull %9, i32 %239, i32 %244)
  %245 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %221, i64 1
  %246 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %78, align 8
  %247 = load i32, i32* %50, align 8
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %246, i64 %248
  %250 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %245, %249
  br i1 %250, label %189, label %251

251:                                              ; preds = %217
  %252 = load i64, i64* %175, align 8
  %253 = load i64, i64* %150, align 8
  %254 = load i32*, i32** %114, align 8
  br label %217

255:                                              ; preds = %286
  %256 = lshr exact i64 %296, 3
  %257 = trunc i64 %256 to i32
  br label %258

258:                                              ; preds = %255, %198
  %259 = phi i8* [ %288, %255 ], [ %201, %198 ]
  %260 = phi i64 [ %296, %255 ], [ %213, %198 ]
  %261 = phi i32 [ %257, %255 ], [ %215, %198 ]
  %262 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 6
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %311, label %301

265:                                              ; preds = %198, %286
  %266 = phi i8* [ %288, %286 ], [ %201, %198 ]
  %267 = phi i64 [ %289, %286 ], [ %203, %198 ]
  %268 = phi %"class.re2::Prog::Inst"* [ %300, %286 ], [ %202, %198 ]
  %269 = phi i64 [ %294, %286 ], [ 0, %198 ]
  %270 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %268, i64 %269, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = and i32 %271, 7
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %286, label %274

274:                                              ; preds = %265
  %275 = lshr i32 %271, 4
  %276 = zext i32 %275 to i64
  %277 = load i32*, i32** %114, align 8
  %278 = getelementptr inbounds i32, i32* %277, i64 %276
  %279 = load i32, i32* %278, align 4
  %280 = shl i32 %279, 4
  %281 = and i32 %271, 15
  %282 = or i32 %281, %280
  store i32 %282, i32* %270, align 4
  %283 = load i64, i64* %150, align 8
  %284 = inttoptr i64 %283 to i8*
  %285 = and i32 %271, 7
  br label %286

286:                                              ; preds = %265, %274
  %287 = phi i32 [ 1, %265 ], [ %285, %274 ]
  %288 = phi i8* [ %266, %265 ], [ %284, %274 ]
  %289 = phi i64 [ %267, %265 ], [ %283, %274 ]
  %290 = zext i32 %287 to i64
  %291 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 13, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = add nsw i32 %292, 1
  store i32 %293, i32* %291, align 4
  %294 = add nuw nsw i64 %269, 1
  %295 = load i64, i64* %199, align 8
  %296 = sub i64 %295, %289
  %297 = shl i64 %296, 29
  %298 = ashr exact i64 %297, 32
  %299 = icmp slt i64 %294, %298
  %300 = inttoptr i64 %289 to %"class.re2::Prog::Inst"*
  br i1 %299, label %265, label %255

301:                                              ; preds = %258
  %302 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 5
  %303 = load i32, i32* %302, align 8
  %304 = icmp eq i32 %263, %303
  %305 = load i32*, i32** %114, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 1
  %307 = load i32, i32* %306, align 4
  store i32 %307, i32* %262, align 4
  %308 = getelementptr inbounds i32, i32* %305, i64 2
  %309 = select i1 %304, i32* %306, i32* %308
  %310 = load i32, i32* %309, align 4
  store i32 %310, i32* %302, align 8
  br label %311

311:                                              ; preds = %301, %258
  store i32 %261, i32* %15, align 8
  %312 = icmp slt i32 %261, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %311
  call void @abort() #17
  unreachable

314:                                              ; preds = %311
  %315 = shl i64 %260, 29
  %316 = ashr exact i64 %315, 29
  %317 = call i8* @_Znwm(i64 %316) #16
  %318 = ptrtoint i8* %317 to i64
  %319 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16
  %320 = getelementptr inbounds %"class.re2::PODArray.6", %"class.re2::PODArray.6"* %319, i64 0, i32 0, i32 0, i32 0, i32 0
  %321 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %320, align 8
  %322 = bitcast %"class.re2::PODArray.6"* %319 to i64*
  store i64 %318, i64* %322, align 8
  %323 = icmp eq %"class.re2::Prog::Inst"* %321, null
  br i1 %323, label %331, label %324

324:                                              ; preds = %314
  %325 = bitcast %"class.re2::Prog::Inst"* %321 to i8*
  call void @_ZdlPv(i8* %325) #16
  %326 = bitcast %"class.re2::PODArray.6"* %319 to i8**
  %327 = load i8*, i8** %326, align 8
  %328 = bitcast %"class.std::__1::vector.49"* %9 to i8**
  %329 = load i8*, i8** %328, align 8
  %330 = load i32, i32* %15, align 8
  br label %331

331:                                              ; preds = %314, %324
  %332 = phi i32 [ %330, %324 ], [ %261, %314 ]
  %333 = phi i8* [ %329, %324 ], [ %259, %314 ]
  %334 = phi i8* [ %327, %324 ], [ %317, %314 ]
  %335 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %261, i32* %335, align 4
  %336 = sext i32 %332 to i64
  %337 = shl nsw i64 %336, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %334, i8* align 4 %333, i64 %337, i1 false)
  %338 = load i32, i32* %15, align 8
  %339 = icmp slt i32 %338, 513
  br i1 %339, label %340, label %379

340:                                              ; preds = %331
  %341 = icmp slt i32 %338, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %340
  call void @abort() #17
  unreachable

343:                                              ; preds = %340
  %344 = sext i32 %338 to i64
  %345 = shl nsw i64 %344, 1
  %346 = call i8* @_Znwm(i64 %345) #16
  %347 = ptrtoint i8* %346 to i64
  %348 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 15
  %349 = getelementptr inbounds %"class.re2::PODArray", %"class.re2::PODArray"* %348, i64 0, i32 0, i32 0, i32 0, i32 0
  %350 = load i16*, i16** %349, align 8
  %351 = bitcast %"class.re2::PODArray"* %348 to i64*
  store i64 %347, i64* %351, align 8
  %352 = icmp eq i16* %350, null
  br i1 %352, label %360, label %353

353:                                              ; preds = %343
  %354 = bitcast i16* %350 to i8*
  call void @_ZdlPv(i8* %354) #16
  %355 = bitcast %"class.re2::PODArray"* %348 to i8**
  %356 = load i8*, i8** %355, align 8
  %357 = load i32, i32* %15, align 8
  %358 = sext i32 %357 to i64
  %359 = shl nsw i64 %358, 1
  br label %360

360:                                              ; preds = %343, %353
  %361 = phi i64 [ %359, %353 ], [ %345, %343 ]
  %362 = phi i8* [ %356, %353 ], [ %346, %343 ]
  %363 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 15, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %338, i32* %363, align 4
  call void @llvm.memset.p0i8.i64(i8* align 2 %362, i8 -1, i64 %361, i1 false)
  %364 = load i32, i32* %210, align 8
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %366, label %379

366:                                              ; preds = %360, %366
  %367 = phi i64 [ %375, %366 ], [ 0, %360 ]
  %368 = trunc i64 %367 to i16
  %369 = load i32*, i32** %114, align 8
  %370 = getelementptr inbounds i32, i32* %369, i64 %367
  %371 = load i32, i32* %370, align 4
  %372 = sext i32 %371 to i64
  %373 = load i16*, i16** %349, align 8
  %374 = getelementptr inbounds i16, i16* %373, i64 %372
  store i16 %368, i16* %374, align 2
  %375 = add nuw nsw i64 %367, 1
  %376 = load i32, i32* %210, align 8
  %377 = sext i32 %376 to i64
  %378 = icmp slt i64 %375, %377
  br i1 %378, label %366, label %379

379:                                              ; preds = %366, %360, %331
  %380 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %144, align 8
  %381 = icmp eq %"class.re2::Prog::Inst"* %380, null
  br i1 %381, label %385, label %382

382:                                              ; preds = %379
  %383 = ptrtoint %"class.re2::Prog::Inst"* %380 to i64
  store i64 %383, i64* %199, align 8
  %384 = bitcast %"class.re2::Prog::Inst"* %380 to i8*
  call void @_ZdlPv(i8* %384) #16
  br label %385

385:                                              ; preds = %379, %382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #15
  %386 = load i32*, i32** %114, align 8
  %387 = icmp eq i32* %386, null
  br i1 %387, label %391, label %388

388:                                              ; preds = %385
  %389 = ptrtoint i32* %386 to i64
  store i64 %389, i64* %200, align 8
  %390 = bitcast i32* %386 to i8*
  call void @_ZdlPv(i8* %390) #16
  br label %391

391:                                              ; preds = %385, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #15
  call void @_ZdlPv(i8* nonnull %94) #16
  %392 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %75, align 8
  %393 = icmp eq %"class.std::__1::vector.30"* %392, null
  br i1 %393, label %416, label %394

394:                                              ; preds = %391
  %395 = bitcast %"class.std::__1::vector.30"* %392 to i8*
  %396 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %76, align 8
  %397 = icmp eq %"class.std::__1::vector.30"* %396, %392
  br i1 %397, label %414, label %398

398:                                              ; preds = %394, %409
  %399 = phi %"class.std::__1::vector.30"* [ %400, %409 ], [ %396, %394 ]
  %400 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %399, i64 -1
  %401 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %400, i64 0, i32 0, i32 0
  %402 = load i32*, i32** %401, align 8
  %403 = icmp eq i32* %402, null
  br i1 %403, label %409, label %404

404:                                              ; preds = %398
  %405 = ptrtoint i32* %402 to i64
  %406 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %399, i64 -1, i32 0, i32 1
  %407 = bitcast i32** %406 to i64*
  store i64 %405, i64* %407, align 8
  %408 = bitcast i32* %402 to i8*
  call void @_ZdlPv(i8* %408) #16
  br label %409

409:                                              ; preds = %404, %398
  %410 = icmp eq %"class.std::__1::vector.30"* %400, %392
  br i1 %410, label %411, label %398

411:                                              ; preds = %409
  %412 = bitcast %"class.std::__1::vector.42"* %7 to i8**
  %413 = load i8*, i8** %412, align 8
  br label %414

414:                                              ; preds = %411, %394
  %415 = phi i8* [ %413, %411 ], [ %395, %394 ]
  store %"class.std::__1::vector.30"* %392, %"class.std::__1::vector.30"** %76, align 8
  call void @_ZdlPv(i8* %415) #16
  br label %416

416:                                              ; preds = %391, %414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #15
  %417 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %418 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %417, align 8
  store %"class.re2::SparseArray<int>::IndexValue"* null, %"class.re2::SparseArray<int>::IndexValue"** %417, align 8
  %419 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %418, null
  br i1 %419, label %422, label %420

420:                                              ; preds = %416
  %421 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %418 to i8*
  call void @_ZdlPv(i8* %421) #16
  br label %422

422:                                              ; preds = %420, %416
  %423 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %424 = load i32*, i32** %423, align 8
  store i32* null, i32** %423, align 8
  %425 = icmp eq i32* %424, null
  br i1 %425, label %428, label %426

426:                                              ; preds = %422
  %427 = bitcast i32* %424 to i8*
  call void @_ZdlPv(i8* %427) #16
  br label %428

428:                                              ; preds = %422, %426
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #15
  %429 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %78, align 8
  store %"class.re2::SparseArray<int>::IndexValue"* null, %"class.re2::SparseArray<int>::IndexValue"** %78, align 8
  %430 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %429, null
  br i1 %430, label %433, label %431

431:                                              ; preds = %428
  %432 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %429 to i8*
  call void @_ZdlPv(i8* %432) #16
  br label %433

433:                                              ; preds = %431, %428
  %434 = load i32*, i32** %95, align 8
  store i32* null, i32** %95, align 8
  %435 = icmp eq i32* %434, null
  br i1 %435, label %438, label %436

436:                                              ; preds = %433
  %437 = bitcast i32* %434 to i8*
  call void @_ZdlPv(i8* %437) #16
  br label %438

438:                                              ; preds = %433, %436
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #15
  %439 = load i32*, i32** %34, align 16
  %440 = icmp eq i32* %439, null
  br i1 %440, label %445, label %441

441:                                              ; preds = %438
  %442 = ptrtoint i32* %439 to i64
  %443 = bitcast i32** %35 to i64*
  store i64 %442, i64* %443, align 8
  %444 = bitcast i32* %439 to i8*
  call void @_ZdlPv(i8* %444) #16
  br label %445

445:                                              ; preds = %438, %441
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #15
  %446 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %447 = load i32*, i32** %446, align 8
  store i32* null, i32** %446, align 8
  %448 = icmp eq i32* %447, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %445
  %450 = bitcast i32* %447 to i8*
  call void @_ZdlPv(i8* %450) #16
  br label %451

451:                                              ; preds = %449, %445
  %452 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %453 = load i32*, i32** %452, align 8
  store i32* null, i32** %452, align 8
  %454 = icmp eq i32* %453, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %451
  %456 = bitcast i32* %453 to i8*
  call void @_ZdlPv(i8* %456) #16
  br label %457

457:                                              ; preds = %451, %455
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #15
  br label %458

458:                                              ; preds = %1, %457
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog14MarkSuccessorsEPNS_11SparseArrayIiEES3_PNSt3__16vectorINS5_IiNS4_9allocatorIiEEEENS6_IS8_EEEEPNS_10SparseSetTIvEEPS8_(%"class.re2::Prog"* nocapture readonly, %"class.re2::SparseArray"*, %"class.re2::SparseArray"* nocapture, %"class.std::__1::vector.42"*, %"class.re2::SparseSetT"* nocapture, %"class.std::__1::vector.30"*) local_unnamed_addr #3 align 2 {
  %7 = alloca [2 x i32], align 4
  %8 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %12 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %11, null
  br i1 %12, label %55, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 6
  br label %36

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  store i32 %9, i32* %21, align 4
  %22 = load i32, i32* %8, align 8
  %23 = sext i32 %22 to i64
  %24 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %25 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %24, i64 %23, i32 0
  store i32 0, i32* %25, align 4
  %26 = load i32, i32* %8, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %8, align 8
  %28 = load i32*, i32** %20, align 8
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %32 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %31, i64 %30, i32 1
  store i32 %9, i32* %32, align 4
  %33 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %34 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 6
  %35 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %33, null
  br i1 %35, label %113, label %36

36:                                               ; preds = %17, %19
  %37 = phi i32* [ %18, %17 ], [ %34, %19 ]
  %38 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %11, %17 ], [ %33, %19 ]
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %14, align 4
  %41 = icmp ugt i32 %40, %39
  br i1 %41, label %42, label %76

42:                                               ; preds = %36
  %43 = sext i32 %39 to i64
  %44 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %8, align 8
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %42
  %51 = sext i32 %47 to i64
  %52 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %38, i64 %51, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %39
  br i1 %54, label %76, label %57

55:                                               ; preds = %6
  %56 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 6
  br label %113

57:                                               ; preds = %50, %42
  %58 = sext i32 %39 to i64
  %59 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %58
  store i32 %48, i32* %61, align 4
  %62 = load i32, i32* %8, align 8
  %63 = sext i32 %62 to i64
  %64 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %65 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %64, i64 %63, i32 0
  store i32 %39, i32* %65, align 4
  %66 = load i32, i32* %8, align 8
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %8, align 8
  %68 = load i32*, i32** %59, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %58
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %73 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %72, i64 %71, i32 1
  store i32 %48, i32* %73, align 4
  %74 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %75 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %74, null
  br i1 %75, label %113, label %76

76:                                               ; preds = %50, %36, %57
  %77 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %74, %57 ], [ %38, %36 ], [ %38, %50 ]
  %78 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 5
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp ugt i32 %81, %79
  br i1 %82, label %83, label %113

83:                                               ; preds = %76
  %84 = sext i32 %79 to i64
  %85 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 %84
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %8, align 8
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %96

91:                                               ; preds = %83
  %92 = sext i32 %88 to i64
  %93 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %77, i64 %92, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %79
  br i1 %95, label %113, label %96

96:                                               ; preds = %83, %91
  %97 = sext i32 %79 to i64
  %98 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %97
  store i32 %89, i32* %100, align 4
  %101 = load i32, i32* %8, align 8
  %102 = sext i32 %101 to i64
  %103 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %104 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %103, i64 %102, i32 0
  store i32 %79, i32* %104, align 4
  %105 = load i32, i32* %8, align 8
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %8, align 8
  %107 = load i32*, i32** %98, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 %97
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %112 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %111, i64 %110, i32 1
  store i32 %89, i32* %112, align 4
  br label %113

113:                                              ; preds = %76, %19, %55, %57, %96, %91
  %114 = phi i32* [ %37, %57 ], [ %37, %96 ], [ %37, %91 ], [ %34, %19 ], [ %56, %55 ], [ %37, %76 ]
  %115 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 0
  store i32 0, i32* %115, align 8
  %116 = bitcast %"class.std::__1::vector.30"* %5 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 1
  %119 = bitcast i32** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = load i32, i32* %114, align 4
  %121 = inttoptr i64 %117 to i32*
  %122 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = icmp ugt i32* %123, %121
  br i1 %124, label %125, label %128

125:                                              ; preds = %113
  store i32 %120, i32* %121, align 4
  %126 = getelementptr inbounds i32, i32* %121, i64 1
  %127 = ptrtoint i32* %126 to i64
  store i64 %127, i64* %119, align 8
  br label %174

128:                                              ; preds = %113
  %129 = ptrtoint i32* %123 to i64
  %130 = bitcast i32** %122 to i64*
  %131 = sub i64 %129, %117
  %132 = ashr exact i64 %131, 2
  %133 = icmp ult i64 %132, 2305843009213693951
  br i1 %133, label %134, label %142

134:                                              ; preds = %128
  %135 = ashr exact i64 %131, 1
  %136 = icmp eq i64 %131, 0
  %137 = select i1 %136, i64 1, i64 %135
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %134
  %140 = icmp ugt i64 %137, 4611686018427387903
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  tail call void @abort() #17
  unreachable

142:                                              ; preds = %139, %128
  %143 = phi i64 [ %137, %139 ], [ 4611686018427387903, %128 ]
  %144 = shl i64 %143, 2
  %145 = tail call i8* @_Znwm(i64 %144) #16
  %146 = bitcast i8* %145 to i32*
  br label %147

147:                                              ; preds = %142, %134
  %148 = phi i64 [ %143, %142 ], [ 0, %134 ]
  %149 = phi i32* [ %146, %142 ], [ null, %134 ]
  %150 = getelementptr inbounds i32, i32* %149, i64 %148
  %151 = ptrtoint i32* %150 to i64
  store i32 %120, i32* %149, align 4
  %152 = getelementptr inbounds i32, i32* %149, i64 1
  %153 = ptrtoint i32* %152 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 0
  %155 = load i32*, i32** %154, align 8
  %156 = load i64, i64* %119, align 8
  %157 = ptrtoint i32* %155 to i64
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 2
  %160 = sub nsw i64 0, %159
  %161 = getelementptr inbounds i32, i32* %149, i64 %160
  %162 = ptrtoint i32* %161 to i64
  %163 = icmp sgt i64 %158, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %147
  %165 = bitcast i32* %161 to i8*
  %166 = bitcast i32* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 %158, i1 false) #15
  %167 = load i32*, i32** %154, align 8
  br label %168

168:                                              ; preds = %164, %147
  %169 = phi i32* [ %155, %147 ], [ %167, %164 ]
  store i64 %162, i64* %116, align 8
  store i64 %153, i64* %119, align 8
  store i64 %151, i64* %130, align 8
  %170 = icmp eq i32* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  %172 = bitcast i32* %169 to i8*
  tail call void @_ZdlPv(i8* %172) #16
  %173 = load i32*, i32** %118, align 8
  br label %174

174:                                              ; preds = %125, %168, %171
  %175 = phi i32* [ %126, %125 ], [ %152, %168 ], [ %173, %171 ]
  %176 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, %175
  br i1 %178, label %486, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %182 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %185 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %186 = bitcast [2 x i32]* %7 to i8*
  %187 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0
  %188 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1
  %189 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 2
  %190 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %191 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %192 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 0
  %194 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %3, i64 0, i32 0, i32 1
  %195 = bitcast %"class.std::__1::vector.30"** %194 to i64*
  %196 = bitcast %"class.std::__1::vector.42"* %3 to i64*
  %197 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %198 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %3, i64 0, i32 0, i32 0
  %199 = bitcast i32** %122 to i64*
  br label %200

200:                                              ; preds = %179, %482
  %201 = phi i32* [ %175, %179 ], [ %484, %482 ]
  %202 = getelementptr inbounds i32, i32* %201, i64 -1
  %203 = load i32, i32* %202, align 4
  store i32* %202, i32** %118, align 8
  br label %204

204:                                              ; preds = %479, %200
  %205 = phi i32 [ %203, %200 ], [ %481, %479 ]
  %206 = load i32*, i32** %180, align 8
  %207 = icmp eq i32* %206, null
  br i1 %207, label %234, label %208

208:                                              ; preds = %204
  %209 = load i32, i32* %181, align 4
  %210 = icmp ugt i32 %209, %205
  br i1 %210, label %211, label %234

211:                                              ; preds = %208
  %212 = sext i32 %205 to i64
  %213 = load i32*, i32** %182, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 %212
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* %115, align 8
  %217 = icmp ult i32 %215, %216
  br i1 %217, label %218, label %223

218:                                              ; preds = %211
  %219 = sext i32 %215 to i64
  %220 = getelementptr inbounds i32, i32* %206, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, %205
  br i1 %222, label %482, label %223

223:                                              ; preds = %211, %218
  %224 = load i32, i32* %115, align 8
  %225 = sext i32 %205 to i64
  %226 = load i32*, i32** %182, align 8
  %227 = getelementptr inbounds i32, i32* %226, i64 %225
  store i32 %224, i32* %227, align 4
  %228 = load i32, i32* %115, align 8
  %229 = sext i32 %228 to i64
  %230 = load i32*, i32** %180, align 8
  %231 = getelementptr inbounds i32, i32* %230, i64 %229
  store i32 %205, i32* %231, align 4
  %232 = load i32, i32* %115, align 8
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %115, align 8
  br label %234

234:                                              ; preds = %208, %204, %223
  %235 = sext i32 %205 to i64
  %236 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %183, align 8
  %237 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %236, i64 %235, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = and i32 %238, 7
  switch i32 %239, label %240 [
    i32 1, label %241
    i32 0, label %241
    i32 2, label %442
    i32 3, label %442
    i32 4, label %442
    i32 6, label %479
    i32 5, label %482
    i32 7, label %482
  ]

240:                                              ; preds = %234
  unreachable

241:                                              ; preds = %234, %234
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #15
  %242 = lshr i32 %238, 4
  store i32 %242, i32* %187, align 4
  %243 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %236, i64 %235, i32 1, i32 0
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %188, align 4
  br label %308

245:                                              ; preds = %437
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #15
  %246 = load i32, i32* %243, align 4
  %247 = load i32*, i32** %118, align 8
  %248 = load i32*, i32** %122, align 8
  %249 = icmp ult i32* %247, %248
  %250 = ptrtoint i32* %248 to i64
  br i1 %249, label %251, label %254

251:                                              ; preds = %245
  store i32 %246, i32* %247, align 4
  %252 = getelementptr inbounds i32, i32* %247, i64 1
  %253 = ptrtoint i32* %252 to i64
  store i64 %253, i64* %119, align 8
  br label %306

254:                                              ; preds = %245
  %255 = ptrtoint i32* %247 to i64
  %256 = load i64, i64* %116, align 8
  %257 = sub i64 %255, %256
  %258 = ashr exact i64 %257, 2
  %259 = add nsw i64 %258, 1
  %260 = icmp ugt i64 %259, 4611686018427387903
  br i1 %260, label %261, label %263

261:                                              ; preds = %254
  %262 = bitcast %"class.std::__1::vector.30"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %262) #17
  unreachable

263:                                              ; preds = %254
  %264 = sub i64 %250, %256
  %265 = ashr exact i64 %264, 2
  %266 = icmp ult i64 %265, 2305843009213693951
  br i1 %266, label %267, label %275

267:                                              ; preds = %263
  %268 = ashr exact i64 %264, 1
  %269 = icmp ult i64 %268, %259
  %270 = select i1 %269, i64 %259, i64 %268
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %280, label %272

272:                                              ; preds = %267
  %273 = icmp ugt i64 %270, 4611686018427387903
  br i1 %273, label %274, label %275

274:                                              ; preds = %272
  call void @abort() #17
  unreachable

275:                                              ; preds = %272, %263
  %276 = phi i64 [ %270, %272 ], [ 4611686018427387903, %263 ]
  %277 = shl i64 %276, 2
  %278 = call i8* @_Znwm(i64 %277) #16
  %279 = bitcast i8* %278 to i32*
  br label %280

280:                                              ; preds = %275, %267
  %281 = phi i64 [ %276, %275 ], [ 0, %267 ]
  %282 = phi i32* [ %279, %275 ], [ null, %267 ]
  %283 = getelementptr inbounds i32, i32* %282, i64 %258
  %284 = getelementptr inbounds i32, i32* %282, i64 %281
  %285 = ptrtoint i32* %284 to i64
  store i32 %246, i32* %283, align 4
  %286 = getelementptr inbounds i32, i32* %283, i64 1
  %287 = ptrtoint i32* %286 to i64
  %288 = load i32*, i32** %176, align 8
  %289 = load i64, i64* %119, align 8
  %290 = ptrtoint i32* %288 to i64
  %291 = sub i64 %289, %290
  %292 = ashr exact i64 %291, 2
  %293 = sub nsw i64 0, %292
  %294 = getelementptr inbounds i32, i32* %283, i64 %293
  %295 = ptrtoint i32* %294 to i64
  %296 = icmp sgt i64 %291, 0
  br i1 %296, label %297, label %301

297:                                              ; preds = %280
  %298 = bitcast i32* %294 to i8*
  %299 = bitcast i32* %288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %298, i8* align 4 %299, i64 %291, i1 false) #15
  %300 = load i32*, i32** %176, align 8
  br label %301

301:                                              ; preds = %297, %280
  %302 = phi i32* [ %288, %280 ], [ %300, %297 ]
  store i64 %295, i64* %116, align 8
  store i64 %287, i64* %119, align 8
  store i64 %285, i64* %199, align 8
  %303 = icmp eq i32* %302, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %301
  %305 = bitcast i32* %302 to i8*
  call void @_ZdlPv(i8* %305) #16
  br label %306

306:                                              ; preds = %251, %301, %304
  %307 = load i32, i32* %237, align 4
  br label %479

308:                                              ; preds = %440, %241
  %309 = phi i32 [ %242, %241 ], [ %441, %440 ]
  %310 = phi i32* [ %187, %241 ], [ %438, %440 ]
  %311 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %190, align 8
  %312 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %311, null
  br i1 %312, label %350, label %313

313:                                              ; preds = %308
  %314 = load i32, i32* %191, align 4
  %315 = icmp ugt i32 %314, %309
  br i1 %315, label %316, label %350

316:                                              ; preds = %313
  %317 = sext i32 %309 to i64
  %318 = load i32*, i32** %192, align 8
  %319 = getelementptr inbounds i32, i32* %318, i64 %317
  %320 = load i32, i32* %319, align 4
  %321 = load i32, i32* %193, align 8
  %322 = icmp ult i32 %320, %321
  br i1 %322, label %323, label %328

323:                                              ; preds = %316
  %324 = sext i32 %320 to i64
  %325 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %311, i64 %324, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, %309
  br i1 %327, label %359, label %328

328:                                              ; preds = %323, %316
  %329 = load i64, i64* %195, align 8
  %330 = load i64, i64* %196, align 8
  %331 = sub i64 %329, %330
  %332 = sdiv exact i64 %331, 24
  %333 = trunc i64 %332 to i32
  %334 = load i32, i32* %193, align 8
  %335 = sext i32 %309 to i64
  %336 = load i32*, i32** %192, align 8
  %337 = getelementptr inbounds i32, i32* %336, i64 %335
  store i32 %334, i32* %337, align 4
  %338 = load i32, i32* %193, align 8
  %339 = sext i32 %338 to i64
  %340 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %190, align 8
  %341 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %340, i64 %339, i32 0
  store i32 %309, i32* %341, align 4
  %342 = load i32, i32* %193, align 8
  %343 = add nsw i32 %342, 1
  store i32 %343, i32* %193, align 8
  %344 = load i32*, i32** %192, align 8
  %345 = getelementptr inbounds i32, i32* %344, i64 %335
  %346 = load i32, i32* %345, align 4
  %347 = sext i32 %346 to i64
  %348 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %190, align 8
  %349 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %348, i64 %347, i32 1
  store i32 %333, i32* %349, align 4
  br label %350

350:                                              ; preds = %313, %308, %328
  %351 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %194, align 8
  %352 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %197, align 8
  %353 = icmp ult %"class.std::__1::vector.30"* %351, %352
  br i1 %353, label %354, label %358

354:                                              ; preds = %350
  %355 = bitcast %"class.std::__1::vector.30"* %351 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %355, i8 0, i64 24, i1 false) #15
  %356 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %351, i64 1
  %357 = ptrtoint %"class.std::__1::vector.30"* %356 to i64
  store i64 %357, i64* %195, align 8
  br label %359

358:                                              ; preds = %350
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.42"* %3) #15
  br label %359

359:                                              ; preds = %358, %354, %323
  %360 = sext i32 %309 to i64
  %361 = load i32*, i32** %192, align 8
  %362 = getelementptr inbounds i32, i32* %361, i64 %360
  %363 = load i32, i32* %362, align 4
  %364 = sext i32 %363 to i64
  %365 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %190, align 8
  %366 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %365, i64 %364, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = sext i32 %367 to i64
  %369 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %198, align 8
  %370 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %369, i64 %368
  %371 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %369, i64 %368, i32 0, i32 1
  %372 = load i32*, i32** %371, align 8
  %373 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %369, i64 %368, i32 0, i32 2, i32 0, i32 0
  %374 = load i32*, i32** %373, align 8
  %375 = icmp ult i32* %372, %374
  %376 = ptrtoint i32* %374 to i64
  br i1 %375, label %377, label %381

377:                                              ; preds = %359
  store i32 %205, i32* %372, align 4
  %378 = getelementptr inbounds i32, i32* %372, i64 1
  %379 = ptrtoint i32* %378 to i64
  %380 = bitcast i32** %371 to i64*
  store i64 %379, i64* %380, align 8
  br label %437

381:                                              ; preds = %359
  %382 = ptrtoint i32* %372 to i64
  %383 = bitcast i32** %371 to i64*
  %384 = bitcast %"class.std::__1::vector.30"* %370 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = sub i64 %382, %385
  %387 = ashr exact i64 %386, 2
  %388 = add nsw i64 %387, 1
  %389 = icmp ugt i64 %388, 4611686018427387903
  br i1 %389, label %390, label %392

390:                                              ; preds = %381
  %391 = bitcast %"class.std::__1::vector.30"* %370 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %391) #17
  unreachable

392:                                              ; preds = %381
  %393 = bitcast i32** %373 to i64*
  %394 = sub i64 %376, %385
  %395 = ashr exact i64 %394, 2
  %396 = icmp ult i64 %395, 2305843009213693951
  br i1 %396, label %397, label %405

397:                                              ; preds = %392
  %398 = ashr exact i64 %394, 1
  %399 = icmp ult i64 %398, %388
  %400 = select i1 %399, i64 %388, i64 %398
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %410, label %402

402:                                              ; preds = %397
  %403 = icmp ugt i64 %400, 4611686018427387903
  br i1 %403, label %404, label %405

404:                                              ; preds = %402
  call void @abort() #17
  unreachable

405:                                              ; preds = %402, %392
  %406 = phi i64 [ %400, %402 ], [ 4611686018427387903, %392 ]
  %407 = shl i64 %406, 2
  %408 = call i8* @_Znwm(i64 %407) #16
  %409 = bitcast i8* %408 to i32*
  br label %410

410:                                              ; preds = %405, %397
  %411 = phi i64 [ %406, %405 ], [ 0, %397 ]
  %412 = phi i32* [ %409, %405 ], [ null, %397 ]
  %413 = getelementptr inbounds i32, i32* %412, i64 %387
  %414 = getelementptr inbounds i32, i32* %412, i64 %411
  %415 = ptrtoint i32* %414 to i64
  store i32 %205, i32* %413, align 4
  %416 = getelementptr inbounds i32, i32* %413, i64 1
  %417 = ptrtoint i32* %416 to i64
  %418 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %370, i64 0, i32 0, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = load i64, i64* %383, align 8
  %421 = ptrtoint i32* %419 to i64
  %422 = sub i64 %420, %421
  %423 = ashr exact i64 %422, 2
  %424 = sub nsw i64 0, %423
  %425 = getelementptr inbounds i32, i32* %413, i64 %424
  %426 = ptrtoint i32* %425 to i64
  %427 = icmp sgt i64 %422, 0
  br i1 %427, label %428, label %432

428:                                              ; preds = %410
  %429 = bitcast i32* %425 to i8*
  %430 = bitcast i32* %419 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %429, i8* align 4 %430, i64 %422, i1 false) #15
  %431 = load i32*, i32** %418, align 8
  br label %432

432:                                              ; preds = %428, %410
  %433 = phi i32* [ %419, %410 ], [ %431, %428 ]
  store i64 %426, i64* %384, align 8
  store i64 %417, i64* %383, align 8
  store i64 %415, i64* %393, align 8
  %434 = icmp eq i32* %433, null
  br i1 %434, label %437, label %435

435:                                              ; preds = %432
  %436 = bitcast i32* %433 to i8*
  call void @_ZdlPv(i8* %436) #16
  br label %437

437:                                              ; preds = %377, %432, %435
  %438 = getelementptr inbounds i32, i32* %310, i64 1
  %439 = icmp eq i32* %438, %189
  br i1 %439, label %245, label %440

440:                                              ; preds = %437
  %441 = load i32, i32* %438, align 4
  br label %308

442:                                              ; preds = %234, %234, %234
  %443 = lshr i32 %238, 4
  %444 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %445 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %444, null
  br i1 %445, label %479, label %446

446:                                              ; preds = %442
  %447 = load i32, i32* %184, align 4
  %448 = icmp ugt i32 %447, %443
  br i1 %448, label %449, label %479

449:                                              ; preds = %446
  %450 = zext i32 %443 to i64
  %451 = load i32*, i32** %185, align 8
  %452 = getelementptr inbounds i32, i32* %451, i64 %450
  %453 = load i32, i32* %452, align 4
  %454 = load i32, i32* %8, align 8
  %455 = icmp ult i32 %453, %454
  br i1 %455, label %456, label %461

456:                                              ; preds = %449
  %457 = sext i32 %453 to i64
  %458 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %444, i64 %457, i32 0
  %459 = load i32, i32* %458, align 4
  %460 = icmp eq i32 %459, %443
  br i1 %460, label %479, label %461

461:                                              ; preds = %449, %456
  %462 = load i32, i32* %8, align 8
  %463 = zext i32 %443 to i64
  %464 = load i32*, i32** %185, align 8
  %465 = getelementptr inbounds i32, i32* %464, i64 %463
  store i32 %462, i32* %465, align 4
  %466 = load i32, i32* %8, align 8
  %467 = sext i32 %466 to i64
  %468 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %469 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %468, i64 %467, i32 0
  store i32 %443, i32* %469, align 4
  %470 = load i32, i32* %8, align 8
  %471 = add nsw i32 %470, 1
  store i32 %471, i32* %8, align 8
  %472 = load i32*, i32** %185, align 8
  %473 = getelementptr inbounds i32, i32* %472, i64 %463
  %474 = load i32, i32* %473, align 4
  %475 = sext i32 %474 to i64
  %476 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %10, align 8
  %477 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %476, i64 %475, i32 1
  store i32 %462, i32* %477, align 4
  %478 = load i32, i32* %237, align 4
  br label %479

479:                                              ; preds = %446, %234, %456, %461, %442, %306
  %480 = phi i32 [ %307, %306 ], [ %238, %442 ], [ %478, %461 ], [ %238, %456 ], [ %238, %234 ], [ %238, %446 ]
  %481 = lshr i32 %480, 4
  br label %204

482:                                              ; preds = %234, %234, %218
  %483 = load i32*, i32** %176, align 8
  %484 = load i32*, i32** %118, align 8
  %485 = icmp eq i32* %483, %484
  br i1 %485, label %486, label %200

486:                                              ; preds = %482, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3re211SparseArrayIiE4lessERKNS1_10IndexValueES4_(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8), %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8)) #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog13MarkDominatorEiPNS_11SparseArrayIiEES3_PNSt3__16vectorINS5_IiNS4_9allocatorIiEEEENS6_IS8_EEEEPNS_10SparseSetTIvEEPS8_(%"class.re2::Prog"* nocapture readonly, i32, %"class.re2::SparseArray"* nocapture, %"class.re2::SparseArray"* nocapture readonly, %"class.std::__1::vector.42"* nocapture readonly, %"class.re2::SparseSetT"* nocapture, %"class.std::__1::vector.30"*) local_unnamed_addr #3 align 2 {
  %8 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = bitcast %"class.std::__1::vector.30"* %6 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %6, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = inttoptr i64 %10 to i32*
  %14 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  store i32 %1, i32* %13, align 4
  %18 = getelementptr inbounds i32, i32* %13, i64 1
  %19 = ptrtoint i32* %18 to i64
  store i64 %19, i64* %12, align 8
  br label %32

20:                                               ; preds = %7
  %21 = bitcast i32** %14 to i64*
  %22 = tail call i8* @_Znwm(i64 4) #16
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %22, i64 4
  %25 = bitcast i8* %24 to i32*
  %26 = ptrtoint i8* %24 to i64
  store i32 %1, i32* %23, align 4
  %27 = ptrtoint i8* %22 to i64
  store i64 %27, i64* %9, align 8
  store i64 %26, i64* %12, align 8
  store i64 %26, i64* %21, align 8
  %28 = icmp eq i64 %10, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = inttoptr i64 %10 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  %31 = load i32*, i32** %11, align 8
  br label %32

32:                                               ; preds = %17, %20, %29
  %33 = phi i32* [ %18, %17 ], [ %25, %20 ], [ %31, %29 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %6, i64 0, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = icmp eq i32* %35, %33
  br i1 %36, label %179, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %43 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 0
  %45 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast i32** %14 to i64*
  br label %47

47:                                               ; preds = %37, %175
  %48 = phi i32* [ %33, %37 ], [ %177, %175 ]
  %49 = getelementptr inbounds i32, i32* %48, i64 -1
  %50 = load i32, i32* %49, align 4
  store i32* %49, i32** %11, align 8
  br label %51

51:                                               ; preds = %172, %47
  %52 = phi i32 [ %50, %47 ], [ %174, %172 ]
  %53 = load i32*, i32** %38, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %81, label %55

55:                                               ; preds = %51
  %56 = load i32, i32* %39, align 4
  %57 = icmp ugt i32 %56, %52
  br i1 %57, label %58, label %81

58:                                               ; preds = %55
  %59 = sext i32 %52 to i64
  %60 = load i32*, i32** %40, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %59
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %8, align 8
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %58
  %66 = sext i32 %62 to i64
  %67 = getelementptr inbounds i32, i32* %53, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %52
  br i1 %69, label %175, label %70

70:                                               ; preds = %58, %65
  %71 = load i32, i32* %8, align 8
  %72 = sext i32 %52 to i64
  %73 = load i32*, i32** %40, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %72
  store i32 %71, i32* %74, align 4
  %75 = load i32, i32* %8, align 8
  %76 = sext i32 %75 to i64
  %77 = load i32*, i32** %38, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 %76
  store i32 %52, i32* %78, align 4
  %79 = load i32, i32* %8, align 8
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %8, align 8
  br label %81

81:                                               ; preds = %55, %51, %70
  %82 = icmp eq i32 %52, %1
  br i1 %82, label %101, label %83

83:                                               ; preds = %81
  %84 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %41, align 8
  %85 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %84, null
  br i1 %85, label %101, label %86

86:                                               ; preds = %83
  %87 = load i32, i32* %42, align 4
  %88 = icmp ugt i32 %87, %52
  br i1 %88, label %89, label %101

89:                                               ; preds = %86
  %90 = sext i32 %52 to i64
  %91 = load i32*, i32** %43, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 %90
  %93 = load i32, i32* %92, align 4
  %94 = load i32, i32* %44, align 8
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %96, label %101

96:                                               ; preds = %89
  %97 = sext i32 %93 to i64
  %98 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %84, i64 %97, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %52
  br i1 %100, label %175, label %101

101:                                              ; preds = %83, %89, %86, %81, %96
  %102 = sext i32 %52 to i64
  %103 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %104 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %103, i64 %102, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 7
  switch i32 %106, label %107 [
    i32 1, label %108
    i32 0, label %108
    i32 2, label %175
    i32 3, label %175
    i32 4, label %175
    i32 6, label %172
    i32 5, label %175
    i32 7, label %175
  ]

107:                                              ; preds = %101
  unreachable

108:                                              ; preds = %101, %101
  %109 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %103, i64 %102, i32 1, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = load i32*, i32** %11, align 8
  %112 = load i32*, i32** %14, align 8
  %113 = icmp ult i32* %111, %112
  %114 = ptrtoint i32* %112 to i64
  br i1 %113, label %115, label %118

115:                                              ; preds = %108
  store i32 %110, i32* %111, align 4
  %116 = getelementptr inbounds i32, i32* %111, i64 1
  %117 = ptrtoint i32* %116 to i64
  store i64 %117, i64* %12, align 8
  br label %170

118:                                              ; preds = %108
  %119 = ptrtoint i32* %111 to i64
  %120 = load i64, i64* %9, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 2
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 4611686018427387903
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector.30"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #17
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %114, %120
  %129 = ashr exact i64 %128, 2
  %130 = icmp ult i64 %129, 2305843009213693951
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = ashr exact i64 %128, 1
  %133 = icmp ult i64 %132, %123
  %134 = select i1 %133, i64 %123, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = icmp ugt i64 %134, 4611686018427387903
  br i1 %137, label %138, label %139

138:                                              ; preds = %136
  tail call void @abort() #17
  unreachable

139:                                              ; preds = %136, %127
  %140 = phi i64 [ %134, %136 ], [ 4611686018427387903, %127 ]
  %141 = shl i64 %140, 2
  %142 = tail call i8* @_Znwm(i64 %141) #16
  %143 = bitcast i8* %142 to i32*
  br label %144

144:                                              ; preds = %139, %131
  %145 = phi i64 [ %140, %139 ], [ 0, %131 ]
  %146 = phi i32* [ %143, %139 ], [ null, %131 ]
  %147 = getelementptr inbounds i32, i32* %146, i64 %122
  %148 = getelementptr inbounds i32, i32* %146, i64 %145
  %149 = ptrtoint i32* %148 to i64
  store i32 %110, i32* %147, align 4
  %150 = getelementptr inbounds i32, i32* %147, i64 1
  %151 = ptrtoint i32* %150 to i64
  %152 = load i32*, i32** %34, align 8
  %153 = load i64, i64* %12, align 8
  %154 = ptrtoint i32* %152 to i64
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 2
  %157 = sub nsw i64 0, %156
  %158 = getelementptr inbounds i32, i32* %147, i64 %157
  %159 = ptrtoint i32* %158 to i64
  %160 = icmp sgt i64 %155, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %144
  %162 = bitcast i32* %158 to i8*
  %163 = bitcast i32* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %163, i64 %155, i1 false) #15
  %164 = load i32*, i32** %34, align 8
  br label %165

165:                                              ; preds = %161, %144
  %166 = phi i32* [ %152, %144 ], [ %164, %161 ]
  store i64 %159, i64* %9, align 8
  store i64 %151, i64* %12, align 8
  store i64 %149, i64* %46, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = bitcast i32* %166 to i8*
  tail call void @_ZdlPv(i8* %169) #16
  br label %170

170:                                              ; preds = %115, %165, %168
  %171 = load i32, i32* %104, align 4
  br label %172

172:                                              ; preds = %101, %170
  %173 = phi i32 [ %171, %170 ], [ %105, %101 ]
  %174 = lshr i32 %173, 4
  br label %51

175:                                              ; preds = %101, %101, %101, %101, %101, %96, %65
  %176 = load i32*, i32** %34, align 8
  %177 = load i32*, i32** %11, align 8
  %178 = icmp eq i32* %176, %177
  br i1 %178, label %179, label %47

179:                                              ; preds = %175, %32
  %180 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %181 = load i32, i32* %8, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %196, label %183

183:                                              ; preds = %179
  %184 = load i32*, i32** %180, align 8
  %185 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %3, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %187 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %3, i64 0, i32 0
  %189 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %4, i64 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %191 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %194 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %195 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 0
  br label %197

196:                                              ; preds = %285, %179
  ret void

197:                                              ; preds = %183, %285
  %198 = phi i32* [ %184, %183 ], [ %286, %285 ]
  %199 = phi i32* [ %184, %183 ], [ %287, %285 ]
  %200 = load i32, i32* %199, align 4
  %201 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %185, align 8
  %202 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %201, null
  br i1 %202, label %285, label %203

203:                                              ; preds = %197
  %204 = load i32, i32* %186, align 4
  %205 = icmp ugt i32 %204, %200
  br i1 %205, label %206, label %285

206:                                              ; preds = %203
  %207 = sext i32 %200 to i64
  %208 = load i32*, i32** %187, align 8
  %209 = getelementptr inbounds i32, i32* %208, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = load i32, i32* %188, align 8
  %212 = icmp ult i32 %210, %211
  br i1 %212, label %213, label %285

213:                                              ; preds = %206
  %214 = sext i32 %210 to i64
  %215 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %201, i64 %214, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, %200
  br i1 %217, label %218, label %285

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %201, i64 %214, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %189, align 8
  %223 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %222, i64 %221, i32 0, i32 0
  %224 = load i32*, i32** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %222, i64 %221, i32 0, i32 1
  %226 = load i32*, i32** %225, align 8
  %227 = icmp eq i32* %224, %226
  br i1 %227, label %285, label %228

228:                                              ; preds = %218, %281
  %229 = phi i32* [ %284, %281 ], [ %198, %218 ]
  %230 = phi i32* [ %282, %281 ], [ %224, %218 ]
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32* %229, null
  br i1 %232, label %248, label %233

233:                                              ; preds = %228
  %234 = load i32, i32* %190, align 4
  %235 = icmp ugt i32 %234, %231
  br i1 %235, label %236, label %248

236:                                              ; preds = %233
  %237 = sext i32 %231 to i64
  %238 = load i32*, i32** %191, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %237
  %240 = load i32, i32* %239, align 4
  %241 = load i32, i32* %8, align 8
  %242 = icmp ult i32 %240, %241
  br i1 %242, label %243, label %248

243:                                              ; preds = %236
  %244 = sext i32 %240 to i64
  %245 = getelementptr inbounds i32, i32* %229, i64 %244
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %246, %231
  br i1 %247, label %281, label %248

248:                                              ; preds = %228, %236, %233, %243
  %249 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %192, align 8
  %250 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %249, null
  br i1 %250, label %281, label %251

251:                                              ; preds = %248
  %252 = load i32, i32* %193, align 4
  %253 = icmp ugt i32 %252, %200
  br i1 %253, label %254, label %281

254:                                              ; preds = %251
  %255 = load i32*, i32** %194, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 %207
  %257 = load i32, i32* %256, align 4
  %258 = load i32, i32* %195, align 8
  %259 = icmp ult i32 %257, %258
  br i1 %259, label %260, label %265

260:                                              ; preds = %254
  %261 = sext i32 %257 to i64
  %262 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %249, i64 %261, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %263, %200
  br i1 %264, label %281, label %265

265:                                              ; preds = %254, %260
  %266 = load i32, i32* %195, align 8
  %267 = load i32*, i32** %194, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %207
  store i32 %266, i32* %268, align 4
  %269 = load i32, i32* %195, align 8
  %270 = sext i32 %269 to i64
  %271 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %192, align 8
  %272 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %271, i64 %270, i32 0
  store i32 %200, i32* %272, align 4
  %273 = load i32, i32* %195, align 8
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %195, align 8
  %275 = load i32*, i32** %194, align 8
  %276 = getelementptr inbounds i32, i32* %275, i64 %207
  %277 = load i32, i32* %276, align 4
  %278 = sext i32 %277 to i64
  %279 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %192, align 8
  %280 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %279, i64 %278, i32 1
  store i32 %266, i32* %280, align 4
  br label %281

281:                                              ; preds = %251, %248, %265, %260, %243
  %282 = getelementptr inbounds i32, i32* %230, i64 1
  %283 = icmp eq i32* %282, %226
  %284 = load i32*, i32** %180, align 8
  br i1 %283, label %285, label %228

285:                                              ; preds = %281, %218, %197, %206, %203, %213
  %286 = phi i32* [ %198, %218 ], [ %198, %197 ], [ %198, %206 ], [ %198, %203 ], [ %198, %213 ], [ %284, %281 ]
  %287 = getelementptr inbounds i32, i32* %199, i64 1
  %288 = load i32, i32* %8, align 8
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i32, i32* %286, i64 %289
  %291 = icmp eq i32* %287, %290
  br i1 %291, label %196, label %197
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog8EmitListEiPNS_11SparseArrayIiEEPNSt3__16vectorINS0_4InstENS4_9allocatorIS6_EEEEPNS_10SparseSetTIvEEPNS5_IiNS7_IiEEEE(%"class.re2::Prog"* nocapture readonly, i32, %"class.re2::SparseArray"* nocapture readonly, %"class.std::__1::vector.49"*, %"class.re2::SparseSetT"* nocapture, %"class.std::__1::vector.30"*) local_unnamed_addr #3 align 2 {
  %7 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = bitcast %"class.std::__1::vector.30"* %5 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = inttoptr i64 %9 to i32*
  %13 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, %12
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  store i32 %1, i32* %12, align 4
  %17 = getelementptr inbounds i32, i32* %12, i64 1
  %18 = ptrtoint i32* %17 to i64
  store i64 %18, i64* %11, align 8
  br label %31

19:                                               ; preds = %6
  %20 = bitcast i32** %13 to i64*
  %21 = tail call i8* @_Znwm(i64 4) #16
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds i8, i8* %21, i64 4
  %24 = bitcast i8* %23 to i32*
  %25 = ptrtoint i8* %23 to i64
  store i32 %1, i32* %22, align 4
  %26 = ptrtoint i8* %21 to i64
  store i64 %26, i64* %8, align 8
  store i64 %25, i64* %11, align 8
  store i64 %25, i64* %20, align 8
  %27 = icmp eq i64 %9, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %9 to i8*
  tail call void @_ZdlPv(i8* %29) #16
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %16, %19, %28
  %32 = phi i32* [ %17, %16 ], [ %24, %19 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %34, %32
  br i1 %35, label %513, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"class.re2::SparseSetT", %"class.re2::SparseSetT"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.re2::SparseArray", %"class.re2::SparseArray"* %2, i64 0, i32 0
  %44 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.re2::Prog::Inst"** %45 to i64*
  %48 = bitcast %"class.std::__1::vector.49"* %3 to i64*
  %49 = bitcast %"class.re2::Prog::Inst"** %46 to i64*
  %50 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 0
  %51 = bitcast i32** %13 to i64*
  br label %52

52:                                               ; preds = %36, %509
  %53 = phi i32* [ %32, %36 ], [ %511, %509 ]
  %54 = getelementptr inbounds i32, i32* %53, i64 -1
  %55 = load i32, i32* %54, align 4
  store i32* %54, i32** %10, align 8
  br label %56

56:                                               ; preds = %506, %52
  %57 = phi i32 [ %55, %52 ], [ %508, %506 ]
  %58 = load i32*, i32** %37, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %86, label %60

60:                                               ; preds = %56
  %61 = load i32, i32* %38, align 4
  %62 = icmp ugt i32 %61, %57
  br i1 %62, label %63, label %86

63:                                               ; preds = %60
  %64 = sext i32 %57 to i64
  %65 = load i32*, i32** %39, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %64
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* %7, align 8
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %63
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %57
  br i1 %74, label %509, label %75

75:                                               ; preds = %63, %70
  %76 = load i32, i32* %7, align 8
  %77 = sext i32 %57 to i64
  %78 = load i32*, i32** %39, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 %77
  store i32 %76, i32* %79, align 4
  %80 = load i32, i32* %7, align 8
  %81 = sext i32 %80 to i64
  %82 = load i32*, i32** %37, align 8
  %83 = getelementptr inbounds i32, i32* %82, i64 %81
  store i32 %57, i32* %83, align 4
  %84 = load i32, i32* %7, align 8
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %7, align 8
  br label %86

86:                                               ; preds = %60, %56, %75
  %87 = icmp eq i32 %57, %1
  br i1 %87, label %190, label %88

88:                                               ; preds = %86
  %89 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %40, align 8
  %90 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %89, null
  br i1 %90, label %190, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %41, align 4
  %93 = icmp ugt i32 %92, %57
  br i1 %93, label %94, label %190

94:                                               ; preds = %91
  %95 = sext i32 %57 to i64
  %96 = load i32*, i32** %42, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 %95
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %43, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %101, label %190

101:                                              ; preds = %94
  %102 = sext i32 %98 to i64
  %103 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %89, i64 %102, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, %57
  br i1 %105, label %106, label %190

106:                                              ; preds = %101
  %107 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %108 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %46, align 8
  %109 = icmp ult %"class.re2::Prog::Inst"* %107, %108
  %110 = ptrtoint %"class.re2::Prog::Inst"* %108 to i64
  br i1 %109, label %111, label %115

111:                                              ; preds = %106
  %112 = bitcast %"class.re2::Prog::Inst"* %107 to i64*
  store i64 0, i64* %112, align 4
  %113 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %107, i64 1
  %114 = ptrtoint %"class.re2::Prog::Inst"* %113 to i64
  store i64 %114, i64* %47, align 8
  br label %169

115:                                              ; preds = %106
  %116 = ptrtoint %"class.re2::Prog::Inst"* %107 to i64
  %117 = load i64, i64* %48, align 8
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 3
  %120 = add nsw i64 %119, 1
  %121 = icmp ugt i64 %120, 2305843009213693951
  br i1 %121, label %122, label %124

122:                                              ; preds = %115
  %123 = bitcast %"class.std::__1::vector.49"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %123) #17
  unreachable

124:                                              ; preds = %115
  %125 = sub i64 %110, %117
  %126 = ashr exact i64 %125, 3
  %127 = icmp ult i64 %126, 1152921504606846975
  br i1 %127, label %128, label %136

128:                                              ; preds = %124
  %129 = ashr exact i64 %125, 2
  %130 = icmp ult i64 %129, %120
  %131 = select i1 %130, i64 %120, i64 %129
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %128
  %134 = icmp ugt i64 %131, 2305843009213693951
  br i1 %134, label %135, label %136

135:                                              ; preds = %133
  tail call void @abort() #17
  unreachable

136:                                              ; preds = %133, %124
  %137 = phi i64 [ %131, %133 ], [ 2305843009213693951, %124 ]
  %138 = shl i64 %137, 3
  %139 = tail call i8* @_Znwm(i64 %138) #16
  %140 = bitcast i8* %139 to %"class.re2::Prog::Inst"*
  br label %141

141:                                              ; preds = %136, %128
  %142 = phi i64 [ %137, %136 ], [ 0, %128 ]
  %143 = phi %"class.re2::Prog::Inst"* [ %140, %136 ], [ null, %128 ]
  %144 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %143, i64 %119
  %145 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %143, i64 %142
  %146 = ptrtoint %"class.re2::Prog::Inst"* %145 to i64
  %147 = bitcast %"class.re2::Prog::Inst"* %144 to i64*
  store i64 0, i64* %147, align 4
  %148 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %144, i64 1
  %149 = ptrtoint %"class.re2::Prog::Inst"* %148 to i64
  %150 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  %151 = load i64, i64* %47, align 8
  %152 = ptrtoint %"class.re2::Prog::Inst"* %150 to i64
  %153 = sub i64 %151, %152
  %154 = ashr exact i64 %153, 3
  %155 = sub nsw i64 0, %154
  %156 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %144, i64 %155
  %157 = ptrtoint %"class.re2::Prog::Inst"* %156 to i64
  %158 = icmp sgt i64 %153, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %141
  %160 = bitcast %"class.re2::Prog::Inst"* %156 to i8*
  %161 = bitcast %"class.re2::Prog::Inst"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %160, i8* align 4 %161, i64 %153, i1 false) #15
  %162 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  br label %163

163:                                              ; preds = %159, %141
  %164 = phi %"class.re2::Prog::Inst"* [ %150, %141 ], [ %162, %159 ]
  store i64 %157, i64* %48, align 8
  store i64 %149, i64* %47, align 8
  store i64 %146, i64* %49, align 8
  %165 = icmp eq %"class.re2::Prog::Inst"* %164, null
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.re2::Prog::Inst"* %164 to i8*
  tail call void @_ZdlPv(i8* %167) #16
  %168 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  br label %169

169:                                              ; preds = %111, %163, %166
  %170 = phi %"class.re2::Prog::Inst"* [ %113, %111 ], [ %148, %163 ], [ %168, %166 ]
  %171 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %170, i64 -1, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, -8
  %174 = or i32 %173, 6
  store i32 %174, i32* %171, align 4
  %175 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %176 = load i32*, i32** %42, align 8
  %177 = getelementptr inbounds i32, i32* %176, i64 %95
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %40, align 8
  %181 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %180, i64 %179, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = shl i32 %182, 4
  %184 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %175, i64 -1, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, 8
  %187 = or i32 %186, %183
  %188 = and i32 %185, 7
  %189 = or i32 %187, %188
  store i32 %189, i32* %184, align 4
  br label %509

190:                                              ; preds = %88, %94, %91, %86, %101
  %191 = sext i32 %57 to i64
  %192 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %44, align 8
  %193 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %192, i64 %191
  %194 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %193, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 7
  switch i32 %196, label %197 [
    i32 1, label %198
    i32 0, label %286
    i32 2, label %350
    i32 3, label %350
    i32 4, label %350
    i32 6, label %506
    i32 5, label %437
    i32 7, label %437
  ]

197:                                              ; preds = %190
  unreachable

198:                                              ; preds = %190
  %199 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %200 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %46, align 8
  %201 = icmp ult %"class.re2::Prog::Inst"* %199, %200
  %202 = ptrtoint %"class.re2::Prog::Inst"* %200 to i64
  br i1 %201, label %203, label %207

203:                                              ; preds = %198
  %204 = bitcast %"class.re2::Prog::Inst"* %199 to i64*
  store i64 0, i64* %204, align 4
  %205 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %199, i64 1
  %206 = ptrtoint %"class.re2::Prog::Inst"* %205 to i64
  store i64 %206, i64* %47, align 8
  br label %261

207:                                              ; preds = %198
  %208 = ptrtoint %"class.re2::Prog::Inst"* %199 to i64
  %209 = load i64, i64* %48, align 8
  %210 = sub i64 %208, %209
  %211 = ashr exact i64 %210, 3
  %212 = add nsw i64 %211, 1
  %213 = icmp ugt i64 %212, 2305843009213693951
  br i1 %213, label %214, label %216

214:                                              ; preds = %207
  %215 = bitcast %"class.std::__1::vector.49"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %215) #17
  unreachable

216:                                              ; preds = %207
  %217 = sub i64 %202, %209
  %218 = ashr exact i64 %217, 3
  %219 = icmp ult i64 %218, 1152921504606846975
  br i1 %219, label %220, label %228

220:                                              ; preds = %216
  %221 = ashr exact i64 %217, 2
  %222 = icmp ult i64 %221, %212
  %223 = select i1 %222, i64 %212, i64 %221
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %233, label %225

225:                                              ; preds = %220
  %226 = icmp ugt i64 %223, 2305843009213693951
  br i1 %226, label %227, label %228

227:                                              ; preds = %225
  tail call void @abort() #17
  unreachable

228:                                              ; preds = %225, %216
  %229 = phi i64 [ %223, %225 ], [ 2305843009213693951, %216 ]
  %230 = shl i64 %229, 3
  %231 = tail call i8* @_Znwm(i64 %230) #16
  %232 = bitcast i8* %231 to %"class.re2::Prog::Inst"*
  br label %233

233:                                              ; preds = %228, %220
  %234 = phi i64 [ %229, %228 ], [ 0, %220 ]
  %235 = phi %"class.re2::Prog::Inst"* [ %232, %228 ], [ null, %220 ]
  %236 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %235, i64 %211
  %237 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %235, i64 %234
  %238 = ptrtoint %"class.re2::Prog::Inst"* %237 to i64
  %239 = bitcast %"class.re2::Prog::Inst"* %236 to i64*
  store i64 0, i64* %239, align 4
  %240 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %236, i64 1
  %241 = ptrtoint %"class.re2::Prog::Inst"* %240 to i64
  %242 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  %243 = load i64, i64* %47, align 8
  %244 = ptrtoint %"class.re2::Prog::Inst"* %242 to i64
  %245 = sub i64 %243, %244
  %246 = ashr exact i64 %245, 3
  %247 = sub nsw i64 0, %246
  %248 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %236, i64 %247
  %249 = ptrtoint %"class.re2::Prog::Inst"* %248 to i64
  %250 = icmp sgt i64 %245, 0
  br i1 %250, label %251, label %255

251:                                              ; preds = %233
  %252 = bitcast %"class.re2::Prog::Inst"* %248 to i8*
  %253 = bitcast %"class.re2::Prog::Inst"* %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 %245, i1 false) #15
  %254 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  br label %255

255:                                              ; preds = %251, %233
  %256 = phi %"class.re2::Prog::Inst"* [ %242, %233 ], [ %254, %251 ]
  store i64 %249, i64* %48, align 8
  store i64 %241, i64* %47, align 8
  store i64 %238, i64* %49, align 8
  %257 = icmp eq %"class.re2::Prog::Inst"* %256, null
  br i1 %257, label %261, label %258

258:                                              ; preds = %255
  %259 = bitcast %"class.re2::Prog::Inst"* %256 to i8*
  tail call void @_ZdlPv(i8* %259) #16
  %260 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  br label %261

261:                                              ; preds = %203, %255, %258
  %262 = phi %"class.re2::Prog::Inst"* [ %205, %203 ], [ %240, %255 ], [ %260, %258 ]
  %263 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %262, i64 -1, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = and i32 %264, -8
  %266 = or i32 %265, 1
  store i32 %266, i32* %263, align 4
  %267 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %268 = ptrtoint %"class.re2::Prog::Inst"* %267 to i64
  %269 = load i64, i64* %48, align 8
  %270 = sub i64 %268, %269
  %271 = trunc i64 %270 to i32
  %272 = shl i32 %271, 1
  %273 = and i32 %272, -16
  %274 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %267, i64 -1, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 15
  %277 = or i32 %276, %273
  store i32 %277, i32* %274, align 4
  %278 = load i64, i64* %47, align 8
  %279 = load i64, i64* %48, align 8
  %280 = sub i64 %278, %279
  %281 = lshr exact i64 %280, 3
  %282 = trunc i64 %281 to i32
  %283 = add i32 %282, 1
  %284 = inttoptr i64 %278 to %"class.re2::Prog::Inst"*
  %285 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %284, i64 -1, i32 1, i32 0
  store i32 %283, i32* %285, align 4
  br label %286

286:                                              ; preds = %190, %261
  %287 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %192, i64 %191, i32 1, i32 0
  %288 = load i32, i32* %287, align 4
  %289 = load i32*, i32** %10, align 8
  %290 = load i32*, i32** %13, align 8
  %291 = icmp ult i32* %289, %290
  %292 = ptrtoint i32* %290 to i64
  br i1 %291, label %293, label %296

293:                                              ; preds = %286
  store i32 %288, i32* %289, align 4
  %294 = getelementptr inbounds i32, i32* %289, i64 1
  %295 = ptrtoint i32* %294 to i64
  store i64 %295, i64* %11, align 8
  br label %348

296:                                              ; preds = %286
  %297 = ptrtoint i32* %289 to i64
  %298 = load i64, i64* %8, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 2
  %301 = add nsw i64 %300, 1
  %302 = icmp ugt i64 %301, 4611686018427387903
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  %304 = bitcast %"class.std::__1::vector.30"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %304) #17
  unreachable

305:                                              ; preds = %296
  %306 = sub i64 %292, %298
  %307 = ashr exact i64 %306, 2
  %308 = icmp ult i64 %307, 2305843009213693951
  br i1 %308, label %309, label %317

309:                                              ; preds = %305
  %310 = ashr exact i64 %306, 1
  %311 = icmp ult i64 %310, %301
  %312 = select i1 %311, i64 %301, i64 %310
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %322, label %314

314:                                              ; preds = %309
  %315 = icmp ugt i64 %312, 4611686018427387903
  br i1 %315, label %316, label %317

316:                                              ; preds = %314
  tail call void @abort() #17
  unreachable

317:                                              ; preds = %314, %305
  %318 = phi i64 [ %312, %314 ], [ 4611686018427387903, %305 ]
  %319 = shl i64 %318, 2
  %320 = tail call i8* @_Znwm(i64 %319) #16
  %321 = bitcast i8* %320 to i32*
  br label %322

322:                                              ; preds = %317, %309
  %323 = phi i64 [ %318, %317 ], [ 0, %309 ]
  %324 = phi i32* [ %321, %317 ], [ null, %309 ]
  %325 = getelementptr inbounds i32, i32* %324, i64 %300
  %326 = getelementptr inbounds i32, i32* %324, i64 %323
  %327 = ptrtoint i32* %326 to i64
  store i32 %288, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %325, i64 1
  %329 = ptrtoint i32* %328 to i64
  %330 = load i32*, i32** %33, align 8
  %331 = load i64, i64* %11, align 8
  %332 = ptrtoint i32* %330 to i64
  %333 = sub i64 %331, %332
  %334 = ashr exact i64 %333, 2
  %335 = sub nsw i64 0, %334
  %336 = getelementptr inbounds i32, i32* %325, i64 %335
  %337 = ptrtoint i32* %336 to i64
  %338 = icmp sgt i64 %333, 0
  br i1 %338, label %339, label %343

339:                                              ; preds = %322
  %340 = bitcast i32* %336 to i8*
  %341 = bitcast i32* %330 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 4 %341, i64 %333, i1 false) #15
  %342 = load i32*, i32** %33, align 8
  br label %343

343:                                              ; preds = %339, %322
  %344 = phi i32* [ %330, %322 ], [ %342, %339 ]
  store i64 %337, i64* %8, align 8
  store i64 %329, i64* %11, align 8
  store i64 %327, i64* %51, align 8
  %345 = icmp eq i32* %344, null
  br i1 %345, label %348, label %346

346:                                              ; preds = %343
  %347 = bitcast i32* %344 to i8*
  tail call void @_ZdlPv(i8* %347) #16
  br label %348

348:                                              ; preds = %293, %343, %346
  %349 = load i32, i32* %194, align 4
  br label %506

350:                                              ; preds = %190, %190, %190
  %351 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %352 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %46, align 8
  %353 = icmp ult %"class.re2::Prog::Inst"* %351, %352
  %354 = ptrtoint %"class.re2::Prog::Inst"* %352 to i64
  br i1 %353, label %355, label %359

355:                                              ; preds = %350
  %356 = bitcast %"class.re2::Prog::Inst"* %351 to i64*
  store i64 0, i64* %356, align 4
  %357 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %351, i64 1
  %358 = ptrtoint %"class.re2::Prog::Inst"* %357 to i64
  store i64 %358, i64* %47, align 8
  br label %413

359:                                              ; preds = %350
  %360 = ptrtoint %"class.re2::Prog::Inst"* %351 to i64
  %361 = load i64, i64* %48, align 8
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, 1
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.49"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #17
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %354, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %372, label %380

372:                                              ; preds = %368
  %373 = ashr exact i64 %369, 2
  %374 = icmp ult i64 %373, %364
  %375 = select i1 %374, i64 %364, i64 %373
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %372
  %378 = icmp ugt i64 %375, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %377
  tail call void @abort() #17
  unreachable

380:                                              ; preds = %377, %368
  %381 = phi i64 [ %375, %377 ], [ 2305843009213693951, %368 ]
  %382 = shl i64 %381, 3
  %383 = tail call i8* @_Znwm(i64 %382) #16
  %384 = bitcast i8* %383 to %"class.re2::Prog::Inst"*
  br label %385

385:                                              ; preds = %380, %372
  %386 = phi i64 [ %381, %380 ], [ 0, %372 ]
  %387 = phi %"class.re2::Prog::Inst"* [ %384, %380 ], [ null, %372 ]
  %388 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %387, i64 %363
  %389 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %387, i64 %386
  %390 = ptrtoint %"class.re2::Prog::Inst"* %389 to i64
  %391 = bitcast %"class.re2::Prog::Inst"* %388 to i64*
  store i64 0, i64* %391, align 4
  %392 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %388, i64 1
  %393 = ptrtoint %"class.re2::Prog::Inst"* %392 to i64
  %394 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  %395 = load i64, i64* %47, align 8
  %396 = ptrtoint %"class.re2::Prog::Inst"* %394 to i64
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 3
  %399 = sub nsw i64 0, %398
  %400 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %388, i64 %399
  %401 = ptrtoint %"class.re2::Prog::Inst"* %400 to i64
  %402 = icmp sgt i64 %397, 0
  br i1 %402, label %403, label %407

403:                                              ; preds = %385
  %404 = bitcast %"class.re2::Prog::Inst"* %400 to i8*
  %405 = bitcast %"class.re2::Prog::Inst"* %394 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %404, i8* align 4 %405, i64 %397, i1 false) #15
  %406 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  br label %407

407:                                              ; preds = %403, %385
  %408 = phi %"class.re2::Prog::Inst"* [ %394, %385 ], [ %406, %403 ]
  store i64 %401, i64* %48, align 8
  store i64 %393, i64* %47, align 8
  store i64 %390, i64* %49, align 8
  %409 = icmp eq %"class.re2::Prog::Inst"* %408, null
  br i1 %409, label %413, label %410

410:                                              ; preds = %407
  %411 = bitcast %"class.re2::Prog::Inst"* %408 to i8*
  tail call void @_ZdlPv(i8* %411) #16
  %412 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  br label %413

413:                                              ; preds = %355, %407, %410
  %414 = phi %"class.re2::Prog::Inst"* [ %357, %355 ], [ %392, %407 ], [ %412, %410 ]
  %415 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %414, i64 -1
  %416 = bitcast %"class.re2::Prog::Inst"* %193 to i64*
  %417 = bitcast %"class.re2::Prog::Inst"* %415 to i64*
  %418 = load i64, i64* %416, align 4
  store i64 %418, i64* %417, align 4
  %419 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %420 = load i32, i32* %194, align 4
  %421 = lshr i32 %420, 4
  %422 = zext i32 %421 to i64
  %423 = load i32*, i32** %42, align 8
  %424 = getelementptr inbounds i32, i32* %423, i64 %422
  %425 = load i32, i32* %424, align 4
  %426 = sext i32 %425 to i64
  %427 = load %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"** %40, align 8
  %428 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %427, i64 %426, i32 1
  %429 = load i32, i32* %428, align 4
  %430 = shl i32 %429, 4
  %431 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %419, i64 -1, i32 0
  %432 = load i32, i32* %431, align 4
  %433 = and i32 %432, 8
  %434 = or i32 %433, %430
  %435 = and i32 %432, 7
  %436 = or i32 %434, %435
  store i32 %436, i32* %431, align 4
  br label %509

437:                                              ; preds = %190, %190
  %438 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %439 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %46, align 8
  %440 = icmp ult %"class.re2::Prog::Inst"* %438, %439
  %441 = ptrtoint %"class.re2::Prog::Inst"* %439 to i64
  br i1 %440, label %442, label %446

442:                                              ; preds = %437
  %443 = bitcast %"class.re2::Prog::Inst"* %438 to i64*
  store i64 0, i64* %443, align 4
  %444 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %438, i64 1
  %445 = ptrtoint %"class.re2::Prog::Inst"* %444 to i64
  store i64 %445, i64* %47, align 8
  br label %500

446:                                              ; preds = %437
  %447 = ptrtoint %"class.re2::Prog::Inst"* %438 to i64
  %448 = load i64, i64* %48, align 8
  %449 = sub i64 %447, %448
  %450 = ashr exact i64 %449, 3
  %451 = add nsw i64 %450, 1
  %452 = icmp ugt i64 %451, 2305843009213693951
  br i1 %452, label %453, label %455

453:                                              ; preds = %446
  %454 = bitcast %"class.std::__1::vector.49"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %454) #17
  unreachable

455:                                              ; preds = %446
  %456 = sub i64 %441, %448
  %457 = ashr exact i64 %456, 3
  %458 = icmp ult i64 %457, 1152921504606846975
  br i1 %458, label %459, label %467

459:                                              ; preds = %455
  %460 = ashr exact i64 %456, 2
  %461 = icmp ult i64 %460, %451
  %462 = select i1 %461, i64 %451, i64 %460
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %472, label %464

464:                                              ; preds = %459
  %465 = icmp ugt i64 %462, 2305843009213693951
  br i1 %465, label %466, label %467

466:                                              ; preds = %464
  tail call void @abort() #17
  unreachable

467:                                              ; preds = %464, %455
  %468 = phi i64 [ %462, %464 ], [ 2305843009213693951, %455 ]
  %469 = shl i64 %468, 3
  %470 = tail call i8* @_Znwm(i64 %469) #16
  %471 = bitcast i8* %470 to %"class.re2::Prog::Inst"*
  br label %472

472:                                              ; preds = %467, %459
  %473 = phi i64 [ %468, %467 ], [ 0, %459 ]
  %474 = phi %"class.re2::Prog::Inst"* [ %471, %467 ], [ null, %459 ]
  %475 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %474, i64 %450
  %476 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %474, i64 %473
  %477 = ptrtoint %"class.re2::Prog::Inst"* %476 to i64
  %478 = bitcast %"class.re2::Prog::Inst"* %475 to i64*
  store i64 0, i64* %478, align 4
  %479 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %475, i64 1
  %480 = ptrtoint %"class.re2::Prog::Inst"* %479 to i64
  %481 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  %482 = load i64, i64* %47, align 8
  %483 = ptrtoint %"class.re2::Prog::Inst"* %481 to i64
  %484 = sub i64 %482, %483
  %485 = ashr exact i64 %484, 3
  %486 = sub nsw i64 0, %485
  %487 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %475, i64 %486
  %488 = ptrtoint %"class.re2::Prog::Inst"* %487 to i64
  %489 = icmp sgt i64 %484, 0
  br i1 %489, label %490, label %494

490:                                              ; preds = %472
  %491 = bitcast %"class.re2::Prog::Inst"* %487 to i8*
  %492 = bitcast %"class.re2::Prog::Inst"* %481 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %491, i8* align 4 %492, i64 %484, i1 false) #15
  %493 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %50, align 8
  br label %494

494:                                              ; preds = %490, %472
  %495 = phi %"class.re2::Prog::Inst"* [ %481, %472 ], [ %493, %490 ]
  store i64 %488, i64* %48, align 8
  store i64 %480, i64* %47, align 8
  store i64 %477, i64* %49, align 8
  %496 = icmp eq %"class.re2::Prog::Inst"* %495, null
  br i1 %496, label %500, label %497

497:                                              ; preds = %494
  %498 = bitcast %"class.re2::Prog::Inst"* %495 to i8*
  tail call void @_ZdlPv(i8* %498) #16
  %499 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  br label %500

500:                                              ; preds = %442, %494, %497
  %501 = phi %"class.re2::Prog::Inst"* [ %444, %442 ], [ %479, %494 ], [ %499, %497 ]
  %502 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %501, i64 -1
  %503 = bitcast %"class.re2::Prog::Inst"* %193 to i64*
  %504 = bitcast %"class.re2::Prog::Inst"* %502 to i64*
  %505 = load i64, i64* %503, align 4
  store i64 %505, i64* %504, align 4
  br label %509

506:                                              ; preds = %190, %348
  %507 = phi i32 [ %349, %348 ], [ %195, %190 ]
  %508 = lshr i32 %507, 4
  br label %56

509:                                              ; preds = %70, %413, %500, %169
  %510 = load i32*, i32** %33, align 8
  %511 = load i32*, i32** %10, align 8
  %512 = icmp eq i32* %510, %511
  br i1 %512, label %513, label %52

513:                                              ; preds = %509, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re24Prog12ComputeHintsEPNSt3__16vectorINS0_4InstENS1_9allocatorIS3_EEEEii(%"class.re2::Prog"* nocapture readnone, %"class.std::__1::vector.49"* nocapture readonly, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.re2::Bitmap256", align 8
  %6 = alloca [256 x i32], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %class.anon.57, align 8
  %10 = bitcast %"class.re2::Bitmap256"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %5, i64 0, i32 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #15
  %12 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %12) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 1024, i1 false)
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 %3, i32* %7, align 4
  %14 = icmp slt i32 %3, %2
  br i1 %14, label %24, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %1, i64 0, i32 0, i32 0
  %17 = bitcast i32* %8 to i8*
  %18 = bitcast %class.anon.57* %9 to i8*
  %19 = getelementptr inbounds %class.anon.57, %class.anon.57* %9, i64 0, i32 0
  %20 = getelementptr inbounds %class.anon.57, %class.anon.57* %9, i64 0, i32 1
  %21 = getelementptr inbounds %class.anon.57, %class.anon.57* %9, i64 0, i32 2
  %22 = getelementptr inbounds %class.anon.57, %class.anon.57* %9, i64 0, i32 3
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 255
  br label %25

24:                                               ; preds = %86, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #15
  ret void

25:                                               ; preds = %86, %15
  %26 = phi i8 [ 0, %15 ], [ %88, %86 ]
  %27 = phi i32 [ %3, %15 ], [ %89, %86 ]
  %28 = icmp eq i32 %27, %3
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = sext i32 %27 to i64
  %31 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %16, align 8
  %32 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %31, i64 %30, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 7
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %46, label %36

36:                                               ; preds = %29, %25
  %37 = and i8 %26, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = load i64, i64* %11, align 8
  br label %42

41:                                               ; preds = %36
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #15
  br label %42

42:                                               ; preds = %39, %41
  %43 = phi i64 [ 0, %41 ], [ %40, %39 ]
  %44 = phi i8 [ 0, %41 ], [ %26, %39 ]
  %45 = or i64 %43, -9223372036854775808
  store i64 %45, i64* %11, align 8
  store i32 %27, i32* %23, align 4
  br label %86

46:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15
  store i32 %3, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  store %"class.re2::Bitmap256"* %5, %"class.re2::Bitmap256"** %19, align 8
  store [256 x i32]* %6, [256 x i32]** %20, align 8
  store i32* %8, i32** %21, align 8
  store i32* %7, i32** %22, align 8
  %47 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %31, i64 %30, i32 1
  %48 = bitcast %union.anon* %47 to i8*
  %49 = load i8, i8* %48, align 4
  %50 = zext i8 %49 to i32
  %51 = bitcast %union.anon* %47 to %struct.anon*
  %52 = getelementptr inbounds %struct.anon, %struct.anon* %51, i64 0, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  call fastcc void @"_ZZN3re24Prog12ComputeHintsEPNSt3__16vectorINS0_4InstENS1_9allocatorIS3_EEEEiiENK3$_1clEii"(%class.anon.57* nonnull %9, i32 %50, i32 %54)
  %55 = getelementptr inbounds %struct.anon, %struct.anon* %51, i64 0, i32 2
  %56 = load i16, i16* %55, align 2
  %57 = and i16 %56, 1
  %58 = icmp ne i16 %57, 0
  %59 = icmp ult i8 %49, 123
  %60 = and i1 %59, %58
  %61 = icmp ugt i8 %53, 96
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %72

63:                                               ; preds = %46
  %64 = icmp ugt i32 %50, 97
  %65 = select i1 %64, i32 %50, i32 97
  %66 = icmp ult i32 %54, 122
  %67 = select i1 %66, i32 %54, i32 122
  %68 = icmp sgt i32 %65, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = add nsw i32 %65, -32
  %71 = add nsw i32 %67, -32
  call fastcc void @"_ZZN3re24Prog12ComputeHintsEPNSt3__16vectorINS0_4InstENS1_9allocatorIS3_EEEEiiENK3$_1clEii"(%class.anon.57* nonnull %9, i32 %70, i32 %71)
  br label %72

72:                                               ; preds = %69, %63, %46
  %73 = load i32, i32* %8, align 4
  %74 = icmp eq i32 %73, %3
  br i1 %74, label %84, label %75

75:                                               ; preds = %72
  %76 = load i32, i32* %7, align 4
  %77 = sub nsw i32 %73, %76
  %78 = icmp slt i32 %77, 32767
  %79 = select i1 %78, i32 %77, i32 32767
  %80 = load i16, i16* %55, align 2
  %81 = trunc i32 %79 to i16
  %82 = shl i16 %81, 1
  %83 = or i16 %82, %80
  store i16 %83, i16* %55, align 2
  br label %84

84:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #15
  %85 = load i32, i32* %7, align 4
  br label %86

86:                                               ; preds = %84, %42
  %87 = phi i32 [ %27, %42 ], [ %85, %84 ]
  %88 = phi i8 [ %44, %42 ], [ 1, %84 ]
  %89 = add nsw i32 %87, -1
  store i32 %89, i32* %7, align 4
  %90 = icmp sgt i32 %87, %2
  br i1 %90, label %25, label %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nofree nounwind ssp uwtable
define internal fastcc void @"_ZZN3re24Prog12ComputeHintsEPNSt3__16vectorINS0_4InstENS1_9allocatorIS3_EEEEiiENK3$_1clEii"(%class.anon.57* nocapture readonly, i32, i32) unnamed_addr #7 align 2 {
  %4 = add nsw i32 %1, -1
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %69

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 0
  %8 = load %"class.re2::Bitmap256"*, %"class.re2::Bitmap256"** %7, align 8
  %9 = sdiv i32 %4, 64
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %8, i64 0, i32 0, i64 %10
  %12 = load i64, i64* %11, align 8
  %13 = srem i32 %4, 64
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = and i64 %12, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %69

18:                                               ; preds = %6
  %19 = or i64 %12, %15
  store i64 %19, i64* %11, align 8
  %20 = load %"class.re2::Bitmap256"*, %"class.re2::Bitmap256"** %7, align 8
  %21 = lshr i32 %1, 6
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %20, i64 0, i32 0, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = and i32 %1, 63
  %26 = zext i32 %25 to i64
  %27 = shl i64 -1, %26
  %28 = and i64 %24, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %18
  %31 = and i32 %1, -64
  %32 = tail call i64 @llvm.cttz.i64(i64 %28, i1 true) #15, !range !2
  %33 = trunc i64 %32 to i32
  %34 = or i32 %31, %33
  br label %60

35:                                               ; preds = %18
  switch i32 %21, label %60 [
    i32 0, label %36
    i32 1, label %44
    i32 2, label %52
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %20, i64 0, i32 0, i64 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #15, !range !2
  %42 = trunc i64 %41 to i32
  %43 = or i32 %42, 64
  br label %60

44:                                               ; preds = %36, %35
  %45 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %20, i64 0, i32 0, i64 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = tail call i64 @llvm.cttz.i64(i64 %46, i1 true) #15, !range !2
  %50 = trunc i64 %49 to i32
  %51 = or i32 %50, 128
  br label %60

52:                                               ; preds = %44, %35
  %53 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %20, i64 0, i32 0, i64 3
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = tail call i64 @llvm.cttz.i64(i64 %54, i1 true) #15, !range !2
  %58 = trunc i64 %57 to i32
  %59 = or i32 %58, 192
  br label %60

60:                                               ; preds = %30, %35, %40, %48, %52, %56
  %61 = phi i32 [ %34, %30 ], [ %59, %56 ], [ %51, %48 ], [ %43, %40 ], [ -1, %52 ], [ -1, %35 ]
  %62 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 1
  %63 = load [256 x i32]*, [256 x i32]** %62, align 8
  %64 = sext i32 %61 to i64
  %65 = getelementptr inbounds [256 x i32], [256 x i32]* %63, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %4 to i64
  %68 = getelementptr inbounds [256 x i32], [256 x i32]* %63, i64 0, i64 %67
  store i32 %66, i32* %68, align 4
  br label %69

69:                                               ; preds = %6, %60, %3
  %70 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 0
  %71 = load %"class.re2::Bitmap256"*, %"class.re2::Bitmap256"** %70, align 8
  %72 = sdiv i32 %2, 64
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %71, i64 0, i32 0, i64 %73
  %75 = load i64, i64* %74, align 8
  %76 = srem i32 %2, 64
  %77 = zext i32 %76 to i64
  %78 = shl i64 1, %77
  %79 = and i64 %75, %78
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %133

81:                                               ; preds = %69
  %82 = or i64 %75, %78
  store i64 %82, i64* %74, align 8
  %83 = load %"class.re2::Bitmap256"*, %"class.re2::Bitmap256"** %70, align 8
  %84 = add nsw i32 %2, 1
  %85 = sdiv i32 %84, 64
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %83, i64 0, i32 0, i64 %86
  %88 = load i64, i64* %87, align 8
  %89 = srem i32 %84, 64
  %90 = zext i32 %89 to i64
  %91 = shl i64 -1, %90
  %92 = and i64 %88, %91
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %81
  %95 = shl nsw i32 %85, 6
  %96 = tail call i64 @llvm.cttz.i64(i64 %92, i1 true) #15, !range !2
  %97 = trunc i64 %96 to i32
  %98 = or i32 %95, %97
  br label %124

99:                                               ; preds = %81
  switch i32 %85, label %124 [
    i32 0, label %100
    i32 1, label %108
    i32 2, label %116
  ]

100:                                              ; preds = %99
  %101 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %83, i64 0, i32 0, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %100
  %105 = tail call i64 @llvm.cttz.i64(i64 %102, i1 true) #15, !range !2
  %106 = trunc i64 %105 to i32
  %107 = or i32 %106, 64
  br label %124

108:                                              ; preds = %100, %99
  %109 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %83, i64 0, i32 0, i64 2
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = tail call i64 @llvm.cttz.i64(i64 %110, i1 true) #15, !range !2
  %114 = trunc i64 %113 to i32
  %115 = or i32 %114, 128
  br label %124

116:                                              ; preds = %108, %99
  %117 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %83, i64 0, i32 0, i64 3
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = tail call i64 @llvm.cttz.i64(i64 %118, i1 true) #15, !range !2
  %122 = trunc i64 %121 to i32
  %123 = or i32 %122, 192
  br label %124

124:                                              ; preds = %94, %99, %104, %112, %116, %120
  %125 = phi i32 [ %98, %94 ], [ %123, %120 ], [ %115, %112 ], [ %107, %104 ], [ -1, %116 ], [ -1, %99 ]
  %126 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 1
  %127 = load [256 x i32]*, [256 x i32]** %126, align 8
  %128 = sext i32 %125 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* %127, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %2 to i64
  %132 = getelementptr inbounds [256 x i32], [256 x i32]* %127, i64 0, i64 %131
  store i32 %130, i32* %132, align 4
  br label %133

133:                                              ; preds = %69, %124
  %134 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 2
  %135 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 1
  %136 = getelementptr inbounds %class.anon.57, %class.anon.57* %0, i64 0, i32 3
  br label %137

137:                                              ; preds = %181, %133
  %138 = phi i32 [ %1, %133 ], [ %196, %181 ]
  %139 = icmp slt i32 %138, 256
  br i1 %139, label %140, label %197

140:                                              ; preds = %137
  %141 = load %"class.re2::Bitmap256"*, %"class.re2::Bitmap256"** %70, align 8
  %142 = sdiv i32 %138, 64
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %141, i64 0, i32 0, i64 %143
  %145 = load i64, i64* %144, align 8
  %146 = srem i32 %138, 64
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = and i64 %145, %148
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %140
  %152 = shl nsw i32 %142, 6
  %153 = tail call i64 @llvm.cttz.i64(i64 %149, i1 true) #15, !range !2
  %154 = trunc i64 %153 to i32
  %155 = or i32 %152, %154
  br label %181

156:                                              ; preds = %140
  switch i32 %142, label %181 [
    i32 0, label %157
    i32 1, label %165
    i32 2, label %173
  ]

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %141, i64 0, i32 0, i64 1
  %159 = load i64, i64* %158, align 8
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %157
  %162 = tail call i64 @llvm.cttz.i64(i64 %159, i1 true) #15, !range !2
  %163 = trunc i64 %162 to i32
  %164 = or i32 %163, 64
  br label %181

165:                                              ; preds = %157, %156
  %166 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %141, i64 0, i32 0, i64 2
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = tail call i64 @llvm.cttz.i64(i64 %167, i1 true) #15, !range !2
  %171 = trunc i64 %170 to i32
  %172 = or i32 %171, 128
  br label %181

173:                                              ; preds = %165, %156
  %174 = getelementptr inbounds %"class.re2::Bitmap256", %"class.re2::Bitmap256"* %141, i64 0, i32 0, i64 3
  %175 = load i64, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %173
  %178 = tail call i64 @llvm.cttz.i64(i64 %175, i1 true) #15, !range !2
  %179 = trunc i64 %178 to i32
  %180 = or i32 %179, 192
  br label %181

181:                                              ; preds = %151, %156, %161, %169, %173, %177
  %182 = phi i32 [ %155, %151 ], [ %180, %177 ], [ %172, %169 ], [ %164, %161 ], [ -1, %173 ], [ -1, %156 ]
  %183 = load i32*, i32** %134, align 8
  %184 = load [256 x i32]*, [256 x i32]** %135, align 8
  %185 = sext i32 %182 to i64
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* %184, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %183, align 4
  %189 = icmp slt i32 %187, %188
  %190 = select i1 %189, i32 %187, i32 %188
  store i32 %190, i32* %183, align 4
  %191 = load i32*, i32** %136, align 8
  %192 = load i32, i32* %191, align 4
  %193 = load [256 x i32]*, [256 x i32]** %135, align 8
  %194 = getelementptr inbounds [256 x i32], [256 x i32]* %193, i64 0, i64 %185
  store i32 %192, i32* %194, align 4
  %195 = icmp eq i32 %182, %2
  %196 = add nsw i32 %182, 1
  br i1 %195, label %197, label %137

197:                                              ; preds = %181, %137
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_ZN3re24Prog24PrefixAccel_FrontAndBackEPKvm(%"class.re2::Prog"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 9
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %2
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = add i64 %5, -1
  %9 = sub i64 1, %5
  %10 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 10
  %11 = load i32, i32* %10, align 8
  %12 = ptrtoint i8* %1 to i64
  %13 = add i64 %12, %2
  %14 = add i64 %13, %9
  %15 = sub i64 %14, %12
  %16 = tail call i8* @memchr(i8* %1, i32 %11, i64 %15) #18
  %17 = icmp eq i8* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %18, %27
  %22 = phi i8* [ %16, %18 ], [ %31, %27 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 %8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %20, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = ptrtoint i8* %28 to i64
  %30 = sub i64 %14, %29
  %31 = tail call i8* @memchr(i8* %28, i32 %11, i64 %30) #18
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %21

33:                                               ; preds = %21, %27, %7, %3
  %34 = phi i8* [ null, %3 ], [ null, %7 ], [ %22, %21 ], [ null, %27 ]
  ret i8* %34
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  br label %4

4:                                                ; preds = %285, %3
  %5 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %1, %3 ], [ %266, %285 ]
  %6 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %0, %3 ], [ %18, %285 ]
  %7 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %5 to i64
  %8 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %5, i64 -1
  %9 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %8 to i64*
  %10 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %8 to i64*
  %11 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %8 to i64*
  %12 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %8 to i64*
  %13 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %8 to i64*
  %14 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %5 to i64
  br label %15

15:                                               ; preds = %294, %4
  %16 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %6, %4 ], [ %295, %294 ]
  br label %17

17:                                               ; preds = %216, %15
  %18 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %16, %15 ], [ %207, %216 ]
  %19 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %18 to i64
  %20 = sub i64 %7, %19
  %21 = ashr exact i64 %20, 3
  switch i64 %21, label %105 [
    i64 0, label %298
    i64 1, label %298
    i64 2, label %22
    i64 3, label %31
    i64 4, label %66
    i64 5, label %71
  ]

22:                                               ; preds = %17
  %23 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %24 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %5, i64 -1
  %25 = tail call zeroext i1 %23(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %24, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  br i1 %25, label %26, label %298

26:                                               ; preds = %22
  %27 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %24 to i64*
  %30 = load i64, i64* %29, align 4
  store i64 %30, i64* %27, align 4
  store i64 %28, i64* %29, align 4
  br label %298

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 1
  %33 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %5, i64 -1
  %34 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %35 = tail call zeroext i1 %34(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %32, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  %36 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %37 = tail call zeroext i1 %36(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %33, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %32) #15
  br i1 %35, label %51, label %38

38:                                               ; preds = %31
  br i1 %37, label %39, label %298

39:                                               ; preds = %38
  %40 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %32 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %33 to i64*
  %43 = load i64, i64* %42, align 4
  store i64 %43, i64* %40, align 4
  store i64 %41, i64* %42, align 4
  %44 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %45 = tail call zeroext i1 %44(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %32, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  br i1 %45, label %46, label %298

46:                                               ; preds = %39
  %47 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 4
  %49 = shufflevector <2 x i64> %48, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %50 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 4
  br label %298

51:                                               ; preds = %31
  %52 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to i64*
  %53 = load i64, i64* %52, align 4
  br i1 %37, label %54, label %57

54:                                               ; preds = %51
  %55 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %33 to i64*
  %56 = load i64, i64* %55, align 4
  store i64 %56, i64* %52, align 4
  store i64 %53, i64* %55, align 4
  br label %298

57:                                               ; preds = %51
  %58 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %32 to i64*
  %59 = load i64, i64* %58, align 4
  store i64 %59, i64* %52, align 4
  store i64 %53, i64* %58, align 4
  %60 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %61 = tail call zeroext i1 %60(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %33, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %32) #15
  br i1 %61, label %62, label %298

62:                                               ; preds = %57
  %63 = load i64, i64* %58, align 4
  %64 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %33 to i64*
  %65 = load i64, i64* %64, align 4
  store i64 %65, i64* %58, align 4
  store i64 %63, i64* %64, align 4
  br label %298

66:                                               ; preds = %17
  %67 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 1
  %68 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 2
  %69 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %5, i64 -1
  %70 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %18, %"class.re2::SparseArray<int>::IndexValue"* %67, %"class.re2::SparseArray<int>::IndexValue"* %68, %"class.re2::SparseArray<int>::IndexValue"* %69, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  br label %298

71:                                               ; preds = %17
  %72 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 1
  %73 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 2
  %74 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 3
  %75 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %5, i64 -1
  %76 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %18, %"class.re2::SparseArray<int>::IndexValue"* %72, %"class.re2::SparseArray<int>::IndexValue"* %73, %"class.re2::SparseArray<int>::IndexValue"* %74, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2) #15
  %77 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %78 = tail call zeroext i1 %77(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %75, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %74) #15
  br i1 %78, label %79, label %298

79:                                               ; preds = %71
  %80 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %74 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %75 to i64*
  %83 = load i64, i64* %82, align 4
  store i64 %83, i64* %80, align 4
  store i64 %81, i64* %82, align 4
  %84 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %85 = tail call zeroext i1 %84(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %74, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %73) #15
  br i1 %85, label %86, label %298

86:                                               ; preds = %79
  %87 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %73 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 4
  %89 = shufflevector <2 x i64> %88, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %90 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %73 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %90, align 4
  %91 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %92 = tail call zeroext i1 %91(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %73, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %72) #15
  br i1 %92, label %93, label %298

93:                                               ; preds = %86
  %94 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %72 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 4
  %96 = shufflevector <2 x i64> %95, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %97 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %72 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 4
  %98 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %99 = tail call zeroext i1 %98(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %72, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  br i1 %99, label %100, label %298

100:                                              ; preds = %93
  %101 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 4
  %103 = shufflevector <2 x i64> %102, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %104 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 4
  br label %298

105:                                              ; preds = %17
  %106 = icmp slt i64 %20, 248
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %18, %"class.re2::SparseArray<int>::IndexValue"* %5, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  br label %298

108:                                              ; preds = %105
  %109 = icmp sgt i64 %20, 7992
  %110 = sdiv i64 %21, 2
  %111 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 %110
  br i1 %109, label %112, label %145

112:                                              ; preds = %108
  %113 = sdiv i64 %21, 4
  %114 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 %113
  %115 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %111, i64 %113
  %116 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %18, %"class.re2::SparseArray<int>::IndexValue"* %114, %"class.re2::SparseArray<int>::IndexValue"* %111, %"class.re2::SparseArray<int>::IndexValue"* %115, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2) #15
  %117 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %118 = tail call zeroext i1 %117(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %8, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %115) #15
  br i1 %118, label %119, label %174

119:                                              ; preds = %112
  %120 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %115 to i64*
  %121 = load i64, i64* %120, align 4
  %122 = load i64, i64* %12, align 4
  store i64 %122, i64* %120, align 4
  store i64 %121, i64* %12, align 4
  %123 = add i32 %116, 1
  %124 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %125 = tail call zeroext i1 %124(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %115, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111) #15
  br i1 %125, label %126, label %174

126:                                              ; preds = %119
  %127 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %111 to i64*
  %128 = load i64, i64* %127, align 4
  %129 = load i64, i64* %120, align 4
  store i64 %129, i64* %127, align 4
  store i64 %128, i64* %120, align 4
  %130 = add i32 %116, 2
  %131 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %132 = tail call zeroext i1 %131(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %114) #15
  br i1 %132, label %133, label %174

133:                                              ; preds = %126
  %134 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %114 to i64*
  %135 = load i64, i64* %134, align 4
  %136 = load i64, i64* %127, align 4
  store i64 %136, i64* %134, align 4
  store i64 %135, i64* %127, align 4
  %137 = add i32 %116, 3
  %138 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %139 = tail call zeroext i1 %138(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %114, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  br i1 %139, label %140, label %174

140:                                              ; preds = %133
  %141 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to i64*
  %142 = load i64, i64* %141, align 4
  %143 = load i64, i64* %134, align 4
  store i64 %143, i64* %141, align 4
  store i64 %142, i64* %134, align 4
  %144 = add i32 %116, 4
  br label %174

145:                                              ; preds = %108
  %146 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %147 = tail call zeroext i1 %146(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  %148 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %8, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111) #15
  br i1 %147, label %161, label %150

150:                                              ; preds = %145
  br i1 %149, label %151, label %174

151:                                              ; preds = %150
  %152 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %111 to i64*
  %153 = load i64, i64* %152, align 4
  %154 = load i64, i64* %9, align 4
  store i64 %154, i64* %152, align 4
  store i64 %153, i64* %9, align 4
  %155 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %156 = tail call zeroext i1 %155(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18) #15
  br i1 %156, label %157, label %174

157:                                              ; preds = %151
  %158 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to i64*
  %159 = load i64, i64* %158, align 4
  %160 = load i64, i64* %152, align 4
  store i64 %160, i64* %158, align 4
  store i64 %159, i64* %152, align 4
  br label %174

161:                                              ; preds = %145
  %162 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to i64*
  %163 = load i64, i64* %162, align 4
  br i1 %149, label %164, label %166

164:                                              ; preds = %161
  %165 = load i64, i64* %11, align 4
  store i64 %165, i64* %162, align 4
  store i64 %163, i64* %11, align 4
  br label %174

166:                                              ; preds = %161
  %167 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %111 to i64*
  %168 = load i64, i64* %167, align 4
  store i64 %168, i64* %162, align 4
  store i64 %163, i64* %167, align 4
  %169 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %8, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111) #15
  br i1 %170, label %171, label %174

171:                                              ; preds = %166
  %172 = load i64, i64* %167, align 4
  %173 = load i64, i64* %10, align 4
  store i64 %173, i64* %167, align 4
  store i64 %172, i64* %10, align 4
  br label %174

174:                                              ; preds = %171, %166, %164, %157, %151, %150, %140, %133, %126, %119, %112
  %175 = phi i32 [ %144, %140 ], [ %137, %133 ], [ %130, %126 ], [ %123, %119 ], [ %116, %112 ], [ 1, %164 ], [ 0, %150 ], [ 2, %157 ], [ 1, %151 ], [ 2, %171 ], [ 1, %166 ]
  %176 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %177 = tail call zeroext i1 %176(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111) #15
  br i1 %177, label %232, label %178

178:                                              ; preds = %174, %223
  %179 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %180, %223 ], [ %8, %174 ]
  %180 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %179, i64 -1
  %181 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %18, %180
  br i1 %181, label %182, label %223

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 1
  %184 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %185 = tail call zeroext i1 %184(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %8) #15
  br i1 %185, label %200, label %186

186:                                              ; preds = %182
  %187 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %183, %8
  br i1 %187, label %298, label %188

188:                                              ; preds = %186, %197
  %189 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %198, %197 ], [ %183, %186 ]
  %190 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %191 = tail call zeroext i1 %190(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %189) #15
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %189 to i64*
  %194 = load i64, i64* %193, align 4
  %195 = load i64, i64* %13, align 4
  store i64 %195, i64* %193, align 4
  store i64 %194, i64* %13, align 4
  %196 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %189, i64 1
  br label %200

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %189, i64 1
  %199 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %198, %8
  br i1 %199, label %298, label %188

200:                                              ; preds = %192, %182
  %201 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %183, %182 ], [ %196, %192 ]
  %202 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %201, %8
  br i1 %202, label %298, label %203

203:                                              ; preds = %200, %218
  %204 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %210, %218 ], [ %201, %200 ]
  %205 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %214, %218 ], [ %8, %200 ]
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %204, %203 ], [ %210, %206 ]
  %208 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %209 = tail call zeroext i1 %208(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %207) #15
  %210 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %207, i64 1
  br i1 %209, label %211, label %206

211:                                              ; preds = %206, %211
  %212 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %214, %211 ], [ %205, %206 ]
  %213 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %214 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %212, i64 -1
  %215 = tail call zeroext i1 %213(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %18, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %214) #15
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"class.re2::SparseArray<int>::IndexValue"* %207, %214
  br i1 %217, label %218, label %17

218:                                              ; preds = %216
  %219 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %207 to i64*
  %220 = load i64, i64* %219, align 4
  %221 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %214 to i64*
  %222 = load i64, i64* %221, align 4
  store i64 %222, i64* %219, align 4
  store i64 %220, i64* %221, align 4
  br label %203

223:                                              ; preds = %178
  %224 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %225 = tail call zeroext i1 %224(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %180, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %111) #15
  br i1 %225, label %226, label %178

226:                                              ; preds = %223
  %227 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %18 to i64*
  %228 = load i64, i64* %227, align 4
  %229 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %180 to i64*
  %230 = load i64, i64* %229, align 4
  store i64 %230, i64* %227, align 4
  store i64 %228, i64* %229, align 4
  %231 = add i32 %175, 1
  br label %232

232:                                              ; preds = %174, %226
  %233 = phi i32 [ %231, %226 ], [ %175, %174 ]
  %234 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %180, %226 ], [ %8, %174 ]
  %235 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %18 to i64
  %236 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %18, i64 1
  %237 = icmp ult %"class.re2::SparseArray<int>::IndexValue"* %236, %234
  br i1 %237, label %238, label %263

238:                                              ; preds = %232, %255
  %239 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %262, %255 ], [ %111, %232 ]
  %240 = phi i32 [ %260, %255 ], [ %233, %232 ]
  %241 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %247, %255 ], [ %236, %232 ]
  %242 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %251, %255 ], [ %234, %232 ]
  br label %243

243:                                              ; preds = %243, %238
  %244 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %241, %238 ], [ %247, %243 ]
  %245 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %246 = tail call zeroext i1 %245(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %244, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %239) #15
  %247 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %244, i64 1
  br i1 %246, label %243, label %248

248:                                              ; preds = %243, %248
  %249 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %251, %248 ], [ %242, %243 ]
  %250 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %251 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %249, i64 -1
  %252 = tail call zeroext i1 %250(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %251, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %239) #15
  br i1 %252, label %253, label %248

253:                                              ; preds = %248
  %254 = icmp ugt %"class.re2::SparseArray<int>::IndexValue"* %244, %251
  br i1 %254, label %263, label %255

255:                                              ; preds = %253
  %256 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %244 to i64*
  %257 = load i64, i64* %256, align 4
  %258 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %251 to i64*
  %259 = load i64, i64* %258, align 4
  store i64 %259, i64* %256, align 4
  store i64 %257, i64* %258, align 4
  %260 = add i32 %240, 1
  %261 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %239, %244
  %262 = select i1 %261, %"class.re2::SparseArray<int>::IndexValue"* %251, %"class.re2::SparseArray<int>::IndexValue"* %239
  br label %238

263:                                              ; preds = %253, %232
  %264 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %111, %232 ], [ %239, %253 ]
  %265 = phi i32 [ %233, %232 ], [ %240, %253 ]
  %266 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %236, %232 ], [ %244, %253 ]
  %267 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %266, %264
  br i1 %267, label %277, label %268

268:                                              ; preds = %263
  %269 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %270 = tail call zeroext i1 %269(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %264, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %266) #15
  br i1 %270, label %271, label %277

271:                                              ; preds = %268
  %272 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %266 to i64*
  %273 = load i64, i64* %272, align 4
  %274 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %264 to i64*
  %275 = load i64, i64* %274, align 4
  store i64 %275, i64* %272, align 4
  store i64 %273, i64* %274, align 4
  %276 = add i32 %265, 1
  br label %277

277:                                              ; preds = %263, %271, %268
  %278 = phi i32 [ %276, %271 ], [ %265, %268 ], [ %265, %263 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %287

280:                                              ; preds = %277
  %281 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEbT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %18, %"class.re2::SparseArray<int>::IndexValue"* %266, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  %282 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %266, i64 1
  %283 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEbT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %282, %"class.re2::SparseArray<int>::IndexValue"* %5, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  br i1 %281, label %298, label %285

285:                                              ; preds = %284, %296
  br label %4

286:                                              ; preds = %280
  br i1 %281, label %294, label %287

287:                                              ; preds = %286, %277
  %288 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %266 to i64
  %289 = sub i64 %288, %235
  %290 = sub i64 %14, %288
  %291 = icmp slt i64 %289, %290
  br i1 %291, label %292, label %296

292:                                              ; preds = %287
  tail call void @_ZNSt3__16__sortIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %18, %"class.re2::SparseArray<int>::IndexValue"* %266, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  %293 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %266, i64 1
  br label %294

294:                                              ; preds = %292, %286
  %295 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %282, %286 ], [ %293, %292 ]
  br label %15

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %266, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %297, %"class.re2::SparseArray<int>::IndexValue"* %5, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  br label %285

298:                                              ; preds = %284, %200, %17, %17, %186, %197, %100, %93, %86, %79, %71, %62, %57, %54, %46, %39, %38, %22, %26, %66, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %6 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %7 = tail call zeroext i1 %6(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %1, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  %8 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %9 = tail call zeroext i1 %8(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %2, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %1) #15
  br i1 %7, label %22, label %10

10:                                               ; preds = %5
  br i1 %9, label %11, label %37

11:                                               ; preds = %10
  %12 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %1 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %2 to i64*
  %15 = load i64, i64* %14, align 4
  store i64 %15, i64* %12, align 4
  store i64 %13, i64* %14, align 4
  %16 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %17 = tail call zeroext i1 %16(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %1, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %17, label %18, label %37

18:                                               ; preds = %11
  %19 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = load i64, i64* %12, align 4
  store i64 %21, i64* %19, align 4
  store i64 %20, i64* %12, align 4
  br label %37

22:                                               ; preds = %5
  %23 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %24 = load i64, i64* %23, align 4
  br i1 %9, label %25, label %28

25:                                               ; preds = %22
  %26 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %2 to i64*
  %27 = load i64, i64* %26, align 4
  store i64 %27, i64* %23, align 4
  store i64 %24, i64* %26, align 4
  br label %37

28:                                               ; preds = %22
  %29 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %1 to i64*
  %30 = load i64, i64* %29, align 4
  store i64 %30, i64* %23, align 4
  store i64 %24, i64* %29, align 4
  %31 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %32 = tail call zeroext i1 %31(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %2, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %1) #15
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = load i64, i64* %29, align 4
  %35 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %2 to i64*
  %36 = load i64, i64* %35, align 4
  store i64 %36, i64* %29, align 4
  store i64 %34, i64* %35, align 4
  br label %37

37:                                               ; preds = %10, %11, %18, %25, %28, %33
  %38 = phi i32 [ 1, %25 ], [ 0, %10 ], [ 2, %18 ], [ 1, %11 ], [ 2, %33 ], [ 1, %28 ]
  %39 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %40 = tail call zeroext i1 %39(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %3, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %2) #15
  br i1 %40, label %41, label %61

41:                                               ; preds = %37
  %42 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %2 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %3 to i64*
  %45 = load i64, i64* %44, align 4
  store i64 %45, i64* %42, align 4
  store i64 %43, i64* %44, align 4
  %46 = add nuw nsw i32 %38, 1
  %47 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %48 = tail call zeroext i1 %47(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %2, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %1) #15
  br i1 %48, label %49, label %61

49:                                               ; preds = %41
  %50 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %1 to i64*
  %51 = load i64, i64* %50, align 4
  %52 = load i64, i64* %42, align 4
  store i64 %52, i64* %50, align 4
  store i64 %51, i64* %42, align 4
  %53 = add nuw nsw i32 %38, 2
  %54 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %4, align 8
  %55 = tail call zeroext i1 %54(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %1, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = load i64, i64* %50, align 4
  store i64 %59, i64* %57, align 4
  store i64 %58, i64* %50, align 4
  %60 = add nuw nsw i32 %38, 3
  br label %61

61:                                               ; preds = %41, %56, %49, %37
  %62 = phi i32 [ %60, %56 ], [ %53, %49 ], [ %46, %41 ], [ %38, %37 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEvT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.re2::SparseArray<int>::IndexValue"*
  %6 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 2
  %7 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 1
  %8 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %9 = tail call zeroext i1 %8(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %7, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  %10 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %11 = tail call zeroext i1 %10(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %6, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %7) #15
  br i1 %9, label %25, label %12

12:                                               ; preds = %3
  br i1 %11, label %13, label %41

13:                                               ; preds = %12
  %14 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %7 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 4
  %16 = shufflevector <2 x i64> %15, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %17 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %7 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %17, align 4
  %18 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %19 = tail call zeroext i1 %18(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %7, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %19, label %20, label %41

20:                                               ; preds = %13
  %21 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 4
  %23 = shufflevector <2 x i64> %22, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %24 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 4
  br label %41

25:                                               ; preds = %3
  %26 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %27 = load i64, i64* %26, align 4
  br i1 %11, label %28, label %31

28:                                               ; preds = %25
  %29 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %6 to i64*
  %30 = load i64, i64* %29, align 4
  store i64 %30, i64* %26, align 4
  store i64 %27, i64* %29, align 4
  br label %41

31:                                               ; preds = %25
  %32 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %7 to i64*
  %33 = load i64, i64* %32, align 4
  store i64 %33, i64* %26, align 4
  store i64 %27, i64* %32, align 4
  %34 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %35 = tail call zeroext i1 %34(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %6, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %7) #15
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %7 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 4
  %39 = shufflevector <2 x i64> %38, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %40 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %7 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 4
  br label %41

41:                                               ; preds = %12, %13, %20, %28, %31, %36
  %42 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 3
  %43 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %42, %1
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = bitcast i64* %4 to i8*
  br label %47

46:                                               ; preds = %70, %41
  ret void

47:                                               ; preds = %44, %70
  %48 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %42, %44 ], [ %71, %70 ]
  %49 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %6, %44 ], [ %48, %70 ]
  %50 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %51 = call zeroext i1 %50(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %48, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %49) #15
  br i1 %51, label %52, label %70

52:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #15
  %53 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %48 to i64*
  %54 = load i64, i64* %53, align 4
  store i64 %54, i64* %4, align 8
  br label %55

55:                                               ; preds = %62, %52
  %56 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %48, %52 ], [ %57, %62 ]
  %57 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %49, %52 ], [ %64, %62 ]
  %58 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %57 to i64*
  %59 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %56 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 4
  %61 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %57, %0
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %64 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %57, i64 -1
  %65 = call zeroext i1 %63(%"class.re2::SparseArray<int>::IndexValue"* nonnull dereferenceable(8) %5, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %64) #15
  br i1 %65, label %55, label %66

66:                                               ; preds = %55, %62
  %67 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %57, %62 ], [ %0, %55 ]
  %68 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %67 to i64*
  %69 = load i64, i64* %4, align 8
  store i64 %69, i64* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #15
  br label %70

70:                                               ; preds = %66, %47
  %71 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %48, i64 1
  %72 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %71, %1
  br i1 %72, label %46, label %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEbT0_SB_T_(%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8)) local_unnamed_addr #3 comdat {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.re2::SparseArray<int>::IndexValue"*
  %6 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %1 to i64
  %7 = ptrtoint %"class.re2::SparseArray<int>::IndexValue"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 3
  switch i64 %9, label %93 [
    i64 0, label %167
    i64 1, label %167
    i64 2, label %10
    i64 3, label %19
    i64 4, label %54
    i64 5, label %59
  ]

10:                                               ; preds = %3
  %11 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %12 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %1, i64 -1
  %13 = tail call zeroext i1 %11(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %12, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %13, label %14, label %167

14:                                               ; preds = %10
  %15 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %12 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %15, align 4
  store i64 %16, i64* %17, align 4
  br label %167

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 1
  %21 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %1, i64 -1
  %22 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %23 = tail call zeroext i1 %22(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %20, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  %24 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %25 = tail call zeroext i1 %24(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %21, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %20) #15
  br i1 %23, label %39, label %26

26:                                               ; preds = %19
  br i1 %25, label %27, label %167

27:                                               ; preds = %26
  %28 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %20 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %21 to i64*
  %31 = load i64, i64* %30, align 4
  store i64 %31, i64* %28, align 4
  store i64 %29, i64* %30, align 4
  %32 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %33 = tail call zeroext i1 %32(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %20, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %33, label %34, label %167

34:                                               ; preds = %27
  %35 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 4
  %37 = shufflevector <2 x i64> %36, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %38 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 4
  br label %167

39:                                               ; preds = %19
  %40 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %41 = load i64, i64* %40, align 4
  br i1 %25, label %42, label %45

42:                                               ; preds = %39
  %43 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %21 to i64*
  %44 = load i64, i64* %43, align 4
  store i64 %44, i64* %40, align 4
  store i64 %41, i64* %43, align 4
  br label %167

45:                                               ; preds = %39
  %46 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %20 to i64*
  %47 = load i64, i64* %46, align 4
  store i64 %47, i64* %40, align 4
  store i64 %41, i64* %46, align 4
  %48 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %49 = tail call zeroext i1 %48(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %21, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %20) #15
  br i1 %49, label %50, label %167

50:                                               ; preds = %45
  %51 = load i64, i64* %46, align 4
  %52 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %21 to i64*
  %53 = load i64, i64* %52, align 4
  store i64 %53, i64* %46, align 4
  store i64 %51, i64* %52, align 4
  br label %167

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 1
  %56 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 2
  %57 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %1, i64 -1
  %58 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %0, %"class.re2::SparseArray<int>::IndexValue"* %55, %"class.re2::SparseArray<int>::IndexValue"* %56, %"class.re2::SparseArray<int>::IndexValue"* %57, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2)
  br label %167

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 1
  %61 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 2
  %62 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 3
  %63 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %1, i64 -1
  %64 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3re211SparseArrayIiE10IndexValueES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.re2::SparseArray<int>::IndexValue"* %0, %"class.re2::SparseArray<int>::IndexValue"* %60, %"class.re2::SparseArray<int>::IndexValue"* %61, %"class.re2::SparseArray<int>::IndexValue"* %62, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** dereferenceable(8) %2) #15
  %65 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %66 = tail call zeroext i1 %65(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %63, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %62) #15
  br i1 %66, label %67, label %167

67:                                               ; preds = %59
  %68 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %62 to i64*
  %69 = load i64, i64* %68, align 4
  %70 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %63 to i64*
  %71 = load i64, i64* %70, align 4
  store i64 %71, i64* %68, align 4
  store i64 %69, i64* %70, align 4
  %72 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %73 = tail call zeroext i1 %72(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %62, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %61) #15
  br i1 %73, label %74, label %167

74:                                               ; preds = %67
  %75 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %61 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 4
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %78 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %61 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 4
  %79 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %80 = tail call zeroext i1 %79(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %61, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %60) #15
  br i1 %80, label %81, label %167

81:                                               ; preds = %74
  %82 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %60 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 4
  %84 = shufflevector <2 x i64> %83, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %85 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %60 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %85, align 4
  %86 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %87 = tail call zeroext i1 %86(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %60, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %87, label %88, label %167

88:                                               ; preds = %81
  %89 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 4
  %91 = shufflevector <2 x i64> %90, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %92 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %92, align 4
  br label %167

93:                                               ; preds = %3
  %94 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 2
  %95 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 1
  %96 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %97 = tail call zeroext i1 %96(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %95, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  %98 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %99 = tail call zeroext i1 %98(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %94, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %95) #15
  br i1 %97, label %113, label %100

100:                                              ; preds = %93
  br i1 %99, label %101, label %129

101:                                              ; preds = %100
  %102 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %95 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 4
  %104 = shufflevector <2 x i64> %103, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %105 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %95 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %105, align 4
  %106 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %107 = tail call zeroext i1 %106(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %95, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %0) #15
  br i1 %107, label %108, label %129

108:                                              ; preds = %101
  %109 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 4
  %111 = shufflevector <2 x i64> %110, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %112 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %112, align 4
  br label %129

113:                                              ; preds = %93
  %114 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %0 to i64*
  %115 = load i64, i64* %114, align 4
  br i1 %99, label %116, label %119

116:                                              ; preds = %113
  %117 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %94 to i64*
  %118 = load i64, i64* %117, align 4
  store i64 %118, i64* %114, align 4
  store i64 %115, i64* %117, align 4
  br label %129

119:                                              ; preds = %113
  %120 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %95 to i64*
  %121 = load i64, i64* %120, align 4
  store i64 %121, i64* %114, align 4
  store i64 %115, i64* %120, align 4
  %122 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %123 = tail call zeroext i1 %122(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %94, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %95) #15
  br i1 %123, label %124, label %129

124:                                              ; preds = %119
  %125 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %95 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 4
  %127 = shufflevector <2 x i64> %126, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %128 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %95 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 4
  br label %129

129:                                              ; preds = %100, %101, %108, %116, %119, %124
  %130 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %0, i64 3
  %131 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %130, %1
  br i1 %131, label %167, label %132

132:                                              ; preds = %129
  %133 = bitcast i64* %4 to i8*
  br label %134

134:                                              ; preds = %132, %160
  %135 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %130, %132 ], [ %162, %160 ]
  %136 = phi i32 [ 0, %132 ], [ %161, %160 ]
  %137 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %94, %132 ], [ %135, %160 ]
  %138 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %139 = call zeroext i1 %138(%"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %135, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %137) #15
  br i1 %139, label %140, label %160

140:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #15
  %141 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %135 to i64*
  %142 = load i64, i64* %141, align 4
  store i64 %142, i64* %4, align 8
  br label %143

143:                                              ; preds = %150, %140
  %144 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %135, %140 ], [ %145, %150 ]
  %145 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %137, %140 ], [ %152, %150 ]
  %146 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %145 to i64*
  %147 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %144 to i64*
  %148 = load i64, i64* %146, align 4
  store i64 %148, i64* %147, align 4
  %149 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %145, %0
  br i1 %149, label %154, label %150

150:                                              ; preds = %143
  %151 = load i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)*, i1 (%"class.re2::SparseArray<int>::IndexValue"*, %"class.re2::SparseArray<int>::IndexValue"*)** %2, align 8
  %152 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %145, i64 -1
  %153 = call zeroext i1 %151(%"class.re2::SparseArray<int>::IndexValue"* nonnull dereferenceable(8) %5, %"class.re2::SparseArray<int>::IndexValue"* dereferenceable(8) %152) #15
  br i1 %153, label %143, label %154

154:                                              ; preds = %143, %150
  %155 = phi %"class.re2::SparseArray<int>::IndexValue"* [ %145, %150 ], [ %0, %143 ]
  %156 = bitcast %"class.re2::SparseArray<int>::IndexValue"* %155 to i64*
  %157 = load i64, i64* %4, align 8
  store i64 %157, i64* %156, align 4
  %158 = add i32 %136, 1
  %159 = icmp eq i32 %158, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #15
  br i1 %159, label %164, label %160

160:                                              ; preds = %154, %134
  %161 = phi i32 [ %158, %154 ], [ %136, %134 ]
  %162 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %135, i64 1
  %163 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %162, %1
  br i1 %163, label %167, label %134

164:                                              ; preds = %154
  %165 = getelementptr inbounds %"class.re2::SparseArray<int>::IndexValue", %"class.re2::SparseArray<int>::IndexValue"* %135, i64 1
  %166 = icmp eq %"class.re2::SparseArray<int>::IndexValue"* %165, %1
  br label %167

167:                                              ; preds = %160, %164, %129, %88, %81, %74, %67, %59, %50, %45, %42, %34, %27, %26, %10, %14, %3, %3, %54
  %168 = phi i1 [ true, %54 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %10 ], [ true, %26 ], [ true, %27 ], [ true, %34 ], [ true, %42 ], [ true, %45 ], [ true, %50 ], [ true, %59 ], [ true, %67 ], [ true, %74 ], [ true, %81 ], [ true, %88 ], [ true, %129 ], [ %166, %164 ], [ true, %160 ]
  ret i1 %168
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.42"*) local_unnamed_addr #14 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.std::__1::vector.30"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.42"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 24
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 768614336404564650
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.42"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #17
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector.30"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 24
  %19 = icmp ult i64 %18, 384307168202282325
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 768614336404564650, %13 ]
  %27 = mul i64 %26, 24
  %28 = tail call i8* @_Znwm(i64 %27) #16
  %29 = bitcast i8* %28 to %"class.std::__1::vector.30"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"class.std::__1::vector.30"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %32, i64 %8
  %34 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %32, i64 %31
  %35 = ptrtoint %"class.std::__1::vector.30"* %34 to i64
  %36 = bitcast %"class.std::__1::vector.30"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #15
  %37 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %33, i64 1
  %38 = ptrtoint %"class.std::__1::vector.30"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %39, align 8
  %41 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %2, align 8
  %42 = icmp eq %"class.std::__1::vector.30"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = ptrtoint %"class.std::__1::vector.30"* %40 to i64
  br label %69

45:                                               ; preds = %30, %45
  %46 = phi %"class.std::__1::vector.30"* [ %48, %45 ], [ %33, %30 ]
  %47 = phi %"class.std::__1::vector.30"* [ %49, %45 ], [ %41, %30 ]
  %48 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %46, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %47, i64 -1
  %50 = bitcast %"class.std::__1::vector.30"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #15
  %51 = bitcast %"class.std::__1::vector.30"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.30"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %47, i64 -1, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %46, i64 -1, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %47, i64 -1, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast i32** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %46, i64 -1, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast %"class.std::__1::vector.30"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #15
  %65 = icmp eq %"class.std::__1::vector.30"* %49, %40
  br i1 %65, label %66, label %45

66:                                               ; preds = %45
  %67 = load i64, i64* %5, align 8
  %68 = load %"class.std::__1::vector.30"*, %"class.std::__1::vector.30"** %2, align 8
  br label %69

69:                                               ; preds = %43, %66
  %70 = phi %"class.std::__1::vector.30"* [ %40, %43 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::vector.30"* [ %33, %43 ], [ %48, %66 ]
  %72 = phi i64 [ %44, %43 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::vector.30"* %71 to i64
  store i64 %73, i64* %5, align 8
  store i64 %38, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::vector.30"*
  %75 = icmp eq %"class.std::__1::vector.30"* %70, %74
  br i1 %75, label %89, label %76

76:                                               ; preds = %69, %87
  %77 = phi %"class.std::__1::vector.30"* [ %78, %87 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %77, i64 -1
  %79 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %78, i64 0, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = ptrtoint i32* %80 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %77, i64 -1, i32 0, i32 1
  %85 = bitcast i32** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %86) #16
  br label %87

87:                                               ; preds = %82, %76
  %88 = icmp eq %"class.std::__1::vector.30"* %78, %74
  br i1 %88, label %89, label %76

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %72, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %92) #16
  br label %93

93:                                               ; preds = %89, %91
  ret void
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
