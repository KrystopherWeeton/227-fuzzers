; ModuleID = '../../v8/src/compiler/backend/mid-tier-register-allocator.cc'
source_filename = "../../v8/src/compiler/backend/mid-tier-register-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::MidTierRegisterAllocationData" = type { %"class.v8::internal::compiler::RegisterAllocationData", %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, i8*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::ZoneVector.709", %"class.v8::internal::ZoneVector.723", %"class.v8::internal::ZoneVector.604", %"class.v8::internal::BitVector", %"class.v8::internal::TickCounter"* }
%"class.v8::internal::compiler::RegisterAllocationData" = type { i32 }
%"class.v8::internal::ZoneVector.709" = type { %"class.std::__1::vector.710" }
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.std::__1::__compressed_pair.719" }
%"class.v8::internal::compiler::VirtualRegisterData" = type <{ %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, i32, i32, i8, i8, [6 x i8] }>
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.v8::internal::compiler::VirtualRegisterData::SpillRange" = type { %"class.v8::internal::compiler::Range", %"class.v8::internal::BitVector"*, %"class.v8::internal::ZoneVector.712"* }
%"class.v8::internal::compiler::Range" = type { i32, i32 }
%"class.v8::internal::ZoneVector.712" = type { %"class.std::__1::vector.713" }
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"class.std::__1::__compressed_pair.715" }
%"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput" = type { i32, %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::BitVector"* }
%"class.v8::internal::compiler::AllocatedOperand" = type { %"class.v8::internal::compiler::LocationOperand" }
%"class.v8::internal::compiler::LocationOperand" = type { %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716", %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.v8::internal::ZoneAllocator.718" }
%"class.v8::internal::ZoneAllocator.718" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720", %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::compiler::VirtualRegisterData"* }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::ZoneAllocator.722" }
%"class.v8::internal::ZoneAllocator.722" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.723" = type { %"class.std::__1::vector.724" }
%"class.std::__1::vector.724" = type { %"class.std::__1::__vector_base.725" }
%"class.std::__1::__vector_base.725" = type { %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"*, %"class.std::__1::__compressed_pair.726" }
%"class.v8::internal::compiler::BlockState" = type <{ %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::DeferredBlocksRegion"*, %"class.v8::internal::BitVector", i32, i8, [3 x i8] }>
%"class.v8::internal::compiler::RegisterState" = type { %"class.v8::internal::ZoneVector", %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"**, %"class.std::__1::__compressed_pair.14" }
%"class.v8::internal::compiler::RegisterState::Register" = type { i8, i8, i8, i8, i32, i32, i32, %"class.v8::internal::compiler::PendingOperand"*, %"class.v8::base::Optional" }
%"class.v8::internal::compiler::PendingOperand" = type { %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.v8::internal::ZoneVector.0" }
%"class.v8::internal::ZoneVector.0" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"class.std::__1::__compressed_pair" }
%"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::RegisterState::Register"** }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::DeferredBlocksRegion" = type { %"class.v8::internal::ZoneSet", %"class.v8::internal::BitVector" }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator.21" }
%"class.v8::internal::ZoneAllocator.21" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727", %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::compiler::BlockState"* }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.v8::internal::ZoneAllocator.729" }
%"class.v8::internal::ZoneAllocator.729" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.604" = type { %"class.std::__1::vector.605" }
%"class.std::__1::vector.605" = type { %"class.std::__1::__vector_base.606" }
%"class.std::__1::__vector_base.606" = type { i32*, i32*, %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.389", %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.389" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.v8::internal::ZoneAllocator.609" }
%"class.v8::internal::ZoneAllocator.609" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.v8::internal::RegisterConfiguration" = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, [32 x i32], i32*, [32 x i32], i32, [4 x i8] }>
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.8" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Frame" = type { i32, i32, i32, %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"* }
%"class.v8::internal::AlignedSlotAllocator" = type { i32, i32, i32, i32 }
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.591"*, %"class.v8::internal::ZoneVector.591"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.626", %"class.v8::internal::ZoneVector.634", %"class.v8::internal::ZoneVector.594", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.666", %"class.v8::internal::ZoneVector.679", i32, %"class.v8::internal::ZoneVector.686", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.30", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.350", %"class.std::__1::unique_ptr.351", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.357", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.386", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.393", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.403", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.414", %"struct.std::__1::atomic.75", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.448", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.465"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.466", i32, i8, i8, i32, i32, %"class.std::__1::vector.472", %"class.std::__1::vector.472", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.479", i64, %"class.std::__1::unordered_map.480", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.224", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.83", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.540", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.546", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.580", %"class.std::__1::vector.584", %"class.std::__1::vector.584", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.25", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.58", %"class.std::__1::vector.62", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.84", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.88", %"class.std::__1::vector.88", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::shared_ptr.185", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.186", %"class.std::__1::unique_ptr.212", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.218", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.231", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.260", %"class.std::__1::unordered_map.286", %"class.std::__1::unordered_map.260", %"class.std::__1::unordered_map.310", %"class.std::__1::vector.337", i8, %"class.std::__1::unique_ptr.344", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.53", %"struct.std::__1::atomic.53", %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i32 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.75", %"struct.std::__1::atomic.79", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.83" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__cxx_atomic_impl.86" }
%"struct.std::__1::__cxx_atomic_impl.86" = type { %"struct.std::__1::__cxx_atomic_base_impl.87" }
%"struct.std::__1::__cxx_atomic_base_impl.87" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.90" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.185" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.186" = type { %"class.std::__1::__hash_table.187" }
%"class.std::__1::__hash_table.187" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.206", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.191"** }
%"struct.std::__1::__hash_node_base.191" = type { %"struct.std::__1::__hash_node_base.191"* }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::__bucket_list_deallocator.193" }
%"class.std::__1::__bucket_list_deallocator.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::__hash_node_base.191" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.224", %"class.std::__1::vector.224" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.237" }
%"class.std::__1::__hash_table.237" = type <{ %"class.std::__1::unique_ptr.238", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.255", [4 x i8] }>
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240", %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base.241"** }
%"struct.std::__1::__hash_node_base.241" = type { %"struct.std::__1::__hash_node_base.241"* }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.std::__1::__bucket_list_deallocator.243" }
%"class.std::__1::__bucket_list_deallocator.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.241" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unordered_map.286" = type { %"class.std::__1::__hash_table.287" }
%"class.std::__1::__hash_table.287" = type <{ %"class.std::__1::unique_ptr.288", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.306", [4 x i8] }>
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base.291"** }
%"struct.std::__1::__hash_node_base.291" = type { %"struct.std::__1::__hash_node_base.291"* }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.std::__1::__bucket_list_deallocator.293" }
%"class.std::__1::__bucket_list_deallocator.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.291" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unordered_map.260" = type { %"class.std::__1::__hash_table.261" }
%"class.std::__1::__hash_table.261" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.280", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.265"** }
%"struct.std::__1::__hash_node_base.265" = type { %"struct.std::__1::__hash_node_base.265"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator.267" }
%"class.std::__1::__bucket_list_deallocator.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unordered_map.310" = type { %"class.std::__1::__hash_table.311" }
%"class.std::__1::__hash_table.311" = type <{ %"class.std::__1::unique_ptr.312", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.332", [4 x i8] }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base.315"** }
%"struct.std::__1::__hash_node_base.315" = type { %"struct.std::__1::__hash_node_base.315"* }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.std::__1::__bucket_list_deallocator.317" }
%"class.std::__1::__bucket_list_deallocator.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base.315" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.339" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.224" }
%"class.std::__1::shared_ptr.350" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.357" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.358", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.358" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.359", %"class.v8::base::Optional.367", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"class.std::__1::unique_ptr.361"*, %"class.std::__1::unique_ptr.361"*, %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::unique_ptr.361" = type opaque
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.std::__1::unique_ptr.361"* }
%"class.v8::base::Optional.367" = type { %"class.v8::base::internal::OptionalBase.368" }
%"class.v8::base::internal::OptionalBase.368" = type { %"struct.v8::base::internal::OptionalStorage.369" }
%"struct.v8::base::internal::OptionalStorage.369" = type { %"struct.v8::base::internal::OptionalStorageBase.370" }
%"struct.v8::base::internal::OptionalStorageBase.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.372", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.378", %"class.v8::internal::DetachableVector.379", %"class.v8::internal::DetachableVector.378", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.379" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.378" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.380" }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { i32*, i32*, %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.393" = type { %"struct.std::__1::__atomic_base.394" }
%"struct.std::__1::__atomic_base.394" = type { %"struct.std::__1::__cxx_atomic_impl.395" }
%"struct.std::__1::__cxx_atomic_impl.395" = type { %"struct.std::__1::__cxx_atomic_base_impl.396" }
%"struct.std::__1::__cxx_atomic_base_impl.396" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.403" = type { %"struct.std::__1::__atomic_base.404" }
%"struct.std::__1::__atomic_base.404" = type { %"struct.std::__1::__cxx_atomic_impl.405" }
%"struct.std::__1::__cxx_atomic_impl.405" = type { %"struct.std::__1::__cxx_atomic_base_impl.406" }
%"struct.std::__1::__cxx_atomic_base_impl.406" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.410 }
%union.anon.410 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.414" = type { %"class.std::__1::__hash_table.415" }
%"class.std::__1::__hash_table.415" = type <{ %"class.std::__1::unique_ptr.416", %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.434", [4 x i8] }>
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418", %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::__hash_node_base.419"** }
%"struct.std::__1::__hash_node_base.419" = type { %"struct.std::__1::__hash_node_base.419"* }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.std::__1::__bucket_list_deallocator.421" }
%"class.std::__1::__bucket_list_deallocator.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::__hash_node_base.419" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.440", %"class.v8::internal::Handle.446", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.447", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.446" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.447" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.460" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.454"**, %"struct.std::__1::pair.454"**, %"struct.std::__1::pair.454"**, %"class.std::__1::__compressed_pair.455" }
%"struct.std::__1::pair.454" = type opaque
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::pair.454"** }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.465" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.398", i32, %"class.v8::Local.29" }
%"class.v8::Local.398" = type { %"class.v8::Promise"* }
%"class.v8::Local.29" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.472" = type { %"class.std::__1::__vector_base.473" }
%"class.std::__1::__vector_base.473" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.479" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.480" = type { %"class.std::__1::__hash_table.481" }
%"class.std::__1::__hash_table.481" = type <{ %"class.std::__1::unique_ptr.482", %"class.std::__1::__compressed_pair.492", %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.502", [4 x i8] }>
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484", %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.std::__1::__hash_node_base.485"** }
%"struct.std::__1::__hash_node_base.485" = type { %"struct.std::__1::__hash_node_base.485"* }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.std::__1::__bucket_list_deallocator.487" }
%"class.std::__1::__bucket_list_deallocator.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::__hash_node_base.485" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.83" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.508", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.537", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.538", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.508" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.533, %union.anon.535, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.533 = type { i64 }
%union.anon.535 = type { i64 }
%"class.std::__1::weak_ptr.537" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.538" = type { %"class.v8::PersistentBase.539" }
%"class.v8::PersistentBase.539" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.509", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.509" = type { %"class.std::__1::__hash_table.510" }
%"class.std::__1::__hash_table.510" = type <{ %"class.std::__1::unique_ptr.511", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.529", [4 x i8] }>
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513", %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"struct.std::__1::__hash_node_base.514"** }
%"struct.std::__1::__hash_node_base.514" = type { %"struct.std::__1::__hash_node_base.514"* }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.std::__1::__bucket_list_deallocator.516" }
%"class.std::__1::__bucket_list_deallocator.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::__hash_node_base.514" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.399", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.399" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.554" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.580" = type { %"struct.std::__1::__atomic_base.581" }
%"struct.std::__1::__atomic_base.581" = type { %"struct.std::__1::__cxx_atomic_impl.582" }
%"struct.std::__1::__cxx_atomic_impl.582" = type { %"struct.std::__1::__cxx_atomic_base_impl.583" }
%"struct.std::__1::__cxx_atomic_base_impl.583" = type { %"class.std::__1::vector.584"* }
%"class.std::__1::vector.584" = type { %"class.std::__1::__vector_base.585" }
%"class.std::__1::__vector_base.585" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.586" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ZoneVector.591" = type { %"class.std::__1::vector.592" }
%"class.std::__1::vector.592" = type { %"class.std::__1::__vector_base.593" }
%"class.std::__1::__vector_base.593" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.v8::internal::ZoneAllocator.617" }
%"class.v8::internal::ZoneAllocator.617" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.618" }
%"class.std::__1::__tree.618" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.v8::internal::ZoneAllocator.621" }
%"class.v8::internal::ZoneAllocator.621" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::map.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.v8::internal::ZoneAllocator.630" }
%"class.v8::internal::ZoneAllocator.630" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::ZoneVector.634" = type { %"class.std::__1::vector.635" }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.637" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.v8::internal::ZoneAllocator.640" }
%"class.v8::internal::ZoneAllocator.640" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.594" = type { %"class.std::__1::vector.595" }
%"class.std::__1::vector.595" = type { %"class.std::__1::__vector_base.596" }
%"class.std::__1::__vector_base.596" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.597" }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.v8::internal::ZoneAllocator.600" }
%"class.v8::internal::ZoneAllocator.600" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.641" }
%"class.std::__1::deque.641" = type { %"class.std::__1::__deque_base.642" }
%"class.std::__1::__deque_base.642" = type { %"struct.std::__1::__split_buffer.643", i64, %"class.std::__1::__compressed_pair.662" }
%"struct.std::__1::__split_buffer.643" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.658" }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.644" }
%"class.v8::internal::ZoneVector.644" = type { %"class.std::__1::vector.645" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.647" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648", %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::ZoneAllocator.650" }
%"class.v8::internal::ZoneAllocator.650" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.651", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.651" = type { %"class.std::__1::vector.652" }
%"class.std::__1::vector.652" = type { %"class.std::__1::__vector_base.653" }
%"class.std::__1::__vector_base.653" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655", %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.v8::internal::ZoneAllocator.657" }
%"class.v8::internal::ZoneAllocator.657" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659", %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.661", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.661" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::RecyclingZoneAllocator.664" }
%"class.v8::internal::RecyclingZoneAllocator.664" = type { %"class.v8::internal::ZoneAllocator.665", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.665" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.666" = type { %"class.std::__1::deque.667" }
%"class.std::__1::deque.667" = type { %"class.std::__1::__deque_base.668" }
%"class.std::__1::__deque_base.668" = type { %"struct.std::__1::__split_buffer.669", i64, %"class.std::__1::__compressed_pair.675" }
%"struct.std::__1::__split_buffer.669" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671", %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.v8::internal::RecyclingZoneAllocator.673" }
%"class.v8::internal::RecyclingZoneAllocator.673" = type { %"class.v8::internal::ZoneAllocator.674", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.674" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::RecyclingZoneAllocator.677" }
%"class.v8::internal::RecyclingZoneAllocator.677" = type { %"class.v8::internal::ZoneAllocator.678", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.678" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.679" = type { %"class.std::__1::vector.680" }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { i8*, i8*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683", %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.683" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::ZoneAllocator.685" }
%"class.v8::internal::ZoneAllocator.685" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.686" = type { %"class.std::__1::vector.687" }
%"class.std::__1::vector.687" = type { %"class.std::__1::__vector_base.688" }
%"class.std::__1::__vector_base.688" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.705" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.689", %"class.v8::internal::ZoneVector.697" }
%"class.v8::internal::ZoneVector.689" = type { %"class.std::__1::vector.690" }
%"class.std::__1::vector.690" = type { %"class.std::__1::__vector_base.691" }
%"class.std::__1::__vector_base.691" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.693" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.692 }
%"class.v8::internal::MachineType" = type { i8, i8 }
%union.anon.692 = type { i64 }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694", %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::ZoneAllocator.696" }
%"class.v8::internal::ZoneAllocator.696" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.697" = type { %"class.std::__1::vector.698" }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::ZoneAllocator.703" }
%"class.v8::internal::ZoneAllocator.703" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.704", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.704" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706", %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::ZoneAllocator.708" }
%"class.v8::internal::ZoneAllocator.708" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.594", %"class.v8::internal::ZoneVector.594", %"class.v8::internal::ZoneVector.601", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.601" = type { %"class.std::__1::vector.602" }
%"class.std::__1::vector.602" = type { %"class.std::__1::__vector_base.603" }
%"class.std::__1::__vector_base.603" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.610" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.604" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.v8::internal::ZoneAllocator.613" }
%"class.v8::internal::ZoneAllocator.613" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::compiler::SinglePassRegisterAllocator" = type { %"class.v8::internal::ZoneVector.733", %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::InstructionBlock"*, i32, i32, %"class.v8::internal::ZoneVector.733", i32*, %"class.v8::internal::BitVector"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::RegisterBitVector", %"class.v8::internal::compiler::RegisterBitVector", %"class.v8::internal::compiler::RegisterBitVector", %"class.v8::internal::compiler::RegisterBitVector", %"class.v8::base::Optional.740", %"class.v8::base::Optional.745", %"class.v8::base::Optional.740", %"class.v8::base::Optional.745" }
%"class.v8::internal::ZoneVector.733" = type { %"class.std::__1::vector.734" }
%"class.std::__1::vector.734" = type { %"class.std::__1::__vector_base.735" }
%"class.std::__1::__vector_base.735" = type { %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"*, %"class.std::__1::__compressed_pair.736" }
%"class.v8::internal::compiler::RegisterIndex" = type { i8 }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737", %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::compiler::RegisterIndex"* }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.v8::internal::ZoneAllocator.739" }
%"class.v8::internal::ZoneAllocator.739" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::RegisterBitVector" = type { i64 }
%"class.v8::base::Optional.740" = type { %"class.v8::base::internal::OptionalBase.741" }
%"class.v8::base::internal::OptionalBase.741" = type { %"struct.v8::base::internal::OptionalStorage.742" }
%"struct.v8::base::internal::OptionalStorage.742" = type { %"struct.v8::base::internal::OptionalStorageBase.743" }
%"struct.v8::base::internal::OptionalStorageBase.743" = type { i8, %union.anon.744 }
%union.anon.744 = type { %"class.v8::internal::ZoneVector.733" }
%"class.v8::base::Optional.745" = type { %"class.v8::base::internal::OptionalBase.746" }
%"class.v8::base::internal::OptionalBase.746" = type { %"struct.v8::base::internal::OptionalStorage.747" }
%"struct.v8::base::internal::OptionalStorage.747" = type { %"struct.v8::base::internal::OptionalStorageBase.748" }
%"struct.v8::base::internal::OptionalStorageBase.748" = type { i8, %union.anon.749 }
%union.anon.749 = type { %"class.v8::internal::ZoneVector.604" }
%"class.v8::internal::compiler::MidTierOutputProcessor" = type { %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneSet.763" }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue.750" }
%"class.std::__1::queue.750" = type { %"class.v8::internal::ZoneDeque.751" }
%"class.v8::internal::ZoneDeque.751" = type { %"class.std::__1::deque.752" }
%"class.std::__1::deque.752" = type { %"class.std::__1::__deque_base.753" }
%"class.std::__1::__deque_base.753" = type { %"struct.std::__1::__split_buffer.754", i64, %"class.std::__1::__compressed_pair.760" }
%"struct.std::__1::__split_buffer.754" = type { %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756", %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::compiler::RpoNumber"** }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::RecyclingZoneAllocator.758" }
%"class.v8::internal::RecyclingZoneAllocator.758" = type { %"class.v8::internal::ZoneAllocator.759", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.759" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::RecyclingZoneAllocator.762" }
%"class.v8::internal::RecyclingZoneAllocator.762" = type { %"class.v8::internal::ZoneAllocator.600", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneSet.763" = type { %"class.std::__1::set.764" }
%"class.std::__1::set.764" = type { %"class.std::__1::__tree.765" }
%"class.std::__1::__tree.765" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.766", %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::ZoneAllocator.768" }
%"class.v8::internal::ZoneAllocator.768" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::compiler::MidTierRegisterAllocator" = type { %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator" }
%"class.v8::internal::compiler::MidTierSpillSlotAllocator" = type <{ %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::ZonePriorityQueue", %"class.v8::internal::ZoneLinkedList", i32, [4 x i8] }>
%"class.v8::internal::ZonePriorityQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.v8::internal::ZoneVector.778", %"struct.v8::internal::compiler::MidTierSpillSlotAllocator::OrderByLastUse" }>
%"class.v8::internal::ZoneVector.778" = type { %"class.std::__1::vector.779" }
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot" = type { i32, i32, %"class.v8::internal::compiler::Range" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782", %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::ZoneAllocator.784" }
%"class.v8::internal::ZoneAllocator.784" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::MidTierSpillSlotAllocator::OrderByLastUse" = type { i8 }
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.785" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::ZoneAllocator.787" }
%"class.v8::internal::ZoneAllocator.787" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::MidTierReferenceMapPopulator" = type { %"class.v8::internal::compiler::MidTierRegisterAllocationData"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::compiler::ConstantOperand" = type { %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::internal::compiler::UnallocatedOperand" = type { %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::__tree_node.812" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::compiler::RpoNumber" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* }
%"class.std::__1::priority_queue" = type <{ %"class.v8::internal::ZoneVector.778", %"struct.v8::internal::compiler::MidTierSpillSlotAllocator::OrderByLastUse", [7 x i8] }>
%"class.v8::internal::ZoneVector.788" = type { %"class.std::__1::vector.789" }
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792", %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::compiler::VirtualRegisterData"** }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.v8::internal::ZoneAllocator.794" }
%"class.v8::internal::ZoneAllocator.794" = type { %"class.v8::internal::Zone"* }
%"struct.std::__1::__split_buffer.820" = type { %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.756", %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.v8::internal::RecyclingZoneAllocator.758"* }

$_ZN2v88internal8compiler19VirtualRegisterData10SpillRange22AddDeferredSpillOutputENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE = comdat any

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_ = comdat any

$_ZNSt3__114priority_queueIPN2v88internal8compiler25MidTierSpillSlotAllocator9SpillSlotENS2_10ZoneVectorIS6_EENS4_14OrderByLastUseEE4pushERKS6_ = comdat any

$_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler10BlockStateENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJRiPNS2_4ZoneEEEEvDpOT_ = comdat any

$_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE10push_frontERKS5_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"num_commits_required_ > 0\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"!must_use_register\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@switch.table._ZN2v88internal8compiler25MidTierSpillSlotAllocator8AllocateEPNS1_19VirtualRegisterDataE = private unnamed_addr constant [14 x i32] [i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 16], align 4

@_ZN2v88internal8compiler29MidTierRegisterAllocationDataC1EPKNS0_21RegisterConfigurationEPNS0_4ZoneEPNS1_5FrameEPNS1_19InstructionSequenceEPNS0_11TickCounterEPKc = hidden unnamed_addr alias void (%"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::TickCounter"*, i8*), void (%"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::TickCounter"*, i8*)* @_ZN2v88internal8compiler29MidTierRegisterAllocationDataC2EPKNS0_21RegisterConfigurationEPNS0_4ZoneEPNS1_5FrameEPNS1_19InstructionSequenceEPNS0_11TickCounterEPKc
@_ZN2v88internal8compiler13RegisterState8RegisterC1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::RegisterState::Register"*), void (%"class.v8::internal::compiler::RegisterState::Register"*)* @_ZN2v88internal8compiler13RegisterState8RegisterC2Ev
@_ZN2v88internal8compiler13RegisterStateC1ENS1_12RegisterKindEiPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::RegisterState"*, i32, i32, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::RegisterState"*, i32, i32, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler13RegisterStateC2ENS1_12RegisterKindEiPNS0_4ZoneE
@_ZN2v88internal8compiler13RegisterStateC1ERKS2_ = hidden unnamed_addr alias void (%"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"*), void (%"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"*)* @_ZN2v88internal8compiler13RegisterStateC2ERKS2_
@_ZN2v88internal8compiler27SinglePassRegisterAllocatorC1ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*)* @_ZN2v88internal8compiler27SinglePassRegisterAllocatorC2ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE
@_ZN2v88internal8compiler22MidTierOutputProcessorC1EPNS1_29MidTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::MidTierOutputProcessor"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::MidTierOutputProcessor"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*)* @_ZN2v88internal8compiler22MidTierOutputProcessorC2EPNS1_29MidTierRegisterAllocationDataE
@_ZN2v88internal8compiler24MidTierRegisterAllocatorC1EPNS1_29MidTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::MidTierRegisterAllocator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::MidTierRegisterAllocator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*)* @_ZN2v88internal8compiler24MidTierRegisterAllocatorC2EPNS1_29MidTierRegisterAllocationDataE
@_ZN2v88internal8compiler25MidTierSpillSlotAllocatorC1EPNS1_29MidTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::MidTierSpillSlotAllocator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::MidTierSpillSlotAllocator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*)* @_ZN2v88internal8compiler25MidTierSpillSlotAllocatorC2EPNS1_29MidTierRegisterAllocationDataE
@_ZN2v88internal8compiler28MidTierReferenceMapPopulatorC1EPNS1_29MidTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::MidTierReferenceMapPopulator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::MidTierReferenceMapPopulator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*)* @_ZN2v88internal8compiler28MidTierReferenceMapPopulatorC2EPNS1_29MidTierRegisterAllocationDataE

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::RegisterState"* @_ZN2v88internal8compiler10BlockState17register_in_stateENS1_12RegisterKindE(%"class.v8::internal::compiler::BlockState"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %0, i64 0, i32 1
  %6 = select i1 %3, %"class.v8::internal::compiler::RegisterState"** %4, %"class.v8::internal::compiler::RegisterState"** %5
  %7 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  ret %"class.v8::internal::compiler::RegisterState"* %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BlockState21set_register_in_stateEPNS1_13RegisterStateENS1_12RegisterKindE(%"class.v8::internal::compiler::BlockState"* nocapture, %"class.v8::internal::compiler::RegisterState"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %2, label %10 [
    i32 0, label %4
    i32 1, label %6
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %0, i64 0, i32 0
  br label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi %"class.v8::internal::compiler::RegisterState"** [ %7, %6 ], [ %5, %4 ]
  store %"class.v8::internal::compiler::RegisterState"* %1, %"class.v8::internal::compiler::RegisterState"** %9, align 8
  br label %10

10:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29MidTierRegisterAllocationDataC2EPKNS0_21RegisterConfigurationEPNS0_4ZoneEPNS1_5FrameEPNS1_19InstructionSequenceEPNS0_11TickCounterEPKc(%"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::TickCounter"*, i8*) unnamed_addr #2 align 2 {
  %8 = alloca [32 x i8], align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::Zone"*, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 1
  store %"class.v8::internal::Zone"* %2, %"class.v8::internal::Zone"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::Frame"* %3, %"class.v8::internal::compiler::Frame"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::InstructionSequence"* %4, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 4
  store i8* %6, i8** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 5
  store %"class.v8::internal::RegisterConfiguration"* %1, %"class.v8::internal::RegisterConfiguration"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 9
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false)
  %22 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %24 = bitcast %"struct.std::__1::__compressed_pair_elem.721"* %23 to i64*
  %25 = bitcast %"class.v8::internal::ZoneVector.709"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #12
  store i64 %22, i64* %24, align 8
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %82, label %27

27:                                               ; preds = %7
  %28 = icmp ugt i32 %19, 67108863
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.v8::internal::ZoneVector.709"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #13
  unreachable

31:                                               ; preds = %27
  %32 = shl nsw i64 %20, 5
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %31
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %32) #12
  br label %43

41:                                               ; preds = %31
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::VirtualRegisterData"*
  %46 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::VirtualRegisterData"* %45, %"class.v8::internal::compiler::VirtualRegisterData"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.709", %"class.v8::internal::ZoneVector.709"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::VirtualRegisterData"* %45, %"class.v8::internal::compiler::VirtualRegisterData"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %45, i64 %20
  %49 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::VirtualRegisterData"* %48, %"class.v8::internal::compiler::VirtualRegisterData"** %49, align 8
  %50 = shl nsw i64 %20, 5
  %51 = add nsw i64 %50, -32
  %52 = lshr exact i64 %51, 5
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 3
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %43, %56
  %57 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %60, %56 ], [ %45, %43 ]
  %58 = phi i64 [ %61, %56 ], [ %54, %43 ]
  %59 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %21, i64 32, i1 false) #12
  %60 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %57, i64 1
  %61 = add i64 %58, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %56, !llvm.loop !3

63:                                               ; preds = %56, %43
  %64 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %45, %43 ], [ %60, %56 ]
  %65 = icmp ult i64 %51, 96
  br i1 %65, label %77, label %66

66:                                               ; preds = %63, %66
  %67 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %75, %66 ], [ %64, %63 ]
  %68 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %21, i64 32, i1 false) #12
  %69 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %67, i64 1
  %70 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %21, i64 32, i1 false) #12
  %71 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %67, i64 2
  %72 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %21, i64 32, i1 false) #12
  %73 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %67, i64 3
  %74 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %21, i64 32, i1 false) #12
  %75 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %67, i64 4
  %76 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"* %75, %48
  br i1 %76, label %77, label %66

77:                                               ; preds = %66, %63
  %78 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %46 to i64*
  %79 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %48 to i64
  store i64 %79, i64* %78, align 8
  %80 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %12, align 8
  %81 = ptrtoint %"class.v8::internal::Zone"* %80 to i64
  br label %82

82:                                               ; preds = %7, %77
  %83 = phi i64 [ %22, %7 ], [ %81, %77 ]
  %84 = phi %"class.v8::internal::Zone"* [ %2, %7 ], [ %80, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21)
  %85 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7
  %86 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 1
  %87 = bitcast %"struct.std::__1::__compressed_pair_elem.728"* %86 to i64*
  %88 = bitcast %"class.v8::internal::ZoneVector.723"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #12
  store i64 %83, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1
  %91 = bitcast %"struct.std::__1::__compressed_pair_elem.608"* %90 to i64*
  %92 = bitcast %"class.v8::internal::ZoneVector.604"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #12
  store i64 %83, i64* %91, align 8
  %93 = load i32, i32* %18, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 1
  %96 = icmp slt i32 %93, 65
  br i1 %96, label %97, label %100

97:                                               ; preds = %82
  store i32 1, i32* %95, align 4
  %98 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2
  %99 = bitcast %"union.v8::internal::BitVector::DataStorage"* %98 to i64*
  store i64 0, i64* %99, align 8
  br label %139

100:                                              ; preds = %82
  %101 = add nsw i32 %93, -1
  %102 = sdiv i32 %101, 64
  %103 = add nuw nsw i32 %102, 1
  store i32 %103, i32* %95, align 4
  %104 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2
  %105 = bitcast %"union.v8::internal::BitVector::DataStorage"* %104 to i64*
  store i64 0, i64* %105, align 8
  %106 = sext i32 %103 to i64
  %107 = shl nsw i64 %106, 3
  %108 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %84, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %84, i64 0, i32 3
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %111, %109
  %113 = icmp ugt i64 %107, %112
  br i1 %113, label %114, label %116, !prof !2

114:                                              ; preds = %100
  %115 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %84, i64 %107) #12
  br label %118

116:                                              ; preds = %100
  %117 = add i64 %109, %107
  store i64 %117, i64* %108, align 8
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ %115, %114 ], [ %109, %116 ]
  %120 = inttoptr i64 %119 to i64*
  %121 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %104, i64 0, i32 0
  store i64* %120, i64** %121, align 8
  %122 = load i32, i32* %95, align 4
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %130, label %124

124:                                              ; preds = %118
  %125 = icmp sgt i32 %122, 0
  br i1 %125, label %126, label %139

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2, i32 0
  store i64 0, i64* %120, align 8
  %128 = load i32, i32* %95, align 4
  %129 = icmp sgt i32 %128, 1
  br i1 %129, label %131, label %139

130:                                              ; preds = %118
  store i64 0, i64* %105, align 8
  br label %139

131:                                              ; preds = %126, %131
  %132 = phi i64 [ %135, %131 ], [ 1, %126 ]
  %133 = load i64*, i64** %127, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 %132
  store i64 0, i64* %134, align 8
  %135 = add nuw nsw i64 %132, 1
  %136 = load i32, i32* %95, align 4
  %137 = sext i32 %136 to i64
  %138 = icmp slt i64 %135, %137
  br i1 %138, label %131, label %139

139:                                              ; preds = %131, %126, %97, %124, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 10
  store %"class.v8::internal::TickCounter"* %5, %"class.v8::internal::TickCounter"** %140, align 8
  %141 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #12
  %142 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 2
  %143 = bitcast %"class.v8::internal::ZoneVector.591"** %142 to %"class.std::__1::vector.592"**
  %144 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %144, i64 0, i32 0, i32 1
  %146 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.std::__1::vector.592"* %144 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %147, %149
  %151 = lshr exact i64 %150, 3
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %9, align 4
  %153 = getelementptr inbounds %"class.v8::internal::ZoneVector.723", %"class.v8::internal::ZoneVector.723"* %85, i64 0, i32 0
  %154 = shl i64 %150, 29
  %155 = ashr exact i64 %154, 32
  %156 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  %157 = bitcast %"class.v8::internal::compiler::BlockState"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::ZoneVector.723"* %85 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %158, %160
  %162 = sdiv exact i64 %161, 48
  %163 = icmp ult i64 %162, %155
  %164 = inttoptr i64 %158 to %"class.v8::internal::compiler::BlockState"*
  br i1 %163, label %165, label %207

165:                                              ; preds = %139
  %166 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %167 = bitcast %"class.v8::internal::compiler::BlockState"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %168, %160
  %170 = sdiv exact i64 %169, 48
  %171 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %172 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %171, align 8
  %173 = mul nsw i64 %155, 48
  %174 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %172, i64 0, i32 2
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %172, i64 0, i32 3
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 %177, %175
  %179 = icmp ugt i64 %173, %178
  br i1 %179, label %180, label %182, !prof !2

180:                                              ; preds = %165
  %181 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %172, i64 %173) #12
  br label %184

182:                                              ; preds = %165
  %183 = add i64 %175, %173
  store i64 %183, i64* %174, align 8
  br label %184

184:                                              ; preds = %182, %180
  %185 = phi i64 [ %181, %180 ], [ %175, %182 ]
  %186 = inttoptr i64 %185 to %"class.v8::internal::compiler::BlockState"*
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %186, i64 %170
  %188 = ptrtoint %"class.v8::internal::compiler::BlockState"* %187 to i64
  %189 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %186, i64 %155
  %190 = ptrtoint %"class.v8::internal::compiler::BlockState"* %189 to i64
  %191 = getelementptr inbounds %"class.v8::internal::ZoneVector.723", %"class.v8::internal::ZoneVector.723"* %85, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %191, align 8
  %193 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %166, align 8
  %194 = icmp eq %"class.v8::internal::compiler::BlockState"* %193, %192
  br i1 %194, label %205, label %195

195:                                              ; preds = %184, %195
  %196 = phi %"class.v8::internal::compiler::BlockState"* [ %198, %195 ], [ %187, %184 ]
  %197 = phi %"class.v8::internal::compiler::BlockState"* [ %199, %195 ], [ %193, %184 ]
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %196, i64 -1
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %197, i64 -1
  %200 = bitcast %"class.v8::internal::compiler::BlockState"* %198 to i8*
  %201 = bitcast %"class.v8::internal::compiler::BlockState"* %199 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %201, i64 48, i1 false) #12
  %202 = icmp eq %"class.v8::internal::compiler::BlockState"* %199, %192
  br i1 %202, label %203, label %195

203:                                              ; preds = %195
  %204 = ptrtoint %"class.v8::internal::compiler::BlockState"* %198 to i64
  br label %205

205:                                              ; preds = %203, %184
  %206 = phi i64 [ %204, %203 ], [ %188, %184 ]
  store i64 %206, i64* %159, align 8
  store i64 %188, i64* %167, align 8
  store i64 %190, i64* %157, align 8
  br label %207

207:                                              ; preds = %139, %205
  %208 = phi %"class.v8::internal::compiler::BlockState"* [ %164, %139 ], [ %189, %205 ]
  %209 = icmp sgt i32 %152, 0
  br i1 %209, label %210, label %214

210:                                              ; preds = %207
  %211 = bitcast %"class.v8::internal::Zone"** %10 to i8*
  %212 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %213 = bitcast %"class.v8::internal::compiler::BlockState"** %212 to i64*
  br label %215

214:                                              ; preds = %275, %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #12
  ret void

215:                                              ; preds = %279, %210
  %216 = phi %"class.v8::internal::compiler::BlockState"* [ %208, %210 ], [ %280, %279 ]
  %217 = phi i32 [ %152, %210 ], [ %277, %279 ]
  %218 = phi i32 [ 0, %210 ], [ %276, %279 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #12
  %219 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %12, align 8
  store %"class.v8::internal::Zone"* %219, %"class.v8::internal::Zone"** %10, align 8
  %220 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %212, align 8
  %221 = icmp ult %"class.v8::internal::compiler::BlockState"* %220, %216
  br i1 %221, label %222, label %274

222:                                              ; preds = %215
  %223 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 3, i32 0
  %224 = bitcast %"class.v8::internal::compiler::BlockState"* %220 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %224, i8 0, i64 24, i1 false) #12
  store i32 %217, i32* %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 3, i32 1
  %226 = icmp slt i32 %217, 65
  br i1 %226, label %227, label %230

227:                                              ; preds = %222
  store i32 1, i32* %225, align 4
  %228 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 3, i32 2
  %229 = bitcast %"union.v8::internal::BitVector::DataStorage"* %228 to i64*
  store i64 0, i64* %229, align 8
  br label %269

230:                                              ; preds = %222
  %231 = add nsw i32 %217, -1
  %232 = sdiv i32 %231, 64
  %233 = add nuw nsw i32 %232, 1
  store i32 %233, i32* %225, align 4
  %234 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 3, i32 2
  %235 = bitcast %"union.v8::internal::BitVector::DataStorage"* %234 to i64*
  store i64 0, i64* %235, align 8
  %236 = sext i32 %233 to i64
  %237 = shl nsw i64 %236, 3
  %238 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %219, i64 0, i32 2
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %219, i64 0, i32 3
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %241, %239
  %243 = icmp ugt i64 %237, %242
  br i1 %243, label %244, label %246, !prof !2

244:                                              ; preds = %230
  %245 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %219, i64 %237) #12
  br label %248

246:                                              ; preds = %230
  %247 = add i64 %239, %237
  store i64 %247, i64* %238, align 8
  br label %248

248:                                              ; preds = %246, %244
  %249 = phi i64 [ %245, %244 ], [ %239, %246 ]
  %250 = inttoptr i64 %249 to i64*
  %251 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %234, i64 0, i32 0
  store i64* %250, i64** %251, align 8
  %252 = load i32, i32* %225, align 4
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %260, label %254

254:                                              ; preds = %248
  %255 = icmp sgt i32 %252, 0
  br i1 %255, label %256, label %269

256:                                              ; preds = %254
  %257 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 3, i32 2, i32 0
  store i64 0, i64* %250, align 8
  %258 = load i32, i32* %225, align 4
  %259 = icmp sgt i32 %258, 1
  br i1 %259, label %261, label %269

260:                                              ; preds = %248
  store i64 0, i64* %235, align 8
  br label %269

261:                                              ; preds = %256, %261
  %262 = phi i64 [ %265, %261 ], [ 1, %256 ]
  %263 = load i64*, i64** %257, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 %262
  store i64 0, i64* %264, align 8
  %265 = add nuw nsw i64 %262, 1
  %266 = load i32, i32* %225, align 4
  %267 = sext i32 %266 to i64
  %268 = icmp slt i64 %265, %267
  br i1 %268, label %261, label %269

269:                                              ; preds = %261, %260, %256, %254, %227
  %270 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 4
  store i32 -1, i32* %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 0, i32 5
  store i8 0, i8* %271, align 4
  %272 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %220, i64 1
  %273 = ptrtoint %"class.v8::internal::compiler::BlockState"* %272 to i64
  store i64 %273, i64* %213, align 8
  br label %275

274:                                              ; preds = %215
  call void @_ZNSt3__16vectorIN2v88internal8compiler10BlockStateENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJRiPNS2_4ZoneEEEEvDpOT_(%"class.std::__1::vector.724"* %153, i32* nonnull dereferenceable(4) %9, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %10) #12
  br label %275

275:                                              ; preds = %269, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #12
  %276 = add nuw nsw i32 %218, 1
  %277 = load i32, i32* %9, align 4
  %278 = icmp slt i32 %276, %277
  br i1 %278, label %279, label %214

279:                                              ; preds = %275
  %280 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %156, align 8
  br label %215
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData10AddGapMoveEiNS1_11Instruction11GapPositionERKNS1_18InstructionOperandES7_(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, i32, i32, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 8, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %13, i64 %14
  %16 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %16, i64 %17
  %19 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 1
  %21 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %22 = ptrtoint %"class.v8::internal::Zone"* %21 to i64
  %23 = zext i32 %2 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19, i64 0, i32 2, i64 %23
  %25 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %25, null
  br i1 %26, label %27, label %44

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ult i64 %32, 32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %27
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %21, i64 32) #12
  br label %38

36:                                               ; preds = %27
  %37 = add i64 %29, 32
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i8*
  %41 = inttoptr i64 %39 to %"class.v8::internal::compiler::ParallelMove"*
  %42 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %41, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %43 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %42 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #12
  store i64 %22, i64* %43, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %41, %"class.v8::internal::compiler::ParallelMove"** %24, align 8
  br label %44

44:                                               ; preds = %5, %38
  %45 = phi %"class.v8::internal::compiler::ParallelMove"* [ %41, %38 ], [ %25, %5 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %45, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8
  %48 = tail call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %45, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %3, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %4, %"class.v8::internal::Zone"* %47) #12
  ret %"class.v8::internal::compiler::MoveOperands"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData24AddPendingOperandGapMoveEiNS1_11Instruction11GapPositionE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %6 = bitcast %"class.v8::internal::compiler::PendingOperand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %4, i64 0, i32 0, i32 0
  store i64 4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %4, i64 0, i32 0
  %9 = bitcast %"class.v8::internal::compiler::PendingOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0, i32 0
  store i64 4, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 8, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %14
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %19 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %18, align 8
  %20 = lshr i64 %17, 9
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %19, i64 %20
  %22 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %21, align 8
  %23 = and i64 %17, 511
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %22, i64 %23
  %25 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 1
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = ptrtoint %"class.v8::internal::Zone"* %27 to i64
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %25, i64 0, i32 2, i64 %29
  %31 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %30, align 8
  %32 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %35
  %39 = icmp ult i64 %38, 32
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %33
  %41 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 32) #12
  br label %44

42:                                               ; preds = %33
  %43 = add i64 %35, 32
  store i64 %43, i64* %34, align 8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %41, %40 ], [ %35, %42 ]
  %46 = inttoptr i64 %45 to i8*
  %47 = inttoptr i64 %45 to %"class.v8::internal::compiler::ParallelMove"*
  %48 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %47, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %49 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %48 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #12
  store i64 %28, i64* %49, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %47, %"class.v8::internal::compiler::ParallelMove"** %30, align 8
  br label %50

50:                                               ; preds = %3, %44
  %51 = phi %"class.v8::internal::compiler::ParallelMove"* [ %47, %44 ], [ %31, %3 ]
  %52 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %51, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %53 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %52, align 8
  %54 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %51, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %8, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %11, %"class.v8::internal::Zone"* %53) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret %"class.v8::internal::compiler::MoveOperands"* %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"class.v8::internal::compiler::BlockState"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData11block_stateENS1_9RpoNumberE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %5, i64 %3
  ret %"class.v8::internal::compiler::BlockState"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::InstructionBlock"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData8GetBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::ZoneVector.591"** %5 to %"class.std::__1::vector.592"**
  %7 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %7, i64 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.592"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %8
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::vector.592"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %18) #13
  unreachable

19:                                               ; preds = %2
  %20 = inttoptr i64 %13 to %"class.v8::internal::compiler::InstructionBlock"**
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %20, i64 %8
  %22 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %21, align 8
  ret %"class.v8::internal::compiler::InstructionBlock"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::InstructionBlock"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData8GetBlockEi(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 8, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %9, align 8
  %11 = lshr i64 %8, 9
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %10, i64 %11
  %13 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %12, align 8
  %14 = and i64 %8, 511
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %13, i64 %14
  %16 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %16, i64 0, i32 4
  %18 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %17, align 8
  ret %"class.v8::internal::compiler::InstructionBlock"* %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::BitVector"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData20GetBlocksDominatedByEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %7, i64 %5, i32 3
  ret %"class.v8::internal::BitVector"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(32) %"class.v8::internal::compiler::VirtualRegisterData"* @_ZN2v88internal8compiler29MidTierRegisterAllocationData22VirtualRegisterDataForEi(%"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %5, i64 %3
  ret %"class.v8::internal::compiler::VirtualRegisterData"* %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData10InitializeEiNS0_21MachineRepresentationEPNS1_18InstructionOperandEibbbb(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i32, i8 zeroext, %"class.v8::internal::compiler::InstructionOperand"*, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %10 = zext i1 %5 to i8
  %11 = zext i1 %6 to i8
  %12 = zext i1 %7 to i8
  %13 = zext i1 %8 to i8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  store i32 %1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 4
  store i8 %2, i8* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %3, %"class.v8::internal::compiler::InstructionOperand"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* null, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 2
  store i32 %4, i32* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, -8
  %22 = shl nuw nsw i8 %11, 1
  %23 = shl nuw nsw i8 %12, 2
  %24 = or i8 %22, %10
  %25 = or i8 %24, %23
  %26 = or i8 %25, %21
  store i8 %26, i8* %19, align 1
  br i1 %6, label %31, label %27

27:                                               ; preds = %9
  %28 = icmp ne %"class.v8::internal::compiler::InstructionOperand"* %3, null
  %29 = zext i1 %28 to i8
  %30 = shl nuw nsw i8 %29, 3
  br label %31

31:                                               ; preds = %27, %9
  %32 = phi i8 [ 0, %9 ], [ %30, %27 ]
  %33 = and i8 %26, -25
  %34 = shl nuw nsw i8 %13, 4
  %35 = or i8 %33, %34
  %36 = or i8 %35, %32
  store i8 %36, i8* %19, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData23DefineAsConstantOperandEPNS1_15ConstantOperandENS0_21MachineRepresentationEib(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, %"class.v8::internal::compiler::ConstantOperand"*, i8 zeroext, i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ConstantOperand", %"class.v8::internal::compiler::ConstantOperand"* %1, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 3
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ConstantOperand", %"class.v8::internal::compiler::ConstantOperand"* %1, i64 0, i32 0
  %11 = zext i1 %4 to i8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  store i32 %9, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 4
  store i8 %2, i8* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %10, %"class.v8::internal::compiler::InstructionOperand"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* null, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 2
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, -32
  %20 = shl nuw nsw i8 %11, 2
  %21 = or i8 %20, %19
  %22 = or i8 %21, 2
  store i8 %22, i8* %17, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData25DefineAsFixedSpillOperandEPNS1_16AllocatedOperandEiNS0_21MachineRepresentationEibb(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, %"class.v8::internal::compiler::AllocatedOperand"*, i32, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %1, i64 0, i32 0, i32 0
  %9 = zext i1 %5 to i8
  %10 = zext i1 %6 to i8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 4
  store i8 %3, i8* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %8, %"class.v8::internal::compiler::InstructionOperand"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* null, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 2
  store i32 %4, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, -32
  %19 = shl nuw nsw i8 %9, 2
  %20 = icmp ne %"class.v8::internal::compiler::AllocatedOperand"* %1, null
  %21 = zext i1 %20 to i8
  %22 = shl nuw nsw i8 %21, 3
  %23 = shl nuw nsw i8 %10, 4
  %24 = or i8 %19, %22
  %25 = or i8 %24, %23
  %26 = or i8 %25, %18
  store i8 %26, i8* %16, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData26DefineAsUnallocatedOperandEiNS0_21MachineRepresentationEibb(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i32, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %7 = zext i1 %4 to i8
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 4
  store i8 %2, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 2
  %12 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  store i32 %3, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, -32
  %16 = shl nuw nsw i8 %7, 2
  %17 = shl nuw nsw i8 %8, 4
  %18 = or i8 %17, %16
  %19 = or i8 %18, %15
  store i8 %19, i8* %13, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData11DefineAsPhiEiNS0_21MachineRepresentationEib(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i32, i8 zeroext, i32, i1 zeroext) local_unnamed_addr #4 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 4
  store i8 %2, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  store i32 %3, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, -32
  %14 = shl nuw nsw i8 %6, 2
  %15 = or i8 %14, %13
  %16 = or i8 %15, 1
  store i8 %16, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData16EnsureSpillRangeEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %4, null
  br i1 %5, label %6, label %174

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %9, align 8
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %10, i64 0, i32 8, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %10, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %15, align 8
  %17 = lshr i64 %14, 9
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %16, i64 %17
  %19 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %18, align 8
  %20 = and i64 %14, 511
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %19, i64 %20
  %22 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22, i64 0, i32 4
  %24 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %96, label %29

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 1
  %31 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %31, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %31, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %33
  %37 = icmp ult i64 %36, 24
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %29
  %39 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %31, i64 24) #12
  br label %42

40:                                               ; preds = %29
  %41 = add i64 %33, 24
  store i64 %41, i64* %32, align 8
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %39, %38 ], [ %33, %40 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %24, i64 0, i32 8
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %44, i64 0, i32 0, i32 0
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %44, i64 0, i32 0, i32 1
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %44, i64 0, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %24, i64 0, i32 4, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %54, i64 %52, i32 3
  store %"class.v8::internal::BitVector"* %55, %"class.v8::internal::BitVector"** %49, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %44, i64 0, i32 2
  store %"class.v8::internal::ZoneVector.712"* null, %"class.v8::internal::ZoneVector.712"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %24, i64 0, i32 1, i32 0, i32 0, i32 1
  %60 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %58, %60
  br i1 %61, label %150, label %62

62:                                               ; preds = %42, %83
  %63 = phi i32 [ %93, %83 ], [ %46, %42 ]
  %64 = phi i32 [ %91, %83 ], [ %46, %42 ]
  %65 = phi %"class.v8::internal::compiler::RpoNumber"* [ %94, %83 ], [ %58, %42 ]
  %66 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %9, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %68, i64 0, i32 2
  %70 = bitcast %"class.v8::internal::ZoneVector.591"** %69 to %"class.std::__1::vector.592"**
  %71 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %70, align 8
  %72 = sext i32 %67 to i64
  %73 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %71, i64 0, i32 0, i32 1
  %74 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector.592"* %71 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = icmp ugt i64 %79, %72
  br i1 %80, label %83, label %81

81:                                               ; preds = %62
  %82 = bitcast %"class.std::__1::vector.592"* %71 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %82) #13
  unreachable

83:                                               ; preds = %62
  %84 = inttoptr i64 %77 to %"class.v8::internal::compiler::InstructionBlock"**
  %85 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %84, i64 %72
  %86 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %86, i64 0, i32 9
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, -1
  %90 = icmp sgt i32 %64, %89
  %91 = select i1 %90, i32 %89, i32 %64
  store i32 %91, i32* %47, align 4
  %92 = icmp slt i32 %63, %89
  %93 = select i1 %92, i32 %89, i32 %63
  store i32 %93, i32* %48, align 4
  %94 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %65, i64 1
  %95 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %94, %60
  br i1 %95, label %150, label %62

96:                                               ; preds = %6
  %97 = and i8 %26, 16
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %122, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %101, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %10, i64 0, i32 2
  %105 = bitcast %"class.v8::internal::ZoneVector.591"** %104 to %"class.std::__1::vector.592"**
  %106 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %105, align 8
  %107 = sext i32 %103 to i64
  %108 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %106, i64 0, i32 0, i32 1
  %109 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::vector.592"* %106 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = ashr exact i64 %113, 3
  %115 = icmp ugt i64 %114, %107
  br i1 %115, label %118, label %116

116:                                              ; preds = %99
  %117 = bitcast %"class.std::__1::vector.592"* %106 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %117) #13
  unreachable

118:                                              ; preds = %99
  %119 = inttoptr i64 %112 to %"class.v8::internal::compiler::InstructionBlock"**
  %120 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %119, i64 %107
  %121 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %120, align 8
  br label %122

122:                                              ; preds = %96, %118
  %123 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %121, %118 ], [ %24, %96 ]
  %124 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 1
  %125 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %124, align 8
  %126 = add nsw i32 %8, 1
  %127 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %125, i64 0, i32 2
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %125, i64 0, i32 3
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %130, %128
  %132 = icmp ult i64 %131, 24
  br i1 %132, label %133, label %135, !prof !2

133:                                              ; preds = %122
  %134 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %125, i64 24) #12
  br label %137

135:                                              ; preds = %122
  %136 = add i64 %128, 24
  store i64 %136, i64* %127, align 8
  br label %137

137:                                              ; preds = %133, %135
  %138 = phi i64 [ %134, %133 ], [ %128, %135 ]
  %139 = inttoptr i64 %138 to %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*
  %140 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %139, i64 0, i32 0, i32 0
  store i32 %126, i32* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %139, i64 0, i32 0, i32 1
  store i32 %126, i32* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %139, i64 0, i32 1
  %143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %123, i64 0, i32 4, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %147 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %147, i64 %145, i32 3
  store %"class.v8::internal::BitVector"* %148, %"class.v8::internal::BitVector"** %142, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %139, i64 0, i32 2
  store %"class.v8::internal::ZoneVector.712"* null, %"class.v8::internal::ZoneVector.712"** %149, align 8
  br label %150

150:                                              ; preds = %83, %42, %137
  %151 = phi %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* [ %139, %137 ], [ %44, %42 ], [ %44, %83 ]
  store %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %151, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %3, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 9, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %160

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 9, i32 2
  %159 = bitcast %"union.v8::internal::BitVector::DataStorage"* %158 to i64*
  br label %167

160:                                              ; preds = %150
  %161 = srem i32 %153, 64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 9, i32 2, i32 0
  %163 = load i64*, i64** %162, align 8
  %164 = sdiv i32 %153, 64
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i64, i64* %163, i64 %165
  br label %167

167:                                              ; preds = %157, %160
  %168 = phi i64* [ %166, %160 ], [ %159, %157 ]
  %169 = phi i32 [ %161, %160 ], [ %153, %157 ]
  %170 = zext i32 %169 to i64
  %171 = shl i64 1, %170
  %172 = load i64, i64* %168, align 8
  %173 = or i64 %172, %171
  store i64 %173, i64* %168, align 8
  br label %174

174:                                              ; preds = %167, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 7
  %11 = icmp eq i64 %10, 2
  br i1 %11, label %150, label %12

12:                                               ; preds = %3, %7
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData16EnsureSpillRangeEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2)
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  %14 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %14, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %1
  %18 = select i1 %17, i32 %1, i32 %16
  store i32 %18, i32* %15, align 4
  %19 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %14, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %1
  %22 = select i1 %21, i32 %1, i32 %20
  store i32 %22, i32* %19, align 4
  %23 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, i64 0, i32 3
  %24 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %23, align 8
  %25 = sext i32 %1 to i64
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %24, i64 0, i32 8, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %24, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %30 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %29, align 8
  %31 = lshr i64 %28, 9
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %30, i64 %31
  %33 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %32, align 8
  %34 = and i64 %28, 511
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %33, i64 %34
  %36 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %36, i64 0, i32 4
  %38 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %136

43:                                               ; preds = %12
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %38, i64 0, i32 10
  %45 = load i8, i8* %44, align 4, !range !5
  %46 = icmp ne i8 %45, 0
  %47 = and i8 %40, 6
  %48 = icmp eq i8 %47, 0
  %49 = and i1 %48, %46
  br i1 %49, label %50, label %136

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %38, i64 0, i32 4, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, i64 0, i32 7, i32 0, i32 0, i32 0
  %55 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %55, i64 %53, i32 2
  %57 = load %"class.v8::internal::compiler::DeferredBlocksRegion"*, %"class.v8::internal::compiler::DeferredBlocksRegion"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %92, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi %"class.std::__1::__tree_node"* [ %91, %88 ], [ %62, %64 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %90, %88 ], [ %65, %64 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, %59
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0
  br label %94

78:                                               ; preds = %66
  %79 = icmp slt i32 %70, %59
  br i1 %79, label %80, label %86

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 1
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0
  br label %94

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0
  br label %94

88:                                               ; preds = %80, %72
  %89 = phi %"class.std::__1::__tree_node_base"* [ %74, %72 ], [ %82, %80 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %73, %72 ], [ %81, %80 ]
  %91 = bitcast %"class.std::__1::__tree_node_base"* %89 to %"class.std::__1::__tree_node"*
  br label %66

92:                                               ; preds = %50
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  br label %94

94:                                               ; preds = %92, %86, %84, %76
  %95 = phi %"class.std::__1::__tree_end_node"* [ %60, %92 ], [ %77, %76 ], [ %85, %84 ], [ %87, %86 ]
  %96 = phi %"class.std::__1::__tree_node_base"** [ %93, %92 ], [ %73, %76 ], [ %81, %84 ], [ %68, %86 ]
  %97 = bitcast %"class.std::__1::__tree_node_base"** %96 to %"class.std::__1::__tree_node"**
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %100, label %150

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %102 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %101, align 8, !noalias !6
  %103 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 2
  %104 = load i64, i64* %103, align 8, !noalias !6
  %105 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 3
  %106 = load i64, i64* %105, align 8, !noalias !6
  %107 = sub i64 %106, %104
  %108 = icmp ult i64 %107, 32
  br i1 %108, label %109, label %111, !prof !2

109:                                              ; preds = %100
  %110 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %102, i64 32) #12, !noalias !6
  br label %113

111:                                              ; preds = %100
  %112 = add i64 %104, 32
  store i64 %112, i64* %103, align 8, !noalias !6
  br label %113

113:                                              ; preds = %111, %109
  %114 = phi i64 [ %110, %109 ], [ %104, %111 ]
  %115 = inttoptr i64 %114 to %"class.std::__1::__tree_node"*
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %115, i64 0, i32 1
  store i32 %59, i32* %116, align 4, !noalias !6
  %117 = inttoptr i64 %114 to %"class.std::__1::__tree_node_base"*
  %118 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  %119 = inttoptr i64 %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %95, %"class.std::__1::__tree_end_node"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %96, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %113
  %126 = ptrtoint %"class.std::__1::__tree_node_base"* %123 to i64
  %127 = bitcast %"class.v8::internal::compiler::DeferredBlocksRegion"* %57 to i64*
  store i64 %126, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  br label %129

129:                                              ; preds = %125, %113
  %130 = phi %"class.std::__1::__tree_node_base"* [ %117, %113 ], [ %128, %125 ]
  %131 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %132, %"class.std::__1::__tree_node_base"* %130) #12
  %133 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %57, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %133, align 8
  br label %150

136:                                              ; preds = %43, %12
  %137 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %4, align 8
  %138 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %137, i64 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, 7
  %143 = icmp eq i64 %142, 2
  br i1 %143, label %150, label %144

144:                                              ; preds = %139, %136
  %145 = or i8 %40, 8
  store i8 %145, i8* %39, align 1
  %146 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %13, align 8
  %147 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %146, i64 0, i32 2
  store %"class.v8::internal::ZoneVector.712"* null, %"class.v8::internal::ZoneVector.712"** %149, align 8
  br label %150

150:                                              ; preds = %148, %144, %139, %129, %94, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19VirtualRegisterData27CouldSpillOnEntryToDeferredEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %9 = load i8, i8* %8, align 4, !range !5
  %10 = icmp eq i8 %9, 0
  %11 = and i8 %4, 4
  %12 = icmp ne i8 %11, 0
  %13 = or i1 %12, %10
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = and i8 %4, 2
  %16 = icmp eq i8 %15, 0
  br label %17

17:                                               ; preds = %2, %7, %14
  %18 = phi i1 [ false, %7 ], [ false, %2 ], [ %16, %14 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData19AddDeferredSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i32 %1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData22AddDeferredSpillOutputENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly, i64, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %5, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData10SpillRange22AddDeferredSpillOutputENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %6, i64 %1, i32 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler19VirtualRegisterData10SpillRange22AddDeferredSpillOutputENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, i64, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %0, i64 0, i32 2
  %6 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %5, align 8
  %7 = icmp eq %"class.v8::internal::ZoneVector.712"* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 1
  %10 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, align 8
  %11 = ptrtoint %"class.v8::internal::Zone"* %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 32
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %8
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %10, i64 32) #12
  br label %22

20:                                               ; preds = %8
  %21 = add i64 %13, 32
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to i8*
  %25 = inttoptr i64 %23 to %"class.v8::internal::ZoneVector.712"*
  %26 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %25, i64 0, i32 0, i32 0, i32 2, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.717"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  store i64 %11, i64* %27, align 8
  store %"class.v8::internal::ZoneVector.712"* %25, %"class.v8::internal::ZoneVector.712"** %5, align 8
  br label %28

28:                                               ; preds = %22, %4
  %29 = phi %"class.v8::internal::ZoneVector.712"* [ %25, %22 ], [ %6, %4 ]
  %30 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %31 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %30, align 8
  %32 = sext i32 %2 to i64
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %31, i64 0, i32 8, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, %32
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %31, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %37 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %36, align 8
  %38 = lshr i64 %35, 9
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %37, i64 %38
  %40 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %39, align 8
  %41 = and i64 %35, 511
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %40, i64 %41
  %43 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %43, i64 0, i32 4
  %45 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %45, i64 0, i32 4, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %50 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %50, i64 %48, i32 2
  %52 = load %"class.v8::internal::compiler::DeferredBlocksRegion"*, %"class.v8::internal::compiler::DeferredBlocksRegion"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %52, i64 0, i32 1
  %54 = ptrtoint %"class.v8::internal::BitVector"* %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %29, i64 0, i32 0, i32 0, i32 1
  %56 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %29, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %57, align 8
  %59 = icmp ult %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %56, %58
  %60 = ptrtoint %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %58 to i64
  br i1 %59, label %61, label %69

61:                                               ; preds = %28
  %62 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %56, i64 0, i32 0
  store i32 %2, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  store i64 %1, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %56, i64 0, i32 2
  %65 = bitcast %"class.v8::internal::BitVector"** %64 to i64*
  store i64 %54, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %56, i64 1
  %67 = ptrtoint %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %66 to i64
  %68 = bitcast %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %55 to i64*
  store i64 %67, i64* %68, align 8
  br label %135

69:                                               ; preds = %28
  %70 = ptrtoint %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %56 to i64
  %71 = bitcast %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %55 to i64*
  %72 = bitcast %"class.v8::internal::ZoneVector.712"* %29 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %70, %73
  %75 = sdiv exact i64 %74, 24
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 89478485
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = bitcast %"class.v8::internal::ZoneVector.712"* %29 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #13
  unreachable

80:                                               ; preds = %69
  %81 = bitcast %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %57 to i64*
  %82 = sub i64 %60, %73
  %83 = sdiv exact i64 %82, 24
  %84 = icmp ult i64 %83, 44739242
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = shl nsw i64 %83, 1
  %87 = icmp ult i64 %86, %76
  %88 = select i1 %87, i64 %76, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %108, label %90

90:                                               ; preds = %85, %80
  %91 = phi i64 [ %88, %85 ], [ 89478485, %80 ]
  %92 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %29, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %92, align 8
  %94 = mul i64 %91, 24
  %95 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %98, %96
  %100 = icmp ugt i64 %94, %99
  br i1 %100, label %101, label %103, !prof !2

101:                                              ; preds = %90
  %102 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %93, i64 %94) #12
  br label %105

103:                                              ; preds = %90
  %104 = add i64 %96, %94
  store i64 %104, i64* %95, align 8
  br label %105

105:                                              ; preds = %103, %101
  %106 = phi i64 [ %102, %101 ], [ %96, %103 ]
  %107 = inttoptr i64 %106 to %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*
  br label %108

108:                                              ; preds = %105, %85
  %109 = phi i64 [ %91, %105 ], [ 0, %85 ]
  %110 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %107, %105 ], [ null, %85 ]
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %110, i64 %75
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %110, i64 %109
  %113 = ptrtoint %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %112 to i64
  %114 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %111, i64 0, i32 0
  store i32 %2, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %110, i64 %75, i32 1, i32 0, i32 0, i32 0
  store i64 %1, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %110, i64 %75, i32 2
  %117 = bitcast %"class.v8::internal::BitVector"** %116 to i64*
  store i64 %54, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %111, i64 1
  %119 = ptrtoint %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %118 to i64
  %120 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %29, i64 0, i32 0, i32 0, i32 0
  %121 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %120, align 8
  %122 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %55, align 8
  %123 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %122, %121
  br i1 %123, label %132, label %124

124:                                              ; preds = %108, %124
  %125 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %127, %124 ], [ %111, %108 ]
  %126 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %128, %124 ], [ %122, %108 ]
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %125, i64 -1
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %126, i64 -1
  %129 = bitcast %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %127 to i8*
  %130 = bitcast %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #12
  %131 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %128, %121
  br i1 %131, label %132, label %124

132:                                              ; preds = %124, %108
  %133 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %111, %108 ], [ %127, %124 ]
  %134 = ptrtoint %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %133 to i64
  store i64 %134, i64* %72, align 8
  store i64 %119, i64* %71, align 8
  store i64 %113, i64* %81, align 8
  br label %135

135:                                              ; preds = %61, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData12SpillOperandEPNS1_18InstructionOperandEibPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, %"class.v8::internal::compiler::InstructionOperand"*, i32, i1 zeroext, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  br i1 %3, label %16, label %6

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %8, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 7
  %14 = icmp eq i64 %13, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %7, align 8
  br label %16

16:                                               ; preds = %6, %15, %10, %5
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i32 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4)
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %18, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 7
  switch i64 %23, label %26 [
    i64 5, label %24
    i64 2, label %24
  ]

24:                                               ; preds = %20, %20
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  store i64 %22, i64* %25, align 8
  br label %35

26:                                               ; preds = %20, %16
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  store i64 4, i64* %27, align 8
  %28 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  %29 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %28 to i64
  %32 = and i64 %31, -8
  %33 = or i64 %32, 4
  store i64 %33, i64* %27, align 8
  br label %34

34:                                               ; preds = %26, %30
  store %"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  br label %35

35:                                               ; preds = %34, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData22AddPendingSpillOperandEPNS1_14PendingOperandE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, %"class.v8::internal::compiler::PendingOperand"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %4 to i64
  %8 = and i64 %7, -8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %1, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, %8
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %1, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %13, %"class.v8::internal::compiler::InstructionOperand"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19VirtualRegisterData26NeedsSpillAtDeferredBlocksEv(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %3, i64 0, i32 2
  %7 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %6, align 8
  %8 = icmp ne %"class.v8::internal::ZoneVector.712"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData24EmitDeferredSpillOutputsEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %4, i64 0, i32 2
  %6 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %13, %2
  ret void

13:                                               ; preds = %2, %13
  %14 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %19, %13 ], [ %8, %2 ]
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 %18, i32 %16, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1)
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %14, i64 1
  %20 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %19, %10
  br i1 %20, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i64, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %7 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 0, i32 0
  store i64 %1, i64* %8, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i32 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3)
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %10, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %10, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 7
  switch i64 %15, label %59 [
    i64 5, label %16
    i64 2, label %16
  ]

16:                                               ; preds = %12, %12
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %18 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %17, align 8
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 8, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %24 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %23, align 8
  %25 = lshr i64 %22, 9
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %24, i64 %25
  %27 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %26, align 8
  %28 = and i64 %22, 511
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %27, i64 %28
  %30 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 1
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8
  %33 = ptrtoint %"class.v8::internal::Zone"* %32 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %30, i64 0, i32 2, i64 0
  %35 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %35, null
  br i1 %36, label %37, label %54

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %39
  %43 = icmp ult i64 %42, 32
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %37
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 32) #12
  br label %48

46:                                               ; preds = %37
  %47 = add i64 %39, 32
  store i64 %47, i64* %38, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %39, %46 ]
  %50 = inttoptr i64 %49 to i8*
  %51 = inttoptr i64 %49 to %"class.v8::internal::compiler::ParallelMove"*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %51, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %52 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %53, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %51, %"class.v8::internal::compiler::ParallelMove"** %34, align 8
  br label %54

54:                                               ; preds = %16, %48
  %55 = phi %"class.v8::internal::compiler::ParallelMove"* [ %51, %48 ], [ %35, %16 ]
  %56 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %55, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %58 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %55, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %7, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %10, %"class.v8::internal::Zone"* %57) #12
  br label %120

59:                                               ; preds = %12, %4
  %60 = bitcast %"class.v8::internal::compiler::PendingOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0, i32 0
  store i64 4, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0
  %63 = bitcast %"class.v8::internal::compiler::PendingOperand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %6, i64 0, i32 0, i32 0
  store i64 4, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %6, i64 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %67 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %66, align 8
  %68 = sext i32 %2 to i64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %67, i64 0, i32 8, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %68
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %67, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %73 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %72, align 8
  %74 = lshr i64 %71, 9
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %73, i64 %74
  %76 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %75, align 8
  %77 = and i64 %71, 511
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %76, i64 %77
  %79 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %67, i64 0, i32 1
  %81 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %80, align 8
  %82 = ptrtoint %"class.v8::internal::Zone"* %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %79, i64 0, i32 2, i64 0
  %84 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %84, null
  br i1 %85, label %86, label %103

86:                                               ; preds = %59
  %87 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 3
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, %88
  %92 = icmp ult i64 %91, 32
  br i1 %92, label %93, label %95, !prof !2

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %81, i64 32) #12
  br label %97

95:                                               ; preds = %86
  %96 = add i64 %88, 32
  store i64 %96, i64* %87, align 8
  br label %97

97:                                               ; preds = %95, %93
  %98 = phi i64 [ %94, %93 ], [ %88, %95 ]
  %99 = inttoptr i64 %98 to i8*
  %100 = inttoptr i64 %98 to %"class.v8::internal::compiler::ParallelMove"*
  %101 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %100, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %102 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %101 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #12
  store i64 %82, i64* %102, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %100, %"class.v8::internal::compiler::ParallelMove"** %83, align 8
  br label %103

103:                                              ; preds = %59, %97
  %104 = phi %"class.v8::internal::compiler::ParallelMove"* [ %100, %97 ], [ %84, %59 ]
  %105 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %104, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %106 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %105, align 8
  %107 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %104, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %62, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %65, %"class.v8::internal::Zone"* %106) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  %108 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %107, i64 0, i32 0, i32 0
  %109 = load i64, i64* %8, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %107, i64 0, i32 1
  %111 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  %112 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %103
  %114 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %111 to i64
  %115 = and i64 %114, -8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %110, i64 0, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = or i64 %117, %115
  store i64 %118, i64* %116, align 8
  br label %119

119:                                              ; preds = %103, %113
  store %"class.v8::internal::compiler::InstructionOperand"* %110, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  br label %120

120:                                              ; preds = %119, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData31EmitGapMoveToInputFromSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i64, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %7 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 0, i32 0
  store i64 %1, i64* %8, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i32 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3)
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %10, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %10, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 7
  switch i64 %15, label %59 [
    i64 5, label %16
    i64 2, label %16
  ]

16:                                               ; preds = %12, %12
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %18 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %17, align 8
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 8, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %24 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %23, align 8
  %25 = lshr i64 %22, 9
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %24, i64 %25
  %27 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %26, align 8
  %28 = and i64 %22, 511
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %27, i64 %28
  %30 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 1
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8
  %33 = ptrtoint %"class.v8::internal::Zone"* %32 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %30, i64 0, i32 2, i64 1
  %35 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %35, null
  br i1 %36, label %37, label %54

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %39
  %43 = icmp ult i64 %42, 32
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %37
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 32) #12
  br label %48

46:                                               ; preds = %37
  %47 = add i64 %39, 32
  store i64 %47, i64* %38, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %39, %46 ]
  %50 = inttoptr i64 %49 to i8*
  %51 = inttoptr i64 %49 to %"class.v8::internal::compiler::ParallelMove"*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %51, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %52 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %53, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %51, %"class.v8::internal::compiler::ParallelMove"** %34, align 8
  br label %54

54:                                               ; preds = %16, %48
  %55 = phi %"class.v8::internal::compiler::ParallelMove"* [ %51, %48 ], [ %35, %16 ]
  %56 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %55, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %58 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %55, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %10, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %7, %"class.v8::internal::Zone"* %57) #12
  br label %120

59:                                               ; preds = %12, %4
  %60 = bitcast %"class.v8::internal::compiler::PendingOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0, i32 0
  store i64 4, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0
  %63 = bitcast %"class.v8::internal::compiler::PendingOperand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %6, i64 0, i32 0, i32 0
  store i64 4, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %6, i64 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %67 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %66, align 8
  %68 = sext i32 %2 to i64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %67, i64 0, i32 8, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, %68
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %67, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %73 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %72, align 8
  %74 = lshr i64 %71, 9
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %73, i64 %74
  %76 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %75, align 8
  %77 = and i64 %71, 511
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %76, i64 %77
  %79 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %67, i64 0, i32 1
  %81 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %80, align 8
  %82 = ptrtoint %"class.v8::internal::Zone"* %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %79, i64 0, i32 2, i64 1
  %84 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %84, null
  br i1 %85, label %86, label %103

86:                                               ; preds = %59
  %87 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 3
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, %88
  %92 = icmp ult i64 %91, 32
  br i1 %92, label %93, label %95, !prof !2

93:                                               ; preds = %86
  %94 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %81, i64 32) #12
  br label %97

95:                                               ; preds = %86
  %96 = add i64 %88, 32
  store i64 %96, i64* %87, align 8
  br label %97

97:                                               ; preds = %95, %93
  %98 = phi i64 [ %94, %93 ], [ %88, %95 ]
  %99 = inttoptr i64 %98 to i8*
  %100 = inttoptr i64 %98 to %"class.v8::internal::compiler::ParallelMove"*
  %101 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %100, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %102 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %101 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #12
  store i64 %82, i64* %102, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %100, %"class.v8::internal::compiler::ParallelMove"** %83, align 8
  br label %103

103:                                              ; preds = %59, %97
  %104 = phi %"class.v8::internal::compiler::ParallelMove"* [ %100, %97 ], [ %84, %59 ]
  %105 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %104, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %106 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %105, align 8
  %107 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %104, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %62, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %65, %"class.v8::internal::Zone"* %106) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  %108 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  %109 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %103
  %111 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %108 to i64
  %112 = and i64 %111, -8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %107, i64 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = or i64 %114, %112
  store i64 %115, i64* %113, align 8
  br label %116

116:                                              ; preds = %103, %110
  %117 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %107, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %117, %"class.v8::internal::compiler::InstructionOperand"** %9, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %107, i64 0, i32 1, i32 0
  %119 = load i64, i64* %8, align 8
  store i64 %119, i64* %118, align 8
  br label %120

120:                                              ; preds = %116, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData32EmitGapMoveFromOutputToSpillSlotENS1_18InstructionOperandEPKNS1_16InstructionBlockEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture, i64, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, -1
  %9 = icmp eq i32 %8, %3
  br i1 %9, label %10, label %45

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %12, %14
  br i1 %15, label %47, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 3
  br label %18

18:                                               ; preds = %16, %37
  %19 = phi %"class.v8::internal::compiler::RpoNumber"* [ %12, %16 ], [ %43, %37 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %17, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %22, i64 0, i32 2
  %24 = bitcast %"class.v8::internal::ZoneVector.591"** %23 to %"class.std::__1::vector.592"**
  %25 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %25, i64 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.592"* %25 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, %26
  br i1 %34, label %37, label %35

35:                                               ; preds = %18
  %36 = bitcast %"class.std::__1::vector.592"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %36) #13
  unreachable

37:                                               ; preds = %18
  %38 = inttoptr i64 %31 to %"class.v8::internal::compiler::InstructionBlock"**
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %38, i64 %26
  %40 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %40, i64 0, i32 8
  %42 = load i32, i32* %41, align 4
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 %1, i32 %42, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4)
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %19, i64 1
  %44 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %43, %14
  br i1 %44, label %47, label %18

45:                                               ; preds = %5
  %46 = add nsw i32 %3, 1
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %0, i64 %1, i32 %46, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4)
  br label %47

47:                                               ; preds = %37, %10, %45
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19VirtualRegisterData27AllocatePendingSpillOperandERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly, %"class.v8::internal::compiler::AllocatedOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %0 to %"class.v8::internal::compiler::PendingOperand"**
  %4 = load %"class.v8::internal::compiler::PendingOperand"*, %"class.v8::internal::compiler::PendingOperand"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::PendingOperand"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %1, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"class.v8::internal::compiler::PendingOperand"* [ %4, %6 ], [ %13, %8 ]
  %10 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -8
  %13 = inttoptr i64 %12 to %"class.v8::internal::compiler::PendingOperand"*
  %14 = load i64, i64* %7, align 8
  store i64 %14, i64* %10, align 8
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8RegisterC2Ev(%"class.v8::internal::compiler::RegisterState::Register"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon* %3 to i8*
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 3
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register5ResetEv(%"class.v8::internal::compiler::RegisterState::Register"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 3
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %14, align 8
  %16 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %15 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %19 to i64*
  store i64 %18, i64* %20, align 8
  br label %21

21:                                               ; preds = %17, %13
  store i8 0, i8* %10, align 8
  br label %22

22:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler13RegisterState8Register3UseEii(%"class.v8::internal::compiler::RegisterState::Register"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  store i32 1, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register10PendingUseEPNS1_18InstructionOperandEibi(%"class.v8::internal::compiler::RegisterState::Register"* nocapture, %"class.v8::internal::compiler::InstructionOperand"*, i32, i1 zeroext, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  store i32 %2, i32* %6, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  store i32 %4, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  store i32 1, i32* %11, align 8
  br label %12

12:                                               ; preds = %5, %9
  %13 = zext i1 %3 to i8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 1, !range !5
  %16 = and i8 %15, %13
  store i8 %16, i8* %14, align 1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 7
  %18 = bitcast %"class.v8::internal::compiler::PendingOperand"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, -8
  %21 = or i64 %20, 4
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.v8::internal::compiler::PendingOperand"** %17 to %"class.v8::internal::compiler::InstructionOperand"**
  store %"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"** %23, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler13RegisterState8Register13MarkAsPhiMoveEv(%"class.v8::internal::compiler::RegisterState::Register"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"*, i32, i1 zeroext, %"class.v8::internal::Zone"*) local_unnamed_addr #2 align 2 {
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.3"* %12 to i64*
  %14 = bitcast %"class.v8::internal::ZoneVector.0"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #12
  store i64 %10, i64* %13, align 8
  store i8 1, i8* %6, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %30

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %18 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %22 = icmp ult %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %18, %20
  %23 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %20 to i64
  br i1 %22, label %24, label %30

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %18, i64 0, i32 0
  store i32 %1, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %18, i64 0, i32 1
  store i8 %5, i8* %26, align 4
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %18, i64 1
  %28 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %27 to i64
  %29 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %21 to i64*
  store i64 %28, i64* %29, align 8
  br label %261

30:                                               ; preds = %9, %16
  %31 = phi i64 [ 0, %9 ], [ %23, %16 ]
  %32 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** [ %15, %9 ], [ %21, %16 ]
  %33 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ null, %9 ], [ %18, %16 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %33 to i64
  %36 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %32 to i64*
  %37 = bitcast %"class.std::__1::vector.1"* %34 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 268435455
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = bitcast %"class.std::__1::vector.1"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #13
  unreachable

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %46 to i64*
  %48 = sub i64 %31, %38
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, 134217727
  br i1 %50, label %51, label %56

51:                                               ; preds = %45
  %52 = ashr exact i64 %48, 2
  %53 = icmp ult i64 %52, %41
  %54 = select i1 %53, i64 %41, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %51, %45
  %57 = phi i64 [ %54, %51 ], [ 268435455, %45 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %59 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %58, align 8
  %60 = shl i64 %57, 3
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %62
  %66 = icmp ugt i64 %60, %65
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %56
  %68 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %59, i64 %60) #12
  br label %71

69:                                               ; preds = %56
  %70 = add i64 %62, %60
  store i64 %70, i64* %61, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %68, %67 ], [ %62, %69 ]
  %73 = inttoptr i64 %72 to %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*
  br label %74

74:                                               ; preds = %71, %51
  %75 = phi i64 [ %57, %71 ], [ 0, %51 ]
  %76 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %73, %71 ], [ null, %51 ]
  %77 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %76, i64 %40
  %78 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %76, i64 %75
  %79 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %78 to i64
  %80 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %77, i64 0, i32 0
  store i32 %1, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %76, i64 %40, i32 1
  store i8 %5, i8* %81, align 4
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %77, i64 1
  %83 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %34, i64 0, i32 0, i32 0
  %85 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %84, align 8
  %86 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %85 to i64
  %87 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %32, align 8
  %88 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, %85
  br i1 %88, label %258, label %89

89:                                               ; preds = %74
  %90 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 -1, i32 0
  %91 = ptrtoint i32* %90 to i64
  %92 = sub i64 %91, %86
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = icmp ult i64 %94, 4
  br i1 %95, label %188, label %96

96:                                               ; preds = %89
  %97 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 -1, i32 0
  %98 = ptrtoint i32* %97 to i64
  %99 = sub i64 %98, %86
  %100 = lshr i64 %99, 3
  %101 = xor i64 %100, -1
  %102 = add nsw i64 %40, %101
  %103 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %76, i64 %102
  %104 = xor i64 %100, -1
  %105 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 %104
  %106 = icmp ult %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %103, %87
  %107 = icmp ult %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %105, %77
  %108 = and i1 %106, %107
  br i1 %108, label %188, label %109

109:                                              ; preds = %96
  %110 = and i64 %94, 4611686018427387900
  %111 = sub nsw i64 0, %110
  %112 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %77, i64 %111
  %113 = sub nsw i64 0, %110
  %114 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 %113
  %115 = add nsw i64 %110, -4
  %116 = lshr exact i64 %115, 2
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 1
  %119 = icmp eq i64 %115, 0
  br i1 %119, label %166, label %120

120:                                              ; preds = %109
  %121 = sub nuw nsw i64 %117, %118
  %122 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %77, i64 -1
  %123 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 -1
  %124 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %77, i64 -1
  %125 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 -1
  br label %126

126:                                              ; preds = %126, %120
  %127 = phi i64 [ 0, %120 ], [ %161, %126 ]
  %128 = phi i64 [ %121, %120 ], [ %162, %126 ]
  %129 = sub i64 0, %127
  %130 = sub i64 0, %127
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %122, i64 %129
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %123, i64 %130
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %132, i64 -1
  %134 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 4, !alias.scope !9
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %132, i64 -2
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %136, i64 -1
  %138 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 4, !alias.scope !9
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %131, i64 -1
  %141 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %140 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %141, align 4, !alias.scope !12, !noalias !9
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %131, i64 -2
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %142, i64 -1
  %144 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %143 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %144, align 4, !alias.scope !12, !noalias !9
  %145 = sub nuw nsw i64 -4, %127
  %146 = sub nuw nsw i64 -4, %127
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %124, i64 %145
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %125, i64 %146
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %148, i64 -1
  %150 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 4, !alias.scope !9
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %148, i64 -2
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %152, i64 -1
  %154 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 4, !alias.scope !9
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %147, i64 -1
  %157 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %156 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %157, align 4, !alias.scope !12, !noalias !9
  %158 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %147, i64 -2
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %158, i64 -1
  %160 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %159 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %160, align 4, !alias.scope !12, !noalias !9
  %161 = add i64 %127, 8
  %162 = add i64 %128, -2
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %126, !llvm.loop !14

164:                                              ; preds = %126
  %165 = sub nuw nsw i64 -8, %127
  br label %166

166:                                              ; preds = %164, %109
  %167 = phi i64 [ 0, %109 ], [ %165, %164 ]
  %168 = icmp eq i64 %118, 0
  br i1 %168, label %186, label %169

169:                                              ; preds = %166
  %170 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %77, i64 -1
  %171 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %87, i64 -1
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %170, i64 %167
  %173 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %171, i64 %167
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %173, i64 -1
  %175 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 4, !alias.scope !9
  %177 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %173, i64 -2
  %178 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %177, i64 -1
  %179 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 4, !alias.scope !9
  %181 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %172, i64 -1
  %182 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %181 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %182, align 4, !alias.scope !12, !noalias !9
  %183 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %172, i64 -2
  %184 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %183, i64 -1
  %185 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %184 to <2 x i64>*
  store <2 x i64> %180, <2 x i64>* %185, align 4, !alias.scope !12, !noalias !9
  br label %186

186:                                              ; preds = %166, %169
  %187 = icmp eq i64 %94, %110
  br i1 %187, label %258, label %188

188:                                              ; preds = %186, %96, %89
  %189 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %77, %96 ], [ %77, %89 ], [ %112, %186 ]
  %190 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %87, %96 ], [ %87, %89 ], [ %114, %186 ]
  %191 = getelementptr %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %190, i64 -1, i32 0
  %192 = ptrtoint i32* %191 to i64
  %193 = sub i64 %192, %86
  %194 = lshr i64 %193, 3
  %195 = add nuw nsw i64 %194, 1
  %196 = and i64 %195, 7
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %209, label %198

198:                                              ; preds = %188, %198
  %199 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %202, %198 ], [ %189, %188 ]
  %200 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %203, %198 ], [ %190, %188 ]
  %201 = phi i64 [ %207, %198 ], [ %196, %188 ]
  %202 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %199, i64 -1
  %203 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %200, i64 -1
  %204 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %203 to i64*
  %205 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %202 to i64*
  %206 = load i64, i64* %204, align 4
  store i64 %206, i64* %205, align 4
  %207 = add i64 %201, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %198, !llvm.loop !16

209:                                              ; preds = %198, %188
  %210 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ undef, %188 ], [ %202, %198 ]
  %211 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %189, %188 ], [ %202, %198 ]
  %212 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %190, %188 ], [ %203, %198 ]
  %213 = icmp ult i64 %193, 56
  br i1 %213, label %258, label %214

214:                                              ; preds = %209, %214
  %215 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %252, %214 ], [ %211, %209 ]
  %216 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %253, %214 ], [ %212, %209 ]
  %217 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -1
  %218 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -1
  %219 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %218 to i64*
  %220 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %217 to i64*
  %221 = load i64, i64* %219, align 4
  store i64 %221, i64* %220, align 4
  %222 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -2
  %223 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -2
  %224 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %223 to i64*
  %225 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %222 to i64*
  %226 = load i64, i64* %224, align 4
  store i64 %226, i64* %225, align 4
  %227 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -3
  %228 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -3
  %229 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %228 to i64*
  %230 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %227 to i64*
  %231 = load i64, i64* %229, align 4
  store i64 %231, i64* %230, align 4
  %232 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -4
  %233 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -4
  %234 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %233 to i64*
  %235 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %232 to i64*
  %236 = load i64, i64* %234, align 4
  store i64 %236, i64* %235, align 4
  %237 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -5
  %238 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -5
  %239 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %238 to i64*
  %240 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %237 to i64*
  %241 = load i64, i64* %239, align 4
  store i64 %241, i64* %240, align 4
  %242 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -6
  %243 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -6
  %244 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %243 to i64*
  %245 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %242 to i64*
  %246 = load i64, i64* %244, align 4
  store i64 %246, i64* %245, align 4
  %247 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -7
  %248 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -7
  %249 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %248 to i64*
  %250 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %247 to i64*
  %251 = load i64, i64* %249, align 4
  store i64 %251, i64* %250, align 4
  %252 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %215, i64 -8
  %253 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %216, i64 -8
  %254 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %253 to i64*
  %255 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %252 to i64*
  %256 = load i64, i64* %254, align 4
  store i64 %256, i64* %255, align 4
  %257 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %253, %85
  br i1 %257, label %258, label %214, !llvm.loop !17

258:                                              ; preds = %209, %214, %186, %74
  %259 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %77, %74 ], [ %112, %186 ], [ %210, %209 ], [ %252, %214 ]
  %260 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %259 to i64
  store i64 %260, i64* %37, align 8
  store i64 %83, i64* %36, align 8
  store i64 %79, i64* %47, align 8
  br label %261

261:                                              ; preds = %24, %258
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register13AddSharedUsesEi(%"class.v8::internal::compiler::RegisterState::Register"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, %1
  store i32 %6, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register13CommitAtMergeEv(%"class.v8::internal::compiler::RegisterState::Register"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %7, label %6, !prof !18

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

7:                                                ; preds = %1
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nocapture, i64, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %83

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 7
  %10 = load %"class.v8::internal::compiler::PendingOperand"*, %"class.v8::internal::compiler::PendingOperand"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::PendingOperand"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"class.v8::internal::compiler::PendingOperand"* [ %17, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %13, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -8
  %17 = inttoptr i64 %16 to %"class.v8::internal::compiler::PendingOperand"*
  store i64 %1, i64* %14, align 8
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %12

19:                                               ; preds = %12, %8
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %9, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %24, i64 %22
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %32, align 8
  %34 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %31, %33
  br i1 %34, label %57, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %24, i64 %22, i32 5
  %37 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %24, i64 %22, i32 1
  br label %38

38:                                               ; preds = %35, %54
  %39 = phi %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* [ %31, %35 ], [ %55, %54 ]
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %39, i64 0, i32 1
  %41 = load i8, i8* %40, align 4, !range !5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %39, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData31EmitGapMoveToInputFromSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %25, i64 %1, i32 %45, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2)
  br label %54

46:                                               ; preds = %38
  %47 = load i8, i8* %36, align 1
  %48 = and i8 %47, 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %39, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %37, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData10SpillRange22AddDeferredSpillOutputENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %53, i64 %1, i32 %52, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2) #12
  br label %54

54:                                               ; preds = %46, %50, %43
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill", %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %39, i64 1
  %56 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %55, %33
  br i1 %56, label %57, label %38

57:                                               ; preds = %54, %29, %19
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 2
  %59 = load i8, i8* %58, align 2, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %83, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %24, i64 %22, i32 1
  %63 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %63, null
  br i1 %64, label %83, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %63, i64 0, i32 2
  %67 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %66, align 8
  %68 = icmp eq %"class.v8::internal::ZoneVector.712"* %67, null
  br i1 %68, label %83, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %67, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %67, i64 0, i32 0, i32 0, i32 1
  %73 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %72, align 8
  %74 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %71, %73
  br i1 %74, label %83, label %75

75:                                               ; preds = %69, %75
  %76 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %81, %75 ], [ %71, %69 ]
  %77 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %76, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %25, i64 %80, i32 %78, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2) #12
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %76, i64 1
  %82 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %81, %73
  br i1 %82, label %83, label %75

83:                                               ; preds = %75, %65, %57, %61, %69, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"*, i64, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %9, i64 %7
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 7
  %12 = load %"class.v8::internal::compiler::PendingOperand"*, %"class.v8::internal::compiler::PendingOperand"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::PendingOperand"* %12, null
  br i1 %13, label %55, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %10, i64 0, i32 0
  br label %18

18:                                               ; preds = %53, %14
  %19 = phi %"class.v8::internal::compiler::PendingOperand"* [ %12, %14 ], [ %23, %53 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %19, i64 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, -8
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::PendingOperand"*
  %24 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %19, i64 0, i32 0
  %25 = load i32, i32* %15, align 4
  %26 = load i8, i8* %16, align 1, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %18
  %29 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  %30 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %29, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 7
  %35 = icmp eq i64 %34, 2
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  br label %37

37:                                               ; preds = %36, %31, %28, %18
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %10, i32 %25, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3) #12
  %38 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  %39 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %38, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 7
  switch i64 %43, label %45 [
    i64 5, label %44
    i64 2, label %44
  ]

44:                                               ; preds = %40, %40
  store i64 %42, i64* %20, align 8
  br label %53

45:                                               ; preds = %40, %37
  store i64 4, i64* %20, align 8
  %46 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  %47 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %46 to i64
  %50 = and i64 %49, -8
  %51 = or i64 %50, 4
  store i64 %51, i64* %20, align 8
  br label %52

52:                                               ; preds = %48, %45
  store %"class.v8::internal::compiler::InstructionOperand"* %24, %"class.v8::internal::compiler::InstructionOperand"** %17, align 8
  br label %53

53:                                               ; preds = %52, %44
  %54 = icmp eq i64 %22, 0
  br i1 %54, label %55, label %18

55:                                               ; preds = %53, %4
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %11, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 2
  %57 = load i8, i8* %56, align 2, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %127, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %65 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %65, i64 0, i32 2
  %67 = bitcast %"class.v8::internal::ZoneVector.591"** %66 to %"class.std::__1::vector.592"**
  %68 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %67, align 8
  %69 = sext i32 %63 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %68, i64 0, i32 0, i32 1
  %71 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector.592"* %68 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = ashr exact i64 %75, 3
  %77 = icmp ugt i64 %76, %69
  br i1 %77, label %80, label %78

78:                                               ; preds = %59
  %79 = bitcast %"class.std::__1::vector.592"* %68 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %79) #13
  unreachable

80:                                               ; preds = %59
  %81 = inttoptr i64 %74 to %"class.v8::internal::compiler::InstructionBlock"**
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %81, i64 %69
  %83 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %82, align 8
  %84 = load i32, i32* %5, align 4
  %85 = sext i32 %84 to i64
  %86 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %8, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %86, i64 %85
  %88 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %83, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %83, i64 0, i32 1, i32 0, i32 0, i32 1
  %91 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %90, align 8
  %92 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %89, %91
  br i1 %92, label %127, label %93

93:                                               ; preds = %80
  %94 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 4, i32 0
  br label %95

95:                                               ; preds = %124, %93
  %96 = phi %"class.v8::internal::compiler::RpoNumber"* [ %89, %93 ], [ %125, %124 ]
  %97 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %94, align 4
  %100 = icmp sgt i32 %98, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %95
  %102 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %64, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %102, i64 0, i32 2
  %104 = bitcast %"class.v8::internal::ZoneVector.591"** %103 to %"class.std::__1::vector.592"**
  %105 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %104, align 8
  %106 = sext i32 %98 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %105, i64 0, i32 0, i32 1
  %108 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::vector.592"* %105 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = ashr exact i64 %112, 3
  %114 = icmp ugt i64 %113, %106
  br i1 %114, label %117, label %115

115:                                              ; preds = %101
  %116 = bitcast %"class.std::__1::vector.592"* %105 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %116) #13
  unreachable

117:                                              ; preds = %101
  %118 = inttoptr i64 %111 to %"class.v8::internal::compiler::InstructionBlock"**
  %119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %118, i64 %106
  %120 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %120, i64 0, i32 9
  %122 = load i32, i32* %121, align 8
  %123 = add nsw i32 %122, -1
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %87, i64 %1, i32 %123, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3) #12
  br label %124

124:                                              ; preds = %117, %95
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %96, i64 1
  %126 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %125, %91
  br i1 %126, label %127, label %95

127:                                              ; preds = %124, %55, %80
  %128 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 0
  %129 = load i8, i8* %128, align 8, !range !5
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  %133 = load i32, i32* %132, align 4
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData31EmitGapMoveToInputFromSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %10, i64 %1, i32 %133, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3)
  br label %134

134:                                              ; preds = %127, %131
  %135 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %136 = load i8, i8* %135, align 8, !range !5
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 10
  %140 = load i8, i8* %139, align 4, !range !5
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %160

142:                                              ; preds = %138, %134
  %143 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %10, i64 0, i32 0
  %144 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %143, align 8
  %145 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %144, i64 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 2
  br i1 %150, label %160, label %151

151:                                              ; preds = %146, %142
  %152 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %9, i64 %7, i32 5
  %153 = load i8, i8* %152, align 1
  %154 = or i8 %153, 8
  store i8 %154, i8* %152, align 1
  %155 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %9, i64 %7, i32 1
  %156 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %155, align 8
  %157 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %156, i64 0, i32 2
  store %"class.v8::internal::ZoneVector.712"* null, %"class.v8::internal::ZoneVector.712"** %159, align 8
  br label %160

160:                                              ; preds = %138, %158, %151, %146
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 1
  %162 = load i8, i8* %161, align 1, !range !5
  store i8 0, i8* %161, align 1
  store i8 0, i8* %56, align 2
  store i8 0, i8* %128, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 3
  store i8 1, i8* %163, align 1
  %164 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  store i32 -1, i32* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  store i32 0, i32* %165, align 8
  store i32 -1, i32* %5, align 4
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %11, align 8
  %166 = load i8, i8* %135, align 8, !range !5
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %177, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %170 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %169, align 8
  %171 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %170 to i64
  %174 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %175 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %174 to i64*
  store i64 %173, i64* %175, align 8
  br label %176

176:                                              ; preds = %172, %168
  store i8 0, i8* %135, align 8
  br label %177

177:                                              ; preds = %160, %176
  store i8 %162, i8* %161, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register16SpillPendingUsesEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nocapture, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %7, i64 %5
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 7
  %10 = load %"class.v8::internal::compiler::PendingOperand"*, %"class.v8::internal::compiler::PendingOperand"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::PendingOperand"* %10, null
  br i1 %11, label %53, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %8, i64 0, i32 0
  br label %16

16:                                               ; preds = %12, %51
  %17 = phi %"class.v8::internal::compiler::PendingOperand"* [ %10, %12 ], [ %21, %51 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %17, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, -8
  %21 = inttoptr i64 %20 to %"class.v8::internal::compiler::PendingOperand"*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %17, i64 0, i32 0
  %23 = load i32, i32* %13, align 4
  %24 = load i8, i8* %14, align 1, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %16
  %27 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %15, align 8
  %28 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 7
  %33 = icmp eq i64 %32, 2
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %15, align 8
  br label %35

35:                                               ; preds = %16, %34, %29, %26
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %8, i32 %23, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1) #12
  %36 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %15, align 8
  %37 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %36, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 7
  switch i64 %41, label %43 [
    i64 5, label %42
    i64 2, label %42
  ]

42:                                               ; preds = %38, %38
  store i64 %40, i64* %18, align 8
  br label %51

43:                                               ; preds = %38, %35
  store i64 4, i64* %18, align 8
  %44 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %15, align 8
  %45 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %44 to i64
  %48 = and i64 %47, -8
  %49 = or i64 %48, 4
  store i64 %49, i64* %18, align 8
  br label %50

50:                                               ; preds = %46, %43
  store %"class.v8::internal::compiler::InstructionOperand"* %22, %"class.v8::internal::compiler::InstructionOperand"** %15, align 8
  br label %51

51:                                               ; preds = %42, %50
  %52 = icmp eq i64 %20, 0
  br i1 %52, label %53, label %16

53:                                               ; preds = %51, %2
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register15SpillPhiGapMoveENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nocapture readonly, i64, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %10, i64 0, i32 2
  %12 = bitcast %"class.v8::internal::ZoneVector.591"** %11 to %"class.std::__1::vector.592"**
  %13 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %12, align 8
  %14 = sext i32 %8 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %13, i64 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.592"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp ugt i64 %21, %14
  br i1 %22, label %25, label %23

23:                                               ; preds = %4
  %24 = bitcast %"class.std::__1::vector.592"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %24) #13
  unreachable

25:                                               ; preds = %4
  %26 = inttoptr i64 %19 to %"class.v8::internal::compiler::InstructionBlock"**
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %26, i64 %14
  %28 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %33, i64 %31
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %28, i64 0, i32 1, i32 0, i32 0, i32 1
  %38 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %36, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 4, i32 0
  br label %43

42:                                               ; preds = %72, %25
  ret void

43:                                               ; preds = %40, %72
  %44 = phi %"class.v8::internal::compiler::RpoNumber"* [ %36, %40 ], [ %73, %72 ]
  %45 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %41, align 4
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %49, label %72

49:                                               ; preds = %43
  %50 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %9, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %50, i64 0, i32 2
  %52 = bitcast %"class.v8::internal::ZoneVector.591"** %51 to %"class.std::__1::vector.592"**
  %53 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %52, align 8
  %54 = sext i32 %46 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %53, i64 0, i32 0, i32 1
  %56 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.592"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, %54
  br i1 %62, label %65, label %63

63:                                               ; preds = %49
  %64 = bitcast %"class.std::__1::vector.592"* %53 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %64) #13
  unreachable

65:                                               ; preds = %49
  %66 = inttoptr i64 %59 to %"class.v8::internal::compiler::InstructionBlock"**
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %66, i64 %54
  %68 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %68, i64 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, -1
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %34, i64 %1, i32 %71, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3)
  br label %72

72:                                               ; preds = %65, %43
  %73 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %44, i64 1
  %74 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %73, %38
  br i1 %74, label %42, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register16SpillForDeferredENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"*, i64, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %9, i64 %7
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %10, i32 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3) #12
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 1
  %12 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %11, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"* %0, i32 %2, i1 zeroext true, %"class.v8::internal::Zone"* %12)
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* %0, i64 %1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8Register25MoveToSpillSlotOnDeferredEiiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"*, i32, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  store i32 %1, i32* %5, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 4
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %0, i64 0, i32 5
  store i32 1, i32* %10, align 8
  br label %11

11:                                               ; preds = %4, %8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 1
  %13 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %12, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"* %0, i32 %2, i1 zeroext false, %"class.v8::internal::Zone"* %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterStateC2ENS1_12RegisterKindEiPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState"*, i32, i32, %"class.v8::internal::Zone"*) unnamed_addr #2 align 2 {
  %5 = sext i32 %2 to i64
  %6 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %7 to i64*
  %9 = bitcast %"class.v8::internal::compiler::RegisterState"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  store i64 %6, i64* %8, align 8
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %4
  %12 = icmp ugt i32 %2, 268435455
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = bitcast %"class.v8::internal::compiler::RegisterState"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #13
  unreachable

15:                                               ; preds = %11
  %16 = shl nsw i64 %5, 3
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  %22 = icmp ugt i64 %16, %21
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %15
  %24 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 %16) #12
  br label %27

25:                                               ; preds = %15
  %26 = add i64 %18, %16
  store i64 %26, i64* %17, align 8
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i64 [ %24, %23 ], [ %18, %25 ]
  %29 = inttoptr i64 %28 to %"class.v8::internal::compiler::RegisterState::Register"**
  %30 = inttoptr i64 %28 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %29, %"class.v8::internal::compiler::RegisterState::Register"*** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %29, i64 %5
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %33, %"class.v8::internal::compiler::RegisterState::Register"*** %34, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 %16, i1 false) #12
  %35 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %31 to i64*
  %36 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %33 to i64
  store i64 %36, i64* %35, align 8
  br label %37

37:                                               ; preds = %4, %27
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterStateC2ERKS2_(%"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"* nocapture readonly dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %3, align 8
  %5 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %4 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %1, i64 0, i32 1
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = ptrtoint %"class.v8::internal::Zone"* %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %11 to i64*
  %13 = bitcast %"class.v8::internal::compiler::RegisterState"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  store i64 %10, i64* %12, align 8
  %14 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %7 to i64
  %15 = sub i64 %14, %5
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %121, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 268435455
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.v8::internal::compiler::RegisterState"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #13
  unreachable

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %24
  %28 = icmp ugt i64 %15, %27
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %22
  %30 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9, i64 %15) #12
  br label %33

31:                                               ; preds = %22
  %32 = add i64 %24, %15
  store i64 %32, i64* %23, align 8
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i64 [ %30, %29 ], [ %24, %31 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::RegisterState::Register"**
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::RegisterState::Register"** %35, %"class.v8::internal::compiler::RegisterState::Register"*** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %35, %"class.v8::internal::compiler::RegisterState::Register"*** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %35, i64 %16
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %38, %"class.v8::internal::compiler::RegisterState::Register"*** %39, align 8
  %40 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %36 to i64*
  %41 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"** %4, %7
  br i1 %41, label %119, label %42

42:                                               ; preds = %33
  %43 = inttoptr i64 %34 to i64*
  %44 = getelementptr %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %7, i64 -1
  %45 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %44 to i64
  %46 = sub i64 %45, %5
  %47 = lshr i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 7
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %65, label %51

51:                                               ; preds = %42, %51
  %52 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %59, %51 ], [ %35, %42 ]
  %53 = phi i64* [ %60, %51 ], [ %43, %42 ]
  %54 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %58, %51 ], [ %4, %42 ]
  %55 = phi i64 [ %61, %51 ], [ %49, %42 ]
  %56 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %53, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %54, i64 1
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %52, i64 1
  %60 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %59 to i64*
  %61 = add i64 %55, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %51, !llvm.loop !19

63:                                               ; preds = %51
  %64 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %59 to i64*
  br label %65

65:                                               ; preds = %42, %63
  %66 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ undef, %42 ], [ %59, %63 ]
  %67 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %35, %42 ], [ %59, %63 ]
  %68 = phi i64* [ %43, %42 ], [ %64, %63 ]
  %69 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %4, %42 ], [ %58, %63 ]
  %70 = icmp ult i64 %46, 56
  br i1 %70, label %116, label %71

71:                                               ; preds = %65, %71
  %72 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %113, %71 ], [ %67, %65 ]
  %73 = phi i64* [ %115, %71 ], [ %68, %65 ]
  %74 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %112, %71 ], [ %69, %65 ]
  %75 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %73, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 1
  %78 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 1
  %79 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %78 to i64*
  %80 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %77 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %79, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 2
  %83 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 2
  %84 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %83 to i64*
  %85 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %82 to i64*
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %84, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 3
  %88 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 3
  %89 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %88 to i64*
  %90 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %87 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %89, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 4
  %93 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 4
  %94 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %93 to i64*
  %95 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %94, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 5
  %98 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 5
  %99 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %98 to i64*
  %100 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %97 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %99, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 6
  %103 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 6
  %104 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %103 to i64*
  %105 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %102 to i64*
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %104, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 7
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 7
  %109 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %108 to i64*
  %110 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %107 to i64*
  %111 = load i64, i64* %110, align 8
  store i64 %111, i64* %109, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %72, i64 8
  %114 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"** %112, %7
  %115 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %113 to i64*
  br i1 %114, label %116, label %71

116:                                              ; preds = %71, %65
  %117 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %66, %65 ], [ %113, %71 ]
  %118 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %117 to i64
  br label %119

119:                                              ; preds = %116, %33
  %120 = phi i64 [ %34, %33 ], [ %118, %116 ]
  store i64 %120, i64* %40, align 8
  br label %121

121:                                              ; preds = %2, %119
  %122 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  %123 = bitcast %"class.v8::internal::Zone"** %8 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::Zone"** %122 to i64*
  store i64 %124, i64* %125, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal8compiler13RegisterState26VirtualRegisterForRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  ret i32 %11

12:                                               ; preds = %2
  ret i32 -1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13RegisterState11IsAllocatedENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, -1
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i1 [ false, %2 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(64) %"class.v8::internal::compiler::RegisterState::Register"* @_ZN2v88internal8compiler13RegisterState8reg_dataENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  ret %"class.v8::internal::compiler::RegisterState::Register"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13RegisterState12IsPhiGapMoveENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 2, !range !5
  %10 = icmp ne i8 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState6CommitENS1_13RegisterIndexENS1_16AllocatedOperandEPNS1_18InstructionOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, i64, %"class.v8::internal::compiler::InstructionOperand"* nocapture, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = sext i8 %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, i64 %7
  %11 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %11, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %11, i64 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4)
  %18 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %18, i64 %7
  %20 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 1, !range !5
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %19, align 8
  br label %45

25:                                               ; preds = %17
  store i8 0, i8* %21, align 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 2
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 0
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 3
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 4
  store i32 -1, i32* %29, align 4
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 5
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 6
  store i32 -1, i32* %31, align 4
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %37, align 8
  %39 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %38 to i64
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %20, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %42 to i64*
  store i64 %41, i64* %43, align 8
  br label %44

44:                                               ; preds = %40, %36
  store i8 0, i8* %33, align 8
  br label %45

45:                                               ; preds = %13, %5, %44, %25, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState12ResetDataForENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #4 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  br label %32

12:                                               ; preds = %2
  store i8 0, i8* %8, align 1
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 2
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 3
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 4
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 5
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 6
  store i32 -1, i32* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %24, align 8
  %26 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %25 to i64
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %29 to i64*
  store i64 %28, i64* %30, align 8
  br label %31

31:                                               ; preds = %27, %23
  store i8 0, i8* %20, align 8
  br label %32

32:                                               ; preds = %31, %12, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState5SpillENS1_13RegisterIndexENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, i64, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, i64 %6
  %10 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* %10, i64 %2, %"class.v8::internal::compiler::InstructionBlock"* %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4)
  %11 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %11, i64 %6
  %13 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %5
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %12, align 8
  br label %38

18:                                               ; preds = %5
  store i8 0, i8* %14, align 1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 2
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 3
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 4
  store i32 -1, i32* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 5
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 6
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %30, align 8
  %32 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %31 to i64
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %13, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %35 to i64*
  store i64 %34, i64* %36, align 8
  br label %37

37:                                               ; preds = %33, %29
  store i8 0, i8* %26, align 8
  br label %38

38:                                               ; preds = %17, %18, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState16SpillForDeferredENS1_13RegisterIndexENS1_16AllocatedOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, i64, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 align 2 {
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, i64 %6
  %10 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %10, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %15, i64 %13
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %16, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4) #12
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 1
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"* %10, i32 %3, i1 zeroext true, %"class.v8::internal::Zone"* %18) #12
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* %10, i64 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4) #12
  %19 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %19, i64 %6
  %21 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 1, !range !5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %5
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %20, align 8
  br label %46

26:                                               ; preds = %5
  store i8 0, i8* %22, align 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 2
  store i8 0, i8* %27, align 2
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 3
  store i8 1, i8* %29, align 1
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 4
  store i32 -1, i32* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 5
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 6
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %38, align 8
  %40 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %39 to i64
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %21, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %43 to i64*
  store i64 %42, i64* %44, align 8
  br label %45

45:                                               ; preds = %41, %37
  store i8 0, i8* %34, align 8
  br label %46

46:                                               ; preds = %25, %26, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState25MoveToSpillSlotOnDeferredENS1_13RegisterIndexEiiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, i32, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, i64 %6
  %10 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %10, null
  br i1 %11, label %12, label %44

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ult i64 %19, 64
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %12
  %22 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 64) #12
  br label %25

23:                                               ; preds = %12
  %24 = add i64 %16, 64
  store i64 %24, i64* %15, align 8
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ %22, %21 ], [ %16, %23 ]
  %27 = inttoptr i64 %26 to %"class.v8::internal::compiler::RegisterState::Register"*
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %union.anon* %29 to i8*
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 1
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 2
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 0
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 3
  store i8 1, i8* %34, align 1
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 4
  store i32 -1, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 5
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 6
  store i32 -1, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %38, align 8
  %39 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %39, i64 %6
  store %"class.v8::internal::compiler::RegisterState::Register"* %27, %"class.v8::internal::compiler::RegisterState::Register"** %40, align 8
  %41 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %41, i64 %6
  %43 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %42, align 8
  br label %44

44:                                               ; preds = %5, %25
  %45 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %10, %5 ], [ %43, %25 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %45, i64 0, i32 6
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  store i32 %2, i32* %46, align 4
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %45, i64 0, i32 4
  store i32 %3, i32* %50, align 4
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %45, i64 0, i32 5
  store i32 1, i32* %51, align 8
  br label %52

52:                                               ; preds = %44, %49
  %53 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 1
  %54 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %53, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"* %45, i32 %3, i1 zeroext false, %"class.v8::internal::Zone"* %54) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState18EnsureRegisterDataENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #2 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %7, null
  br i1 %8, label %9, label %38

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 64
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %9
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %11, i64 64) #12
  br label %22

20:                                               ; preds = %9
  %21 = add i64 %13, 64
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::RegisterState::Register"*
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 1
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 2
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 0
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 3
  store i8 1, i8* %31, align 1
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 4
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 5
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 6
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %24, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %35, align 8
  %36 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %36, i64 %3
  store %"class.v8::internal::compiler::RegisterState::Register"* %24, %"class.v8::internal::compiler::RegisterState::Register"** %37, align 8
  br label %38

38:                                               ; preds = %2, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState11AllocateUseENS1_13RegisterIndexEiPNS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, i32, %"class.v8::internal::compiler::InstructionOperand"* nocapture readnone, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* nocapture readnone) local_unnamed_addr #2 align 2 {
  %7 = sext i8 %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, i64 %7
  %11 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %11, null
  br i1 %12, label %13, label %45

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 64
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %13
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 64) #12
  br label %26

24:                                               ; preds = %13
  %25 = add i64 %17, 64
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::RegisterState::Register"*
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %union.anon* %30 to i8*
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 1
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 2
  store i8 0, i8* %33, align 2
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 3
  store i8 1, i8* %35, align 1
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 4
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 5
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 6
  store i32 -1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %39, align 8
  %40 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %40, i64 %7
  store %"class.v8::internal::compiler::RegisterState::Register"* %28, %"class.v8::internal::compiler::RegisterState::Register"** %41, align 8
  %42 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %42, i64 %7
  %44 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %43, align 8
  br label %45

45:                                               ; preds = %6, %26
  %46 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %11, %6 ], [ %44, %26 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 0
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 6
  store i32 %2, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 4
  store i32 %4, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 5
  store i32 1, i32* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState18AllocatePendingUseENS1_13RegisterIndexEiPNS1_18InstructionOperandEbi(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, i32, %"class.v8::internal::compiler::InstructionOperand"*, i1 zeroext, i32) local_unnamed_addr #2 align 2 {
  %7 = sext i8 %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, i64 %7
  %11 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %11, null
  br i1 %12, label %13, label %45

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 64
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %13
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 64) #12
  br label %26

24:                                               ; preds = %13
  %25 = add i64 %17, 64
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::RegisterState::Register"*
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %union.anon* %30 to i8*
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 1
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 2
  store i8 0, i8* %33, align 2
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 3
  store i8 1, i8* %35, align 1
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 4
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 5
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 6
  store i32 -1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %39, align 8
  %40 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %40, i64 %7
  store %"class.v8::internal::compiler::RegisterState::Register"* %28, %"class.v8::internal::compiler::RegisterState::Register"** %41, align 8
  %42 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %8, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %42, i64 %7
  %44 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %43, align 8
  br label %45

45:                                               ; preds = %6, %26
  %46 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %11, %6 ], [ %44, %26 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  store i32 %2, i32* %47, align 4
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 4
  store i32 %5, i32* %51, align 4
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 5
  store i32 1, i32* %52, align 8
  br label %53

53:                                               ; preds = %45, %50
  %54 = zext i1 %4 to i8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 3
  %56 = load i8, i8* %55, align 1, !range !5
  %57 = and i8 %56, %54
  store i8 %57, i8* %55, align 1
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %46, i64 0, i32 7
  %59 = bitcast %"class.v8::internal::compiler::PendingOperand"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, -8
  %62 = or i64 %61, 4
  %63 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %62, i64* %63, align 8
  %64 = bitcast %"class.v8::internal::compiler::PendingOperand"** %58 to %"class.v8::internal::compiler::InstructionOperand"**
  store %"class.v8::internal::compiler::InstructionOperand"* %3, %"class.v8::internal::compiler::InstructionOperand"** %64, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState16UseForPhiGapMoveENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #4 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 2
  store i8 1, i8* %8, align 2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13RegisterState8IsSharedENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !5
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i1 [ false, %2 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13RegisterState15HasRegisterDataENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = icmp ne %"class.v8::internal::compiler::RegisterState::Register"* %7, null
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13RegisterState18HasPendingUsesOnlyENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState25ResetIfSpilledWhileSharedENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #4 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  br label %18

18:                                               ; preds = %2, %9, %17, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState13CommitAtMergeENS1_13RegisterIndexE(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #2 align 2 {
  %3 = sext i8 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %5, i64 %3
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %7, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %13, label %12, !prof !18

12:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

13:                                               ; preds = %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState8CopyFromENS1_13RegisterIndexEPS2_(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, %"class.v8::internal::compiler::RegisterState"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %4 = sext i8 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, i64 %4
  %8 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %11, i64 %4
  %13 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %12 to i64*
  store i64 %9, i64* %13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13RegisterState6EqualsENS1_13RegisterIndexEPS2_(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8, %"class.v8::internal::compiler::RegisterState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = sext i8 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, i64 %4
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %10, i64 %4
  %12 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %8, %12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13RegisterState13AddSharedUsesEi(%"class.v8::internal::compiler::RegisterState"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::compiler::RegisterState"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %7 to %"class.v8::internal::compiler::RegisterState::Register"**
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = and i64 %9, 4294967295
  br label %17

16:                                               ; preds = %30, %2
  ret void

17:                                               ; preds = %33, %12
  %18 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %13, %12 ], [ %34, %33 ]
  %19 = phi i64 [ 0, %12 ], [ %31, %33 ]
  %20 = shl i64 %19, 56
  %21 = ashr exact i64 %20, 56
  %22 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %18, i64 %21
  %23 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %23, i64 0, i32 1
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %23, i64 0, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, %1
  store i32 %29, i32* %27, align 8
  br label %30

30:                                               ; preds = %17, %25
  %31 = add nuw nsw i64 %19, 1
  %32 = icmp eq i64 %31, %15
  br i1 %32, label %16, label %33

33:                                               ; preds = %30
  %34 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %14, align 8
  br label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::RegisterState"* @_ZN2v88internal8compiler13RegisterState5CloneEv(%"class.v8::internal::compiler::RegisterState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 40
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %1
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 40) #12
  br label %14

12:                                               ; preds = %1
  %13 = add i64 %5, 40
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::compiler::RegisterState"*
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %17, align 8
  %19 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %20, align 8
  %22 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %23 = ptrtoint %"class.v8::internal::Zone"* %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %25 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %24 to i64*
  %26 = inttoptr i64 %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #12
  store i64 %23, i64* %25, align 8
  %27 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %21 to i64
  %28 = sub i64 %27, %19
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %134, label %31

31:                                               ; preds = %14
  %32 = icmp ugt i64 %29, 268435455
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = inttoptr i64 %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #13
  unreachable

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %22, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %37
  %41 = icmp ugt i64 %28, %40
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %35
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %22, i64 %28) #12
  br label %46

44:                                               ; preds = %35
  %45 = add i64 %37, %28
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %43, %42 ], [ %37, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::RegisterState::Register"**
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::RegisterState::Register"** %48, %"class.v8::internal::compiler::RegisterState::Register"*** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %48, %"class.v8::internal::compiler::RegisterState::Register"*** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %48, i64 %29
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %16, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %51, %"class.v8::internal::compiler::RegisterState::Register"*** %52, align 8
  %53 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %49 to i64*
  %54 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"** %18, %21
  br i1 %54, label %132, label %55

55:                                               ; preds = %46
  %56 = inttoptr i64 %47 to i64*
  %57 = getelementptr %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %21, i64 -1
  %58 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %57 to i64
  %59 = sub i64 %58, %19
  %60 = lshr i64 %59, 3
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 7
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %55, %64
  %65 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %72, %64 ], [ %48, %55 ]
  %66 = phi i64* [ %73, %64 ], [ %56, %55 ]
  %67 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %71, %64 ], [ %18, %55 ]
  %68 = phi i64 [ %74, %64 ], [ %62, %55 ]
  %69 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %67 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %66, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %67, i64 1
  %72 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %65, i64 1
  %73 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %72 to i64*
  %74 = add i64 %68, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %64, !llvm.loop !20

76:                                               ; preds = %64
  %77 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %72 to i64*
  br label %78

78:                                               ; preds = %55, %76
  %79 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ undef, %55 ], [ %72, %76 ]
  %80 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %48, %55 ], [ %72, %76 ]
  %81 = phi i64* [ %56, %55 ], [ %77, %76 ]
  %82 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %18, %55 ], [ %71, %76 ]
  %83 = icmp ult i64 %59, 56
  br i1 %83, label %129, label %84

84:                                               ; preds = %78, %84
  %85 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %126, %84 ], [ %80, %78 ]
  %86 = phi i64* [ %128, %84 ], [ %81, %78 ]
  %87 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %125, %84 ], [ %82, %78 ]
  %88 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 1
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 1
  %92 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %91 to i64*
  %93 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %90 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 2
  %96 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 2
  %97 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %96 to i64*
  %98 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %95 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 3
  %101 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 3
  %102 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %101 to i64*
  %103 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %100 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %102, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 4
  %106 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 4
  %107 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %106 to i64*
  %108 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %105 to i64*
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %107, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 5
  %111 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 5
  %112 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %111 to i64*
  %113 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %110 to i64*
  %114 = load i64, i64* %113, align 8
  store i64 %114, i64* %112, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 6
  %116 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 6
  %117 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %116 to i64*
  %118 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %115 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 7
  %121 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 7
  %122 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %121 to i64*
  %123 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %120 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %122, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %87, i64 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, i64 8
  %127 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"** %125, %21
  %128 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %126 to i64*
  br i1 %127, label %129, label %84

129:                                              ; preds = %84, %78
  %130 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %79, %78 ], [ %126, %84 ]
  %131 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %130 to i64
  br label %132

132:                                              ; preds = %129, %46
  %133 = phi i64 [ %47, %46 ], [ %131, %129 ]
  store i64 %133, i64* %53, align 8
  br label %134

134:                                              ; preds = %14, %132
  %135 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %16, i64 0, i32 1
  %136 = bitcast %"class.v8::internal::Zone"** %2 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::Zone"** %135 to i64*
  store i64 %137, i64* %138, align 8
  ret %"class.v8::internal::compiler::RegisterState"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocatorC2ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, i32, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::Zone"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, i64 0, i32 3
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, i64 0, i32 1
  %12 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %11, align 8
  %13 = ptrtoint %"class.v8::internal::Zone"* %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.738"* %14 to i64*
  %16 = bitcast %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  store i64 %13, i64* %15, align 8
  %17 = icmp eq i32 %9, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %3
  %19 = icmp slt i32 %9, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #13
  unreachable

22:                                               ; preds = %18
  %23 = add nuw nsw i64 %10, 7
  %24 = and i64 %23, -8
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %12, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %12, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ugt i64 %24, %29
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %22
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %12, i64 %24) #12
  br label %35

33:                                               ; preds = %22
  %34 = add i64 %26, %24
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::compiler::RegisterIndex"*
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %37, i64 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterIndex"* %37, %"class.v8::internal::compiler::RegisterIndex"** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %37, i64 %10
  %42 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterIndex"* %41, %"class.v8::internal::compiler::RegisterIndex"** %42, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 -1, i64 %10, i1 false) #12
  %43 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %39 to i64*
  %44 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %41 to i64
  store i64 %44, i64* %43, align 8
  br label %45

45:                                               ; preds = %3, %35
  %46 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 3
  %48 = bitcast %"class.v8::internal::compiler::RegisterState"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  store i32 %1, i32* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, i64 0, i32 5
  %51 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %50, align 8
  %52 = icmp eq i32 %1, 0
  %53 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %51, i64 0, i32 5
  %54 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %51, i64 0, i32 7
  %55 = select i1 %52, i32* %53, i32* %54
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %49, align 4
  %57 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5
  %58 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %50, align 8
  %59 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %58, i64 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %58, i64 0, i32 3
  %61 = select i1 %52, i32* %59, i32* %60
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %11, align 8
  %65 = ptrtoint %"class.v8::internal::Zone"* %64 to i64
  %66 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %67 = bitcast %"struct.std::__1::__compressed_pair_elem.738"* %66 to i64*
  %68 = bitcast %"class.v8::internal::ZoneVector.733"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #12
  store i64 %65, i64* %67, align 8
  %69 = icmp eq i32 %62, 0
  br i1 %69, label %97, label %70

70:                                               ; preds = %45
  %71 = icmp slt i32 %62, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %70
  %73 = bitcast %"class.v8::internal::ZoneVector.733"* %57 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #13
  unreachable

74:                                               ; preds = %70
  %75 = add nuw nsw i64 %63, 7
  %76 = and i64 %75, -8
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %80, %78
  %82 = icmp ugt i64 %76, %81
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %74
  %84 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %64, i64 %76) #12
  br label %87

85:                                               ; preds = %74
  %86 = add i64 %78, %76
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ %84, %83 ], [ %78, %85 ]
  %89 = inttoptr i64 %88 to %"class.v8::internal::compiler::RegisterIndex"*
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %89, i64 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.v8::internal::ZoneVector.733", %"class.v8::internal::ZoneVector.733"* %57, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterIndex"* %89, %"class.v8::internal::compiler::RegisterIndex"** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %89, i64 %63
  %94 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterIndex"* %93, %"class.v8::internal::compiler::RegisterIndex"** %94, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %90, i8 -1, i64 %63, i1 false) #12
  %95 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %91 to i64*
  %96 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %93 to i64
  store i64 %96, i64* %95, align 8
  br label %97

97:                                               ; preds = %45, %87
  %98 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %99 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %50, align 8
  %100 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %99, i64 0, i32 13
  %101 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %99, i64 0, i32 15
  %102 = select i1 %52, i32** %100, i32** %101
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %98 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 7
  %107 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %107, i64 0, i32 1
  %109 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %108, align 8
  %110 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #12
  %111 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %50, align 8
  %112 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %111, i64 0, i32 3
  %114 = select i1 %52, i32* %112, i32* %113
  %115 = load i32, i32* %114, align 8
  store i32 %115, i32* %4, align 4
  %116 = bitcast %"class.v8::internal::Zone"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #12
  %117 = ptrtoint %"class.v8::internal::Zone"* %109 to i64
  %118 = bitcast %"class.v8::internal::Zone"** %5 to i64*
  store i64 %117, i64* %118, align 8
  %119 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %109, i32* nonnull dereferenceable(4) %4, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #12
  store %"class.v8::internal::BitVector"* %119, %"class.v8::internal::BitVector"** %106, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %122 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast %union.anon.744* %122 to i8*
  store i8 0, i8* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %126 = bitcast %union.anon.749* %125 to i8*
  store i8 0, i8* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %129 = bitcast %union.anon.744* %128 to i8*
  store i8 0, i8* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast %union.anon.749* %131 to i8*
  store i8 0, i8* %132, align 8
  %133 = bitcast i64* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 33, i1 false)
  %134 = load i32, i32* %49, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %97
  %137 = getelementptr inbounds %"class.v8::internal::ZoneVector.733", %"class.v8::internal::ZoneVector.733"* %57, i64 0, i32 0, i32 0, i32 0
  br label %139

138:                                              ; preds = %139, %97
  ret void

139:                                              ; preds = %136, %139
  %140 = phi i64 [ 0, %136 ], [ %148, %139 ]
  %141 = load i32*, i32** %98, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 %140
  %143 = load i32, i32* %142, align 4
  %144 = trunc i64 %140 to i8
  %145 = sext i32 %143 to i64
  %146 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %137, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %146, i64 %145, i32 0
  store i8 %144, i8* %147, align 1
  %148 = add nuw nsw i64 %140, 1
  %149 = load i32, i32* %49, align 4
  %150 = sext i32 %149 to i64
  %151 = icmp slt i64 %148, %150
  br i1 %151, label %139, label %138
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #12
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #12
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal8compiler27SinglePassRegisterAllocator26VirtualRegisterForRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i8) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %3, align 8
  %5 = sext i8 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %7, i64 %5
  %9 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %9, i64 0, i32 6
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %13, %11 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8 @_ZN2v88internal8compiler27SinglePassRegisterAllocator26RegisterForVirtualRegisterEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %5, i64 %3, i32 0
  %7 = load i8, i8* %6, align 1
  ret i8 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator22UpdateForDeferredBlockEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::RegisterState"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::compiler::RegisterState"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %6, %16
  %17 = phi i32 [ %19, %16 ], [ 0, %6 ]
  %18 = trunc i32 %17 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator24SpillRegisterForDeferredENS1_13RegisterIndexEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %18, i32 %1)
  %19 = add nuw nsw i32 %17, 1
  %20 = icmp eq i32 %19, %14
  br i1 %20, label %21, label %16

21:                                               ; preds = %16, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator24SpillRegisterForDeferredENS1_13RegisterIndexEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %4, align 8
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, i64 %6
  %10 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %10, null
  br i1 %11, label %83, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %10, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %83, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %10, i64 0, i32 1
  %18 = load i8, i8* %17, align 1, !range !5
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %83, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %22 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %21, align 8
  %23 = sext i32 %14 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 6, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %25, i64 %23, i32 4
  %27 = load i8, i8* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 %6
  %31 = load i32, i32* %30, align 4
  %32 = zext i8 %27 to i64
  %33 = shl nuw nsw i64 %32, 5
  %34 = zext i32 %31 to i64
  %35 = shl i64 %34, 35
  %36 = or i64 %33, %35
  %37 = or i64 %36, 5
  %38 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %25, i64 %23
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %38, i32 %2, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22) #12
  %39 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 1
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %10, i32 %2, i1 zeroext true, %"class.v8::internal::Zone"* %40) #12
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %10, i64 %37, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22) #12
  %41 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %41, i64 %6
  %43 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %20
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %42, align 8
  br label %68

48:                                               ; preds = %20
  store i8 0, i8* %44, align 1
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 2
  store i8 0, i8* %49, align 2
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 0
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 3
  store i8 1, i8* %51, align 1
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 4
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 5
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 6
  store i32 -1, i32* %54, align 4
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 8, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %60, align 8
  %62 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %61 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %65 to i64*
  store i64 %64, i64* %66, align 8
  br label %67

67:                                               ; preds = %63, %59
  store i8 0, i8* %56, align 8
  br label %68

68:                                               ; preds = %47, %48, %67
  %69 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %25, i64 %23, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = and i64 %6, 4294967295
  %72 = shl i64 1, %71
  %73 = xor i64 %72, -1
  %74 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, %73
  store i64 %76, i64* %74, align 8
  %77 = icmp eq i32 %70, -1
  br i1 %77, label %83, label %78

78:                                               ; preds = %68
  %79 = sext i32 %70 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %81, i64 %79, i32 0
  store i8 -1, i8* %82, align 1
  br label %83

83:                                               ; preds = %16, %12, %3, %78, %68
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14EndInstructionEv(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 12, i32 0
  store i64 0, i64* %3, align 8
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator10StartBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, %"class.v8::internal::compiler::InstructionBlock"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::InstructionBlock"* %1, %"class.v8::internal::compiler::InstructionBlock"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::compiler::InstructionBlock"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to %"class.v8::internal::compiler::RpoNumber"*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CloneStateFromENS1_9RpoNumberE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i32 %14)
  br label %20

15:                                               ; preds = %2
  %16 = ashr exact i64 %9, 2
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14MergeStateFromERKNS0_10ZoneVectorINS1_9RpoNumberEEE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, %"class.v8::internal::ZoneVector.594"* dereferenceable(32) %19)
  br label %20

20:                                               ; preds = %15, %18, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CloneStateFromENS1_9RpoNumberE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %4 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %7, i64 %5, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %7, i64 %5, i32 1
  %13 = select i1 %10, %"class.v8::internal::compiler::RegisterState"** %11, %"class.v8::internal::compiler::RegisterState"** %12
  %14 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::RegisterState"* %14, null
  br i1 %15, label %130, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 3
  %18 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 2
  %20 = bitcast %"class.v8::internal::ZoneVector.591"** %19 to %"class.std::__1::vector.592"**
  %21 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %21, i64 0, i32 0, i32 1
  %23 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.592"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ugt i64 %28, %5
  br i1 %29, label %32, label %30

30:                                               ; preds = %16
  %31 = bitcast %"class.std::__1::vector.592"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %31) #13
  unreachable

32:                                               ; preds = %16
  %33 = inttoptr i64 %26 to %"class.v8::internal::compiler::InstructionBlock"**
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %33, i64 %5
  %35 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %35, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %35, i64 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.595"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4
  br i1 %43, label %46, label %44

44:                                               ; preds = %32
  %45 = tail call %"class.v8::internal::compiler::RegisterState"* @_ZN2v88internal8compiler13RegisterState5CloneEv(%"class.v8::internal::compiler::RegisterState"* nonnull %14)
  br label %46

46:                                               ; preds = %32, %44
  %47 = phi %"class.v8::internal::compiler::RegisterState"* [ %45, %44 ], [ %14, %32 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::RegisterState"* %47, %"class.v8::internal::compiler::RegisterState"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %47, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.v8::internal::compiler::RegisterState"* %47 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = lshr exact i64 %54, 3
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %130, label %58

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 7
  %60 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %61 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %128, %58
  %64 = phi %"class.v8::internal::compiler::RegisterState"* [ %47, %58 ], [ %129, %128 ]
  %65 = phi i32 [ 0, %58 ], [ %126, %128 ]
  %66 = trunc i32 %65 to i8
  %67 = sext i8 %66 to i64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %69, i64 %67
  %71 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %70, align 8
  %72 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %71, null
  br i1 %72, label %125, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %71, i64 0, i32 1
  %75 = load i8, i8* %74, align 1, !range !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %71, i64 0, i32 6
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %88

81:                                               ; preds = %77
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %70, align 8
  %82 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %48, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %84, i64 %67
  %86 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %85, align 8
  %87 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %86, null
  br i1 %87, label %125, label %88

88:                                               ; preds = %81, %77, %73
  %89 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %86, %81 ], [ %71, %73 ], [ %71, %77 ]
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %89, i64 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -1
  br i1 %92, label %125, label %93

93:                                               ; preds = %88
  %94 = sext i32 %91 to i64
  %95 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %59, align 8
  %96 = load i32*, i32** %60, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 %67
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %95, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %105

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %95, i64 0, i32 2
  %104 = bitcast %"union.v8::internal::BitVector::DataStorage"* %103 to i64*
  br label %112

105:                                              ; preds = %93
  %106 = srem i32 %98, 64
  %107 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %95, i64 0, i32 2, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = sdiv i32 %98, 64
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i64, i64* %108, i64 %110
  br label %112

112:                                              ; preds = %105, %102
  %113 = phi i64* [ %111, %105 ], [ %104, %102 ]
  %114 = phi i32 [ %106, %105 ], [ %98, %102 ]
  %115 = zext i32 %114 to i64
  %116 = shl i64 1, %115
  %117 = load i64, i64* %113, align 8
  %118 = or i64 %117, %116
  store i64 %118, i64* %113, align 8
  %119 = and i64 %67, 4294967295
  %120 = shl i64 1, %119
  %121 = load i64, i64* %61, align 8
  %122 = or i64 %121, %120
  store i64 %122, i64* %61, align 8
  %123 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %62, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %123, i64 %94, i32 0
  store i8 %66, i8* %124, align 1
  br label %125

125:                                              ; preds = %112, %88, %81, %63
  %126 = add nuw nsw i32 %65, 1
  %127 = icmp eq i32 %126, %56
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %48, align 8
  br label %63

130:                                              ; preds = %125, %46, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14MergeStateFromERKNS0_10ZoneVectorINS1_9RpoNumberEEE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, %"class.v8::internal::ZoneVector.594"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneVector.594", %"class.v8::internal::ZoneVector.594"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneVector.594", %"class.v8::internal::ZoneVector.594"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %4, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 7
  br label %19

18:                                               ; preds = %435, %2
  ret void

19:                                               ; preds = %8, %435
  %20 = phi %"class.v8::internal::compiler::RpoNumber"* [ %4, %8 ], [ %436, %435 ]
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %9, align 8
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %23, i64 0, i32 7, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %25, align 8
  %27 = load i32, i32* %10, align 8
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %26, i64 %24, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %26, i64 %24, i32 1
  %31 = select i1 %28, %"class.v8::internal::compiler::RegisterState"** %29, %"class.v8::internal::compiler::RegisterState"** %30
  %32 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::RegisterState"* %32, null
  br i1 %33, label %435, label %34

34:                                               ; preds = %19
  %35 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %11, align 8
  %36 = icmp eq %"class.v8::internal::compiler::RegisterState"* %35, null
  br i1 %36, label %37, label %116

37:                                               ; preds = %34
  store %"class.v8::internal::compiler::RegisterState"* %32, %"class.v8::internal::compiler::RegisterState"** %11, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.v8::internal::compiler::RegisterState"* %32 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = lshr exact i64 %43, 3
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %435, label %47

47:                                               ; preds = %37
  %48 = inttoptr i64 %42 to %"class.v8::internal::compiler::RegisterState::Register"**
  br label %49

49:                                               ; preds = %47, %112
  %50 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %115, %112 ], [ %48, %47 ]
  %51 = phi i32 [ %110, %112 ], [ 0, %47 ]
  %52 = trunc i32 %51 to i8
  %53 = sext i8 %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %50, i64 %53
  %55 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %55, null
  br i1 %56, label %109, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %55, i64 0, i32 1
  %59 = load i8, i8* %58, align 1, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %55, i64 0, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %72

65:                                               ; preds = %61
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %54, align 8
  %66 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %11, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %68, i64 %53
  %70 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %69, align 8
  %71 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %70, null
  br i1 %71, label %109, label %72

72:                                               ; preds = %65, %61, %57
  %73 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %70, %65 ], [ %55, %57 ], [ %55, %61 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %73, i64 0, i32 6
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %109, label %77

77:                                               ; preds = %72
  %78 = sext i32 %75 to i64
  %79 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %17, align 8
  %80 = load i32*, i32** %13, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %53
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %79, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %89

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %79, i64 0, i32 2
  %88 = bitcast %"union.v8::internal::BitVector::DataStorage"* %87 to i64*
  br label %96

89:                                               ; preds = %77
  %90 = srem i32 %82, 64
  %91 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %79, i64 0, i32 2, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = sdiv i32 %82, 64
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i64, i64* %92, i64 %94
  br label %96

96:                                               ; preds = %89, %86
  %97 = phi i64* [ %95, %89 ], [ %88, %86 ]
  %98 = phi i32 [ %90, %89 ], [ %82, %86 ]
  %99 = zext i32 %98 to i64
  %100 = shl i64 1, %99
  %101 = load i64, i64* %97, align 8
  %102 = or i64 %101, %100
  store i64 %102, i64* %97, align 8
  %103 = and i64 %53, 4294967295
  %104 = shl i64 1, %103
  %105 = load i64, i64* %15, align 8
  %106 = or i64 %105, %104
  store i64 %106, i64* %15, align 8
  %107 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %12, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %107, i64 %78, i32 0
  store i8 %52, i8* %108, align 1
  br label %109

109:                                              ; preds = %96, %72, %65, %49
  %110 = add nuw nsw i32 %51, 1
  %111 = icmp eq i32 %110, %45
  br i1 %111, label %435, label %112

112:                                              ; preds = %109
  %113 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %11, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %114, align 8
  br label %49

116:                                              ; preds = %34
  %117 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::compiler::RegisterState"* %32 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %119, %121
  %123 = lshr exact i64 %122, 3
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %124, 0
  %126 = inttoptr i64 %121 to %"class.v8::internal::compiler::RegisterState::Register"**
  br i1 %125, label %435, label %127

127:                                              ; preds = %116
  %128 = and i64 %123, 4294967295
  %129 = and i64 %123, 1
  %130 = icmp eq i64 %128, 1
  br i1 %130, label %158, label %131

131:                                              ; preds = %127
  %132 = sub nsw i64 %128, %129
  br label %133

133:                                              ; preds = %446, %131
  %134 = phi i64 [ 0, %131 ], [ %448, %446 ]
  %135 = phi i64 [ 0, %131 ], [ %447, %446 ]
  %136 = phi i64 [ %132, %131 ], [ %449, %446 ]
  %137 = shl i64 %134, 56
  %138 = ashr exact i64 %137, 56
  %139 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %126, i64 %138
  %140 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %139, align 8
  %141 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %140, null
  br i1 %141, label %150, label %142

142:                                              ; preds = %133
  %143 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %140, i64 0, i32 6
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, -1
  br i1 %145, label %150, label %146

146:                                              ; preds = %142
  %147 = and i64 %138, 4294967294
  %148 = shl i64 1, %147
  %149 = or i64 %148, %135
  br label %150

150:                                              ; preds = %146, %142, %133
  %151 = phi i64 [ %149, %146 ], [ %135, %142 ], [ %135, %133 ]
  %152 = shl i64 %134, 56
  %153 = ashr exact i64 %152, 56
  %154 = or i64 %153, 1
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %126, i64 %154
  %156 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %155, align 8
  %157 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %156, null
  br i1 %157, label %446, label %438

158:                                              ; preds = %446, %127
  %159 = phi i64 [ undef, %127 ], [ %447, %446 ]
  %160 = phi i64 [ 0, %127 ], [ %448, %446 ]
  %161 = phi i64 [ 0, %127 ], [ %447, %446 ]
  %162 = icmp eq i64 %129, 0
  br i1 %162, label %177, label %163

163:                                              ; preds = %158
  %164 = shl i64 %160, 56
  %165 = ashr exact i64 %164, 56
  %166 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %126, i64 %165
  %167 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %167, null
  br i1 %168, label %177, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %167, i64 0, i32 6
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, -1
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = and i64 %165, 4294967295
  %175 = shl i64 1, %174
  %176 = or i64 %175, %161
  br label %177

177:                                              ; preds = %173, %169, %163, %158
  %178 = phi i64 [ %159, %158 ], [ %176, %173 ], [ %161, %169 ], [ %161, %163 ]
  br i1 %125, label %435, label %179

179:                                              ; preds = %177
  %180 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %181

181:                                              ; preds = %433, %179
  %182 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %126, %179 ], [ %434, %433 ]
  %183 = phi i64 [ 0, %179 ], [ %430, %433 ]
  %184 = phi i32 [ 0, %179 ], [ %431, %433 ]
  %185 = trunc i32 %184 to i8
  %186 = sext i8 %185 to i64
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %182, i64 %186
  %188 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %187, align 8
  %189 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %188, null
  %190 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"* %188 to i64
  br i1 %189, label %429, label %191

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %188, i64 0, i32 6
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, -1
  br i1 %194, label %429, label %195

195:                                              ; preds = %191
  %196 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %9, align 8
  %197 = sext i32 %193 to i64
  %198 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %196, i64 0, i32 6, i32 0, i32 0, i32 0
  %199 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %199, i64 %197
  %201 = and i64 %186, 4294967295
  %202 = shl i64 1, %201
  %203 = and i64 %202, %183
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %429

205:                                              ; preds = %195
  %206 = or i64 %202, %183
  %207 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %11, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %207, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %208, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %209, i64 %186
  %211 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %210, align 8
  %212 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %211, null
  br i1 %212, label %354, label %213

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %211, i64 0, i32 6
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %354, label %217

217:                                              ; preds = %213
  %218 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %188, %211
  br i1 %218, label %219, label %225

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %188, i64 0, i32 5
  %221 = load i32, i32* %220, align 8
  %222 = add nsw i32 %221, -1
  store i32 %222, i32* %220, align 8
  %223 = icmp sgt i32 %222, 0
  br i1 %223, label %429, label %224, !prof !18

224:                                              ; preds = %219
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

225:                                              ; preds = %217
  %226 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %12, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %226, i64 %197, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = icmp eq i8 %228, -1
  br i1 %229, label %230, label %247

230:                                              ; preds = %225
  %231 = load i64, i64* %15, align 8
  %232 = or i64 %231, %178
  %233 = load i32, i32* %16, align 4
  %234 = icmp eq i64 %232, -1
  br i1 %234, label %239, label %235

235:                                              ; preds = %230
  %236 = xor i64 %232, -1
  %237 = tail call i64 @llvm.cttz.i64(i64 %236, i1 true) #12, !range !21
  %238 = trunc i64 %237 to i32
  br label %239

239:                                              ; preds = %230, %235
  %240 = phi i32 [ %238, %235 ], [ 64, %230 ]
  %241 = icmp slt i32 %240, %233
  %242 = trunc i32 %240 to i8
  %243 = icmp ne i8 %242, -1
  %244 = and i1 %241, %243
  br i1 %244, label %245, label %305

245:                                              ; preds = %239
  %246 = sext i8 %242 to i64
  br label %299

247:                                              ; preds = %225
  %248 = icmp eq i8 %228, %185
  br i1 %248, label %299, label %249

249:                                              ; preds = %247
  %250 = sext i8 %228 to i64
  %251 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %182, i64 %250
  %252 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %251, align 8
  %253 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %252, null
  br i1 %253, label %299, label %254

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %252, i64 0, i32 6
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, -1
  br i1 %257, label %299, label %258

258:                                              ; preds = %254
  %259 = sext i32 %256 to i64
  %260 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %199, i64 %259, i32 4
  %261 = load i8, i8* %260, align 8
  %262 = load i32*, i32** %13, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 %250
  %264 = load i32, i32* %263, align 4
  %265 = zext i8 %261 to i64
  %266 = shl nuw nsw i64 %265, 5
  %267 = zext i32 %264 to i64
  %268 = shl i64 %267, 35
  %269 = or i64 %266, %268
  %270 = or i64 %269, 5
  %271 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %14, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %252, i64 %270, %"class.v8::internal::compiler::InstructionBlock"* %271, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %196) #12
  %272 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %180, align 8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %272, i64 %250
  %274 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 1
  %276 = load i8, i8* %275, align 1, !range !5
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %279, label %278

278:                                              ; preds = %258
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %273, align 8
  br label %299

279:                                              ; preds = %258
  store i8 0, i8* %275, align 1
  %280 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 2
  store i8 0, i8* %280, align 2
  %281 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 0
  store i8 0, i8* %281, align 8
  %282 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 3
  store i8 1, i8* %282, align 1
  %283 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 4
  store i32 -1, i32* %283, align 4
  %284 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 5
  store i32 0, i32* %284, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 6
  store i32 -1, i32* %285, align 4
  %286 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %286, align 8
  %287 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %288 = load i8, i8* %287, align 8, !range !5
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %299, label %290

290:                                              ; preds = %279
  %291 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %292 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %291, align 8
  %293 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %292, null
  br i1 %293, label %298, label %294

294:                                              ; preds = %290
  %295 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %292 to i64
  %296 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %274, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %297 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %296 to i64*
  store i64 %295, i64* %297, align 8
  br label %298

298:                                              ; preds = %294, %290
  store i8 0, i8* %287, align 8
  br label %299

299:                                              ; preds = %245, %247, %298, %279, %278, %254, %249
  %300 = phi i64 [ %246, %245 ], [ %186, %247 ], [ %250, %298 ], [ %250, %279 ], [ %250, %278 ], [ %250, %254 ], [ %250, %249 ]
  %301 = phi i8 [ %242, %245 ], [ %185, %247 ], [ %228, %298 ], [ %228, %279 ], [ %228, %278 ], [ %228, %254 ], [ %228, %249 ]
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator19MoveRegisterOnMergeENS1_13RegisterIndexES3_RNS1_19VirtualRegisterDataENS1_9RpoNumberEPNS1_13RegisterStateE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %301, i8 %185, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %200, i32 %22, %"class.v8::internal::compiler::RegisterState"* nonnull %32)
  %302 = and i64 %300, 4294967295
  %303 = shl i64 1, %302
  %304 = or i64 %303, %206
  br label %429

305:                                              ; preds = %239
  %306 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %182, i64 %186
  %307 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %306, align 8
  %308 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %307, null
  br i1 %308, label %429, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %307, i64 0, i32 6
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, -1
  br i1 %312, label %429, label %313

313:                                              ; preds = %309
  %314 = sext i32 %311 to i64
  %315 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %199, i64 %314, i32 4
  %316 = load i8, i8* %315, align 8
  %317 = load i32*, i32** %13, align 8
  %318 = getelementptr inbounds i32, i32* %317, i64 %186
  %319 = load i32, i32* %318, align 4
  %320 = zext i8 %316 to i64
  %321 = shl nuw nsw i64 %320, 5
  %322 = zext i32 %319 to i64
  %323 = shl i64 %322, 35
  %324 = or i64 %321, %323
  %325 = or i64 %324, 5
  %326 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %14, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %307, i64 %325, %"class.v8::internal::compiler::InstructionBlock"* %326, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %196) #12
  %327 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %180, align 8
  %328 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %327, i64 %186
  %329 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %328, align 8
  %330 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 1
  %331 = load i8, i8* %330, align 1, !range !5
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %334, label %333

333:                                              ; preds = %313
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %328, align 8
  br label %429

334:                                              ; preds = %313
  store i8 0, i8* %330, align 1
  %335 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 2
  store i8 0, i8* %335, align 2
  %336 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 0
  store i8 0, i8* %336, align 8
  %337 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 3
  store i8 1, i8* %337, align 1
  %338 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 4
  store i32 -1, i32* %338, align 4
  %339 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 5
  store i32 0, i32* %339, align 8
  %340 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 6
  store i32 -1, i32* %340, align 4
  %341 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %341, align 8
  %342 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %343 = load i8, i8* %342, align 8, !range !5
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %429, label %345

345:                                              ; preds = %334
  %346 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %347 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %346, align 8
  %348 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %347, null
  br i1 %348, label %353, label %349

349:                                              ; preds = %345
  %350 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %347 to i64
  %351 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %329, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %352 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %351 to i64*
  store i64 %350, i64* %352, align 8
  br label %353

353:                                              ; preds = %349, %345
  store i8 0, i8* %342, align 8
  br label %429

354:                                              ; preds = %213, %205
  %355 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %12, align 8
  %356 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %355, i64 %197, i32 0
  %357 = load i8, i8* %356, align 1
  %358 = icmp eq i8 %357, -1
  br i1 %358, label %399, label %359

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %199, i64 %197, i32 4
  %361 = load i8, i8* %360, align 8
  %362 = load i32*, i32** %13, align 8
  %363 = getelementptr inbounds i32, i32* %362, i64 %186
  %364 = load i32, i32* %363, align 4
  %365 = zext i8 %361 to i64
  %366 = shl nuw nsw i64 %365, 5
  %367 = zext i32 %364 to i64
  %368 = shl i64 %367, 35
  %369 = or i64 %366, %368
  %370 = or i64 %369, 5
  %371 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %14, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %188, i64 %370, %"class.v8::internal::compiler::InstructionBlock"* %371, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %196) #12
  %372 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %180, align 8
  %373 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %372, i64 %186
  %374 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %373, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 1
  %376 = load i8, i8* %375, align 1, !range !5
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %379, label %378

378:                                              ; preds = %359
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %373, align 8
  br label %429

379:                                              ; preds = %359
  store i8 0, i8* %375, align 1
  %380 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 2
  store i8 0, i8* %380, align 2
  %381 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 0
  store i8 0, i8* %381, align 8
  %382 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 3
  store i8 1, i8* %382, align 1
  %383 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 4
  store i32 -1, i32* %383, align 4
  %384 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 5
  store i32 0, i32* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 6
  store i32 -1, i32* %385, align 4
  %386 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %386, align 8
  %387 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %388 = load i8, i8* %387, align 8, !range !5
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %429, label %390

390:                                              ; preds = %379
  %391 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %392 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %391, align 8
  %393 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %392, null
  br i1 %393, label %398, label %394

394:                                              ; preds = %390
  %395 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %392 to i64
  %396 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %374, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %397 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %396 to i64*
  store i64 %395, i64* %397, align 8
  br label %398

398:                                              ; preds = %394, %390
  store i8 0, i8* %387, align 8
  br label %429

399:                                              ; preds = %354
  %400 = bitcast %"class.v8::internal::compiler::RegisterState::Register"** %210 to i64*
  store i64 %190, i64* %400, align 8
  %401 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %17, align 8
  %402 = load i32*, i32** %13, align 8
  %403 = getelementptr inbounds i32, i32* %402, i64 %186
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %401, i64 0, i32 1
  %406 = load i32, i32* %405, align 4
  %407 = icmp eq i32 %406, 1
  br i1 %407, label %408, label %411

408:                                              ; preds = %399
  %409 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %401, i64 0, i32 2
  %410 = bitcast %"union.v8::internal::BitVector::DataStorage"* %409 to i64*
  br label %418

411:                                              ; preds = %399
  %412 = srem i32 %404, 64
  %413 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %401, i64 0, i32 2, i32 0
  %414 = load i64*, i64** %413, align 8
  %415 = sdiv i32 %404, 64
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i64, i64* %414, i64 %416
  br label %418

418:                                              ; preds = %408, %411
  %419 = phi i64* [ %410, %408 ], [ %417, %411 ]
  %420 = phi i32 [ %404, %408 ], [ %412, %411 ]
  %421 = zext i32 %420 to i64
  %422 = shl i64 1, %421
  %423 = load i64, i64* %419, align 8
  %424 = or i64 %423, %422
  store i64 %424, i64* %419, align 8
  %425 = load i64, i64* %15, align 8
  %426 = or i64 %425, %202
  store i64 %426, i64* %15, align 8
  %427 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %12, align 8
  %428 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %427, i64 %197, i32 0
  store i8 %185, i8* %428, align 1
  br label %429

429:                                              ; preds = %195, %191, %181, %418, %398, %379, %378, %299, %305, %309, %333, %334, %353, %219
  %430 = phi i64 [ %183, %195 ], [ %183, %191 ], [ %206, %219 ], [ %304, %299 ], [ %206, %305 ], [ %206, %309 ], [ %206, %333 ], [ %206, %334 ], [ %206, %353 ], [ %206, %378 ], [ %206, %379 ], [ %206, %398 ], [ %206, %418 ], [ %183, %181 ]
  %431 = add nuw nsw i32 %184, 1
  %432 = icmp eq i32 %431, %124
  br i1 %432, label %435, label %433

433:                                              ; preds = %429
  %434 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %180, align 8
  br label %181

435:                                              ; preds = %429, %109, %116, %177, %37, %19
  %436 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %20, i64 1
  %437 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %436, %6
  br i1 %437, label %18, label %19

438:                                              ; preds = %150
  %439 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %156, i64 0, i32 6
  %440 = load i32, i32* %439, align 4
  %441 = icmp eq i32 %440, -1
  br i1 %441, label %446, label %442

442:                                              ; preds = %438
  %443 = and i64 %154, 4294967295
  %444 = shl i64 1, %443
  %445 = or i64 %444, %151
  br label %446

446:                                              ; preds = %442, %438, %150
  %447 = phi i64 [ %445, %442 ], [ %151, %438 ], [ %151, %150 ]
  %448 = add nuw nsw i64 %134, 2
  %449 = add i64 %136, -2
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %158, label %133
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator8EndBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::RegisterState"* %4, null
  %6 = ptrtoint %"class.v8::internal::compiler::RegisterState"* %4 to i64
  br i1 %5, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::RpoNumber"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.595"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2, %7
  %18 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::InstructionBlock"* null, %"class.v8::internal::compiler::InstructionBlock"** %18, align 8
  br label %117

19:                                               ; preds = %7
  %20 = icmp ugt i64 %15, 1
  br i1 %20, label %21, label %58

21:                                               ; preds = %19
  %22 = trunc i64 %15 to i32
  %23 = add nsw i32 %22, -1
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.v8::internal::compiler::RegisterState"* %4 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = lshr exact i64 %29, 3
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %58, label %33

33:                                               ; preds = %21
  %34 = inttoptr i64 %28 to %"class.v8::internal::compiler::RegisterState::Register"**
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = and i64 %30, 4294967295
  br label %37

37:                                               ; preds = %53, %33
  %38 = phi %"class.v8::internal::compiler::RegisterState::Register"** [ %34, %33 ], [ %54, %53 ]
  %39 = phi i64 [ 0, %33 ], [ %51, %53 ]
  %40 = shl i64 %39, 56
  %41 = ashr exact i64 %40, 56
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %38, i64 %41
  %43 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %42, align 8
  %44 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 1
  store i8 1, i8* %46, align 1
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %43, i64 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = add nsw i32 %23, %48
  store i32 %49, i32* %47, align 8
  br label %50

50:                                               ; preds = %45, %37
  %51 = add nuw nsw i64 %39, 1
  %52 = icmp eq i64 %51, %36
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %35, align 8
  br label %37

55:                                               ; preds = %50
  %56 = bitcast %"class.v8::internal::compiler::RegisterState"** %3 to i64*
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %55, %21, %19
  %59 = phi i64 [ %57, %55 ], [ %6, %21 ], [ %6, %19 ]
  %60 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %61 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %61, i64 0, i32 7, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  switch i32 %68, label %77 [
    i32 0, label %69
    i32 1, label %72
  ]

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %66, i64 %64
  %71 = bitcast %"class.v8::internal::compiler::BlockState"* %70 to i64*
  br label %75

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %66, i64 %64, i32 1
  %74 = bitcast %"class.v8::internal::compiler::RegisterState"** %73 to i64*
  br label %75

75:                                               ; preds = %72, %69
  %76 = phi i64* [ %71, %69 ], [ %74, %72 ]
  store i64 %59, i64* %76, align 8
  br label %77

77:                                               ; preds = %75, %58
  %78 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %115, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %83

83:                                               ; preds = %81, %112
  %84 = phi i64 [ %79, %81 ], [ %113, %112 ]
  %85 = tail call i64 @llvm.cttz.i64(i64 %84, i1 true) #12, !range !21
  %86 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %60, align 8
  %87 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %3, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %89, i64 %85
  %91 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %90, align 8
  %92 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %91, i64 0, i32 6
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %83, %93
  %97 = phi i32 [ %95, %93 ], [ -1, %83 ]
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %86, i64 0, i32 6, i32 0, i32 0, i32 0
  %100 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %100, i64 %98, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = shl i64 1, %85
  %104 = xor i64 %103, -1
  %105 = and i64 %84, %104
  store i64 %105, i64* %78, align 8
  %106 = icmp eq i32 %102, -1
  br i1 %106, label %112, label %107

107:                                              ; preds = %96
  %108 = sext i32 %102 to i64
  %109 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %82, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %109, i64 %108, i32 0
  store i8 -1, i8* %110, align 1
  %111 = load i64, i64* %78, align 8
  br label %112

112:                                              ; preds = %96, %107
  %113 = phi i64 [ %105, %96 ], [ %111, %107 ]
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %83

115:                                              ; preds = %112, %77
  %116 = bitcast %"class.v8::internal::compiler::RegisterState"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false)
  br label %117

117:                                              ; preds = %115, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator26UpdateVirtualRegisterStateEv(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::compiler::RegisterState"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %81, %1
  ret void

19:                                               ; preds = %84, %13
  %20 = phi %"class.v8::internal::compiler::RegisterState"* [ %3, %13 ], [ %85, %84 ]
  %21 = phi i32 [ 0, %13 ], [ %82, %84 ]
  %22 = trunc i32 %21 to i8
  %23 = sext i8 %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %25, i64 %23
  %27 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %26, align 8
  %28 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %27, null
  br i1 %28, label %81, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 1
  %31 = load i8, i8* %30, align 1, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %27, i64 0, i32 6
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %44

37:                                               ; preds = %33
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %26, align 8
  %38 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %2, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %40, i64 %23
  %42 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %42, null
  br i1 %43, label %81, label %44

44:                                               ; preds = %33, %29, %37
  %45 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %42, %37 ], [ %27, %29 ], [ %27, %33 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %45, i64 0, i32 6
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %81, label %49

49:                                               ; preds = %44
  %50 = sext i32 %47 to i64
  %51 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %14, align 8
  %52 = load i32*, i32** %15, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 %23
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %51, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %51, i64 0, i32 2
  %60 = bitcast %"union.v8::internal::BitVector::DataStorage"* %59 to i64*
  br label %68

61:                                               ; preds = %49
  %62 = srem i32 %54, 64
  %63 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %51, i64 0, i32 2, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = sdiv i32 %54, 64
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i64, i64* %64, i64 %66
  br label %68

68:                                               ; preds = %61, %58
  %69 = phi i64* [ %67, %61 ], [ %60, %58 ]
  %70 = phi i32 [ %62, %61 ], [ %54, %58 ]
  %71 = zext i32 %70 to i64
  %72 = shl i64 1, %71
  %73 = load i64, i64* %69, align 8
  %74 = or i64 %73, %72
  store i64 %74, i64* %69, align 8
  %75 = and i64 %23, 4294967295
  %76 = shl i64 1, %75
  %77 = load i64, i64* %16, align 8
  %78 = or i64 %77, %76
  store i64 %78, i64* %16, align 8
  %79 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %17, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %79, i64 %50, i32 0
  store i8 %22, i8* %80, align 1
  br label %81

81:                                               ; preds = %19, %37, %44, %68
  %82 = add nuw nsw i32 %21, 1
  %83 = icmp eq i32 %82, %11
  br i1 %83, label %18, label %84

84:                                               ; preds = %81
  %85 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %2, align 8
  br label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8compiler27SinglePassRegisterAllocator24GetAllocatedRegBitVectorEPNS1_13RegisterStateE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, %"class.v8::internal::compiler::RegisterState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::compiler::RegisterState"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 3
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  %12 = inttoptr i64 %7 to %"class.v8::internal::compiler::RegisterState::Register"**
  br i1 %11, label %39, label %13

13:                                               ; preds = %2
  %14 = and i64 %9, 4294967295
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %14, 1
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = sub nsw i64 %14, %15
  br label %41

19:                                               ; preds = %74
  %20 = shl i64 %76, 56
  %21 = ashr exact i64 %20, 56
  br label %22

22:                                               ; preds = %19, %13
  %23 = phi i64 [ undef, %13 ], [ %75, %19 ]
  %24 = phi i64 [ 0, %13 ], [ %21, %19 ]
  %25 = phi i64 [ 0, %13 ], [ %75, %19 ]
  %26 = icmp eq i64 %15, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %12, i64 %24
  %29 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %29, i64 0, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = and i64 %24, 4294967295
  %37 = shl i64 1, %36
  %38 = or i64 %37, %25
  br label %39

39:                                               ; preds = %22, %27, %31, %35, %2
  %40 = phi i64 [ 0, %2 ], [ %23, %22 ], [ %38, %35 ], [ %25, %31 ], [ %25, %27 ]
  ret i64 %40

41:                                               ; preds = %74, %17
  %42 = phi i64 [ 0, %17 ], [ %76, %74 ]
  %43 = phi i64 [ 0, %17 ], [ %75, %74 ]
  %44 = phi i64 [ %18, %17 ], [ %77, %74 ]
  %45 = shl i64 %42, 56
  %46 = ashr exact i64 %45, 56
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %12, i64 %46
  %48 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %47, align 8
  %49 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %48, i64 0, i32 6
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = and i64 %46, 4294967294
  %56 = shl i64 1, %55
  %57 = or i64 %56, %43
  br label %58

58:                                               ; preds = %50, %41, %54
  %59 = phi i64 [ %57, %54 ], [ %43, %50 ], [ %43, %41 ]
  %60 = shl i64 %42, 56
  %61 = ashr exact i64 %60, 56
  %62 = or i64 %61, 1
  %63 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %12, i64 %62
  %64 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %63, align 8
  %65 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %64, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %64, i64 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %74, label %70

70:                                               ; preds = %66
  %71 = and i64 %62, 4294967295
  %72 = shl i64 1, %71
  %73 = or i64 %72, %59
  br label %74

74:                                               ; preds = %70, %66, %58
  %75 = phi i64 [ %73, %70 ], [ %59, %66 ], [ %59, %58 ]
  %76 = add nuw nsw i64 %42, 2
  %77 = add i64 %44, -2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %19, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20SpillRegisterAtMergeEPNS1_13RegisterStateENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, %"class.v8::internal::compiler::RegisterState"* nocapture readonly, i8) local_unnamed_addr #2 align 2 {
  %4 = sext i8 %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %6, i64 %4
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %8, null
  br i1 %9, label %61, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %8, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %61, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %16 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %16, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %19, i64 %17, i32 4
  %21 = load i8, i8* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %4
  %25 = load i32, i32* %24, align 4
  %26 = zext i8 %21 to i64
  %27 = shl nuw nsw i64 %26, 5
  %28 = zext i32 %25 to i64
  %29 = shl i64 %28, 35
  %30 = or i64 %27, %29
  %31 = or i64 %30, 5
  %32 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  %33 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %32, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %8, i64 %31, %"class.v8::internal::compiler::InstructionBlock"* %33, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %16) #12
  %34 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %5, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %34, i64 %4
  %36 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 1
  %38 = load i8, i8* %37, align 1, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %14
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %35, align 8
  br label %61

41:                                               ; preds = %14
  store i8 0, i8* %37, align 1
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 2
  store i8 0, i8* %42, align 2
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 0
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 3
  store i8 1, i8* %44, align 1
  %45 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 4
  store i32 -1, i32* %45, align 4
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 5
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 6
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 8, !range !5
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %53, align 8
  %55 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %54 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %36, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %58 to i64*
  store i64 %57, i64* %59, align 8
  br label %60

60:                                               ; preds = %56, %52
  store i8 0, i8* %49, align 8
  br label %61

61:                                               ; preds = %10, %3, %60, %41, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator19MoveRegisterOnMergeENS1_13RegisterIndexES3_RNS1_19VirtualRegisterDataENS1_9RpoNumberEPNS1_13RegisterStateE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8, i8, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), i32, %"class.v8::internal::compiler::RegisterState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %8 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %10 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %10, i64 0, i32 3
  %12 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %12, i64 0, i32 2
  %14 = bitcast %"class.v8::internal::ZoneVector.591"** %13 to %"class.std::__1::vector.592"**
  %15 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %14, align 8
  %16 = sext i32 %4 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %15, i64 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.592"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %23, %16
  br i1 %24, label %27, label %25

25:                                               ; preds = %6
  %26 = bitcast %"class.std::__1::vector.592"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %6
  %28 = inttoptr i64 %21 to %"class.v8::internal::compiler::InstructionBlock"**
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %28, i64 %16
  %30 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %30, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %"class.v8::internal::compiler::PendingOperand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %7, i64 0, i32 0, i32 0
  store i64 4, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %7, i64 0, i32 0
  %36 = bitcast %"class.v8::internal::compiler::PendingOperand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %8, i64 0, i32 0, i32 0
  store i64 4, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %8, i64 0, i32 0
  %39 = sext i32 %32 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %12, i64 0, i32 8, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %12, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %44 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %43, align 8
  %45 = lshr i64 %42, 9
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %44, i64 %45
  %47 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %46, align 8
  %48 = and i64 %42, 511
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %47, i64 %48
  %50 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %12, i64 0, i32 1
  %52 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %51, align 8
  %53 = ptrtoint %"class.v8::internal::Zone"* %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %50, i64 0, i32 2, i64 0
  %55 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %55, null
  br i1 %56, label %57, label %74

57:                                               ; preds = %27
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %61, %59
  %63 = icmp ult i64 %62, 32
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %57
  %65 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %52, i64 32) #12
  br label %68

66:                                               ; preds = %57
  %67 = add i64 %59, 32
  store i64 %67, i64* %58, align 8
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %65, %64 ], [ %59, %66 ]
  %70 = inttoptr i64 %69 to i8*
  %71 = inttoptr i64 %69 to %"class.v8::internal::compiler::ParallelMove"*
  %72 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %71, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %73 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %72 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #12
  store i64 %53, i64* %73, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %71, %"class.v8::internal::compiler::ParallelMove"** %54, align 8
  br label %74

74:                                               ; preds = %27, %68
  %75 = phi %"class.v8::internal::compiler::ParallelMove"* [ %71, %68 ], [ %55, %27 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %75, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  %78 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %75, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %35, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %38, %"class.v8::internal::Zone"* %77) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %79 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 4
  %80 = load i8, i8* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %82 = load i32*, i32** %81, align 8
  %83 = sext i8 %2 to i64
  %84 = getelementptr inbounds i32, i32* %82, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = zext i8 %80 to i64
  %87 = shl nuw nsw i64 %86, 5
  %88 = zext i32 %85 to i64
  %89 = shl i64 %88, 35
  %90 = or i64 %87, %89
  %91 = or i64 %90, 5
  %92 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %9, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %78, i64 0, i32 1, i32 0
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %95, i64 %83
  %97 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %96, align 8
  %98 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %97, null
  br i1 %98, label %131, label %99

99:                                               ; preds = %74
  %100 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %97, i64 0, i32 6
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %131, label %103

103:                                              ; preds = %99
  call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %97, i64 %91, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %92) #12
  %104 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %94, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %104, i64 %83
  %106 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 1
  %108 = load i8, i8* %107, align 1, !range !5
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %103
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %105, align 8
  br label %131

111:                                              ; preds = %103
  store i8 0, i8* %107, align 1
  %112 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 2
  store i8 0, i8* %112, align 2
  %113 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 0
  store i8 0, i8* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 3
  store i8 1, i8* %114, align 1
  %115 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 4
  store i32 -1, i32* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 5
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 6
  store i32 -1, i32* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %120 = load i8, i8* %119, align 8, !range !5
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %123, align 8
  %125 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %124, null
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %124 to i64
  %128 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %106, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %129 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %128 to i64*
  store i64 %127, i64* %129, align 8
  br label %130

130:                                              ; preds = %126, %122
  store i8 0, i8* %119, align 8
  br label %131

131:                                              ; preds = %74, %99, %110, %111, %130
  %132 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %78, i64 0, i32 0
  call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePendingUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEbi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %1, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %3, %"class.v8::internal::compiler::InstructionOperand"* %132, i1 zeroext true, i32 %32)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal8compiler27SinglePassRegisterAllocator22AllocatedOperandForRegENS1_13RegisterIndexENS0_21MachineRepresentationE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i8, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %5 = load i32*, i32** %4, align 8
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds i32, i32* %5, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = zext i8 %2 to i64
  %10 = shl nuw nsw i64 %9, 5
  %11 = zext i32 %8 to i64
  %12 = shl i64 %11, 35
  %13 = or i64 %10, %12
  %14 = or i64 %13, 5
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePendingUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEbi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::InstructionOperand"*, i1 zeroext, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = sext i8 %1 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %13, i64 %11
  %15 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %14, align 8
  %16 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %15, null
  br i1 %16, label %17, label %49

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %8, i64 0, i32 1
  %19 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %19, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %19, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ult i64 %24, 64
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %17
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %19, i64 64) #12
  br label %30

28:                                               ; preds = %17
  %29 = add i64 %21, 64
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::RegisterState::Register"*
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %union.anon* %34 to i8*
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 1
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 2
  store i8 0, i8* %37, align 2
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 3
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 4
  store i32 -1, i32* %40, align 4
  %41 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 5
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 6
  store i32 -1, i32* %42, align 4
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %32, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %43, align 8
  %44 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %12, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %44, i64 %11
  store %"class.v8::internal::compiler::RegisterState::Register"* %32, %"class.v8::internal::compiler::RegisterState::Register"** %45, align 8
  %46 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %12, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %46, i64 %11
  %48 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %47, align 8
  br label %49

49:                                               ; preds = %30, %6
  %50 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %15, %6 ], [ %48, %30 ]
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %50, i64 0, i32 6
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  store i32 %10, i32* %51, align 4
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %50, i64 0, i32 4
  store i32 %5, i32* %55, align 4
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %50, i64 0, i32 5
  store i32 1, i32* %56, align 8
  br label %57

57:                                               ; preds = %49, %54
  %58 = zext i1 %4 to i8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %50, i64 0, i32 3
  %60 = load i8, i8* %59, align 1, !range !5
  %61 = and i8 %60, %58
  store i8 %61, i8* %59, align 1
  %62 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %50, i64 0, i32 7
  %63 = bitcast %"class.v8::internal::compiler::PendingOperand"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, -8
  %66 = or i64 %65, 4
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %66, i64* %67, align 8
  %68 = bitcast %"class.v8::internal::compiler::PendingOperand"** %62 to %"class.v8::internal::compiler::InstructionOperand"**
  store %"class.v8::internal::compiler::InstructionOperand"* %3, %"class.v8::internal::compiler::InstructionOperand"** %68, align 8
  %69 = load i32, i32* %9, align 4
  %70 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 7
  %71 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %11
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %71, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %82

79:                                               ; preds = %57
  %80 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %71, i64 0, i32 2
  %81 = bitcast %"union.v8::internal::BitVector::DataStorage"* %80 to i64*
  br label %89

82:                                               ; preds = %57
  %83 = srem i32 %75, 64
  %84 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %71, i64 0, i32 2, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = sdiv i32 %75, 64
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i64, i64* %85, i64 %87
  br label %89

89:                                               ; preds = %82, %79
  %90 = phi i64* [ %88, %82 ], [ %81, %79 ]
  %91 = phi i32 [ %83, %82 ], [ %75, %79 ]
  %92 = zext i32 %91 to i64
  %93 = shl i64 1, %92
  %94 = load i64, i64* %90, align 8
  %95 = or i64 %94, %93
  store i64 %95, i64* %90, align 8
  %96 = and i64 %11, 4294967295
  %97 = shl i64 1, %96
  %98 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = or i64 %99, %97
  store i64 %100, i64* %98, align 8
  %101 = icmp eq i32 %69, -1
  br i1 %101, label %107, label %102

102:                                              ; preds = %89
  %103 = sext i32 %69 to i64
  %104 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %105, i64 %103, i32 0
  store i8 %1, i8* %106, align 1
  br label %107

107:                                              ; preds = %89, %102
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator16CheckConsistencyEv(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8 @_ZNK2v88internal8compiler27SinglePassRegisterAllocator11FromRegCodeEiNS0_21MachineRepresentationE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %6, i64 %4, i32 0
  %8 = load i8, i8* %7, align 1
  ret i8 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler27SinglePassRegisterAllocator9ToRegCodeENS1_13RegisterIndexENS0_21MachineRepresentationE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i8, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %5 = load i32*, i32** %4, align 8
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds i32, i32* %5, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler27SinglePassRegisterAllocator35VirtualRegisterIsUnallocatedOrInRegEiNS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i32, i8) local_unnamed_addr #8 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %6, i64 %4, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, -1
  %10 = icmp eq i8 %8, %2
  %11 = or i1 %9, %10
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler27SinglePassRegisterAllocator27IsFreeOrSameVirtualRegisterENS1_13RegisterIndexEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i8, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %4, align 8
  %6 = sext i8 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, i64 %6
  %10 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %10, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  %16 = icmp eq i32 %14, %2
  br i1 %15, label %17, label %18

17:                                               ; preds = %3, %12
  br label %18

18:                                               ; preds = %12, %17
  %19 = phi i1 [ true, %17 ], [ %16, %12 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator21EmitGapMoveFromOutputENS1_18InstructionOperandES3_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i64, i64, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %6, i64 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  %10 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %10, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, -1
  %14 = icmp eq i32 %13, %3
  br i1 %14, label %15, label %92

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %17, %19
  br i1 %20, label %138, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  br label %23

23:                                               ; preds = %21, %85
  %24 = phi %"class.v8::internal::compiler::RpoNumber"* [ %17, %21 ], [ %90, %85 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %22, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %27, i64 0, i32 3
  %29 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %29, i64 0, i32 2
  %31 = bitcast %"class.v8::internal::ZoneVector.591"** %30 to %"class.std::__1::vector.592"**
  %32 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %31, align 8
  %33 = sext i32 %26 to i64
  %34 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %32, i64 0, i32 0, i32 1
  %35 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.592"* %32 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ugt i64 %40, %33
  br i1 %41, label %44, label %42

42:                                               ; preds = %23
  %43 = bitcast %"class.std::__1::vector.592"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %43) #13
  unreachable

44:                                               ; preds = %23
  %45 = inttoptr i64 %38 to %"class.v8::internal::compiler::InstructionBlock"**
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %45, i64 %33
  %47 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %47, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %29, i64 0, i32 8, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, %50
  %54 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %29, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %55 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %54, align 8
  %56 = lshr i64 %53, 9
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %55, i64 %56
  %58 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %57, align 8
  %59 = and i64 %53, 511
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %58, i64 %59
  %61 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %29, i64 0, i32 1
  %63 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %62, align 8
  %64 = ptrtoint %"class.v8::internal::Zone"* %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %61, i64 0, i32 2, i64 0
  %66 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %65, align 8
  %67 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %66, null
  br i1 %67, label %68, label %85

68:                                               ; preds = %44
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 3
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %72, %70
  %74 = icmp ult i64 %73, 32
  br i1 %74, label %75, label %77, !prof !2

75:                                               ; preds = %68
  %76 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %63, i64 32) #12
  br label %79

77:                                               ; preds = %68
  %78 = add i64 %70, 32
  store i64 %78, i64* %69, align 8
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i64 [ %76, %75 ], [ %70, %77 ]
  %81 = inttoptr i64 %80 to i8*
  %82 = inttoptr i64 %80 to %"class.v8::internal::compiler::ParallelMove"*
  %83 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %82, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %84 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %83 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #12
  store i64 %64, i64* %84, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %82, %"class.v8::internal::compiler::ParallelMove"** %65, align 8
  br label %85

85:                                               ; preds = %44, %79
  %86 = phi %"class.v8::internal::compiler::ParallelMove"* [ %82, %79 ], [ %66, %44 ]
  %87 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %86, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %88 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %87, align 8
  %89 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %86, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %5, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %6, %"class.v8::internal::Zone"* %88) #12
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %24, i64 1
  %91 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %90, %19
  br i1 %91, label %138, label %23

92:                                               ; preds = %4
  %93 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %94 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %93, align 8
  %95 = add nsw i32 %3, 1
  %96 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %94, i64 0, i32 3
  %97 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %96, align 8
  %98 = sext i32 %95 to i64
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %97, i64 0, i32 8, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, %98
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %97, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %103 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %102, align 8
  %104 = lshr i64 %101, 9
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %103, i64 %104
  %106 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %105, align 8
  %107 = and i64 %101, 511
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %106, i64 %107
  %109 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %97, i64 0, i32 1
  %111 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %110, align 8
  %112 = ptrtoint %"class.v8::internal::Zone"* %111 to i64
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %109, i64 0, i32 2, i64 0
  %114 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %113, align 8
  %115 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %114, null
  br i1 %115, label %116, label %133

116:                                              ; preds = %92
  %117 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 3
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %120, %118
  %122 = icmp ult i64 %121, 32
  br i1 %122, label %123, label %125, !prof !2

123:                                              ; preds = %116
  %124 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %111, i64 32) #12
  br label %127

125:                                              ; preds = %116
  %126 = add i64 %118, 32
  store i64 %126, i64* %117, align 8
  br label %127

127:                                              ; preds = %125, %123
  %128 = phi i64 [ %124, %123 ], [ %118, %125 ]
  %129 = inttoptr i64 %128 to i8*
  %130 = inttoptr i64 %128 to %"class.v8::internal::compiler::ParallelMove"*
  %131 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %130, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %132 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %131 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #12
  store i64 %112, i64* %132, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %130, %"class.v8::internal::compiler::ParallelMove"** %113, align 8
  br label %133

133:                                              ; preds = %92, %127
  %134 = phi %"class.v8::internal::compiler::ParallelMove"* [ %130, %127 ], [ %114, %92 ]
  %135 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %134, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %136 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %135, align 8
  %137 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %134, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %5, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %6, %"class.v8::internal::Zone"* %136) #12
  br label %138

138:                                              ; preds = %85, %15, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CommitRegisterENS1_13RegisterIndexEiNS0_21MachineRepresentationEPNS1_18InstructionOperandENS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8, i32, i8 zeroext, %"class.v8::internal::compiler::InstructionOperand"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %8 = load i32*, i32** %7, align 8
  %9 = sext i8 %1 to i64
  %10 = getelementptr inbounds i32, i32* %8, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = zext i8 %3 to i64
  %13 = shl nuw nsw i64 %12, 5
  %14 = zext i32 %11 to i64
  %15 = shl i64 %14, 35
  %16 = or i64 %13, %15
  %17 = or i64 %16, 5
  %18 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %19 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %21 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  store i64 %17, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %24, i64 %9
  %26 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %26, null
  br i1 %27, label %60, label %28

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %26, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %60, label %32

32:                                               ; preds = %28
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %26, i64 %17, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %21) #12
  %33 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %23, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %33, i64 %9
  %35 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 1
  %37 = load i8, i8* %36, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %32
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %34, align 8
  br label %60

40:                                               ; preds = %32
  store i8 0, i8* %36, align 1
  %41 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 2
  store i8 0, i8* %41, align 2
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 3
  store i8 1, i8* %43, align 1
  %44 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 4
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 5
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 6
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %52, align 8
  %54 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %53 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %57 to i64*
  store i64 %56, i64* %58, align 8
  br label %59

59:                                               ; preds = %55, %51
  store i8 0, i8* %48, align 8
  br label %60

60:                                               ; preds = %6, %28, %39, %40, %59
  %61 = and i32 %5, -3
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = and i64 %9, 4294967295
  %65 = shl i64 1, %64
  %66 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = or i64 %67, %65
  store i64 %68, i64* %66, align 8
  br label %69

69:                                               ; preds = %63, %60
  %70 = add i32 %5, -1
  %71 = icmp ult i32 %70, 2
  %72 = and i64 %9, 4294967295
  %73 = shl i64 1, %72
  br i1 %71, label %74, label %78

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = or i64 %76, %73
  store i64 %77, i64* %75, align 8
  br label %78

78:                                               ; preds = %69, %74
  %79 = xor i64 %73, -1
  %80 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, %79
  store i64 %82, i64* %80, align 8
  %83 = icmp eq i32 %2, -1
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = sext i32 %2 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %87, i64 %85, i32 0
  store i8 -1, i8* %88, align 1
  br label %89

89:                                               ; preds = %78, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %3, align 8
  %5 = sext i8 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %7, i64 %5
  %9 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %9, null
  br i1 %10, label %72, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %9, i64 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %72, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %17 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %20, i64 %18, i32 4
  %22 = load i8, i8* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %5
  %26 = load i32, i32* %25, align 4
  %27 = zext i8 %22 to i64
  %28 = shl nuw nsw i64 %27, 5
  %29 = zext i32 %26 to i64
  %30 = shl i64 %29, 35
  %31 = or i64 %28, %30
  %32 = or i64 %31, 5
  %33 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  %34 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %33, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register5SpillENS1_16AllocatedOperandEPKNS1_16InstructionBlockEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %9, i64 %32, %"class.v8::internal::compiler::InstructionBlock"* %34, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %17) #12
  %35 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %6, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %35, i64 %5
  %37 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 1
  %39 = load i8, i8* %38, align 1, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %15
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %36, align 8
  br label %62

42:                                               ; preds = %15
  store i8 0, i8* %38, align 1
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 0
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 3
  store i8 1, i8* %45, align 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 4
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 5
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 6
  store i32 -1, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %54, align 8
  %56 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %59 to i64*
  store i64 %58, i64* %60, align 8
  br label %61

61:                                               ; preds = %57, %53
  store i8 0, i8* %50, align 8
  br label %62

62:                                               ; preds = %61, %42, %41
  %63 = and i64 %5, 4294967295
  %64 = shl i64 1, %63
  %65 = xor i64 %64, -1
  %66 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, %65
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %70, i64 %18, i32 0
  store i8 -1, i8* %71, align 1
  br label %72

72:                                               ; preds = %11, %2, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator17SpillAllRegistersEv(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::RegisterState"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::compiler::RegisterState"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %5, %15
  %16 = phi i32 [ %18, %15 ], [ 0, %5 ]
  %17 = trunc i32 %16 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %17)
  %18 = add nuw nsw i32 %16, 1
  %19 = icmp eq i32 %18, %13
  br i1 %19, label %20, label %15

20:                                               ; preds = %15, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator31SpillRegisterForVirtualRegisterEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %5, i64 %3, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %7)
  br label %10

10:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator32AllocateDeferredBlockSpillOutputEiNS1_9RpoNumberERNS1_19VirtualRegisterDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i32, i32, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %121

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %15 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %14, align 8
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %15, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %18, i64 %16, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, %1
  br i1 %21, label %121, label %22

22:                                               ; preds = %9, %13
  %23 = phi i64 [ %16, %13 ], [ -1, %9 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %25, i64 %23, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -1
  br i1 %28, label %105, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %31 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %31, i64 0, i32 3
  %33 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %33, i64 0, i32 2
  %35 = bitcast %"class.v8::internal::ZoneVector.591"** %34 to %"class.std::__1::vector.592"**
  %36 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %35, align 8
  %37 = sext i32 %2 to i64
  %38 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %36, i64 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.592"* %36 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ugt i64 %44, %37
  br i1 %45, label %48, label %46

46:                                               ; preds = %29
  %47 = bitcast %"class.std::__1::vector.592"* %36 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %47) #13
  unreachable

48:                                               ; preds = %29
  %49 = inttoptr i64 %42 to %"class.v8::internal::compiler::InstructionBlock"**
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %49, i64 %37
  %51 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %51, i64 0, i32 8
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %55 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %54, align 8
  %56 = sext i8 %27 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %58, i64 %56
  %60 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %60, null
  br i1 %61, label %62, label %94

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %55, i64 0, i32 1
  %64 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %68, %66
  %70 = icmp ult i64 %69, 64
  br i1 %70, label %71, label %73, !prof !2

71:                                               ; preds = %62
  %72 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %64, i64 64) #12
  br label %75

73:                                               ; preds = %62
  %74 = add i64 %66, 64
  store i64 %74, i64* %65, align 8
  br label %75

75:                                               ; preds = %73, %71
  %76 = phi i64 [ %72, %71 ], [ %66, %73 ]
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::RegisterState::Register"*
  %78 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %union.anon* %79 to i8*
  store i8 0, i8* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 1
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 2
  store i8 0, i8* %82, align 2
  %83 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 0
  store i8 0, i8* %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 3
  store i8 1, i8* %84, align 1
  %85 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 4
  store i32 -1, i32* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 5
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 6
  store i32 -1, i32* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %77, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %88, align 8
  %89 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %57, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %89, i64 %56
  store %"class.v8::internal::compiler::RegisterState::Register"* %77, %"class.v8::internal::compiler::RegisterState::Register"** %90, align 8
  %91 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %57, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %91, i64 %56
  %93 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %92, align 8
  br label %94

94:                                               ; preds = %75, %48
  %95 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %60, %48 ], [ %93, %75 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %95, i64 0, i32 6
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  store i32 %11, i32* %96, align 4
  %100 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %95, i64 0, i32 4
  store i32 %53, i32* %100, align 4
  %101 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %95, i64 0, i32 5
  store i32 1, i32* %101, align 8
  br label %102

102:                                              ; preds = %94, %99
  %103 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %31, i64 0, i32 1
  %104 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %103, align 8
  tail call void @_ZN2v88internal8compiler13RegisterState8Register21AddDeferredBlockSpillEibPNS0_4ZoneE(%"class.v8::internal::compiler::RegisterState::Register"* %95, i32 %53, i1 zeroext false, %"class.v8::internal::Zone"* %104) #12
  br label %121

105:                                              ; preds = %22
  %106 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 0
  %107 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %106, align 8
  %108 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %107, i64 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 7
  %113 = icmp eq i64 %112, 2
  br i1 %113, label %121, label %114

114:                                              ; preds = %109, %105
  %115 = or i8 %6, 8
  store i8 %115, i8* %5, align 1
  %116 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 1
  %117 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %117, i64 0, i32 2
  store %"class.v8::internal::ZoneVector.712"* null, %"class.v8::internal::ZoneVector.712"** %120, align 8
  br label %121

121:                                              ; preds = %4, %13, %119, %114, %109, %102
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler27SinglePassRegisterAllocator12DefinedAfterEiiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, -1
  br i1 %5, label %19, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %8 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %11, i64 %9, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, %2
  br i1 %14, label %19, label %15

15:                                               ; preds = %6
  %16 = icmp eq i32 %13, %2
  %17 = icmp eq i32 %3, 0
  %18 = and i1 %17, %16
  br label %19

19:                                               ; preds = %6, %15, %4
  %20 = phi i1 [ false, %4 ], [ true, %6 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator11AllocateUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::InstructionOperand"* nocapture, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 4
  %8 = load i8, i8* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %10 = load i32*, i32** %9, align 8
  %11 = sext i8 %1 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = zext i8 %8 to i64
  %15 = shl nuw nsw i64 %14, 5
  %16 = zext i32 %13 to i64
  %17 = shl i64 %16, 35
  %18 = or i64 %15, %17
  %19 = or i64 %18, 5
  %20 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %21 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %23 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  store i64 %19, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %26, i64 %11
  %28 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %28, null
  br i1 %29, label %62, label %30

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %28, i64 0, i32 6
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %62, label %34

34:                                               ; preds = %30
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %28, i64 %19, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %23) #12
  %35 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %25, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %35, i64 %11
  %37 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 1
  %39 = load i8, i8* %38, align 1, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %34
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %36, align 8
  br label %62

42:                                               ; preds = %34
  store i8 0, i8* %38, align 1
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 0
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 3
  store i8 1, i8* %45, align 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 4
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 5
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 6
  store i32 -1, i32* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %54, align 8
  %56 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %37, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %59 to i64*
  store i64 %58, i64* %60, align 8
  br label %61

61:                                               ; preds = %57, %53
  store i8 0, i8* %50, align 8
  br label %62

62:                                               ; preds = %6, %30, %41, %42, %61
  %63 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %20, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %67, i64 %11
  %69 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %69, null
  br i1 %70, label %71, label %103

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %63, i64 0, i32 1
  %73 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 3
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %77, %75
  %79 = icmp ult i64 %78, 64
  br i1 %79, label %80, label %82, !prof !2

80:                                               ; preds = %71
  %81 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %73, i64 64) #12
  br label %84

82:                                               ; preds = %71
  %83 = add i64 %75, 64
  store i64 %83, i64* %74, align 8
  br label %84

84:                                               ; preds = %82, %80
  %85 = phi i64 [ %81, %80 ], [ %75, %82 ]
  %86 = inttoptr i64 %85 to %"class.v8::internal::compiler::RegisterState::Register"*
  %87 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %89 = bitcast %union.anon* %88 to i8*
  store i8 0, i8* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 1
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 2
  store i8 0, i8* %91, align 2
  %92 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 0
  store i8 0, i8* %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 3
  store i8 1, i8* %93, align 1
  %94 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 4
  store i32 -1, i32* %94, align 4
  %95 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 5
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 6
  store i32 -1, i32* %96, align 4
  %97 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %86, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %97, align 8
  %98 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %66, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %98, i64 %11
  store %"class.v8::internal::compiler::RegisterState::Register"* %86, %"class.v8::internal::compiler::RegisterState::Register"** %99, align 8
  %100 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %66, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %100, i64 %11
  %102 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %101, align 8
  br label %103

103:                                              ; preds = %62, %84
  %104 = phi %"class.v8::internal::compiler::RegisterState::Register"* [ %69, %62 ], [ %102, %84 ]
  %105 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %104, i64 0, i32 0
  store i8 1, i8* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %104, i64 0, i32 6
  store i32 %65, i32* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %104, i64 0, i32 4
  store i32 %4, i32* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %104, i64 0, i32 5
  store i32 1, i32* %108, align 8
  %109 = load i32, i32* %64, align 4
  %110 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 7
  %111 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %110, align 8
  %112 = load i32*, i32** %9, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 %11
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %111, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %121

118:                                              ; preds = %103
  %119 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %111, i64 0, i32 2
  %120 = bitcast %"union.v8::internal::BitVector::DataStorage"* %119 to i64*
  br label %128

121:                                              ; preds = %103
  %122 = srem i32 %114, 64
  %123 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %111, i64 0, i32 2, i32 0
  %124 = load i64*, i64** %123, align 8
  %125 = sdiv i32 %114, 64
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i64, i64* %124, i64 %126
  br label %128

128:                                              ; preds = %121, %118
  %129 = phi i64* [ %127, %121 ], [ %120, %118 ]
  %130 = phi i32 [ %122, %121 ], [ %114, %118 ]
  %131 = zext i32 %130 to i64
  %132 = shl i64 1, %131
  %133 = load i64, i64* %129, align 8
  %134 = or i64 %133, %132
  store i64 %134, i64* %129, align 8
  %135 = and i64 %11, 4294967295
  %136 = shl i64 1, %135
  %137 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = or i64 %138, %136
  store i64 %139, i64* %137, align 8
  %140 = and i32 %5, -3
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %128
  %143 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = or i64 %144, %136
  store i64 %145, i64* %143, align 8
  br label %146

146:                                              ; preds = %142, %128
  %147 = add i32 %5, -1
  %148 = icmp ult i32 %147, 2
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = or i64 %151, %136
  store i64 %152, i64* %150, align 8
  br label %153

153:                                              ; preds = %149, %146
  %154 = icmp eq i32 %109, -1
  br i1 %154, label %160, label %155

155:                                              ; preds = %153
  %156 = sext i32 %109 to i64
  %157 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %158 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %158, i64 %156, i32 0
  store i8 %1, i8* %159, align 1
  br label %160

160:                                              ; preds = %153, %155
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator19AllocateUseWithMoveENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18UnallocatedOperandEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, i8, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::UnallocatedOperand"* nocapture, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.v8::internal::compiler::AllocatedOperand", align 8
  %8 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %9 = bitcast %"class.v8::internal::compiler::AllocatedOperand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 4
  %11 = load i8, i8* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %13 = load i32*, i32** %12, align 8
  %14 = sext i8 %1 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = zext i8 %11 to i64
  %18 = shl nuw nsw i64 %17, 5
  %19 = zext i32 %16 to i64
  %20 = shl i64 %19, 35
  %21 = or i64 %18, %20
  %22 = or i64 %21, 5
  %23 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %8, i64 0, i32 0, i32 0
  %30 = or i64 %28, 721554505729
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %32 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %8, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %7, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %32, i64 0, i32 3
  %36 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %35, align 8
  %37 = sext i32 %4 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %36, i64 0, i32 8, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %36, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %42 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %41, align 8
  %43 = lshr i64 %40, 9
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %42, i64 %43
  %45 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %44, align 8
  %46 = and i64 %40, 511
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %45, i64 %46
  %48 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %36, i64 0, i32 1
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = ptrtoint %"class.v8::internal::Zone"* %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %48, i64 0, i32 2, i64 1
  %53 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %52, align 8
  %54 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %53, null
  br i1 %54, label %55, label %72

55:                                               ; preds = %6
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %59, %57
  %61 = icmp ult i64 %60, 32
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %55
  %63 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 32) #12
  br label %66

64:                                               ; preds = %55
  %65 = add i64 %57, 32
  store i64 %65, i64* %56, align 8
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi i64 [ %63, %62 ], [ %57, %64 ]
  %68 = inttoptr i64 %67 to i8*
  %69 = inttoptr i64 %67 to %"class.v8::internal::compiler::ParallelMove"*
  %70 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %69, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %71 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %70 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #12
  store i64 %51, i64* %71, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %69, %"class.v8::internal::compiler::ParallelMove"** %52, align 8
  br label %72

72:                                               ; preds = %6, %66
  %73 = phi %"class.v8::internal::compiler::ParallelMove"* [ %69, %66 ], [ %53, %6 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %73, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %73, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %33, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %34, %"class.v8::internal::Zone"* %75) #12
  %77 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0, i32 0
  %78 = load i64, i64* %23, align 8
  store i64 %78, i64* %77, align 8
  %79 = and i32 %5, -3
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %72
  %82 = and i64 %14, 4294967295
  %83 = shl i64 1, %82
  %84 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = or i64 %85, %83
  store i64 %86, i64* %84, align 8
  br label %87

87:                                               ; preds = %81, %72
  %88 = add i32 %5, -1
  %89 = icmp ult i32 %88, 2
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = and i64 %14, 4294967295
  %92 = shl i64 1, %91
  %93 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = or i64 %94, %92
  store i64 %95, i64* %93, align 8
  br label %96

96:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13AllocateInputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, %"class.v8::internal::compiler::UnallocatedOperand"*, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState"* %7, null
  br i1 %8, label %9, label %61

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %13 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %13, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 40
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %9
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 40) #12
  br label %26

24:                                               ; preds = %9
  %25 = add i64 %17, 40
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to i8*
  %29 = inttoptr i64 %27 to %"class.v8::internal::compiler::RegisterState"*
  %30 = sext i32 %11 to i64
  %31 = ptrtoint %"class.v8::internal::Zone"* %15 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %32 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #12
  store i64 %31, i64* %33, align 8
  %34 = icmp eq i32 %11, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %26
  %36 = icmp ugt i32 %11, 268435455
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = inttoptr i64 %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %35
  %40 = shl nsw i64 %30, 3
  %41 = load i64, i64* %16, align 8
  %42 = load i64, i64* %18, align 8
  %43 = sub i64 %42, %41
  %44 = icmp ugt i64 %40, %43
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %39
  %46 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 %40) #12
  br label %49

47:                                               ; preds = %39
  %48 = add i64 %41, %40
  store i64 %48, i64* %16, align 8
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %46, %45 ], [ %41, %47 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::RegisterState::Register"**
  %52 = inttoptr i64 %50 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %51, %"class.v8::internal::compiler::RegisterState::Register"*** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %51, i64 %30
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %55, %"class.v8::internal::compiler::RegisterState::Register"*** %56, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 %40, i1 false) #12
  %57 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %53 to i64*
  %58 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %55 to i64
  store i64 %58, i64* %57, align 8
  br label %59

59:                                               ; preds = %49, %26
  %60 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 1
  store %"class.v8::internal::Zone"* %15, %"class.v8::internal::Zone"** %60, align 8
  store %"class.v8::internal::compiler::RegisterState"* %29, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  br label %61

61:                                               ; preds = %4, %59
  %62 = phi %"class.v8::internal::compiler::RegisterState"* [ %7, %4 ], [ %29, %59 ]
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 34359738368
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %150

67:                                               ; preds = %61
  %68 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #12
  %69 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %5, i64 0, i32 0, i32 0
  %74 = or i64 %72, 721554505729
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 4
  %76 = load i8, i8* %75, align 8
  %77 = ashr i64 %64, 36
  %78 = zext i8 %76 to i64
  %79 = shl nuw nsw i64 %78, 5
  %80 = shl nsw i64 %77, 35
  %81 = or i64 %80, %79
  %82 = or i64 %81, 13
  %83 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  store i64 %82, i64* %63, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %85 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %5, i64 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %85, i64 0, i32 3
  %88 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %87, align 8
  %89 = sext i32 %3 to i64
  %90 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 8, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %89
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %94 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %93, align 8
  %95 = lshr i64 %92, 9
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %94, i64 %95
  %97 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %96, align 8
  %98 = and i64 %92, 511
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %97, i64 %98
  %100 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 1
  %102 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %101, align 8
  %103 = ptrtoint %"class.v8::internal::Zone"* %102 to i64
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %100, i64 0, i32 2, i64 1
  %105 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %104, align 8
  %106 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %105, null
  br i1 %106, label %107, label %124

107:                                              ; preds = %67
  %108 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 3
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %111, %109
  %113 = icmp ult i64 %112, 32
  br i1 %113, label %114, label %116, !prof !2

114:                                              ; preds = %107
  %115 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %102, i64 32) #12
  br label %118

116:                                              ; preds = %107
  %117 = add i64 %109, 32
  store i64 %117, i64* %108, align 8
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi i64 [ %115, %114 ], [ %109, %116 ]
  %120 = inttoptr i64 %119 to i8*
  %121 = inttoptr i64 %119 to %"class.v8::internal::compiler::ParallelMove"*
  %122 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %121, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %123 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %122 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #12
  store i64 %103, i64* %123, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %121, %"class.v8::internal::compiler::ParallelMove"** %104, align 8
  br label %124

124:                                              ; preds = %67, %118
  %125 = phi %"class.v8::internal::compiler::ParallelMove"* [ %121, %118 ], [ %105, %67 ]
  %126 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %125, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %127 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %126, align 8
  %128 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %125, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %86, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %83, %"class.v8::internal::Zone"* %127) #12
  %129 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %128, i64 0, i32 0
  %130 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %84, align 8
  call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %130) #12
  %131 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %132 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %131, align 8
  %133 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %132, i64 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 7
  switch i64 %137, label %140 [
    i64 5, label %138
    i64 2, label %138
  ]

138:                                              ; preds = %134, %134
  %139 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %128, i64 0, i32 0, i32 0
  store i64 %136, i64* %139, align 8
  br label %149

140:                                              ; preds = %134, %124
  %141 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %128, i64 0, i32 0, i32 0
  store i64 4, i64* %141, align 8
  %142 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %131, align 8
  %143 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %142, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %140
  %145 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %142 to i64
  %146 = and i64 %145, -8
  %147 = or i64 %146, 4
  store i64 %147, i64* %141, align 8
  br label %148

148:                                              ; preds = %144, %140
  store %"class.v8::internal::compiler::InstructionOperand"* %129, %"class.v8::internal::compiler::InstructionOperand"** %131, align 8
  br label %149

149:                                              ; preds = %138, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #12
  br label %421

150:                                              ; preds = %61
  %151 = and i64 %64, 515396075520
  %152 = icmp eq i64 %151, 446676598784
  br i1 %152, label %153, label %182

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  %155 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %156 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %158 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %157, align 8
  %159 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %158, i64 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 7
  %164 = icmp eq i64 %163, 2
  br i1 %164, label %165, label %166

165:                                              ; preds = %160
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %157, align 8
  br label %166

166:                                              ; preds = %165, %160, %153
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %156) #12
  %167 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %157, align 8
  %168 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %167, i64 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = and i64 %171, 7
  switch i64 %172, label %174 [
    i64 5, label %173
    i64 2, label %173
  ]

173:                                              ; preds = %169, %169
  store i64 %171, i64* %63, align 8
  br label %421

174:                                              ; preds = %169, %166
  store i64 4, i64* %63, align 8
  %175 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %157, align 8
  %176 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %175, null
  br i1 %176, label %181, label %177

177:                                              ; preds = %174
  %178 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %175 to i64
  %179 = and i64 %178, -8
  %180 = or i64 %179, 4
  store i64 %180, i64* %63, align 8
  br label %181

181:                                              ; preds = %177, %174
  store %"class.v8::internal::compiler::InstructionOperand"* %154, %"class.v8::internal::compiler::InstructionOperand"** %157, align 8
  br label %421

182:                                              ; preds = %150
  %183 = and i64 %64, 584115552256
  %184 = icmp eq i64 %183, 34359738368
  %185 = select i1 %184, i32 0, i32 2
  switch i64 %151, label %206 [
    i64 240518168576, label %186
    i64 309237645312, label %186
  ]

186:                                              ; preds = %182, %182
  %187 = lshr i64 %64, 41
  %188 = and i64 %187, 63
  %189 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %190 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %190, i64 %188, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %197, i64 %195, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp eq i8 %199, -1
  %201 = icmp eq i8 %199, %192
  %202 = or i1 %200, %201
  br i1 %202, label %204, label %203

203:                                              ; preds = %186
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator19AllocateUseWithMoveENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18UnallocatedOperandEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %192, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, %"class.v8::internal::compiler::UnallocatedOperand"* %1, i32 %3, i32 %185)
  br label %421

204:                                              ; preds = %186
  %205 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator11AllocateUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %192, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, %"class.v8::internal::compiler::InstructionOperand"* %205, i32 %3, i32 %185)
  br label %421

206:                                              ; preds = %182
  %207 = icmp eq i64 %151, 377957122048
  %208 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %212, i64 %210, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, -1
  br i1 %215, label %216, label %361

216:                                              ; preds = %206
  br i1 %207, label %253, label %217

217:                                              ; preds = %216
  %218 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %219 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 5
  %221 = load i8, i8* %220, align 1
  %222 = and i8 %221, 8
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %389

224:                                              ; preds = %217
  %225 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %226 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %225, align 8
  %227 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %226, null
  br i1 %227, label %253, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %226, i64 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = and i64 %230, 7
  %232 = icmp eq i64 %231, 2
  br i1 %232, label %389, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %219, i64 0, i32 3
  %235 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %234, align 8
  %236 = sext i32 %3 to i64
  %237 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %235, i64 0, i32 8, i32 0, i32 0, i32 1
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, %236
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %235, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %241 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %240, align 8
  %242 = lshr i64 %239, 9
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %241, i64 %242
  %244 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %243, align 8
  %245 = and i64 %239, 511
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %244, i64 %245
  %247 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %247, i64 0, i32 4
  %249 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %248, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %249, i64 0, i32 10
  %251 = load i8, i8* %250, align 4, !range !5
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %253, label %389

253:                                              ; preds = %233, %224, %216
  %254 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %255 = load i64, i64* %254, align 8
  br i1 %184, label %260, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %258 = load i64, i64* %257, align 8
  %259 = or i64 %258, %255
  br label %260

260:                                              ; preds = %253, %256
  %261 = phi i64 [ %259, %256 ], [ %255, %253 ]
  %262 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = or i64 %263, %261
  %265 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i64 %264, -1
  br i1 %267, label %272, label %268

268:                                              ; preds = %260
  %269 = xor i64 %264, -1
  %270 = tail call i64 @llvm.cttz.i64(i64 %269, i1 true) #12, !range !21
  %271 = trunc i64 %270 to i32
  br label %272

272:                                              ; preds = %268, %260
  %273 = phi i32 [ %271, %268 ], [ 64, %260 ]
  %274 = icmp slt i32 %273, %266
  %275 = trunc i32 %273 to i8
  %276 = select i1 %274, i8 %275, i8 -1
  %277 = icmp ne i8 %276, -1
  %278 = xor i1 %207, true
  %279 = or i1 %277, %278
  br i1 %279, label %374, label %280

280:                                              ; preds = %272
  br i1 %184, label %285, label %281

281:                                              ; preds = %280
  %282 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = or i64 %283, %255
  br label %285

285:                                              ; preds = %280, %281
  %286 = phi i64 [ %284, %281 ], [ %255, %280 ]
  %287 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %62, i64 0, i32 0, i32 0, i32 0, i32 1
  %288 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::compiler::RegisterState"* %62 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = sub i64 %289, %291
  %293 = lshr exact i64 %292, 3
  %294 = trunc i64 %293 to i32
  %295 = icmp eq i32 %294, 0
  %296 = inttoptr i64 %291 to %"class.v8::internal::compiler::RegisterState::Register"**
  br i1 %295, label %359, label %297

297:                                              ; preds = %285
  %298 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  br label %299

299:                                              ; preds = %352, %297
  %300 = phi i32 [ 2147483647, %297 ], [ %356, %352 ]
  %301 = phi i8 [ 0, %297 ], [ %355, %352 ]
  %302 = phi i8 [ 0, %297 ], [ %354, %352 ]
  %303 = phi i8 [ -1, %297 ], [ %353, %352 ]
  %304 = phi i32 [ 0, %297 ], [ %357, %352 ]
  %305 = trunc i32 %304 to i8
  %306 = sext i8 %305 to i64
  %307 = and i64 %306, 4294967295
  %308 = shl i64 1, %307
  %309 = and i64 %308, %286
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %352

311:                                              ; preds = %299
  %312 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %296, i64 %306
  %313 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %312, align 8
  %314 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %313, i64 0, i32 6
  %317 = load i32, i32* %316, align 4
  br label %318

318:                                              ; preds = %315, %311
  %319 = phi i32 [ %317, %315 ], [ -1, %311 ]
  %320 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %298, align 8
  %321 = sext i32 %319 to i64
  %322 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %320, i64 0, i32 6, i32 0, i32 0, i32 0
  %323 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %323, i64 %321
  %325 = and i8 %301, 1
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %327, label %331

327:                                              ; preds = %318
  %328 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %313, i64 0, i32 0
  %329 = load i8, i8* %328, align 8, !range !5
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %342, label %331

331:                                              ; preds = %327, %318
  %332 = and i8 %302, 1
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %331
  %335 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %324, i64 0, i32 0
  %336 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %335, align 8
  %337 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %336, null
  br i1 %337, label %338, label %342

338:                                              ; preds = %334, %331
  %339 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %323, i64 %321, i32 2
  %340 = load i32, i32* %339, align 8
  %341 = icmp slt i32 %340, %300
  br i1 %341, label %342, label %352

342:                                              ; preds = %338, %334, %327
  %343 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %323, i64 %321, i32 2
  %344 = load i32, i32* %343, align 8
  %345 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %313, i64 0, i32 0
  %346 = load i8, i8* %345, align 8, !range !5
  %347 = xor i8 %346, 1
  %348 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %324, i64 0, i32 0
  %349 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, align 8
  %350 = icmp ne %"class.v8::internal::compiler::InstructionOperand"* %349, null
  %351 = zext i1 %350 to i8
  br label %352

352:                                              ; preds = %342, %338, %299
  %353 = phi i8 [ %303, %299 ], [ %305, %342 ], [ %303, %338 ]
  %354 = phi i8 [ %302, %299 ], [ %351, %342 ], [ %302, %338 ]
  %355 = phi i8 [ %301, %299 ], [ %347, %342 ], [ %301, %338 ]
  %356 = phi i32 [ %300, %299 ], [ %344, %342 ], [ %300, %338 ]
  %357 = add nuw nsw i32 %304, 1
  %358 = icmp eq i32 %357, %294
  br i1 %358, label %359, label %299

359:                                              ; preds = %352, %285
  %360 = phi i8 [ -1, %285 ], [ %353, %352 ]
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %360) #12
  br label %374

361:                                              ; preds = %206
  %362 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 12, i32 0
  %363 = load i64, i64* %362, align 8
  %364 = sext i8 %214 to i64
  %365 = and i64 %364, 4294967295
  %366 = shl i64 1, %365
  %367 = and i64 %363, %366
  %368 = icmp eq i64 %367, 0
  %369 = or i1 %184, %368
  %370 = xor i1 %207, true
  %371 = or i1 %369, %370
  %372 = select i1 %369, i8 %214, i8 -1, !prof !22
  br i1 %371, label %374, label %373, !prof !23

373:                                              ; preds = %361
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

374:                                              ; preds = %272, %359, %361
  %375 = phi i8 [ %372, %361 ], [ %276, %272 ], [ %360, %359 ]
  %376 = icmp eq i8 %375, -1
  br i1 %376, label %377, label %382

377:                                              ; preds = %374
  %378 = load i64, i64* %63, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %380 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %379, align 8
  %381 = and i64 %378, 515396075520
  br label %389

382:                                              ; preds = %374
  %383 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  br i1 %207, label %384, label %385

384:                                              ; preds = %382
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator11AllocateUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %375, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, %"class.v8::internal::compiler::InstructionOperand"* %383, i32 %3, i32 %185)
  br label %421

385:                                              ; preds = %382
  %386 = load i64, i64* %63, align 8
  %387 = and i64 %386, 515396075520
  %388 = icmp eq i64 %387, 171798691840
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePendingUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEbi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %375, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, %"class.v8::internal::compiler::InstructionOperand"* %383, i1 zeroext %388, i32 %3)
  br label %421

389:                                              ; preds = %377, %233, %217, %228
  %390 = phi i64 [ %381, %377 ], [ %151, %233 ], [ %151, %217 ], [ %151, %228 ]
  %391 = phi %"class.v8::internal::compiler::MidTierRegisterAllocationData"* [ %380, %377 ], [ %219, %233 ], [ %219, %217 ], [ %219, %228 ]
  %392 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  %393 = icmp eq i64 %390, 171798691840
  br i1 %393, label %404, label %394

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %396 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %395, align 8
  %397 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %396, i64 0, i32 0
  %400 = load i64, i64* %399, align 8
  %401 = and i64 %400, 7
  %402 = icmp eq i64 %401, 2
  br i1 %402, label %403, label %404

403:                                              ; preds = %398
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %395, align 8
  br label %404

404:                                              ; preds = %403, %398, %394, %389
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %391) #12
  %405 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %406 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %405, align 8
  %407 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %406, null
  br i1 %407, label %413, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %406, i64 0, i32 0
  %410 = load i64, i64* %409, align 8
  %411 = and i64 %410, 7
  switch i64 %411, label %413 [
    i64 5, label %412
    i64 2, label %412
  ]

412:                                              ; preds = %408, %408
  store i64 %410, i64* %63, align 8
  br label %421

413:                                              ; preds = %408, %404
  store i64 4, i64* %63, align 8
  %414 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %405, align 8
  %415 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %414, null
  br i1 %415, label %420, label %416

416:                                              ; preds = %413
  %417 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %414 to i64
  %418 = and i64 %417, -8
  %419 = or i64 %418, 4
  store i64 %419, i64* %63, align 8
  br label %420

420:                                              ; preds = %416, %413
  store %"class.v8::internal::compiler::InstructionOperand"* %392, %"class.v8::internal::compiler::InstructionOperand"** %405, align 8
  br label %421

421:                                              ; preds = %385, %384, %412, %420, %181, %173, %204, %203, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator19EnsureRegisterStateEv(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::RegisterState"* %3, null
  br i1 %4, label %5, label %57

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %9 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %9, i64 0, i32 1
  %11 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 40
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %5
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %11, i64 40) #12
  br label %22

20:                                               ; preds = %5
  %21 = add i64 %13, 40
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to i8*
  %25 = inttoptr i64 %23 to %"class.v8::internal::compiler::RegisterState"*
  %26 = sext i32 %7 to i64
  %27 = ptrtoint %"class.v8::internal::Zone"* %11 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %25, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %29 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %28 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  store i64 %27, i64* %29, align 8
  %30 = icmp eq i32 %7, 0
  br i1 %30, label %55, label %31

31:                                               ; preds = %22
  %32 = icmp ugt i32 %7, 268435455
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = inttoptr i64 %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #13
  unreachable

35:                                               ; preds = %31
  %36 = shl nsw i64 %26, 3
  %37 = load i64, i64* %12, align 8
  %38 = load i64, i64* %14, align 8
  %39 = sub i64 %38, %37
  %40 = icmp ugt i64 %36, %39
  br i1 %40, label %41, label %43, !prof !2

41:                                               ; preds = %35
  %42 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %11, i64 %36) #12
  br label %45

43:                                               ; preds = %35
  %44 = add i64 %37, %36
  store i64 %44, i64* %12, align 8
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i64 [ %42, %41 ], [ %37, %43 ]
  %47 = inttoptr i64 %46 to %"class.v8::internal::compiler::RegisterState::Register"**
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %25, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %47, %"class.v8::internal::compiler::RegisterState::Register"*** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %47, i64 %26
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %25, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %51, %"class.v8::internal::compiler::RegisterState::Register"*** %52, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 %36, i1 false) #12
  %53 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %49 to i64*
  %54 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %51 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %22, %45
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %25, i64 0, i32 1
  store %"class.v8::internal::Zone"* %11, %"class.v8::internal::Zone"** %56, align 8
  store %"class.v8::internal::compiler::RegisterState"* %25, %"class.v8::internal::compiler::RegisterState"** %2, align 8
  br label %57

57:                                               ; preds = %1, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20AllocateGapMoveInputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::UnallocatedOperand"*, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RegisterState"* %6, null
  br i1 %7, label %8, label %60

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %12 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %12, i64 0, i32 1
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ult i64 %19, 40
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %8
  %22 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 40) #12
  br label %25

23:                                               ; preds = %8
  %24 = add i64 %16, 40
  store i64 %24, i64* %15, align 8
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ %22, %21 ], [ %16, %23 ]
  %27 = inttoptr i64 %26 to i8*
  %28 = inttoptr i64 %26 to %"class.v8::internal::compiler::RegisterState"*
  %29 = sext i32 %10 to i64
  %30 = ptrtoint %"class.v8::internal::Zone"* %14 to i64
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %31 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #12
  store i64 %30, i64* %32, align 8
  %33 = icmp eq i32 %10, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %25
  %35 = icmp ugt i32 %10, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = inttoptr i64 %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %34
  %39 = shl nsw i64 %29, 3
  %40 = load i64, i64* %15, align 8
  %41 = load i64, i64* %17, align 8
  %42 = sub i64 %41, %40
  %43 = icmp ugt i64 %39, %42
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %38
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %39) #12
  br label %48

46:                                               ; preds = %38
  %47 = add i64 %40, %39
  store i64 %47, i64* %15, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %40, %46 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::RegisterState::Register"**
  %51 = inttoptr i64 %49 to i8*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %50, %"class.v8::internal::compiler::RegisterState::Register"*** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %50, i64 %29
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %54, %"class.v8::internal::compiler::RegisterState::Register"*** %55, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 %39, i1 false) #12
  %56 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %52 to i64*
  %57 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %54 to i64
  store i64 %57, i64* %56, align 8
  br label %58

58:                                               ; preds = %48, %25
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 1
  store %"class.v8::internal::Zone"* %14, %"class.v8::internal::Zone"** %59, align 8
  store %"class.v8::internal::compiler::RegisterState"* %28, %"class.v8::internal::compiler::RegisterState"** %5, align 8
  br label %60

60:                                               ; preds = %4, %58
  %61 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %65, i64 %63, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, -1
  br i1 %68, label %69, label %124

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %71 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 5
  %73 = load i8, i8* %72, align 1
  %74 = and i8 %73, 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %127

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %78 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %77, align 8
  %79 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %78, null
  br i1 %79, label %105, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %78, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 7
  %84 = icmp eq i64 %83, 2
  br i1 %84, label %127, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %71, i64 0, i32 3
  %87 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %86, align 8
  %88 = sext i32 %3 to i64
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %87, i64 0, i32 8, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %88
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %87, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %93 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %92, align 8
  %94 = lshr i64 %91, 9
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %93, i64 %94
  %96 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %95, align 8
  %97 = and i64 %91, 511
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %96, i64 %97
  %99 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %99, i64 0, i32 4
  %101 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %101, i64 0, i32 10
  %103 = load i8, i8* %102, align 4, !range !5
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %127

105:                                              ; preds = %85, %76
  %106 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = or i64 %109, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i64 %110, -1
  br i1 %113, label %118, label %114

114:                                              ; preds = %105
  %115 = xor i64 %110, -1
  %116 = tail call i64 @llvm.cttz.i64(i64 %115, i1 true) #12, !range !21
  %117 = trunc i64 %116 to i32
  br label %118

118:                                              ; preds = %114, %105
  %119 = phi i32 [ %117, %114 ], [ 64, %105 ]
  %120 = icmp slt i32 %119, %112
  %121 = trunc i32 %119 to i8
  %122 = icmp ne i8 %121, -1
  %123 = and i1 %120, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %60, %118
  %125 = phi i8 [ %121, %118 ], [ %67, %60 ]
  %126 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePendingUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEbi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %125, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, %"class.v8::internal::compiler::InstructionOperand"* %126, i1 zeroext true, i32 %3)
  br label %147

127:                                              ; preds = %85, %69, %80, %118
  %128 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %71) #12
  %129 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %130 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %129, align 8
  %131 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %130, i64 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 7
  switch i64 %135, label %138 [
    i64 5, label %136
    i64 2, label %136
  ]

136:                                              ; preds = %132, %132
  %137 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  store i64 %134, i64* %137, align 8
  br label %147

138:                                              ; preds = %132, %127
  %139 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  store i64 4, i64* %139, align 8
  %140 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %129, align 8
  %141 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %140 to i64
  %144 = and i64 %143, -8
  %145 = or i64 %144, 4
  store i64 %145, i64* %139, align 8
  br label %146

146:                                              ; preds = %142, %138
  store %"class.v8::internal::compiler::InstructionOperand"* %128, %"class.v8::internal::compiler::InstructionOperand"** %129, align 8
  br label %147

147:                                              ; preds = %146, %136, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator22AllocateConstantOutputEPNS1_15ConstantOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::ConstantOperand"* nocapture readonly, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RegisterState"* %6, null
  br i1 %7, label %8, label %60

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %12 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %12, i64 0, i32 1
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ult i64 %19, 40
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %8
  %22 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 40) #12
  br label %25

23:                                               ; preds = %8
  %24 = add i64 %16, 40
  store i64 %24, i64* %15, align 8
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ %22, %21 ], [ %16, %23 ]
  %27 = inttoptr i64 %26 to i8*
  %28 = inttoptr i64 %26 to %"class.v8::internal::compiler::RegisterState"*
  %29 = sext i32 %10 to i64
  %30 = ptrtoint %"class.v8::internal::Zone"* %14 to i64
  %31 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %31 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #12
  store i64 %30, i64* %32, align 8
  %33 = icmp eq i32 %10, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %25
  %35 = icmp ugt i32 %10, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = inttoptr i64 %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %34
  %39 = shl nsw i64 %29, 3
  %40 = load i64, i64* %15, align 8
  %41 = load i64, i64* %17, align 8
  %42 = sub i64 %41, %40
  %43 = icmp ugt i64 %39, %42
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %38
  %45 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %39) #12
  br label %48

46:                                               ; preds = %38
  %47 = add i64 %40, %39
  store i64 %47, i64* %15, align 8
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i64 [ %45, %44 ], [ %40, %46 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::RegisterState::Register"**
  %51 = inttoptr i64 %49 to i8*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %50, %"class.v8::internal::compiler::RegisterState::Register"*** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %50, i64 %29
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %54, %"class.v8::internal::compiler::RegisterState::Register"*** %55, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 %39, i1 false) #12
  %56 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %52 to i64*
  %57 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %54 to i64
  store i64 %57, i64* %56, align 8
  br label %58

58:                                               ; preds = %48, %25
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %28, i64 0, i32 1
  store %"class.v8::internal::Zone"* %14, %"class.v8::internal::Zone"** %59, align 8
  store %"class.v8::internal::compiler::RegisterState"* %28, %"class.v8::internal::compiler::RegisterState"** %5, align 8
  br label %60

60:                                               ; preds = %4, %58
  %61 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %65, i64 %63, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, -1
  br i1 %68, label %70, label %69

69:                                               ; preds = %60
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %67) #12
  br label %70

70:                                               ; preds = %60, %69
  %71 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 5
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %123, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.v8::internal::compiler::ConstantOperand", %"class.v8::internal::compiler::ConstantOperand"* %1, i64 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  %79 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %81 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %79, i64 0, i32 9
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, -1
  %85 = icmp eq i32 %84, %3
  br i1 %85, label %86, label %121

86:                                               ; preds = %75
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %79, i64 0, i32 0, i32 0, i32 0, i32 1
  %90 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %89, align 8
  %91 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %88, %90
  br i1 %91, label %123, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %81, i64 0, i32 3
  br label %94

94:                                               ; preds = %113, %92
  %95 = phi %"class.v8::internal::compiler::RpoNumber"* [ %88, %92 ], [ %119, %113 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %93, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %98, i64 0, i32 2
  %100 = bitcast %"class.v8::internal::ZoneVector.591"** %99 to %"class.std::__1::vector.592"**
  %101 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %100, align 8
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %101, i64 0, i32 0, i32 1
  %104 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.592"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp ugt i64 %109, %102
  br i1 %110, label %113, label %111

111:                                              ; preds = %94
  %112 = bitcast %"class.std::__1::vector.592"* %101 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %112) #13
  unreachable

113:                                              ; preds = %94
  %114 = inttoptr i64 %107 to %"class.v8::internal::compiler::InstructionBlock"**
  %115 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %114, i64 %102
  %116 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %116, i64 0, i32 8
  %118 = load i32, i32* %117, align 4
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 %77, i32 %118, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %81) #12
  %119 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %95, i64 1
  %120 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %119, %90
  br i1 %120, label %123, label %94

121:                                              ; preds = %75
  %122 = add nsw i32 %3, 1
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 %77, i32 %122, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %81) #12
  br label %123

123:                                              ; preds = %113, %70, %121, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14AllocateOutputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, %"class.v8::internal::compiler::UnallocatedOperand"*, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), i32) local_unnamed_addr #2 align 2 {
  %5 = tail call i8 @_ZN2v88internal8compiler27SinglePassRegisterAllocator14AllocateOutputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %1, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, i32 %3, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN2v88internal8compiler27SinglePassRegisterAllocator14AllocateOutputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, %"class.v8::internal::compiler::UnallocatedOperand"*, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), i32, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState"* %7, null
  br i1 %8, label %9, label %61

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %13 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %13, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 40
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %9
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 40) #12
  br label %26

24:                                               ; preds = %9
  %25 = add i64 %17, 40
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to i8*
  %29 = inttoptr i64 %27 to %"class.v8::internal::compiler::RegisterState"*
  %30 = sext i32 %11 to i64
  %31 = ptrtoint %"class.v8::internal::Zone"* %15 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %32 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #12
  store i64 %31, i64* %33, align 8
  %34 = icmp eq i32 %11, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %26
  %36 = icmp ugt i32 %11, 268435455
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = inttoptr i64 %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %35
  %40 = shl nsw i64 %30, 3
  %41 = load i64, i64* %16, align 8
  %42 = load i64, i64* %18, align 8
  %43 = sub i64 %42, %41
  %44 = icmp ugt i64 %40, %43
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %39
  %46 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 %40) #12
  br label %49

47:                                               ; preds = %39
  %48 = add i64 %41, %40
  store i64 %48, i64* %16, align 8
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %46, %45 ], [ %41, %47 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::RegisterState::Register"**
  %52 = inttoptr i64 %50 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %51, %"class.v8::internal::compiler::RegisterState::Register"*** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %51, i64 %30
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %55, %"class.v8::internal::compiler::RegisterState::Register"*** %56, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 %40, i1 false) #12
  %57 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %53 to i64*
  %58 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %55 to i64
  store i64 %58, i64* %57, align 8
  br label %59

59:                                               ; preds = %49, %26
  %60 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 1
  store %"class.v8::internal::Zone"* %15, %"class.v8::internal::Zone"** %60, align 8
  store %"class.v8::internal::compiler::RegisterState"* %29, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  br label %61

61:                                               ; preds = %5, %59
  %62 = phi %"class.v8::internal::compiler::RegisterState"* [ %7, %5 ], [ %29, %59 ]
  %63 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 515396075520
  %68 = icmp eq i64 %67, 446676598784
  %69 = and i64 %66, 34359738368
  %70 = icmp eq i64 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %80

72:                                               ; preds = %61
  %73 = sext i32 %64 to i64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %75, i64 %73, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, -1
  br i1 %78, label %280, label %79

79:                                               ; preds = %72
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %77) #12
  br label %280

80:                                               ; preds = %61
  %81 = lshr i64 %66, 36
  %82 = trunc i64 %81 to i32
  %83 = and i32 %82, 7
  %84 = add nsw i32 %83, -3
  %85 = icmp ult i32 %84, 2
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = lshr i64 %66, 41
  %88 = and i64 %87, 63
  %89 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %90 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %90, i64 %88, i32 0
  %92 = load i8, i8* %91, align 1
  br label %277

93:                                               ; preds = %80
  %94 = icmp eq i64 %67, 377957122048
  %95 = sext i32 %64 to i64
  %96 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %97, i64 %95, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, -1
  br i1 %100, label %101, label %263

101:                                              ; preds = %93
  br i1 %94, label %138, label %102

102:                                              ; preds = %101
  %103 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %104 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 5
  %106 = load i8, i8* %105, align 1
  %107 = and i8 %106, 8
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %280

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %111 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %110, align 8
  %112 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %111, null
  br i1 %112, label %138, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %111, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 7
  %117 = icmp eq i64 %116, 2
  br i1 %117, label %280, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %104, i64 0, i32 3
  %120 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %119, align 8
  %121 = sext i32 %3 to i64
  %122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %120, i64 0, i32 8, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, %121
  %125 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %120, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %126 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %125, align 8
  %127 = lshr i64 %124, 9
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %126, i64 %127
  %129 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %128, align 8
  %130 = and i64 %124, 511
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %129, i64 %130
  %132 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %132, i64 0, i32 4
  %134 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %134, i64 0, i32 10
  %136 = load i8, i8* %135, align 4, !range !5
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %280

138:                                              ; preds = %118, %109, %101
  switch i32 %4, label %152 [
    i32 0, label %139
    i32 1, label %142
    i32 2, label %145
    i32 3, label %151
  ]

139:                                              ; preds = %138
  %140 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %141 = load i64, i64* %140, align 8
  br label %153

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %144 = load i64, i64* %143, align 8
  br label %153

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = or i64 %149, %147
  br label %153

151:                                              ; preds = %138
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

152:                                              ; preds = %138
  unreachable

153:                                              ; preds = %145, %142, %139
  %154 = phi i64 [ %150, %145 ], [ %144, %142 ], [ %141, %139 ]
  %155 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = or i64 %156, %154
  %158 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i64 %157, -1
  br i1 %160, label %165, label %161

161:                                              ; preds = %153
  %162 = xor i64 %157, -1
  %163 = tail call i64 @llvm.cttz.i64(i64 %162, i1 true) #12, !range !21
  %164 = trunc i64 %163 to i32
  br label %165

165:                                              ; preds = %161, %153
  %166 = phi i32 [ %164, %161 ], [ 64, %153 ]
  %167 = icmp slt i32 %166, %159
  %168 = trunc i32 %166 to i8
  %169 = select i1 %167, i8 %168, i8 -1
  %170 = icmp ne i8 %169, -1
  %171 = xor i1 %94, true
  %172 = or i1 %170, %171
  br i1 %172, label %277, label %173

173:                                              ; preds = %165
  switch i32 %4, label %186 [
    i32 0, label %174
    i32 1, label %177
    i32 2, label %180
  ]

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %176 = load i64, i64* %175, align 8
  br label %187

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %179 = load i64, i64* %178, align 8
  br label %187

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = or i64 %184, %182
  br label %187

186:                                              ; preds = %173
  unreachable

187:                                              ; preds = %180, %177, %174
  %188 = phi i64 [ %185, %180 ], [ %179, %177 ], [ %176, %174 ]
  %189 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %62, i64 0, i32 0, i32 0, i32 0, i32 1
  %190 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.v8::internal::compiler::RegisterState"* %62 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = lshr exact i64 %194, 3
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %196, 0
  %198 = inttoptr i64 %193 to %"class.v8::internal::compiler::RegisterState::Register"**
  br i1 %197, label %261, label %199

199:                                              ; preds = %187
  %200 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  br label %201

201:                                              ; preds = %254, %199
  %202 = phi i32 [ 2147483647, %199 ], [ %258, %254 ]
  %203 = phi i8 [ 0, %199 ], [ %257, %254 ]
  %204 = phi i8 [ 0, %199 ], [ %256, %254 ]
  %205 = phi i8 [ -1, %199 ], [ %255, %254 ]
  %206 = phi i32 [ 0, %199 ], [ %259, %254 ]
  %207 = trunc i32 %206 to i8
  %208 = sext i8 %207 to i64
  %209 = and i64 %208, 4294967295
  %210 = shl i64 1, %209
  %211 = and i64 %210, %188
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %254

213:                                              ; preds = %201
  %214 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %198, i64 %208
  %215 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %214, align 8
  %216 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %215, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %215, i64 0, i32 6
  %219 = load i32, i32* %218, align 4
  br label %220

220:                                              ; preds = %217, %213
  %221 = phi i32 [ %219, %217 ], [ -1, %213 ]
  %222 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %200, align 8
  %223 = sext i32 %221 to i64
  %224 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %222, i64 0, i32 6, i32 0, i32 0, i32 0
  %225 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %225, i64 %223
  %227 = and i8 %203, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %215, i64 0, i32 0
  %231 = load i8, i8* %230, align 8, !range !5
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %244, label %233

233:                                              ; preds = %229, %220
  %234 = and i8 %204, 1
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %240

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %226, i64 0, i32 0
  %238 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %237, align 8
  %239 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %238, null
  br i1 %239, label %240, label %244

240:                                              ; preds = %236, %233
  %241 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %225, i64 %223, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = icmp slt i32 %242, %202
  br i1 %243, label %244, label %254

244:                                              ; preds = %240, %236, %229
  %245 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %225, i64 %223, i32 2
  %246 = load i32, i32* %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %215, i64 0, i32 0
  %248 = load i8, i8* %247, align 8, !range !5
  %249 = xor i8 %248, 1
  %250 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %226, i64 0, i32 0
  %251 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %250, align 8
  %252 = icmp ne %"class.v8::internal::compiler::InstructionOperand"* %251, null
  %253 = zext i1 %252 to i8
  br label %254

254:                                              ; preds = %244, %240, %201
  %255 = phi i8 [ %205, %201 ], [ %207, %244 ], [ %205, %240 ]
  %256 = phi i8 [ %204, %201 ], [ %253, %244 ], [ %204, %240 ]
  %257 = phi i8 [ %203, %201 ], [ %249, %244 ], [ %203, %240 ]
  %258 = phi i32 [ %202, %201 ], [ %246, %244 ], [ %202, %240 ]
  %259 = add nuw nsw i32 %206, 1
  %260 = icmp eq i32 %259, %196
  br i1 %260, label %261, label %201

261:                                              ; preds = %254, %187
  %262 = phi i8 [ -1, %187 ], [ %255, %254 ]
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %262) #12
  br label %277

263:                                              ; preds = %93
  %264 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 12, i32 0
  %265 = load i64, i64* %264, align 8
  %266 = sext i8 %99 to i64
  %267 = and i64 %266, 4294967295
  %268 = shl i64 1, %267
  %269 = and i64 %265, %268
  %270 = icmp eq i64 %269, 0
  %271 = icmp eq i32 %4, 0
  %272 = or i1 %271, %270
  %273 = xor i1 %94, true
  %274 = or i1 %272, %273
  %275 = select i1 %272, i8 %99, i8 -1, !prof !22
  br i1 %274, label %277, label %276, !prof !23

276:                                              ; preds = %263
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

277:                                              ; preds = %263, %261, %165, %86
  %278 = phi i8 [ %92, %86 ], [ %275, %263 ], [ %169, %165 ], [ %262, %261 ]
  %279 = icmp eq i8 %278, -1
  br i1 %279, label %280, label %309

280:                                              ; preds = %277, %118, %102, %113, %79, %72
  %281 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  %282 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %283 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 0
  %285 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %284, align 8
  %286 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %280
  %288 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %285, i64 0, i32 0
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 2
  br i1 %291, label %292, label %293

292:                                              ; preds = %287
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %284, align 8
  br label %293

293:                                              ; preds = %292, %287, %280
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %283) #12
  %294 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %284, align 8
  %295 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %294, null
  br i1 %295, label %301, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %294, i64 0, i32 0
  %298 = load i64, i64* %297, align 8
  %299 = and i64 %298, 7
  switch i64 %299, label %301 [
    i64 5, label %300
    i64 2, label %300
  ]

300:                                              ; preds = %296, %296
  store i64 %298, i64* %65, align 8
  br label %471

301:                                              ; preds = %296, %293
  store i64 4, i64* %65, align 8
  %302 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %284, align 8
  %303 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %302, null
  br i1 %303, label %308, label %304

304:                                              ; preds = %301
  %305 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %302 to i64
  %306 = and i64 %305, -8
  %307 = or i64 %306, 4
  store i64 %307, i64* %65, align 8
  br label %308

308:                                              ; preds = %304, %301
  store %"class.v8::internal::compiler::InstructionOperand"* %281, %"class.v8::internal::compiler::InstructionOperand"** %284, align 8
  br label %471

309:                                              ; preds = %277
  %310 = sext i32 %64 to i64
  %311 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %312 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %312, i64 %310, i32 0
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, -1
  %316 = icmp eq i8 %314, %278
  %317 = or i1 %315, %316
  br i1 %317, label %385, label %318

318:                                              ; preds = %309
  %319 = load i32, i32* %63, align 4
  %320 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 4
  %321 = load i8, i8* %320, align 8
  %322 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %323 = load i32*, i32** %322, align 8
  %324 = sext i8 %314 to i64
  %325 = getelementptr inbounds i32, i32* %323, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = zext i8 %321 to i64
  %328 = shl nuw nsw i64 %327, 5
  %329 = zext i32 %326 to i64
  %330 = shl i64 %329, 35
  %331 = or i64 %328, %330
  %332 = or i64 %331, 5
  %333 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  %334 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %335 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %334, align 8
  %336 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %333, i64 0, i32 0, i32 0, i32 0, i32 0
  %337 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %337, i64 %324
  %339 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %338, align 8
  %340 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %339, null
  br i1 %340, label %373, label %341

341:                                              ; preds = %318
  %342 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %339, i64 0, i32 6
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, -1
  br i1 %344, label %373, label %345

345:                                              ; preds = %341
  tail call void @_ZN2v88internal8compiler13RegisterState8Register6CommitENS1_16AllocatedOperandEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::RegisterState::Register"* nonnull %339, i64 %332, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %335) #12
  %346 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %336, align 8
  %347 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %346, i64 %324
  %348 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %347, align 8
  %349 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 1
  %350 = load i8, i8* %349, align 1, !range !5
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %353, label %352

352:                                              ; preds = %345
  store %"class.v8::internal::compiler::RegisterState::Register"* null, %"class.v8::internal::compiler::RegisterState::Register"** %347, align 8
  br label %373

353:                                              ; preds = %345
  store i8 0, i8* %349, align 1
  %354 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 2
  store i8 0, i8* %354, align 2
  %355 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 0
  store i8 0, i8* %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 3
  store i8 1, i8* %356, align 1
  %357 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 4
  store i32 -1, i32* %357, align 4
  %358 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 5
  store i32 0, i32* %358, align 8
  %359 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 6
  store i32 -1, i32* %359, align 4
  %360 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 7
  store %"class.v8::internal::compiler::PendingOperand"* null, %"class.v8::internal::compiler::PendingOperand"** %360, align 8
  %361 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %362 = load i8, i8* %361, align 8, !range !5
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %373, label %364

364:                                              ; preds = %353
  %365 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %366 = load %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"*, %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %365, align 8
  %367 = icmp eq %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %366, null
  br i1 %367, label %372, label %368

368:                                              ; preds = %364
  %369 = ptrtoint %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"* %366 to i64
  %370 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %348, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %371 = bitcast %"struct.v8::internal::compiler::RegisterState::Register::DeferredBlockSpill"** %370 to i64*
  store i64 %369, i64* %371, align 8
  br label %372

372:                                              ; preds = %368, %364
  store i8 0, i8* %361, align 8
  br label %373

373:                                              ; preds = %372, %353, %352, %341, %318
  %374 = and i64 %324, 4294967295
  %375 = shl i64 1, %374
  %376 = xor i64 %375, -1
  %377 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %378 = load i64, i64* %377, align 8
  %379 = and i64 %378, %376
  store i64 %379, i64* %377, align 8
  %380 = icmp eq i32 %319, -1
  br i1 %380, label %385, label %381

381:                                              ; preds = %373
  %382 = sext i32 %319 to i64
  %383 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %311, align 8
  %384 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %383, i64 %382, i32 0
  store i8 -1, i8* %384, align 1
  br label %385

385:                                              ; preds = %381, %373, %309
  %386 = phi i64 [ 0, %309 ], [ %332, %373 ], [ %332, %381 ]
  %387 = load i32, i32* %63, align 4
  %388 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 4
  %389 = load i8, i8* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CommitRegisterENS1_13RegisterIndexEiNS0_21MachineRepresentationEPNS1_18InstructionOperandENS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %278, i32 %387, i8 zeroext %389, %"class.v8::internal::compiler::InstructionOperand"* %390, i32 %4)
  %391 = and i64 %386, 7
  %392 = icmp eq i64 %391, 5
  br i1 %392, label %393, label %395

393:                                              ; preds = %385
  %394 = load i64, i64* %65, align 8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator21EmitGapMoveFromOutputENS1_18InstructionOperandES3_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 %394, i64 %386, i32 %3)
  br label %395

395:                                              ; preds = %393, %385
  %396 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 5
  %397 = load i8, i8* %396, align 1
  %398 = and i8 %397, 8
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %447, label %400

400:                                              ; preds = %395
  %401 = load i64, i64* %65, align 8
  %402 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 2
  %403 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %402, align 8
  %404 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %405 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %404, align 8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %403, i64 0, i32 9
  %407 = load i32, i32* %406, align 8
  %408 = add nsw i32 %407, -1
  %409 = icmp eq i32 %408, %3
  br i1 %409, label %410, label %445

410:                                              ; preds = %400
  %411 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %403, i64 0, i32 0, i32 0, i32 0, i32 0
  %412 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %411, align 8
  %413 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %403, i64 0, i32 0, i32 0, i32 0, i32 1
  %414 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %413, align 8
  %415 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %412, %414
  br i1 %415, label %471, label %416

416:                                              ; preds = %410
  %417 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %405, i64 0, i32 3
  br label %418

418:                                              ; preds = %437, %416
  %419 = phi %"class.v8::internal::compiler::RpoNumber"* [ %412, %416 ], [ %443, %437 ]
  %420 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %419, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %417, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %422, i64 0, i32 2
  %424 = bitcast %"class.v8::internal::ZoneVector.591"** %423 to %"class.std::__1::vector.592"**
  %425 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %424, align 8
  %426 = sext i32 %421 to i64
  %427 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %425, i64 0, i32 0, i32 1
  %428 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.std::__1::vector.592"* %425 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = sub i64 %429, %431
  %433 = ashr exact i64 %432, 3
  %434 = icmp ugt i64 %433, %426
  br i1 %434, label %437, label %435

435:                                              ; preds = %418
  %436 = bitcast %"class.std::__1::vector.592"* %425 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %436) #13
  unreachable

437:                                              ; preds = %418
  %438 = inttoptr i64 %431 to %"class.v8::internal::compiler::InstructionBlock"**
  %439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %438, i64 %426
  %440 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %439, align 8
  %441 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %440, i64 0, i32 8
  %442 = load i32, i32* %441, align 4
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 %401, i32 %442, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %405) #12
  %443 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %419, i64 1
  %444 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %443, %414
  br i1 %444, label %471, label %418

445:                                              ; preds = %400
  %446 = add nsw i32 %3, 1
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 %401, i32 %446, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %405) #12
  br label %471

447:                                              ; preds = %395
  %448 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 1
  %449 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %448, align 8
  %450 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %449, null
  br i1 %450, label %471, label %451

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %449, i64 0, i32 2
  %453 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %452, align 8
  %454 = icmp eq %"class.v8::internal::ZoneVector.712"* %453, null
  br i1 %454, label %471, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %457 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %456, align 8
  %458 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %453, i64 0, i32 0, i32 0, i32 0
  %459 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %458, align 8
  %460 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %453, i64 0, i32 0, i32 0, i32 1
  %461 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %460, align 8
  %462 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %459, %461
  br i1 %462, label %471, label %463

463:                                              ; preds = %455, %463
  %464 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %469, %463 ], [ %459, %455 ]
  %465 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %464, i64 0, i32 0
  %466 = load i32, i32* %465, align 8
  %467 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %464, i64 0, i32 1, i32 0, i32 0, i32 0
  %468 = load i64, i64* %467, align 8
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData22EmitGapMoveToSpillSlotENS1_18InstructionOperandEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 %468, i32 %466, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %457) #12
  %469 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %464, i64 1
  %470 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %469, %461
  br i1 %470, label %471, label %463

471:                                              ; preds = %437, %463, %451, %447, %410, %445, %455, %308, %300
  %472 = phi i8 [ -1, %300 ], [ -1, %308 ], [ %278, %455 ], [ %278, %445 ], [ %278, %410 ], [ %278, %451 ], [ %278, %447 ], [ %278, %463 ], [ %278, %437 ]
  ret i8 %472
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator23AllocateSameInputOutputEPNS1_18UnallocatedOperandES4_RNS1_19VirtualRegisterDataES6_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"*, %"class.v8::internal::compiler::UnallocatedOperand"*, %"class.v8::internal::compiler::UnallocatedOperand"*, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %8 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::RegisterState"* %10, null
  br i1 %11, label %12, label %64

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %16 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %16, i64 0, i32 1
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %20
  %24 = icmp ult i64 %23, 40
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %12
  %26 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 40) #12
  br label %29

27:                                               ; preds = %12
  %28 = add i64 %20, 40
  store i64 %28, i64* %19, align 8
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i64 [ %26, %25 ], [ %20, %27 ]
  %31 = inttoptr i64 %30 to i8*
  %32 = inttoptr i64 %30 to %"class.v8::internal::compiler::RegisterState"*
  %33 = sext i32 %14 to i64
  %34 = ptrtoint %"class.v8::internal::Zone"* %18 to i64
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %36 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %35 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #12
  store i64 %34, i64* %36, align 8
  %37 = icmp eq i32 %14, 0
  br i1 %37, label %62, label %38

38:                                               ; preds = %29
  %39 = icmp ugt i32 %14, 268435455
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = inttoptr i64 %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #13
  unreachable

42:                                               ; preds = %38
  %43 = shl nsw i64 %33, 3
  %44 = load i64, i64* %19, align 8
  %45 = load i64, i64* %21, align 8
  %46 = sub i64 %45, %44
  %47 = icmp ugt i64 %43, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %42
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %43) #12
  br label %52

50:                                               ; preds = %42
  %51 = add i64 %44, %43
  store i64 %51, i64* %19, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %44, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::RegisterState::Register"**
  %55 = inttoptr i64 %53 to i8*
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %54, %"class.v8::internal::compiler::RegisterState::Register"*** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %54, i64 %33
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %58, %"class.v8::internal::compiler::RegisterState::Register"*** %59, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 %43, i1 false) #12
  %60 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %56 to i64*
  %61 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %58 to i64
  store i64 %61, i64* %60, align 8
  br label %62

62:                                               ; preds = %52, %29
  %63 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %32, i64 0, i32 1
  store %"class.v8::internal::Zone"* %18, %"class.v8::internal::Zone"** %63, align 8
  store %"class.v8::internal::compiler::RegisterState"* %32, %"class.v8::internal::compiler::RegisterState"** %9, align 8
  br label %64

64:                                               ; preds = %6, %62
  %65 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %4, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %2, i64 0, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, -34359738361
  %72 = zext i32 %68 to i64
  %73 = shl nuw nsw i64 %72, 3
  %74 = or i64 %71, %73
  %75 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = tail call i8 @_ZN2v88internal8compiler27SinglePassRegisterAllocator14AllocateOutputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %1, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %3, i32 %5, i32 2)
  %77 = icmp eq i8 %76, -1
  br i1 %77, label %100, label %78

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i64 206158430208, i64 274877906944
  %83 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 6
  %84 = load i32*, i32** %83, align 8
  %85 = sext i8 %76 to i64
  %86 = getelementptr inbounds i32, i32* %84, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %66 to i64
  %89 = shl nuw nsw i64 %88, 3
  %90 = zext i32 %87 to i64
  %91 = shl i64 %90, 41
  %92 = or i64 %89, %82
  %93 = or i64 %92, %91
  %94 = or i64 %93, 584115552257
  store i64 %94, i64* %69, align 8
  %95 = and i64 %85, 4294967295
  %96 = shl i64 1, %95
  %97 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 12, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = or i64 %98, %96
  store i64 %99, i64* %97, align 8
  br label %202

100:                                              ; preds = %64
  %101 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %2, i64 0, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %103 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %3, i64 0, i32 0
  %105 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  %106 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %105, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 7
  %111 = icmp eq i64 %110, 2
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  br label %113

113:                                              ; preds = %112, %107, %100
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %3, i32 %5, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %103) #12
  %114 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  %115 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %114, i64 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 7
  switch i64 %119, label %121 [
    i64 5, label %120
    i64 2, label %120
  ]

120:                                              ; preds = %116, %116
  store i64 %118, i64* %69, align 8
  br label %129

121:                                              ; preds = %116, %113
  store i64 4, i64* %69, align 8
  %122 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  %123 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %122, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %122 to i64
  %126 = and i64 %125, -8
  %127 = or i64 %126, 4
  store i64 %127, i64* %69, align 8
  br label %128

128:                                              ; preds = %124, %121
  store %"class.v8::internal::compiler::InstructionOperand"* %101, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  br label %129

129:                                              ; preds = %120, %128
  %130 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #12
  %131 = zext i32 %66 to i64
  %132 = shl nuw nsw i64 %131, 3
  %133 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %7, i64 0, i32 0, i32 0
  %134 = or i64 %132, 721554505729
  store i64 %134, i64* %133, align 8
  %135 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %102, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %7, i64 0, i32 0
  %137 = bitcast %"class.v8::internal::compiler::PendingOperand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #12
  %138 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %8, i64 0, i32 0, i32 0
  store i64 4, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %8, i64 0, i32 0
  %140 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %135, i64 0, i32 3
  %141 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %140, align 8
  %142 = sext i32 %5 to i64
  %143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %141, i64 0, i32 8, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, %142
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %141, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %147 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %146, align 8
  %148 = lshr i64 %145, 9
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %147, i64 %148
  %150 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %149, align 8
  %151 = and i64 %145, 511
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %150, i64 %151
  %153 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %141, i64 0, i32 1
  %155 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %154, align 8
  %156 = ptrtoint %"class.v8::internal::Zone"* %155 to i64
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %153, i64 0, i32 2, i64 1
  %158 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %157, align 8
  %159 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %158, null
  br i1 %159, label %160, label %177

160:                                              ; preds = %129
  %161 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %155, i64 0, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %155, i64 0, i32 3
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %164, %162
  %166 = icmp ult i64 %165, 32
  br i1 %166, label %167, label %169, !prof !2

167:                                              ; preds = %160
  %168 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %155, i64 32) #12
  br label %171

169:                                              ; preds = %160
  %170 = add i64 %162, 32
  store i64 %170, i64* %161, align 8
  br label %171

171:                                              ; preds = %169, %167
  %172 = phi i64 [ %168, %167 ], [ %162, %169 ]
  %173 = inttoptr i64 %172 to i8*
  %174 = inttoptr i64 %172 to %"class.v8::internal::compiler::ParallelMove"*
  %175 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %174, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %176 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %175 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 24, i1 false) #12
  store i64 %156, i64* %176, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %174, %"class.v8::internal::compiler::ParallelMove"** %157, align 8
  br label %177

177:                                              ; preds = %129, %171
  %178 = phi %"class.v8::internal::compiler::ParallelMove"* [ %174, %171 ], [ %158, %129 ]
  %179 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %178, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %180 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %179, align 8
  %181 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %178, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %136, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %139, %"class.v8::internal::Zone"* %180) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #12
  %182 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %181, i64 0, i32 1
  %183 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %102, align 8
  call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %3, i32 %5, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %183) #12
  %184 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  %185 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %184, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %184, i64 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = and i64 %188, 7
  switch i64 %189, label %192 [
    i64 5, label %190
    i64 2, label %190
  ]

190:                                              ; preds = %186, %186
  %191 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %182, i64 0, i32 0
  store i64 %188, i64* %191, align 8
  br label %201

192:                                              ; preds = %186, %177
  %193 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %182, i64 0, i32 0
  store i64 4, i64* %193, align 8
  %194 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  %195 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %194, null
  br i1 %195, label %200, label %196

196:                                              ; preds = %192
  %197 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %194 to i64
  %198 = and i64 %197, -8
  %199 = or i64 %198, 4
  store i64 %199, i64* %193, align 8
  br label %200

200:                                              ; preds = %196, %192
  store %"class.v8::internal::compiler::InstructionOperand"* %182, %"class.v8::internal::compiler::InstructionOperand"** %104, align 8
  br label %201

201:                                              ; preds = %190, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #12
  br label %202

202:                                              ; preds = %201, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator12AllocateTempEPNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::UnallocatedOperand"*, i32, i8 zeroext, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::RegisterState"* %7, null
  br i1 %8, label %9, label %61

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %13 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %13, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 40
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %9
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 40) #12
  br label %26

24:                                               ; preds = %9
  %25 = add i64 %17, 40
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to i8*
  %29 = inttoptr i64 %27 to %"class.v8::internal::compiler::RegisterState"*
  %30 = sext i32 %11 to i64
  %31 = ptrtoint %"class.v8::internal::Zone"* %15 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %32 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #12
  store i64 %31, i64* %33, align 8
  %34 = icmp eq i32 %11, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %26
  %36 = icmp ugt i32 %11, 268435455
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = inttoptr i64 %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %35
  %40 = shl nsw i64 %30, 3
  %41 = load i64, i64* %16, align 8
  %42 = load i64, i64* %18, align 8
  %43 = sub i64 %42, %41
  %44 = icmp ugt i64 %40, %43
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %39
  %46 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 %40) #12
  br label %49

47:                                               ; preds = %39
  %48 = add i64 %41, %40
  store i64 %48, i64* %16, align 8
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %46, %45 ], [ %41, %47 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::RegisterState::Register"**
  %52 = inttoptr i64 %50 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %51, %"class.v8::internal::compiler::RegisterState::Register"*** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %51, i64 %30
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %55, %"class.v8::internal::compiler::RegisterState::Register"*** %56, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 %40, i1 false) #12
  %57 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %53 to i64*
  %58 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %55 to i64
  store i64 %58, i64* %57, align 8
  br label %59

59:                                               ; preds = %49, %26
  %60 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %29, i64 0, i32 1
  store %"class.v8::internal::Zone"* %15, %"class.v8::internal::Zone"** %60, align 8
  store %"class.v8::internal::compiler::RegisterState"* %29, %"class.v8::internal::compiler::RegisterState"** %6, align 8
  br label %61

61:                                               ; preds = %5, %59
  %62 = phi %"class.v8::internal::compiler::RegisterState"* [ %7, %5 ], [ %29, %59 ]
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 515396075520
  switch i64 %65, label %73 [
    i64 446676598784, label %181
    i64 240518168576, label %66
    i64 309237645312, label %66
  ]

66:                                               ; preds = %61, %61
  %67 = lshr i64 %64, 41
  %68 = and i64 %67, 63
  %69 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %70 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %70, i64 %68, i32 0
  %72 = load i8, i8* %71, align 1
  br label %172

73:                                               ; preds = %61
  %74 = icmp ne i64 %65, 377957122048
  %75 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = or i64 %78, %76
  %80 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 11, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = or i64 %81, %79
  %83 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i64 %82, -1
  br i1 %85, label %90, label %86

86:                                               ; preds = %73
  %87 = xor i64 %82, -1
  %88 = tail call i64 @llvm.cttz.i64(i64 %87, i1 true) #12, !range !21
  %89 = trunc i64 %88 to i32
  br label %90

90:                                               ; preds = %86, %73
  %91 = phi i32 [ %89, %86 ], [ 64, %73 ]
  %92 = icmp slt i32 %91, %84
  %93 = trunc i32 %91 to i8
  %94 = select i1 %92, i8 %93, i8 -1
  %95 = icmp ne i8 %94, -1
  %96 = or i1 %74, %95
  br i1 %96, label %172, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %62, i64 0, i32 0, i32 0, i32 0, i32 1
  %99 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.v8::internal::compiler::RegisterState"* %62 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = lshr exact i64 %103, 3
  %105 = trunc i64 %104 to i32
  %106 = icmp eq i32 %105, 0
  %107 = inttoptr i64 %102 to %"class.v8::internal::compiler::RegisterState::Register"**
  br i1 %106, label %170, label %108

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  br label %110

110:                                              ; preds = %163, %108
  %111 = phi i32 [ 2147483647, %108 ], [ %167, %163 ]
  %112 = phi i8 [ 0, %108 ], [ %166, %163 ]
  %113 = phi i8 [ 0, %108 ], [ %165, %163 ]
  %114 = phi i8 [ -1, %108 ], [ %164, %163 ]
  %115 = phi i32 [ 0, %108 ], [ %168, %163 ]
  %116 = trunc i32 %115 to i8
  %117 = sext i8 %116 to i64
  %118 = and i64 %117, 4294967295
  %119 = shl i64 1, %118
  %120 = and i64 %119, %79
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %163

122:                                              ; preds = %110
  %123 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %107, i64 %117
  %124 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %123, align 8
  %125 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %124, i64 0, i32 6
  %128 = load i32, i32* %127, align 4
  br label %129

129:                                              ; preds = %126, %122
  %130 = phi i32 [ %128, %126 ], [ -1, %122 ]
  %131 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %109, align 8
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %131, i64 0, i32 6, i32 0, i32 0, i32 0
  %134 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %134, i64 %132
  %136 = and i8 %112, 1
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %124, i64 0, i32 0
  %140 = load i8, i8* %139, align 8, !range !5
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %138, %129
  %143 = and i8 %113, 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %135, i64 0, i32 0
  %147 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %146, align 8
  %148 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %147, null
  br i1 %148, label %149, label %153

149:                                              ; preds = %145, %142
  %150 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %134, i64 %132, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = icmp slt i32 %151, %111
  br i1 %152, label %153, label %163

153:                                              ; preds = %149, %145, %138
  %154 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %134, i64 %132, i32 2
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %124, i64 0, i32 0
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = xor i8 %157, 1
  %159 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %135, i64 0, i32 0
  %160 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %159, align 8
  %161 = icmp ne %"class.v8::internal::compiler::InstructionOperand"* %160, null
  %162 = zext i1 %161 to i8
  br label %163

163:                                              ; preds = %153, %149, %110
  %164 = phi i8 [ %114, %110 ], [ %116, %153 ], [ %114, %149 ]
  %165 = phi i8 [ %113, %110 ], [ %162, %153 ], [ %113, %149 ]
  %166 = phi i8 [ %112, %110 ], [ %158, %153 ], [ %112, %149 ]
  %167 = phi i32 [ %111, %110 ], [ %155, %153 ], [ %111, %149 ]
  %168 = add nuw nsw i32 %115, 1
  %169 = icmp eq i32 %168, %105
  br i1 %169, label %170, label %110

170:                                              ; preds = %163, %97
  %171 = phi i8 [ -1, %97 ], [ %164, %163 ]
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %171) #12
  br label %172

172:                                              ; preds = %170, %90, %66
  %173 = phi i8 [ %72, %66 ], [ %94, %90 ], [ %171, %170 ]
  %174 = icmp eq i8 %173, -1
  br i1 %174, label %175, label %179

175:                                              ; preds = %172
  %176 = load i64, i64* %63, align 8
  %177 = and i64 %176, 515396075520
  %178 = icmp eq i64 %177, 171798691840
  br label %181

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CommitRegisterENS1_13RegisterIndexEiNS0_21MachineRepresentationEPNS1_18InstructionOperandENS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %173, i32 %2, i8 zeroext %3, %"class.v8::internal::compiler::InstructionOperand"* %180, i32 2)
  br label %217

181:                                              ; preds = %175, %61
  %182 = phi i1 [ %178, %175 ], [ false, %61 ]
  %183 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %184 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %183, align 8
  %185 = sext i32 %2 to i64
  %186 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %184, i64 0, i32 6, i32 0, i32 0, i32 0
  %187 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %187, i64 %185
  %189 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  br i1 %182, label %200, label %190

190:                                              ; preds = %181
  %191 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %188, i64 0, i32 0
  %192 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %191, align 8
  %193 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %192, i64 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = and i64 %196, 7
  %198 = icmp eq i64 %197, 2
  br i1 %198, label %199, label %200

199:                                              ; preds = %194
  store %"class.v8::internal::compiler::InstructionOperand"* null, %"class.v8::internal::compiler::InstructionOperand"** %191, align 8
  br label %200

200:                                              ; preds = %199, %194, %190, %181
  tail call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %188, i32 %4, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %184) #12
  %201 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %188, i64 0, i32 0
  %202 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %201, align 8
  %203 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %202, null
  br i1 %203, label %209, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %202, i64 0, i32 0
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 7
  switch i64 %207, label %209 [
    i64 5, label %208
    i64 2, label %208
  ]

208:                                              ; preds = %204, %204
  store i64 %206, i64* %63, align 8
  br label %217

209:                                              ; preds = %204, %200
  store i64 4, i64* %63, align 8
  %210 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %201, align 8
  %211 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %210, null
  br i1 %211, label %216, label %212

212:                                              ; preds = %209
  %213 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %210 to i64
  %214 = and i64 %213, -8
  %215 = or i64 %214, 4
  store i64 %215, i64* %63, align 8
  br label %216

216:                                              ; preds = %212, %209
  store %"class.v8::internal::compiler::InstructionOperand"* %189, %"class.v8::internal::compiler::InstructionOperand"** %201, align 8
  br label %217

217:                                              ; preds = %216, %208, %179
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator25ReserveFixedInputRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::UnallocatedOperand"* nocapture readonly, i32, i8 zeroext, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 584115552256
  %9 = icmp eq i64 %8, 34359738368
  %10 = select i1 %9, i32 0, i32 2
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %1, i32 %2, i8 zeroext %3, i32 %4, i32 %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::UnallocatedOperand"* nocapture readonly, i32, i8 zeroext, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::RegisterState"* %8, null
  br i1 %9, label %10, label %62

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %14 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %14, i64 0, i32 1
  %16 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  %22 = icmp ult i64 %21, 40
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %10
  %24 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %16, i64 40) #12
  br label %27

25:                                               ; preds = %10
  %26 = add i64 %18, 40
  store i64 %26, i64* %17, align 8
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i64 [ %24, %23 ], [ %18, %25 ]
  %29 = inttoptr i64 %28 to i8*
  %30 = inttoptr i64 %28 to %"class.v8::internal::compiler::RegisterState"*
  %31 = sext i32 %12 to i64
  %32 = ptrtoint %"class.v8::internal::Zone"* %16 to i64
  %33 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %30, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %34 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %33 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #12
  store i64 %32, i64* %34, align 8
  %35 = icmp eq i32 %12, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %27
  %37 = icmp ugt i32 %12, 268435455
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = inttoptr i64 %28 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #13
  unreachable

40:                                               ; preds = %36
  %41 = shl nsw i64 %31, 3
  %42 = load i64, i64* %17, align 8
  %43 = load i64, i64* %19, align 8
  %44 = sub i64 %43, %42
  %45 = icmp ugt i64 %41, %44
  br i1 %45, label %46, label %48, !prof !2

46:                                               ; preds = %40
  %47 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %16, i64 %41) #12
  br label %50

48:                                               ; preds = %40
  %49 = add i64 %42, %41
  store i64 %49, i64* %17, align 8
  br label %50

50:                                               ; preds = %48, %46
  %51 = phi i64 [ %47, %46 ], [ %42, %48 ]
  %52 = inttoptr i64 %51 to %"class.v8::internal::compiler::RegisterState::Register"**
  %53 = inttoptr i64 %51 to i8*
  %54 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %30, i64 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %52, %"class.v8::internal::compiler::RegisterState::Register"*** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %52, i64 %31
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %30, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %56, %"class.v8::internal::compiler::RegisterState::Register"*** %57, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 %41, i1 false) #12
  %58 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %54 to i64*
  %59 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %56 to i64
  store i64 %59, i64* %58, align 8
  br label %60

60:                                               ; preds = %50, %27
  %61 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %30, i64 0, i32 1
  store %"class.v8::internal::Zone"* %16, %"class.v8::internal::Zone"** %61, align 8
  store %"class.v8::internal::compiler::RegisterState"* %30, %"class.v8::internal::compiler::RegisterState"** %7, align 8
  br label %62

62:                                               ; preds = %6, %60
  %63 = phi %"class.v8::internal::compiler::RegisterState"* [ %8, %6 ], [ %30, %60 ]
  %64 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = lshr i64 %65, 41
  %67 = and i64 %66, 63
  %68 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %69, i64 %67, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i64
  %73 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %74, i64 %72
  %76 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::RegisterState::Register"* %76, null
  br i1 %77, label %100, label %78

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %76, i64 0, i32 6
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, -1
  %82 = icmp eq i32 %80, %2
  %83 = or i1 %81, %82
  br i1 %83, label %100, label %84

84:                                               ; preds = %78
  %85 = icmp eq i32 %2, -1
  br i1 %85, label %99, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %88 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %87, align 8
  %89 = sext i32 %2 to i64
  %90 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %88, i64 0, i32 6, i32 0, i32 0, i32 0
  %91 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %91, i64 %89, i32 2
  %93 = load i32, i32* %92, align 8
  %94 = icmp sgt i32 %93, %4
  br i1 %94, label %100, label %95

95:                                               ; preds = %86
  %96 = icmp eq i32 %93, %4
  %97 = icmp eq i32 %5, 0
  %98 = and i1 %97, %96
  br i1 %98, label %103, label %99

99:                                               ; preds = %84, %95
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %71)
  br label %100

100:                                              ; preds = %78, %86, %62, %99
  %101 = and i32 %5, -3
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %95, %100
  %104 = and i64 %72, 4294967295
  %105 = shl i64 1, %104
  %106 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 9, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = or i64 %107, %105
  store i64 %108, i64* %106, align 8
  br label %109

109:                                              ; preds = %103, %100
  %110 = add i32 %5, -1
  %111 = icmp ult i32 %110, 2
  br i1 %111, label %112, label %118

112:                                              ; preds = %109
  %113 = and i64 %72, 4294967295
  %114 = shl i64 1, %113
  %115 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 10, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = or i64 %116, %114
  store i64 %117, i64* %115, align 8
  br label %118

118:                                              ; preds = %109, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator24ReserveFixedTempRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::UnallocatedOperand"* nocapture readonly, i32, i8 zeroext, i32) local_unnamed_addr #2 align 2 {
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %1, i32 %2, i8 zeroext %3, i32 %4, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator26ReserveFixedOutputRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::UnallocatedOperand"* nocapture readonly, i32, i8 zeroext, i32) local_unnamed_addr #2 align 2 {
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %1, i32 %2, i8 zeroext %3, i32 %4, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePhiGapMoveERNS1_19VirtualRegisterDataES4_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture dereferenceable(32), %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::PendingOperand", align 8
  %7 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::RegisterState"* %9, null
  br i1 %10, label %11, label %63

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %15 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %15, i64 0, i32 1
  %17 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  %23 = icmp ult i64 %22, 40
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %11
  %25 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 40) #12
  br label %28

26:                                               ; preds = %11
  %27 = add i64 %19, 40
  store i64 %27, i64* %18, align 8
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ %25, %24 ], [ %19, %26 ]
  %30 = inttoptr i64 %29 to i8*
  %31 = inttoptr i64 %29 to %"class.v8::internal::compiler::RegisterState"*
  %32 = sext i32 %13 to i64
  %33 = ptrtoint %"class.v8::internal::Zone"* %17 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %31, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %34 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12
  store i64 %33, i64* %35, align 8
  %36 = icmp eq i32 %13, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %28
  %38 = icmp ugt i32 %13, 268435455
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = inttoptr i64 %29 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #13
  unreachable

41:                                               ; preds = %37
  %42 = shl nsw i64 %32, 3
  %43 = load i64, i64* %18, align 8
  %44 = load i64, i64* %20, align 8
  %45 = sub i64 %44, %43
  %46 = icmp ugt i64 %42, %45
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %41
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 %42) #12
  br label %51

49:                                               ; preds = %41
  %50 = add i64 %43, %42
  store i64 %50, i64* %18, align 8
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64 [ %48, %47 ], [ %43, %49 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::RegisterState::Register"**
  %54 = inttoptr i64 %52 to i8*
  %55 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %31, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %53, %"class.v8::internal::compiler::RegisterState::Register"*** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %53, i64 %32
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %31, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::RegisterState::Register"** %57, %"class.v8::internal::compiler::RegisterState::Register"*** %58, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 %42, i1 false) #12
  %59 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %55 to i64*
  %60 = ptrtoint %"class.v8::internal::compiler::RegisterState::Register"** %57 to i64
  store i64 %60, i64* %59, align 8
  br label %61

61:                                               ; preds = %51, %28
  %62 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %31, i64 0, i32 1
  store %"class.v8::internal::Zone"* %17, %"class.v8::internal::Zone"** %62, align 8
  store %"class.v8::internal::compiler::RegisterState"* %31, %"class.v8::internal::compiler::RegisterState"** %8, align 8
  br label %63

63:                                               ; preds = %4, %61
  %64 = phi %"class.v8::internal::compiler::RegisterState"* [ %9, %4 ], [ %31, %61 ]
  %65 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %2, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %69, i64 %67, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %69, i64 %74, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, -1
  br i1 %77, label %94, label %78

78:                                               ; preds = %63
  %79 = sext i8 %76 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %81, i64 %79
  %83 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %83, i64 0, i32 2
  %85 = load i8, i8* %84, align 2, !range !5
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %78
  %88 = icmp eq i8 %71, -1
  br i1 %88, label %89, label %94

89:                                               ; preds = %87
  %90 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %7, i64 0, i32 0
  store i64 0, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 4
  %93 = load i8, i8* %92, align 8
  call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CommitRegisterENS1_13RegisterIndexEiNS0_21MachineRepresentationEPNS1_18InstructionOperandENS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %76, i32 %73, i8 zeroext %93, %"class.v8::internal::compiler::InstructionOperand"* nonnull %7, i32 2)
  call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator11AllocateUseENS1_13RegisterIndexERNS1_19VirtualRegisterDataEPNS1_18InstructionOperandEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %76, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %2, %"class.v8::internal::compiler::InstructionOperand"* nonnull %7, i32 %3, i32 2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #12
  br label %178

94:                                               ; preds = %87, %78, %63
  %95 = phi i1 [ true, %87 ], [ false, %63 ], [ false, %78 ]
  %96 = phi i8 [ %76, %87 ], [ -1, %63 ], [ -1, %78 ]
  %97 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 8
  %98 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %97, align 8
  %99 = bitcast %"class.v8::internal::compiler::PendingOperand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0, i32 0
  store i64 4, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %5, i64 0, i32 0
  %102 = bitcast %"class.v8::internal::compiler::PendingOperand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12
  %103 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %6, i64 0, i32 0, i32 0
  store i64 4, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %6, i64 0, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %98, i64 0, i32 3
  %106 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %105, align 8
  %107 = sext i32 %3 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %106, i64 0, i32 8, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %106, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %112 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %111, align 8
  %113 = lshr i64 %110, 9
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %112, i64 %113
  %115 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %114, align 8
  %116 = and i64 %110, 511
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %115, i64 %116
  %118 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %106, i64 0, i32 1
  %120 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %119, align 8
  %121 = ptrtoint %"class.v8::internal::Zone"* %120 to i64
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %118, i64 0, i32 2, i64 1
  %123 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %122, align 8
  %124 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %123, null
  br i1 %124, label %125, label %142

125:                                              ; preds = %94
  %126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %120, i64 0, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %120, i64 0, i32 3
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %129, %127
  %131 = icmp ult i64 %130, 32
  br i1 %131, label %132, label %134, !prof !2

132:                                              ; preds = %125
  %133 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %120, i64 32) #12
  br label %136

134:                                              ; preds = %125
  %135 = add i64 %127, 32
  store i64 %135, i64* %126, align 8
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %133, %132 ], [ %127, %134 ]
  %138 = inttoptr i64 %137 to i8*
  %139 = inttoptr i64 %137 to %"class.v8::internal::compiler::ParallelMove"*
  %140 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %139, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %141 = bitcast %"struct.std::__1::__compressed_pair_elem.649"* %140 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #12
  store i64 %121, i64* %141, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %139, %"class.v8::internal::compiler::ParallelMove"** %122, align 8
  br label %142

142:                                              ; preds = %94, %136
  %143 = phi %"class.v8::internal::compiler::ParallelMove"* [ %139, %136 ], [ %123, %94 ]
  %144 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %143, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %145 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %144, align 8
  %146 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %143, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %101, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %104, %"class.v8::internal::Zone"* %145) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  %147 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %146, i64 0, i32 1
  br i1 %95, label %148, label %152

148:                                              ; preds = %142
  %149 = load i32, i32* %72, align 4
  %150 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 4
  %151 = load i8, i8* %150, align 8
  call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CommitRegisterENS1_13RegisterIndexEiNS0_21MachineRepresentationEPNS1_18InstructionOperandENS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %96, i32 %149, i8 zeroext %151, %"class.v8::internal::compiler::InstructionOperand"* %147, i32 2)
  br label %172

152:                                              ; preds = %142
  %153 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %97, align 8
  call void @_ZN2v88internal8compiler19VirtualRegisterData11AddSpillUseEiPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::VirtualRegisterData"* %1, i32 %3, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %153) #12
  %154 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 0
  %155 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %154, align 8
  %156 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %155, i64 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 7
  switch i64 %160, label %163 [
    i64 5, label %161
    i64 2, label %161
  ]

161:                                              ; preds = %157, %157
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 0, i32 0
  store i64 %159, i64* %162, align 8
  br label %172

163:                                              ; preds = %157, %152
  %164 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %147, i64 0, i32 0
  store i64 4, i64* %164, align 8
  %165 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %154, align 8
  %166 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %165, null
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %165 to i64
  %169 = and i64 %168, -8
  %170 = or i64 %169, 4
  store i64 %170, i64* %164, align 8
  br label %171

171:                                              ; preds = %167, %163
  store %"class.v8::internal::compiler::InstructionOperand"* %147, %"class.v8::internal::compiler::InstructionOperand"** %154, align 8
  br label %172

172:                                              ; preds = %171, %161, %148
  %173 = load i32, i32* %65, align 4
  %174 = zext i32 %173 to i64
  %175 = shl nuw nsw i64 %174, 3
  %176 = or i64 %175, 721554505729
  %177 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %146, i64 0, i32 0, i32 0
  store i64 %176, i64* %177, align 8
  br label %178

178:                                              ; preds = %172, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler27SinglePassRegisterAllocator11AllocatePhiERNS1_19VirtualRegisterDataEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* nocapture, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 5
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 6, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %22

12:                                               ; preds = %3, %8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %17, i64 %15, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, -1
  br i1 %20, label %40, label %21

21:                                               ; preds = %12
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i8 %19) #12
  br label %40

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %27, i64 %25, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, -1
  br i1 %30, label %40, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %0, i64 0, i32 1
  %33 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %32, align 8
  %34 = sext i8 %29 to i64
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %36, i64 %34
  %38 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %38, i64 0, i32 2
  store i8 1, i8* %39, align 2
  br label %40

40:                                               ; preds = %22, %31, %21, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler22MidTierOutputProcessorC2EPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierOutputProcessor"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::ZoneDeque.751", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::Zone"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::ZoneDeque.751"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #12
  %10 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.757"* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.761"* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.755"* %17 to i8*
  %20 = bitcast %"class.std::__1::__compressed_pair.755"* %18 to i8*
  %21 = bitcast %"class.v8::internal::ZoneQueue"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #12
  %22 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0, i32 2
  %26 = bitcast %"class.std::__1::__compressed_pair.760"* %24 to i8*
  %27 = bitcast %"class.std::__1::__compressed_pair.760"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #12
  %28 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #12
  %29 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %3, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.753"* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #12
  %30 = load i64, i64* %7, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.767"* %32 to i64*
  %34 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::__compressed_pair.766"* %34 to i64*
  store i64 0, i64* %35, align 8
  store i64 %30, i64* %33, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %37, %"class.std::__1::__tree_end_node"** %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler22MidTierOutputProcessor27PopulateDeferredBlockRegionENS1_9RpoNumberE(%"class.v8::internal::compiler::MidTierOutputProcessor"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 1
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 3
  %8 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %8, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::ZoneVector.591"** %9 to %"class.std::__1::vector.592"**
  %11 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %11, i64 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.592"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 3
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ult i64 %24, 48
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %2
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 48) #12
  br label %30

28:                                               ; preds = %2
  %29 = add i64 %21, 48
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::DeferredBlocksRegion"*
  %33 = ptrtoint %"class.v8::internal::Zone"* %6 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %36 = bitcast %"struct.std::__1::__compressed_pair_elem.20"* %35 to i64*
  %37 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::__compressed_pair.18"* %37 to i64*
  store i64 0, i64* %38, align 8
  store i64 %33, i64* %36, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %34, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 0
  store i32 %19, i32* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 1
  %43 = icmp slt i32 %19, 65
  br i1 %43, label %44, label %47

44:                                               ; preds = %30
  store i32 1, i32* %42, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 2
  %46 = bitcast %"union.v8::internal::BitVector::DataStorage"* %45 to i64*
  store i64 0, i64* %46, align 8
  br label %84

47:                                               ; preds = %30
  %48 = add nsw i32 %19, -1
  %49 = sdiv i32 %48, 64
  %50 = add nuw nsw i32 %49, 1
  store i32 %50, i32* %42, align 4
  %51 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 2
  %52 = bitcast %"union.v8::internal::BitVector::DataStorage"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = sext i32 %50 to i64
  %54 = shl nsw i64 %53, 3
  %55 = load i64, i64* %20, align 8
  %56 = load i64, i64* %22, align 8
  %57 = sub i64 %56, %55
  %58 = icmp ugt i64 %54, %57
  br i1 %58, label %59, label %61, !prof !2

59:                                               ; preds = %47
  %60 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %54) #12
  br label %63

61:                                               ; preds = %47
  %62 = add i64 %55, %54
  store i64 %62, i64* %20, align 8
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi i64 [ %60, %59 ], [ %55, %61 ]
  %65 = inttoptr i64 %64 to i64*
  %66 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %51, i64 0, i32 0
  store i64* %65, i64** %66, align 8
  %67 = load i32, i32* %42, align 4
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 2, i32 0
  store i64 0, i64* %65, align 8
  %73 = load i32, i32* %42, align 4
  %74 = icmp sgt i32 %73, 1
  br i1 %74, label %76, label %84

75:                                               ; preds = %63
  store i64 0, i64* %52, align 8
  br label %84

76:                                               ; preds = %71, %76
  %77 = phi i64 [ %80, %76 ], [ 1, %71 ]
  %78 = load i64*, i64** %72, align 8
  %79 = getelementptr inbounds i64, i64* %78, i64 %77
  store i64 0, i64* %79, align 8
  %80 = add nuw nsw i64 %77, 1
  %81 = load i32, i32* %42, align 4
  %82 = sext i32 %81 to i64
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %76, label %84

84:                                               ; preds = %76, %44, %69, %71, %75
  %85 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %87 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %88, %91
  %93 = icmp eq i64 %92, 0
  %94 = shl i64 %92, 7
  %95 = add i64 %94, -1
  %96 = select i1 %93, i64 0, i64 %95
  %97 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, %98
  %102 = icmp eq i64 %96, %101
  %103 = inttoptr i64 %91 to %"class.v8::internal::compiler::RpoNumber"**
  %104 = inttoptr i64 %88 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %102, label %105, label %112

105:                                              ; preds = %84
  %106 = getelementptr inbounds %"class.std::__1::queue.750", %"class.std::__1::queue.750"* %85, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.752"* %106) #12
  %107 = load i64, i64* %99, align 8
  %108 = load i64, i64* %97, align 8
  %109 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %89, align 8
  %110 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %86, align 8
  %111 = add i64 %108, %107
  br label %112

112:                                              ; preds = %105, %84
  %113 = phi i64 [ %111, %105 ], [ %101, %84 ]
  %114 = phi %"class.v8::internal::compiler::RpoNumber"** [ %110, %105 ], [ %104, %84 ]
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %109, %105 ], [ %103, %84 ]
  %116 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %114, %115
  br i1 %116, label %123, label %117

117:                                              ; preds = %112
  %118 = lshr i64 %113, 10
  %119 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %115, i64 %118
  %120 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, align 8
  %121 = and i64 %113, 1023
  %122 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %120, i64 %121
  br label %123

123:                                              ; preds = %112, %117
  %124 = phi %"class.v8::internal::compiler::RpoNumber"* [ %122, %117 ], [ null, %112 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %124, i64 0, i32 0
  store i32 %1, i32* %125, align 4
  %126 = load i64, i64* %99, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %99, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0
  %129 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_node.812"**
  %131 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node.812"* %131, null
  br i1 %132, label %161, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %135

135:                                              ; preds = %157, %133
  %136 = phi %"class.std::__1::__tree_node.812"* [ %160, %157 ], [ %131, %133 ]
  %137 = phi %"class.std::__1::__tree_node_base"** [ %159, %157 ], [ %134, %133 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %136, i64 0, i32 1, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %139, %1
  br i1 %140, label %141, label %147

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %136, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %142, align 8
  %144 = icmp eq %"class.std::__1::__tree_node_base"* %143, null
  br i1 %144, label %145, label %157

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %136, i64 0, i32 0, i32 0
  br label %163

147:                                              ; preds = %135
  %148 = icmp slt i32 %139, %1
  br i1 %148, label %149, label %155

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %136, i64 0, i32 0, i32 1
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %136, i64 0, i32 0, i32 0
  br label %163

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %136, i64 0, i32 0, i32 0
  br label %163

157:                                              ; preds = %149, %141
  %158 = phi %"class.std::__1::__tree_node_base"* [ %143, %141 ], [ %151, %149 ]
  %159 = phi %"class.std::__1::__tree_node_base"** [ %142, %141 ], [ %150, %149 ]
  %160 = bitcast %"class.std::__1::__tree_node_base"* %158 to %"class.std::__1::__tree_node.812"*
  br label %135

161:                                              ; preds = %123
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 0, i32 0
  br label %163

163:                                              ; preds = %161, %155, %153, %145
  %164 = phi %"class.std::__1::__tree_end_node"* [ %129, %161 ], [ %146, %145 ], [ %154, %153 ], [ %156, %155 ]
  %165 = phi %"class.std::__1::__tree_node_base"** [ %162, %161 ], [ %142, %145 ], [ %150, %153 ], [ %137, %155 ]
  %166 = bitcast %"class.std::__1::__tree_node_base"** %165 to %"class.std::__1::__tree_node.812"**
  %167 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node.812"* %167, null
  br i1 %168, label %169, label %206

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %171 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %170, align 8, !noalias !24
  %172 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %171, i64 0, i32 2
  %173 = load i64, i64* %172, align 8, !noalias !24
  %174 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %171, i64 0, i32 3
  %175 = load i64, i64* %174, align 8, !noalias !24
  %176 = sub i64 %175, %173
  %177 = icmp ult i64 %176, 32
  br i1 %177, label %178, label %180, !prof !2

178:                                              ; preds = %169
  %179 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %171, i64 32) #12, !noalias !24
  br label %182

180:                                              ; preds = %169
  %181 = add i64 %173, 32
  store i64 %181, i64* %172, align 8, !noalias !24
  br label %182

182:                                              ; preds = %180, %178
  %183 = phi i64 [ %179, %178 ], [ %173, %180 ]
  %184 = inttoptr i64 %183 to %"class.std::__1::__tree_node.812"*
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %184, i64 0, i32 1, i32 0
  store i32 %1, i32* %185, align 4, !noalias !24
  %186 = inttoptr i64 %183 to %"class.std::__1::__tree_node_base"*
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 2
  %188 = inttoptr i64 %183 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %164, %"class.std::__1::__tree_end_node"** %187, align 8
  store %"class.std::__1::__tree_node_base"* %186, %"class.std::__1::__tree_node_base"** %165, align 8
  %189 = getelementptr inbounds %"class.std::__1::set.764", %"class.std::__1::set.764"* %128, i64 0, i32 0, i32 0
  %190 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %189, align 8
  %191 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %190, i64 0, i32 0
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %198, label %194

194:                                              ; preds = %182
  %195 = ptrtoint %"class.std::__1::__tree_node_base"* %192 to i64
  %196 = bitcast %"class.std::__1::set.764"* %128 to i64*
  store i64 %195, i64* %196, align 8
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  br label %198

198:                                              ; preds = %194, %182
  %199 = phi %"class.std::__1::__tree_node_base"* [ %186, %182 ], [ %197, %194 ]
  %200 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %201, %"class.std::__1::__tree_node_base"* %199) #12
  %202 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %202, align 8
  %205 = load i64, i64* %99, align 8
  br label %206

206:                                              ; preds = %163, %198
  %207 = phi i64 [ %127, %163 ], [ %205, %198 ]
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %624, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %211 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %210 to i64*
  %212 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %210 to %"class.v8::internal::compiler::RpoNumber"**
  %213 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 2, i32 0
  %214 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, i64 0, i32 1, i32 2
  %215 = bitcast %"union.v8::internal::BitVector::DataStorage"* %214 to i64*
  %216 = getelementptr inbounds %"class.std::__1::queue.750", %"class.std::__1::queue.750"* %85, i64 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 0, i32 0
  %219 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %220 = getelementptr inbounds %"class.std::__1::set.764", %"class.std::__1::set.764"* %128, i64 0, i32 0, i32 0
  %221 = bitcast %"class.std::__1::set.764"* %128 to i64*
  %222 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %223

223:                                              ; preds = %209, %621
  %224 = phi i64 [ %207, %209 ], [ %622, %621 ]
  %225 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %89, align 8
  %226 = load i64, i64* %97, align 8
  %227 = lshr i64 %226, 10
  %228 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %225, i64 %227
  %229 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %228, align 8
  %230 = and i64 %226, 1023
  %231 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %229, i64 %230, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = add i64 %224, -1
  store i64 %233, i64* %99, align 8
  %234 = add i64 %226, 1
  store i64 %234, i64* %97, align 8
  %235 = icmp ult i64 %234, 2048
  br i1 %235, label %256, label %236

236:                                              ; preds = %223
  %237 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %225, align 8
  %238 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %210, align 8
  %239 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %238, null
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %238, i64 0, i32 1
  %242 = load i64, i64* %241, align 8
  %243 = icmp ugt i64 %242, 1024
  br i1 %243, label %251, label %244

244:                                              ; preds = %240, %236
  %245 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %237, i64 2
  %246 = bitcast %"class.v8::internal::compiler::RpoNumber"* %245 to i64*
  store i64 1024, i64* %246, align 8
  %247 = load i64, i64* %211, align 8
  %248 = bitcast %"class.v8::internal::compiler::RpoNumber"* %237 to i64*
  store i64 %247, i64* %248, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %237, %"class.v8::internal::compiler::RpoNumber"** %212, align 8
  %249 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %89, align 8
  %250 = load i64, i64* %97, align 8
  br label %251

251:                                              ; preds = %244, %240
  %252 = phi i64 [ %234, %240 ], [ %250, %244 ]
  %253 = phi %"class.v8::internal::compiler::RpoNumber"** [ %225, %240 ], [ %249, %244 ]
  %254 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %253, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %254, %"class.v8::internal::compiler::RpoNumber"*** %89, align 8
  %255 = add i64 %252, -1024
  store i64 %255, i64* %97, align 8
  br label %256

256:                                              ; preds = %223, %251
  %257 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %258 = load i32, i32* %42, align 4
  %259 = icmp eq i32 %258, 1
  br i1 %259, label %266, label %260

260:                                              ; preds = %256
  %261 = srem i32 %232, 64
  %262 = load i64*, i64** %213, align 8
  %263 = sdiv i32 %232, 64
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i64, i64* %262, i64 %264
  br label %266

266:                                              ; preds = %256, %260
  %267 = phi i64* [ %265, %260 ], [ %215, %256 ]
  %268 = phi i32 [ %261, %260 ], [ %232, %256 ]
  %269 = zext i32 %268 to i64
  %270 = shl i64 1, %269
  %271 = load i64, i64* %267, align 8
  %272 = or i64 %271, %270
  store i64 %272, i64* %267, align 8
  %273 = sext i32 %232 to i64
  %274 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %257, i64 0, i32 7, i32 0, i32 0, i32 0
  %275 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %275, i64 %273, i32 2
  store %"class.v8::internal::compiler::DeferredBlocksRegion"* %32, %"class.v8::internal::compiler::DeferredBlocksRegion"** %276, align 8
  %277 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %277, i64 0, i32 3
  %279 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %278, align 8
  %280 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %279, i64 0, i32 2
  %281 = bitcast %"class.v8::internal::ZoneVector.591"** %280 to %"class.std::__1::vector.592"**
  %282 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %281, align 8
  %283 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %282, i64 0, i32 0, i32 1
  %284 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector.592"* %282 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = sub i64 %285, %287
  %289 = ashr exact i64 %288, 3
  %290 = icmp ugt i64 %289, %273
  br i1 %290, label %293, label %291

291:                                              ; preds = %266
  %292 = bitcast %"class.std::__1::vector.592"* %282 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %292) #13
  unreachable

293:                                              ; preds = %266
  %294 = inttoptr i64 %287 to %"class.v8::internal::compiler::InstructionBlock"**
  %295 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %294, i64 %273
  %296 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %295, align 8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %296, i64 0, i32 1
  %298 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %296, i64 0, i32 1, i32 0, i32 0, i32 1
  %299 = bitcast %"class.v8::internal::compiler::RpoNumber"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.v8::internal::ZoneVector.594"* %297 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = sub i64 %300, %302
  %304 = icmp eq i64 %303, 4
  %305 = inttoptr i64 %302 to %"class.v8::internal::compiler::RpoNumber"*
  %306 = inttoptr i64 %300 to %"class.v8::internal::compiler::RpoNumber"*
  br i1 %304, label %307, label %324

307:                                              ; preds = %293
  %308 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %305, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = icmp ugt i64 %289, %310
  br i1 %311, label %314, label %312

312:                                              ; preds = %307
  %313 = bitcast %"class.std::__1::vector.592"* %282 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %313) #13
  unreachable

314:                                              ; preds = %307
  %315 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %294, i64 %310
  %316 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %315, align 8
  %317 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %316, i64 0, i32 10
  %318 = load i8, i8* %317, align 4, !range !5
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %324

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %277, i64 0, i32 7, i32 0, i32 0, i32 0
  %322 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %322, i64 %310, i32 5
  store i8 1, i8* %323, align 4
  br label %452

324:                                              ; preds = %293, %314
  %325 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %305, %306
  br i1 %325, label %452, label %326

326:                                              ; preds = %324, %449
  %327 = phi %"class.v8::internal::compiler::RpoNumber"* [ %450, %449 ], [ %305, %324 ]
  %328 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %327, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %130, align 8
  %331 = icmp eq %"class.std::__1::__tree_node.812"* %330, null
  br i1 %331, label %348, label %332

332:                                              ; preds = %326, %344
  %333 = phi %"class.std::__1::__tree_node.812"* [ %346, %344 ], [ %330, %326 ]
  %334 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %333, i64 0, i32 1, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = icmp slt i32 %329, %335
  br i1 %336, label %337, label %339

337:                                              ; preds = %332
  %338 = bitcast %"class.std::__1::__tree_node.812"* %333 to %"class.std::__1::__tree_node.812"**
  br label %344

339:                                              ; preds = %332
  %340 = icmp slt i32 %335, %329
  br i1 %340, label %341, label %449

341:                                              ; preds = %339
  %342 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %333, i64 0, i32 0, i32 1
  %343 = bitcast %"class.std::__1::__tree_node_base"** %342 to %"class.std::__1::__tree_node.812"**
  br label %344

344:                                              ; preds = %341, %337
  %345 = phi %"class.std::__1::__tree_node.812"** [ %338, %337 ], [ %343, %341 ]
  %346 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %345, align 8
  %347 = icmp eq %"class.std::__1::__tree_node.812"* %346, null
  br i1 %347, label %348, label %332

348:                                              ; preds = %344, %326
  %349 = load i64, i64* %87, align 8
  %350 = load i64, i64* %90, align 8
  %351 = sub i64 %349, %350
  %352 = icmp eq i64 %351, 0
  %353 = shl i64 %351, 7
  %354 = add i64 %353, -1
  %355 = select i1 %352, i64 0, i64 %354
  %356 = load i64, i64* %97, align 8
  %357 = load i64, i64* %99, align 8
  %358 = add i64 %357, %356
  %359 = icmp eq i64 %355, %358
  %360 = inttoptr i64 %350 to %"class.v8::internal::compiler::RpoNumber"**
  %361 = inttoptr i64 %349 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %359, label %362, label %368

362:                                              ; preds = %348
  tail call void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.752"* %216) #12
  %363 = load i64, i64* %99, align 8
  %364 = load i64, i64* %97, align 8
  %365 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %89, align 8
  %366 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %86, align 8
  %367 = add i64 %364, %363
  br label %368

368:                                              ; preds = %362, %348
  %369 = phi i64 [ %367, %362 ], [ %358, %348 ]
  %370 = phi %"class.v8::internal::compiler::RpoNumber"** [ %366, %362 ], [ %361, %348 ]
  %371 = phi %"class.v8::internal::compiler::RpoNumber"** [ %365, %362 ], [ %360, %348 ]
  %372 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %370, %371
  br i1 %372, label %379, label %373

373:                                              ; preds = %368
  %374 = lshr i64 %369, 10
  %375 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %371, i64 %374
  %376 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %375, align 8
  %377 = and i64 %369, 1023
  %378 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %376, i64 %377
  br label %379

379:                                              ; preds = %368, %373
  %380 = phi %"class.v8::internal::compiler::RpoNumber"* [ %378, %373 ], [ null, %368 ]
  %381 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %380, i64 0, i32 0
  store i32 %329, i32* %381, align 4
  %382 = load i64, i64* %99, align 8
  %383 = add i64 %382, 1
  store i64 %383, i64* %99, align 8
  %384 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %130, align 8
  %385 = icmp eq %"class.std::__1::__tree_node.812"* %384, null
  br i1 %385, label %412, label %386

386:                                              ; preds = %379, %408
  %387 = phi %"class.std::__1::__tree_node.812"* [ %411, %408 ], [ %384, %379 ]
  %388 = phi %"class.std::__1::__tree_node_base"** [ %410, %408 ], [ %217, %379 ]
  %389 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %387, i64 0, i32 1, i32 0
  %390 = load i32, i32* %389, align 4
  %391 = icmp slt i32 %329, %390
  br i1 %391, label %392, label %398

392:                                              ; preds = %386
  %393 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %387, i64 0, i32 0, i32 0, i32 0
  %394 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %393, align 8
  %395 = icmp eq %"class.std::__1::__tree_node_base"* %394, null
  br i1 %395, label %396, label %408

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %387, i64 0, i32 0, i32 0
  br label %412

398:                                              ; preds = %386
  %399 = icmp slt i32 %390, %329
  br i1 %399, label %400, label %406

400:                                              ; preds = %398
  %401 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %387, i64 0, i32 0, i32 1
  %402 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %401, align 8
  %403 = icmp eq %"class.std::__1::__tree_node_base"* %402, null
  br i1 %403, label %404, label %408

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %387, i64 0, i32 0, i32 0
  br label %412

406:                                              ; preds = %398
  %407 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %387, i64 0, i32 0, i32 0
  br label %412

408:                                              ; preds = %400, %392
  %409 = phi %"class.std::__1::__tree_node_base"* [ %394, %392 ], [ %402, %400 ]
  %410 = phi %"class.std::__1::__tree_node_base"** [ %393, %392 ], [ %401, %400 ]
  %411 = bitcast %"class.std::__1::__tree_node_base"* %409 to %"class.std::__1::__tree_node.812"*
  br label %386

412:                                              ; preds = %379, %406, %404, %396
  %413 = phi %"class.std::__1::__tree_end_node"* [ %397, %396 ], [ %405, %404 ], [ %407, %406 ], [ %129, %379 ]
  %414 = phi %"class.std::__1::__tree_node_base"** [ %393, %396 ], [ %401, %404 ], [ %388, %406 ], [ %218, %379 ]
  %415 = bitcast %"class.std::__1::__tree_node_base"** %414 to %"class.std::__1::__tree_node.812"**
  %416 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %415, align 8
  %417 = icmp eq %"class.std::__1::__tree_node.812"* %416, null
  br i1 %417, label %418, label %449

418:                                              ; preds = %412
  %419 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %219, align 8, !noalias !27
  %420 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %419, i64 0, i32 2
  %421 = load i64, i64* %420, align 8, !noalias !27
  %422 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %419, i64 0, i32 3
  %423 = load i64, i64* %422, align 8, !noalias !27
  %424 = sub i64 %423, %421
  %425 = icmp ult i64 %424, 32
  br i1 %425, label %426, label %428, !prof !2

426:                                              ; preds = %418
  %427 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %419, i64 32) #12, !noalias !27
  br label %430

428:                                              ; preds = %418
  %429 = add i64 %421, 32
  store i64 %429, i64* %420, align 8, !noalias !27
  br label %430

430:                                              ; preds = %428, %426
  %431 = phi i64 [ %427, %426 ], [ %421, %428 ]
  %432 = inttoptr i64 %431 to %"class.std::__1::__tree_node.812"*
  %433 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %432, i64 0, i32 1, i32 0
  store i32 %329, i32* %433, align 4, !noalias !27
  %434 = inttoptr i64 %431 to %"class.std::__1::__tree_node_base"*
  %435 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %434, i64 0, i32 2
  %436 = inttoptr i64 %431 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %436, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %413, %"class.std::__1::__tree_end_node"** %435, align 8
  store %"class.std::__1::__tree_node_base"* %434, %"class.std::__1::__tree_node_base"** %414, align 8
  %437 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %220, align 8
  %438 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %437, i64 0, i32 0
  %439 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %438, align 8
  %440 = icmp eq %"class.std::__1::__tree_node_base"* %439, null
  br i1 %440, label %444, label %441

441:                                              ; preds = %430
  %442 = ptrtoint %"class.std::__1::__tree_node_base"* %439 to i64
  store i64 %442, i64* %221, align 8
  %443 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %414, align 8
  br label %444

444:                                              ; preds = %441, %430
  %445 = phi %"class.std::__1::__tree_node_base"* [ %434, %430 ], [ %443, %441 ]
  %446 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %446, %"class.std::__1::__tree_node_base"* %445) #12
  %447 = load i64, i64* %222, align 8
  %448 = add i64 %447, 1
  store i64 %448, i64* %222, align 8
  br label %449

449:                                              ; preds = %339, %444, %412
  %450 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %327, i64 1
  %451 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %450, %306
  br i1 %451, label %452, label %326

452:                                              ; preds = %449, %324, %320
  %453 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %296, i64 0, i32 0, i32 0, i32 0, i32 1
  %454 = bitcast %"class.v8::internal::compiler::RpoNumber"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::InstructionBlock"* %296 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = sub i64 %455, %457
  %459 = icmp eq i64 %458, 4
  %460 = inttoptr i64 %457 to %"class.v8::internal::compiler::RpoNumber"*
  %461 = inttoptr i64 %455 to %"class.v8::internal::compiler::RpoNumber"*
  br i1 %459, label %462, label %493

462:                                              ; preds = %452
  %463 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %464 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %460, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  %466 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %463, i64 0, i32 3
  %467 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %466, align 8
  %468 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %467, i64 0, i32 2
  %469 = bitcast %"class.v8::internal::ZoneVector.591"** %468 to %"class.std::__1::vector.592"**
  %470 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %469, align 8
  %471 = sext i32 %465 to i64
  %472 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %470, i64 0, i32 0, i32 1
  %473 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = bitcast %"class.std::__1::vector.592"* %470 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = sub i64 %474, %476
  %478 = ashr exact i64 %477, 3
  %479 = icmp ugt i64 %478, %471
  br i1 %479, label %482, label %480

480:                                              ; preds = %462
  %481 = bitcast %"class.std::__1::vector.592"* %470 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %481) #13
  unreachable

482:                                              ; preds = %462
  %483 = inttoptr i64 %476 to %"class.v8::internal::compiler::InstructionBlock"**
  %484 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %483, i64 %471
  %485 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %484, align 8
  %486 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %485, i64 0, i32 10
  %487 = load i8, i8* %486, align 4, !range !5
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %489, label %493

489:                                              ; preds = %482
  %490 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %463, i64 0, i32 7, i32 0, i32 0, i32 0
  %491 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %490, align 8
  %492 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %491, i64 %273, i32 5
  store i8 1, i8* %492, align 4
  br label %621

493:                                              ; preds = %452, %482
  %494 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %460, %461
  br i1 %494, label %621, label %495

495:                                              ; preds = %493, %618
  %496 = phi %"class.v8::internal::compiler::RpoNumber"* [ %619, %618 ], [ %460, %493 ]
  %497 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %496, i64 0, i32 0
  %498 = load i32, i32* %497, align 4
  %499 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %130, align 8
  %500 = icmp eq %"class.std::__1::__tree_node.812"* %499, null
  br i1 %500, label %517, label %501

501:                                              ; preds = %495, %513
  %502 = phi %"class.std::__1::__tree_node.812"* [ %515, %513 ], [ %499, %495 ]
  %503 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %502, i64 0, i32 1, i32 0
  %504 = load i32, i32* %503, align 4
  %505 = icmp slt i32 %498, %504
  br i1 %505, label %506, label %508

506:                                              ; preds = %501
  %507 = bitcast %"class.std::__1::__tree_node.812"* %502 to %"class.std::__1::__tree_node.812"**
  br label %513

508:                                              ; preds = %501
  %509 = icmp slt i32 %504, %498
  br i1 %509, label %510, label %618

510:                                              ; preds = %508
  %511 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %502, i64 0, i32 0, i32 1
  %512 = bitcast %"class.std::__1::__tree_node_base"** %511 to %"class.std::__1::__tree_node.812"**
  br label %513

513:                                              ; preds = %510, %506
  %514 = phi %"class.std::__1::__tree_node.812"** [ %507, %506 ], [ %512, %510 ]
  %515 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %514, align 8
  %516 = icmp eq %"class.std::__1::__tree_node.812"* %515, null
  br i1 %516, label %517, label %501

517:                                              ; preds = %513, %495
  %518 = load i64, i64* %87, align 8
  %519 = load i64, i64* %90, align 8
  %520 = sub i64 %518, %519
  %521 = icmp eq i64 %520, 0
  %522 = shl i64 %520, 7
  %523 = add i64 %522, -1
  %524 = select i1 %521, i64 0, i64 %523
  %525 = load i64, i64* %97, align 8
  %526 = load i64, i64* %99, align 8
  %527 = add i64 %526, %525
  %528 = icmp eq i64 %524, %527
  %529 = inttoptr i64 %519 to %"class.v8::internal::compiler::RpoNumber"**
  %530 = inttoptr i64 %518 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %528, label %531, label %537

531:                                              ; preds = %517
  tail call void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.752"* %216) #12
  %532 = load i64, i64* %99, align 8
  %533 = load i64, i64* %97, align 8
  %534 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %89, align 8
  %535 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %86, align 8
  %536 = add i64 %533, %532
  br label %537

537:                                              ; preds = %531, %517
  %538 = phi i64 [ %536, %531 ], [ %527, %517 ]
  %539 = phi %"class.v8::internal::compiler::RpoNumber"** [ %535, %531 ], [ %530, %517 ]
  %540 = phi %"class.v8::internal::compiler::RpoNumber"** [ %534, %531 ], [ %529, %517 ]
  %541 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %539, %540
  br i1 %541, label %548, label %542

542:                                              ; preds = %537
  %543 = lshr i64 %538, 10
  %544 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %540, i64 %543
  %545 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %544, align 8
  %546 = and i64 %538, 1023
  %547 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %545, i64 %546
  br label %548

548:                                              ; preds = %537, %542
  %549 = phi %"class.v8::internal::compiler::RpoNumber"* [ %547, %542 ], [ null, %537 ]
  %550 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %549, i64 0, i32 0
  store i32 %498, i32* %550, align 4
  %551 = load i64, i64* %99, align 8
  %552 = add i64 %551, 1
  store i64 %552, i64* %99, align 8
  %553 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %130, align 8
  %554 = icmp eq %"class.std::__1::__tree_node.812"* %553, null
  br i1 %554, label %581, label %555

555:                                              ; preds = %548, %577
  %556 = phi %"class.std::__1::__tree_node.812"* [ %580, %577 ], [ %553, %548 ]
  %557 = phi %"class.std::__1::__tree_node_base"** [ %579, %577 ], [ %217, %548 ]
  %558 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %556, i64 0, i32 1, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = icmp slt i32 %498, %559
  br i1 %560, label %561, label %567

561:                                              ; preds = %555
  %562 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %556, i64 0, i32 0, i32 0, i32 0
  %563 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %562, align 8
  %564 = icmp eq %"class.std::__1::__tree_node_base"* %563, null
  br i1 %564, label %565, label %577

565:                                              ; preds = %561
  %566 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %556, i64 0, i32 0, i32 0
  br label %581

567:                                              ; preds = %555
  %568 = icmp slt i32 %559, %498
  br i1 %568, label %569, label %575

569:                                              ; preds = %567
  %570 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %556, i64 0, i32 0, i32 1
  %571 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %570, align 8
  %572 = icmp eq %"class.std::__1::__tree_node_base"* %571, null
  br i1 %572, label %573, label %577

573:                                              ; preds = %569
  %574 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %556, i64 0, i32 0, i32 0
  br label %581

575:                                              ; preds = %567
  %576 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %556, i64 0, i32 0, i32 0
  br label %581

577:                                              ; preds = %569, %561
  %578 = phi %"class.std::__1::__tree_node_base"* [ %563, %561 ], [ %571, %569 ]
  %579 = phi %"class.std::__1::__tree_node_base"** [ %562, %561 ], [ %570, %569 ]
  %580 = bitcast %"class.std::__1::__tree_node_base"* %578 to %"class.std::__1::__tree_node.812"*
  br label %555

581:                                              ; preds = %548, %575, %573, %565
  %582 = phi %"class.std::__1::__tree_end_node"* [ %566, %565 ], [ %574, %573 ], [ %576, %575 ], [ %129, %548 ]
  %583 = phi %"class.std::__1::__tree_node_base"** [ %562, %565 ], [ %570, %573 ], [ %557, %575 ], [ %218, %548 ]
  %584 = bitcast %"class.std::__1::__tree_node_base"** %583 to %"class.std::__1::__tree_node.812"**
  %585 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %584, align 8
  %586 = icmp eq %"class.std::__1::__tree_node.812"* %585, null
  br i1 %586, label %587, label %618

587:                                              ; preds = %581
  %588 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %219, align 8, !noalias !30
  %589 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %588, i64 0, i32 2
  %590 = load i64, i64* %589, align 8, !noalias !30
  %591 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %588, i64 0, i32 3
  %592 = load i64, i64* %591, align 8, !noalias !30
  %593 = sub i64 %592, %590
  %594 = icmp ult i64 %593, 32
  br i1 %594, label %595, label %597, !prof !2

595:                                              ; preds = %587
  %596 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %588, i64 32) #12, !noalias !30
  br label %599

597:                                              ; preds = %587
  %598 = add i64 %590, 32
  store i64 %598, i64* %589, align 8, !noalias !30
  br label %599

599:                                              ; preds = %597, %595
  %600 = phi i64 [ %596, %595 ], [ %590, %597 ]
  %601 = inttoptr i64 %600 to %"class.std::__1::__tree_node.812"*
  %602 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %601, i64 0, i32 1, i32 0
  store i32 %498, i32* %602, align 4, !noalias !30
  %603 = inttoptr i64 %600 to %"class.std::__1::__tree_node_base"*
  %604 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %603, i64 0, i32 2
  %605 = inttoptr i64 %600 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %605, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %582, %"class.std::__1::__tree_end_node"** %604, align 8
  store %"class.std::__1::__tree_node_base"* %603, %"class.std::__1::__tree_node_base"** %583, align 8
  %606 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %220, align 8
  %607 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %606, i64 0, i32 0
  %608 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %607, align 8
  %609 = icmp eq %"class.std::__1::__tree_node_base"* %608, null
  br i1 %609, label %613, label %610

610:                                              ; preds = %599
  %611 = ptrtoint %"class.std::__1::__tree_node_base"* %608 to i64
  store i64 %611, i64* %221, align 8
  %612 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %583, align 8
  br label %613

613:                                              ; preds = %610, %599
  %614 = phi %"class.std::__1::__tree_node_base"* [ %603, %599 ], [ %612, %610 ]
  %615 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %615, %"class.std::__1::__tree_node_base"* %614) #12
  %616 = load i64, i64* %222, align 8
  %617 = add i64 %616, 1
  store i64 %617, i64* %222, align 8
  br label %618

618:                                              ; preds = %508, %613, %581
  %619 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %496, i64 1
  %620 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %619, %461
  br i1 %620, label %621, label %495

621:                                              ; preds = %618, %493, %489
  %622 = load i64, i64* %99, align 8
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %223

624:                                              ; preds = %621, %206
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler22MidTierOutputProcessor20InitializeBlockStateEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierOutputProcessor"*, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::PhiInstruction"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.602"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %42, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::compiler::RpoNumber"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.595"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 2
  %19 = trunc i64 %18 to i32
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 0
  br label %23

23:                                               ; preds = %21, %23
  %24 = phi i64 [ %16, %21 ], [ %37, %23 ]
  %25 = phi i64 [ 0, %21 ], [ %35, %23 ]
  %26 = inttoptr i64 %24 to %"class.v8::internal::compiler::RpoNumber"*
  %27 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %22, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %26, i64 %25, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %27, i64 0, i32 7, i32 0, i32 0, i32 0
  %32 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %32, i64 %30, i32 4
  %34 = trunc i64 %25 to i32
  store i32 %34, i32* %33, align 8
  %35 = add nuw nsw i64 %25, 1
  %36 = load i64, i64* %13, align 8
  %37 = load i64, i64* %15, align 8
  %38 = sub i64 %36, %37
  %39 = shl i64 %38, 30
  %40 = ashr i64 %39, 32
  %41 = icmp slt i64 %35, %40
  br i1 %41, label %23, label %42

42:                                               ; preds = %23, %10, %2
  %43 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 0
  %44 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %44, i64 0, i32 7, i32 0, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %51 = load i8, i8* %50, align 4, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %49, i64 %47, i32 2
  %55 = load %"class.v8::internal::compiler::DeferredBlocksRegion"*, %"class.v8::internal::compiler::DeferredBlocksRegion"** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::DeferredBlocksRegion"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  tail call void @_ZN2v88internal8compiler22MidTierOutputProcessor27PopulateDeferredBlockRegionENS1_9RpoNumberE(%"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i32 %46)
  %58 = load i32, i32* %45, align 4
  br label %59

59:                                               ; preds = %42, %53, %57
  %60 = phi i32 [ %46, %42 ], [ %46, %53 ], [ %58, %57 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %49, i64 %47, i32 3, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %49, i64 %47, i32 3, i32 2
  %66 = bitcast %"union.v8::internal::BitVector::DataStorage"* %65 to i64*
  br label %74

67:                                               ; preds = %59
  %68 = srem i32 %60, 64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %49, i64 %47, i32 3, i32 2, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = sdiv i32 %60, 64
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i64, i64* %70, i64 %72
  br label %74

74:                                               ; preds = %64, %67
  %75 = phi i64* [ %66, %64 ], [ %73, %67 ]
  %76 = phi i32 [ %60, %64 ], [ %68, %67 ]
  %77 = zext i32 %76 to i64
  %78 = shl i64 1, %77
  %79 = load i64, i64* %75, align 8
  %80 = or i64 %79, %78
  store i64 %80, i64* %75, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 7, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = icmp sgt i32 %82, -1
  br i1 %83, label %84, label %118

84:                                               ; preds = %74
  %85 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %43, align 8
  %86 = sext i32 %82 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %85, i64 0, i32 7, i32 0, i32 0, i32 0
  %88 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %88, i64 %86, i32 3, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %97, label %92

92:                                               ; preds = %84
  %93 = icmp sgt i32 %90, 0
  br i1 %93, label %94, label %118

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %49, i64 %47, i32 3, i32 2, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %88, i64 %86, i32 3, i32 2, i32 0
  br label %105

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %49, i64 %47, i32 3, i32 2
  %99 = bitcast %"union.v8::internal::BitVector::DataStorage"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %88, i64 %86, i32 3, i32 2
  %102 = bitcast %"union.v8::internal::BitVector::DataStorage"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = or i64 %103, %100
  store i64 %104, i64* %102, align 8
  br label %118

105:                                              ; preds = %105, %94
  %106 = phi i64 [ 0, %94 ], [ %114, %105 ]
  %107 = load i64*, i64** %95, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %106
  %109 = load i64, i64* %108, align 8
  %110 = load i64*, i64** %96, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 %106
  %112 = load i64, i64* %111, align 8
  %113 = or i64 %112, %109
  store i64 %113, i64* %111, align 8
  %114 = add nuw nsw i64 %106, 1
  %115 = load i32, i32* %89, align 4
  %116 = sext i32 %115 to i64
  %117 = icmp slt i64 %114, %116
  br i1 %117, label %105, label %118

118:                                              ; preds = %105, %97, %92, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler22MidTierOutputProcessor13DefineOutputsEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierOutputProcessor"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %6 = load i8, i8* %5, align 4, !range !5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %4
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 0
  %12 = shl nuw nsw i8 %6, 2
  %13 = sext i32 %8 to i64
  %14 = sext i32 %4 to i64
  br label %24

15:                                               ; preds = %392, %2
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %19 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %17, %19
  br i1 %20, label %394, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %0, i64 0, i32 0
  %23 = shl nuw nsw i8 %6, 2
  br label %395

24:                                               ; preds = %10, %392
  %25 = phi i64 [ %13, %10 ], [ %26, %392 ]
  %26 = add nsw i64 %25, -1
  %27 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %27, i64 0, i32 3
  %29 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %29, i64 0, i32 8, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %26
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %29, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %34 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %33, align 8
  %35 = lshr i64 %32, 9
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %34, i64 %35
  %37 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %36, align 8
  %38 = and i64 %32, 511
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %37, i64 %38
  %40 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 255
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %40, i64 0, i32 0
  %47 = trunc i64 %26 to i32
  %48 = trunc i64 %26 to i32
  %49 = trunc i64 %26 to i32
  br label %54

50:                                               ; preds = %154, %24
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %40, i64 0, i32 3
  %52 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %51, align 8
  %53 = icmp eq %"class.v8::internal::compiler::ReferenceMap"* %52, null
  br i1 %53, label %392, label %168

54:                                               ; preds = %164, %45
  %55 = phi %"class.v8::internal::compiler::InstructionSequence"* [ %29, %45 ], [ %167, %164 ]
  %56 = phi i64 [ 0, %45 ], [ %159, %164 ]
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %40, i64 0, i32 5, i64 %56
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 7
  %61 = icmp eq i64 %60, 2
  %62 = lshr i64 %59, 3
  %63 = trunc i64 %62 to i32
  %64 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %55, i32 %63) #12
  br i1 %61, label %65, label %83

65:                                               ; preds = %54
  %66 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %67 = shl i64 %62, 32
  %68 = ashr exact i64 %67, 32
  %69 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %66, i64 0, i32 6, i32 0, i32 0, i32 0
  %70 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %69, align 8
  %71 = load i64, i64* %58, align 8
  %72 = lshr i64 %71, 3
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %70, i64 %68, i32 3
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %70, i64 %68, i32 4
  store i8 %64, i8* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %70, i64 %68, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %57, %"class.v8::internal::compiler::InstructionOperand"** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %70, i64 %68, i32 1
  store %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* null, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %70, i64 %68, i32 2
  store i32 %49, i32* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %70, i64 %68, i32 5
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, -32
  %82 = or i8 %12, %81
  br label %154

83:                                               ; preds = %54
  %84 = load i32, i32* %46, align 8
  %85 = and i32 %84, 511
  %86 = icmp ult i32 %85, 7
  %87 = and i32 %84, 8388608
  %88 = icmp ne i32 %87, 0
  %89 = and i1 %86, %88
  %90 = load i64, i64* %58, align 8
  %91 = and i64 %90, 34359738368
  %92 = icmp eq i64 %91, 0
  %93 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  br i1 %92, label %94, label %138

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %93, i64 0, i32 1
  %96 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %95, align 8
  %97 = ashr i64 %90, 36
  %98 = zext i8 %64 to i64
  %99 = shl nuw nsw i64 %98, 5
  %100 = shl nsw i64 %97, 35
  %101 = or i64 %99, %100
  %102 = or i64 %101, 13
  %103 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %96, i64 0, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %96, i64 0, i32 3
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %106, %104
  %108 = icmp ult i64 %107, 8
  br i1 %108, label %109, label %111, !prof !2

109:                                              ; preds = %94
  %110 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %96, i64 8) #12
  br label %113

111:                                              ; preds = %94
  %112 = add i64 %104, 8
  store i64 %112, i64* %103, align 8
  br label %113

113:                                              ; preds = %109, %111
  %114 = phi i64 [ %110, %109 ], [ %104, %111 ]
  %115 = inttoptr i64 %114 to %"class.v8::internal::compiler::AllocatedOperand"*
  %116 = inttoptr i64 %114 to i64*
  store i64 %102, i64* %116, align 8
  %117 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %118 = shl i64 %62, 32
  %119 = ashr exact i64 %118, 32
  %120 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %117, i64 0, i32 6, i32 0, i32 0, i32 0
  %121 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %115, i64 0, i32 0, i32 0
  %123 = zext i1 %89 to i8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %121, i64 %119, i32 3
  store i32 %63, i32* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %121, i64 %119, i32 4
  store i8 %64, i8* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %121, i64 %119, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %122, %"class.v8::internal::compiler::InstructionOperand"** %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %121, i64 %119, i32 1
  store %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* null, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %121, i64 %119, i32 2
  store i32 %48, i32* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %121, i64 %119, i32 5
  %130 = load i8, i8* %129, align 1
  %131 = and i8 %130, -32
  %132 = icmp ne i64 %114, 0
  %133 = zext i1 %132 to i8
  %134 = shl nuw nsw i8 %133, 3
  %135 = shl nuw nsw i8 %123, 4
  %136 = or i8 %135, %12
  %137 = or i8 %136, %134
  br label %154

138:                                              ; preds = %83
  %139 = shl i64 %62, 32
  %140 = ashr exact i64 %139, 32
  %141 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %93, i64 0, i32 6, i32 0, i32 0, i32 0
  %142 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %142, i64 %140
  %144 = zext i1 %89 to i8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %142, i64 %140, i32 3
  store i32 %63, i32* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %142, i64 %140, i32 4
  store i8 %64, i8* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %142, i64 %140, i32 2
  %148 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %143 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #12
  store i32 %47, i32* %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %142, i64 %140, i32 5
  %150 = load i8, i8* %149, align 1
  %151 = and i8 %150, -32
  %152 = shl nuw nsw i8 %144, 4
  %153 = or i8 %152, %12
  br label %154

154:                                              ; preds = %113, %138, %65
  %155 = phi i8 [ %131, %113 ], [ %151, %138 ], [ 2, %65 ]
  %156 = phi i8 [ %137, %113 ], [ %153, %138 ], [ %82, %65 ]
  %157 = phi i8* [ %129, %113 ], [ %149, %138 ], [ %79, %65 ]
  %158 = or i8 %156, %155
  store i8 %158, i8* %157, align 1
  %159 = add nuw nsw i64 %56, 1
  %160 = load i32, i32* %41, align 4
  %161 = and i32 %160, 255
  %162 = zext i32 %161 to i64
  %163 = icmp ult i64 %159, %162
  br i1 %163, label %164, label %50

164:                                              ; preds = %154
  %165 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %165, i64 0, i32 3
  %167 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %166, align 8
  br label %54

168:                                              ; preds = %50
  %169 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %11, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %169, i64 0, i32 8, i32 0
  %171 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %169, i64 0, i32 8, i32 0, i32 0, i32 1
  %172 = load i32*, i32** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %169, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %174 = load i32*, i32** %173, align 8
  %175 = icmp eq i32* %172, %174
  %176 = ptrtoint i32* %174 to i64
  br i1 %175, label %182, label %177

177:                                              ; preds = %168
  %178 = trunc i64 %26 to i32
  store i32 %178, i32* %172, align 4
  %179 = getelementptr inbounds i32, i32* %172, i64 1
  %180 = ptrtoint i32* %179 to i64
  %181 = bitcast i32** %171 to i64*
  store i64 %180, i64* %181, align 8
  br label %392

182:                                              ; preds = %168
  %183 = ptrtoint i32* %172 to i64
  %184 = bitcast i32** %171 to i64*
  %185 = bitcast %"class.std::__1::vector.605"* %170 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %183, %186
  %188 = ashr exact i64 %187, 2
  %189 = add nsw i64 %188, 1
  %190 = icmp ugt i64 %189, 536870911
  br i1 %190, label %191, label %193

191:                                              ; preds = %182
  %192 = bitcast %"class.std::__1::vector.605"* %170 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %192) #13
  unreachable

193:                                              ; preds = %182
  %194 = bitcast i32** %173 to i64*
  %195 = sub i64 %176, %186
  %196 = ashr exact i64 %195, 2
  %197 = icmp ult i64 %196, 268435455
  br i1 %197, label %198, label %203

198:                                              ; preds = %193
  %199 = ashr exact i64 %195, 1
  %200 = icmp ult i64 %199, %189
  %201 = select i1 %200, i64 %189, i64 %199
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %223, label %203

203:                                              ; preds = %198, %193
  %204 = phi i64 [ %201, %198 ], [ 536870911, %193 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %169, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %206 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %205, align 8
  %207 = shl i64 %204, 2
  %208 = add i64 %207, 7
  %209 = and i64 %208, -8
  %210 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %206, i64 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %206, i64 0, i32 3
  %213 = load i64, i64* %212, align 8
  %214 = sub i64 %213, %211
  %215 = icmp ugt i64 %209, %214
  br i1 %215, label %216, label %218, !prof !2

216:                                              ; preds = %203
  %217 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %206, i64 %209) #12
  br label %220

218:                                              ; preds = %203
  %219 = add i64 %209, %211
  store i64 %219, i64* %210, align 8
  br label %220

220:                                              ; preds = %218, %216
  %221 = phi i64 [ %217, %216 ], [ %211, %218 ]
  %222 = inttoptr i64 %221 to i32*
  br label %223

223:                                              ; preds = %220, %198
  %224 = phi i64 [ %204, %220 ], [ 0, %198 ]
  %225 = phi i32* [ %222, %220 ], [ null, %198 ]
  %226 = getelementptr inbounds i32, i32* %225, i64 %188
  %227 = getelementptr inbounds i32, i32* %225, i64 %224
  %228 = ptrtoint i32* %227 to i64
  %229 = trunc i64 %26 to i32
  store i32 %229, i32* %226, align 4
  %230 = getelementptr inbounds i32, i32* %226, i64 1
  %231 = ptrtoint i32* %230 to i64
  %232 = getelementptr inbounds %"class.std::__1::vector.605", %"class.std::__1::vector.605"* %170, i64 0, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = ptrtoint i32* %233 to i64
  %235 = load i32*, i32** %171, align 8
  %236 = icmp eq i32* %235, %233
  br i1 %236, label %389, label %237

237:                                              ; preds = %223
  %238 = getelementptr i32, i32* %235, i64 -1
  %239 = ptrtoint i32* %238 to i64
  %240 = sub i64 %239, %234
  %241 = lshr i64 %240, 2
  %242 = add nuw nsw i64 %241, 1
  %243 = icmp ult i64 %242, 8
  br i1 %243, label %337, label %244

244:                                              ; preds = %237
  %245 = getelementptr i32, i32* %225, i64 -1
  %246 = getelementptr i32, i32* %235, i64 -1
  %247 = ptrtoint i32* %246 to i64
  %248 = sub i64 %247, %234
  %249 = lshr i64 %248, 2
  %250 = sub nsw i64 %188, %249
  %251 = getelementptr i32, i32* %245, i64 %250
  %252 = getelementptr i32, i32* %235, i64 -1
  %253 = sub nsw i64 0, %249
  %254 = getelementptr i32, i32* %252, i64 %253
  %255 = icmp ult i32* %251, %235
  %256 = icmp ult i32* %254, %226
  %257 = and i1 %255, %256
  br i1 %257, label %337, label %258

258:                                              ; preds = %244
  %259 = and i64 %242, 9223372036854775800
  %260 = sub nsw i64 0, %259
  %261 = getelementptr i32, i32* %226, i64 %260
  %262 = sub nsw i64 0, %259
  %263 = getelementptr i32, i32* %235, i64 %262
  %264 = add nsw i64 %259, -8
  %265 = lshr exact i64 %264, 3
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 1
  %268 = icmp eq i64 %264, 0
  br i1 %268, label %313, label %269

269:                                              ; preds = %258
  %270 = sub nuw nsw i64 %266, %267
  %271 = getelementptr i32, i32* %226, i64 -1
  %272 = getelementptr i32, i32* %235, i64 -1
  %273 = getelementptr i32, i32* %226, i64 -1
  %274 = getelementptr i32, i32* %235, i64 -1
  br label %275

275:                                              ; preds = %275, %269
  %276 = phi i64 [ 0, %269 ], [ %310, %275 ]
  %277 = phi i64 [ %270, %269 ], [ %311, %275 ]
  %278 = sub i64 0, %276
  %279 = sub i64 0, %276
  %280 = getelementptr inbounds i32, i32* %271, i64 %278
  %281 = getelementptr inbounds i32, i32* %272, i64 %279
  %282 = getelementptr inbounds i32, i32* %281, i64 -3
  %283 = bitcast i32* %282 to <4 x i32>*
  %284 = load <4 x i32>, <4 x i32>* %283, align 4, !alias.scope !33
  %285 = getelementptr inbounds i32, i32* %281, i64 -4
  %286 = getelementptr inbounds i32, i32* %285, i64 -3
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !33
  %289 = getelementptr inbounds i32, i32* %280, i64 -3
  %290 = bitcast i32* %289 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %290, align 4, !alias.scope !36, !noalias !33
  %291 = getelementptr inbounds i32, i32* %280, i64 -4
  %292 = getelementptr inbounds i32, i32* %291, i64 -3
  %293 = bitcast i32* %292 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %293, align 4, !alias.scope !36, !noalias !33
  %294 = sub nuw nsw i64 -8, %276
  %295 = sub nuw nsw i64 -8, %276
  %296 = getelementptr inbounds i32, i32* %273, i64 %294
  %297 = getelementptr inbounds i32, i32* %274, i64 %295
  %298 = getelementptr inbounds i32, i32* %297, i64 -3
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4, !alias.scope !33
  %301 = getelementptr inbounds i32, i32* %297, i64 -4
  %302 = getelementptr inbounds i32, i32* %301, i64 -3
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !33
  %305 = getelementptr inbounds i32, i32* %296, i64 -3
  %306 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %300, <4 x i32>* %306, align 4, !alias.scope !36, !noalias !33
  %307 = getelementptr inbounds i32, i32* %296, i64 -4
  %308 = getelementptr inbounds i32, i32* %307, i64 -3
  %309 = bitcast i32* %308 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %309, align 4, !alias.scope !36, !noalias !33
  %310 = add i64 %276, 16
  %311 = add i64 %277, -2
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %275, !llvm.loop !38

313:                                              ; preds = %275, %258
  %314 = phi i64 [ 0, %258 ], [ %310, %275 ]
  %315 = icmp eq i64 %267, 0
  br i1 %315, label %335, label %316

316:                                              ; preds = %313
  %317 = sub i64 0, %314
  %318 = getelementptr i32, i32* %226, i64 -1
  %319 = sub i64 0, %314
  %320 = getelementptr i32, i32* %235, i64 -1
  %321 = getelementptr inbounds i32, i32* %318, i64 %317
  %322 = getelementptr inbounds i32, i32* %320, i64 %319
  %323 = getelementptr inbounds i32, i32* %322, i64 -3
  %324 = bitcast i32* %323 to <4 x i32>*
  %325 = load <4 x i32>, <4 x i32>* %324, align 4, !alias.scope !33
  %326 = getelementptr inbounds i32, i32* %322, i64 -4
  %327 = getelementptr inbounds i32, i32* %326, i64 -3
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4, !alias.scope !33
  %330 = getelementptr inbounds i32, i32* %321, i64 -3
  %331 = bitcast i32* %330 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %331, align 4, !alias.scope !36, !noalias !33
  %332 = getelementptr inbounds i32, i32* %321, i64 -4
  %333 = getelementptr inbounds i32, i32* %332, i64 -3
  %334 = bitcast i32* %333 to <4 x i32>*
  store <4 x i32> %329, <4 x i32>* %334, align 4, !alias.scope !36, !noalias !33
  br label %335

335:                                              ; preds = %313, %316
  %336 = icmp eq i64 %242, %259
  br i1 %336, label %389, label %337

337:                                              ; preds = %335, %244, %237
  %338 = phi i32* [ %226, %244 ], [ %226, %237 ], [ %261, %335 ]
  %339 = phi i32* [ %235, %244 ], [ %235, %237 ], [ %263, %335 ]
  %340 = getelementptr i32, i32* %339, i64 -1
  %341 = ptrtoint i32* %340 to i64
  %342 = sub i64 %341, %234
  %343 = lshr i64 %342, 2
  %344 = add nuw nsw i64 %343, 1
  %345 = and i64 %344, 7
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %356, label %347

347:                                              ; preds = %337, %347
  %348 = phi i32* [ %351, %347 ], [ %338, %337 ]
  %349 = phi i32* [ %352, %347 ], [ %339, %337 ]
  %350 = phi i64 [ %354, %347 ], [ %345, %337 ]
  %351 = getelementptr inbounds i32, i32* %348, i64 -1
  %352 = getelementptr inbounds i32, i32* %349, i64 -1
  %353 = load i32, i32* %352, align 4
  store i32 %353, i32* %351, align 4
  %354 = add i64 %350, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %347, !llvm.loop !39

356:                                              ; preds = %347, %337
  %357 = phi i32* [ undef, %337 ], [ %351, %347 ]
  %358 = phi i32* [ %338, %337 ], [ %351, %347 ]
  %359 = phi i32* [ %339, %337 ], [ %352, %347 ]
  %360 = icmp ult i64 %342, 28
  br i1 %360, label %389, label %361

361:                                              ; preds = %356, %361
  %362 = phi i32* [ %385, %361 ], [ %358, %356 ]
  %363 = phi i32* [ %386, %361 ], [ %359, %356 ]
  %364 = getelementptr inbounds i32, i32* %362, i64 -1
  %365 = getelementptr inbounds i32, i32* %363, i64 -1
  %366 = load i32, i32* %365, align 4
  store i32 %366, i32* %364, align 4
  %367 = getelementptr inbounds i32, i32* %362, i64 -2
  %368 = getelementptr inbounds i32, i32* %363, i64 -2
  %369 = load i32, i32* %368, align 4
  store i32 %369, i32* %367, align 4
  %370 = getelementptr inbounds i32, i32* %362, i64 -3
  %371 = getelementptr inbounds i32, i32* %363, i64 -3
  %372 = load i32, i32* %371, align 4
  store i32 %372, i32* %370, align 4
  %373 = getelementptr inbounds i32, i32* %362, i64 -4
  %374 = getelementptr inbounds i32, i32* %363, i64 -4
  %375 = load i32, i32* %374, align 4
  store i32 %375, i32* %373, align 4
  %376 = getelementptr inbounds i32, i32* %362, i64 -5
  %377 = getelementptr inbounds i32, i32* %363, i64 -5
  %378 = load i32, i32* %377, align 4
  store i32 %378, i32* %376, align 4
  %379 = getelementptr inbounds i32, i32* %362, i64 -6
  %380 = getelementptr inbounds i32, i32* %363, i64 -6
  %381 = load i32, i32* %380, align 4
  store i32 %381, i32* %379, align 4
  %382 = getelementptr inbounds i32, i32* %362, i64 -7
  %383 = getelementptr inbounds i32, i32* %363, i64 -7
  %384 = load i32, i32* %383, align 4
  store i32 %384, i32* %382, align 4
  %385 = getelementptr inbounds i32, i32* %362, i64 -8
  %386 = getelementptr inbounds i32, i32* %363, i64 -8
  %387 = load i32, i32* %386, align 4
  store i32 %387, i32* %385, align 4
  %388 = icmp eq i32* %386, %233
  br i1 %388, label %389, label %361, !llvm.loop !40

389:                                              ; preds = %356, %361, %335, %223
  %390 = phi i32* [ %226, %223 ], [ %261, %335 ], [ %357, %356 ], [ %385, %361 ]
  %391 = ptrtoint i32* %390 to i64
  store i64 %391, i64* %185, align 8
  store i64 %231, i64* %184, align 8
  store i64 %228, i64* %194, align 8
  br label %392

392:                                              ; preds = %50, %389, %177
  %393 = icmp sgt i64 %26, %14
  br i1 %393, label %24, label %15

394:                                              ; preds = %395, %15
  ret void

395:                                              ; preds = %21, %395
  %396 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %17, %21 ], [ %419, %395 ]
  %397 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %397, i64 0, i32 0
  %399 = load i32, i32* %398, align 8
  %400 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %22, align 8
  %401 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %400, i64 0, i32 3
  %402 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %401, align 8
  %403 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %402, i32 %399) #12
  %404 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %22, align 8
  %405 = sext i32 %399 to i64
  %406 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %404, i64 0, i32 6, i32 0, i32 0, i32 0
  %407 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %406, align 8
  %408 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %407, i64 %405
  %409 = load i32, i32* %3, align 4
  %410 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %407, i64 %405, i32 3
  store i32 %399, i32* %410, align 4
  %411 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %407, i64 %405, i32 4
  store i8 %403, i8* %411, align 8
  %412 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %407, i64 %405, i32 2
  %413 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %408 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %413, i8 0, i64 16, i1 false) #12
  store i32 %409, i32* %412, align 8
  %414 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %407, i64 %405, i32 5
  %415 = load i8, i8* %414, align 1
  %416 = and i8 %415, -32
  %417 = or i8 %23, %416
  %418 = or i8 %417, 1
  store i8 %418, i8* %414, align 1
  %419 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %396, i64 1
  %420 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %419, %19
  br i1 %420, label %394, label %395
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13DefineOutputsEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 {
  %2 = alloca %"class.v8::internal::ZoneDeque.751", align 8
  %3 = alloca %"class.v8::internal::compiler::MidTierOutputProcessor", align 8
  %4 = bitcast %"class.v8::internal::compiler::MidTierOutputProcessor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::Zone"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::ZoneDeque.751"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #12
  %11 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.757"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #12
  %15 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 2, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.761"* %15 to i64*
  store i64 %9, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.755"* %18 to i8*
  %21 = bitcast %"class.std::__1::__compressed_pair.755"* %19 to i8*
  %22 = bitcast %"class.v8::internal::ZoneQueue"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #12
  %23 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0, i32 2
  %27 = bitcast %"class.std::__1::__compressed_pair.760"* %25 to i8*
  %28 = bitcast %"class.std::__1::__compressed_pair.760"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #12
  %29 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12
  %30 = getelementptr inbounds %"class.v8::internal::ZoneDeque.751", %"class.v8::internal::ZoneDeque.751"* %2, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.753"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #12
  %31 = load i64, i64* %8, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %34 = bitcast %"struct.std::__1::__compressed_pair_elem.767"* %33 to i64*
  %35 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::__compressed_pair.766"* %35 to i64*
  store i64 0, i64* %36, align 8
  store i64 %31, i64* %34, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %32, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  %40 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %40, i64 0, i32 2
  %42 = load %"class.v8::internal::ZoneVector.591"*, %"class.v8::internal::ZoneVector.591"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::ZoneVector.591", %"class.v8::internal::ZoneVector.591"* %42, i64 0, i32 0, i32 0, i32 1
  %44 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %43, align 8, !noalias !41
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.591", %"class.v8::internal::ZoneVector.591"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %45, align 8, !noalias !41
  %47 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %44, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %1
  %49 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 10
  br label %57

50:                                               ; preds = %57
  %51 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node.812"**
  %52 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %51, align 8
  br label %53

53:                                               ; preds = %1, %50
  %54 = phi %"class.std::__1::__tree_node.812"* [ %52, %50 ], [ null, %1 ]
  %55 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 2, i32 0, i32 0
  call void @_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.765"* %55, %"class.std::__1::__tree_node.812"* %54) #12
  %56 = getelementptr inbounds %"class.v8::internal::compiler::MidTierOutputProcessor", %"class.v8::internal::compiler::MidTierOutputProcessor"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.753"* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #12
  ret void

57:                                               ; preds = %48, %57
  %58 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %44, %48 ], [ %59, %57 ]
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %58, i64 -1
  %60 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %59, align 8
  %61 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %49, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %61) #12
  call void @_ZN2v88internal8compiler22MidTierOutputProcessor20InitializeBlockStateEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierOutputProcessor"* nonnull %3, %"class.v8::internal::compiler::InstructionBlock"* %60)
  call void @_ZN2v88internal8compiler22MidTierOutputProcessor13DefineOutputsEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierOutputProcessor"* nonnull %3, %"class.v8::internal::compiler::InstructionBlock"* %60)
  %62 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %59, %46
  br i1 %62, label %50, label %57
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24MidTierRegisterAllocatorC2EPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierRegisterAllocator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocatorC2ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %4, i32 0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1)
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocatorC2ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %5, i32 1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24MidTierRegisterAllocator17AllocateRegistersEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierRegisterAllocator"*, %"class.v8::internal::compiler::InstructionBlock"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %6, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %9, i64 %7, i32 5
  %11 = load i8, i8* %10, align 4, !range !5
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1, i32 2
  store %"class.v8::internal::compiler::InstructionBlock"* %1, %"class.v8::internal::compiler::InstructionBlock"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::compiler::RpoNumber"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::InstructionBlock"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %22, label %26

22:                                               ; preds = %2
  %23 = inttoptr i64 %19 to %"class.v8::internal::compiler::RpoNumber"*
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CloneStateFromENS1_9RpoNumberE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, i32 %25) #12
  br label %31

26:                                               ; preds = %2
  %27 = ashr exact i64 %20, 2
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14MergeStateFromERKNS0_10ZoneVectorINS1_9RpoNumberEEE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, %"class.v8::internal::ZoneVector.594"* dereferenceable(32) %30) #12
  br label %31

31:                                               ; preds = %22, %26, %29
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2, i32 2
  store %"class.v8::internal::compiler::InstructionBlock"* %1, %"class.v8::internal::compiler::InstructionBlock"** %33, align 8
  %34 = load i64, i64* %16, align 8
  %35 = load i64, i64* %18, align 8
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 4
  br i1 %37, label %38, label %42

38:                                               ; preds = %31
  %39 = inttoptr i64 %35 to %"class.v8::internal::compiler::RpoNumber"*
  %40 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14CloneStateFromENS1_9RpoNumberE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, i32 %41) #12
  br label %47

42:                                               ; preds = %31
  %43 = ashr exact i64 %36, 2
  %44 = icmp ugt i64 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator14MergeStateFromERKNS0_10ZoneVectorINS1_9RpoNumberEEE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::ZoneVector.594"* dereferenceable(32) %46) #12
  br label %47

47:                                               ; preds = %38, %42, %45
  br i1 %12, label %48, label %147

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %50 = load i8, i8* %49, align 4, !range !5
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %147

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %53, align 8
  %55 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %15, align 8
  %56 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %54, %55
  br i1 %56, label %147, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  br label %59

59:                                               ; preds = %57, %144
  %60 = phi %"class.v8::internal::compiler::RpoNumber"* [ %54, %57 ], [ %145, %144 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %63, i64 0, i32 3
  %65 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %65, i64 0, i32 2
  %67 = bitcast %"class.v8::internal::ZoneVector.591"** %66 to %"class.std::__1::vector.592"**
  %68 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %67, align 8
  %69 = sext i32 %62 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %68, i64 0, i32 0, i32 1
  %71 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector.592"* %68 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = ashr exact i64 %75, 3
  %77 = icmp ugt i64 %76, %69
  br i1 %77, label %80, label %78

78:                                               ; preds = %59
  %79 = bitcast %"class.std::__1::vector.592"* %68 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %79) #13
  unreachable

80:                                               ; preds = %59
  %81 = inttoptr i64 %74 to %"class.v8::internal::compiler::InstructionBlock"**
  %82 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %81, i64 %69
  %83 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %83, i64 0, i32 10
  %85 = load i8, i8* %84, align 4, !range !5
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %144, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %63, i64 0, i32 7, i32 0, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %89, i64 %69, i32 2
  %91 = load %"class.v8::internal::compiler::DeferredBlocksRegion"*, %"class.v8::internal::compiler::DeferredBlocksRegion"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::DeferredBlocksRegion", %"class.v8::internal::compiler::DeferredBlocksRegion"* %91, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %95 = icmp eq %"class.std::__1::__tree_end_node"* %93, %94
  br i1 %95, label %144, label %96

96:                                               ; preds = %87, %142
  %97 = phi %"class.v8::internal::compiler::MidTierRegisterAllocationData"* [ %143, %142 ], [ %63, %87 ]
  %98 = phi %"class.std::__1::__tree_end_node"* [ %140, %142 ], [ %93, %87 ]
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node"*
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %99, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %97, i64 0, i32 6, i32 0, i32 0, i32 0
  %104 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %104, i64 %102
  %106 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %104, i64 %102, i32 4
  %107 = load i8, i8* %106, align 8
  %108 = icmp ugt i8 %107, 11
  %109 = select i1 %108, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  %110 = load i32, i32* %58, align 8
  %111 = add nsw i32 %110, -1
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator32AllocateDeferredBlockSpillOutputEiNS1_9RpoNumberERNS1_19VirtualRegisterDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %109, i32 %111, i32 %62, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %105)
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 1, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %123

115:                                              ; preds = %96
  %116 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 2
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_end_node"**
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, %116
  br i1 %122, label %139, label %130

123:                                              ; preds = %96, %123
  %124 = phi %"class.std::__1::__tree_node_base"* [ %126, %123 ], [ %113, %96 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %123

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  br label %139

130:                                              ; preds = %115, %130
  %131 = phi %"class.std::__1::__tree_end_node"** [ %134, %130 ], [ %118, %115 ]
  %132 = bitcast %"class.std::__1::__tree_end_node"** %131 to %"class.std::__1::__tree_node_base"**
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 2
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, %133
  br i1 %138, label %139, label %130

139:                                              ; preds = %130, %115, %128
  %140 = phi %"class.std::__1::__tree_end_node"* [ %129, %128 ], [ %119, %115 ], [ %135, %130 ]
  %141 = icmp eq %"class.std::__1::__tree_end_node"* %140, %94
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  %143 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  br label %96

144:                                              ; preds = %139, %87, %80
  %145 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %60, i64 1
  %146 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %145, %55
  br i1 %146, label %147, label %59

147:                                              ; preds = %144, %52, %48, %47
  %148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %151 = load i32, i32* %150, align 8
  %152 = icmp sgt i32 %151, %149
  br i1 %152, label %153, label %166

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1, i32 1
  %155 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2, i32 1
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %158 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1, i32 9, i32 0
  %159 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1, i32 12, i32 0
  %160 = bitcast i64* %158 to i8*
  %161 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2, i32 9, i32 0
  %162 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2, i32 12, i32 0
  %163 = bitcast i64* %161 to i8*
  %164 = sext i32 %151 to i64
  %165 = sext i32 %149 to i64
  br label %170

166:                                              ; preds = %542, %147
  %167 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 6, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, -1
  br i1 %169, label %544, label %582

170:                                              ; preds = %153, %542
  %171 = phi i64 [ %164, %153 ], [ %172, %542 ]
  %172 = add nsw i64 %171, -1
  %173 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %173, i64 0, i32 3
  %175 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %175, i64 0, i32 8, i32 0, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, %172
  %179 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %175, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %180 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %179, align 8
  %181 = lshr i64 %178, 9
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %180, i64 %181
  %183 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %182, align 8
  %184 = and i64 %178, 511
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %183, i64 %184
  %186 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %185, align 8
  %187 = trunc i64 %172 to i32
  tail call void @_ZN2v88internal8compiler24MidTierRegisterAllocator21ReserveFixedRegistersEi(%"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i32 %187)
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 255
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %170
  %193 = zext i32 %190 to i64
  br label %198

194:                                              ; preds = %246, %170
  %195 = phi i32 [ %189, %170 ], [ %248, %246 ]
  %196 = and i32 %195, 1073741824
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %295, label %252

198:                                              ; preds = %192, %246
  %199 = phi i64 [ %250, %246 ], [ %193, %192 ]
  %200 = phi i64 [ %247, %246 ], [ 0, %192 ]
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 5, i64 %200
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %201, i64 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, 7
  %205 = icmp eq i64 %204, 2
  br i1 %205, label %206, label %218

206:                                              ; preds = %198
  %207 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %201 to %"class.v8::internal::compiler::ConstantOperand"*
  %208 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %209 = shl i64 %203, 29
  %210 = ashr i64 %209, 32
  %211 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %208, i64 0, i32 6, i32 0, i32 0, i32 0
  %212 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %212, i64 %210
  %214 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %212, i64 %210, i32 4
  %215 = load i8, i8* %214, align 8
  %216 = icmp ugt i8 %215, 11
  %217 = select i1 %216, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator22AllocateConstantOutputEPNS1_15ConstantOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %217, %"class.v8::internal::compiler::ConstantOperand"* %207, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %213, i32 %187)
  br label %246

218:                                              ; preds = %198
  %219 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %201 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %220 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %221 = shl i64 %203, 29
  %222 = ashr i64 %221, 32
  %223 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %220, i64 0, i32 6, i32 0, i32 0, i32 0
  %224 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %224, i64 %222
  %226 = and i64 %203, 515396075520
  %227 = icmp eq i64 %226, 515396075520
  br i1 %227, label %228, label %240

228:                                              ; preds = %218
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 5, i64 %199
  %230 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %229 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %229, i64 0, i32 0
  %232 = load i64, i64* %231, align 8
  %233 = shl i64 %232, 29
  %234 = ashr i64 %233, 32
  %235 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %224, i64 %234
  %236 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %224, i64 %222, i32 4
  %237 = load i8, i8* %236, align 8
  %238 = icmp ugt i8 %237, 11
  %239 = select i1 %238, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator23AllocateSameInputOutputEPNS1_18UnallocatedOperandES4_RNS1_19VirtualRegisterDataES6_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %239, %"class.v8::internal::compiler::UnallocatedOperand"* %219, %"class.v8::internal::compiler::UnallocatedOperand"* %230, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %225, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %235, i32 %187)
  br label %246

240:                                              ; preds = %218
  %241 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %224, i64 %222, i32 4
  %242 = load i8, i8* %241, align 8
  %243 = icmp ugt i8 %242, 11
  %244 = select i1 %243, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  %245 = tail call i8 @_ZN2v88internal8compiler27SinglePassRegisterAllocator14AllocateOutputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %244, %"class.v8::internal::compiler::UnallocatedOperand"* %219, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %225, i32 %187, i32 1) #12
  br label %246

246:                                              ; preds = %228, %240, %206
  %247 = add nuw nsw i64 %200, 1
  %248 = load i32, i32* %188, align 4
  %249 = and i32 %248, 255
  %250 = zext i32 %249 to i64
  %251 = icmp ult i64 %247, %250
  br i1 %251, label %198, label %194

252:                                              ; preds = %194
  %253 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %154, align 8
  %254 = icmp eq %"class.v8::internal::compiler::RegisterState"* %253, null
  br i1 %254, label %274, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %253, i64 0, i32 0, i32 0, i32 0, i32 1
  %257 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.v8::internal::compiler::RegisterState"* %253 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %258, %260
  %262 = lshr exact i64 %261, 3
  %263 = trunc i64 %262 to i32
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %274, label %265

265:                                              ; preds = %255, %265
  %266 = phi i32 [ %268, %265 ], [ 0, %255 ]
  %267 = trunc i32 %266 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, i8 %267) #12
  %268 = add nuw nsw i32 %266, 1
  %269 = icmp eq i32 %268, %263
  br i1 %269, label %270, label %265

270:                                              ; preds = %265
  %271 = load i32, i32* %188, align 4
  %272 = and i32 %271, 1073741824
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %295, label %274

274:                                              ; preds = %252, %255, %270
  %275 = phi i32 [ %271, %270 ], [ %195, %255 ], [ %195, %252 ]
  %276 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %155, align 8
  %277 = icmp eq %"class.v8::internal::compiler::RegisterState"* %276, null
  br i1 %277, label %295, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %276, i64 0, i32 0, i32 0, i32 0, i32 1
  %280 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = bitcast %"class.v8::internal::compiler::RegisterState"* %276 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = sub i64 %281, %283
  %285 = lshr exact i64 %284, 3
  %286 = trunc i64 %285 to i32
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %295, label %288

288:                                              ; preds = %278, %288
  %289 = phi i32 [ %291, %288 ], [ 0, %278 ]
  %290 = trunc i32 %289 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, i8 %290) #12
  %291 = add nuw nsw i32 %289, 1
  %292 = icmp eq i32 %291, %286
  br i1 %292, label %293, label %288

293:                                              ; preds = %288
  %294 = load i32, i32* %188, align 4
  br label %295

295:                                              ; preds = %194, %293, %270, %278, %274
  %296 = phi i32 [ %294, %293 ], [ %271, %270 ], [ %275, %278 ], [ %275, %274 ], [ %195, %194 ]
  %297 = and i32 %296, 1056964608
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %303

299:                                              ; preds = %327, %295
  %300 = phi i32 [ %296, %295 ], [ %329, %327 ]
  %301 = and i32 %300, 16776960
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %371, label %337

303:                                              ; preds = %295, %327
  %304 = phi i32 [ %329, %327 ], [ %296, %295 ]
  %305 = phi i64 [ %328, %327 ], [ 0, %295 ]
  %306 = and i32 %304, 255
  %307 = lshr i32 %304, 8
  %308 = and i32 %307, 65535
  %309 = add nuw nsw i32 %308, %306
  %310 = zext i32 %309 to i64
  %311 = add nuw i64 %305, %310
  %312 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 5, i64 %311
  %313 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %312 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %314 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %312, i64 0, i32 0
  %315 = load i64, i64* %314, align 8
  %316 = lshr i64 %315, 3
  %317 = trunc i64 %316 to i32
  %318 = icmp eq i32 %317, -1
  br i1 %318, label %319, label %320

319:                                              ; preds = %303
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator12AllocateTempEPNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, %"class.v8::internal::compiler::UnallocatedOperand"* %313, i32 -1, i8 zeroext 5, i32 %187)
  br label %327

320:                                              ; preds = %303
  %321 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %322 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %321, i64 0, i32 3
  %323 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %322, align 8
  %324 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %323, i32 %317) #12
  %325 = icmp ugt i8 %324, 11
  %326 = select i1 %325, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator12AllocateTempEPNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %326, %"class.v8::internal::compiler::UnallocatedOperand"* %313, i32 %317, i8 zeroext %324, i32 %187)
  br label %327

327:                                              ; preds = %320, %319
  %328 = add nuw nsw i64 %305, 1
  %329 = load i32, i32* %188, align 4
  %330 = lshr i32 %329, 24
  %331 = and i32 %330, 63
  %332 = zext i32 %331 to i64
  %333 = icmp ult i64 %328, %332
  br i1 %333, label %303, label %299

334:                                              ; preds = %364
  %335 = and i32 %365, 16776960
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %371, label %375

337:                                              ; preds = %299, %364
  %338 = phi i32 [ %365, %364 ], [ %300, %299 ]
  %339 = phi i64 [ %366, %364 ], [ 0, %299 ]
  %340 = and i32 %338, 255
  %341 = zext i32 %340 to i64
  %342 = add nuw i64 %339, %341
  %343 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 5, i64 %342
  %344 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %343, i64 0, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = and i64 %345, 7
  %347 = icmp ne i64 %346, 1
  %348 = and i64 %345, 584115552256
  %349 = icmp eq i64 %348, 34359738368
  %350 = or i1 %347, %349
  br i1 %350, label %364, label %351

351:                                              ; preds = %337
  %352 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %343 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %353 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %354 = shl i64 %345, 29
  %355 = ashr i64 %354, 32
  %356 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %353, i64 0, i32 6, i32 0, i32 0, i32 0
  %357 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %356, align 8
  %358 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %357, i64 %355
  %359 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %357, i64 %355, i32 4
  %360 = load i8, i8* %359, align 8
  %361 = icmp ugt i8 %360, 11
  %362 = select i1 %361, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13AllocateInputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %362, %"class.v8::internal::compiler::UnallocatedOperand"* %352, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %358, i32 %187)
  %363 = load i32, i32* %188, align 4
  br label %364

364:                                              ; preds = %337, %351
  %365 = phi i32 [ %363, %351 ], [ %338, %337 ]
  %366 = add nuw nsw i64 %339, 1
  %367 = lshr i32 %365, 8
  %368 = and i32 %367, 65535
  %369 = zext i32 %368 to i64
  %370 = icmp ult i64 %366, %369
  br i1 %370, label %337, label %334

371:                                              ; preds = %399, %299, %334
  %372 = load i32, i32* %150, align 8
  %373 = add nsw i32 %372, -1
  %374 = icmp eq i32 %373, %187
  br i1 %374, label %406, label %510

375:                                              ; preds = %334, %399
  %376 = phi i32 [ %400, %399 ], [ %365, %334 ]
  %377 = phi i64 [ %401, %399 ], [ 0, %334 ]
  %378 = and i32 %376, 255
  %379 = zext i32 %378 to i64
  %380 = add nuw i64 %377, %379
  %381 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 5, i64 %380
  %382 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %381, i64 0, i32 0
  %383 = load i64, i64* %382, align 8
  %384 = and i64 %383, 7
  %385 = icmp eq i64 %384, 1
  br i1 %385, label %386, label %399

386:                                              ; preds = %375
  %387 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %381 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %388 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %389 = shl i64 %383, 29
  %390 = ashr i64 %389, 32
  %391 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %388, i64 0, i32 6, i32 0, i32 0, i32 0
  %392 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %391, align 8
  %393 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %392, i64 %390
  %394 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %392, i64 %390, i32 4
  %395 = load i8, i8* %394, align 8
  %396 = icmp ugt i8 %395, 11
  %397 = select i1 %396, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13AllocateInputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %397, %"class.v8::internal::compiler::UnallocatedOperand"* %387, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %393, i32 %187)
  %398 = load i32, i32* %188, align 4
  br label %399

399:                                              ; preds = %375, %386
  %400 = phi i32 [ %376, %375 ], [ %398, %386 ]
  %401 = add nuw nsw i64 %377, 1
  %402 = lshr i32 %400, 8
  %403 = and i32 %402, 65535
  %404 = zext i32 %403 to i64
  %405 = icmp ult i64 %401, %404
  br i1 %405, label %375, label %371

406:                                              ; preds = %371
  %407 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %408 = load i32, i32* %3, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %407, i64 0, i32 7, i32 0, i32 0, i32 0
  %411 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %410, align 8
  %412 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %411, i64 %409, i32 4
  %413 = load i32, i32* %412, align 8
  %414 = icmp eq i32 %413, -1
  br i1 %414, label %470, label %415

415:                                              ; preds = %406
  %416 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %156, align 8
  %417 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %416, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %407, i64 0, i32 3
  %420 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %419, align 8
  %421 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %420, i64 0, i32 2
  %422 = bitcast %"class.v8::internal::ZoneVector.591"** %421 to %"class.std::__1::vector.592"**
  %423 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %422, align 8
  %424 = sext i32 %418 to i64
  %425 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %423, i64 0, i32 0, i32 1
  %426 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = bitcast %"class.std::__1::vector.592"* %423 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = sub i64 %427, %429
  %431 = ashr exact i64 %430, 3
  %432 = icmp ugt i64 %431, %424
  br i1 %432, label %435, label %433

433:                                              ; preds = %415
  %434 = bitcast %"class.std::__1::vector.592"* %423 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %434) #13
  unreachable

435:                                              ; preds = %415
  %436 = inttoptr i64 %429 to %"class.v8::internal::compiler::InstructionBlock"**
  %437 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %436, i64 %424
  %438 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %437, align 8
  %439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %438, i64 0, i32 2, i32 0, i32 0, i32 0
  %440 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %439, align 8
  %441 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %438, i64 0, i32 2, i32 0, i32 0, i32 1
  %442 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %441, align 8
  %443 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %440, %442
  br i1 %443, label %470, label %444

444:                                              ; preds = %435
  %445 = sext i32 %413 to i64
  br label %446

446:                                              ; preds = %468, %444
  %447 = phi %"class.v8::internal::compiler::MidTierRegisterAllocationData"* [ %407, %444 ], [ %469, %468 ]
  %448 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %440, %444 ], [ %466, %468 ]
  %449 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %448, align 8
  %450 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %449, i64 0, i32 0
  %451 = load i32, i32* %450, align 8
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %447, i64 0, i32 6, i32 0, i32 0, i32 0
  %454 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %453, align 8
  %455 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %454, i64 %452
  %456 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %449, i64 0, i32 2, i32 0, i32 0, i32 0
  %457 = load i32*, i32** %456, align 8
  %458 = getelementptr inbounds i32, i32* %457, i64 %445
  %459 = load i32, i32* %458, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %454, i64 %460
  %462 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %454, i64 %452, i32 4
  %463 = load i8, i8* %462, align 8
  %464 = icmp ugt i8 %463, 11
  %465 = select i1 %464, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePhiGapMoveERNS1_19VirtualRegisterDataES4_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %465, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %455, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %461, i32 %187) #12
  %466 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %448, i64 1
  %467 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %466, %442
  br i1 %467, label %470, label %468

468:                                              ; preds = %446
  %469 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  br label %446

470:                                              ; preds = %446, %406, %435
  br i1 %12, label %471, label %510

471:                                              ; preds = %470
  %472 = load i8, i8* %157, align 4, !range !5
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %510, label %474

474:                                              ; preds = %471
  %475 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %154, align 8
  %476 = icmp eq %"class.v8::internal::compiler::RegisterState"* %475, null
  br i1 %476, label %492, label %477

477:                                              ; preds = %474
  %478 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %475, i64 0, i32 0, i32 0, i32 0, i32 1
  %479 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %478 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = bitcast %"class.v8::internal::compiler::RegisterState"* %475 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = sub i64 %480, %482
  %484 = lshr exact i64 %483, 3
  %485 = trunc i64 %484 to i32
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %492, label %487

487:                                              ; preds = %477, %487
  %488 = phi i32 [ %490, %487 ], [ 0, %477 ]
  %489 = trunc i32 %488 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator24SpillRegisterForDeferredENS1_13RegisterIndexEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, i8 %489, i32 %187) #12
  %490 = add nuw nsw i32 %488, 1
  %491 = icmp eq i32 %490, %485
  br i1 %491, label %492, label %487

492:                                              ; preds = %487, %474, %477
  %493 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %155, align 8
  %494 = icmp eq %"class.v8::internal::compiler::RegisterState"* %493, null
  br i1 %494, label %510, label %495

495:                                              ; preds = %492
  %496 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %493, i64 0, i32 0, i32 0, i32 0, i32 1
  %497 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = bitcast %"class.v8::internal::compiler::RegisterState"* %493 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = sub i64 %498, %500
  %502 = lshr exact i64 %501, 3
  %503 = trunc i64 %502 to i32
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %510, label %505

505:                                              ; preds = %495, %505
  %506 = phi i32 [ %508, %505 ], [ 0, %495 ]
  %507 = trunc i32 %506 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator24SpillRegisterForDeferredENS1_13RegisterIndexEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, i8 %507, i32 %187) #12
  %508 = add nuw nsw i32 %506, 1
  %509 = icmp eq i32 %508, %503
  br i1 %509, label %510, label %505

510:                                              ; preds = %505, %471, %495, %492, %470, %371
  %511 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %186, i64 0, i32 2, i64 1
  %512 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %511, align 8
  %513 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %512, null
  br i1 %513, label %542, label %514

514:                                              ; preds = %510
  %515 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %512, i64 0, i32 0, i32 0, i32 0, i32 0
  %516 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %515, align 8
  %517 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %512, i64 0, i32 0, i32 0, i32 0, i32 1
  %518 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %517, align 8
  %519 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %516, %518
  br i1 %519, label %542, label %520

520:                                              ; preds = %514, %539
  %521 = phi %"class.v8::internal::compiler::MoveOperands"** [ %540, %539 ], [ %516, %514 ]
  %522 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %521, align 8
  %523 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %522, i64 0, i32 0, i32 0
  %524 = load i64, i64* %523, align 8
  %525 = and i64 %524, 7
  %526 = icmp eq i64 %525, 1
  br i1 %526, label %527, label %539

527:                                              ; preds = %520
  %528 = bitcast %"class.v8::internal::compiler::MoveOperands"* %522 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %529 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %530 = shl i64 %524, 29
  %531 = ashr i64 %530, 32
  %532 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %529, i64 0, i32 6, i32 0, i32 0, i32 0
  %533 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %532, align 8
  %534 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %533, i64 %531
  %535 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %533, i64 %531, i32 4
  %536 = load i8, i8* %535, align 8
  %537 = icmp ugt i8 %536, 11
  %538 = select i1 %537, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20AllocateGapMoveInputEPNS1_18UnallocatedOperandERNS1_19VirtualRegisterDataEi(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %538, %"class.v8::internal::compiler::UnallocatedOperand"* %528, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %534, i32 %187)
  br label %539

539:                                              ; preds = %527, %520
  %540 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %521, i64 1
  %541 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %540, %518
  br i1 %541, label %542, label %520

542:                                              ; preds = %539, %514, %510
  store i64 0, i64* %159, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 16, i1 false) #12
  store i64 0, i64* %162, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 16, i1 false) #12
  %543 = icmp sgt i64 %172, %165
  br i1 %543, label %170, label %166

544:                                              ; preds = %166
  %545 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1, i32 1
  %546 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %545, align 8
  %547 = icmp eq %"class.v8::internal::compiler::RegisterState"* %546, null
  br i1 %547, label %563, label %548

548:                                              ; preds = %544
  %549 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %546, i64 0, i32 0, i32 0, i32 0, i32 1
  %550 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"class.v8::internal::compiler::RegisterState"* %546 to i64*
  %553 = load i64, i64* %552, align 8
  %554 = sub i64 %551, %553
  %555 = lshr exact i64 %554, 3
  %556 = trunc i64 %555 to i32
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %563, label %558

558:                                              ; preds = %548, %558
  %559 = phi i32 [ %561, %558 ], [ 0, %548 ]
  %560 = trunc i32 %559 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, i8 %560) #12
  %561 = add nuw nsw i32 %559, 1
  %562 = icmp eq i32 %561, %556
  br i1 %562, label %563, label %558

563:                                              ; preds = %558, %544, %548
  %564 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2, i32 1
  %565 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %564, align 8
  %566 = icmp eq %"class.v8::internal::compiler::RegisterState"* %565, null
  br i1 %566, label %582, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %565, i64 0, i32 0, i32 0, i32 0, i32 1
  %569 = bitcast %"class.v8::internal::compiler::RegisterState::Register"*** %568 to i64*
  %570 = load i64, i64* %569, align 8
  %571 = bitcast %"class.v8::internal::compiler::RegisterState"* %565 to i64*
  %572 = load i64, i64* %571, align 8
  %573 = sub i64 %570, %572
  %574 = lshr exact i64 %573, 3
  %575 = trunc i64 %574 to i32
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %582, label %577

577:                                              ; preds = %567, %577
  %578 = phi i32 [ %580, %577 ], [ 0, %567 ]
  %579 = trunc i32 %578 to i8
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, i8 %579) #12
  %580 = add nuw nsw i32 %578, 1
  %581 = icmp eq i32 %580, %575
  br i1 %581, label %582, label %577

582:                                              ; preds = %577, %567, %563, %166
  %583 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %584 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %583, align 8
  %585 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %586 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %585, align 8
  %587 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %584, %586
  br i1 %587, label %639, label %588

588:                                              ; preds = %582, %636
  %589 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %637, %636 ], [ %584, %582 ]
  %590 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %589, align 8
  %591 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %590, i64 0, i32 0
  %592 = load i32, i32* %591, align 8
  %593 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %5, align 8
  %594 = sext i32 %592 to i64
  %595 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %593, i64 0, i32 6, i32 0, i32 0, i32 0
  %596 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %595, align 8
  %597 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %596, i64 %594, i32 4
  %598 = load i8, i8* %597, align 8
  %599 = icmp ugt i8 %598, 11
  %600 = select i1 %599, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13
  %601 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %596, i64 %594, i32 5
  %602 = load i8, i8* %601, align 1
  %603 = and i8 %602, 8
  %604 = icmp eq i8 %603, 0
  br i1 %604, label %605, label %608

605:                                              ; preds = %588
  %606 = load i32, i32* %167, align 4
  %607 = icmp sgt i32 %606, -1
  br i1 %607, label %608, label %618

608:                                              ; preds = %605, %588
  %609 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %596, i64 %594, i32 3
  %610 = load i32, i32* %609, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %600, i64 0, i32 0, i32 0, i32 0, i32 0
  %613 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %612, align 8
  %614 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %613, i64 %611, i32 0
  %615 = load i8, i8* %614, align 1
  %616 = icmp eq i8 %615, -1
  br i1 %616, label %636, label %617

617:                                              ; preds = %608
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %600, i8 %615) #12
  br label %636

618:                                              ; preds = %605
  %619 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %596, i64 %594, i32 3
  %620 = load i32, i32* %619, align 4
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %600, i64 0, i32 0, i32 0, i32 0, i32 0
  %623 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %622, align 8
  %624 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %623, i64 %621, i32 0
  %625 = load i8, i8* %624, align 1
  %626 = icmp eq i8 %625, -1
  br i1 %626, label %636, label %627

627:                                              ; preds = %618
  %628 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %600, i64 0, i32 1
  %629 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %628, align 8
  %630 = sext i8 %625 to i64
  %631 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %629, i64 0, i32 0, i32 0, i32 0, i32 0
  %632 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %631, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %632, i64 %630
  %634 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %633, align 8
  %635 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %634, i64 0, i32 2
  store i8 1, i8* %635, align 2
  br label %636

636:                                              ; preds = %627, %618, %617, %608
  %637 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %589, i64 1
  %638 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %637, %586
  br i1 %638, label %639, label %588

639:                                              ; preds = %636, %582
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator8EndBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %13, %"class.v8::internal::compiler::InstructionBlock"* %1)
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator8EndBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::InstructionBlock"* %1)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(304) %"class.v8::internal::compiler::SinglePassRegisterAllocator"* @_ZN2v88internal8compiler24MidTierRegisterAllocator12AllocatorForENS0_21MachineRepresentationE(%"class.v8::internal::compiler::MidTierRegisterAllocator"* readnone, i8 zeroext) local_unnamed_addr #7 align 2 {
  %3 = icmp ugt i8 %1, 11
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  %6 = select i1 %3, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %4, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %5
  ret %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24MidTierRegisterAllocator21ReserveFixedRegistersEi(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 3
  %6 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %6, i64 0, i32 8, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %11, align 8
  %13 = lshr i64 %10, 9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %12, i64 %13
  %15 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %14, align 8
  %16 = and i64 %10, 511
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %15, i64 %16
  %18 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 255
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %2
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  br label %34

27:                                               ; preds = %66, %2
  %28 = phi i32 [ %20, %2 ], [ %67, %66 ]
  %29 = and i32 %28, 1056964608
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %72, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  br label %79

34:                                               ; preds = %23, %66
  %35 = phi i32 [ %20, %23 ], [ %67, %66 ]
  %36 = phi i64 [ %24, %23 ], [ %70, %66 ]
  %37 = phi i64 [ 0, %23 ], [ %68, %66 ]
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18, i64 0, i32 5, i64 %37
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %43, label %66

43:                                               ; preds = %34
  %44 = and i64 %40, 515396075520
  %45 = icmp eq i64 %44, 515396075520
  %46 = add nuw i64 %36, %37
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18, i64 0, i32 5, i64 %46
  %48 = select i1 %45, %"class.v8::internal::compiler::InstructionOperand"* %47, %"class.v8::internal::compiler::InstructionOperand"* %38
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %48, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 515396075520
  switch i64 %51, label %66 [
    i64 309237645312, label %52
    i64 240518168576, label %52
  ]

52:                                               ; preds = %43, %43
  %53 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %48 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %54 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %55 = shl i64 %50, 29
  %56 = ashr i64 %55, 32
  %57 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %54, i64 0, i32 6, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %58, i64 %56, i32 4
  %60 = load i8, i8* %59, align 8
  %61 = icmp ugt i8 %60, 11
  %62 = select i1 %61, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %25, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %26
  %63 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %58, i64 %56, i32 3
  %64 = load i32, i32* %63, align 4
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %62, %"class.v8::internal::compiler::UnallocatedOperand"* %53, i32 %64, i8 zeroext %60, i32 %1, i32 1) #12
  %65 = load i32, i32* %19, align 4
  br label %66

66:                                               ; preds = %43, %52, %34
  %67 = phi i32 [ %35, %43 ], [ %65, %52 ], [ %35, %34 ]
  %68 = add nuw nsw i64 %37, 1
  %69 = and i32 %67, 255
  %70 = zext i32 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %34, label %27

72:                                               ; preds = %108, %27
  %73 = phi i32 [ %28, %27 ], [ %110, %108 ]
  %74 = and i32 %73, 16776960
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %115, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %78 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  br label %116

79:                                               ; preds = %31, %108
  %80 = phi i32 [ %28, %31 ], [ %110, %108 ]
  %81 = phi i64 [ 0, %31 ], [ %109, %108 ]
  %82 = and i32 %80, 255
  %83 = lshr i32 %80, 8
  %84 = and i32 %83, 65535
  %85 = add nuw nsw i32 %84, %82
  %86 = zext i32 %85 to i64
  %87 = add nuw i64 %81, %86
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18, i64 0, i32 5, i64 %87
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %88, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 7
  %92 = icmp eq i64 %91, 1
  br i1 %92, label %93, label %108

93:                                               ; preds = %79
  %94 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %88 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %95 = and i64 %90, 515396075520
  switch i64 %95, label %108 [
    i64 309237645312, label %96
    i64 240518168576, label %96
  ]

96:                                               ; preds = %93, %93
  %97 = lshr i64 %90, 3
  %98 = trunc i64 %97 to i32
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %33, %"class.v8::internal::compiler::UnallocatedOperand"* %94, i32 -1, i8 zeroext 5, i32 %1, i32 2) #12
  br label %108

101:                                              ; preds = %96
  %102 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %102, i64 0, i32 3
  %104 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %103, align 8
  %105 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %104, i32 %98) #12
  %106 = icmp ugt i8 %105, 11
  %107 = select i1 %106, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %32, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %33
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %107, %"class.v8::internal::compiler::UnallocatedOperand"* %94, i32 %98, i8 zeroext %105, i32 %1, i32 2) #12
  br label %108

108:                                              ; preds = %93, %101, %100, %79
  %109 = add nuw nsw i64 %81, 1
  %110 = load i32, i32* %19, align 4
  %111 = lshr i32 %110, 24
  %112 = and i32 %111, 63
  %113 = zext i32 %112 to i64
  %114 = icmp ult i64 %109, %113
  br i1 %114, label %79, label %72

115:                                              ; preds = %146, %72
  ret void

116:                                              ; preds = %76, %146
  %117 = phi i32 [ %73, %76 ], [ %147, %146 ]
  %118 = phi i64 [ 0, %76 ], [ %148, %146 ]
  %119 = and i32 %117, 255
  %120 = zext i32 %119 to i64
  %121 = add nuw i64 %118, %120
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %18, i64 0, i32 5, i64 %121
  %123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %122, i64 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 7
  %126 = icmp eq i64 %125, 1
  br i1 %126, label %127, label %146

127:                                              ; preds = %116
  %128 = and i64 %124, 515396075520
  switch i64 %128, label %146 [
    i64 309237645312, label %129
    i64 240518168576, label %129
  ]

129:                                              ; preds = %127, %127
  %130 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %122 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %131 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %132 = shl i64 %124, 29
  %133 = ashr i64 %132, 32
  %134 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %131, i64 0, i32 6, i32 0, i32 0, i32 0
  %135 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %135, i64 %133, i32 4
  %137 = load i8, i8* %136, align 8
  %138 = icmp ugt i8 %137, 11
  %139 = select i1 %138, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %77, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %78
  %140 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %135, i64 %133, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = and i64 %124, 584115552256
  %143 = icmp eq i64 %142, 34359738368
  %144 = select i1 %143, i32 0, i32 2
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator20ReserveFixedRegisterEPKNS1_18UnallocatedOperandEiNS0_21MachineRepresentationEiNS2_11UsePositionE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %139, %"class.v8::internal::compiler::UnallocatedOperand"* %130, i32 %141, i8 zeroext %137, i32 %1, i32 %144) #12
  %145 = load i32, i32* %19, align 4
  br label %146

146:                                              ; preds = %127, %129, %116
  %147 = phi i32 [ %117, %127 ], [ %145, %129 ], [ %117, %116 ]
  %148 = add nuw nsw i64 %118, 1
  %149 = lshr i32 %147, 8
  %150 = and i32 %149, 65535
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %148, %151
  br i1 %152, label %116, label %115
}

declare zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24MidTierRegisterAllocator19AllocatePhiGapMovesEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nocapture, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %9, i64 %7, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %74, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, -1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %4, i64 0, i32 3
  %22 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %22, i64 0, i32 2
  %24 = bitcast %"class.v8::internal::ZoneVector.591"** %23 to %"class.std::__1::vector.592"**
  %25 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %24, align 8
  %26 = sext i32 %20 to i64
  %27 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %25, i64 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.592"* %25 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, %26
  br i1 %34, label %37, label %35

35:                                               ; preds = %13
  %36 = bitcast %"class.std::__1::vector.592"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %36) #13
  unreachable

37:                                               ; preds = %13
  %38 = inttoptr i64 %31 to %"class.v8::internal::compiler::InstructionBlock"**
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %38, i64 %26
  %40 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %40, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %40, i64 0, i32 2, i32 0, i32 0, i32 1
  %44 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %43, align 8
  %45 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %42, %44
  br i1 %45, label %74, label %46

46:                                               ; preds = %37
  %47 = sext i32 %11 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %49 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  br label %50

50:                                               ; preds = %72, %46
  %51 = phi %"class.v8::internal::compiler::MidTierRegisterAllocationData"* [ %4, %46 ], [ %73, %72 ]
  %52 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %42, %46 ], [ %70, %72 ]
  %53 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %51, i64 0, i32 6, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %58, i64 %56
  %60 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %53, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %47
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %58, i64 %64
  %66 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %58, i64 %56, i32 4
  %67 = load i8, i8* %66, align 8
  %68 = icmp ugt i8 %67, 11
  %69 = select i1 %68, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %48, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %49
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator18AllocatePhiGapMoveERNS1_19VirtualRegisterDataES4_i(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %69, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %59, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %65, i32 %16)
  %70 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %52, i64 1
  %71 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %70, %44
  br i1 %71, label %74, label %72

72:                                               ; preds = %50
  %73 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  br label %50

74:                                               ; preds = %50, %37, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24MidTierRegisterAllocator12AllocatePhisEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nocapture, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 6, i32 0
  br label %14

13:                                               ; preds = %62, %2
  ret void

14:                                               ; preds = %8, %62
  %15 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %4, %8 ], [ %63, %62 ]
  %16 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %9, align 8
  %20 = sext i32 %18 to i64
  %21 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %22, i64 %20, i32 4
  %24 = load i8, i8* %23, align 8
  %25 = icmp ugt i8 %24, 11
  %26 = select i1 %25, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %10, %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %11
  %27 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %22, i64 %20, i32 5
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %14
  %32 = load i32, i32* %12, align 4
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %44

34:                                               ; preds = %31, %14
  %35 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %22, i64 %20, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %39, i64 %37, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, -1
  br i1 %42, label %62, label %43

43:                                               ; preds = %34
  tail call void @_ZN2v88internal8compiler27SinglePassRegisterAllocator13SpillRegisterENS1_13RegisterIndexE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %26, i8 %41) #12
  br label %62

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %22, i64 %20, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::RegisterIndex", %"class.v8::internal::compiler::RegisterIndex"* %49, i64 %47, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, -1
  br i1 %52, label %62, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.v8::internal::compiler::SinglePassRegisterAllocator", %"class.v8::internal::compiler::SinglePassRegisterAllocator"* %26, i64 0, i32 1
  %55 = load %"class.v8::internal::compiler::RegisterState"*, %"class.v8::internal::compiler::RegisterState"** %54, align 8
  %56 = sext i8 %51 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState", %"class.v8::internal::compiler::RegisterState"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::RegisterState::Register"**, %"class.v8::internal::compiler::RegisterState::Register"*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %58, i64 %56
  %60 = load %"class.v8::internal::compiler::RegisterState::Register"*, %"class.v8::internal::compiler::RegisterState::Register"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::RegisterState::Register", %"class.v8::internal::compiler::RegisterState::Register"* %60, i64 0, i32 2
  store i8 1, i8* %61, align 2
  br label %62

62:                                               ; preds = %34, %43, %44, %53
  %63 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %15, i64 1
  %64 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %63, %6
  br i1 %64, label %13, label %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler24MidTierRegisterAllocator21IsFixedRegisterPolicyEPKNS1_18UnallocatedOperandE(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nocapture readnone, %"class.v8::internal::compiler::UnallocatedOperand"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 515396075520
  %6 = icmp eq i64 %5, 240518168576
  %7 = icmp eq i64 %5, 309237645312
  %8 = or i1 %6, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24MidTierRegisterAllocator25UpdateSpillRangesForLoopsEv(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 2
  %7 = load %"class.v8::internal::ZoneVector.591"*, %"class.v8::internal::ZoneVector.591"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.591", %"class.v8::internal::ZoneVector.591"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ZoneVector.591", %"class.v8::internal::ZoneVector.591"* %7, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %230, %1
  ret void

14:                                               ; preds = %1, %230
  %15 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %231, %230 ], [ %9, %1 ]
  %16 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %16, i64 0, i32 6, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %20, label %230

20:                                               ; preds = %14
  %21 = add nsw i32 %18, -1
  %22 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %2, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 3
  %24 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %24, i64 0, i32 2
  %26 = bitcast %"class.v8::internal::ZoneVector.591"** %25 to %"class.std::__1::vector.592"**
  %27 = load %"class.std::__1::vector.592"*, %"class.std::__1::vector.592"** %26, align 8
  %28 = sext i32 %21 to i64
  %29 = getelementptr inbounds %"class.std::__1::vector.592", %"class.std::__1::vector.592"* %27, i64 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.592"* %27 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ugt i64 %35, %28
  br i1 %36, label %39, label %37

37:                                               ; preds = %20
  %38 = bitcast %"class.std::__1::vector.592"* %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %20
  %40 = inttoptr i64 %33 to %"class.v8::internal::compiler::InstructionBlock"**
  %41 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %40, i64 %28
  %42 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %42, i64 0, i32 9
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, -1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 9, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 1
  %49 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 9, i32 2
  br i1 %48, label %50, label %52

50:                                               ; preds = %39
  %51 = bitcast %"union.v8::internal::BitVector::DataStorage"* %49 to i64*
  br label %55

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %49, i64 0, i32 0
  %54 = load i64*, i64** %53, align 8
  br label %55

55:                                               ; preds = %52, %50
  %56 = phi i64* [ %51, %50 ], [ %54, %52 ]
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %82

59:                                               ; preds = %55
  %60 = sext i32 %47 to i64
  %61 = icmp sgt i32 %47, 1
  br i1 %61, label %62, label %91

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 9, i32 2, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %62, %72
  %69 = phi i64 [ %70, %72 ], [ 1, %62 ]
  %70 = add nuw nsw i64 %69, 1
  %71 = icmp eq i64 %70, %60
  br i1 %71, label %230, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds i64, i64* %64, i64 %70
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %68, label %76

76:                                               ; preds = %72
  %77 = trunc i64 %70 to i32
  br label %78

78:                                               ; preds = %76, %62
  %79 = phi i32 [ %77, %76 ], [ 1, %62 ]
  %80 = phi i64 [ %74, %76 ], [ %66, %62 ]
  %81 = shl i32 %79, 6
  br label %82

82:                                               ; preds = %78, %55
  %83 = phi i32 [ 0, %55 ], [ %79, %78 ]
  %84 = phi i32 [ 0, %55 ], [ %81, %78 ]
  %85 = phi i64 [ %57, %55 ], [ %80, %78 ]
  %86 = tail call i64 @llvm.cttz.i64(i64 %85, i1 true) #12, !range !21
  %87 = trunc i64 %86 to i32
  %88 = or i32 %84, %87
  %89 = lshr i64 %85, %86
  %90 = lshr i64 %89, 1
  br label %91

91:                                               ; preds = %59, %82
  %92 = phi i64 [ %90, %82 ], [ 0, %59 ]
  %93 = phi i32 [ %88, %82 ], [ 0, %59 ]
  %94 = phi i32 [ %83, %82 ], [ 1, %59 ]
  %95 = icmp slt i32 %94, %47
  br i1 %95, label %96, label %230

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %16, i64 0, i32 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %16, i64 0, i32 4, i32 0
  %99 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %22, i64 0, i32 9, i32 2, i32 0
  br label %100

100:                                              ; preds = %228, %96
  %101 = phi %"class.v8::internal::compiler::MidTierRegisterAllocationData"* [ %22, %96 ], [ %229, %228 ]
  %102 = phi i32 [ %94, %96 ], [ %226, %228 ]
  %103 = phi i32 [ %93, %96 ], [ %225, %228 ]
  %104 = phi i64 [ %92, %96 ], [ %224, %228 ]
  %105 = sext i32 %103 to i64
  %106 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %101, i64 0, i32 6, i32 0, i32 0, i32 0
  %107 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %107, i64 %105, i32 1
  %109 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %108, align 8
  %110 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %109, null
  br i1 %110, label %184, label %111

111:                                              ; preds = %100
  %112 = load i32, i32* %97, align 4
  %113 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %109, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, %112
  br i1 %115, label %184, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %109, i64 0, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = icmp slt i32 %118, %112
  br i1 %119, label %184, label %120

120:                                              ; preds = %116
  %121 = load i32, i32* %98, align 4
  %122 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %109, i64 0, i32 1
  %123 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 1
  %127 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %123, i64 0, i32 2
  br i1 %126, label %128, label %130

128:                                              ; preds = %120
  %129 = bitcast %"union.v8::internal::BitVector::DataStorage"* %127 to i64*
  br label %136

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %127, i64 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = sdiv i32 %121, 64
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i64, i64* %132, i64 %134
  br label %136

136:                                              ; preds = %130, %128
  %137 = phi i64* [ %129, %128 ], [ %135, %130 ]
  %138 = load i64, i64* %137, align 8
  %139 = srem i32 %121, 64
  %140 = sdiv i32 %121, 64
  %141 = zext i32 %139 to i64
  %142 = shl i64 1, %141
  %143 = and i64 %138, %142
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %184, label %145

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %109, i64 0, i32 2
  %147 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %146, align 8
  %148 = icmp eq %"class.v8::internal::ZoneVector.712"* %147, null
  br i1 %148, label %179, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %147, i64 0, i32 0, i32 0, i32 0
  %151 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %147, i64 0, i32 0, i32 0, i32 1
  %153 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %152, align 8
  %154 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %151, %153
  br i1 %154, label %184, label %155

155:                                              ; preds = %149
  %156 = sext i32 %140 to i64
  br label %159

157:                                              ; preds = %173
  %158 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %178, %153
  br i1 %158, label %184, label %159

159:                                              ; preds = %157, %155
  %160 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %151, %155 ], [ %178, %157 ]
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %160, i64 0, i32 2
  %162 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %162, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 1
  %166 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %162, i64 0, i32 2
  br i1 %165, label %167, label %169

167:                                              ; preds = %159
  %168 = bitcast %"union.v8::internal::BitVector::DataStorage"* %166 to i64*
  br label %173

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %166, i64 0, i32 0
  %171 = load i64*, i64** %170, align 8
  %172 = getelementptr inbounds i64, i64* %171, i64 %156
  br label %173

173:                                              ; preds = %169, %167
  %174 = phi i64* [ %168, %167 ], [ %172, %169 ]
  %175 = load i64, i64* %174, align 8
  %176 = and i64 %175, %142
  %177 = icmp eq i64 %176, 0
  %178 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %160, i64 1
  br i1 %177, label %157, label %179

179:                                              ; preds = %173, %145
  %180 = icmp sgt i32 %114, %45
  %181 = select i1 %180, i32 %45, i32 %114
  store i32 %181, i32* %113, align 4
  %182 = icmp slt i32 %118, %45
  %183 = select i1 %182, i32 %45, i32 %118
  store i32 %183, i32* %117, align 4
  br label %184

184:                                              ; preds = %157, %100, %149, %111, %136, %116, %179
  %185 = add nsw i32 %103, 1
  %186 = icmp eq i64 %104, 0
  br i1 %186, label %189, label %187

187:                                              ; preds = %184
  %188 = load i32, i32* %46, align 4
  br label %208

189:                                              ; preds = %184
  %190 = add i32 %102, 1
  %191 = load i32, i32* %46, align 4
  %192 = icmp slt i32 %190, %191
  br i1 %192, label %193, label %222

193:                                              ; preds = %189
  %194 = load i64*, i64** %99, align 8
  %195 = sext i32 %190 to i64
  %196 = sext i32 %191 to i64
  br label %200

197:                                              ; preds = %200
  %198 = add nsw i64 %201, 1
  %199 = icmp slt i64 %198, %196
  br i1 %199, label %200, label %218

200:                                              ; preds = %193, %197
  %201 = phi i64 [ %195, %193 ], [ %198, %197 ]
  %202 = getelementptr inbounds i64, i64* %194, i64 %201
  %203 = load i64, i64* %202, align 8
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %197, label %205

205:                                              ; preds = %200
  %206 = trunc i64 %201 to i32
  %207 = shl i32 %206, 6
  br label %208

208:                                              ; preds = %205, %187
  %209 = phi i32 [ %188, %187 ], [ %191, %205 ]
  %210 = phi i32 [ %102, %187 ], [ %206, %205 ]
  %211 = phi i32 [ %185, %187 ], [ %207, %205 ]
  %212 = phi i64 [ %104, %187 ], [ %203, %205 ]
  %213 = tail call i64 @llvm.cttz.i64(i64 %212, i1 true) #12, !range !21
  %214 = trunc i64 %213 to i32
  %215 = add i32 %211, %214
  %216 = lshr i64 %212, %213
  %217 = lshr i64 %216, 1
  br label %222

218:                                              ; preds = %197
  %219 = trunc i64 %201 to i32
  %220 = shl i32 %219, 6
  %221 = trunc i64 %198 to i32
  br label %222

222:                                              ; preds = %218, %189, %208
  %223 = phi i32 [ %209, %208 ], [ %191, %189 ], [ %191, %218 ]
  %224 = phi i64 [ %217, %208 ], [ 0, %189 ], [ 0, %218 ]
  %225 = phi i32 [ %215, %208 ], [ %185, %189 ], [ %220, %218 ]
  %226 = phi i32 [ %210, %208 ], [ %190, %189 ], [ %221, %218 ]
  %227 = icmp slt i32 %226, %223
  br i1 %227, label %228, label %230

228:                                              ; preds = %222
  %229 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %2, align 8
  br label %100

230:                                              ; preds = %68, %222, %91, %14
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %15, i64 1
  %232 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %231, %11
  br i1 %232, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17AllocateRegistersEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 {
  %2 = alloca %"class.v8::internal::compiler::MidTierRegisterAllocator", align 8
  %3 = bitcast %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 616, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1
  call void @_ZN2v88internal8compiler27SinglePassRegisterAllocatorC2ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %5, i32 0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0) #12
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2
  call void @_ZN2v88internal8compiler27SinglePassRegisterAllocatorC2ENS1_12RegisterKindEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::SinglePassRegisterAllocator"* %6, i32 1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0) #12
  %7 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 3
  %8 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %8, i64 0, i32 2
  %10 = load %"class.v8::internal::ZoneVector.591"*, %"class.v8::internal::ZoneVector.591"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector.591", %"class.v8::internal::ZoneVector.591"* %10, i64 0, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %11, align 8, !noalias !44
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.591", %"class.v8::internal::ZoneVector.591"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %13, align 8, !noalias !44
  %15 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 10
  br label %160

18:                                               ; preds = %160, %1
  call void @_ZN2v88internal8compiler24MidTierRegisterAllocator25UpdateSpillRangesForLoopsEv(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nonnull %2)
  %19 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 2
  %20 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 7
  %22 = bitcast %"class.v8::internal::BitVector"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %20, i64 0, i32 4
  %25 = bitcast %"class.v8::internal::BitVector"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %19, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 7
  %28 = bitcast %"class.v8::internal::BitVector"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %26, i64 0, i32 5
  %31 = bitcast %"class.v8::internal::BitVector"** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 16, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = ptrtoint i32* %37 to i64
  %41 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  store i64 %40, i64* %42, align 8
  br label %43

43:                                               ; preds = %39, %35, %18
  %44 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 15, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %48, align 8
  %50 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %49 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %53 to i64*
  store i64 %52, i64* %54, align 8
  br label %55

55:                                               ; preds = %51, %47, %43
  %56 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 14, i32 0, i32 0, i32 0, i32 0
  %57 = load i8, i8* %56, align 8, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = ptrtoint i32* %61 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast i32** %65 to i64*
  store i64 %64, i64* %66, align 8
  br label %67

67:                                               ; preds = %63, %59, %55
  %68 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 13, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %73 to i64
  %77 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %77 to i64*
  store i64 %76, i64* %78, align 8
  br label %79

79:                                               ; preds = %75, %71, %67
  %80 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %81 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 5, i32 0, i32 0, i32 1
  %86 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %85 to i64*
  store i64 %84, i64* %86, align 8
  br label %87

87:                                               ; preds = %83, %79
  %88 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %88, align 8
  %90 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %89 to i64
  %93 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %93 to i64*
  store i64 %92, i64* %94, align 8
  br label %95

95:                                               ; preds = %91, %87
  %96 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 0
  %97 = load i8, i8* %96, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = icmp eq i32* %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = ptrtoint i32* %101 to i64
  %105 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %106 = bitcast i32** %105 to i64*
  store i64 %104, i64* %106, align 8
  br label %107

107:                                              ; preds = %103, %99, %95
  %108 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 8, !range !5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %112, align 8
  %114 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %113, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %113 to i64
  %117 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %117 to i64*
  store i64 %116, i64* %118, align 8
  br label %119

119:                                              ; preds = %115, %111, %107
  %120 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 14, i32 0, i32 0, i32 0, i32 0
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = ptrtoint i32* %125 to i64
  %129 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast i32** %129 to i64*
  store i64 %128, i64* %130, align 8
  br label %131

131:                                              ; preds = %127, %123, %119
  %132 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 13, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !5
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %136, align 8
  %138 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %137 to i64
  %141 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %141 to i64*
  store i64 %140, i64* %142, align 8
  br label %143

143:                                              ; preds = %139, %135, %131
  %144 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %145 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %144, align 8
  %146 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %143
  %148 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %145 to i64
  %149 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 5, i32 0, i32 0, i32 1
  %150 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %149 to i64*
  store i64 %148, i64* %150, align 8
  br label %151

151:                                              ; preds = %147, %143
  %152 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %153 = load %"class.v8::internal::compiler::RegisterIndex"*, %"class.v8::internal::compiler::RegisterIndex"** %152, align 8
  %154 = icmp eq %"class.v8::internal::compiler::RegisterIndex"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = ptrtoint %"class.v8::internal::compiler::RegisterIndex"* %153 to i64
  %157 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocator", %"class.v8::internal::compiler::MidTierRegisterAllocator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %158 = bitcast %"class.v8::internal::compiler::RegisterIndex"** %157 to i64*
  store i64 %156, i64* %158, align 8
  br label %159

159:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0i8(i64 616, i8* nonnull %3) #12
  ret void

160:                                              ; preds = %16, %160
  %161 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %12, %16 ], [ %162, %160 ]
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %161, i64 -1
  %163 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %162, align 8
  %164 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %17, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %164) #12
  call void @_ZN2v88internal8compiler24MidTierRegisterAllocator17AllocateRegistersEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::MidTierRegisterAllocator"* nonnull %2, %"class.v8::internal::compiler::InstructionBlock"* %163)
  %165 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %162, %14
  br i1 %165, label %18, label %160
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler25MidTierSpillSlotAllocator14OrderByLastUseclEPKNS2_9SpillSlotES6_(%"struct.v8::internal::compiler::MidTierSpillSlotAllocator::OrderByLastUse"* nocapture readnone, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* nocapture readonly, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %1, i64 0, i32 2, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %2, i64 0, i32 2, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %5, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler25MidTierSpillSlotAllocatorC2EPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierSpillSlotAllocator"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::Zone"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %9 = bitcast %"struct.std::__1::__compressed_pair_elem.783"* %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::ZonePriorityQueue"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2
  %12 = load i64, i64* %6, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.786"* %17 to i64*
  store i64 %12, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 3
  store i32 0, i32* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler25MidTierSpillSlotAllocator9AdvanceToEi(%"class.v8::internal::compiler::MidTierSpillSlotAllocator"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %4, %6
  br i1 %7, label %133, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %13

13:                                               ; preds = %8, %128
  %14 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %4, %8 ], [ %131, %128 ]
  %15 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %15, i64 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %1
  br i1 %18, label %19, label %133

19:                                               ; preds = %13
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, align 8, !noalias !47
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %22 = load i64, i64* %21, align 8, !noalias !47
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %24 = load i64, i64* %23, align 8, !noalias !47
  %25 = sub i64 %24, %22
  %26 = icmp ult i64 %25, 24
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %19
  %28 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 24) #12, !noalias !47
  br label %31

29:                                               ; preds = %19
  %30 = add i64 %22, 24
  store i64 %30, i64* %21, align 8, !noalias !47
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64 [ %28, %27 ], [ %22, %29 ]
  %33 = inttoptr i64 %32 to %"struct.std::__1::__list_node"*
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %34, align 8, !noalias !47
  %35 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1
  %36 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %14 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 0
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %34, align 8
  %40 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %40, %"struct.std::__1::__list_node_base"** %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 0
  store %"struct.std::__1::__list_node_base"* %39, %"struct.std::__1::__list_node_base"** %42, align 8
  store %"struct.std::__1::__list_node_base"* %39, %"struct.std::__1::__list_node_base"** %11, align 8
  %43 = load i64, i64* %12, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %12, align 8
  %45 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3, align 8
  %46 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %5, align 8
  %47 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %45 to i64
  %48 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %46 to i64
  %49 = sub i64 %48, %47
  %50 = ashr exact i64 %49, 3
  %51 = icmp sgt i64 %49, 8
  br i1 %51, label %52, label %128

52:                                               ; preds = %31
  %53 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %46, i64 -1
  %54 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %45 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %53 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %54, align 8
  store i64 %55, i64* %56, align 8
  %58 = add nsw i64 %50, -1
  %59 = icmp eq i64 %49, 16
  br i1 %59, label %128, label %60

60:                                               ; preds = %52
  %61 = add nsw i64 %50, -3
  %62 = sdiv i64 %61, 2
  %63 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %45, i64 1
  %64 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %63 to i64
  %65 = icmp sgt i64 %58, 2
  br i1 %65, label %66, label %78

66:                                               ; preds = %60
  %67 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %63, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %45, i64 2
  %69 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %67, i64 0, i32 2, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %69, i64 0, i32 2, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %71, %73
  %75 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %68 to i64
  %76 = select i1 %74, i64 %75, i64 %64
  %77 = select i1 %74, i64 2, i64 1
  br label %78

78:                                               ; preds = %66, %60
  %79 = phi i64 [ %64, %60 ], [ %76, %66 ]
  %80 = phi i64 [ 1, %60 ], [ %77, %66 ]
  %81 = inttoptr i64 %79 to %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**
  %82 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %81, align 8
  %83 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %45, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %82, i64 0, i32 2, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %83, i64 0, i32 2, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %85, %87
  %89 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %83 to i64
  br i1 %88, label %128, label %90

90:                                               ; preds = %78, %117
  %91 = phi i64 [ %118, %117 ], [ %79, %78 ]
  %92 = phi i64 [ %91, %117 ], [ %47, %78 ]
  %93 = phi i64 [ %119, %117 ], [ %80, %78 ]
  %94 = inttoptr i64 %91 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = inttoptr i64 %92 to i64*
  store i64 %95, i64* %96, align 8
  %97 = icmp slt i64 %62, %93
  br i1 %97, label %126, label %98

98:                                               ; preds = %90
  %99 = shl nsw i64 %93, 1
  %100 = or i64 %99, 1
  %101 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %45, i64 %100
  %102 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %101 to i64
  %103 = add nsw i64 %100, 1
  %104 = icmp slt i64 %103, %58
  br i1 %104, label %105, label %117

105:                                              ; preds = %98
  %106 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %101, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %101, i64 1
  %108 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %106, i64 0, i32 2, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %108, i64 0, i32 2, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %110, %112
  %114 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %107 to i64
  %115 = select i1 %113, i64 %114, i64 %102
  %116 = select i1 %113, i64 %103, i64 %100
  br label %117

117:                                              ; preds = %105, %98
  %118 = phi i64 [ %102, %98 ], [ %115, %105 ]
  %119 = phi i64 [ %100, %98 ], [ %116, %105 ]
  %120 = inttoptr i64 %118 to %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**
  %121 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %121, i64 0, i32 2, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = load i32, i32* %86, align 4
  %125 = icmp sgt i32 %123, %124
  br i1 %125, label %126, label %90

126:                                              ; preds = %117, %90
  %127 = inttoptr i64 %91 to i64*
  store i64 %89, i64* %127, align 8
  br label %128

128:                                              ; preds = %31, %52, %78, %126
  %129 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %5, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %129, i64 -1
  store %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %130, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %5, align 8
  %131 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3, align 8
  %132 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %131, %130
  br i1 %132, label %133, label %13

133:                                              ; preds = %13, %128, %2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 3
  store i32 %1, i32* %134, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* @_ZN2v88internal8compiler25MidTierSpillSlotAllocator16GetFreeSpillSlotEi(%"class.v8::internal::compiler::MidTierSpillSlotAllocator"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %11, %2
  %6 = phi %"struct.std::__1::__list_node_base"** [ %3, %2 ], [ %18, %11 ]
  %7 = bitcast %"struct.std::__1::__list_node_base"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to %"struct.std::__1::__list_node_base"*
  %10 = icmp eq %"struct.std::__1::__list_node_base"* %4, %9
  br i1 %10, label %34, label %11

11:                                               ; preds = %5
  %12 = inttoptr i64 %8 to %"struct.std::__1::__list_node"*
  %13 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %12, i64 0, i32 1
  %14 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %1
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 1
  br i1 %17, label %19, label %5

19:                                               ; preds = %11
  %20 = inttoptr i64 %8 to %"struct.std::__1::__list_node_base"*
  %21 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = inttoptr i64 %8 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %5, %19
  %35 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* [ %14, %19 ], [ null, %5 ]
  ret %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler25MidTierSpillSlotAllocator8AllocateEPNS1_19VirtualRegisterDataE(%"class.v8::internal::compiler::MidTierSpillSlotAllocator"*, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %4 to i64**
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 8
  %9 = add i8 %8, -1
  %10 = icmp ult i8 %9, 14
  br i1 %10, label %12, label %11

11:                                               ; preds = %12, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

12:                                               ; preds = %2
  %13 = zext i8 %9 to i16
  %14 = lshr i16 16351, %13
  %15 = and i16 %14, 1
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %11, label %17

17:                                               ; preds = %12
  %18 = sext i8 %9 to i64
  %19 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN2v88internal8compiler25MidTierSpillSlotAllocator8AllocateEPNS1_19VirtualRegisterDataE, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i64, i64* %6, align 4
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  tail call void @_ZN2v88internal8compiler25MidTierSpillSlotAllocator9AdvanceToEi(%"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i32 %22)
  %25 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %35, %17
  %29 = phi %"struct.std::__1::__list_node_base"** [ %26, %17 ], [ %42, %35 ]
  %30 = bitcast %"struct.std::__1::__list_node_base"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %31 to %"struct.std::__1::__list_node_base"*
  %33 = icmp eq %"struct.std::__1::__list_node_base"* %27, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* null, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %3, align 8
  br label %64

35:                                               ; preds = %28
  %36 = inttoptr i64 %31 to %"struct.std::__1::__list_node"*
  %37 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %36, i64 0, i32 1
  %38 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %20
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 1
  br i1 %41, label %43, label %28

43:                                               ; preds = %35
  %44 = inttoptr i64 %31 to %"struct.std::__1::__list_node_base"*
  %45 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 0
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64*
  store i64 %46, i64* %50, align 8
  %51 = inttoptr i64 %31 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64**
  %54 = load i64*, i64** %53, align 8
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, -1
  store i64 %57, i64* %55, align 8
  store %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %38, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %3, align 8
  %58 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %38, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %38, i64 0, i32 2, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %38, i64 0, i32 2, i32 1
  %63 = load i32, i32* %62, align 4
  br label %109

64:                                               ; preds = %34, %43
  %65 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 0
  %66 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %66, i64 0, i32 2
  %68 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %67, align 8
  %69 = icmp ugt i32 %20, 8
  %70 = select i1 %69, i32 %20, i32 8
  %71 = lshr exact i32 %70, 3
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %68, i64 0, i32 3
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %68, i64 0, i32 3, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i8 %9, 13
  br i1 %75, label %78, label %76

76:                                               ; preds = %64
  %77 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator8AllocateEi(%"class.v8::internal::AlignedSlotAllocator"* %72, i32 %71) #12
  br label %80

78:                                               ; preds = %64
  %79 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"* %72, i32 %71) #12
  br label %80

80:                                               ; preds = %76, %78
  %81 = phi i32 [ %77, %76 ], [ %79, %78 ]
  %82 = load i32, i32* %73, align 4
  %83 = sub i32 %82, %74
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %68, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %83, %85
  store i32 %86, i32* %84, align 4
  %87 = add nsw i32 %71, -1
  %88 = add i32 %87, %81
  %89 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %65, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %89, i64 0, i32 1
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 2
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 3
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %95, %93
  %97 = icmp ult i64 %96, 16
  br i1 %97, label %98, label %100, !prof !2

98:                                               ; preds = %80
  %99 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %91, i64 16) #12
  br label %102

100:                                              ; preds = %80
  %101 = add i64 %93, 16
  store i64 %101, i64* %92, align 8
  br label %102

102:                                              ; preds = %98, %100
  %103 = phi i64 [ %99, %98 ], [ %93, %100 ]
  %104 = inttoptr i64 %103 to %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*
  %105 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %104, i64 0, i32 0
  store i32 %88, i32* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %104, i64 0, i32 1
  store i32 %20, i32* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %104, i64 0, i32 2, i32 0
  store i32 2147483647, i32* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %104, i64 0, i32 2, i32 1
  store i32 0, i32* %108, align 4
  store %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %104, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %3, align 8
  br label %109

109:                                              ; preds = %59, %102
  %110 = phi i32 [ 0, %102 ], [ %63, %59 ]
  %111 = phi i32 [ 2147483647, %102 ], [ %61, %59 ]
  %112 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* [ %104, %102 ], [ %38, %59 ]
  %113 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %112, i64 0, i32 2, i32 0
  %114 = icmp sgt i32 %111, %22
  %115 = select i1 %114, i32 %22, i32 %111
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %112, i64 0, i32 2, i32 1
  %117 = icmp slt i32 %110, %24
  %118 = select i1 %117, i32 %24, i32 %110
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i8 %8 to i64
  %122 = shl nuw nsw i64 %121, 5
  %123 = zext i32 %120 to i64
  %124 = shl i64 %123, 35
  %125 = or i64 %122, %124
  %126 = or i64 %125, 13
  %127 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %1 to %"class.v8::internal::compiler::PendingOperand"**
  %128 = load %"class.v8::internal::compiler::PendingOperand"*, %"class.v8::internal::compiler::PendingOperand"** %127, align 8
  %129 = icmp eq %"class.v8::internal::compiler::PendingOperand"* %128, null
  br i1 %129, label %137, label %130

130:                                              ; preds = %109, %130
  %131 = phi %"class.v8::internal::compiler::PendingOperand"* [ %135, %130 ], [ %128, %109 ]
  %132 = getelementptr inbounds %"class.v8::internal::compiler::PendingOperand", %"class.v8::internal::compiler::PendingOperand"* %131, i64 0, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, -8
  %135 = inttoptr i64 %134 to %"class.v8::internal::compiler::PendingOperand"*
  store i64 %126, i64* %132, align 8
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %137, label %130

137:                                              ; preds = %130, %109
  %138 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %0, i64 0, i32 1
  %139 = bitcast %"class.v8::internal::ZonePriorityQueue"* %138 to %"class.std::__1::priority_queue"*
  call void @_ZNSt3__114priority_queueIPN2v88internal8compiler25MidTierSpillSlotAllocator9SpillSlotENS2_10ZoneVectorIS6_EENS4_14OrderByLastUseEE4pushERKS6_(%"class.std::__1::priority_queue"* %139, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114priority_queueIPN2v88internal8compiler25MidTierSpillSlotAllocator9SpillSlotENS2_10ZoneVectorIS6_EENS4_14OrderByLastUseEE4pushERKS6_(%"class.std::__1::priority_queue"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %6 to i64
  br i1 %7, label %19, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %4, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %16, align 8
  %18 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %17 to i64
  br label %246

19:                                               ; preds = %2
  %20 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %4 to i64
  %21 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3 to i64*
  %22 = bitcast %"class.std::__1::priority_queue"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 268435455
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::priority_queue"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %5 to i64*
  %32 = sub i64 %8, %23
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %33, 134217727
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 2
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %58, label %40

40:                                               ; preds = %35, %30
  %41 = phi i64 [ %38, %35 ], [ 268435455, %30 ]
  %42 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %43 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %42, align 8
  %44 = shl i64 %41, 3
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %46
  %50 = icmp ugt i64 %44, %49
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %40
  %52 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %43, i64 %44) #12
  br label %55

53:                                               ; preds = %40
  %54 = add i64 %46, %44
  store i64 %54, i64* %45, align 8
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %52, %51 ], [ %46, %53 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**
  br label %58

58:                                               ; preds = %55, %35
  %59 = phi i64 [ %41, %55 ], [ 0, %35 ]
  %60 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %57, %55 ], [ null, %35 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %60, i64 %25
  %62 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %60, i64 %59
  %63 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %62 to i64
  %64 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %61, i64 1
  %68 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %69, align 8
  %71 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %70 to i64
  %72 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %3, align 8
  %73 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, %70
  br i1 %73, label %243, label %74

74:                                               ; preds = %58
  %75 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 -1
  %76 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %75 to i64
  %77 = sub i64 %76, %71
  %78 = lshr i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = icmp ult i64 %79, 4
  br i1 %80, label %173, label %81

81:                                               ; preds = %74
  %82 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 -1
  %83 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %82 to i64
  %84 = sub i64 %83, %71
  %85 = lshr i64 %84, 3
  %86 = xor i64 %85, -1
  %87 = add nsw i64 %25, %86
  %88 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %60, i64 %87
  %89 = xor i64 %85, -1
  %90 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 %89
  %91 = icmp ult %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %88, %72
  %92 = icmp ult %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %90, %61
  %93 = and i1 %91, %92
  br i1 %93, label %173, label %94

94:                                               ; preds = %81
  %95 = and i64 %79, 4611686018427387900
  %96 = sub nsw i64 0, %95
  %97 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %61, i64 %96
  %98 = sub nsw i64 0, %95
  %99 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 %98
  %100 = add nsw i64 %95, -4
  %101 = lshr exact i64 %100, 2
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 1
  %104 = icmp eq i64 %100, 0
  br i1 %104, label %151, label %105

105:                                              ; preds = %94
  %106 = sub nuw nsw i64 %102, %103
  %107 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %61, i64 -1
  %108 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 -1
  %109 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %61, i64 -1
  %110 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 -1
  br label %111

111:                                              ; preds = %111, %105
  %112 = phi i64 [ 0, %105 ], [ %146, %111 ]
  %113 = phi i64 [ %106, %105 ], [ %147, %111 ]
  %114 = sub i64 0, %112
  %115 = sub i64 0, %112
  %116 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %107, i64 %114
  %117 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %108, i64 %115
  %118 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %117, i64 -1
  %119 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %118 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8, !alias.scope !50
  %121 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %117, i64 -2
  %122 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %121, i64 -1
  %123 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !50
  %125 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %116, i64 -1
  %126 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %125 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %126, align 8, !alias.scope !53, !noalias !50
  %127 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %116, i64 -2
  %128 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %128 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %129, align 8, !alias.scope !53, !noalias !50
  %130 = sub nuw nsw i64 -4, %112
  %131 = sub nuw nsw i64 -4, %112
  %132 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %109, i64 %130
  %133 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %110, i64 %131
  %134 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !50
  %137 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %133, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %137, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %138 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 8, !alias.scope !50
  %141 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %132, i64 -1
  %142 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %141 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %142, align 8, !alias.scope !53, !noalias !50
  %143 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %132, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %144 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %145, align 8, !alias.scope !53, !noalias !50
  %146 = add i64 %112, 8
  %147 = add i64 %113, -2
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %111, !llvm.loop !55

149:                                              ; preds = %111
  %150 = sub nuw nsw i64 -8, %112
  br label %151

151:                                              ; preds = %149, %94
  %152 = phi i64 [ 0, %94 ], [ %150, %149 ]
  %153 = icmp eq i64 %103, 0
  br i1 %153, label %171, label %154

154:                                              ; preds = %151
  %155 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %61, i64 -1
  %156 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %72, i64 -1
  %157 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %155, i64 %152
  %158 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %156, i64 %152
  %159 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %158, i64 -1
  %160 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8, !alias.scope !50
  %162 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %158, i64 -2
  %163 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %162, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !50
  %166 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %157, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %166 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %167, align 8, !alias.scope !53, !noalias !50
  %168 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %157, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %169 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %170, align 8, !alias.scope !53, !noalias !50
  br label %171

171:                                              ; preds = %151, %154
  %172 = icmp eq i64 %79, %95
  br i1 %172, label %243, label %173

173:                                              ; preds = %171, %81, %74
  %174 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %61, %81 ], [ %61, %74 ], [ %97, %171 ]
  %175 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %72, %81 ], [ %72, %74 ], [ %99, %171 ]
  %176 = getelementptr %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %175, i64 -1
  %177 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %176 to i64
  %178 = sub i64 %177, %71
  %179 = lshr i64 %178, 3
  %180 = add nuw nsw i64 %179, 1
  %181 = and i64 %180, 7
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %173, %183
  %184 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %187, %183 ], [ %174, %173 ]
  %185 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %188, %183 ], [ %175, %173 ]
  %186 = phi i64 [ %192, %183 ], [ %181, %173 ]
  %187 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %184, i64 -1
  %188 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %185, i64 -1
  %189 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %183, !llvm.loop !56

194:                                              ; preds = %183, %173
  %195 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ undef, %173 ], [ %187, %183 ]
  %196 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %174, %173 ], [ %187, %183 ]
  %197 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %175, %173 ], [ %188, %183 ]
  %198 = icmp ult i64 %178, 56
  br i1 %198, label %243, label %199

199:                                              ; preds = %194, %199
  %200 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %237, %199 ], [ %196, %194 ]
  %201 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %238, %199 ], [ %197, %194 ]
  %202 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -1
  %203 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -1
  %204 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -2
  %208 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -2
  %209 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -3
  %213 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -3
  %214 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -4
  %218 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -4
  %219 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -5
  %223 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -5
  %224 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -6
  %228 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -6
  %229 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -7
  %233 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -7
  %234 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %200, i64 -8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %201, i64 -8
  %239 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %238, %70
  br i1 %242, label %243, label %199, !llvm.loop !57

243:                                              ; preds = %194, %199, %171, %58
  %244 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %61, %58 ], [ %97, %171 ], [ %195, %194 ], [ %237, %199 ]
  %245 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %244 to i64
  store i64 %245, i64* %22, align 8
  store i64 %68, i64* %21, align 8
  store i64 %63, i64* %31, align 8
  br label %246

246:                                              ; preds = %9, %243
  %247 = phi i64 [ %14, %9 ], [ %68, %243 ]
  %248 = phi i64 [ %18, %9 ], [ %245, %243 ]
  %249 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %4, %9 ], [ %61, %243 ]
  %250 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %17, %9 ], [ %244, %243 ]
  %251 = sub i64 %247, %248
  %252 = icmp sgt i64 %251, 8
  br i1 %252, label %253, label %285

253:                                              ; preds = %246
  %254 = lshr exact i64 %251, 3
  %255 = add nsw i64 %254, -2
  %256 = sdiv i64 %255, 2
  %257 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %250, i64 %256
  %258 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %257, align 8
  %259 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %249, align 8
  %260 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %258, i64 0, i32 2, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %259, i64 0, i32 2, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = icmp sgt i32 %261, %263
  %265 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %259 to i64
  br i1 %264, label %266, label %285

266:                                              ; preds = %253, %274
  %267 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %277, %274 ], [ %257, %253 ]
  %268 = phi %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** [ %267, %274 ], [ %249, %253 ]
  %269 = phi i64 [ %276, %274 ], [ %256, %253 ]
  %270 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %267 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %268 to i64*
  store i64 %271, i64* %272, align 8
  %273 = icmp eq i64 %269, 0
  br i1 %273, label %283, label %274

274:                                              ; preds = %266
  %275 = add nsw i64 %269, -1
  %276 = sdiv i64 %275, 2
  %277 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %250, i64 %276
  %278 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %277, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot", %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"* %278, i64 0, i32 2, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = load i32, i32* %262, align 4
  %282 = icmp sgt i32 %280, %281
  br i1 %282, label %266, label %283

283:                                              ; preds = %274, %266
  %284 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %267 to i64*
  store i64 %265, i64* %284, align 8
  br label %285

285:                                              ; preds = %246, %253, %283
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18AllocateSpillSlotsEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 {
  %2 = alloca %"class.v8::internal::ZoneVector.788", align 8
  %3 = alloca %"class.v8::internal::compiler::MidTierSpillSlotAllocator", align 8
  %4 = bitcast %"class.v8::internal::ZoneVector.788"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::Zone"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 2, i32 1
  %9 = bitcast %"struct.std::__1::__compressed_pair_elem.793"* %8 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #12
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2
  br i1 %12, label %14, label %16

14:                                               ; preds = %1
  %15 = bitcast %"union.v8::internal::BitVector::DataStorage"* %13 to i64*
  br label %19

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %13, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  br label %19

19:                                               ; preds = %16, %14
  %20 = phi i64* [ %15, %14 ], [ %18, %16 ]
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %46

23:                                               ; preds = %19
  %24 = sext i32 %11 to i64
  %25 = icmp sgt i32 %11, 1
  br i1 %25, label %26, label %55

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %26, %36
  %33 = phi i64 [ %34, %36 ], [ 1, %26 ]
  %34 = add nuw nsw i64 %33, 1
  %35 = icmp eq i64 %34, %24
  br i1 %35, label %367, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds i64, i64* %28, i64 %34
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %32, label %40

40:                                               ; preds = %36
  %41 = trunc i64 %34 to i32
  br label %42

42:                                               ; preds = %40, %26
  %43 = phi i32 [ %41, %40 ], [ 1, %26 ]
  %44 = phi i64 [ %38, %40 ], [ %30, %26 ]
  %45 = shl i32 %43, 6
  br label %46

46:                                               ; preds = %42, %19
  %47 = phi i32 [ 0, %19 ], [ %43, %42 ]
  %48 = phi i32 [ 0, %19 ], [ %45, %42 ]
  %49 = phi i64 [ %21, %19 ], [ %44, %42 ]
  %50 = tail call i64 @llvm.cttz.i64(i64 %49, i1 true) #12, !range !21
  %51 = trunc i64 %50 to i32
  %52 = or i32 %48, %51
  %53 = lshr i64 %49, %50
  %54 = lshr i64 %53, 1
  br label %55

55:                                               ; preds = %23, %46
  %56 = phi i32 [ %47, %46 ], [ 1, %23 ]
  %57 = phi i64 [ %54, %46 ], [ 0, %23 ]
  %58 = phi i32 [ %52, %46 ], [ 0, %23 ]
  %59 = icmp slt i32 %56, %11
  br i1 %59, label %60, label %367

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"*** %62 to i64*
  %65 = bitcast %"class.v8::internal::ZoneVector.788"* %2 to i64*
  %66 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"*** %63 to i64*
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2, i32 0
  br label %70

70:                                               ; preds = %60, %359
  %71 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ null, %60 ], [ %319, %359 ]
  %72 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ null, %60 ], [ %320, %359 ]
  %73 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ null, %60 ], [ %321, %359 ]
  %74 = phi i32 [ %58, %60 ], [ %363, %359 ]
  %75 = phi i64 [ %57, %60 ], [ %362, %359 ]
  %76 = phi i32 [ %56, %60 ], [ %361, %359 ]
  %77 = sext i32 %74 to i64
  %78 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %61, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %78, i64 %77
  %80 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %79, i64 0, i32 0
  %81 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %81, null
  br i1 %82, label %318, label %83

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %81, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 7
  %87 = icmp eq i64 %86, 4
  br i1 %87, label %88, label %318

88:                                               ; preds = %83
  %89 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %79 to i64
  %90 = load %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"*** %63, align 8
  %91 = icmp ult %"class.v8::internal::compiler::VirtualRegisterData"** %73, %90
  %92 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %90 to i64
  br i1 %91, label %93, label %97

93:                                               ; preds = %88
  %94 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %73 to i64*
  store i64 %89, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %73, i64 1
  %96 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %95 to i64
  store i64 %96, i64* %64, align 8
  br label %318

97:                                               ; preds = %88
  %98 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %73 to i64
  %99 = load i64, i64* %65, align 8
  %100 = sub i64 %98, %99
  %101 = ashr exact i64 %100, 3
  %102 = add nsw i64 %101, 1
  %103 = icmp ugt i64 %102, 268435455
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = bitcast %"class.v8::internal::ZoneVector.788"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %105) #13
  unreachable

106:                                              ; preds = %97
  %107 = sub i64 %92, %99
  %108 = ashr exact i64 %107, 3
  %109 = icmp ult i64 %108, 134217727
  br i1 %109, label %110, label %115

110:                                              ; preds = %106
  %111 = ashr exact i64 %107, 2
  %112 = icmp ult i64 %111, %102
  %113 = select i1 %112, i64 %102, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %132, label %115

115:                                              ; preds = %110, %106
  %116 = phi i64 [ %113, %110 ], [ 268435455, %106 ]
  %117 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %67, align 8
  %118 = shl i64 %116, 3
  %119 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %117, i64 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %117, i64 0, i32 3
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %122, %120
  %124 = icmp ugt i64 %118, %123
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %115
  %126 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %117, i64 %118) #12
  br label %129

127:                                              ; preds = %115
  %128 = add i64 %120, %118
  store i64 %128, i64* %119, align 8
  br label %129

129:                                              ; preds = %127, %125
  %130 = phi i64 [ %126, %125 ], [ %120, %127 ]
  %131 = inttoptr i64 %130 to %"class.v8::internal::compiler::VirtualRegisterData"**
  br label %132

132:                                              ; preds = %129, %110
  %133 = phi i64 [ %116, %129 ], [ 0, %110 ]
  %134 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %131, %129 ], [ null, %110 ]
  %135 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %134, i64 %101
  %136 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %134, i64 %133
  %137 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %136 to i64
  %138 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %135 to i64*
  store i64 %89, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %135, i64 1
  %140 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %139 to i64
  %141 = load %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"*** %68, align 8
  %142 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %141 to i64
  %143 = load %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"*** %62, align 8
  %144 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %143, %141
  br i1 %144, label %315, label %145

145:                                              ; preds = %132
  %146 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 -1
  %147 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %146 to i64
  %148 = sub i64 %147, %142
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = icmp ult i64 %150, 4
  br i1 %151, label %245, label %152

152:                                              ; preds = %145
  %153 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %134, i64 -1
  %154 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 -1
  %155 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %154 to i64
  %156 = sub i64 %155, %142
  %157 = lshr i64 %156, 3
  %158 = sub nsw i64 %101, %157
  %159 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %153, i64 %158
  %160 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 -1
  %161 = sub nsw i64 0, %157
  %162 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %160, i64 %161
  %163 = icmp ult %"class.v8::internal::compiler::VirtualRegisterData"** %159, %143
  %164 = icmp ult %"class.v8::internal::compiler::VirtualRegisterData"** %162, %135
  %165 = and i1 %163, %164
  br i1 %165, label %245, label %166

166:                                              ; preds = %152
  %167 = and i64 %150, 4611686018427387900
  %168 = sub nsw i64 0, %167
  %169 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %135, i64 %168
  %170 = sub nsw i64 0, %167
  %171 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 %170
  %172 = add nsw i64 %167, -4
  %173 = lshr exact i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 1
  %176 = icmp eq i64 %172, 0
  br i1 %176, label %221, label %177

177:                                              ; preds = %166
  %178 = sub nuw nsw i64 %174, %175
  %179 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %135, i64 -1
  %180 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 -1
  %181 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %135, i64 -1
  %182 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 -1
  br label %183

183:                                              ; preds = %183, %177
  %184 = phi i64 [ 0, %177 ], [ %218, %183 ]
  %185 = phi i64 [ %178, %177 ], [ %219, %183 ]
  %186 = sub i64 0, %184
  %187 = sub i64 0, %184
  %188 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %179, i64 %186
  %189 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %180, i64 %187
  %190 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %189, i64 -1
  %191 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %190 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 8, !alias.scope !58
  %193 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %189, i64 -2
  %194 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %194 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8, !alias.scope !58
  %197 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %188, i64 -1
  %198 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %197 to <2 x i64>*
  store <2 x i64> %192, <2 x i64>* %198, align 8, !alias.scope !61, !noalias !58
  %199 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %188, i64 -2
  %200 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %199, i64 -1
  %201 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %200 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %201, align 8, !alias.scope !61, !noalias !58
  %202 = sub nuw nsw i64 -4, %184
  %203 = sub nuw nsw i64 -4, %184
  %204 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %181, i64 %202
  %205 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %182, i64 %203
  %206 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %205, i64 -1
  %207 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %206 to <2 x i64>*
  %208 = load <2 x i64>, <2 x i64>* %207, align 8, !alias.scope !58
  %209 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %205, i64 -2
  %210 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %209, i64 -1
  %211 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %210 to <2 x i64>*
  %212 = load <2 x i64>, <2 x i64>* %211, align 8, !alias.scope !58
  %213 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %204, i64 -1
  %214 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %213 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %214, align 8, !alias.scope !61, !noalias !58
  %215 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %204, i64 -2
  %216 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %215, i64 -1
  %217 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %216 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %217, align 8, !alias.scope !61, !noalias !58
  %218 = add i64 %184, 8
  %219 = add i64 %185, -2
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %183, !llvm.loop !63

221:                                              ; preds = %183, %166
  %222 = phi i64 [ 0, %166 ], [ %218, %183 ]
  %223 = icmp eq i64 %175, 0
  br i1 %223, label %243, label %224

224:                                              ; preds = %221
  %225 = sub i64 0, %222
  %226 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %135, i64 -1
  %227 = sub i64 0, %222
  %228 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %143, i64 -1
  %229 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %226, i64 %225
  %230 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %228, i64 %227
  %231 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %230, i64 -1
  %232 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %231 to <2 x i64>*
  %233 = load <2 x i64>, <2 x i64>* %232, align 8, !alias.scope !58
  %234 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %230, i64 -2
  %235 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %234, i64 -1
  %236 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !58
  %238 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %229, i64 -1
  %239 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %238 to <2 x i64>*
  store <2 x i64> %233, <2 x i64>* %239, align 8, !alias.scope !61, !noalias !58
  %240 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %229, i64 -2
  %241 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %240, i64 -1
  %242 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %241 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %242, align 8, !alias.scope !61, !noalias !58
  br label %243

243:                                              ; preds = %221, %224
  %244 = icmp eq i64 %150, %167
  br i1 %244, label %315, label %245

245:                                              ; preds = %243, %152, %145
  %246 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %135, %152 ], [ %135, %145 ], [ %169, %243 ]
  %247 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %143, %152 ], [ %143, %145 ], [ %171, %243 ]
  %248 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %247, i64 -1
  %249 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %248 to i64
  %250 = sub i64 %249, %142
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %266, label %255

255:                                              ; preds = %245, %255
  %256 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %259, %255 ], [ %246, %245 ]
  %257 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %260, %255 ], [ %247, %245 ]
  %258 = phi i64 [ %264, %255 ], [ %253, %245 ]
  %259 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %256, i64 -1
  %260 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %257, i64 -1
  %261 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = add i64 %258, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %255, !llvm.loop !64

266:                                              ; preds = %255, %245
  %267 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ undef, %245 ], [ %259, %255 ]
  %268 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %246, %245 ], [ %259, %255 ]
  %269 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %247, %245 ], [ %260, %255 ]
  %270 = icmp ult i64 %250, 56
  br i1 %270, label %315, label %271

271:                                              ; preds = %266, %271
  %272 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %309, %271 ], [ %268, %266 ]
  %273 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %310, %271 ], [ %269, %266 ]
  %274 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -1
  %275 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -1
  %276 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %274 to i64*
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -2
  %280 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -2
  %281 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %279 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -3
  %285 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -3
  %286 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %284 to i64*
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -4
  %290 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -4
  %291 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %289 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -5
  %295 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -5
  %296 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %294 to i64*
  store i64 %297, i64* %298, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -6
  %300 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -6
  %301 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %299 to i64*
  store i64 %302, i64* %303, align 8
  %304 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -7
  %305 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -7
  %306 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %304 to i64*
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %272, i64 -8
  %310 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %273, i64 -8
  %311 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %309 to i64*
  store i64 %312, i64* %313, align 8
  %314 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %310, %141
  br i1 %314, label %315, label %271, !llvm.loop !65

315:                                              ; preds = %266, %271, %243, %132
  %316 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %135, %132 ], [ %169, %243 ], [ %267, %266 ], [ %309, %271 ]
  %317 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %316 to i64
  store i64 %317, i64* %65, align 8
  store i64 %140, i64* %64, align 8
  store i64 %137, i64* %66, align 8
  br label %318

318:                                              ; preds = %70, %315, %93, %83
  %319 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %71, %70 ], [ %139, %315 ], [ %95, %93 ], [ %71, %83 ]
  %320 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %72, %70 ], [ %139, %315 ], [ %95, %93 ], [ %72, %83 ]
  %321 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %73, %70 ], [ %139, %315 ], [ %95, %93 ], [ %73, %83 ]
  %322 = add nsw i32 %74, 1
  %323 = icmp eq i64 %75, 0
  br i1 %323, label %326, label %324

324:                                              ; preds = %318
  %325 = load i32, i32* %10, align 4
  br label %345

326:                                              ; preds = %318
  %327 = add i32 %76, 1
  %328 = load i32, i32* %10, align 4
  %329 = icmp slt i32 %327, %328
  br i1 %329, label %330, label %359

330:                                              ; preds = %326
  %331 = load i64*, i64** %69, align 8
  %332 = sext i32 %327 to i64
  %333 = sext i32 %328 to i64
  br label %337

334:                                              ; preds = %337
  %335 = add nsw i64 %338, 1
  %336 = icmp slt i64 %335, %333
  br i1 %336, label %337, label %355

337:                                              ; preds = %330, %334
  %338 = phi i64 [ %332, %330 ], [ %335, %334 ]
  %339 = getelementptr inbounds i64, i64* %331, i64 %338
  %340 = load i64, i64* %339, align 8
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %334, label %342

342:                                              ; preds = %337
  %343 = trunc i64 %338 to i32
  %344 = shl i32 %343, 6
  br label %345

345:                                              ; preds = %342, %324
  %346 = phi i32 [ %325, %324 ], [ %328, %342 ]
  %347 = phi i32 [ %76, %324 ], [ %343, %342 ]
  %348 = phi i32 [ %322, %324 ], [ %344, %342 ]
  %349 = phi i64 [ %75, %324 ], [ %340, %342 ]
  %350 = tail call i64 @llvm.cttz.i64(i64 %349, i1 true) #12, !range !21
  %351 = trunc i64 %350 to i32
  %352 = add i32 %348, %351
  %353 = lshr i64 %349, %350
  %354 = lshr i64 %353, 1
  br label %359

355:                                              ; preds = %334
  %356 = trunc i64 %338 to i32
  %357 = shl i32 %356, 6
  %358 = trunc i64 %335 to i32
  br label %359

359:                                              ; preds = %355, %326, %345
  %360 = phi i32 [ %346, %345 ], [ %328, %326 ], [ %328, %355 ]
  %361 = phi i32 [ %347, %345 ], [ %327, %326 ], [ %358, %355 ]
  %362 = phi i64 [ %354, %345 ], [ 0, %326 ], [ 0, %355 ]
  %363 = phi i32 [ %352, %345 ], [ %322, %326 ], [ %357, %355 ]
  %364 = icmp slt i32 %361, %360
  br i1 %364, label %70, label %365

365:                                              ; preds = %359
  %366 = load %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"*** %68, align 8
  br label %367

367:                                              ; preds = %32, %365, %55
  %368 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %319, %365 ], [ null, %55 ], [ null, %32 ]
  %369 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %366, %365 ], [ null, %55 ], [ null, %32 ]
  %370 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %320, %365 ], [ null, %55 ], [ null, %32 ]
  %371 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 0
  %372 = getelementptr inbounds %"class.v8::internal::ZoneVector.788", %"class.v8::internal::ZoneVector.788"* %2, i64 0, i32 0, i32 0, i32 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEvT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %369, %"class.v8::internal::compiler::VirtualRegisterData"** %370) #12
  %373 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %373) #12
  %374 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 1
  %376 = load i64, i64* %6, align 8
  %377 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %378 = bitcast %"struct.std::__1::__compressed_pair_elem.783"* %377 to i64*
  store i64 %376, i64* %378, align 8
  %379 = bitcast %"class.v8::internal::ZonePriorityQueue"* %375 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 0, i64 24, i1 false) #12
  %380 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 2
  %381 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %380, i64 0, i32 0, i32 0, i32 0
  %382 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %380, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %381, %"struct.std::__1::__list_node_base"** %382, align 8
  %383 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %381, %"struct.std::__1::__list_node_base"** %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %386 = bitcast %"struct.std::__1::__compressed_pair_elem.786"* %385 to i64*
  store i64 %376, i64* %386, align 8
  %387 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 3
  store i32 0, i32* %387, align 8
  %388 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %369, %368
  br i1 %388, label %415, label %430

389:                                              ; preds = %430
  %390 = load i64, i64* %384, align 8
  %391 = icmp eq i64 %390, 0
  %392 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 2, i32 0, i32 0
  br i1 %391, label %415, label %393

393:                                              ; preds = %389
  %394 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %383, align 8
  %395 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %392, i64 0, i32 0
  %396 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %392, i64 0, i32 0, i32 0
  %397 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %396, align 8
  %398 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %397, i64 0, i32 1
  %399 = bitcast %"struct.std::__1::__list_node_base"** %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %394, i64 0, i32 0
  %402 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %401, align 8
  %403 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %402, i64 0, i32 1
  %404 = bitcast %"struct.std::__1::__list_node_base"** %403 to i64*
  store i64 %400, i64* %404, align 8
  %405 = bitcast %"struct.std::__1::__list_node_base"* %394 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = bitcast %"struct.std::__1::__list_node_base"** %398 to i64**
  %408 = load i64*, i64** %407, align 8
  store i64 %406, i64* %408, align 8
  store i64 0, i64* %384, align 8
  %409 = icmp eq %"struct.std::__1::__list_node_base"* %394, %395
  br i1 %409, label %415, label %410

410:                                              ; preds = %393, %410
  %411 = phi %"struct.std::__1::__list_node_base"* [ %413, %410 ], [ %394, %393 ]
  %412 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %411, i64 0, i32 1
  %413 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %412, align 8
  %414 = icmp eq %"struct.std::__1::__list_node_base"* %413, %395
  br i1 %414, label %415, label %410

415:                                              ; preds = %410, %367, %393, %389
  %416 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"**, %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %416, align 8
  %418 = icmp eq %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %417, null
  br i1 %418, label %423, label %419

419:                                              ; preds = %415
  %420 = ptrtoint %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"** %417 to i64
  %421 = getelementptr inbounds %"class.v8::internal::compiler::MidTierSpillSlotAllocator", %"class.v8::internal::compiler::MidTierSpillSlotAllocator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %422 = bitcast %"class.v8::internal::compiler::MidTierSpillSlotAllocator::SpillSlot"*** %421 to i64*
  store i64 %420, i64* %422, align 8
  br label %423

423:                                              ; preds = %415, %419
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %373) #12
  %424 = load %"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"*** %371, align 8
  %425 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %423
  %427 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %424 to i64
  %428 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"*** %372 to i64*
  store i64 %427, i64* %428, align 8
  br label %429

429:                                              ; preds = %423, %426
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #12
  ret void

430:                                              ; preds = %367, %430
  %431 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %433, %430 ], [ %369, %367 ]
  %432 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %431, align 8
  call void @_ZN2v88internal8compiler25MidTierSpillSlotAllocator8AllocateEPNS1_19VirtualRegisterDataE(%"class.v8::internal::compiler::MidTierSpillSlotAllocator"* nonnull %3, %"class.v8::internal::compiler::VirtualRegisterData"* %432)
  %433 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %431, i64 1
  %434 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %433, %368
  br i1 %434, label %389, label %430
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler28MidTierReferenceMapPopulatorC2EPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierReferenceMapPopulator"* nocapture, %"class.v8::internal::compiler::MidTierRegisterAllocationData"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::MidTierReferenceMapPopulator", %"class.v8::internal::compiler::MidTierReferenceMapPopulator"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler28MidTierReferenceMapPopulator16RecordReferencesERKNS1_19VirtualRegisterDataE(%"class.v8::internal::compiler::MidTierReferenceMapPopulator"* nocapture readonly, %"class.v8::internal::compiler::VirtualRegisterData"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::compiler::AllocatedOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %5, null
  br i1 %6, label %133, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 7
  %11 = icmp eq i64 %10, 5
  br i1 %11, label %12, label %133

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.v8::internal::compiler::MidTierReferenceMapPopulator", %"class.v8::internal::compiler::MidTierReferenceMapPopulator"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %14, i64 0, i32 3
  %16 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %16, i32 %18) #12
  switch i8 %19, label %20 [
    i8 9, label %23
    i8 8, label %23
    i8 6, label %23
  ]

20:                                               ; preds = %12
  %21 = or i8 %19, 1
  %22 = icmp eq i8 %21, 11
  br i1 %22, label %23, label %133

23:                                               ; preds = %12, %12, %12, %20
  %24 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %1, i64 0, i32 1
  %25 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %24, align 8
  %26 = bitcast %"class.v8::internal::compiler::AllocatedOperand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"* %1 to %"class.v8::internal::compiler::AllocatedOperand"**
  %28 = load %"class.v8::internal::compiler::AllocatedOperand"*, %"class.v8::internal::compiler::AllocatedOperand"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %13, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %32, i64 0, i32 8, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %32, i64 0, i32 8, i32 0, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %34, %36
  br i1 %37, label %43, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %25, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %25, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %25, i64 0, i32 1
  %42 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %25, i64 0, i32 2
  br label %44

43:                                               ; preds = %130, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %133

44:                                               ; preds = %38, %130
  %45 = phi i32* [ %34, %38 ], [ %131, %130 ]
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %39, align 4
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %130, label %49

49:                                               ; preds = %44
  %50 = load i32, i32* %40, align 4
  %51 = icmp slt i32 %46, %50
  br i1 %51, label %130, label %52

52:                                               ; preds = %49
  %53 = load %"class.v8::internal::compiler::MidTierRegisterAllocationData"*, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %13, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %53, i64 0, i32 3
  %55 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %54, align 8
  %56 = sext i32 %46 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %55, i64 0, i32 8, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, %56
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %55, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %61 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %60, align 8
  %62 = lshr i64 %59, 9
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %61, i64 %62
  %64 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %63, align 8
  %65 = and i64 %59, 511
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %64, i64 %65
  %67 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %67, i64 0, i32 4
  %69 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %69, i64 0, i32 4, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %41, align 8
  %73 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 1
  %76 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %72, i64 0, i32 2
  br i1 %75, label %77, label %79

77:                                               ; preds = %52
  %78 = bitcast %"union.v8::internal::BitVector::DataStorage"* %76 to i64*
  br label %85

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %76, i64 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = sdiv i32 %71, 64
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i64, i64* %81, i64 %83
  br label %85

85:                                               ; preds = %79, %77
  %86 = phi i64* [ %78, %77 ], [ %84, %79 ]
  %87 = load i64, i64* %86, align 8
  %88 = srem i32 %71, 64
  %89 = sdiv i32 %71, 64
  %90 = zext i32 %88 to i64
  %91 = shl i64 1, %90
  %92 = and i64 %87, %91
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %130, label %94

94:                                               ; preds = %85
  %95 = load %"class.v8::internal::ZoneVector.712"*, %"class.v8::internal::ZoneVector.712"** %42, align 8
  %96 = icmp eq %"class.v8::internal::ZoneVector.712"* %95, null
  br i1 %96, label %127, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %95, i64 0, i32 0, i32 0, i32 0
  %99 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::ZoneVector.712", %"class.v8::internal::ZoneVector.712"* %95, i64 0, i32 0, i32 0, i32 1
  %101 = load %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"*, %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"** %100, align 8
  %102 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %99, %101
  br i1 %102, label %130, label %103

103:                                              ; preds = %97
  %104 = sext i32 %89 to i64
  br label %107

105:                                              ; preds = %121
  %106 = icmp eq %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %126, %101
  br i1 %106, label %130, label %107

107:                                              ; preds = %105, %103
  %108 = phi %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* [ %99, %103 ], [ %126, %105 ]
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %108, i64 0, i32 2
  %110 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %110, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  %114 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %110, i64 0, i32 2
  br i1 %113, label %115, label %117

115:                                              ; preds = %107
  %116 = bitcast %"union.v8::internal::BitVector::DataStorage"* %114 to i64*
  br label %121

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %114, i64 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 %104
  br label %121

121:                                              ; preds = %117, %115
  %122 = phi i64* [ %116, %115 ], [ %120, %117 ]
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, %91
  %125 = icmp eq i64 %124, 0
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput", %"struct.v8::internal::compiler::VirtualRegisterData::DeferredSpillSlotOutput"* %108, i64 1
  br i1 %125, label %105, label %127

127:                                              ; preds = %121, %94
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %67, i64 0, i32 3
  %129 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %128, align 8
  call void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"* %129, %"class.v8::internal::compiler::AllocatedOperand"* nonnull dereferenceable(8) %3) #12
  br label %130

130:                                              ; preds = %105, %97, %85, %127, %44, %49
  %131 = getelementptr inbounds i32, i32* %45, i64 1
  %132 = icmp eq i32* %131, %36
  br i1 %132, label %43, label %44

133:                                              ; preds = %2, %20, %7, %43
  ret void
}

declare void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::AllocatedOperand"* dereferenceable(8)) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21PopulateReferenceMapsEPNS1_29MidTierRegisterAllocationDataE(%"class.v8::internal::compiler::MidTierRegisterAllocationData"*) local_unnamed_addr #2 {
  %2 = alloca %"class.v8::internal::compiler::MidTierReferenceMapPopulator", align 8
  %3 = bitcast %"class.v8::internal::compiler::MidTierReferenceMapPopulator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::compiler::MidTierReferenceMapPopulator", %"class.v8::internal::compiler::MidTierReferenceMapPopulator"* %2, i64 0, i32 0
  store %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, %"class.v8::internal::compiler::MidTierRegisterAllocationData"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2
  br i1 %7, label %9, label %11

9:                                                ; preds = %1
  %10 = bitcast %"union.v8::internal::BitVector::DataStorage"* %8 to i64*
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %8, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  br label %14

14:                                               ; preds = %11, %9
  %15 = phi i64* [ %10, %9 ], [ %13, %11 ]
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %14
  %19 = sext i32 %6 to i64
  %20 = icmp sgt i32 %6, 1
  br i1 %20, label %21, label %50

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %21, %31
  %28 = phi i64 [ %29, %31 ], [ 1, %21 ]
  %29 = add nuw nsw i64 %28, 1
  %30 = icmp eq i64 %29, %19
  br i1 %30, label %108, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i64, i64* %23, i64 %29
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %27, label %35

35:                                               ; preds = %31
  %36 = trunc i64 %29 to i32
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ 1, %21 ]
  %39 = phi i64 [ %33, %35 ], [ %25, %21 ]
  %40 = shl i32 %38, 6
  br label %41

41:                                               ; preds = %37, %14
  %42 = phi i32 [ 0, %14 ], [ %38, %37 ]
  %43 = phi i32 [ 0, %14 ], [ %40, %37 ]
  %44 = phi i64 [ %16, %14 ], [ %39, %37 ]
  %45 = tail call i64 @llvm.cttz.i64(i64 %44, i1 true) #12, !range !21
  %46 = trunc i64 %45 to i32
  %47 = or i32 %43, %46
  %48 = lshr i64 %44, %45
  %49 = lshr i64 %48, 1
  br label %50

50:                                               ; preds = %18, %41
  %51 = phi i64 [ %49, %41 ], [ 0, %18 ]
  %52 = phi i32 [ %42, %41 ], [ 1, %18 ]
  %53 = phi i32 [ %47, %41 ], [ 0, %18 ]
  %54 = icmp slt i32 %52, %6
  br i1 %54, label %55, label %108

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::compiler::MidTierRegisterAllocationData", %"class.v8::internal::compiler::MidTierRegisterAllocationData"* %0, i64 0, i32 9, i32 2, i32 0
  br label %58

58:                                               ; preds = %55, %102
  %59 = phi i32 [ %53, %55 ], [ %106, %102 ]
  %60 = phi i32 [ %52, %55 ], [ %105, %102 ]
  %61 = phi i64 [ %51, %55 ], [ %104, %102 ]
  %62 = sext i32 %59 to i64
  %63 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %56, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %63, i64 %62
  call void @_ZN2v88internal8compiler28MidTierReferenceMapPopulator16RecordReferencesERKNS1_19VirtualRegisterDataE(%"class.v8::internal::compiler::MidTierReferenceMapPopulator"* nonnull %2, %"class.v8::internal::compiler::VirtualRegisterData"* dereferenceable(32) %64)
  %65 = add nsw i32 %59, 1
  %66 = icmp eq i64 %61, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %58
  %68 = load i32, i32* %5, align 4
  br label %88

69:                                               ; preds = %58
  %70 = add nsw i32 %60, 1
  %71 = load i32, i32* %5, align 4
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %73, label %102

73:                                               ; preds = %69
  %74 = load i64*, i64** %57, align 8
  %75 = sext i32 %70 to i64
  %76 = sext i32 %71 to i64
  br label %80

77:                                               ; preds = %80
  %78 = add nsw i64 %81, 1
  %79 = icmp slt i64 %78, %76
  br i1 %79, label %80, label %98

80:                                               ; preds = %73, %77
  %81 = phi i64 [ %75, %73 ], [ %78, %77 ]
  %82 = getelementptr inbounds i64, i64* %74, i64 %81
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %77, label %85

85:                                               ; preds = %80
  %86 = trunc i64 %81 to i32
  %87 = shl i32 %86, 6
  br label %88

88:                                               ; preds = %85, %67
  %89 = phi i32 [ %68, %67 ], [ %71, %85 ]
  %90 = phi i32 [ %60, %67 ], [ %86, %85 ]
  %91 = phi i32 [ %65, %67 ], [ %87, %85 ]
  %92 = phi i64 [ %61, %67 ], [ %83, %85 ]
  %93 = tail call i64 @llvm.cttz.i64(i64 %92, i1 true) #12, !range !21
  %94 = trunc i64 %93 to i32
  %95 = add i32 %91, %94
  %96 = lshr i64 %92, %93
  %97 = lshr i64 %96, 1
  br label %102

98:                                               ; preds = %77
  %99 = trunc i64 %81 to i32
  %100 = shl i32 %99, 6
  %101 = trunc i64 %78 to i32
  br label %102

102:                                              ; preds = %98, %69, %88
  %103 = phi i32 [ %89, %88 ], [ %71, %69 ], [ %71, %98 ]
  %104 = phi i64 [ %97, %88 ], [ 0, %69 ], [ 0, %98 ]
  %105 = phi i32 [ %90, %88 ], [ %70, %69 ], [ %101, %98 ]
  %106 = phi i32 [ %95, %88 ], [ %65, %69 ], [ %100, %98 ]
  %107 = icmp slt i32 %105, %103
  br i1 %107, label %58, label %108

108:                                              ; preds = %27, %102, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::Zone"*) local_unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 7
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1, %2
  br i1 %10, label %518, label %48

11:                                               ; preds = %4
  %12 = icmp ugt i64 %7, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = and i64 %6, 24
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = lshr i64 %6, 5
  %18 = trunc i64 %17 to i8
  %19 = icmp ugt i8 %18, 11
  %20 = select i1 %19, i64 416, i64 0
  br label %21

21:                                               ; preds = %16, %13
  %22 = phi i64 [ 0, %13 ], [ %20, %16 ]
  %23 = and i64 %6, -8168
  %24 = or i64 %23, %22
  %25 = or i64 %24, 5
  br label %26

26:                                               ; preds = %21, %11
  %27 = phi i64 [ %25, %21 ], [ %6, %11 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 7
  %31 = icmp ugt i64 %30, 4
  br i1 %31, label %32, label %45

32:                                               ; preds = %26
  %33 = and i64 %29, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = lshr i64 %29, 5
  %37 = trunc i64 %36 to i8
  %38 = icmp ugt i8 %37, 11
  %39 = select i1 %38, i64 416, i64 0
  br label %40

40:                                               ; preds = %35, %32
  %41 = phi i64 [ 0, %32 ], [ %39, %35 ]
  %42 = and i64 %29, -8168
  %43 = or i64 %42, %41
  %44 = or i64 %43, 5
  br label %45

45:                                               ; preds = %26, %40
  %46 = phi i64 [ %44, %40 ], [ %29, %26 ]
  %47 = icmp eq i64 %27, %46
  br i1 %47, label %518, label %48

48:                                               ; preds = %9, %45
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %52, %50
  %54 = icmp ult i64 %53, 16
  br i1 %54, label %55, label %57, !prof !2

55:                                               ; preds = %48
  %56 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 16) #12
  br label %59

57:                                               ; preds = %48
  %58 = add i64 %50, 16
  store i64 %58, i64* %49, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi i64 [ %56, %55 ], [ %50, %57 ]
  %61 = inttoptr i64 %60 to %"class.v8::internal::compiler::MoveOperands"*
  %62 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %61, i64 0, i32 0, i32 0
  %63 = load i64, i64* %5, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %61, i64 0, i32 1, i32 0
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %69, align 8
  %71 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %68, %70
  %72 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %68 to i64
  %73 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %70 to i64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br i1 %71, label %77, label %75

75:                                               ; preds = %59
  %76 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %74, align 8
  br label %286

77:                                               ; preds = %59
  %78 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %74 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.v8::internal::compiler::ParallelMove"* %0 to i64*
  %81 = sub i64 %79, %72
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 4
  %84 = inttoptr i64 %79 to %"class.v8::internal::compiler::MoveOperands"**
  br i1 %83, label %85, label %286

85:                                               ; preds = %77
  %86 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %69 to i64*
  %87 = sub i64 %73, %72
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 32
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %85
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 32) #12
  br label %101

99:                                               ; preds = %85
  %100 = add i64 %92, 32
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::MoveOperands"**
  %104 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %103, i64 %88
  %105 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %104 to i64
  %106 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %103, i64 4
  %107 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %106 to i64
  %108 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %67, align 8
  %109 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %108 to i64
  %110 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %69, align 8
  %111 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %110, %108
  br i1 %111, label %284, label %112

112:                                              ; preds = %101
  %113 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %114 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = icmp ult i64 %117, 4
  br i1 %118, label %211, label %119

119:                                              ; preds = %112
  %120 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %121 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %120 to i64
  %122 = sub i64 %121, %109
  %123 = lshr i64 %122, 3
  %124 = xor i64 %123, -1
  %125 = add nsw i64 %88, %124
  %126 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %103, i64 %125
  %127 = xor i64 %123, -1
  %128 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 %127
  %129 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %126, %110
  %130 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %128, %104
  %131 = and i1 %129, %130
  br i1 %131, label %211, label %132

132:                                              ; preds = %119
  %133 = and i64 %117, 4611686018427387900
  %134 = sub nsw i64 0, %133
  %135 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 %134
  %136 = sub nsw i64 0, %133
  %137 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 %136
  %138 = add nsw i64 %133, -4
  %139 = lshr exact i64 %138, 2
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 1
  %142 = icmp eq i64 %138, 0
  br i1 %142, label %187, label %143

143:                                              ; preds = %132
  %144 = sub nuw nsw i64 %140, %141
  %145 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 -1
  %146 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %147 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 -1
  %148 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  br label %149

149:                                              ; preds = %149, %143
  %150 = phi i64 [ 0, %143 ], [ %184, %149 ]
  %151 = phi i64 [ %144, %143 ], [ %185, %149 ]
  %152 = sub i64 0, %150
  %153 = sub i64 0, %150
  %154 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %145, i64 %152
  %155 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %146, i64 %153
  %156 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::MoveOperands"** %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !66
  %159 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %155, i64 -2
  %160 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %159, i64 -1
  %161 = bitcast %"class.v8::internal::compiler::MoveOperands"** %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !alias.scope !66
  %163 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %154, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::MoveOperands"** %163 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %164, align 8, !alias.scope !69, !noalias !66
  %165 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %154, i64 -2
  %166 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %165, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::MoveOperands"** %166 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %167, align 8, !alias.scope !69, !noalias !66
  %168 = sub nuw nsw i64 -4, %150
  %169 = sub nuw nsw i64 -4, %150
  %170 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %147, i64 %168
  %171 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %148, i64 %169
  %172 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %171, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::MoveOperands"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !66
  %175 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %171, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::MoveOperands"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !66
  %179 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %170, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::MoveOperands"** %179 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 8, !alias.scope !69, !noalias !66
  %181 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %170, i64 -2
  %182 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %181, i64 -1
  %183 = bitcast %"class.v8::internal::compiler::MoveOperands"** %182 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %183, align 8, !alias.scope !69, !noalias !66
  %184 = add i64 %150, 8
  %185 = add i64 %151, -2
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %149, !llvm.loop !71

187:                                              ; preds = %149, %132
  %188 = phi i64 [ 0, %132 ], [ %184, %149 ]
  %189 = icmp eq i64 %141, 0
  br i1 %189, label %209, label %190

190:                                              ; preds = %187
  %191 = sub i64 0, %188
  %192 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 -1
  %193 = sub i64 0, %188
  %194 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %195 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %192, i64 %191
  %196 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %194, i64 %193
  %197 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %196, i64 -1
  %198 = bitcast %"class.v8::internal::compiler::MoveOperands"** %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !66
  %200 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %196, i64 -2
  %201 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %200, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::MoveOperands"** %201 to <2 x i64>*
  %203 = load <2 x i64>, <2 x i64>* %202, align 8, !alias.scope !66
  %204 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %195, i64 -1
  %205 = bitcast %"class.v8::internal::compiler::MoveOperands"** %204 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %205, align 8, !alias.scope !69, !noalias !66
  %206 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %195, i64 -2
  %207 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %206, i64 -1
  %208 = bitcast %"class.v8::internal::compiler::MoveOperands"** %207 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %208, align 8, !alias.scope !69, !noalias !66
  br label %209

209:                                              ; preds = %187, %190
  %210 = icmp eq i64 %117, %133
  br i1 %210, label %281, label %211

211:                                              ; preds = %209, %119, %112
  %212 = phi %"class.v8::internal::compiler::MoveOperands"** [ %104, %119 ], [ %104, %112 ], [ %135, %209 ]
  %213 = phi %"class.v8::internal::compiler::MoveOperands"** [ %110, %119 ], [ %110, %112 ], [ %137, %209 ]
  %214 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %213, i64 -1
  %215 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %214 to i64
  %216 = sub i64 %215, %109
  %217 = lshr i64 %216, 3
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 7
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %232, label %221

221:                                              ; preds = %211, %221
  %222 = phi %"class.v8::internal::compiler::MoveOperands"** [ %225, %221 ], [ %212, %211 ]
  %223 = phi %"class.v8::internal::compiler::MoveOperands"** [ %226, %221 ], [ %213, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %222, i64 -1
  %226 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %223, i64 -1
  %227 = bitcast %"class.v8::internal::compiler::MoveOperands"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.v8::internal::compiler::MoveOperands"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !72

232:                                              ; preds = %221, %211
  %233 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %211 ], [ %225, %221 ]
  %234 = phi %"class.v8::internal::compiler::MoveOperands"** [ %212, %211 ], [ %225, %221 ]
  %235 = phi %"class.v8::internal::compiler::MoveOperands"** [ %213, %211 ], [ %226, %221 ]
  %236 = icmp ult i64 %216, 56
  br i1 %236, label %281, label %237

237:                                              ; preds = %232, %237
  %238 = phi %"class.v8::internal::compiler::MoveOperands"** [ %275, %237 ], [ %234, %232 ]
  %239 = phi %"class.v8::internal::compiler::MoveOperands"** [ %276, %237 ], [ %235, %232 ]
  %240 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -1
  %241 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -1
  %242 = bitcast %"class.v8::internal::compiler::MoveOperands"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.v8::internal::compiler::MoveOperands"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -2
  %246 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -2
  %247 = bitcast %"class.v8::internal::compiler::MoveOperands"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.v8::internal::compiler::MoveOperands"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -3
  %251 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -3
  %252 = bitcast %"class.v8::internal::compiler::MoveOperands"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.v8::internal::compiler::MoveOperands"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -4
  %256 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -4
  %257 = bitcast %"class.v8::internal::compiler::MoveOperands"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.v8::internal::compiler::MoveOperands"** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -5
  %261 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -5
  %262 = bitcast %"class.v8::internal::compiler::MoveOperands"** %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.v8::internal::compiler::MoveOperands"** %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -6
  %266 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -6
  %267 = bitcast %"class.v8::internal::compiler::MoveOperands"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"class.v8::internal::compiler::MoveOperands"** %265 to i64*
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -7
  %271 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -7
  %272 = bitcast %"class.v8::internal::compiler::MoveOperands"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.v8::internal::compiler::MoveOperands"** %270 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -8
  %277 = bitcast %"class.v8::internal::compiler::MoveOperands"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.v8::internal::compiler::MoveOperands"** %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %276, %108
  br i1 %280, label %281, label %237, !llvm.loop !73

281:                                              ; preds = %232, %237, %209
  %282 = phi %"class.v8::internal::compiler::MoveOperands"** [ %135, %209 ], [ %233, %232 ], [ %275, %237 ]
  %283 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %282 to i64
  br label %284

284:                                              ; preds = %281, %101
  %285 = phi i64 [ %283, %281 ], [ %105, %101 ]
  store i64 %285, i64* %80, align 8
  store i64 %105, i64* %86, align 8
  store i64 %107, i64* %78, align 8
  br label %286

286:                                              ; preds = %75, %284, %77
  %287 = phi i64 [ %285, %284 ], [ %72, %77 ], [ %72, %75 ]
  %288 = phi %"class.v8::internal::compiler::MoveOperands"** [ %106, %284 ], [ %84, %77 ], [ %76, %75 ]
  %289 = phi %"class.v8::internal::compiler::MoveOperands"** [ %104, %284 ], [ %68, %77 ], [ %70, %75 ]
  %290 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %291 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %289, %288
  br i1 %291, label %297, label %292

292:                                              ; preds = %286
  %293 = bitcast %"class.v8::internal::compiler::MoveOperands"** %289 to i64*
  store i64 %60, i64* %293, align 8
  %294 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %289, i64 1
  %295 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %294 to i64
  %296 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %69 to i64*
  store i64 %295, i64* %296, align 8
  br label %518

297:                                              ; preds = %286
  %298 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %288 to i64
  %299 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %69 to i64*
  %300 = bitcast %"class.v8::internal::compiler::ParallelMove"* %0 to i64*
  %301 = sub i64 %298, %287
  %302 = ashr exact i64 %301, 3
  %303 = add nsw i64 %302, 1
  %304 = icmp ugt i64 %303, 268435455
  br i1 %304, label %305, label %307

305:                                              ; preds = %297
  %306 = bitcast %"class.v8::internal::compiler::ParallelMove"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %306) #13
  unreachable

307:                                              ; preds = %297
  %308 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %290 to i64*
  %309 = icmp ult i64 %302, 134217727
  br i1 %309, label %310, label %315

310:                                              ; preds = %307
  %311 = ashr exact i64 %301, 2
  %312 = icmp ult i64 %311, %303
  %313 = select i1 %312, i64 %303, i64 %311
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %333, label %315

315:                                              ; preds = %310, %307
  %316 = phi i64 [ %313, %310 ], [ 268435455, %307 ]
  %317 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %318 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %317, align 8
  %319 = shl i64 %316, 3
  %320 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %318, i64 0, i32 2
  %321 = load i64, i64* %320, align 8
  %322 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %318, i64 0, i32 3
  %323 = load i64, i64* %322, align 8
  %324 = sub i64 %323, %321
  %325 = icmp ugt i64 %319, %324
  br i1 %325, label %326, label %328, !prof !2

326:                                              ; preds = %315
  %327 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %318, i64 %319) #12
  br label %330

328:                                              ; preds = %315
  %329 = add i64 %321, %319
  store i64 %329, i64* %320, align 8
  br label %330

330:                                              ; preds = %328, %326
  %331 = phi i64 [ %327, %326 ], [ %321, %328 ]
  %332 = inttoptr i64 %331 to %"class.v8::internal::compiler::MoveOperands"**
  br label %333

333:                                              ; preds = %330, %310
  %334 = phi i64 [ %316, %330 ], [ 0, %310 ]
  %335 = phi %"class.v8::internal::compiler::MoveOperands"** [ %332, %330 ], [ null, %310 ]
  %336 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %335, i64 %302
  %337 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %335, i64 %334
  %338 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %337 to i64
  %339 = bitcast %"class.v8::internal::compiler::MoveOperands"** %336 to i64*
  store i64 %60, i64* %339, align 8
  %340 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 1
  %341 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %340 to i64
  %342 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %67, align 8
  %343 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %342 to i64
  %344 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %69, align 8
  %345 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %344, %342
  br i1 %345, label %515, label %346

346:                                              ; preds = %333
  %347 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %348 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %347 to i64
  %349 = sub i64 %348, %343
  %350 = lshr i64 %349, 3
  %351 = add nuw nsw i64 %350, 1
  %352 = icmp ult i64 %351, 4
  br i1 %352, label %445, label %353

353:                                              ; preds = %346
  %354 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %355 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %354 to i64
  %356 = sub i64 %355, %343
  %357 = lshr i64 %356, 3
  %358 = xor i64 %357, -1
  %359 = add nsw i64 %302, %358
  %360 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %335, i64 %359
  %361 = xor i64 %357, -1
  %362 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 %361
  %363 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %360, %344
  %364 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %362, %336
  %365 = and i1 %363, %364
  br i1 %365, label %445, label %366

366:                                              ; preds = %353
  %367 = and i64 %351, 4611686018427387900
  %368 = sub nsw i64 0, %367
  %369 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 %368
  %370 = sub nsw i64 0, %367
  %371 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 %370
  %372 = add nsw i64 %367, -4
  %373 = lshr exact i64 %372, 2
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 1
  %376 = icmp eq i64 %372, 0
  br i1 %376, label %423, label %377

377:                                              ; preds = %366
  %378 = sub nuw nsw i64 %374, %375
  %379 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 -1
  %380 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %381 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 -1
  %382 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  br label %383

383:                                              ; preds = %383, %377
  %384 = phi i64 [ 0, %377 ], [ %418, %383 ]
  %385 = phi i64 [ %378, %377 ], [ %419, %383 ]
  %386 = sub i64 0, %384
  %387 = sub i64 0, %384
  %388 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %379, i64 %386
  %389 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %380, i64 %387
  %390 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %389, i64 -1
  %391 = bitcast %"class.v8::internal::compiler::MoveOperands"** %390 to <2 x i64>*
  %392 = load <2 x i64>, <2 x i64>* %391, align 8, !alias.scope !74
  %393 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %389, i64 -2
  %394 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %393, i64 -1
  %395 = bitcast %"class.v8::internal::compiler::MoveOperands"** %394 to <2 x i64>*
  %396 = load <2 x i64>, <2 x i64>* %395, align 8, !alias.scope !74
  %397 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %388, i64 -1
  %398 = bitcast %"class.v8::internal::compiler::MoveOperands"** %397 to <2 x i64>*
  store <2 x i64> %392, <2 x i64>* %398, align 8, !alias.scope !77, !noalias !74
  %399 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %388, i64 -2
  %400 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %399, i64 -1
  %401 = bitcast %"class.v8::internal::compiler::MoveOperands"** %400 to <2 x i64>*
  store <2 x i64> %396, <2 x i64>* %401, align 8, !alias.scope !77, !noalias !74
  %402 = sub nuw nsw i64 -4, %384
  %403 = sub nuw nsw i64 -4, %384
  %404 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %381, i64 %402
  %405 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %382, i64 %403
  %406 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %405, i64 -1
  %407 = bitcast %"class.v8::internal::compiler::MoveOperands"** %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !74
  %409 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %405, i64 -2
  %410 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %409, i64 -1
  %411 = bitcast %"class.v8::internal::compiler::MoveOperands"** %410 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8, !alias.scope !74
  %413 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %404, i64 -1
  %414 = bitcast %"class.v8::internal::compiler::MoveOperands"** %413 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %414, align 8, !alias.scope !77, !noalias !74
  %415 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %404, i64 -2
  %416 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %415, i64 -1
  %417 = bitcast %"class.v8::internal::compiler::MoveOperands"** %416 to <2 x i64>*
  store <2 x i64> %412, <2 x i64>* %417, align 8, !alias.scope !77, !noalias !74
  %418 = add i64 %384, 8
  %419 = add i64 %385, -2
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %421, label %383, !llvm.loop !79

421:                                              ; preds = %383
  %422 = sub nuw nsw i64 -8, %384
  br label %423

423:                                              ; preds = %421, %366
  %424 = phi i64 [ 0, %366 ], [ %422, %421 ]
  %425 = icmp eq i64 %375, 0
  br i1 %425, label %443, label %426

426:                                              ; preds = %423
  %427 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 -1
  %428 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %429 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %427, i64 %424
  %430 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %428, i64 %424
  %431 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %430, i64 -1
  %432 = bitcast %"class.v8::internal::compiler::MoveOperands"** %431 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8, !alias.scope !74
  %434 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %430, i64 -2
  %435 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %434, i64 -1
  %436 = bitcast %"class.v8::internal::compiler::MoveOperands"** %435 to <2 x i64>*
  %437 = load <2 x i64>, <2 x i64>* %436, align 8, !alias.scope !74
  %438 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %429, i64 -1
  %439 = bitcast %"class.v8::internal::compiler::MoveOperands"** %438 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %439, align 8, !alias.scope !77, !noalias !74
  %440 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %429, i64 -2
  %441 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %440, i64 -1
  %442 = bitcast %"class.v8::internal::compiler::MoveOperands"** %441 to <2 x i64>*
  store <2 x i64> %437, <2 x i64>* %442, align 8, !alias.scope !77, !noalias !74
  br label %443

443:                                              ; preds = %423, %426
  %444 = icmp eq i64 %351, %367
  br i1 %444, label %515, label %445

445:                                              ; preds = %443, %353, %346
  %446 = phi %"class.v8::internal::compiler::MoveOperands"** [ %336, %353 ], [ %336, %346 ], [ %369, %443 ]
  %447 = phi %"class.v8::internal::compiler::MoveOperands"** [ %344, %353 ], [ %344, %346 ], [ %371, %443 ]
  %448 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %447, i64 -1
  %449 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %448 to i64
  %450 = sub i64 %449, %343
  %451 = lshr i64 %450, 3
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 7
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %466, label %455

455:                                              ; preds = %445, %455
  %456 = phi %"class.v8::internal::compiler::MoveOperands"** [ %459, %455 ], [ %446, %445 ]
  %457 = phi %"class.v8::internal::compiler::MoveOperands"** [ %460, %455 ], [ %447, %445 ]
  %458 = phi i64 [ %464, %455 ], [ %453, %445 ]
  %459 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %456, i64 -1
  %460 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %457, i64 -1
  %461 = bitcast %"class.v8::internal::compiler::MoveOperands"** %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = bitcast %"class.v8::internal::compiler::MoveOperands"** %459 to i64*
  store i64 %462, i64* %463, align 8
  %464 = add i64 %458, -1
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %455, !llvm.loop !80

466:                                              ; preds = %455, %445
  %467 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %445 ], [ %459, %455 ]
  %468 = phi %"class.v8::internal::compiler::MoveOperands"** [ %446, %445 ], [ %459, %455 ]
  %469 = phi %"class.v8::internal::compiler::MoveOperands"** [ %447, %445 ], [ %460, %455 ]
  %470 = icmp ult i64 %450, 56
  br i1 %470, label %515, label %471

471:                                              ; preds = %466, %471
  %472 = phi %"class.v8::internal::compiler::MoveOperands"** [ %509, %471 ], [ %468, %466 ]
  %473 = phi %"class.v8::internal::compiler::MoveOperands"** [ %510, %471 ], [ %469, %466 ]
  %474 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -1
  %475 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -1
  %476 = bitcast %"class.v8::internal::compiler::MoveOperands"** %475 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = bitcast %"class.v8::internal::compiler::MoveOperands"** %474 to i64*
  store i64 %477, i64* %478, align 8
  %479 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -2
  %480 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -2
  %481 = bitcast %"class.v8::internal::compiler::MoveOperands"** %480 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = bitcast %"class.v8::internal::compiler::MoveOperands"** %479 to i64*
  store i64 %482, i64* %483, align 8
  %484 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -3
  %485 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -3
  %486 = bitcast %"class.v8::internal::compiler::MoveOperands"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = bitcast %"class.v8::internal::compiler::MoveOperands"** %484 to i64*
  store i64 %487, i64* %488, align 8
  %489 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -4
  %490 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -4
  %491 = bitcast %"class.v8::internal::compiler::MoveOperands"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.v8::internal::compiler::MoveOperands"** %489 to i64*
  store i64 %492, i64* %493, align 8
  %494 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -5
  %495 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -5
  %496 = bitcast %"class.v8::internal::compiler::MoveOperands"** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.v8::internal::compiler::MoveOperands"** %494 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -6
  %500 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -6
  %501 = bitcast %"class.v8::internal::compiler::MoveOperands"** %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.v8::internal::compiler::MoveOperands"** %499 to i64*
  store i64 %502, i64* %503, align 8
  %504 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -7
  %505 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -7
  %506 = bitcast %"class.v8::internal::compiler::MoveOperands"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.v8::internal::compiler::MoveOperands"** %504 to i64*
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -8
  %510 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -8
  %511 = bitcast %"class.v8::internal::compiler::MoveOperands"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.v8::internal::compiler::MoveOperands"** %509 to i64*
  store i64 %512, i64* %513, align 8
  %514 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %510, %342
  br i1 %514, label %515, label %471, !llvm.loop !81

515:                                              ; preds = %466, %471, %443, %333
  %516 = phi %"class.v8::internal::compiler::MoveOperands"** [ %336, %333 ], [ %369, %443 ], [ %467, %466 ], [ %509, %471 ]
  %517 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %516 to i64
  store i64 %517, i64* %300, align 8
  store i64 %341, i64* %299, align 8
  store i64 %338, i64* %308, align 8
  br label %518

518:                                              ; preds = %515, %292, %9, %45
  %519 = phi %"class.v8::internal::compiler::MoveOperands"* [ null, %45 ], [ null, %9 ], [ %61, %292 ], [ %61, %515 ]
  ret %"class.v8::internal::compiler::MoveOperands"* %519
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.765"*, %"class.std::__1::__tree_node.812"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.812"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.812"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.812"* %5 to %"class.std::__1::__tree_node.812"**
  %7 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %6, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.765"* %0, %"class.std::__1::__tree_node.812"* %7) #12
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.812", %"class.std::__1::__tree_node.812"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.812"**
  %10 = load %"class.std::__1::__tree_node.812"*, %"class.std::__1::__tree_node.812"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.812"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.753"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %35 to %"class.v8::internal::compiler::RpoNumber"**
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::RpoNumber"* [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::RpoNumber"** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::RpoNumber"** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::RpoNumber"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::RpoNumber"** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::RpoNumber"*
  %56 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::RpoNumber"** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 1024
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %63, i64 2
  %71 = bitcast %"class.v8::internal::compiler::RpoNumber"* %70 to i64*
  store i64 1024, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::RpoNumber"* %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %63, %"class.v8::internal::compiler::RpoNumber"** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::RpoNumber"* %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::RpoNumber"**
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::RpoNumber"** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::RpoNumber"** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %84, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::RpoNumber"** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 1024, %95 ], [ 512, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %101 to %"class.v8::internal::compiler::RpoNumber"**
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 1024
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %111, i64 2
  %119 = bitcast %"class.v8::internal::compiler::RpoNumber"* %118 to i64*
  store i64 1024, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::RpoNumber"* %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %111, %"class.v8::internal::compiler::RpoNumber"** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::RpoNumber"* %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::RpoNumber"** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::RpoNumber"** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 1024
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %133, i64 2
  %141 = bitcast %"class.v8::internal::compiler::RpoNumber"* %140 to i64*
  store i64 1024, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"* %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %133, %"class.v8::internal::compiler::RpoNumber"** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::RpoNumber"* %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %132, i64 1
  %148 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %152 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::RpoNumber"** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::RpoNumber"** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %154, i64 %163
  store %"class.v8::internal::compiler::RpoNumber"** %164, %"class.v8::internal::compiler::RpoNumber"*** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.753", %"class.std::__1::__deque_base.753"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::RpoNumber"** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::RpoNumber"** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %178 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %167, %"class.v8::internal::compiler::RpoNumber"*** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 1024
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %148, i64 2
  %199 = bitcast %"class.v8::internal::compiler::RpoNumber"* %198 to i64*
  store i64 1024, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::RpoNumber"* %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %148, %"class.v8::internal::compiler::RpoNumber"** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::RpoNumber"* %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %205, %91
  br i1 %206, label %150, label %130
}

declare i32 @_ZN2v88internal20AlignedSlotAllocator8AllocateEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #9

declare i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler10BlockStateENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJRiPNS2_4ZoneEEEEvDpOT_(%"class.std::__1::vector.724"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.724", %"class.std::__1::vector.724"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::BlockState"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.724"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 44739242
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.724"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #13
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.724", %"class.std::__1::vector.724"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::compiler::BlockState"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 48
  %21 = icmp ult i64 %20, 22369621
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 44739242, %15 ]
  %29 = getelementptr inbounds %"class.std::__1::vector.724", %"class.std::__1::vector.724"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %30 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %29, align 8
  %31 = mul i64 %28, 48
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %33
  %37 = icmp ugt i64 %31, %36
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %27
  %39 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %30, i64 %31) #12
  br label %42

40:                                               ; preds = %27
  %41 = add i64 %33, %31
  store i64 %41, i64* %32, align 8
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %39, %38 ], [ %33, %40 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::BlockState"*
  br label %45

45:                                               ; preds = %22, %42
  %46 = phi i64 [ %28, %42 ], [ 0, %22 ]
  %47 = phi %"class.v8::internal::compiler::BlockState"* [ %44, %42 ], [ null, %22 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10
  %49 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %46
  %50 = ptrtoint %"class.v8::internal::compiler::BlockState"* %49 to i64
  %51 = load i32, i32* %1, align 4
  %52 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 3, i32 0
  %54 = bitcast %"class.v8::internal::compiler::BlockState"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #12
  store i32 %51, i32* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 3, i32 1
  %56 = icmp slt i32 %51, 65
  br i1 %56, label %57, label %60

57:                                               ; preds = %45
  store i32 1, i32* %55, align 4
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 3, i32 2
  %59 = bitcast %"union.v8::internal::BitVector::DataStorage"* %58 to i64*
  store i64 0, i64* %59, align 8
  br label %99

60:                                               ; preds = %45
  %61 = add nsw i32 %51, -1
  %62 = sdiv i32 %61, 64
  %63 = add nuw nsw i32 %62, 1
  store i32 %63, i32* %55, align 4
  %64 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 3, i32 2
  %65 = bitcast %"union.v8::internal::BitVector::DataStorage"* %64 to i64*
  store i64 0, i64* %65, align 8
  %66 = sext i32 %63 to i64
  %67 = shl nsw i64 %66, 3
  %68 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %52, i64 0, i32 3
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %71, %69
  %73 = icmp ugt i64 %67, %72
  br i1 %73, label %74, label %76, !prof !2

74:                                               ; preds = %60
  %75 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %52, i64 %67) #12
  br label %78

76:                                               ; preds = %60
  %77 = add i64 %69, %67
  store i64 %77, i64* %68, align 8
  br label %78

78:                                               ; preds = %76, %74
  %79 = phi i64 [ %75, %74 ], [ %69, %76 ]
  %80 = inttoptr i64 %79 to i64*
  %81 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %64, i64 0, i32 0
  store i64* %80, i64** %81, align 8
  %82 = load i32, i32* %55, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %90, label %84

84:                                               ; preds = %78
  %85 = icmp sgt i32 %82, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 3, i32 2, i32 0
  store i64 0, i64* %80, align 8
  %88 = load i32, i32* %55, align 4
  %89 = icmp sgt i32 %88, 1
  br i1 %89, label %91, label %99

90:                                               ; preds = %78
  store i64 0, i64* %65, align 8
  br label %99

91:                                               ; preds = %86, %91
  %92 = phi i64 [ %95, %91 ], [ 1, %86 ]
  %93 = load i64*, i64** %87, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 %92
  store i64 0, i64* %94, align 8
  %95 = add nuw nsw i64 %92, 1
  %96 = load i32, i32* %55, align 4
  %97 = sext i32 %96 to i64
  %98 = icmp slt i64 %95, %97
  br i1 %98, label %91, label %99

99:                                               ; preds = %91, %57, %84, %86, %90
  %100 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 4
  store i32 -1, i32* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %47, i64 %10, i32 5
  store i8 0, i8* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %48, i64 1
  %103 = ptrtoint %"class.v8::internal::compiler::BlockState"* %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.724", %"class.std::__1::vector.724"* %0, i64 0, i32 0, i32 0
  %105 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %104, align 8
  %106 = load %"class.v8::internal::compiler::BlockState"*, %"class.v8::internal::compiler::BlockState"** %4, align 8
  %107 = icmp eq %"class.v8::internal::compiler::BlockState"* %106, %105
  br i1 %107, label %116, label %108

108:                                              ; preds = %99, %108
  %109 = phi %"class.v8::internal::compiler::BlockState"* [ %111, %108 ], [ %48, %99 ]
  %110 = phi %"class.v8::internal::compiler::BlockState"* [ %112, %108 ], [ %106, %99 ]
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %109, i64 -1
  %112 = getelementptr inbounds %"class.v8::internal::compiler::BlockState", %"class.v8::internal::compiler::BlockState"* %110, i64 -1
  %113 = bitcast %"class.v8::internal::compiler::BlockState"* %111 to i8*
  %114 = bitcast %"class.v8::internal::compiler::BlockState"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 48, i1 false) #12
  %115 = icmp eq %"class.v8::internal::compiler::BlockState"* %112, %105
  br i1 %115, label %116, label %108

116:                                              ; preds = %108, %99
  %117 = phi %"class.v8::internal::compiler::BlockState"* [ %48, %99 ], [ %111, %108 ]
  %118 = ptrtoint %"class.v8::internal::compiler::BlockState"* %117 to i64
  store i64 %118, i64* %7, align 8
  store i64 %103, i64* %5, align 8
  store i64 %50, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.752"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %3 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %4 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %5 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.820", align 16
  %7 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 1023
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -1024
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::RpoNumber"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::RpoNumber"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::RpoNumber"** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %17, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %21, %"class.v8::internal::compiler::RpoNumber"*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.754"* %15, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.752"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::RpoNumber"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 1024
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45 to %"class.v8::internal::compiler::RpoNumber"*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.762", %"class.v8::internal::RecyclingZoneAllocator.762"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #12
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::RpoNumber"*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::RpoNumber"* [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::RpoNumber"* %73, %"class.v8::internal::compiler::RpoNumber"** %3, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.754"* %23, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 1024
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77 to %"class.v8::internal::compiler::RpoNumber"*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.762", %"class.v8::internal::RecyclingZoneAllocator.762"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #12
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::RpoNumber"*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::RpoNumber"* [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::RpoNumber"* %105, %"class.v8::internal::compiler::RpoNumber"** %4, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.754"* %23, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #12
  %106 = bitcast %"class.v8::internal::compiler::RpoNumber"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #12
  %107 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::RpoNumber"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::RpoNumber"** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %107, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %111, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.754"* %23, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #12
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.820"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #12
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::RpoNumber"** null, %"class.v8::internal::compiler::RpoNumber"*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.758"* %117, %"class.v8::internal::RecyclingZoneAllocator.758"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121 to %"class.v8::internal::compiler::RpoNumber"**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.758", %"class.v8::internal::RecyclingZoneAllocator.758"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #12
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::RpoNumber"**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::RpoNumber"** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::RpoNumber"** %150, %"class.v8::internal::compiler::RpoNumber"*** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::RpoNumber"** %152, %"class.v8::internal::compiler::RpoNumber"*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::RpoNumber"** %152, %"class.v8::internal::compiler::RpoNumber"*** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %150, i64 %116
  store %"class.v8::internal::compiler::RpoNumber"** %155, %"class.v8::internal::compiler::RpoNumber"*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.752", %"class.std::__1::deque.752"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 1024
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157 to %"class.v8::internal::compiler::RpoNumber"*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.762", %"class.v8::internal::RecyclingZoneAllocator.762"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #12
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::RpoNumber"*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::RpoNumber"* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::RpoNumber"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #12
  store %"class.v8::internal::compiler::RpoNumber"* %185, %"class.v8::internal::compiler::RpoNumber"** %7, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.820"* nonnull %6, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #12
  %187 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %24, align 8
  %188 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::RpoNumber"** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.820"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.820"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.752"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::RpoNumber"**
  %210 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %209, i64 %217
  store %"class.v8::internal::compiler::RpoNumber"** %218, %"class.v8::internal::compiler::RpoNumber"*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.758"*, %"class.v8::internal::RecyclingZoneAllocator.758"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.758", %"class.v8::internal::RecyclingZoneAllocator.758"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::RpoNumber"** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %227 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %211, %"class.v8::internal::compiler::RpoNumber"*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #12
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::RpoNumber"** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.820"* nonnull %6, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.754"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::RpoNumber"** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %24, i64 %26
  store %"class.v8::internal::compiler::RpoNumber"** %34, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %33, i64 %23
  store %"class.v8::internal::compiler::RpoNumber"** %35, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::RpoNumber"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.754"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to %"class.v8::internal::compiler::RpoNumber"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #12
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::RpoNumber"**
  %75 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::RpoNumber"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::RpoNumber"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::RpoNumber"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !82

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::RpoNumber"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::RpoNumber"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::RpoNumber"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::RpoNumber"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::RpoNumber"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::RpoNumber"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::RpoNumber"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::RpoNumber"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::RpoNumber"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::RpoNumber"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::RpoNumber"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::RpoNumber"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::RpoNumber"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::RpoNumber"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::RpoNumber"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::RpoNumber"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::RpoNumber"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::RpoNumber"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::RpoNumber"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %172, %"class.v8::internal::compiler::RpoNumber"*** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %199, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %200, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.754"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::RpoNumber"** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %24, i64 %26
  store %"class.v8::internal::compiler::RpoNumber"** %34, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %33, i64 %23
  store %"class.v8::internal::compiler::RpoNumber"** %35, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::RpoNumber"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.754"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to %"class.v8::internal::compiler::RpoNumber"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #12
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::RpoNumber"**
  %75 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::RpoNumber"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::RpoNumber"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::RpoNumber"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !83

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::RpoNumber"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::RpoNumber"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::RpoNumber"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::RpoNumber"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::RpoNumber"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::RpoNumber"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::RpoNumber"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::RpoNumber"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::RpoNumber"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::RpoNumber"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::RpoNumber"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::RpoNumber"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::RpoNumber"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::RpoNumber"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::RpoNumber"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::RpoNumber"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::RpoNumber"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::RpoNumber"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::RpoNumber"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %172, %"class.v8::internal::compiler::RpoNumber"*** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %199, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %200, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.754"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::RpoNumber"** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::RpoNumber"** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::RpoNumber"** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::RpoNumber"** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::RpoNumber"** %36, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %35, i64 %22
  store %"class.v8::internal::compiler::RpoNumber"** %37, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.754"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47 to %"class.v8::internal::compiler::RpoNumber"**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.754", %"struct.std::__1::__split_buffer.754"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #12
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::RpoNumber"**
  %76 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::RpoNumber"** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::RpoNumber"** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::RpoNumber"** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::RpoNumber"** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !84

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::RpoNumber"** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::RpoNumber"** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::RpoNumber"** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::RpoNumber"** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::RpoNumber"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::RpoNumber"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::RpoNumber"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::RpoNumber"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::RpoNumber"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::RpoNumber"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::RpoNumber"** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::RpoNumber"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::RpoNumber"** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::RpoNumber"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::RpoNumber"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::RpoNumber"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::RpoNumber"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::RpoNumber"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::RpoNumber"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::RpoNumber"**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::RpoNumber"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %173, %"class.v8::internal::compiler::RpoNumber"*** %192, align 8
  %193 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::RpoNumber"** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::RpoNumber"** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %200, i64 -1
  store %"class.v8::internal::compiler::RpoNumber"** %201, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.820"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::RpoNumber"** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::RpoNumber"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, i64 %26
  store %"class.v8::internal::compiler::RpoNumber"** %34, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %33, i64 %22
  store %"class.v8::internal::compiler::RpoNumber"** %35, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::RpoNumber"** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.820"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.758"*, %"class.v8::internal::RecyclingZoneAllocator.758"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.758", %"class.v8::internal::RecyclingZoneAllocator.758"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48 to %"class.v8::internal::compiler::RpoNumber"**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.758", %"class.v8::internal::RecyclingZoneAllocator.758"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #12
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::RpoNumber"**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::RpoNumber"** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %81 to i64
  %83 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::RpoNumber"** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::RpoNumber"** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::RpoNumber"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !85

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::RpoNumber"** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::RpoNumber"** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::RpoNumber"** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::RpoNumber"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::RpoNumber"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::RpoNumber"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::RpoNumber"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::RpoNumber"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::RpoNumber"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::RpoNumber"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::RpoNumber"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::RpoNumber"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::RpoNumber"** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::RpoNumber"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::RpoNumber"** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::RpoNumber"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::RpoNumber"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::RpoNumber"**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::RpoNumber"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %170, %"class.v8::internal::compiler::RpoNumber"*** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %197, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %198, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.820"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::RpoNumber"** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::RpoNumber"** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::RpoNumber"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::RpoNumber"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::RpoNumber"** %36, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %35, i64 %22
  store %"class.v8::internal::compiler::RpoNumber"** %37, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.820"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.820", %"struct.std::__1::__split_buffer.820"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.758"*, %"class.v8::internal::RecyclingZoneAllocator.758"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.758", %"class.v8::internal::RecyclingZoneAllocator.758"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49 to %"class.v8::internal::compiler::RpoNumber"**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.758", %"class.v8::internal::RecyclingZoneAllocator.758"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #12
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::RpoNumber"**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::RpoNumber"** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %84 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::RpoNumber"** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::RpoNumber"** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::RpoNumber"** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !86

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::RpoNumber"** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::RpoNumber"** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::RpoNumber"** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::RpoNumber"** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::RpoNumber"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::RpoNumber"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::RpoNumber"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::RpoNumber"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::RpoNumber"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::RpoNumber"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::RpoNumber"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::RpoNumber"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::RpoNumber"** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::RpoNumber"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::RpoNumber"** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::RpoNumber"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::RpoNumber"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::RpoNumber"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::RpoNumber"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::RpoNumber"**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::RpoNumber"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %171, %"class.v8::internal::compiler::RpoNumber"*** %190, align 8
  %191 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::RpoNumber"** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %198, i64 -1
  store %"class.v8::internal::compiler::RpoNumber"** %199, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEvT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"**) unnamed_addr #2 {
  br label %3

3:                                                ; preds = %560, %2
  %4 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %1, %2 ], [ %532, %560 ]
  %5 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %0, %2 ], [ %17, %560 ]
  %6 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %4 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %4, i64 -1
  %8 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %7 to i64*
  %9 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %7 to i64*
  %10 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %7 to i64*
  %11 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %7 to i64*
  %12 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %7 to i64*
  %13 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %4 to i64
  br label %14

14:                                               ; preds = %569, %3
  %15 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %5, %3 ], [ %570, %569 ]
  br label %16

16:                                               ; preds = %465, %14
  %17 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %15, %14 ], [ %446, %465 ]
  %18 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64
  %19 = sub i64 %6, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %165 [
    i64 0, label %573
    i64 1, label %573
    i64 2, label %21
    i64 3, label %39
    i64 4, label %99
    i64 5, label %104
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %4, i64 -1
  %23 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %22, align 8
  %24 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %25 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %23, i64 0, i32 1
  %26 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %25, align 8
  %27 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %24, i64 0, i32 1
  %28 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %26, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %28, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, %32
  br i1 %33, label %34, label %573

34:                                               ; preds = %21
  %35 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %23 to i64
  %36 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %24 to i64
  %37 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  %38 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %22 to i64*
  store i64 %35, i64* %37, align 8
  store i64 %36, i64* %38, align 8
  br label %573

39:                                               ; preds = %16
  %40 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 1
  %41 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %4, i64 -1
  %42 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %40, align 8
  %43 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %44 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %42, i64 0, i32 1
  %45 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %44, align 8
  %46 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %43, i64 0, i32 1
  %47 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %45, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %47, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %49, %51
  %53 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %41, align 8
  %54 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %53, i64 0, i32 1
  %55 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %55, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, %49
  %59 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %42 to i64
  %60 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %53 to i64
  %61 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %43 to i64
  br i1 %52, label %81, label %62

62:                                               ; preds = %39
  br i1 %58, label %63, label %573

63:                                               ; preds = %62
  %64 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %40 to i64*
  %65 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %41 to i64*
  store i64 %60, i64* %64, align 8
  store i64 %59, i64* %65, align 8
  %66 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %40, align 8
  %67 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %68 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %66, i64 0, i32 1
  %69 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %68, align 8
  %70 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %67, i64 0, i32 1
  %71 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %69, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %71, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %573

77:                                               ; preds = %63
  %78 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %66 to i64
  %79 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %67 to i64
  %80 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  store i64 %78, i64* %80, align 8
  store i64 %79, i64* %64, align 8
  br label %573

81:                                               ; preds = %39
  %82 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  br i1 %58, label %83, label %85

83:                                               ; preds = %81
  %84 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %41 to i64*
  store i64 %60, i64* %82, align 8
  store i64 %61, i64* %84, align 8
  br label %573

85:                                               ; preds = %81
  %86 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %40 to i64*
  store i64 %59, i64* %82, align 8
  store i64 %61, i64* %86, align 8
  %87 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %41, align 8
  %88 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %87, i64 0, i32 1
  %89 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %88, align 8
  %90 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %46, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %89, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %90, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %92, %94
  br i1 %95, label %96, label %573

96:                                               ; preds = %85
  %97 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %87 to i64
  %98 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %41 to i64*
  store i64 %97, i64* %86, align 8
  store i64 %61, i64* %98, align 8
  br label %573

99:                                               ; preds = %16
  %100 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 1
  %101 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %4, i64 -1
  %103 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEjT0_SB_SB_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %17, %"class.v8::internal::compiler::VirtualRegisterData"** %100, %"class.v8::internal::compiler::VirtualRegisterData"** %101, %"class.v8::internal::compiler::VirtualRegisterData"** %102)
  br label %573

104:                                              ; preds = %16
  %105 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 1
  %106 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 2
  %107 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 3
  %108 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %4, i64 -1
  %109 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEjT0_SB_SB_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %17, %"class.v8::internal::compiler::VirtualRegisterData"** %105, %"class.v8::internal::compiler::VirtualRegisterData"** %106, %"class.v8::internal::compiler::VirtualRegisterData"** %107) #12
  %110 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %108, align 8
  %111 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %107, align 8
  %112 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %110, i64 0, i32 1
  %113 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %112, align 8
  %114 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %111, i64 0, i32 1
  %115 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %113, i64 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %115, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %117, %119
  br i1 %120, label %121, label %573

121:                                              ; preds = %104
  %122 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %110 to i64
  %123 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %111 to i64
  %124 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %107 to i64*
  %125 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %108 to i64*
  store i64 %122, i64* %124, align 8
  store i64 %123, i64* %125, align 8
  %126 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %107, align 8
  %127 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %106, align 8
  %128 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %126, i64 0, i32 1
  %129 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %128, align 8
  %130 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %127, i64 0, i32 1
  %131 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %129, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %131, i64 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %133, %135
  br i1 %136, label %137, label %573

137:                                              ; preds = %121
  %138 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %126 to i64
  %139 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %127 to i64
  %140 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %106 to i64*
  store i64 %138, i64* %140, align 8
  store i64 %139, i64* %124, align 8
  %141 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %105, align 8
  %142 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %128, align 8
  %143 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %141, i64 0, i32 1
  %144 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %142, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %144, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %150, label %573

150:                                              ; preds = %137
  %151 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %141 to i64
  %152 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %105 to i64*
  store i64 %138, i64* %152, align 8
  store i64 %151, i64* %140, align 8
  %153 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %154 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %128, align 8
  %155 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %153, i64 0, i32 1
  %156 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %154, i64 0, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %156, i64 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp slt i32 %158, %160
  br i1 %161, label %162, label %573

162:                                              ; preds = %150
  %163 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %153 to i64
  %164 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  store i64 %138, i64* %164, align 8
  store i64 %163, i64* %152, align 8
  br label %573

165:                                              ; preds = %16
  %166 = icmp slt i64 %19, 248
  br i1 %166, label %167, label %263

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 1
  %170 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %169, align 8
  %171 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %172 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %170, i64 0, i32 1
  %173 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %172, align 8
  %174 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %171, i64 0, i32 1
  %175 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %173, i64 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %175, i64 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %177, %179
  %181 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %168, align 8
  %182 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %181, i64 0, i32 1
  %183 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %183, i64 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp slt i32 %185, %177
  %187 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %170 to i64
  %188 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %181 to i64
  %189 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %171 to i64
  br i1 %180, label %203, label %190

190:                                              ; preds = %167
  br i1 %186, label %191, label %218

191:                                              ; preds = %190
  %192 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %169 to i64*
  %193 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %168 to i64*
  store i64 %188, i64* %192, align 8
  store i64 %187, i64* %193, align 8
  %194 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %182, align 8
  %195 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %174, align 8
  %196 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %194, i64 0, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %195, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp slt i32 %197, %199
  br i1 %200, label %201, label %218

201:                                              ; preds = %191
  %202 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  store i64 %188, i64* %202, align 8
  store i64 %189, i64* %192, align 8
  br label %218

203:                                              ; preds = %167
  %204 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  br i1 %186, label %205, label %207

205:                                              ; preds = %203
  %206 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %168 to i64*
  store i64 %188, i64* %204, align 8
  store i64 %189, i64* %206, align 8
  br label %218

207:                                              ; preds = %203
  %208 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %169 to i64*
  store i64 %187, i64* %204, align 8
  store i64 %189, i64* %208, align 8
  %209 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %182, align 8
  %210 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %174, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %209, i64 0, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %210, i64 0, i32 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp slt i32 %212, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %207
  %217 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %168 to i64*
  store i64 %188, i64* %208, align 8
  store i64 %189, i64* %217, align 8
  br label %218

218:                                              ; preds = %216, %207, %205, %201, %191, %190
  %219 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %181, %190 ], [ %170, %191 ], [ %170, %201 ], [ %171, %205 ], [ %181, %207 ], [ %171, %216 ]
  %220 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 3
  %221 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %220, %4
  br i1 %221, label %573, label %222

222:                                              ; preds = %218, %261
  %223 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %262, %261 ], [ %219, %218 ]
  %224 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %259, %261 ], [ %220, %218 ]
  %225 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %224, %261 ], [ %168, %218 ]
  %226 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %224, align 8
  %227 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %226, i64 0, i32 1
  %228 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %227, align 8
  %229 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %223, i64 0, i32 1
  %230 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %229, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %228, i64 0, i32 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %230, i64 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp slt i32 %232, %234
  %236 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %226 to i64
  br i1 %235, label %237, label %258

237:                                              ; preds = %222, %244
  %238 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %239, %244 ], [ %224, %222 ]
  %239 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %245, %244 ], [ %225, %222 ]
  %240 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %239, %17
  br i1 %243, label %255, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %239, i64 -1
  %246 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %245, align 8
  %247 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %227, align 8
  %248 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %246, i64 0, i32 1
  %249 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %248, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %247, i64 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %249, i64 0, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = icmp slt i32 %251, %253
  br i1 %254, label %237, label %255

255:                                              ; preds = %237, %244
  %256 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %239, %244 ], [ %17, %237 ]
  %257 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %256 to i64*
  store i64 %236, i64* %257, align 8
  br label %258

258:                                              ; preds = %255, %222
  %259 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %224, i64 1
  %260 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %259, %4
  br i1 %260, label %573, label %261

261:                                              ; preds = %258
  %262 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %224, align 8
  br label %222

263:                                              ; preds = %165
  %264 = icmp sgt i64 %19, 7992
  %265 = sdiv i64 %20, 2
  %266 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 %265
  br i1 %264, label %267, label %336

267:                                              ; preds = %263
  %268 = sdiv i64 %20, 4
  %269 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 %268
  %270 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %266, i64 %268
  %271 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEjT0_SB_SB_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %17, %"class.v8::internal::compiler::VirtualRegisterData"** %269, %"class.v8::internal::compiler::VirtualRegisterData"** %266, %"class.v8::internal::compiler::VirtualRegisterData"** %270) #12
  %272 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %7, align 8
  %273 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %270, align 8
  %274 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %272, i64 0, i32 1
  %275 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %274, align 8
  %276 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %273, i64 0, i32 1
  %277 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %275, i64 0, i32 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %277, i64 0, i32 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = icmp slt i32 %279, %281
  br i1 %282, label %283, label %391

283:                                              ; preds = %267
  %284 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %272 to i64
  %285 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %273 to i64
  %286 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %270 to i64*
  store i64 %284, i64* %286, align 8
  store i64 %285, i64* %11, align 8
  %287 = add i32 %271, 1
  %288 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %270, align 8
  %289 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %266, align 8
  %290 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %288, i64 0, i32 1
  %291 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %290, align 8
  %292 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %289, i64 0, i32 1
  %293 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %292, align 8
  %294 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %291, i64 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %293, i64 0, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp slt i32 %295, %297
  br i1 %298, label %299, label %391

299:                                              ; preds = %283
  %300 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %288 to i64
  %301 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %289 to i64
  %302 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %266 to i64*
  store i64 %300, i64* %302, align 8
  store i64 %301, i64* %286, align 8
  %303 = add i32 %271, 2
  %304 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %266, align 8
  %305 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %269, align 8
  %306 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %304, i64 0, i32 1
  %307 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %306, align 8
  %308 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %305, i64 0, i32 1
  %309 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %307, i64 0, i32 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %309, i64 0, i32 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = icmp slt i32 %311, %313
  br i1 %314, label %315, label %391

315:                                              ; preds = %299
  %316 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %304 to i64
  %317 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %305 to i64
  %318 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %269 to i64*
  store i64 %316, i64* %318, align 8
  store i64 %317, i64* %302, align 8
  %319 = add i32 %271, 3
  %320 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %269, align 8
  %321 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %322 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %320, i64 0, i32 1
  %323 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %322, align 8
  %324 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %321, i64 0, i32 1
  %325 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %323, i64 0, i32 0, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %325, i64 0, i32 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = icmp slt i32 %327, %329
  br i1 %330, label %331, label %391

331:                                              ; preds = %315
  %332 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %320 to i64
  %333 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %321 to i64
  %334 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  store i64 %332, i64* %334, align 8
  store i64 %333, i64* %318, align 8
  %335 = add i32 %271, 4
  br label %391

336:                                              ; preds = %263
  %337 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %266, align 8
  %338 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %339 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %337, i64 0, i32 1
  %340 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %339, align 8
  %341 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %338, i64 0, i32 1
  %342 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %341, align 8
  %343 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %340, i64 0, i32 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %342, i64 0, i32 0, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = icmp slt i32 %344, %346
  %348 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %7, align 8
  %349 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %348, i64 0, i32 1
  %350 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %349, align 8
  %351 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %350, i64 0, i32 0, i32 0
  %352 = load i32, i32* %351, align 4
  %353 = icmp slt i32 %352, %344
  %354 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %337 to i64
  %355 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %348 to i64
  %356 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %338 to i64
  br i1 %347, label %375, label %357

357:                                              ; preds = %336
  br i1 %353, label %358, label %391

358:                                              ; preds = %357
  %359 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %266 to i64*
  store i64 %355, i64* %359, align 8
  store i64 %354, i64* %8, align 8
  %360 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %266, align 8
  %361 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %362 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %360, i64 0, i32 1
  %363 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %362, align 8
  %364 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %361, i64 0, i32 1
  %365 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %364, align 8
  %366 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %363, i64 0, i32 0, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %365, i64 0, i32 0, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = icmp slt i32 %367, %369
  br i1 %370, label %371, label %391

371:                                              ; preds = %358
  %372 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %360 to i64
  %373 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %361 to i64
  %374 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  store i64 %372, i64* %374, align 8
  store i64 %373, i64* %359, align 8
  br label %391

375:                                              ; preds = %336
  %376 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  br i1 %353, label %377, label %378

377:                                              ; preds = %375
  store i64 %355, i64* %376, align 8
  store i64 %356, i64* %10, align 8
  br label %391

378:                                              ; preds = %375
  %379 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %266 to i64*
  store i64 %354, i64* %376, align 8
  store i64 %356, i64* %379, align 8
  %380 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %7, align 8
  %381 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %380, i64 0, i32 1
  %382 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %381, align 8
  %383 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %341, align 8
  %384 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %382, i64 0, i32 0, i32 0
  %385 = load i32, i32* %384, align 4
  %386 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %383, i64 0, i32 0, i32 0
  %387 = load i32, i32* %386, align 4
  %388 = icmp slt i32 %385, %387
  br i1 %388, label %389, label %391

389:                                              ; preds = %378
  %390 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %380 to i64
  store i64 %390, i64* %379, align 8
  store i64 %356, i64* %9, align 8
  br label %391

391:                                              ; preds = %389, %378, %377, %371, %358, %357, %331, %315, %299, %283, %267
  %392 = phi i32 [ %335, %331 ], [ %319, %315 ], [ %303, %299 ], [ %287, %283 ], [ %271, %267 ], [ 1, %377 ], [ 0, %357 ], [ 2, %371 ], [ 1, %358 ], [ 2, %389 ], [ 1, %378 ]
  %393 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %394 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %266, align 8
  %395 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %393, i64 0, i32 1
  %396 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %395, align 8
  %397 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %394, i64 0, i32 1
  %398 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %396, i64 0, i32 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %398, i64 0, i32 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = icmp slt i32 %400, %402
  br i1 %403, label %484, label %404

404:                                              ; preds = %391, %471
  %405 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %406, %471 ], [ %7, %391 ]
  %406 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %405, i64 -1
  %407 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %17, %406
  br i1 %407, label %408, label %471

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 1
  %410 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %7, align 8
  %411 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %410, i64 0, i32 1
  %412 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %411, align 8
  %413 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %412, i64 0, i32 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = icmp slt i32 %400, %414
  %416 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %410 to i64
  br i1 %415, label %434, label %417

417:                                              ; preds = %408
  %418 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %409, %7
  br i1 %418, label %573, label %419

419:                                              ; preds = %417, %431
  %420 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %432, %431 ], [ %409, %417 ]
  %421 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %420, align 8
  %422 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %421, i64 0, i32 1
  %423 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %422, align 8
  %424 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %423, i64 0, i32 0, i32 0
  %425 = load i32, i32* %424, align 4
  %426 = icmp slt i32 %400, %425
  br i1 %426, label %427, label %431

427:                                              ; preds = %419
  %428 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %421 to i64
  %429 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %420 to i64*
  store i64 %416, i64* %429, align 8
  store i64 %428, i64* %12, align 8
  %430 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %420, i64 1
  br label %434

431:                                              ; preds = %419
  %432 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %420, i64 1
  %433 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %432, %7
  br i1 %433, label %573, label %419

434:                                              ; preds = %427, %408
  %435 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %409, %408 ], [ %430, %427 ]
  %436 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %435, %7
  br i1 %436, label %573, label %437

437:                                              ; preds = %434, %467
  %438 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %453, %467 ], [ %435, %434 ]
  %439 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %458, %467 ], [ %7, %434 ]
  %440 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, align 8
  %441 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %440, i64 0, i32 1
  %442 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %441, align 8
  %443 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %442, i64 0, i32 0, i32 0
  %444 = load i32, i32* %443, align 4
  br label %445

445:                                              ; preds = %445, %437
  %446 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %438, %437 ], [ %453, %445 ]
  %447 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %446, align 8
  %448 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %447, i64 0, i32 1
  %449 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %448, align 8
  %450 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %449, i64 0, i32 0, i32 0
  %451 = load i32, i32* %450, align 4
  %452 = icmp slt i32 %444, %451
  %453 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %446, i64 1
  br i1 %452, label %454, label %445

454:                                              ; preds = %445
  %455 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %447 to i64
  br label %456

456:                                              ; preds = %454, %456
  %457 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %458, %456 ], [ %439, %454 ]
  %458 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %457, i64 -1
  %459 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %458, align 8
  %460 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %459, i64 0, i32 1
  %461 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %460, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %461, i64 0, i32 0, i32 0
  %463 = load i32, i32* %462, align 4
  %464 = icmp slt i32 %444, %463
  br i1 %464, label %456, label %465

465:                                              ; preds = %456
  %466 = icmp ult %"class.v8::internal::compiler::VirtualRegisterData"** %446, %458
  br i1 %466, label %467, label %16

467:                                              ; preds = %465
  %468 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %459 to i64
  %469 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %446 to i64*
  %470 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %458 to i64*
  store i64 %468, i64* %469, align 8
  store i64 %455, i64* %470, align 8
  br label %437

471:                                              ; preds = %404
  %472 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %406, align 8
  %473 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %472, i64 0, i32 1
  %474 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %473, align 8
  %475 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %474, i64 0, i32 0, i32 0
  %476 = load i32, i32* %475, align 4
  %477 = icmp slt i32 %476, %402
  br i1 %477, label %478, label %404

478:                                              ; preds = %471
  %479 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %393 to i64
  %480 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %472 to i64
  %481 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64*
  %482 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %406 to i64*
  store i64 %480, i64* %481, align 8
  store i64 %479, i64* %482, align 8
  %483 = add i32 %392, 1
  br label %484

484:                                              ; preds = %391, %478
  %485 = phi i32 [ %483, %478 ], [ %392, %391 ]
  %486 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %406, %478 ], [ %7, %391 ]
  %487 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %17 to i64
  %488 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %17, i64 1
  %489 = icmp ult %"class.v8::internal::compiler::VirtualRegisterData"** %488, %486
  br i1 %489, label %490, label %529

490:                                              ; preds = %484, %522
  %491 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %528, %522 ], [ %266, %484 ]
  %492 = phi i32 [ %526, %522 ], [ %485, %484 ]
  %493 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %508, %522 ], [ %488, %484 ]
  %494 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %513, %522 ], [ %486, %484 ]
  %495 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %491, align 8
  %496 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %495, i64 0, i32 1
  %497 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %496, align 8
  %498 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %497, i64 0, i32 0, i32 0
  %499 = load i32, i32* %498, align 4
  br label %500

500:                                              ; preds = %500, %490
  %501 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %493, %490 ], [ %508, %500 ]
  %502 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %501, align 8
  %503 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %502, i64 0, i32 1
  %504 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %503, align 8
  %505 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %504, i64 0, i32 0, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = icmp slt i32 %506, %499
  %508 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %501, i64 1
  br i1 %507, label %500, label %509

509:                                              ; preds = %500
  %510 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %502 to i64
  br label %511

511:                                              ; preds = %509, %511
  %512 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %513, %511 ], [ %494, %509 ]
  %513 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %512, i64 -1
  %514 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %513, align 8
  %515 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %514, i64 0, i32 1
  %516 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %515, align 8
  %517 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %516, i64 0, i32 0, i32 0
  %518 = load i32, i32* %517, align 4
  %519 = icmp slt i32 %518, %499
  br i1 %519, label %520, label %511

520:                                              ; preds = %511
  %521 = icmp ugt %"class.v8::internal::compiler::VirtualRegisterData"** %501, %513
  br i1 %521, label %529, label %522

522:                                              ; preds = %520
  %523 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %514 to i64
  %524 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %501 to i64*
  %525 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %513 to i64*
  store i64 %523, i64* %524, align 8
  store i64 %510, i64* %525, align 8
  %526 = add i32 %492, 1
  %527 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %491, %501
  %528 = select i1 %527, %"class.v8::internal::compiler::VirtualRegisterData"** %513, %"class.v8::internal::compiler::VirtualRegisterData"** %491
  br label %490

529:                                              ; preds = %520, %484
  %530 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %266, %484 ], [ %491, %520 ]
  %531 = phi i32 [ %485, %484 ], [ %492, %520 ]
  %532 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %488, %484 ], [ %501, %520 ]
  %533 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %532, %530
  br i1 %533, label %552, label %534

534:                                              ; preds = %529
  %535 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %530, align 8
  %536 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %532, align 8
  %537 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %535, i64 0, i32 1
  %538 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %537, align 8
  %539 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %536, i64 0, i32 1
  %540 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %539, align 8
  %541 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %538, i64 0, i32 0, i32 0
  %542 = load i32, i32* %541, align 4
  %543 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %540, i64 0, i32 0, i32 0
  %544 = load i32, i32* %543, align 4
  %545 = icmp slt i32 %542, %544
  br i1 %545, label %546, label %552

546:                                              ; preds = %534
  %547 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %535 to i64
  %548 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %536 to i64
  %549 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %532 to i64*
  %550 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %530 to i64*
  store i64 %547, i64* %549, align 8
  store i64 %548, i64* %550, align 8
  %551 = add i32 %531, 1
  br label %552

552:                                              ; preds = %529, %546, %534
  %553 = phi i32 [ %551, %546 ], [ %531, %534 ], [ %531, %529 ]
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %562

555:                                              ; preds = %552
  %556 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEbT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %17, %"class.v8::internal::compiler::VirtualRegisterData"** %532)
  %557 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %532, i64 1
  %558 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEbT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %557, %"class.v8::internal::compiler::VirtualRegisterData"** %4)
  br i1 %558, label %559, label %561

559:                                              ; preds = %555
  br i1 %556, label %573, label %560

560:                                              ; preds = %559, %571
  br label %3

561:                                              ; preds = %555
  br i1 %556, label %569, label %562

562:                                              ; preds = %561, %552
  %563 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %532 to i64
  %564 = sub i64 %563, %487
  %565 = sub i64 %13, %563
  %566 = icmp slt i64 %564, %565
  br i1 %566, label %567, label %571

567:                                              ; preds = %562
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEvT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %17, %"class.v8::internal::compiler::VirtualRegisterData"** %532)
  %568 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %532, i64 1
  br label %569

569:                                              ; preds = %567, %561
  %570 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %557, %561 ], [ %568, %567 ]
  br label %14

571:                                              ; preds = %562
  %572 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %532, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEvT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %572, %"class.v8::internal::compiler::VirtualRegisterData"** %4)
  br label %560

573:                                              ; preds = %559, %434, %16, %16, %417, %431, %258, %218, %162, %150, %137, %121, %104, %96, %85, %83, %77, %63, %62, %21, %34, %99
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEjT0_SB_SB_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** nocapture, %"class.v8::internal::compiler::VirtualRegisterData"** nocapture, %"class.v8::internal::compiler::VirtualRegisterData"** nocapture, %"class.v8::internal::compiler::VirtualRegisterData"** nocapture) unnamed_addr #4 {
  %5 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, align 8
  %6 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %7 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %5, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %7, align 8
  %9 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %6, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %8, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  %16 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %2, align 8
  %17 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %16, i64 0, i32 1
  %18 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %18, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %12
  %22 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %5 to i64
  %23 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %16 to i64
  %24 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %6 to i64
  br i1 %15, label %46, label %25

25:                                               ; preds = %4
  br i1 %21, label %26, label %64

26:                                               ; preds = %25
  %27 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %1 to i64*
  %28 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %2 to i64*
  store i64 %23, i64* %27, align 8
  store i64 %22, i64* %28, align 8
  %29 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, align 8
  %30 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %31 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %29, i64 0, i32 1
  %32 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %31, align 8
  %33 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %30, i64 0, i32 1
  %34 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %32, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %34, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %36, %38
  br i1 %39, label %40, label %64

40:                                               ; preds = %26
  %41 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %29 to i64
  %42 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %30 to i64
  %43 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  store i64 %41, i64* %43, align 8
  store i64 %42, i64* %27, align 8
  %44 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %2, align 8
  %45 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %44 to i64
  br label %64

46:                                               ; preds = %4
  %47 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  br i1 %21, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %2 to i64*
  store i64 %23, i64* %47, align 8
  store i64 %24, i64* %49, align 8
  br label %64

50:                                               ; preds = %46
  %51 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %1 to i64*
  store i64 %22, i64* %47, align 8
  store i64 %24, i64* %51, align 8
  %52 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %2, align 8
  %53 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %52, i64 0, i32 1
  %54 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %53, align 8
  %55 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %9, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %54, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %55, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %57, %59
  %61 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %52 to i64
  br i1 %60, label %62, label %64

62:                                               ; preds = %50
  %63 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %2 to i64*
  store i64 %61, i64* %51, align 8
  store i64 %24, i64* %63, align 8
  br label %64

64:                                               ; preds = %25, %26, %40, %48, %50, %62
  %65 = phi i64 [ %24, %48 ], [ %23, %25 ], [ %45, %40 ], [ %22, %26 ], [ %24, %62 ], [ %61, %50 ]
  %66 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %6, %48 ], [ %16, %25 ], [ %44, %40 ], [ %5, %26 ], [ %6, %62 ], [ %52, %50 ]
  %67 = phi i32 [ 1, %48 ], [ 0, %25 ], [ 2, %40 ], [ 1, %26 ], [ 2, %62 ], [ 1, %50 ]
  %68 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %3, align 8
  %69 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %68, i64 0, i32 1
  %70 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %69, align 8
  %71 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %66, i64 0, i32 1
  %72 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %70, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %72, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %115

78:                                               ; preds = %64
  %79 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %68 to i64
  %80 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %2 to i64*
  %81 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %3 to i64*
  store i64 %79, i64* %80, align 8
  store i64 %65, i64* %81, align 8
  %82 = add nuw nsw i32 %67, 1
  %83 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %2, align 8
  %84 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, align 8
  %85 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %83, i64 0, i32 1
  %86 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %85, align 8
  %87 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %84, i64 0, i32 1
  %88 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %86, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %88, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %90, %92
  br i1 %93, label %94, label %115

94:                                               ; preds = %78
  %95 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %83 to i64
  %96 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %84 to i64
  %97 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %1 to i64*
  store i64 %95, i64* %97, align 8
  store i64 %96, i64* %80, align 8
  %98 = add nuw nsw i32 %67, 2
  %99 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, align 8
  %100 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %101 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %99, i64 0, i32 1
  %102 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %101, align 8
  %103 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %100, i64 0, i32 1
  %104 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %102, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %104, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %106, %108
  br i1 %109, label %110, label %115

110:                                              ; preds = %94
  %111 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %99 to i64
  %112 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %100 to i64
  %113 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  store i64 %111, i64* %113, align 8
  store i64 %112, i64* %97, align 8
  %114 = add nuw nsw i32 %67, 3
  br label %115

115:                                              ; preds = %78, %110, %94, %64
  %116 = phi i32 [ %114, %110 ], [ %98, %94 ], [ %82, %78 ], [ %67, %64 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEbT0_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"**, %"class.v8::internal::compiler::VirtualRegisterData"**) unnamed_addr #2 {
  %3 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %1 to i64
  %4 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %151 [
    i64 0, label %254
    i64 1, label %254
    i64 2, label %7
    i64 3, label %25
    i64 4, label %85
    i64 5, label %90
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, i64 -1
  %9 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %8, align 8
  %10 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %11 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %9, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %11, align 8
  %13 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %10, i64 0, i32 1
  %14 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %12, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %14, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %254

20:                                               ; preds = %7
  %21 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %9 to i64
  %22 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %10 to i64
  %23 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  %24 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %8 to i64*
  store i64 %21, i64* %23, align 8
  store i64 %22, i64* %24, align 8
  br label %254

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, i64 -1
  %28 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %26, align 8
  %29 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %30 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %28, i64 0, i32 1
  %31 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %30, align 8
  %32 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %29, i64 0, i32 1
  %33 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %31, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %33, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %35, %37
  %39 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %27, align 8
  %40 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %39, i64 0, i32 1
  %41 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %41, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, %35
  %45 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %28 to i64
  %46 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %39 to i64
  %47 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %29 to i64
  br i1 %38, label %67, label %48

48:                                               ; preds = %25
  br i1 %44, label %49, label %254

49:                                               ; preds = %48
  %50 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %26 to i64*
  %51 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %27 to i64*
  store i64 %46, i64* %50, align 8
  store i64 %45, i64* %51, align 8
  %52 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %26, align 8
  %53 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %54 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %52, i64 0, i32 1
  %55 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %54, align 8
  %56 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %53, i64 0, i32 1
  %57 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %55, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %57, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %59, %61
  br i1 %62, label %63, label %254

63:                                               ; preds = %49
  %64 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %52 to i64
  %65 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %53 to i64
  %66 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  store i64 %64, i64* %66, align 8
  store i64 %65, i64* %50, align 8
  br label %254

67:                                               ; preds = %25
  %68 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  br i1 %44, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %27 to i64*
  store i64 %46, i64* %68, align 8
  store i64 %47, i64* %70, align 8
  br label %254

71:                                               ; preds = %67
  %72 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %26 to i64*
  store i64 %45, i64* %68, align 8
  store i64 %47, i64* %72, align 8
  %73 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %27, align 8
  %74 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %73, i64 0, i32 1
  %75 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %74, align 8
  %76 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %32, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %75, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %76, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %78, %80
  br i1 %81, label %82, label %254

82:                                               ; preds = %71
  %83 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %73 to i64
  %84 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %27 to i64*
  store i64 %83, i64* %72, align 8
  store i64 %47, i64* %84, align 8
  br label %254

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 1
  %87 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 2
  %88 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, i64 -1
  %89 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEjT0_SB_SB_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %0, %"class.v8::internal::compiler::VirtualRegisterData"** %86, %"class.v8::internal::compiler::VirtualRegisterData"** %87, %"class.v8::internal::compiler::VirtualRegisterData"** %88)
  br label %254

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 1
  %92 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 2
  %93 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 3
  %94 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %1, i64 -1
  %95 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8compiler18AllocateSpillSlotsEPNS3_29MidTierRegisterAllocationDataEE3$_0PPNS3_19VirtualRegisterDataEEEjT0_SB_SB_SB_T_"(%"class.v8::internal::compiler::VirtualRegisterData"** %0, %"class.v8::internal::compiler::VirtualRegisterData"** %91, %"class.v8::internal::compiler::VirtualRegisterData"** %92, %"class.v8::internal::compiler::VirtualRegisterData"** %93) #12
  %96 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %94, align 8
  %97 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %93, align 8
  %98 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %96, i64 0, i32 1
  %99 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %98, align 8
  %100 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %97, i64 0, i32 1
  %101 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %99, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %101, i64 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %103, %105
  br i1 %106, label %107, label %254

107:                                              ; preds = %90
  %108 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %96 to i64
  %109 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %97 to i64
  %110 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %93 to i64*
  %111 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %94 to i64*
  store i64 %108, i64* %110, align 8
  store i64 %109, i64* %111, align 8
  %112 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %93, align 8
  %113 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %92, align 8
  %114 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %112, i64 0, i32 1
  %115 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %114, align 8
  %116 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %113, i64 0, i32 1
  %117 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %115, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %117, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %119, %121
  br i1 %122, label %123, label %254

123:                                              ; preds = %107
  %124 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %112 to i64
  %125 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %113 to i64
  %126 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %92 to i64*
  store i64 %124, i64* %126, align 8
  store i64 %125, i64* %110, align 8
  %127 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %91, align 8
  %128 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %114, align 8
  %129 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %127, i64 0, i32 1
  %130 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %128, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %130, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %132, %134
  br i1 %135, label %136, label %254

136:                                              ; preds = %123
  %137 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %127 to i64
  %138 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %91 to i64*
  store i64 %124, i64* %138, align 8
  store i64 %137, i64* %126, align 8
  %139 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %140 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %114, align 8
  %141 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %139, i64 0, i32 1
  %142 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %140, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %142, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp slt i32 %144, %146
  br i1 %147, label %148, label %254

148:                                              ; preds = %136
  %149 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %139 to i64
  %150 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  store i64 %124, i64* %150, align 8
  store i64 %149, i64* %138, align 8
  br label %254

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 2
  %153 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 1
  %154 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %153, align 8
  %155 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, align 8
  %156 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %154, i64 0, i32 1
  %157 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %156, align 8
  %158 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %155, i64 0, i32 1
  %159 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %157, i64 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %159, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = icmp slt i32 %161, %163
  %165 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %152, align 8
  %166 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %165, i64 0, i32 1
  %167 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %167, i64 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %169, %161
  %171 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %154 to i64
  %172 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %165 to i64
  %173 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %155 to i64
  br i1 %164, label %187, label %174

174:                                              ; preds = %151
  br i1 %170, label %175, label %202

175:                                              ; preds = %174
  %176 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %153 to i64*
  %177 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %152 to i64*
  store i64 %172, i64* %176, align 8
  store i64 %171, i64* %177, align 8
  %178 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %166, align 8
  %179 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %158, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %178, i64 0, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %179, i64 0, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %181, %183
  br i1 %184, label %185, label %202

185:                                              ; preds = %175
  %186 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  store i64 %172, i64* %186, align 8
  store i64 %173, i64* %176, align 8
  br label %202

187:                                              ; preds = %151
  %188 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %0 to i64*
  br i1 %170, label %189, label %191

189:                                              ; preds = %187
  %190 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %152 to i64*
  store i64 %172, i64* %188, align 8
  store i64 %173, i64* %190, align 8
  br label %202

191:                                              ; preds = %187
  %192 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %153 to i64*
  store i64 %171, i64* %188, align 8
  store i64 %173, i64* %192, align 8
  %193 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %166, align 8
  %194 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %158, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %193, i64 0, i32 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %194, i64 0, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp slt i32 %196, %198
  br i1 %199, label %200, label %202

200:                                              ; preds = %191
  %201 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %152 to i64*
  store i64 %172, i64* %192, align 8
  store i64 %173, i64* %201, align 8
  br label %202

202:                                              ; preds = %174, %175, %185, %189, %191, %200
  %203 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %165, %174 ], [ %154, %175 ], [ %154, %185 ], [ %155, %189 ], [ %165, %191 ], [ %155, %200 ]
  %204 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %0, i64 3
  %205 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %204, %1
  br i1 %205, label %254, label %206

206:                                              ; preds = %202, %249
  %207 = phi %"class.v8::internal::compiler::VirtualRegisterData"* [ %250, %249 ], [ %203, %202 ]
  %208 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %247, %249 ], [ %204, %202 ]
  %209 = phi i32 [ %246, %249 ], [ 0, %202 ]
  %210 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %208, %249 ], [ %152, %202 ]
  %211 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %208, align 8
  %212 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %211, i64 0, i32 1
  %213 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %212, align 8
  %214 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %207, i64 0, i32 1
  %215 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %213, i64 0, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %215, i64 0, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp slt i32 %217, %219
  %221 = ptrtoint %"class.v8::internal::compiler::VirtualRegisterData"* %211 to i64
  br i1 %220, label %222, label %245

222:                                              ; preds = %206, %229
  %223 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %224, %229 ], [ %208, %206 ]
  %224 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %230, %229 ], [ %210, %206 ]
  %225 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %224, %0
  br i1 %228, label %240, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %224, i64 -1
  %231 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %230, align 8
  %232 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %212, align 8
  %233 = getelementptr %"class.v8::internal::compiler::VirtualRegisterData", %"class.v8::internal::compiler::VirtualRegisterData"* %231, i64 0, i32 1
  %234 = load %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"*, %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"** %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %232, i64 0, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData::SpillRange", %"class.v8::internal::compiler::VirtualRegisterData::SpillRange"* %234, i64 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp slt i32 %236, %238
  br i1 %239, label %222, label %240

240:                                              ; preds = %222, %229
  %241 = phi %"class.v8::internal::compiler::VirtualRegisterData"** [ %224, %229 ], [ %0, %222 ]
  %242 = bitcast %"class.v8::internal::compiler::VirtualRegisterData"** %241 to i64*
  store i64 %221, i64* %242, align 8
  %243 = add i32 %209, 1
  %244 = icmp eq i32 %243, 8
  br i1 %244, label %251, label %245

245:                                              ; preds = %240, %206
  %246 = phi i32 [ %243, %240 ], [ %209, %206 ]
  %247 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %208, i64 1
  %248 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %247, %1
  br i1 %248, label %254, label %249

249:                                              ; preds = %245
  %250 = load %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %208, align 8
  br label %206

251:                                              ; preds = %240
  %252 = getelementptr inbounds %"class.v8::internal::compiler::VirtualRegisterData"*, %"class.v8::internal::compiler::VirtualRegisterData"** %208, i64 1
  %253 = icmp eq %"class.v8::internal::compiler::VirtualRegisterData"** %252, %1
  br label %254

254:                                              ; preds = %245, %251, %202, %148, %136, %123, %107, %90, %82, %71, %69, %63, %49, %48, %7, %20, %2, %2, %85
  %255 = phi i1 [ true, %85 ], [ true, %2 ], [ true, %2 ], [ true, %20 ], [ true, %7 ], [ true, %48 ], [ true, %49 ], [ true, %63 ], [ true, %69 ], [ true, %71 ], [ true, %82 ], [ true, %90 ], [ true, %107 ], [ true, %123 ], [ true, %136 ], [ true, %148 ], [ true, %202 ], [ %253, %251 ], [ true, %245 ]
  ret i1 %255
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !4}
!17 = distinct !{!17, !15}
!18 = !{!"branch_weights", i32 2000, i32 1}
!19 = distinct !{!19, !4}
!20 = distinct !{!20, !4}
!21 = !{i64 0, i64 65}
!22 = !{!"branch_weights", i32 2001, i32 2000}
!23 = !{!"branch_weights", i32 4001, i32 1}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeIN2v88internal8compiler9RpoNumberENS_4lessIS4_EENS2_13ZoneAllocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !15}
!39 = distinct !{!39, !4}
!40 = distinct !{!40, !15}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_: argument 0"}
!43 = distinct !{!43, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_: argument 0"}
!46 = distinct !{!46, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__14listIPN2v88internal8compiler25MidTierSpillSlotAllocator9SpillSlotENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__14listIPN2v88internal8compiler25MidTierSpillSlotAllocator9SpillSlotENS2_13ZoneAllocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !15}
!56 = distinct !{!56, !4}
!57 = distinct !{!57, !15}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !15}
!64 = distinct !{!64, !4}
!65 = distinct !{!65, !15}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !15}
!72 = distinct !{!72, !4}
!73 = distinct !{!73, !15}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !15}
!80 = distinct !{!80, !4}
!81 = distinct !{!81, !15}
!82 = distinct !{!82, !4}
!83 = distinct !{!83, !4}
!84 = distinct !{!84, !4}
!85 = distinct !{!85, !4}
!86 = distinct !{!86, !4}
