; ModuleID = '../../third_party/angle/src/compiler/translator/ValidateAST.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/ValidateAST.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"struct.sh::ValidateASTOptions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.sh::(anonymous namespace)::ValidateAST" = type <{ %"class.sh::TIntermTraverser", %"struct.sh::ValidateASTOptions", [6 x i8], %"class.sh::TDiagnostics"*, %"class.std::__1::map.80", i8, [7 x i8], %"class.std::__1::vector.91", %"class.std::__1::set.107", i8, i8, [6 x i8], %"class.std::__1::vector.117", i8, i8, [6 x i8] }>
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.6", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.59", %"class.std::__1::vector.66", %"class.sh::TVector", %"class.std::__1::vector.73" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.13" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.18", %"class.std::__1::vector.25", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.27"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.41"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.41" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.42"*, i64, i32, %"class.std::__1::basic_string.50" }
%"class.sh::TVector.42" = type { %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair.45" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.sh::TField"** }
%"class.std::__1::basic_string.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.53 }
%union.anon.53 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.58, i32 }
%union.anon.58 = type { i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.68" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.sh::TVector" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.sh::TIntermNode"** }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.75" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.std::__1::set"*, %"class.std::__1::set"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::set"* }
%"class.std::__1::set.107" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.std::__1::map.119"*, %"class.std::__1::map.119"*, %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::map.119"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.145" }
%"struct.std::__1::pair.145" = type { %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"* }
%"class.std::__1::__tree_node.161" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.162" }
%"struct.std::__1::__value_type.162" = type { %"struct.std::__1::pair.163" }
%"struct.std::__1::pair.163" = type { %"class.sh::ImmutableString", %"class.sh::TFieldListCollection"* }
%"class.std::__1::__tree_node.152" = type { %"class.std::__1::__tree_node_base.base", %"class.sh::TInterfaceBlock"* }
%"class.std::__1::__tree_node.153" = type { %"class.std::__1::__tree_node_base.base", %"class.sh::TVariable"* }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.135", i8, [7 x i8] }>
%"class.sh::TVector.135" = type { %"class.std::__1::vector.136" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { i32*, i32*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { i32* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.143"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.143" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.std::__1::tuple.191" = type { %"struct.std::__1::__tuple_impl.192" }
%"struct.std::__1::__tuple_impl.192" = type { %"class.std::__1::__tuple_leaf.193" }
%"class.std::__1::__tuple_leaf.193" = type { %"class.sh::ImmutableString"* }
%"class.std::__1::tuple.144" = type { i8 }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_3setIPKN2sh9TVariableENS_4lessIS5_EENS_9allocatorIS5_EEEENS8_ISA_EEE21__push_back_slow_pathISA_EEvOT_ = comdat any

$_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16vectorINS_3mapIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEENS9_ISE_EEE21__push_back_slow_pathISE_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

@_ZTVN2sh12_GLOBAL__N_111ValidateASTE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateAST"*)* @_ZN2sh12_GLOBAL__N_111ValidateASTD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateAST"*)* @_ZN2sh12_GLOBAL__N_111ValidateASTD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh12_GLOBAL__N_111ValidateAST26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.1 = private unnamed_addr constant [112 x i8] c"Found reference to undeclared or inconsistenly redeclared nameless interface block <validateVariableReferences>\00", align 1
@.str.2 = private unnamed_addr constant [104 x i8] c"Found reference to inconsistenly redeclared nameless interface block field <validateVariableReferences>\00", align 1
@.str.3 = private unnamed_addr constant [97 x i8] c"Found reference to undeclared or inconsistently redeclared variable <validateVariableReferences>\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"Found child with two parents\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"<validateSingleParent>\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"gl_\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [82 x i8] c"Found two declarations of the same function argument <validateVariableReferences>\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"<validateNullNodes>\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Found nullptr child\00", align 1
@.str.12 = private unnamed_addr constant [73 x i8] c"Found two declarations of the same variable <validateVariableReferences>\00", align 1
@.str.13 = private unnamed_addr constant [108 x i8] c"Found redeclaration of struct or interface block with the same name in the same scope <validateStructUsage>\00", align 1
@.str.14 = private unnamed_addr constant [92 x i8] c"Found reference to struct or interface block with doubly created type <validateStructUsage>\00", align 1
@.str.15 = private unnamed_addr constant [87 x i8] c"Found reference to struct or interface block with no declaration <validateStructUsage>\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh11ValidateASTEPNS_11TIntermNodeEPNS_12TDiagnosticsERKNS_18ValidateASTOptionsE(%"class.sh::TIntermNode"*, %"class.sh::TDiagnostics"*, %"struct.sh::ValidateASTOptions"* nocapture readonly dereferenceable(10)) local_unnamed_addr #0 {
  %4 = alloca %"class.sh::(anonymous namespace)::ValidateAST", align 8
  %5 = bitcast %"class.sh::(anonymous namespace)::ValidateAST"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 296, i1 false) #10
  %6 = ptrtoint %"class.sh::TIntermNode"* %0 to i64
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %7, i1 zeroext true, i1 zeroext false, i1 zeroext true, %"class.sh::TSymbolTable"* null) #10
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_111ValidateASTE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.sh::ValidateASTOptions", %"struct.sh::ValidateASTOptions"* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 %10, i64 10, i1 false) #10
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 3
  store %"class.sh::TDiagnostics"* %1, %"class.sh::TDiagnostics"** %11, align 8
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 4
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::map.80", %"class.std::__1::map.80"* %12, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 5
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 7
  %19 = bitcast %"class.std::__1::vector.91"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 8, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 9
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 10
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 12
  %27 = bitcast %"class.sh::TIntermNode"* %0 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %28 = bitcast %"class.std::__1::vector.117"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 26, i1 false) #10
  %29 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %27, align 8
  %30 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %29, i64 8
  %31 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %30, align 8
  %32 = call %"class.sh::TIntermBlock"* %31(%"class.sh::TIntermNode"* %0) #10
  %33 = icmp eq %"class.sh::TIntermBlock"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %3
  %35 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %27, align 8
  %36 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %35, i64 8
  %37 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %36, align 8
  %38 = call %"class.sh::TIntermBlock"* %37(%"class.sh::TIntermNode"* %0) #10
  %39 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %38, i64 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %34, %3
  %43 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 1, i32 1
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %42, %34
  %45 = load i8, i8* %9, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %113, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node"* %49, null
  br i1 %50, label %77, label %51

51:                                               ; preds = %47, %73
  %52 = phi %"class.std::__1::__tree_node"* [ %76, %73 ], [ %49, %47 ]
  %53 = phi %"class.std::__1::__tree_node_base"** [ %75, %73 ], [ %13, %47 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %54, align 8
  %56 = icmp ugt %"class.sh::TIntermNode"* %55, %0
  br i1 %56, label %57, label %63

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %73

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 0, i32 0
  br label %79

63:                                               ; preds = %51
  %64 = icmp ult %"class.sh::TIntermNode"* %55, %0
  br i1 %64, label %65, label %71

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 0, i32 1
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 0, i32 0
  br label %79

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 0, i32 0
  br label %79

73:                                               ; preds = %65, %57
  %74 = phi %"class.std::__1::__tree_node_base"* [ %59, %57 ], [ %67, %65 ]
  %75 = phi %"class.std::__1::__tree_node_base"** [ %58, %57 ], [ %66, %65 ]
  %76 = bitcast %"class.std::__1::__tree_node_base"* %74 to %"class.std::__1::__tree_node"*
  br label %51

77:                                               ; preds = %47
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  br label %79

79:                                               ; preds = %77, %71, %69, %61
  %80 = phi %"class.std::__1::__tree_end_node"* [ %14, %77 ], [ %62, %61 ], [ %70, %69 ], [ %72, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %78, %77 ], [ %58, %61 ], [ %66, %69 ], [ %53, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %110

85:                                               ; preds = %79
  %86 = call i8* @_Znwm(i64 48) #11, !noalias !3
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast i8* %87 to i64*
  store i64 %6, i64* %88, align 8, !noalias !3
  %89 = getelementptr inbounds i8, i8* %86, i64 40
  %90 = bitcast i8* %89 to %"class.sh::TIntermNode"**
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %90, align 8, !noalias !3
  %91 = bitcast i8* %86 to %"class.std::__1::__tree_node"*
  %92 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds i8, i8* %86, i64 16
  %94 = bitcast i8* %93 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"** %94, align 8
  %95 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %95, align 8
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %85
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  %102 = bitcast %"class.std::__1::map.80"* %12 to i64*
  store i64 %101, i64* %102, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %104

104:                                              ; preds = %100, %85
  %105 = phi %"class.std::__1::__tree_node_base"* [ %92, %85 ], [ %103, %100 ]
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %106, %"class.std::__1::__tree_node_base"* %105) #10
  %107 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %107, align 8
  br label %110

110:                                              ; preds = %104, %79
  %111 = phi %"class.std::__1::__tree_node"* [ %91, %104 ], [ %83, %79 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 0, i32 1
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %112, align 8
  br label %113

113:                                              ; preds = %110, %44
  %114 = bitcast %"class.sh::TIntermNode"* %0 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %115 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %115, i64 2
  %117 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %116, align 8
  call void %117(%"class.sh::TIntermNode"* %0, %"class.sh::TIntermTraverser"* nonnull %7) #10
  %118 = load i8, i8* %17, align 8, !range !2
  %119 = load i8, i8* %24, align 8
  %120 = or i8 %119, %118
  %121 = load i8, i8* %25, align 1
  %122 = or i8 %120, %121
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %113
  %125 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 13
  %126 = load i8, i8* %125, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %4, i64 0, i32 14
  %130 = load i8, i8* %129, align 1, !range !2
  %131 = icmp eq i8 %130, 0
  br label %132

132:                                              ; preds = %113, %124, %128
  %133 = phi i1 [ false, %124 ], [ false, %113 ], [ %131, %128 ]
  call void @_ZN2sh12_GLOBAL__N_111ValidateASTD2Ev(%"class.sh::(anonymous namespace)::ValidateAST"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %5) #10
  ret i1 %133
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_111ValidateASTD2Ev(%"class.sh::(anonymous namespace)::ValidateAST"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_111ValidateASTE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %4, align 8
  %6 = icmp eq %"class.std::__1::map.119"* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::map.119"* %5 to i8*
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12, i32 0, i32 1
  %10 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %9, align 8
  %11 = icmp eq %"class.std::__1::map.119"* %10, %5
  br i1 %11, label %23, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.std::__1::map.119"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %13, i64 -1, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.161"**
  %18 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %17, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"* %15, %"class.std::__1::__tree_node.161"* %18) #10
  %19 = icmp eq %"class.std::__1::map.119"* %14, %5
  br i1 %19, label %20, label %12

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::vector.117"* %3 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i8* [ %22, %20 ], [ %8, %7 ]
  store %"class.std::__1::map.119"* %5, %"class.std::__1::map.119"** %9, align 8
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8, i32 0
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node.152"**
  %29 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %28, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.108"* %26, %"class.std::__1::__tree_node.152"* %29) #10
  %30 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7
  %31 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::set"*, %"class.std::__1::set"** %31, align 8
  %33 = icmp eq %"class.std::__1::set"* %32, null
  br i1 %33, label %52, label %34

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::set"* %32 to i8*
  %36 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 1
  %37 = load %"class.std::__1::set"*, %"class.std::__1::set"** %36, align 8
  %38 = icmp eq %"class.std::__1::set"* %37, %32
  br i1 %38, label %50, label %39

39:                                               ; preds = %34, %39
  %40 = phi %"class.std::__1::set"* [ %41, %39 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %41, i64 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %40, i64 -1, i32 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_node.153"**
  %45 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %44, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"* %42, %"class.std::__1::__tree_node.153"* %45) #10
  %46 = icmp eq %"class.std::__1::set"* %41, %32
  br i1 %46, label %47, label %39

47:                                               ; preds = %39
  %48 = bitcast %"class.std::__1::vector.91"* %30 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %34
  %51 = phi i8* [ %49, %47 ], [ %35, %34 ]
  store %"class.std::__1::set"* %32, %"class.std::__1::set"** %36, align 8
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %25, %50
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 4, i32 0
  %54 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.81"* %53, %"class.std::__1::__tree_node"* %56) #10
  %57 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %57) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_111ValidateASTD0Ev(%"class.sh::(anonymous namespace)::ValidateAST"*) unnamed_addr #2 align 2 {
  tail call void @_ZN2sh12_GLOBAL__N_111ValidateASTD2Ev(%"class.sh::(anonymous namespace)::ValidateAST"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_111ValidateAST11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.sh::ImmutableString", align 8
  %4 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 0, %"class.sh::TIntermNode"* %4)
  %5 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %6 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %5, align 8
  %7 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %8 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %8, i64 31
  %10 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %9, align 8
  %11 = tail call dereferenceable(184) %"class.sh::TType"* %10(%"class.sh::TIntermSymbol"* %1) #10
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %162, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.sh::TVariable"* %6 to %"class.sh::TSymbol"*
  %17 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %16) #10
  %18 = extractvalue { i8*, i64 } %17, 0
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %18
  %21 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #10
  br i1 %21, label %162, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %6, i64 0, i32 0, i32 2
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 2
  %26 = bitcast %"class.sh::ImmutableString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  br i1 %25, label %27, label %34

27:                                               ; preds = %22
  %28 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %16) #10
  %29 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %30 = extractvalue { i8*, i64 } %28, 0
  store i8* %30, i8** %29, align 8
  %31 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 1
  %32 = extractvalue { i8*, i64 } %28, 1
  store i64 %32, i64* %31, align 8
  %33 = call zeroext i1 @_ZN2sh9SpecConst15IsSpecConstNameERKNS_15ImmutableStringE(%"class.sh::ImmutableString"* nonnull dereferenceable(16) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  br i1 %33, label %162, label %35

34:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  br label %35

35:                                               ; preds = %34, %27
  %36 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 12
  %37 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %36, align 8
  %38 = icmp eq %"class.sh::TInterfaceBlock"* %37, null
  br i1 %38, label %115, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 91
  br i1 %42, label %115, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %37, i64 0, i32 1, i32 0
  %45 = load %"class.sh::TVector.42"*, %"class.sh::TVector.42"** %44, align 8
  %46 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 15
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_node.152"**
  %50 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node.152"* %50, null
  br i1 %51, label %68, label %52

52:                                               ; preds = %43, %64
  %53 = phi %"class.std::__1::__tree_node.152"* [ %66, %64 ], [ %50, %43 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %53, i64 0, i32 1
  %55 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %54, align 8
  %56 = icmp ult %"class.sh::TInterfaceBlock"* %37, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = bitcast %"class.std::__1::__tree_node.152"* %53 to %"class.std::__1::__tree_node.152"**
  br label %64

59:                                               ; preds = %52
  %60 = icmp ult %"class.sh::TInterfaceBlock"* %55, %37
  br i1 %60, label %61, label %77

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %53, i64 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::__tree_node_base"** %62 to %"class.std::__1::__tree_node.152"**
  br label %64

64:                                               ; preds = %61, %57
  %65 = phi %"class.std::__1::__tree_node.152"** [ %58, %57 ], [ %63, %61 ]
  %66 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node.152"* %66, null
  br i1 %67, label %68, label %52

68:                                               ; preds = %64, %43
  %69 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %70 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %69, align 8
  %71 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0, i32 1
  %72 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #10
  %73 = extractvalue { i8*, i64 } %72, 0
  %74 = icmp eq i8* %73, null
  %75 = select i1 %74, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %73
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %70, %"struct.sh::TSourceLoc"* dereferenceable(16) %71, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.1, i64 0, i64 0), i8* %75) #10
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 9
  store i8 1, i8* %76, align 8
  br label %162

77:                                               ; preds = %59
  %78 = getelementptr inbounds %"class.sh::TVector.42", %"class.sh::TVector.42"* %45, i64 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.sh::TField"*** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.sh::TVector.42"* %45 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %80, %82
  %84 = ashr exact i64 %83, 3
  %85 = icmp ult i64 %47, %84
  br i1 %85, label %86, label %106

86:                                               ; preds = %77
  %87 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #10
  %88 = extractvalue { i8*, i64 } %87, 0
  %89 = extractvalue { i8*, i64 } %87, 1
  %90 = getelementptr inbounds %"class.sh::TVector.42", %"class.sh::TVector.42"* %45, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.sh::TField"**, %"class.sh::TField"*** %90, align 8
  %92 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %91, i64 %47
  %93 = load %"class.sh::TField"*, %"class.sh::TField"** %92, align 8
  %94 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %93, i64 0, i32 1, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %89, %95
  br i1 %96, label %97, label %106

97:                                               ; preds = %86
  %98 = icmp eq i8* %88, null
  %99 = select i1 %98, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %88
  %100 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %93, i64 0, i32 1, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %101, null
  %103 = select i1 %102, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %101
  %104 = call i32 @bcmp(i8* %99, i8* %103, i64 %89) #10
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %162, label %106

106:                                              ; preds = %97, %86, %77
  %107 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %108 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %107, align 8
  %109 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0, i32 1
  %110 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #10
  %111 = extractvalue { i8*, i64 } %110, 0
  %112 = icmp eq i8* %111, null
  %113 = select i1 %112, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %111
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %108, %"struct.sh::TSourceLoc"* dereferenceable(16) %109, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.2, i64 0, i64 0), i8* %113) #10
  %114 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 9
  store i8 1, i8* %114, align 8
  br label %162

115:                                              ; preds = %35, %39
  %116 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 14
  %117 = load i8, i8* %116, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %23, align 4
  %121 = icmp eq i8 %120, 3
  br i1 %121, label %162, label %122

122:                                              ; preds = %115, %119
  %123 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 0
  %124 = load %"class.std::__1::set"*, %"class.std::__1::set"** %123, align 8
  %125 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 1
  %126 = load %"class.std::__1::set"*, %"class.std::__1::set"** %125, align 8
  %127 = icmp eq %"class.std::__1::set"* %124, %126
  br i1 %127, label %153, label %128

128:                                              ; preds = %122, %150
  %129 = phi %"class.std::__1::set"* [ %151, %150 ], [ %124, %122 ]
  %130 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %129, i64 0, i32 0, i32 1, i32 0, i32 0
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.std::__1::__tree_node.153"**
  %132 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node.153"* %132, null
  br i1 %133, label %150, label %134

134:                                              ; preds = %128, %146
  %135 = phi %"class.std::__1::__tree_node.153"* [ %148, %146 ], [ %132, %128 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %135, i64 0, i32 1
  %137 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %136, align 8
  %138 = icmp ugt %"class.sh::TVariable"* %137, %6
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = bitcast %"class.std::__1::__tree_node.153"* %135 to %"class.std::__1::__tree_node.153"**
  br label %146

141:                                              ; preds = %134
  %142 = icmp ult %"class.sh::TVariable"* %137, %6
  br i1 %142, label %143, label %162

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %135, i64 0, i32 0, i32 1
  %145 = bitcast %"class.std::__1::__tree_node_base"** %144 to %"class.std::__1::__tree_node.153"**
  br label %146

146:                                              ; preds = %143, %139
  %147 = phi %"class.std::__1::__tree_node.153"** [ %140, %139 ], [ %145, %143 ]
  %148 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node.153"* %148, null
  br i1 %149, label %150, label %134

150:                                              ; preds = %146, %128
  %151 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %129, i64 1
  %152 = icmp eq %"class.std::__1::set"* %151, %126
  br i1 %152, label %153, label %128

153:                                              ; preds = %150, %122
  %154 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %155 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %154, align 8
  %156 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0, i32 1
  %157 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #10
  %158 = extractvalue { i8*, i64 } %157, 0
  %159 = icmp eq i8* %158, null
  %160 = select i1 %159, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %158
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %155, %"struct.sh::TSourceLoc"* dereferenceable(16) %156, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.3, i64 0, i64 0), i8* %160) #10
  %161 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 9
  store i8 1, i8* %161, align 8
  br label %162

162:                                              ; preds = %141, %97, %27, %15, %68, %106, %119, %153, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_111ValidateAST18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1, i64 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 0, %"class.sh::TIntermNode"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %2, i64 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermIfElse", %"class.sh::TIntermIfElse"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermSwitch", %"class.sh::TIntermSwitch"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermCase", %"class.sh::TIntermCase"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_111ValidateAST22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %1, i64 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 0, %"class.sh::TIntermNode"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermFunctionDefinition", %"class.sh::TIntermFunctionDefinition"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST5scopeENS_5VisitE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1)
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq i32 %1, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %135

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.sh::TIntermFunctionDefinition", %"class.sh::TIntermFunctionDefinition"* %2, i64 0, i32 1
  %12 = load %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermFunctionPrototype"** %11, align 8
  %13 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %12, i64 0, i32 1
  %14 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %13, align 8
  %15 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %14, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %135, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %14, i64 0, i32 3
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 1
  br label %22

22:                                               ; preds = %132, %18
  %23 = phi i64 [ 0, %18 ], [ %133, %132 ]
  %24 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %19, align 8
  %25 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %24, i64 %23
  %26 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %25, align 8
  %27 = ptrtoint %"class.sh::TVariable"* %26 to i64
  %28 = load %"class.std::__1::set"*, %"class.std::__1::set"** %20, align 8
  %29 = load %"class.std::__1::set"*, %"class.std::__1::set"** %21, align 8
  %30 = icmp eq %"class.std::__1::set"* %28, %29
  br i1 %30, label %66, label %31

31:                                               ; preds = %22, %53
  %32 = phi %"class.std::__1::set"* [ %54, %53 ], [ %28, %22 ]
  %33 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node.153"**
  %35 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node.153"* %35, null
  br i1 %36, label %53, label %37

37:                                               ; preds = %31, %49
  %38 = phi %"class.std::__1::__tree_node.153"* [ %51, %49 ], [ %35, %31 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %38, i64 0, i32 1
  %40 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %39, align 8
  %41 = icmp ugt %"class.sh::TVariable"* %40, %26
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::__tree_node.153"* %38 to %"class.std::__1::__tree_node.153"**
  br label %49

44:                                               ; preds = %37
  %45 = icmp ult %"class.sh::TVariable"* %40, %26
  br i1 %45, label %46, label %56

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %38, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node.153"**
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi %"class.std::__1::__tree_node.153"** [ %43, %42 ], [ %48, %46 ]
  %51 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node.153"* %51, null
  br i1 %52, label %53, label %37

53:                                               ; preds = %49, %31
  %54 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %32, i64 1
  %55 = icmp eq %"class.std::__1::set"* %54, %29
  br i1 %55, label %66, label %31

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %58 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TIntermFunctionDefinition", %"class.sh::TIntermFunctionDefinition"* %2, i64 0, i32 0, i32 1
  %60 = bitcast %"class.sh::TVariable"* %26 to %"class.sh::TSymbol"*
  %61 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %60) #10
  %62 = extractvalue { i8*, i64 } %61, 0
  %63 = icmp eq i8* %62, null
  %64 = select i1 %63, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %62
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %58, %"struct.sh::TSourceLoc"* dereferenceable(16) %59, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.8, i64 0, i64 0), i8* %64) #10
  %65 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 9
  store i8 1, i8* %65, align 8
  br label %135

66:                                               ; preds = %53, %22
  %67 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 -1
  %68 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 -1, i32 0, i32 1, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node.153"**
  %70 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node.153"* %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %96, %72
  %75 = phi %"class.std::__1::__tree_node.153"* [ %99, %96 ], [ %70, %72 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %98, %96 ], [ %73, %72 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %75, i64 0, i32 1
  %78 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %77, align 8
  %79 = icmp ult %"class.sh::TVariable"* %26, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %75, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %96

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %75, i64 0, i32 0, i32 0
  br label %102

86:                                               ; preds = %74
  %87 = icmp ult %"class.sh::TVariable"* %78, %26
  br i1 %87, label %88, label %94

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %75, i64 0, i32 0, i32 1
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %75, i64 0, i32 0, i32 0
  br label %102

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %75, i64 0, i32 0, i32 0
  br label %102

96:                                               ; preds = %88, %80
  %97 = phi %"class.std::__1::__tree_node_base"* [ %82, %80 ], [ %90, %88 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %81, %80 ], [ %89, %88 ]
  %99 = bitcast %"class.std::__1::__tree_node_base"* %97 to %"class.std::__1::__tree_node.153"*
  br label %74

100:                                              ; preds = %66
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  br label %102

102:                                              ; preds = %100, %94, %92, %84
  %103 = phi %"class.std::__1::__tree_end_node"* [ %68, %100 ], [ %85, %84 ], [ %93, %92 ], [ %95, %94 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %101, %100 ], [ %81, %84 ], [ %89, %92 ], [ %76, %94 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to %"class.std::__1::__tree_node.153"**
  %106 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node.153"* %106, null
  br i1 %107, label %108, label %132

108:                                              ; preds = %102
  %109 = tail call i8* @_Znwm(i64 40) #11, !noalias !6
  %110 = getelementptr inbounds i8, i8* %109, i64 32
  %111 = bitcast i8* %110 to i64*
  store i64 %27, i64* %111, align 8, !noalias !6
  %112 = bitcast i8* %109 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %103, %"class.std::__1::__tree_end_node"** %114, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"** %104 to i8**
  store i8* %109, i8** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %67, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %108
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::set"* %67 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  br label %125

125:                                              ; preds = %121, %108
  %126 = phi %"class.std::__1::__tree_node_base"* [ %112, %108 ], [ %124, %121 ]
  %127 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %126) #10
  %129 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 -1, i32 0, i32 2, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  br label %132

132:                                              ; preds = %102, %125
  %133 = add nuw i64 %23, 1
  %134 = icmp eq i64 %133, %16
  br i1 %134, label %135, label %22

135:                                              ; preds = %132, %10, %56, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 3
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.sh::TIntermAggregate"* %2 to i64 (%"class.sh::TIntermNode"*)***
  %12 = load i64 (%"class.sh::TIntermNode"*)**, i64 (%"class.sh::TIntermNode"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %12, i64 24
  %14 = load i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %13, align 8
  %15 = tail call i64 %14(%"class.sh::TIntermNode"* %4) #10
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)***
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 10
  br label %22

22:                                               ; preds = %31, %17
  %23 = phi i64 [ 0, %17 ], [ %32, %31 ]
  %24 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)**, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*** %18, align 8
  %25 = getelementptr inbounds %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %24, i64 25
  %26 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %25, align 8
  %27 = tail call %"class.sh::TIntermNode"* %26(%"class.sh::TIntermNode"* %4, i64 %23) #10
  %28 = icmp eq %"class.sh::TIntermNode"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)) #10
  store i8 1, i8* %21, align 1
  br label %31

31:                                               ; preds = %29, %22
  %32 = add nuw i64 %23, 1
  %33 = icmp eq i64 %32, %15
  br i1 %33, label %34, label %22

34:                                               ; preds = %31, %3, %6, %10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST5scopeENS_5VisitE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1)
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 3
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.sh::TIntermBlock"* %2 to i64 (%"class.sh::TIntermNode"*)***
  %12 = load i64 (%"class.sh::TIntermNode"*)**, i64 (%"class.sh::TIntermNode"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %12, i64 24
  %14 = load i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %13, align 8
  %15 = tail call i64 %14(%"class.sh::TIntermNode"* %4) #10
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.sh::TIntermBlock"* %2 to %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)***
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %2, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 10
  br label %22

22:                                               ; preds = %31, %17
  %23 = phi i64 [ 0, %17 ], [ %32, %31 ]
  %24 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)**, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*** %18, align 8
  %25 = getelementptr inbounds %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %24, i64 25
  %26 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %25, align 8
  %27 = tail call %"class.sh::TIntermNode"* %26(%"class.sh::TIntermNode"* %4, i64 %23) #10
  %28 = icmp eq %"class.sh::TIntermNode"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)) #10
  store i8 1, i8* %21, align 1
  br label %31

31:                                               ; preds = %29, %22
  %32 = add nuw i64 %23, 1
  %33 = icmp eq i64 %32, %15
  br i1 %33, label %34, label %22

34:                                               ; preds = %31, %3, %6, %10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermGlobalQualifierDeclaration", %"class.sh::TIntermGlobalQualifierDeclaration"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.191", align 8
  %5 = alloca %"class.std::__1::tuple.144", align 1
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %7)
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 3
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %37, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.sh::TIntermDeclaration"* %2 to i64 (%"class.sh::TIntermNode"*)***
  %15 = load i64 (%"class.sh::TIntermNode"*)**, i64 (%"class.sh::TIntermNode"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %15, i64 24
  %17 = load i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %16, align 8
  %18 = tail call i64 %17(%"class.sh::TIntermNode"* %7) #10
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)***
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %2, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 10
  br label %25

25:                                               ; preds = %34, %20
  %26 = phi i64 [ 0, %20 ], [ %35, %34 ]
  %27 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)**, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*** %21, align 8
  %28 = getelementptr inbounds %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %27, i64 25
  %29 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %28, align 8
  %30 = tail call %"class.sh::TIntermNode"* %29(%"class.sh::TIntermNode"* %7, i64 %26) #10
  %31 = icmp eq %"class.sh::TIntermNode"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %33, %"struct.sh::TSourceLoc"* dereferenceable(16) %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)) #10
  store i8 1, i8* %24, align 1
  br label %34

34:                                               ; preds = %32, %25
  %35 = add nuw i64 %26, 1
  %36 = icmp eq i64 %35, %18
  br i1 %36, label %37, label %25

37:                                               ; preds = %34, %3, %9, %13
  %38 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)***
  %39 = load %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)** %39, i64 27
  %41 = load %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)** %40, align 8
  %42 = tail call %"class.sh::TVector"* %41(%"class.sh::TIntermDeclaration"* %2) #10
  %43 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 9
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %42, i64 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.sh::TIntermNode"*** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.sh::TVector"* %42 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  %54 = icmp ugt i64 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 14
  store i8 1, i8* %56, align 1
  br label %57

57:                                               ; preds = %37, %55, %46
  br i1 %8, label %58, label %515

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %42, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %59, align 8
  %61 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %42, i64 0, i32 0, i32 0, i32 1
  %62 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %61, align 8
  %63 = icmp eq %"class.sh::TIntermNode"** %60, %62
  br i1 %63, label %515, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 7
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 0
  %69 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 1
  %70 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8
  %71 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_node.152"**
  %73 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::set.107", %"class.std::__1::set.107"* %70, i64 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::set.107"* %70 to i64*
  %77 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %78 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %2, i64 0, i32 0, i32 1
  %79 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  %80 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  %81 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  %82 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12, i32 0, i32 1
  %83 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 13
  %85 = bitcast %"class.std::__1::tuple.191"* %4 to i8*
  %86 = getelementptr inbounds %"class.std::__1::tuple.191", %"class.std::__1::tuple.191"* %4, i64 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::tuple.144", %"class.std::__1::tuple.144"* %5, i64 0, i32 0
  %88 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12
  %89 = bitcast %"class.std::__1::map.119"** %82 to i64*
  %90 = bitcast %"class.std::__1::vector.117"* %88 to i64*
  %91 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %88, i64 0, i32 0, i32 0
  br label %92

92:                                               ; preds = %64, %511
  %93 = phi i8 [ %66, %64 ], [ %512, %511 ]
  %94 = phi %"class.sh::TIntermNode"** [ %60, %64 ], [ %513, %511 ]
  %95 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %94, align 8
  %96 = bitcast %"class.sh::TIntermNode"* %95 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %97 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %96, align 8
  %98 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %97, i64 19
  %99 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %98, align 8
  %100 = call %"class.sh::TIntermSymbol"* %99(%"class.sh::TIntermNode"* %95) #10
  %101 = icmp eq %"class.sh::TIntermSymbol"* %100, null
  br i1 %101, label %102, label %116

102:                                              ; preds = %92
  %103 = bitcast %"class.sh::TIntermNode"* %95 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %104 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %104, i64 13
  %106 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %105, align 8
  %107 = call %"class.sh::TIntermBinary"* %106(%"class.sh::TIntermNode"* %95) #10
  %108 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %107, i64 0, i32 2
  %109 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %108, align 8
  %110 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %109, i64 0, i32 0
  %111 = bitcast %"class.sh::TIntermTyped"* %109 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %112 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %112, i64 19
  %114 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %113, align 8
  %115 = call %"class.sh::TIntermSymbol"* %114(%"class.sh::TIntermNode"* %110) #10
  br label %116

116:                                              ; preds = %102, %92
  %117 = phi %"class.sh::TIntermSymbol"* [ %115, %102 ], [ %100, %92 ]
  %118 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %117, i64 0, i32 1
  %119 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %118, align 8
  %120 = ptrtoint %"class.sh::TVariable"* %119 to i64
  %121 = load i8, i8* %67, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %284, label %123

123:                                              ; preds = %116
  %124 = load %"class.std::__1::set"*, %"class.std::__1::set"** %68, align 8
  %125 = load %"class.std::__1::set"*, %"class.std::__1::set"** %69, align 8
  %126 = icmp eq %"class.std::__1::set"* %124, %125
  br i1 %126, label %152, label %127

127:                                              ; preds = %123, %149
  %128 = phi %"class.std::__1::set"* [ %150, %149 ], [ %124, %123 ]
  %129 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %128, i64 0, i32 0, i32 1, i32 0, i32 0
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_node.153"**
  %131 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node.153"* %131, null
  br i1 %132, label %149, label %133

133:                                              ; preds = %127, %145
  %134 = phi %"class.std::__1::__tree_node.153"* [ %147, %145 ], [ %131, %127 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %134, i64 0, i32 1
  %136 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %135, align 8
  %137 = icmp ugt %"class.sh::TVariable"* %136, %119
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = bitcast %"class.std::__1::__tree_node.153"* %134 to %"class.std::__1::__tree_node.153"**
  br label %145

140:                                              ; preds = %133
  %141 = icmp ult %"class.sh::TVariable"* %136, %119
  br i1 %141, label %142, label %503

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %134, i64 0, i32 0, i32 1
  %144 = bitcast %"class.std::__1::__tree_node_base"** %143 to %"class.std::__1::__tree_node.153"**
  br label %145

145:                                              ; preds = %142, %138
  %146 = phi %"class.std::__1::__tree_node.153"** [ %139, %138 ], [ %144, %142 ]
  %147 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node.153"* %147, null
  br i1 %148, label %149, label %133

149:                                              ; preds = %145, %127
  %150 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %128, i64 1
  %151 = icmp eq %"class.std::__1::set"* %150, %125
  br i1 %151, label %152, label %127

152:                                              ; preds = %149, %123
  %153 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %125, i64 -1
  %154 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %125, i64 -1, i32 0, i32 1, i32 0, i32 0
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to %"class.std::__1::__tree_node.153"**
  %156 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node.153"* %156, null
  br i1 %157, label %186, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %125, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %160

160:                                              ; preds = %182, %158
  %161 = phi %"class.std::__1::__tree_node.153"* [ %185, %182 ], [ %156, %158 ]
  %162 = phi %"class.std::__1::__tree_node_base"** [ %184, %182 ], [ %159, %158 ]
  %163 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %161, i64 0, i32 1
  %164 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %163, align 8
  %165 = icmp ult %"class.sh::TVariable"* %119, %164
  br i1 %165, label %166, label %172

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %161, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, null
  br i1 %169, label %170, label %182

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %161, i64 0, i32 0, i32 0
  br label %188

172:                                              ; preds = %160
  %173 = icmp ult %"class.sh::TVariable"* %164, %119
  br i1 %173, label %174, label %180

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %161, i64 0, i32 0, i32 1
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %182

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %161, i64 0, i32 0, i32 0
  br label %188

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %161, i64 0, i32 0, i32 0
  br label %188

182:                                              ; preds = %174, %166
  %183 = phi %"class.std::__1::__tree_node_base"* [ %168, %166 ], [ %176, %174 ]
  %184 = phi %"class.std::__1::__tree_node_base"** [ %167, %166 ], [ %175, %174 ]
  %185 = bitcast %"class.std::__1::__tree_node_base"* %183 to %"class.std::__1::__tree_node.153"*
  br label %160

186:                                              ; preds = %152
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %154, i64 0, i32 0
  br label %188

188:                                              ; preds = %186, %180, %178, %170
  %189 = phi %"class.std::__1::__tree_end_node"* [ %154, %186 ], [ %171, %170 ], [ %179, %178 ], [ %181, %180 ]
  %190 = phi %"class.std::__1::__tree_node_base"** [ %187, %186 ], [ %167, %170 ], [ %175, %178 ], [ %162, %180 ]
  %191 = bitcast %"class.std::__1::__tree_node_base"** %190 to %"class.std::__1::__tree_node.153"**
  %192 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node.153"* %192, null
  br i1 %193, label %194, label %218

194:                                              ; preds = %188
  %195 = call i8* @_Znwm(i64 40) #11, !noalias !9
  %196 = getelementptr inbounds i8, i8* %195, i64 32
  %197 = bitcast i8* %196 to i64*
  store i64 %120, i64* %197, align 8, !noalias !9
  %198 = bitcast i8* %195 to %"class.std::__1::__tree_node_base"*
  %199 = getelementptr inbounds i8, i8* %195, i64 16
  %200 = bitcast i8* %199 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %189, %"class.std::__1::__tree_end_node"** %200, align 8
  %201 = bitcast %"class.std::__1::__tree_node_base"** %190 to i8**
  store i8* %195, i8** %201, align 8
  %202 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %153, i64 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 0, i32 0
  %205 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node_base"* %205, null
  br i1 %206, label %211, label %207

207:                                              ; preds = %194
  %208 = ptrtoint %"class.std::__1::__tree_node_base"* %205 to i64
  %209 = bitcast %"class.std::__1::set"* %153 to i64*
  store i64 %208, i64* %209, align 8
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  br label %211

211:                                              ; preds = %207, %194
  %212 = phi %"class.std::__1::__tree_node_base"* [ %198, %194 ], [ %210, %207 ]
  %213 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %125, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %214, %"class.std::__1::__tree_node_base"* %212) #10
  %215 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %125, i64 -1, i32 0, i32 2, i32 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 1
  store i64 %217, i64* %215, align 8
  br label %218

218:                                              ; preds = %188, %211
  %219 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %119, i64 0, i32 1
  %220 = load %"class.sh::TType"*, %"class.sh::TType"** %219, align 8
  %221 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %220, i64 0, i32 12
  %222 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %221, align 8
  %223 = ptrtoint %"class.sh::TInterfaceBlock"* %222 to i64
  %224 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %119, i64 0, i32 0, i32 2
  %225 = load i8, i8* %224, align 4
  %226 = icmp eq i8 %225, 3
  %227 = icmp ne %"class.sh::TInterfaceBlock"* %222, null
  %228 = and i1 %227, %226
  br i1 %228, label %229, label %284

229:                                              ; preds = %218
  %230 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %72, align 8
  %231 = icmp eq %"class.std::__1::__tree_node.152"* %230, null
  br i1 %231, label %258, label %232

232:                                              ; preds = %229, %254
  %233 = phi %"class.std::__1::__tree_node.152"* [ %257, %254 ], [ %230, %229 ]
  %234 = phi %"class.std::__1::__tree_node_base"** [ %256, %254 ], [ %73, %229 ]
  %235 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %233, i64 0, i32 1
  %236 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %235, align 8
  %237 = icmp ult %"class.sh::TInterfaceBlock"* %222, %236
  br i1 %237, label %238, label %244

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %233, i64 0, i32 0, i32 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, null
  br i1 %241, label %242, label %254

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %233, i64 0, i32 0, i32 0
  br label %258

244:                                              ; preds = %232
  %245 = icmp ult %"class.sh::TInterfaceBlock"* %236, %222
  br i1 %245, label %246, label %252

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %233, i64 0, i32 0, i32 1
  %248 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %247, align 8
  %249 = icmp eq %"class.std::__1::__tree_node_base"* %248, null
  br i1 %249, label %250, label %254

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %233, i64 0, i32 0, i32 0
  br label %258

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %233, i64 0, i32 0, i32 0
  br label %258

254:                                              ; preds = %246, %238
  %255 = phi %"class.std::__1::__tree_node_base"* [ %240, %238 ], [ %248, %246 ]
  %256 = phi %"class.std::__1::__tree_node_base"** [ %239, %238 ], [ %247, %246 ]
  %257 = bitcast %"class.std::__1::__tree_node_base"* %255 to %"class.std::__1::__tree_node.152"*
  br label %232

258:                                              ; preds = %229, %252, %250, %242
  %259 = phi %"class.std::__1::__tree_end_node"* [ %243, %242 ], [ %251, %250 ], [ %253, %252 ], [ %71, %229 ]
  %260 = phi %"class.std::__1::__tree_node_base"** [ %239, %242 ], [ %247, %250 ], [ %234, %252 ], [ %74, %229 ]
  %261 = bitcast %"class.std::__1::__tree_node_base"** %260 to %"class.std::__1::__tree_node.152"**
  %262 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %261, align 8
  %263 = icmp eq %"class.std::__1::__tree_node.152"* %262, null
  br i1 %263, label %264, label %284

264:                                              ; preds = %258
  %265 = call i8* @_Znwm(i64 40) #11, !noalias !12
  %266 = getelementptr inbounds i8, i8* %265, i64 32
  %267 = bitcast i8* %266 to i64*
  store i64 %223, i64* %267, align 8, !noalias !12
  %268 = bitcast i8* %265 to %"class.std::__1::__tree_node_base"*
  %269 = getelementptr inbounds i8, i8* %265, i64 16
  %270 = bitcast i8* %269 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %259, %"class.std::__1::__tree_end_node"** %270, align 8
  %271 = bitcast %"class.std::__1::__tree_node_base"** %260 to i8**
  store i8* %265, i8** %271, align 8
  %272 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, null
  br i1 %275, label %279, label %276

276:                                              ; preds = %264
  %277 = ptrtoint %"class.std::__1::__tree_node_base"* %274 to i64
  store i64 %277, i64* %76, align 8
  %278 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %260, align 8
  br label %279

279:                                              ; preds = %276, %264
  %280 = phi %"class.std::__1::__tree_node_base"* [ %268, %264 ], [ %278, %276 ]
  %281 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %281, %"class.std::__1::__tree_node_base"* %280) #10
  %282 = load i64, i64* %77, align 8
  %283 = add i64 %282, 1
  store i64 %283, i64* %77, align 8
  br label %284

284:                                              ; preds = %279, %258, %218, %116
  %285 = and i8 %93, 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %511, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %119, i64 0, i32 1
  %289 = load %"class.sh::TType"*, %"class.sh::TType"** %288, align 8
  %290 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %289, i64 0, i32 14
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %289, i64 0, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = icmp eq i32 %295, 91
  br i1 %296, label %297, label %511

297:                                              ; preds = %287, %293
  %298 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %289, i64 0, i32 13
  %299 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %298, align 8
  %300 = icmp eq %"class.sh::TStructure"* %299, null
  %301 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %289, i64 0, i32 12
  %302 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %301, align 8
  %303 = icmp eq %"class.sh::TInterfaceBlock"* %302, null
  %304 = and i1 %300, %303
  br i1 %304, label %511, label %305

305:                                              ; preds = %297
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #10
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %80, align 8
  store i64 0, i64* %81, align 8
  br i1 %300, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %299, i64 0, i32 0, i32 2
  %308 = load i8, i8* %307, align 4
  %309 = icmp eq i8 %308, 3
  br i1 %309, label %313, label %310

310:                                              ; preds = %306
  %311 = bitcast %"class.sh::TStructure"* %299 to %"class.sh::TSymbol"*
  %312 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %299, i64 0, i32 2
  br label %317

313:                                              ; preds = %306, %305
  br i1 %303, label %388, label %314

314:                                              ; preds = %313
  %315 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %302, i64 0, i32 1
  %316 = bitcast %"class.sh::TInterfaceBlock"* %302 to %"class.sh::TSymbol"*
  br label %317

317:                                              ; preds = %314, %310
  %318 = phi %"class.sh::TSymbol"* [ %316, %314 ], [ %311, %310 ]
  %319 = phi %"class.sh::TFieldListCollection"* [ %315, %314 ], [ %312, %310 ]
  %320 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* nonnull %318) #10
  %321 = extractvalue { i8*, i64 } %320, 0
  %322 = extractvalue { i8*, i64 } %320, 1
  store i8* %321, i8** %80, align 8
  store i64 %322, i64* %81, align 8
  %323 = icmp eq %"class.sh::TFieldListCollection"* %319, null
  br i1 %323, label %324, label %326

324:                                              ; preds = %317
  %325 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %298, align 8
  br label %388

326:                                              ; preds = %317
  %327 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %82, align 8
  %328 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %327, i64 -1, i32 0, i32 1, i32 0, i32 0
  %329 = bitcast %"class.std::__1::__tree_end_node"* %328 to %"class.std::__1::__tree_node.161"**
  %330 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %329, align 8
  %331 = icmp eq %"class.std::__1::__tree_node.161"* %330, null
  br i1 %331, label %382, label %332

332:                                              ; preds = %326
  %333 = icmp eq i8* %321, null
  %334 = select i1 %333, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %321
  br label %335

335:                                              ; preds = %358, %332
  %336 = phi %"class.std::__1::__tree_end_node"* [ %328, %332 ], [ %360, %358 ]
  %337 = phi %"class.std::__1::__tree_node.161"* [ %330, %332 ], [ %361, %358 ]
  %338 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %337, i64 0, i32 1, i32 0, i32 0, i32 1
  %339 = load i64, i64* %338, align 8
  %340 = icmp ult i64 %339, %322
  br i1 %340, label %341, label %344

341:                                              ; preds = %335
  %342 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %337, i64 0, i32 0, i32 1
  %343 = bitcast %"class.std::__1::__tree_node_base"** %342 to %"class.std::__1::__tree_node.161"**
  br label %358

344:                                              ; preds = %335
  %345 = icmp ugt i64 %339, %322
  br i1 %345, label %355, label %346

346:                                              ; preds = %344
  %347 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %337, i64 0, i32 1, i32 0, i32 0, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  %350 = select i1 %349, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %348
  %351 = call i32 @memcmp(i8* %350, i8* %334, i64 %339) #12
  %352 = icmp slt i32 %351, 0
  %353 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %337, i64 0, i32 0, i32 1
  %354 = bitcast %"class.std::__1::__tree_node_base"** %353 to %"class.std::__1::__tree_node.161"**
  br i1 %352, label %358, label %355

355:                                              ; preds = %346, %344
  %356 = bitcast %"class.std::__1::__tree_node.161"* %337 to %"class.std::__1::__tree_node.161"**
  %357 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %337, i64 0, i32 0, i32 0
  br label %358

358:                                              ; preds = %355, %346, %341
  %359 = phi %"class.std::__1::__tree_node.161"** [ %356, %355 ], [ %343, %341 ], [ %354, %346 ]
  %360 = phi %"class.std::__1::__tree_end_node"* [ %357, %355 ], [ %336, %341 ], [ %336, %346 ]
  %361 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %359, align 8
  %362 = icmp eq %"class.std::__1::__tree_node.161"* %361, null
  br i1 %362, label %363, label %335

363:                                              ; preds = %358
  %364 = icmp eq %"class.std::__1::__tree_end_node"* %360, %328
  br i1 %364, label %382, label %365

365:                                              ; preds = %363
  %366 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %360, i64 4
  %367 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %360, i64 5
  %368 = bitcast %"class.std::__1::__tree_end_node"* %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = icmp ult i64 %322, %369
  br i1 %370, label %382, label %371

371:                                              ; preds = %365
  %372 = icmp ugt i64 %322, %369
  br i1 %372, label %380, label %373

373:                                              ; preds = %371
  %374 = bitcast %"class.std::__1::__tree_end_node"* %366 to i8**
  %375 = load i8*, i8** %374, align 8
  %376 = icmp eq i8* %375, null
  %377 = select i1 %376, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %375
  %378 = call i32 @memcmp(i8* %334, i8* %377, i64 %322) #12
  %379 = icmp sgt i32 %378, -1
  br i1 %379, label %380, label %382

380:                                              ; preds = %373, %371
  %381 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %83, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %381, %"struct.sh::TSourceLoc"* dereferenceable(16) %78, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.13, i64 0, i64 0), i8* %334) #10
  store i8 1, i8* %84, align 8
  br label %393

382:                                              ; preds = %373, %365, %363, %326
  %383 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %327, i64 -1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #10
  store %"class.sh::ImmutableString"* %6, %"class.sh::ImmutableString"** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #10
  %384 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.120"* %383, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.191"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.144"* nonnull dereferenceable(1) %5) #10
  %385 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %384, 0
  %386 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %385, i64 6
  %387 = bitcast %"class.std::__1::__tree_end_node"* %386 to %"class.sh::TFieldListCollection"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #10
  store %"class.sh::TFieldListCollection"* %319, %"class.sh::TFieldListCollection"** %387, align 8
  br label %393

388:                                              ; preds = %324, %313
  %389 = phi %"class.sh::TStructure"* [ %325, %324 ], [ %299, %313 ]
  %390 = icmp eq %"class.sh::TStructure"* %389, null
  %391 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %389, i64 0, i32 2
  %392 = select i1 %390, %"class.sh::TFieldListCollection"* null, %"class.sh::TFieldListCollection"* %391
  br label %393

393:                                              ; preds = %388, %382, %380
  %394 = phi %"class.sh::TFieldListCollection"* [ %392, %388 ], [ %319, %380 ], [ %319, %382 ]
  %395 = getelementptr inbounds %"class.sh::TFieldListCollection", %"class.sh::TFieldListCollection"* %394, i64 0, i32 0
  %396 = load %"class.sh::TVector.42"*, %"class.sh::TVector.42"** %395, align 8
  %397 = getelementptr inbounds %"class.sh::TVector.42", %"class.sh::TVector.42"* %396, i64 0, i32 0, i32 0, i32 0
  %398 = load %"class.sh::TField"**, %"class.sh::TField"*** %397, align 8
  %399 = getelementptr inbounds %"class.sh::TVector.42", %"class.sh::TVector.42"* %396, i64 0, i32 0, i32 0, i32 1
  %400 = load %"class.sh::TField"**, %"class.sh::TField"*** %399, align 8
  %401 = icmp eq %"class.sh::TField"** %398, %400
  br i1 %401, label %402, label %403

402:                                              ; preds = %500, %393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #10
  br label %511

403:                                              ; preds = %393, %500
  %404 = phi %"class.sh::TField"** [ %501, %500 ], [ %398, %393 ]
  %405 = load %"class.sh::TField"*, %"class.sh::TField"** %404, align 8
  %406 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %405, i64 0, i32 0
  %407 = load %"class.sh::TType"*, %"class.sh::TType"** %406, align 8
  %408 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %405, i64 0, i32 2
  %409 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %407, i64 0, i32 13
  %410 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %409, align 8
  %411 = icmp eq %"class.sh::TStructure"* %410, null
  br i1 %411, label %500, label %412

412:                                              ; preds = %403
  %413 = bitcast %"class.sh::TStructure"* %410 to %"class.sh::TSymbol"*
  %414 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* nonnull %413) #10
  %415 = extractvalue { i8*, i64 } %414, 0
  %416 = extractvalue { i8*, i64 } %414, 1
  %417 = load i64, i64* %89, align 8
  %418 = load i64, i64* %90, align 8
  %419 = sub i64 %417, %418
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %496, label %421

421:                                              ; preds = %412
  %422 = inttoptr i64 %418 to %"class.std::__1::map.119"*
  %423 = sdiv exact i64 %419, 24
  %424 = icmp eq i8* %415, null
  %425 = select i1 %424, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %415
  %426 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %410, i64 0, i32 2
  br label %430

427:                                              ; preds = %491
  %428 = and i8 %492, 1
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %496, label %500

430:                                              ; preds = %494, %421
  %431 = phi %"class.std::__1::map.119"* [ %422, %421 ], [ %495, %494 ]
  %432 = phi i64 [ %423, %421 ], [ %434, %494 ]
  %433 = phi i8 [ 0, %421 ], [ %492, %494 ]
  %434 = add i64 %432, -1
  %435 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %431, i64 %434, i32 0, i32 1, i32 0, i32 0
  %436 = bitcast %"class.std::__1::__tree_end_node"* %435 to %"class.std::__1::__tree_node.161"**
  %437 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %436, align 8
  %438 = icmp eq %"class.std::__1::__tree_node.161"* %437, null
  br i1 %438, label %491, label %439

439:                                              ; preds = %430, %462
  %440 = phi %"class.std::__1::__tree_end_node"* [ %464, %462 ], [ %435, %430 ]
  %441 = phi %"class.std::__1::__tree_node.161"* [ %465, %462 ], [ %437, %430 ]
  %442 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %441, i64 0, i32 1, i32 0, i32 0, i32 1
  %443 = load i64, i64* %442, align 8
  %444 = icmp ult i64 %443, %416
  br i1 %444, label %445, label %448

445:                                              ; preds = %439
  %446 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %441, i64 0, i32 0, i32 1
  %447 = bitcast %"class.std::__1::__tree_node_base"** %446 to %"class.std::__1::__tree_node.161"**
  br label %462

448:                                              ; preds = %439
  %449 = icmp ugt i64 %443, %416
  br i1 %449, label %459, label %450

450:                                              ; preds = %448
  %451 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %441, i64 0, i32 1, i32 0, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  %453 = icmp eq i8* %452, null
  %454 = select i1 %453, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %452
  %455 = call i32 @memcmp(i8* %454, i8* %425, i64 %443) #12
  %456 = icmp slt i32 %455, 0
  %457 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %441, i64 0, i32 0, i32 1
  %458 = bitcast %"class.std::__1::__tree_node_base"** %457 to %"class.std::__1::__tree_node.161"**
  br i1 %456, label %462, label %459

459:                                              ; preds = %450, %448
  %460 = bitcast %"class.std::__1::__tree_node.161"* %441 to %"class.std::__1::__tree_node.161"**
  %461 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %441, i64 0, i32 0, i32 0
  br label %462

462:                                              ; preds = %459, %450, %445
  %463 = phi %"class.std::__1::__tree_node.161"** [ %460, %459 ], [ %447, %445 ], [ %458, %450 ]
  %464 = phi %"class.std::__1::__tree_end_node"* [ %461, %459 ], [ %440, %445 ], [ %440, %450 ]
  %465 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %463, align 8
  %466 = icmp eq %"class.std::__1::__tree_node.161"* %465, null
  br i1 %466, label %467, label %439

467:                                              ; preds = %462
  %468 = icmp eq %"class.std::__1::__tree_end_node"* %464, %435
  br i1 %468, label %491, label %469

469:                                              ; preds = %467
  %470 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %464, i64 4
  %471 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %464, i64 5
  %472 = bitcast %"class.std::__1::__tree_end_node"* %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = icmp ult i64 %416, %473
  br i1 %474, label %491, label %475

475:                                              ; preds = %469
  %476 = icmp ugt i64 %416, %473
  br i1 %476, label %484, label %477

477:                                              ; preds = %475
  %478 = bitcast %"class.std::__1::__tree_end_node"* %470 to i8**
  %479 = load i8*, i8** %478, align 8
  %480 = icmp eq i8* %479, null
  %481 = select i1 %480, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %479
  %482 = call i32 @memcmp(i8* %425, i8* %481, i64 %416) #12
  %483 = icmp sgt i32 %482, -1
  br i1 %483, label %484, label %491

484:                                              ; preds = %477, %475
  %485 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %464, i64 6
  %486 = bitcast %"class.std::__1::__tree_end_node"* %485 to %"class.sh::TFieldListCollection"**
  %487 = load %"class.sh::TFieldListCollection"*, %"class.sh::TFieldListCollection"** %486, align 8
  %488 = icmp eq %"class.sh::TFieldListCollection"* %487, %426
  br i1 %488, label %491, label %489

489:                                              ; preds = %484
  %490 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %83, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %490, %"struct.sh::TSourceLoc"* dereferenceable(16) %408, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.14, i64 0, i64 0), i8* %425) #10
  store i8 1, i8* %84, align 8
  br label %491

491:                                              ; preds = %489, %484, %477, %469, %467, %430
  %492 = phi i8 [ 1, %489 ], [ 1, %484 ], [ %433, %430 ], [ %433, %467 ], [ %433, %469 ], [ %433, %477 ]
  %493 = icmp eq i64 %434, 0
  br i1 %493, label %427, label %494

494:                                              ; preds = %491
  %495 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %91, align 8
  br label %430

496:                                              ; preds = %412, %427
  %497 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %83, align 8
  %498 = icmp eq i8* %415, null
  %499 = select i1 %498, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %415
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %497, %"struct.sh::TSourceLoc"* dereferenceable(16) %408, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.15, i64 0, i64 0), i8* %499) #10
  store i8 1, i8* %84, align 8
  br label %500

500:                                              ; preds = %496, %427, %403
  %501 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %404, i64 1
  %502 = icmp eq %"class.sh::TField"** %501, %400
  br i1 %502, label %402, label %403

503:                                              ; preds = %140
  %504 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %83, align 8
  %505 = bitcast %"class.sh::TVariable"* %119 to %"class.sh::TSymbol"*
  %506 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %505) #10
  %507 = extractvalue { i8*, i64 } %506, 0
  %508 = icmp eq i8* %507, null
  %509 = select i1 %508, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %507
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %504, %"struct.sh::TSourceLoc"* dereferenceable(16) %78, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.12, i64 0, i64 0), i8* %509) #10
  %510 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 9
  store i8 1, i8* %510, align 8
  br label %515

511:                                              ; preds = %293, %284, %297, %402
  %512 = phi i8 [ 0, %402 ], [ 0, %297 ], [ 0, %293 ], [ %93, %284 ]
  %513 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %94, i64 1
  %514 = icmp eq %"class.sh::TIntermNode"** %513, %62
  br i1 %514, label %515, label %92

515:                                              ; preds = %511, %58, %503, %57
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_111ValidateAST11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %2, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 %1, %"class.sh::TIntermNode"* %4)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_111ValidateAST26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::(anonymous namespace)::ValidateAST"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermPreprocessorDirective", %"class.sh::TIntermPreprocessorDirective"* %1, i64 0, i32 0
  tail call fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"* %0, i32 0, %"class.sh::TIntermNode"* %3)
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST9visitNodeENS_5VisitEPNS_11TIntermNodeE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32, %"class.sh::TIntermNode"*) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %178

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %178, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.sh::TIntermNode"* %2 to i64 (%"class.sh::TIntermNode"*)***
  %11 = load i64 (%"class.sh::TIntermNode"*)**, i64 (%"class.sh::TIntermNode"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %11, i64 24
  %13 = load i64 (%"class.sh::TIntermNode"*)*, i64 (%"class.sh::TIntermNode"*)** %12, align 8
  %14 = tail call i64 %13(%"class.sh::TIntermNode"* %2) #10
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %178, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)***
  %18 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::map.80", %"class.std::__1::map.80"* %18, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::map.80"* %18 to i64*
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %2, i64 0, i32 1
  %28 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 5
  br label %29

29:                                               ; preds = %173, %16
  %30 = phi i64 [ 0, %16 ], [ %176, %173 ]
  %31 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)**, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*** %17, align 8
  %32 = getelementptr inbounds %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %31, i64 25
  %33 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %32, align 8
  %34 = tail call %"class.sh::TIntermNode"* %33(%"class.sh::TIntermNode"* %2, i64 %30) #10
  %35 = ptrtoint %"class.sh::TIntermNode"* %34 to i64
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %37 = icmp eq %"class.std::__1::__tree_node"* %36, null
  br i1 %37, label %144, label %38

38:                                               ; preds = %29, %38
  %39 = phi %"class.std::__1::__tree_end_node"* [ %49, %38 ], [ %19, %29 ]
  %40 = phi %"class.std::__1::__tree_node"* [ %50, %38 ], [ %36, %29 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %41, align 8
  %43 = icmp ult %"class.sh::TIntermNode"* %42, %34
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::__tree_node_base"** %44 to %"class.std::__1::__tree_node"**
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_node"* %40 to %"class.std::__1::__tree_node"**
  %48 = select i1 %43, %"class.std::__1::__tree_node"** %45, %"class.std::__1::__tree_node"** %47
  %49 = select i1 %43, %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"* %46
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %52, label %38

52:                                               ; preds = %38
  %53 = icmp eq %"class.std::__1::__tree_end_node"* %49, %19
  br i1 %53, label %115, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 4
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.sh::TIntermNode"**
  %57 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %56, align 8
  %58 = icmp ult %"class.sh::TIntermNode"* %34, %57
  br i1 %58, label %115, label %59

59:                                               ; preds = %54, %75
  %60 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %36, %54 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %21, %54 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %62, align 8
  %64 = icmp ult %"class.sh::TIntermNode"* %34, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %79, label %75

69:                                               ; preds = %59
  %70 = icmp ult %"class.sh::TIntermNode"* %63, %34
  br i1 %70, label %71, label %79

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %71, %65
  %76 = phi %"class.std::__1::__tree_node_base"* [ %67, %65 ], [ %73, %71 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %66, %65 ], [ %72, %71 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %59

79:                                               ; preds = %69, %71, %65
  %80 = phi %"class.std::__1::__tree_node_base"** [ %66, %65 ], [ %72, %71 ], [ %61, %69 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"** %80 to %"class.std::__1::__tree_node"**
  %82 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node"* %82, null
  br i1 %83, label %84, label %108

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0
  %86 = tail call i8* @_Znwm(i64 48) #11, !noalias !15
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast i8* %87 to i64*
  store i64 %35, i64* %88, align 8, !noalias !15
  %89 = getelementptr inbounds i8, i8* %86, i64 40
  %90 = bitcast i8* %89 to %"class.sh::TIntermNode"**
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %90, align 8, !noalias !15
  %91 = bitcast i8* %86 to %"class.std::__1::__tree_node"*
  %92 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds i8, i8* %86, i64 16
  %94 = bitcast i8* %93 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %94, align 8
  %95 = bitcast %"class.std::__1::__tree_node_base"** %80 to i8**
  store i8* %86, i8** %95, align 8
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %84
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  store i64 %101, i64* %24, align 8
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  br label %103

103:                                              ; preds = %100, %84
  %104 = phi %"class.std::__1::__tree_node_base"* [ %92, %84 ], [ %102, %100 ]
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %105, %"class.std::__1::__tree_node_base"* %104) #10
  %106 = load i64, i64* %25, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %25, align 8
  br label %108

108:                                              ; preds = %79, %103
  %109 = phi %"class.std::__1::__tree_node"* [ %91, %103 ], [ %82, %79 ]
  %110 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %109, i64 0, i32 1, i32 0, i32 1
  %111 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %110, align 8
  %112 = icmp eq %"class.sh::TIntermNode"* %111, %2
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %26, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %114, %"struct.sh::TSourceLoc"* dereferenceable(16) %27, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #10
  store i8 1, i8* %28, align 8
  br label %115

115:                                              ; preds = %54, %52, %108, %113
  %116 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %117 = icmp eq %"class.std::__1::__tree_node"* %116, null
  br i1 %117, label %144, label %118

118:                                              ; preds = %115, %140
  %119 = phi %"class.std::__1::__tree_node"* [ %143, %140 ], [ %116, %115 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %142, %140 ], [ %21, %115 ]
  %121 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %119, i64 0, i32 1, i32 0, i32 0
  %122 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %121, align 8
  %123 = icmp ult %"class.sh::TIntermNode"* %34, %122
  br i1 %123, label %124, label %130

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %119, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %140

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %119, i64 0, i32 0, i32 0
  br label %144

130:                                              ; preds = %118
  %131 = icmp ult %"class.sh::TIntermNode"* %122, %34
  br i1 %131, label %132, label %138

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %119, i64 0, i32 0, i32 1
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %119, i64 0, i32 0, i32 0
  br label %144

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %119, i64 0, i32 0, i32 0
  br label %144

140:                                              ; preds = %132, %124
  %141 = phi %"class.std::__1::__tree_node_base"* [ %126, %124 ], [ %134, %132 ]
  %142 = phi %"class.std::__1::__tree_node_base"** [ %125, %124 ], [ %133, %132 ]
  %143 = bitcast %"class.std::__1::__tree_node_base"* %141 to %"class.std::__1::__tree_node"*
  br label %118

144:                                              ; preds = %115, %29, %138, %136, %128
  %145 = phi %"class.std::__1::__tree_end_node"* [ %129, %128 ], [ %137, %136 ], [ %139, %138 ], [ %19, %29 ], [ %19, %115 ]
  %146 = phi %"class.std::__1::__tree_node_base"** [ %125, %128 ], [ %133, %136 ], [ %120, %138 ], [ %22, %29 ], [ %22, %115 ]
  %147 = bitcast %"class.std::__1::__tree_node_base"** %146 to %"class.std::__1::__tree_node"**
  %148 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node"* %148, null
  br i1 %149, label %150, label %173

150:                                              ; preds = %144
  %151 = tail call i8* @_Znwm(i64 48) #11, !noalias !18
  %152 = getelementptr inbounds i8, i8* %151, i64 32
  %153 = bitcast i8* %152 to i64*
  store i64 %35, i64* %153, align 8, !noalias !18
  %154 = getelementptr inbounds i8, i8* %151, i64 40
  %155 = bitcast i8* %154 to %"class.sh::TIntermNode"**
  store %"class.sh::TIntermNode"* null, %"class.sh::TIntermNode"** %155, align 8, !noalias !18
  %156 = bitcast i8* %151 to %"class.std::__1::__tree_node"*
  %157 = bitcast i8* %151 to %"class.std::__1::__tree_node_base"*
  %158 = getelementptr inbounds i8, i8* %151, i64 16
  %159 = bitcast i8* %158 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %145, %"class.std::__1::__tree_end_node"** %159, align 8
  %160 = bitcast %"class.std::__1::__tree_node_base"** %146 to i8**
  store i8* %151, i8** %160, align 8
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %150
  %166 = ptrtoint %"class.std::__1::__tree_node_base"* %163 to i64
  store i64 %166, i64* %24, align 8
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  br label %168

168:                                              ; preds = %165, %150
  %169 = phi %"class.std::__1::__tree_node_base"* [ %157, %150 ], [ %167, %165 ]
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %170, %"class.std::__1::__tree_node_base"* %169) #10
  %171 = load i64, i64* %25, align 8
  %172 = add i64 %171, 1
  store i64 %172, i64* %25, align 8
  br label %173

173:                                              ; preds = %144, %168
  %174 = phi %"class.std::__1::__tree_node"* [ %156, %168 ], [ %148, %144 ]
  %175 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %174, i64 0, i32 1, i32 0, i32 1
  store %"class.sh::TIntermNode"* %2, %"class.sh::TIntermNode"** %175, align 8
  %176 = add nuw i64 %30, 1
  %177 = icmp eq i64 %176, %14
  br i1 %177, label %178, label %29

178:                                              ; preds = %173, %9, %5, %3
  ret void
}

declare void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh9SpecConst15IsSpecConstNameERKNS_15ImmutableStringE(%"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_111ValidateAST5scopeENS_5VisitE(%"class.sh::(anonymous namespace)::ValidateAST"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::set", align 8
  %4 = alloca %"class.std::__1::map.119", align 8
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %57, label %8

8:                                                ; preds = %2
  switch i32 %1, label %57 [
    i32 0, label %9
    i32 2, label %49
  ]

9:                                                ; preds = %8
  %10 = bitcast %"class.std::__1::set"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_node_base"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 1
  %16 = load %"class.std::__1::set"*, %"class.std::__1::set"** %15, align 8
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::set"*, %"class.std::__1::set"** %17, align 8
  %19 = icmp ult %"class.std::__1::set"* %16, %18
  br i1 %19, label %20, label %43

20:                                               ; preds = %9
  %21 = ptrtoint %"class.std::__1::__tree_end_node"* %12 to i64
  %22 = bitcast %"class.std::__1::set"* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %16, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__compressed_pair.94"* %24 to i64*
  %26 = bitcast %"class.std::__1::__compressed_pair.94"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %31, label %33, label %35

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %16, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %34, align 8
  br label %39

35:                                               ; preds = %20
  %36 = inttoptr i64 %27 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %37, align 8
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %13, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #10
  br label %39

39:                                               ; preds = %35, %33
  %40 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %16, i64 1
  %41 = ptrtoint %"class.std::__1::set"* %40 to i64
  %42 = bitcast %"class.std::__1::set"** %15 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %9
  %44 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7
  call void @_ZNSt3__16vectorINS_3setIPKN2sh9TVariableENS_4lessIS5_EENS_9allocatorIS5_EEEENS8_ISA_EEE21__push_back_slow_pathISA_EEvOT_(%"class.std::__1::vector.91"* %44, %"class.std::__1::set"* nonnull dereferenceable(24) %3) #10
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.153"**
  %48 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %47, align 8
  call void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"* nonnull %46, %"class.std::__1::__tree_node.153"* %48) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %57

49:                                               ; preds = %8
  %50 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 7, i32 0, i32 1
  %51 = load %"class.std::__1::set"*, %"class.std::__1::set"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %51, i64 -1
  %53 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %52, i64 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %51, i64 -1, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node.153"**
  %56 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %55, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"* %53, %"class.std::__1::__tree_node.153"* %56) #10
  store %"class.std::__1::set"* %52, %"class.std::__1::set"** %50, align 8
  br label %57

57:                                               ; preds = %8, %2, %45, %49
  %58 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 1, i32 7
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %110, label %61

61:                                               ; preds = %57
  switch i32 %1, label %110 [
    i32 0, label %62
    i32 2, label %102
  ]

62:                                               ; preds = %61
  %63 = bitcast %"class.std::__1::map.119"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  %64 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %4, i64 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__tree_node_base"** %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"** %66, align 8
  %68 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12, i32 0, i32 1
  %69 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %68, align 8
  %70 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %71 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %70, align 8
  %72 = icmp ult %"class.std::__1::map.119"* %69, %71
  br i1 %72, label %73, label %96

73:                                               ; preds = %62
  %74 = ptrtoint %"class.std::__1::__tree_end_node"* %65 to i64
  %75 = bitcast %"class.std::__1::map.119"* %69 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %4, i64 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::__compressed_pair.121"* %77 to i64*
  %79 = bitcast %"class.std::__1::__compressed_pair.121"* %76 to i64*
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %81, align 8
  store i64 %83, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %84, label %86, label %88

86:                                               ; preds = %73
  %87 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %87, align 8
  br label %92

88:                                               ; preds = %73
  %89 = inttoptr i64 %80 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %89, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %90, align 8
  store %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"** %66, align 8
  %91 = bitcast %"class.std::__1::__tree_end_node"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #10
  br label %92

92:                                               ; preds = %88, %86
  %93 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 1
  %94 = ptrtoint %"class.std::__1::map.119"* %93 to i64
  %95 = bitcast %"class.std::__1::map.119"** %68 to i64*
  store i64 %94, i64* %95, align 8
  br label %98

96:                                               ; preds = %62
  %97 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12
  call void @_ZNSt3__16vectorINS_3mapIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEENS9_ISE_EEE21__push_back_slow_pathISE_EEvOT_(%"class.std::__1::vector.117"* %97, %"class.std::__1::map.119"* nonnull dereferenceable(24) %4) #10
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %4, i64 0, i32 0
  %100 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node.161"**
  %101 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %100, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"* nonnull %99, %"class.std::__1::__tree_node.161"* %101) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  br label %110

102:                                              ; preds = %61
  %103 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateAST", %"class.sh::(anonymous namespace)::ValidateAST"* %0, i64 0, i32 12, i32 0, i32 1
  %104 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %104, i64 -1
  %106 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %105, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %104, i64 -1, i32 0, i32 1, i32 0, i32 0
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.std::__1::__tree_node.161"**
  %109 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %108, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"* %106, %"class.std::__1::__tree_node.161"* %109) #10
  store %"class.std::__1::map.119"* %105, %"class.std::__1::map.119"** %103, align 8
  br label %110

110:                                              ; preds = %61, %57, %98, %102
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_3setIPKN2sh9TVariableENS_4lessIS5_EENS_9allocatorIS5_EEEENS8_ISA_EEE21__push_back_slow_pathISA_EEvOT_(%"class.std::__1::vector.91"*, %"class.std::__1::set"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::set"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.91"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.91"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::set"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::set"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::set"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::set"* %35 to i64
  %37 = bitcast %"class.std::__1::set"* %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::set"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair.94"* %41 to i64*
  %43 = bitcast %"class.std::__1::__compressed_pair.94"* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9, i32 0, i32 1, i32 0, i32 0
  br i1 %48, label %50, label %52

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %34, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %51, align 8
  br label %58

52:                                               ; preds = %31
  %53 = inttoptr i64 %44 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %54, align 8
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10
  br label %58

58:                                               ; preds = %50, %52
  %59 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %34, i64 1
  %60 = ptrtoint %"class.std::__1::set"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::set"*, %"class.std::__1::set"** %61, align 8
  %63 = load %"class.std::__1::set"*, %"class.std::__1::set"** %3, align 8
  %64 = icmp eq %"class.std::__1::set"* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = ptrtoint %"class.std::__1::set"* %62 to i64
  br label %98

67:                                               ; preds = %58, %93
  %68 = phi %"class.std::__1::set"* [ %70, %93 ], [ %34, %58 ]
  %69 = phi %"class.std::__1::set"* [ %71, %93 ], [ %63, %58 ]
  %70 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1
  %72 = bitcast %"class.std::__1::set"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::set"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1, i32 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1, i32 0, i32 1
  %77 = bitcast %"class.std::__1::__compressed_pair.94"* %76 to i64*
  %78 = bitcast %"class.std::__1::__compressed_pair.94"* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1, i32 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1, i32 0, i32 1, i32 0, i32 0
  br i1 %83, label %85, label %87

85:                                               ; preds = %67
  %86 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %70, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %86, align 8
  br label %93

87:                                               ; preds = %67
  %88 = inttoptr i64 %79 to %"class.std::__1::__tree_node_base"*
  %89 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %71, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %89, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #10
  br label %93

93:                                               ; preds = %87, %85
  %94 = icmp eq %"class.std::__1::set"* %71, %62
  br i1 %94, label %95, label %67

95:                                               ; preds = %93
  %96 = load i64, i64* %6, align 8
  %97 = load %"class.std::__1::set"*, %"class.std::__1::set"** %3, align 8
  br label %98

98:                                               ; preds = %65, %95
  %99 = phi %"class.std::__1::set"* [ %62, %65 ], [ %97, %95 ]
  %100 = phi %"class.std::__1::set"* [ %34, %65 ], [ %70, %95 ]
  %101 = phi i64 [ %66, %65 ], [ %96, %95 ]
  %102 = ptrtoint %"class.std::__1::set"* %100 to i64
  store i64 %102, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %103 = inttoptr i64 %101 to %"class.std::__1::set"*
  %104 = icmp eq %"class.std::__1::set"* %99, %103
  br i1 %104, label %113, label %105

105:                                              ; preds = %98, %105
  %106 = phi %"class.std::__1::set"* [ %107, %105 ], [ %99, %98 ]
  %107 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %106, i64 -1
  %108 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %107, i64 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %106, i64 -1, i32 0, i32 1, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_node.153"**
  %111 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %110, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"* %108, %"class.std::__1::__tree_node.153"* %111) #10
  %112 = icmp eq %"class.std::__1::set"* %107, %103
  br i1 %112, label %113, label %105

113:                                              ; preds = %105, %98
  %114 = icmp eq i64 %101, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %101 to i8*
  tail call void @_ZdlPv(i8* %116) #11
  br label %117

117:                                              ; preds = %113, %115
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"*, %"class.std::__1::__tree_node.153"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.153"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.153"* %1 to %"class.std::__1::__tree_node.153"**
  %6 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"* %0, %"class.std::__1::__tree_node.153"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.153", %"class.std::__1::__tree_node.153"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.153"**
  %9 = load %"class.std::__1::__tree_node.153"*, %"class.std::__1::__tree_node.153"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.93"* %0, %"class.std::__1::__tree_node.153"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.153"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_3mapIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEENS9_ISE_EEE21__push_back_slow_pathISE_EEvOT_(%"class.std::__1::vector.117"*, %"class.std::__1::map.119"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::map.119"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.117"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.117"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::map.119"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::map.119"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::map.119"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::map.119"* %35 to i64
  %37 = bitcast %"class.std::__1::map.119"* %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::map.119"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %33, i64 %9, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair.121"* %41 to i64*
  %43 = bitcast %"class.std::__1::__compressed_pair.121"* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %33, i64 %9, i32 0, i32 1, i32 0, i32 0
  br i1 %48, label %50, label %52

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %34, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %51, align 8
  br label %58

52:                                               ; preds = %31
  %53 = inttoptr i64 %44 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %1, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %54, align 8
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10
  br label %58

58:                                               ; preds = %50, %52
  %59 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %34, i64 1
  %60 = ptrtoint %"class.std::__1::map.119"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %0, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %61, align 8
  %63 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %3, align 8
  %64 = icmp eq %"class.std::__1::map.119"* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = ptrtoint %"class.std::__1::map.119"* %62 to i64
  br label %98

67:                                               ; preds = %58, %93
  %68 = phi %"class.std::__1::map.119"* [ %70, %93 ], [ %34, %58 ]
  %69 = phi %"class.std::__1::map.119"* [ %71, %93 ], [ %63, %58 ]
  %70 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %68, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 -1
  %72 = bitcast %"class.std::__1::map.119"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::map.119"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %68, i64 -1, i32 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 -1, i32 0, i32 1
  %77 = bitcast %"class.std::__1::__compressed_pair.121"* %76 to i64*
  %78 = bitcast %"class.std::__1::__compressed_pair.121"* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 -1, i32 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %68, i64 -1, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %68, i64 -1, i32 0, i32 1, i32 0, i32 0
  br i1 %83, label %85, label %87

85:                                               ; preds = %67
  %86 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %70, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %86, align 8
  br label %93

87:                                               ; preds = %67
  %88 = inttoptr i64 %79 to %"class.std::__1::__tree_node_base"*
  %89 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %71, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %69, i64 -1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %89, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #10
  br label %93

93:                                               ; preds = %87, %85
  %94 = icmp eq %"class.std::__1::map.119"* %71, %62
  br i1 %94, label %95, label %67

95:                                               ; preds = %93
  %96 = load i64, i64* %6, align 8
  %97 = load %"class.std::__1::map.119"*, %"class.std::__1::map.119"** %3, align 8
  br label %98

98:                                               ; preds = %65, %95
  %99 = phi %"class.std::__1::map.119"* [ %62, %65 ], [ %97, %95 ]
  %100 = phi %"class.std::__1::map.119"* [ %34, %65 ], [ %70, %95 ]
  %101 = phi i64 [ %66, %65 ], [ %96, %95 ]
  %102 = ptrtoint %"class.std::__1::map.119"* %100 to i64
  store i64 %102, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %103 = inttoptr i64 %101 to %"class.std::__1::map.119"*
  %104 = icmp eq %"class.std::__1::map.119"* %99, %103
  br i1 %104, label %113, label %105

105:                                              ; preds = %98, %105
  %106 = phi %"class.std::__1::map.119"* [ %107, %105 ], [ %99, %98 ]
  %107 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %106, i64 -1
  %108 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %107, i64 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::map.119", %"class.std::__1::map.119"* %106, i64 -1, i32 0, i32 1, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_node.161"**
  %111 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %110, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"* %108, %"class.std::__1::__tree_node.161"* %111) #10
  %112 = icmp eq %"class.std::__1::map.119"* %107, %103
  br i1 %112, label %113, label %105

113:                                              ; preds = %105, %98
  %114 = icmp eq i64 %101, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %101 to i8*
  tail call void @_ZdlPv(i8* %116) #11
  br label %117

117:                                              ; preds = %113, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"*, %"class.std::__1::__tree_node.161"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.161"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.161"* %1 to %"class.std::__1::__tree_node.161"**
  %6 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"* %0, %"class.std::__1::__tree_node.161"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.161"**
  %9 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.120"* %0, %"class.std::__1::__tree_node.161"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.161"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.120"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.191"* dereferenceable(8), %"class.std::__1::tuple.144"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.120", %"class.std::__1::__tree.120"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.161"**
  %8 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.161"* %8, null
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.120", %"class.std::__1::__tree.120"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  %17 = select i1 %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %15
  br label %18

18:                                               ; preds = %50, %10
  %19 = phi %"class.std::__1::__tree_node.161"* [ %53, %50 ], [ %8, %10 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %52, %50 ], [ %11, %10 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %13, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %18
  %25 = icmp ugt i64 %13, %22
  br i1 %25, label %42, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %28
  %31 = tail call i32 @memcmp(i8* %17, i8* %30, i64 %13) #12
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %26, %18
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %50

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 0, i32 0
  br label %56

39:                                               ; preds = %26
  %40 = tail call i32 @memcmp(i8* %30, i8* %17, i64 %22) #12
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %39, %24
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 0, i32 0
  br label %56

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %19, i64 0, i32 0, i32 0
  br label %56

50:                                               ; preds = %42, %33
  %51 = phi %"class.std::__1::__tree_node_base"* [ %35, %33 ], [ %44, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %34, %33 ], [ %43, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"* %51 to %"class.std::__1::__tree_node.161"*
  br label %18

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %56

56:                                               ; preds = %37, %46, %48, %54
  %57 = phi %"class.std::__1::__tree_end_node"* [ %6, %54 ], [ %38, %37 ], [ %47, %46 ], [ %49, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %55, %54 ], [ %34, %37 ], [ %43, %46 ], [ %20, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"** %58 to %"class.std::__1::__tree_node.161"**
  %60 = load %"class.std::__1::__tree_node.161"*, %"class.std::__1::__tree_node.161"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node.161"* %60, null
  br i1 %61, label %62, label %90

62:                                               ; preds = %56
  %63 = tail call i8* @_Znwm(i64 56) #11, !noalias !21
  %64 = getelementptr inbounds i8, i8* %63, i64 32
  %65 = bitcast %"class.std::__1::tuple.191"* %3 to i8**
  %66 = load i8*, i8** %65, align 8, !noalias !21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %66, i64 16, i1 false) #10, !noalias !21
  %67 = getelementptr inbounds i8, i8* %63, i64 48
  %68 = bitcast i8* %67 to %"class.sh::TFieldListCollection"**
  store %"class.sh::TFieldListCollection"* null, %"class.sh::TFieldListCollection"** %68, align 8, !noalias !21
  %69 = bitcast i8* %63 to %"class.std::__1::__tree_node.161"*
  %70 = bitcast i8* %63 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %63, i64 16
  %72 = bitcast i8* %71 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %58 to i8**
  store i8* %63, i8** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree.120", %"class.std::__1::__tree.120"* %0, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %62
  %80 = ptrtoint %"class.std::__1::__tree_node_base"* %77 to i64
  %81 = bitcast %"class.std::__1::__tree.120"* %0 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  br label %83

83:                                               ; preds = %79, %62
  %84 = phi %"class.std::__1::__tree_node_base"* [ %70, %62 ], [ %82, %79 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree.120", %"class.std::__1::__tree.120"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %86, %"class.std::__1::__tree_node_base"* %84) #10
  %87 = getelementptr inbounds %"class.std::__1::__tree.120", %"class.std::__1::__tree.120"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  br label %90

90:                                               ; preds = %83, %56
  %91 = phi i8 [ 1, %83 ], [ 0, %56 ]
  %92 = phi %"class.std::__1::__tree_node.161"* [ %69, %83 ], [ %60, %56 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.161", %"class.std::__1::__tree_node.161"* %92, i64 0, i32 0, i32 0
  %94 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %93, 0
  %95 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %94, i8 %91, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %95
}

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.108"*, %"class.std::__1::__tree_node.152"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.152"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.152"* %1 to %"class.std::__1::__tree_node.152"**
  %6 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.108"* %0, %"class.std::__1::__tree_node.152"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.152", %"class.std::__1::__tree_node.152"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.152"**
  %9 = load %"class.std::__1::__tree_node.152"*, %"class.std::__1::__tree_node.152"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.108"* %0, %"class.std::__1::__tree_node.152"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.152"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.81"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.81"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.81"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeIPKN2sh9TVariableENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeIPKN2sh15TInterfaceBlockENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIPN2sh11TIntermNodeES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_20TFieldListCollectionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
