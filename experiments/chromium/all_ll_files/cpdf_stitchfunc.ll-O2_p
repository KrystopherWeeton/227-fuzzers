; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_stitchfunc.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_stitchfunc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_StitchFunc = type { %class.CPDF_Function, %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector" }
%class.CPDF_Function = type { i32 (...)**, i32, i32, i32, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CPDF_Function* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::set" = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.36" }
%"class.fxcrt::RetainPtr.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.60", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.23", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.fxcrt::RetainPtr.25"*, %"class.fxcrt::RetainPtr.25"*, %"class.std::__1::__compressed_pair.31" }
%"class.fxcrt::RetainPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.fxcrt::RetainPtr.25"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI13CPDF_FunctionNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTV15CPDF_StitchFunc = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_StitchFunc*)* @_ZN15CPDF_StitchFuncD2Ev to i8*), i8* bitcast (void (%class.CPDF_StitchFunc*)* @_ZN15CPDF_StitchFuncD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_StitchFunc*, %class.CPDF_Object*, %"class.std::__1::set"*)* @_ZN15CPDF_StitchFunc6v_InitEPK11CPDF_ObjectPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE to i8*), i8* bitcast (i1 (%class.CPDF_StitchFunc*, float*, float*)* @_ZNK15CPDF_StitchFunc6v_CallEPKfPf to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"Functions\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Bounds\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Encode\00", align 1

@_ZN15CPDF_StitchFuncC1Ev = hidden unnamed_addr alias void (%class.CPDF_StitchFunc*), void (%class.CPDF_StitchFunc*)* @_ZN15CPDF_StitchFuncC2Ev
@_ZN15CPDF_StitchFuncD1Ev = hidden unnamed_addr alias void (%class.CPDF_StitchFunc*), void (%class.CPDF_StitchFunc*)* @_ZN15CPDF_StitchFuncD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_StitchFuncC2Ev(%class.CPDF_StitchFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0
  tail call void @_ZN13CPDF_FunctionC2ENS_4TypeE(%class.CPDF_Function* %2, i32 3) #10
  %3 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15CPDF_StitchFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 72, i1 false)
  ret void
}

declare void @_ZN13CPDF_FunctionC2ENS_4TypeE(%class.CPDF_Function*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_StitchFuncD2Ev(%class.CPDF_StitchFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV15CPDF_StitchFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load float*, float** %12, align 8
  %14 = icmp eq float* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint float* %13 to i64
  %17 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast float** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast float* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr"* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.std::__1::unique_ptr"* %23 to i8*
  %27 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %23
  br i1 %29, label %46, label %30

30:                                               ; preds = %25, %41
  %31 = phi %"class.std::__1::unique_ptr"* [ %32, %41 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 -1
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.CPDF_Function*, %class.CPDF_Function** %33, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %33, align 8
  %35 = icmp eq %class.CPDF_Function* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = bitcast %class.CPDF_Function* %34 to void (%class.CPDF_Function*)***
  %38 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %38, i64 1
  %40 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %39, align 8
  tail call void %40(%class.CPDF_Function* nonnull %34) #10
  br label %41

41:                                               ; preds = %36, %30
  %42 = icmp eq %"class.std::__1::unique_ptr"* %32, %23
  br i1 %42, label %43, label %30

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::vector.1"* %21 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %25
  %47 = phi i8* [ %45, %43 ], [ %26, %25 ]
  store %"class.std::__1::unique_ptr"* %23, %"class.std::__1::unique_ptr"** %27, align 8
  tail call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %20, %46
  %49 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0
  tail call void @_ZN13CPDF_FunctionD2Ev(%class.CPDF_Function* %49) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13CPDF_FunctionD2Ev(%class.CPDF_Function*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_StitchFuncD0Ev(%class.CPDF_StitchFunc*) unnamed_addr #0 align 2 {
  tail call void @_ZN15CPDF_StitchFuncD2Ev(%class.CPDF_StitchFunc* %0) #10
  %2 = bitcast %class.CPDF_StitchFunc* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_StitchFunc6v_InitEPK11CPDF_ObjectPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE(%class.CPDF_StitchFunc*, %class.CPDF_Object*, %"class.std::__1::set"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %398

12:                                               ; preds = %3
  %13 = bitcast %class.CPDF_Object* %1 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %14 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %13, align 8
  %15 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %14, i64 12
  %16 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %15, align 8
  %17 = tail call %class.CPDF_Dictionary* %16(%class.CPDF_Object* %1) #10
  %18 = icmp eq %class.CPDF_Dictionary* %17, null
  br i1 %18, label %398, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #10
  %21 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %17, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %22 = icmp eq %class.CPDF_Array* %21, null
  br i1 %22, label %398, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #10
  %25 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %17, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %26 = icmp eq %class.CPDF_Array* %25, null
  br i1 %26, label %398, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10
  %29 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %17, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %30 = icmp eq %class.CPDF_Array* %29, null
  br i1 %30, label %398, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %21, i64 0, i32 1
  %33 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %21, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast %"class.fxcrt::RetainPtr.25"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.23"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %398, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %25, i64 0, i32 1
  %44 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %25, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"class.fxcrt::RetainPtr.25"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.23"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = add i32 %40, -1
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %398, label %54

54:                                               ; preds = %42
  %55 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %40, i32 2) #10
  %56 = extractvalue { i32, i1 } %55, 1
  br i1 %56, label %398, label %57

57:                                               ; preds = %54
  %58 = extractvalue { i32, i1 } %55, 0
  %59 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %29, i64 0, i32 1
  %60 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %29, i64 0, i32 1, i32 0, i32 1
  %61 = bitcast %"class.fxcrt::RetainPtr.25"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.23"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = zext i32 %58 to i64
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %398, label %69

69:                                               ; preds = %57
  %70 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1, i32 0, i32 1
  %73 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %74 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1
  %75 = bitcast %"class.std::__1::unique_ptr"** %72 to i64*
  %76 = and i64 %39, 4294967295
  br label %79

77:                                               ; preds = %123
  %78 = icmp eq i64 %125, %76
  br i1 %78, label %126, label %79

79:                                               ; preds = %77, %69
  %80 = phi i64 [ 0, %69 ], [ %125, %77 ]
  %81 = phi i32 [ -1431655766, %69 ], [ %114, %77 ]
  %82 = phi i8 [ 0, %69 ], [ %113, %77 ]
  %83 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %21, i64 %80) #10
  %84 = icmp eq %class.CPDF_Object* %83, %1
  br i1 %84, label %398, label %85

85:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  store %class.CPDF_Function* inttoptr (i64 -6148914691236517206 to %class.CPDF_Function*), %class.CPDF_Function** %71, align 8
  %86 = call %class.CPDF_Function* @_ZN13CPDF_Function4LoadEPK11CPDF_ObjectPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE(%class.CPDF_Object* %83, %"class.std::__1::set"* %2) #10
  store %class.CPDF_Function* %86, %class.CPDF_Function** %71, align 8
  %87 = icmp eq %class.CPDF_Function* %86, null
  %88 = ptrtoint %class.CPDF_Function* %86 to i64
  br i1 %87, label %89, label %90

89:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  br label %398

90:                                               ; preds = %85
  %91 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %86, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %112

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %86, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %112, label %98

98:                                               ; preds = %94
  switch i8 %82, label %99 [
    i8 0, label %102
    i8 1, label %100
  ], !prof !2

99:                                               ; preds = %98
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !3
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !4
  unreachable

100:                                              ; preds = %98
  %101 = icmp eq i32 %96, %81
  br i1 %101, label %102, label %112

102:                                              ; preds = %98, %100
  %103 = phi i32 [ %81, %100 ], [ %96, %98 ]
  %104 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %72, align 8
  %105 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %73, align 8
  %106 = icmp ult %"class.std::__1::unique_ptr"* %104, %105
  br i1 %106, label %107, label %111

107:                                              ; preds = %102
  store %class.CPDF_Function* null, %class.CPDF_Function** %71, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %88, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  %110 = ptrtoint %"class.std::__1::unique_ptr"* %109 to i64
  store i64 %110, i64* %75, align 8
  br label %112

111:                                              ; preds = %102
  call void @_ZNSt3__16vectorINS_10unique_ptrI13CPDF_FunctionNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"* %74, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #10
  br label %112

112:                                              ; preds = %94, %100, %107, %111, %90
  %113 = phi i8 [ 1, %111 ], [ 1, %107 ], [ 1, %100 ], [ %82, %94 ], [ %82, %90 ]
  %114 = phi i32 [ %103, %111 ], [ %103, %107 ], [ %81, %100 ], [ %81, %94 ], [ %81, %90 ]
  %115 = phi i32 [ 0, %111 ], [ 0, %107 ], [ 1, %100 ], [ 1, %94 ], [ 1, %90 ]
  %116 = load %class.CPDF_Function*, %class.CPDF_Function** %71, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %71, align 8
  %117 = icmp eq %class.CPDF_Function* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %112
  %119 = bitcast %class.CPDF_Function* %116 to void (%class.CPDF_Function*)***
  %120 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %120, i64 1
  %122 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %121, align 8
  call void %122(%class.CPDF_Function* nonnull %116) #10
  br label %123

123:                                              ; preds = %118, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  %124 = icmp eq i32 %115, 0
  %125 = add nuw nsw i64 %80, 1
  br i1 %124, label %77, label %398

126:                                              ; preds = %77
  %127 = icmp eq i8 %113, 1
  br i1 %127, label %129, label %128, !prof !5

128:                                              ; preds = %126
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !3
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !4
  unreachable

129:                                              ; preds = %126
  %130 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0, i32 3
  store i32 %114, i32* %130, align 8
  %131 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2
  %132 = add nsw i64 %39, 1
  %133 = and i64 %132, 4294967295
  %134 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast float** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.std::__1::vector"* %131 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %136, %138
  %140 = ashr exact i64 %139, 2
  %141 = icmp ult i64 %140, %133
  %142 = inttoptr i64 %136 to float*
  br i1 %141, label %143, label %165

143:                                              ; preds = %129
  %144 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2, i32 0, i32 1
  %145 = bitcast float** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %146, %138
  %148 = ashr exact i64 %147, 2
  %149 = shl nuw nsw i64 %133, 2
  %150 = call i8* @_Znwm(i64 %149) #11
  %151 = bitcast i8* %150 to float*
  %152 = getelementptr inbounds float, float* %151, i64 %148
  %153 = ptrtoint float* %152 to i64
  %154 = getelementptr inbounds float, float* %151, i64 %133
  %155 = ptrtoint float* %154 to i64
  %156 = ptrtoint i8* %150 to i64
  %157 = icmp sgt i64 %147, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %143
  %159 = inttoptr i64 %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %150, i8* align 4 %159, i64 %147, i1 false) #10
  br label %160

160:                                              ; preds = %158, %143
  store i64 %156, i64* %137, align 8
  store i64 %153, i64* %145, align 8
  store i64 %155, i64* %135, align 8
  %161 = icmp eq i64 %138, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %138 to i8*
  call void @_ZdlPv(i8* %163) #11
  %164 = load float*, float** %134, align 8
  br label %165

165:                                              ; preds = %129, %160, %162
  %166 = phi float* [ %142, %129 ], [ %154, %160 ], [ %164, %162 ]
  %167 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %168 = load float*, float** %167, align 8
  %169 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2, i32 0, i32 1
  %170 = load float*, float** %169, align 8
  %171 = icmp eq float* %170, %166
  br i1 %171, label %179, label %172

172:                                              ; preds = %165
  %173 = bitcast float* %168 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = bitcast float* %170 to i32*
  store i32 %174, i32* %175, align 4
  %176 = getelementptr inbounds float, float* %170, i64 1
  %177 = ptrtoint float* %176 to i64
  %178 = bitcast float** %169 to i64*
  store i64 %177, i64* %178, align 8
  br label %234

179:                                              ; preds = %165
  %180 = ptrtoint float* %166 to i64
  %181 = bitcast float** %169 to i64*
  %182 = load i64, i64* %137, align 8
  %183 = sub i64 %180, %182
  %184 = ashr exact i64 %183, 2
  %185 = add nsw i64 %184, 1
  %186 = icmp ugt i64 %185, 4611686018427387903
  br i1 %186, label %187, label %189

187:                                              ; preds = %179
  %188 = bitcast %"class.std::__1::vector"* %131 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %188) #12
  unreachable

189:                                              ; preds = %179
  %190 = icmp ult i64 %184, 2305843009213693951
  br i1 %190, label %191, label %199

191:                                              ; preds = %189
  %192 = ashr exact i64 %183, 1
  %193 = icmp ult i64 %192, %185
  %194 = select i1 %193, i64 %185, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i64 %194, 4611686018427387903
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  call void @abort() #12
  unreachable

199:                                              ; preds = %196, %189
  %200 = phi i64 [ %194, %196 ], [ 4611686018427387903, %189 ]
  %201 = shl i64 %200, 2
  %202 = call i8* @_Znwm(i64 %201) #11
  %203 = bitcast i8* %202 to float*
  br label %204

204:                                              ; preds = %199, %191
  %205 = phi i64 [ %200, %199 ], [ 0, %191 ]
  %206 = phi float* [ %203, %199 ], [ null, %191 ]
  %207 = getelementptr inbounds float, float* %206, i64 %184
  %208 = getelementptr inbounds float, float* %206, i64 %205
  %209 = ptrtoint float* %208 to i64
  %210 = bitcast float* %168 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = bitcast float* %207 to i32*
  store i32 %211, i32* %212, align 4
  %213 = getelementptr inbounds float, float* %207, i64 1
  %214 = ptrtoint float* %213 to i64
  %215 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  %216 = load float*, float** %215, align 8
  %217 = load i64, i64* %181, align 8
  %218 = ptrtoint float* %216 to i64
  %219 = sub i64 %217, %218
  %220 = ashr exact i64 %219, 2
  %221 = sub nsw i64 0, %220
  %222 = getelementptr inbounds float, float* %207, i64 %221
  %223 = ptrtoint float* %222 to i64
  %224 = icmp sgt i64 %219, 0
  br i1 %224, label %225, label %229

225:                                              ; preds = %204
  %226 = bitcast float* %222 to i8*
  %227 = bitcast float* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %226, i8* align 4 %227, i64 %219, i1 false) #10
  %228 = load float*, float** %215, align 8
  br label %229

229:                                              ; preds = %225, %204
  %230 = phi float* [ %216, %204 ], [ %228, %225 ]
  store i64 %223, i64* %137, align 8
  store i64 %214, i64* %181, align 8
  store i64 %209, i64* %135, align 8
  %231 = icmp eq float* %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %229
  %233 = bitcast float* %230 to i8*
  call void @_ZdlPv(i8* %233) #11
  br label %234

234:                                              ; preds = %172, %229, %232
  %235 = icmp eq i32 %51, 0
  br i1 %235, label %239, label %236

236:                                              ; preds = %234
  %237 = bitcast float** %169 to i64*
  %238 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  br label %333

239:                                              ; preds = %395, %234
  %240 = load float*, float** %167, align 8
  %241 = getelementptr inbounds float, float* %240, i64 1
  %242 = load float*, float** %169, align 8
  %243 = load float*, float** %134, align 8
  %244 = icmp eq float* %242, %243
  %245 = ptrtoint float* %243 to i64
  br i1 %244, label %253, label %246

246:                                              ; preds = %239
  %247 = bitcast float* %241 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = bitcast float* %242 to i32*
  store i32 %248, i32* %249, align 4
  %250 = getelementptr inbounds float, float* %242, i64 1
  %251 = ptrtoint float* %250 to i64
  %252 = bitcast float** %169 to i64*
  store i64 %251, i64* %252, align 8
  br label %310

253:                                              ; preds = %239
  %254 = ptrtoint float* %242 to i64
  %255 = bitcast float** %169 to i64*
  %256 = load i64, i64* %137, align 8
  %257 = sub i64 %254, %256
  %258 = ashr exact i64 %257, 2
  %259 = add nsw i64 %258, 1
  %260 = icmp ugt i64 %259, 4611686018427387903
  br i1 %260, label %261, label %263

261:                                              ; preds = %253
  %262 = bitcast %"class.std::__1::vector"* %131 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %262) #12
  unreachable

263:                                              ; preds = %253
  %264 = sub i64 %245, %256
  %265 = ashr exact i64 %264, 2
  %266 = icmp ult i64 %265, 2305843009213693951
  br i1 %266, label %267, label %275

267:                                              ; preds = %263
  %268 = ashr exact i64 %264, 1
  %269 = icmp ult i64 %268, %259
  %270 = select i1 %269, i64 %259, i64 %268
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %280, label %272

272:                                              ; preds = %267
  %273 = icmp ugt i64 %270, 4611686018427387903
  br i1 %273, label %274, label %275

274:                                              ; preds = %272
  call void @abort() #12
  unreachable

275:                                              ; preds = %272, %263
  %276 = phi i64 [ %270, %272 ], [ 4611686018427387903, %263 ]
  %277 = shl i64 %276, 2
  %278 = call i8* @_Znwm(i64 %277) #11
  %279 = bitcast i8* %278 to float*
  br label %280

280:                                              ; preds = %275, %267
  %281 = phi i64 [ %276, %275 ], [ 0, %267 ]
  %282 = phi float* [ %279, %275 ], [ null, %267 ]
  %283 = getelementptr inbounds float, float* %282, i64 %258
  %284 = getelementptr inbounds float, float* %282, i64 %281
  %285 = ptrtoint float* %284 to i64
  %286 = bitcast float* %241 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = bitcast float* %283 to i32*
  store i32 %287, i32* %288, align 4
  %289 = getelementptr inbounds float, float* %283, i64 1
  %290 = ptrtoint float* %289 to i64
  %291 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  %292 = load float*, float** %291, align 8
  %293 = load i64, i64* %255, align 8
  %294 = ptrtoint float* %292 to i64
  %295 = sub i64 %293, %294
  %296 = ashr exact i64 %295, 2
  %297 = sub nsw i64 0, %296
  %298 = getelementptr inbounds float, float* %283, i64 %297
  %299 = ptrtoint float* %298 to i64
  %300 = icmp sgt i64 %295, 0
  br i1 %300, label %301, label %305

301:                                              ; preds = %280
  %302 = bitcast float* %298 to i8*
  %303 = bitcast float* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 %295, i1 false) #10
  %304 = load float*, float** %291, align 8
  br label %305

305:                                              ; preds = %301, %280
  %306 = phi float* [ %292, %280 ], [ %304, %301 ]
  store i64 %299, i64* %137, align 8
  store i64 %290, i64* %255, align 8
  store i64 %285, i64* %135, align 8
  %307 = icmp eq float* %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  %309 = bitcast float* %306 to i8*
  call void @_ZdlPv(i8* %309) #11
  br label %310

310:                                              ; preds = %246, %305, %308
  %311 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311) #10
  %312 = lshr exact i64 %38, 2
  %313 = and i64 %312, 4294967294
  call void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector"* nonnull sret %8, %class.CPDF_Array* nonnull %29, i64 %313) #10
  %314 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 3
  %315 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %314, i64 0, i32 0, i32 0
  %316 = load float*, float** %315, align 8
  %317 = icmp eq float* %316, null
  br i1 %317, label %324, label %318

318:                                              ; preds = %310
  %319 = ptrtoint float* %316 to i64
  %320 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 3, i32 0, i32 1
  %321 = bitcast float** %320 to i64*
  store i64 %319, i64* %321, align 8
  %322 = bitcast float* %316 to i8*
  call void @_ZdlPv(i8* %322) #11
  %323 = bitcast %"class.std::__1::vector"* %314 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %323, i8 0, i64 24, i1 false) #10
  br label %324

324:                                              ; preds = %318, %310
  %325 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %326 = load <2 x i64>, <2 x i64>* %325, align 16
  %327 = bitcast %"class.std::__1::vector"* %314 to <2 x i64>*
  store <2 x i64> %326, <2 x i64>* %327, align 8
  %328 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %329 = bitcast float** %328 to i64*
  %330 = load i64, i64* %329, align 16
  %331 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %332 = bitcast float** %331 to i64*
  store i64 %330, i64* %332, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311) #10
  br label %398

333:                                              ; preds = %395, %236
  %334 = phi i64 [ 0, %236 ], [ %396, %395 ]
  %335 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %25, i64 %334) #10
  %336 = load float*, float** %169, align 8
  %337 = load float*, float** %134, align 8
  %338 = icmp ult float* %336, %337
  %339 = ptrtoint float* %337 to i64
  br i1 %338, label %340, label %343

340:                                              ; preds = %333
  store float %335, float* %336, align 4
  %341 = getelementptr inbounds float, float* %336, i64 1
  %342 = ptrtoint float* %341 to i64
  store i64 %342, i64* %237, align 8
  br label %395

343:                                              ; preds = %333
  %344 = ptrtoint float* %336 to i64
  %345 = load i64, i64* %137, align 8
  %346 = sub i64 %344, %345
  %347 = ashr exact i64 %346, 2
  %348 = add nsw i64 %347, 1
  %349 = icmp ugt i64 %348, 4611686018427387903
  br i1 %349, label %350, label %352

350:                                              ; preds = %343
  %351 = bitcast %"class.std::__1::vector"* %131 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %351) #12
  unreachable

352:                                              ; preds = %343
  %353 = sub i64 %339, %345
  %354 = ashr exact i64 %353, 2
  %355 = icmp ult i64 %354, 2305843009213693951
  br i1 %355, label %356, label %364

356:                                              ; preds = %352
  %357 = ashr exact i64 %353, 1
  %358 = icmp ult i64 %357, %348
  %359 = select i1 %358, i64 %348, i64 %357
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %369, label %361

361:                                              ; preds = %356
  %362 = icmp ugt i64 %359, 4611686018427387903
  br i1 %362, label %363, label %364

363:                                              ; preds = %361
  call void @abort() #12
  unreachable

364:                                              ; preds = %361, %352
  %365 = phi i64 [ %359, %361 ], [ 4611686018427387903, %352 ]
  %366 = shl i64 %365, 2
  %367 = call i8* @_Znwm(i64 %366) #11
  %368 = bitcast i8* %367 to float*
  br label %369

369:                                              ; preds = %364, %356
  %370 = phi i64 [ %365, %364 ], [ 0, %356 ]
  %371 = phi float* [ %368, %364 ], [ null, %356 ]
  %372 = getelementptr inbounds float, float* %371, i64 %347
  %373 = getelementptr inbounds float, float* %371, i64 %370
  %374 = ptrtoint float* %373 to i64
  store float %335, float* %372, align 4
  %375 = getelementptr inbounds float, float* %372, i64 1
  %376 = ptrtoint float* %375 to i64
  %377 = load float*, float** %238, align 8
  %378 = load i64, i64* %237, align 8
  %379 = ptrtoint float* %377 to i64
  %380 = sub i64 %378, %379
  %381 = ashr exact i64 %380, 2
  %382 = sub nsw i64 0, %381
  %383 = getelementptr inbounds float, float* %372, i64 %382
  %384 = ptrtoint float* %383 to i64
  %385 = icmp sgt i64 %380, 0
  br i1 %385, label %386, label %390

386:                                              ; preds = %369
  %387 = bitcast float* %383 to i8*
  %388 = bitcast float* %377 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %387, i8* align 4 %388, i64 %380, i1 false) #10
  %389 = load float*, float** %238, align 8
  br label %390

390:                                              ; preds = %386, %369
  %391 = phi float* [ %377, %369 ], [ %389, %386 ]
  store i64 %384, i64* %137, align 8
  store i64 %376, i64* %237, align 8
  store i64 %374, i64* %135, align 8
  %392 = icmp eq float* %391, null
  br i1 %392, label %395, label %393

393:                                              ; preds = %390
  %394 = bitcast float* %391 to i8*
  call void @_ZdlPv(i8* %394) #11
  br label %395

395:                                              ; preds = %340, %390, %393
  %396 = add nuw nsw i64 %334, 1
  %397 = icmp eq i64 %396, %52
  br i1 %397, label %239, label %333

398:                                              ; preds = %79, %123, %57, %54, %89, %12, %23, %324, %31, %42, %27, %19, %3
  %399 = phi i1 [ false, %3 ], [ false, %12 ], [ false, %19 ], [ false, %23 ], [ false, %27 ], [ true, %324 ], [ false, %57 ], [ false, %31 ], [ false, %42 ], [ false, %89 ], [ false, %54 ], [ false, %123 ], [ false, %79 ]
  ret i1 %399
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare %class.CPDF_Function* @_ZN13CPDF_Function4LoadEPK11CPDF_ObjectPNSt3__13setIS2_NS3_4lessIS2_EENS3_9allocatorIS2_EEEE(%class.CPDF_Object*, %"class.std::__1::set"*) local_unnamed_addr #1

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_StitchFunc6v_CallEPKfPf(%class.CPDF_StitchFunc*, float* nocapture readonly, float*) unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca i32, align 4
  %6 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  %7 = bitcast float* %1 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = bitcast float* %4 to i32*
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = add nsw i64 %17, -1
  %19 = bitcast i32 %8 to float
  %20 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 2, i32 0, i32 0
  br label %21

21:                                               ; preds = %28, %3
  %22 = phi i64 [ 0, %3 ], [ %29, %28 ]
  %23 = icmp eq i64 %22, %18
  br i1 %23, label %24, label %28

24:                                               ; preds = %21
  %25 = load float*, float** %20, align 8
  %26 = getelementptr inbounds float, float* %25, i64 %17
  %27 = load float, float* %26, align 4
  br label %34

28:                                               ; preds = %21
  %29 = add i64 %22, 1
  %30 = load float*, float** %20, align 8
  %31 = getelementptr inbounds float, float* %30, i64 %29
  %32 = load float, float* %31, align 4
  %33 = fcmp ogt float %32, %19
  br i1 %33, label %34, label %21

34:                                               ; preds = %28, %24
  %35 = phi float [ %27, %24 ], [ %32, %28 ]
  %36 = phi float* [ %25, %24 ], [ %30, %28 ]
  %37 = phi i64 [ %18, %24 ], [ %22, %28 ]
  %38 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 0
  %39 = getelementptr inbounds float, float* %36, i64 %37
  %40 = load float, float* %39, align 4
  %41 = shl i64 %37, 1
  %42 = getelementptr inbounds %class.CPDF_StitchFunc, %class.CPDF_StitchFunc* %0, i64 0, i32 3, i32 0, i32 0
  %43 = load float*, float** %42, align 8
  %44 = getelementptr inbounds float, float* %43, i64 %41
  %45 = load float, float* %44, align 4
  %46 = or i64 %41, 1
  %47 = getelementptr inbounds float, float* %43, i64 %46
  %48 = load float, float* %47, align 4
  %49 = tail call float @_ZNK13CPDF_Function11InterpolateEfffff(%class.CPDF_Function* %38, float %19, float %40, float %35, float %45, float %48) #10
  store float %49, float* %4, align 4
  %50 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #10
  store i32 -1431655766, i32* %5, align 4
  %51 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %10, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 %37, i32 0, i32 0, i32 0
  %54 = load %class.CPDF_Function*, %class.CPDF_Function** %53, align 8
  %55 = call zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function* %54, float* nonnull %4, i32 1, float* %2, i32* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  ret i1 %55
}

declare float @_ZNK13CPDF_Function11InterpolateEfffff(%class.CPDF_Function*, float, float, float, float, float) local_unnamed_addr #1

declare zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function*, float*, i32, float*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI13CPDF_FunctionNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CPDF_Function** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !6

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CPDF_Function*, %class.CPDF_Function** %142, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %142, align 8
  %144 = icmp eq %class.CPDF_Function* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %class.CPDF_Function* %143 to void (%class.CPDF_Function*)***
  %147 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %147, i64 1
  %149 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %148, align 8
  tail call void %149(%class.CPDF_Function* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!3 = !{i32 -2143493842}
!4 = !{i32 -2143493821}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
