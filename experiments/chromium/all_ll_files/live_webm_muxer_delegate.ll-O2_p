; ModuleID = '../../media/muxers/live_webm_muxer_delegate.cc'
source_filename = "../../media/muxers/live_webm_muxer_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::LiveWebmMuxerDelegate" = type { %"class.media::WebmMuxer::Delegate", %"class.base::RepeatingCallback" }
%"class.media::WebmMuxer::Delegate" = type { %"class.mkvmuxer::IMkvWriter", %"class.base::internal::CheckedNumeric", %"class.base::TimeTicks" }
%"class.mkvmuxer::IMkvWriter" = type { i32 (...)** }
%"class.base::internal::CheckedNumeric" = type { %"class.base::internal::CheckedNumericState" }
%"class.base::internal::CheckedNumericState" = type { i8, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mkvmuxer::Segment" = type { i32, [4 x i8], %"class.mkvmuxer::Cues", %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Tags", i32, i8*, %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"*, i8, i8*, i64, %"class.mkvmuxer::Cluster"**, i32, i32, i32, i64, i8, %"class.mkvmuxer::Frame"**, i32, i32, i8, i8, i64, i64, [126 x i64], [126 x i64], i64, i64, i32, i8, i8, i8, i8, i8, i32, i64, i64, i32, i32, double, %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"* }
%"class.mkvmuxer::Cues" = type <{ i32, i32, %"class.mkvmuxer::CuePoint"**, i8, [7 x i8] }>
%"class.mkvmuxer::CuePoint" = type <{ i64, i64, i64, i64, i8, [7 x i8] }>
%"class.mkvmuxer::SeekHead" = type { [5 x i32], [5 x i64], i64 }
%"class.mkvmuxer::SegmentInfo" = type { double, i8*, i64, i8*, i64, i64 }
%"class.mkvmuxer::Tracks" = type <{ %"class.mkvmuxer::Track"**, i32, i8, [3 x i8] }>
%"class.mkvmuxer::Track" = type <{ i32 (...)**, i8*, i8*, i8*, i64, i8*, i64, i64, i64, i64, i64, i64, i64, %"class.mkvmuxer::ContentEncoding"**, i32, [4 x i8] }>
%"class.mkvmuxer::ContentEncoding" = type { i64, i8*, i64, i64, i64, %"class.mkvmuxer::ContentEncAESSettings", i64 }
%"class.mkvmuxer::ContentEncAESSettings" = type { i64 }
%"class.mkvmuxer::Chapters" = type { i32, i32, %"class.mkvmuxer::Chapter"* }
%"class.mkvmuxer::Chapter" = type { i8*, i64, i64, i64, %"class.mkvmuxer::Chapter::Display"*, i32, i32 }
%"class.mkvmuxer::Chapter::Display" = type { i8*, i8*, i8* }
%"class.mkvmuxer::Tags" = type { i32, i32, %"class.mkvmuxer::Tag"* }
%"class.mkvmuxer::Tag" = type { %"class.mkvmuxer::Tag::SimpleTag"*, i32, i32 }
%"class.mkvmuxer::Tag::SimpleTag" = type { i8*, i8* }
%"class.mkvmuxer::MkvWriter" = type opaque
%"class.mkvmuxer::Cluster" = type { i32, i8, i8, i8, i64, i64, i64, i64, i64, i8, %"class.std::__1::map", %"class.std::__1::map.5", %"class.mkvmuxer::IMkvWriter"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::map.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.mkvmuxer::Frame" = type <{ i64, i8*, i64, i64, i8, [7 x i8], i8*, i8, [7 x i8], i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }

@_ZTVN5media21LiveWebmMuxerDelegateE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.media::WebmMuxer::Delegate"*, i8*, i32)* @_ZN5media9WebmMuxer8Delegate5WriteEPKvj to i8*), i8* bitcast (i64 (%"class.media::LiveWebmMuxerDelegate"*)* @_ZNK5media21LiveWebmMuxerDelegate8PositionEv to i8*), i8* bitcast (i32 (%"class.media::LiveWebmMuxerDelegate"*, i64)* @_ZN5media21LiveWebmMuxerDelegate8PositionEx to i8*), i8* bitcast (i1 (%"class.media::LiveWebmMuxerDelegate"*)* @_ZNK5media21LiveWebmMuxerDelegate8SeekableEv to i8*), i8* bitcast (void (%"class.media::LiveWebmMuxerDelegate"*, i64, i64)* @_ZN5media21LiveWebmMuxerDelegate18ElementStartNotifyEyx to i8*), i8* bitcast (void (%"class.media::LiveWebmMuxerDelegate"*)* @_ZN5media21LiveWebmMuxerDelegateD2Ev to i8*), i8* bitcast (void (%"class.media::LiveWebmMuxerDelegate"*)* @_ZN5media21LiveWebmMuxerDelegateD0Ev to i8*), i8* bitcast (void (%"class.media::LiveWebmMuxerDelegate"*, %"class.mkvmuxer::Segment"*)* @_ZN5media21LiveWebmMuxerDelegate11InitSegmentEPN8mkvmuxer7SegmentE to i8*), i8* bitcast (i32 (%"class.media::LiveWebmMuxerDelegate"*, i8*, i32)* @_ZN5media21LiveWebmMuxerDelegate7DoWriteEPKvj to i8*)] }, align 8

@_ZN5media21LiveWebmMuxerDelegateC1EN4base17RepeatingCallbackIFvNS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEEE = hidden unnamed_addr alias void (%"class.media::LiveWebmMuxerDelegate"*, %"class.base::RepeatingCallback"*), void (%"class.media::LiveWebmMuxerDelegate"*, %"class.base::RepeatingCallback"*)* @_ZN5media21LiveWebmMuxerDelegateC2EN4base17RepeatingCallbackIFvNS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEEE
@_ZN5media21LiveWebmMuxerDelegateD1Ev = hidden unnamed_addr alias void (%"class.media::LiveWebmMuxerDelegate"*), void (%"class.media::LiveWebmMuxerDelegate"*)* @_ZN5media21LiveWebmMuxerDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21LiveWebmMuxerDelegateC2EN4base17RepeatingCallbackIFvNS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEEEE(%"class.media::LiveWebmMuxerDelegate"*, %"class.base::RepeatingCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0
  tail call void @_ZN5media9WebmMuxer8DelegateC2Ev(%"class.media::WebmMuxer::Delegate"* %3) #7
  %4 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5media21LiveWebmMuxerDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::RepeatingCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

declare void @_ZN5media9WebmMuxer8DelegateC2Ev(%"class.media::WebmMuxer::Delegate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21LiveWebmMuxerDelegateD2Ev(%"class.media::LiveWebmMuxerDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5media21LiveWebmMuxerDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0
  tail call void @_ZN5media9WebmMuxer8DelegateD2Ev(%"class.media::WebmMuxer::Delegate"* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media9WebmMuxer8DelegateD2Ev(%"class.media::WebmMuxer::Delegate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21LiveWebmMuxerDelegateD0Ev(%"class.media::LiveWebmMuxerDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5media21LiveWebmMuxerDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0
  tail call void @_ZN5media9WebmMuxer8DelegateD2Ev(%"class.media::WebmMuxer::Delegate"* %4) #7
  %5 = bitcast %"class.media::LiveWebmMuxerDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21LiveWebmMuxerDelegate11InitSegmentEPN8mkvmuxer7SegmentE(%"class.media::LiveWebmMuxerDelegate"*, %"class.mkvmuxer::Segment"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZN8mkvmuxer7Segment4InitEPNS_10IMkvWriterE(%"class.mkvmuxer::Segment"* %1, %"class.mkvmuxer::IMkvWriter"* %3) #7
  %5 = getelementptr inbounds %"class.mkvmuxer::Segment", %"class.mkvmuxer::Segment"* %1, i64 0, i32 33
  store i32 1, i32* %5, align 8
  tail call void @_ZN8mkvmuxer7Segment10OutputCuesEb(%"class.mkvmuxer::Segment"* %1, i1 zeroext false) #7
  ret void
}

declare zeroext i1 @_ZN8mkvmuxer7Segment4InitEPNS_10IMkvWriterE(%"class.mkvmuxer::Segment"*, %"class.mkvmuxer::IMkvWriter"*) local_unnamed_addr #1

declare void @_ZN8mkvmuxer7Segment10OutputCuesEb(%"class.mkvmuxer::Segment"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media21LiveWebmMuxerDelegate8PositionEv(%"class.media::LiveWebmMuxerDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6, !prof !3

5:                                                ; preds = %1
  tail call void @llvm.trap() #7
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  ret i64 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5media21LiveWebmMuxerDelegate8PositionEx(%"class.media::LiveWebmMuxerDelegate"* nocapture readnone, i64) unnamed_addr #5 align 2 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5media21LiveWebmMuxerDelegate8SeekableEv(%"class.media::LiveWebmMuxerDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media21LiveWebmMuxerDelegate18ElementStartNotifyEyx(%"class.media::LiveWebmMuxerDelegate"* nocapture, i64, i64) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media21LiveWebmMuxerDelegate7DoWriteEPKvj(%"class.media::LiveWebmMuxerDelegate"* nocapture readonly, i8*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = zext i32 %2 to i64
  %6 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.media::LiveWebmMuxerDelegate", %"class.media::LiveWebmMuxerDelegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*, %"class.base::BasicStringPiece"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*, %"class.base::BasicStringPiece"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::BasicStringPiece"*)** %12, align 8
  call void %13(%"class.base::internal::BindStateBase"* %10, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  ret i32 0
}

declare i32 @_ZN5media9WebmMuxer8Delegate5WriteEPKvj(%"class.media::WebmMuxer::Delegate"*, i8*, i32) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
