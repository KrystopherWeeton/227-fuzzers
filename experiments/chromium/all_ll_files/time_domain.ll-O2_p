; ModuleID = '../../base/task/sequence_manager/time_domain.cc'
source_filename = "../../base/task/sequence_manager/time_domain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap.136", i32, %class.scoped_refptr }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type { %"class.base::sequence_manager::SequenceManager", %"class.base::sequence_manager::internal::SequencedTaskSource", %"class.base::sequence_manager::internal::TaskQueueSelector::Observer", %"class.base::RunLoop::NestingObserver", %class.scoped_refptr, %"class.base::sequence_manager::internal::EnqueueOrderGenerator", %"class.std::__1::unique_ptr", %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", i32, %"class.base::sequence_manager::internal::AtomicFlagSet", i32, %"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly", %"class.base::WeakPtrFactory" }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.base::sequence_manager::internal::SequencedTaskSource" = type { i32 (...)** }
%"class.base::sequence_manager::internal::TaskQueueSelector::Observer" = type { i32 (...)** }
%"class.base::RunLoop::NestingObserver" = type { i32 (...)** }
%"class.base::sequence_manager::internal::EnqueueOrderGenerator" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::ThreadController"* }
%"class.base::sequence_manager::internal::ThreadController" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings" = type { double }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.7", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.1", i64, [64 x %"class.base::RepeatingCallback.146"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.7", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.base::RepeatingCallback.146" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly" = type { i32, %"class.base::circular_deque", %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.std::__1::array.68", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::uniform_real_distribution", %"class.base::sequence_manager::internal::TaskQueueSelector", %"class.base::ObserverList", %"class.base::ObserverList.70", %"class.std::__1::set", %"class.std::__1::unique_ptr.83", i8, %"class.base::TimeTicks", %"class.std::__1::set.89", %"class.std::__1::map", %"class.std::__1::map", i8, i8, %"class.std::__1::deque", %"class.base::sequence_manager::SequenceManager::Observer"*, %"class.base::ObserverList.116", %"class.std::__1::multiset" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask"*, i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask" = type <{ %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i32, [4 x i8] }>
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.15, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.15 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.17, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.17 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.18", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.19", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.24, i8, [7 x i8] }>
%class.scoped_refptr.24 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.25", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.29", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type { i64, i64, i64, %"struct.base::sequence_manager::Task"*, %"class.std::__1::unique_ptr.29" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.61", %"class.base::RepeatingCallback.62", %"class.absl::optional.63", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type <{ %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i64, %"class.base::HeapHandle", i8*, %"class.base::sequence_manager::EnqueueOrder", i32, [4 x i8] }>
%"class.base::sequence_manager::internal::WorkQueueSets" = type { i8*, %"struct.std::__1::array.38", %"class.base::sequence_manager::internal::WorkQueueSets::Observer"* }
%"struct.std::__1::array.38" = type { [7 x %"class.base::internal::IntrusiveHeap"] }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"class.std::__1::__compressed_pair.39" }
%"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder" = type { %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"* }
%"class.base::sequence_manager::internal::WorkQueueSets::Observer" = type { i32 (...)** }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.47", %"struct.std::__1::less" }>
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type opaque
%"class.base::RepeatingCallback.61" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.62" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"struct.std::__1::array.68" = type { [64 x i8] }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.std::__1::uniform_real_distribution" = type { %"class.std::__1::uniform_real_distribution<double>::param_type" }
%"class.std::__1::uniform_real_distribution<double>::param_type" = type { double, double }
%"class.base::sequence_manager::internal::TaskQueueSelector" = type { %"class.base::sequence_manager::internal::WorkQueueSets::Observer", %class.scoped_refptr, %"struct.std::__1::array.69", %"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker", %"class.base::sequence_manager::internal::WorkQueueSets", %"class.base::sequence_manager::internal::WorkQueueSets", i64, %"class.base::sequence_manager::internal::TaskQueueSelector::Observer"* }
%"struct.std::__1::array.69" = type { [7 x i32] }
%"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.56" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.70" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList.71", i64, i32, [4 x i8] }>
%"class.base::LinkedList.71" = type { %"class.base::LinkNode.72" }
%"class.base::LinkNode.72" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.base::sequence_manager::internal::RealTimeDomain"* }
%"class.base::sequence_manager::internal::RealTimeDomain" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.99" }
%"class.std::__1::__tree.99" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::__split_buffer" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"class.std::__1::__compressed_pair.107" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask" = type { %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, %"class.base::sequence_manager::TaskQueue::TaskTiming", i8, i32 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.106" }
%"class.base::time_internal::TimeBase.106" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"** }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::ObserverList.116" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList.117", i64, i32, [4 x i8] }>
%"class.base::LinkedList.117" = type { %"class.base::LinkNode.118" }
%"class.base::LinkNode.118" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.130", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.130" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.131" }
%"struct.std::__1::atomic.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__cxx_atomic_impl.134" }
%"struct.std::__1::__cxx_atomic_impl.134" = type { %"struct.std::__1::__cxx_atomic_base_impl.135" }
%"struct.std::__1::__cxx_atomic_base_impl.135" = type { i8 }
%"class.base::internal::IntrusiveHeap.136" = type { %"class.base::IntrusiveHeap.137" }
%"class.base::IntrusiveHeap.137" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector.139" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.141" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.152" }
%"union.absl::variant_internal::DestructibleUnionImpl.152" = type { %"union.absl::variant_internal::DestructibleUnionImpl.153" }
%"union.absl::variant_internal::DestructibleUnionImpl.153" = type { %"union.absl::variant_internal::DestructibleUnionImpl.154" }
%"union.absl::variant_internal::DestructibleUnionImpl.154" = type { %"union.absl::variant_internal::DestructibleUnionImpl.155" }
%"union.absl::variant_internal::DestructibleUnionImpl.155" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.158 }
%union.anon.158 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeDelta" = type { i64 }

$_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE17MoveHoleUpAndFillIS3_EEmmT_ = comdat any

$_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE19MoveHoleDownAndFillINSA_11WithElementES3_EEmmT0_ = comdat any

$_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE8MoveHoleEmm = comdat any

$_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE5eraseEm = comdat any

@_ZTVN4base16sequence_manager10TimeDomainE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomainD2Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomainD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)* @_ZN4base16sequence_manager10TimeDomain20SetNextDelayedDoWorkEPNS0_7LazyNowENS_9TimeTicksE to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*)* @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"registered_delay_count\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"next_delay_ms\00", align 1

@_ZN4base16sequence_manager10TimeDomainD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::TimeDomain"*), void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomainD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomainC2Ev(%"class.base::sequence_manager::TimeDomain"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base16sequence_manager10TimeDomainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 1
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* null, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %5 to i64*
  %7 = bitcast %"class.base::internal::IntrusiveHeap.136"* %4 to i64*
  %8 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %8 to i64*
  %10 = tail call i8* @_Znwm(i64 96) #10
  %11 = ptrtoint i8* %10 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 96
  %13 = ptrtoint i8* %12 to i64
  store i64 %11, i64* %7, align 8
  store i64 %11, i64* %9, align 8
  store i64 %13, i64* %6, align 8
  %14 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 3
  store i32 0, i32* %14, align 8
  %15 = tail call i8* @_Znwm(i64 8) #10
  %16 = bitcast i8* %15 to %"class.base::sequence_manager::internal::AssociatedThreadId"*
  tail call void @_ZN4base16sequence_manager8internal18AssociatedThreadIdC1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"* nonnull %16) #11
  %17 = bitcast i8* %15 to i32*
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 4, i32 0
  %20 = bitcast %"class.base::sequence_manager::internal::AssociatedThreadId"** %19 to i8**
  store i8* %15, i8** %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base16sequence_manager10TimeDomainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %3, align 8
  %5 = icmp eq %"class.base::sequence_manager::internal::AssociatedThreadId"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"* nonnull %4) #11
  %11 = bitcast %"class.base::sequence_manager::internal::AssociatedThreadId"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::IntrusiveHeap.137"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %33, label %20

20:                                               ; preds = %12, %20
  %21 = phi i64 [ %29, %20 ], [ %18, %12 ]
  %22 = phi i64 [ %27, %20 ], [ 0, %12 ]
  %23 = inttoptr i64 %21 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %24 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %23, i64 %22, i32 1
  %25 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %25, i64 0, i32 6, i32 6, i32 0
  store i64 -1, i64* %26, align 8
  %27 = add nuw i64 %22, 1
  %28 = load i64, i64* %15, align 8
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %28, %29
  %31 = sdiv exact i64 %30, 24
  %32 = icmp ult i64 %27, %31
  br i1 %32, label %20, label %33

33:                                               ; preds = %20, %12
  %34 = phi i64 [ %16, %12 ], [ %29, %20 ]
  store i64 %34, i64* %15, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  store i64 %34, i64* %15, align 8
  %37 = inttoptr i64 %34 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %33, %36
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomainD0Ev(%"class.base::sequence_manager::TimeDomain"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE(%"class.base::sequence_manager::TimeDomain"* nocapture, %"class.base::sequence_manager::internal::SequenceManagerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 1
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %1, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::SequenceManagerImpl", %"class.base::sequence_manager::internal::SequenceManagerImpl"* %1, i64 0, i32 4, i32 0
  %5 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %4, align 8
  %6 = icmp eq %"class.base::sequence_manager::internal::AssociatedThreadId"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 4
  %12 = ptrtoint %"class.base::sequence_manager::internal::AssociatedThreadId"* %5 to i64
  %13 = bitcast %class.scoped_refptr* %11 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %15 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.base::sequence_manager::internal::AssociatedThreadId"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  tail call void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"* nonnull %15) #11
  %22 = bitcast %"class.base::sequence_manager::internal::AssociatedThreadId"* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %10, %17, %21
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::sequence_manager::SequenceManager"* @_ZNK4base16sequence_manager10TimeDomain16sequence_managerEv(%"class.base::sequence_manager::TimeDomain"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 1
  %3 = bitcast %"class.base::sequence_manager::internal::SequenceManagerImpl"** %2 to %"class.base::sequence_manager::SequenceManager"**
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  ret %"class.base::sequence_manager::SequenceManager"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomain20SetNextDelayedDoWorkEPNS0_7LazyNowENS_9TimeTicksE(%"class.base::sequence_manager::TimeDomain"* nocapture readonly, %"class.base::sequence_manager::LazyNow"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 1
  %5 = load %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %4, align 8
  tail call void @_ZN4base16sequence_manager8internal19SequenceManagerImpl20SetNextDelayedDoWorkEPNS0_7LazyNowENS_9TimeTicksE(%"class.base::sequence_manager::internal::SequenceManagerImpl"* %5, %"class.base::sequence_manager::LazyNow"* %1, i64 %2) #11
  ret void
}

declare void @_ZN4base16sequence_manager8internal19SequenceManagerImpl20SetNextDelayedDoWorkEPNS0_7LazyNowENS_9TimeTicksE(%"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::LazyNow"*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv(%"class.base::sequence_manager::TimeDomain"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 1
  %3 = load %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %2, align 8
  tail call void @_ZN4base16sequence_manager8internal19SequenceManagerImpl12ScheduleWorkEv(%"class.base::sequence_manager::internal::SequenceManagerImpl"* %3) #11
  ret void
}

declare void @_ZN4base16sequence_manager8internal19SequenceManagerImpl12ScheduleWorkEv(%"class.base::sequence_manager::internal::SequenceManagerImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomain15UnregisterQueueEPNS0_8internal13TaskQueueImplE(%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::sequence_manager::LazyNow", align 8
  %4 = alloca %"class.absl::optional.63", align 8
  %5 = bitcast %"class.base::sequence_manager::LazyNow"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = bitcast %"class.base::sequence_manager::TimeDomain"* %0 to void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)***
  %7 = load void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)**, void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)** %7, i64 2
  %9 = load void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::TimeDomain"*)** %8, align 8
  call void %9(%"class.base::sequence_manager::LazyNow"* nonnull sret %3, %"class.base::sequence_manager::TimeDomain"* %0) #11
  %10 = getelementptr inbounds %"class.absl::optional.63", %"class.absl::optional.63"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  call void @_ZN4base16sequence_manager10TimeDomain21SetNextWakeUpForQueueEPNS0_8internal13TaskQueueImplEN4absl8optionalINS2_13DelayedWakeUpEEEPNS0_7LazyNowE(%"class.base::sequence_manager::TimeDomain"* %0, %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, %"class.absl::optional.63"* nonnull byval(%"class.absl::optional.63") align 8 %4, %"class.base::sequence_manager::LazyNow"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomain21SetNextWakeUpForQueueEPNS0_8internal13TaskQueueImplEN4absl8optionalINS2_13DelayedWakeUpEEEPNS0_7LazyNowE(%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.absl::optional.63"* nocapture readonly byval(%"class.absl::optional.63") align 8, %"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", align 8
  %6 = alloca %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::internal::IntrusiveHeap.136", %"class.base::internal::IntrusiveHeap.136"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %8, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %10, align 8
  %12 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %9, %11
  %13 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %11 to i64
  %14 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %9 to i64
  br i1 %12, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %15, %4
  %19 = phi i8 [ 0, %4 ], [ 1, %15 ]
  %20 = phi i64 [ -6148914691236517206, %4 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, i64 0, i32 6, i32 6, i32 0
  %22 = load i64, i64* %21, align 8, !noalias !2
  %23 = icmp ne i64 %22, -1
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = sub i64 %13, %14
  %26 = sdiv exact i64 %25, 24
  %27 = icmp ugt i64 %26, %22
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.base::internal::IntrusiveHeap.136"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %9, i64 %22, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  br label %33

33:                                               ; preds = %30, %18
  %34 = phi i8 [ 1, %30 ], [ 0, %18 ]
  %35 = phi i32 [ %32, %30 ], [ -1431655766, %18 ]
  %36 = getelementptr inbounds %"class.absl::optional.63", %"class.absl::optional.63"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !5
  %38 = icmp ne i8 %37, 0
  br i1 %38, label %39, label %82

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.absl::optional.63", %"class.absl::optional.63"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %union.anon.67* %40 to i8*
  %42 = getelementptr inbounds %"class.base::internal::IntrusiveHeap.136", %"class.base::internal::IntrusiveHeap.136"* %7, i64 0, i32 0
  br i1 %23, label %43, label %76

43:                                               ; preds = %39
  %44 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %41, i64 16, i1 false)
  %45 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %5, i64 0, i32 1
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, %"class.base::sequence_manager::internal::TaskQueueImpl"** %45, align 8
  %46 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %9, i64 %22, i32 1
  %47 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %47, i64 0, i32 6, i32 6, i32 0
  store i64 -1, i64* %48, align 8
  %49 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %8, align 8
  %50 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %49, i64 %22, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %51
  br i1 %54, label %55, label %63

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %49, i64 %22, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %5, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %55
  %62 = icmp slt i32 %57, %59
  br i1 %62, label %73, label %71

63:                                               ; preds = %43
  %64 = icmp slt i64 %53, %51
  br i1 %64, label %73, label %71

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %49, i64 %22, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %5, i64 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %67, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %65, %63, %61
  %72 = tail call i64 @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE17MoveHoleUpAndFillIS3_EEmmT_(%"class.base::IntrusiveHeap.137"* %42, i64 %22, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* nonnull byval(%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp") align 8 %5) #11
  br label %75

73:                                               ; preds = %65, %63, %61
  %74 = tail call i64 @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE19MoveHoleDownAndFillINSA_11WithElementES3_EEmmT0_(%"class.base::IntrusiveHeap.137"* %42, i64 %22, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* nonnull byval(%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp") align 8 %5) #11
  br label %75

75:                                               ; preds = %71, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  br label %85

76:                                               ; preds = %39
  %77 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %41, i64 16, i1 false)
  %78 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %6, i64 0, i32 1
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, %"class.base::sequence_manager::internal::TaskQueueImpl"** %78, align 8
  %79 = sub i64 %13, %14
  %80 = sdiv exact i64 %79, 24
  %81 = tail call i64 @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE17MoveHoleUpAndFillIS3_EEmmT_(%"class.base::IntrusiveHeap.137"* %42, i64 %80, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* nonnull byval(%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp") align 8 %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  br label %85

82:                                               ; preds = %33
  br i1 %23, label %83, label %85

83:                                               ; preds = %82
  %84 = getelementptr inbounds %"class.base::internal::IntrusiveHeap.136", %"class.base::internal::IntrusiveHeap.136"* %7, i64 0, i32 0
  tail call void @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE5eraseEm(%"class.base::IntrusiveHeap.137"* %84, i64 %22) #11
  br label %85

85:                                               ; preds = %82, %83, %75, %76
  %86 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %8, align 8
  %87 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %10, align 8
  %88 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %89, %85
  %93 = phi i64 [ -6148914691236517206, %85 ], [ %91, %89 ]
  %94 = phi i8 [ 0, %85 ], [ 1, %89 ]
  %95 = icmp ne i8 %34, 0
  %96 = icmp eq i32 %35, 1
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %102

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = add nsw i32 %100, -1
  store i32 %101, i32* %99, align 8
  br label %102

102:                                              ; preds = %98, %92
  br i1 %38, label %103, label %111

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.absl::optional.63", %"class.absl::optional.63"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %108, align 8
  br label %111

111:                                              ; preds = %107, %103, %102
  %112 = icmp ne i8 %94, 0
  %113 = icmp ne i8 %19, 0
  %114 = xor i1 %113, %112
  %115 = xor i1 %112, true
  %116 = or i1 %114, %115
  br i1 %116, label %122, label %117

117:                                              ; preds = %111
  %118 = icmp eq i8 %19, 0
  br i1 %118, label %119, label %120, !prof !6

119:                                              ; preds = %117
  tail call void @llvm.trap() #11
  unreachable

120:                                              ; preds = %117
  %121 = icmp eq i64 %93, %20
  br i1 %121, label %137, label %123

122:                                              ; preds = %111
  br i1 %114, label %123, label %137

123:                                              ; preds = %122, %120
  %124 = select i1 %112, i64 %93, i64 9223372036854775807
  %125 = tail call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* %3) #11
  %126 = icmp sgt i64 %124, %125
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.base::sequence_manager::TimeDomain"* %0 to void (%"class.base::sequence_manager::TimeDomain"*)***
  %129 = load void (%"class.base::sequence_manager::TimeDomain"*)**, void (%"class.base::sequence_manager::TimeDomain"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::TimeDomain"*)** %129, i64 7
  %131 = load void (%"class.base::sequence_manager::TimeDomain"*)*, void (%"class.base::sequence_manager::TimeDomain"*)** %130, align 8
  tail call void %131(%"class.base::sequence_manager::TimeDomain"* %0) #11
  br label %137

132:                                              ; preds = %123
  %133 = bitcast %"class.base::sequence_manager::TimeDomain"* %0 to void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)***
  %134 = load void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)**, void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)*, void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)** %134, i64 6
  %136 = load void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)*, void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)** %135, align 8
  tail call void %136(%"class.base::sequence_manager::TimeDomain"* %0, %"class.base::sequence_manager::LazyNow"* %3, i64 %124) #11
  br label %137

137:                                              ; preds = %122, %120, %127, %132
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager10TimeDomain33MoveReadyDelayedTasksToWorkQueuesEPNS0_7LazyNowE(%"class.base::sequence_manager::TimeDomain"* nocapture readonly, %"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %3, align 8
  %5 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %5, align 8
  %7 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %4, %6
  br i1 %7, label %21, label %8

8:                                                ; preds = %2, %14
  %9 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %18, %14 ], [ %4, %2 ]
  %10 = tail call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* %1) #11
  %11 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp sgt i64 %12, %10
  br i1 %13, label %21, label %14

14:                                               ; preds = %8
  %15 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %3, align 8
  %16 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %15, i64 0, i32 1
  %17 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %16, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl32MoveReadyDelayedTasksToWorkQueueEPNS0_7LazyNowE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %17, %"class.base::sequence_manager::LazyNow"* %1) #11
  %18 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %3, align 8
  %19 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %5, align 8
  %20 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %18, %19
  br i1 %20, label %21, label %8

21:                                               ; preds = %14, %8, %2
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl32MoveReadyDelayedTasksToWorkQueueEPNS0_7LazyNowE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %2, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %4, align 8
  %6 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i64 [ %9, %7 ], [ undef, %1 ]
  %12 = phi i8 [ 1, %7 ], [ 0, %1 ]
  %13 = insertvalue { i8, i64 } undef, i8 %12, 0
  %14 = insertvalue { i8, i64 } %13, i64 %11, 1
  ret { i8, i64 } %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base16sequence_manager10TimeDomain7AsValueEv(%"class.base::Value"* noalias sret, %"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #11
  %5 = bitcast %"class.base::sequence_manager::TimeDomain"* %1 to i8* (%"class.base::sequence_manager::TimeDomain"*)***
  %6 = load i8* (%"class.base::sequence_manager::TimeDomain"*)**, i8* (%"class.base::sequence_manager::TimeDomain"*)*** %5, align 8
  %7 = getelementptr inbounds i8* (%"class.base::sequence_manager::TimeDomain"*)*, i8* (%"class.base::sequence_manager::TimeDomain"*)** %6, i64 8
  %8 = load i8* (%"class.base::sequence_manager::TimeDomain"*)*, i8* (%"class.base::sequence_manager::TimeDomain"*)** %7, align 8
  %9 = tail call i8* %8(%"class.base::sequence_manager::TimeDomain"* %1) #11
  %10 = tail call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, i8* %9) #11
  %11 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"class.base::sequence_manager::TimeDomain", %"class.base::sequence_manager::TimeDomain"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::internal::IntrusiveHeap.136"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 24
  %19 = trunc i64 %18 to i32
  %20 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i64 22, i32 %19) #11
  %21 = getelementptr inbounds %"class.base::internal::IntrusiveHeap.136", %"class.base::internal::IntrusiveHeap.136"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %21, align 8
  %23 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %12, align 8
  %24 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %22, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %27, align 8
  %28 = bitcast %"class.base::sequence_manager::TimeDomain"* %1 to i64 (%"class.base::sequence_manager::TimeDomain"*)***
  %29 = load i64 (%"class.base::sequence_manager::TimeDomain"*)**, i64 (%"class.base::sequence_manager::TimeDomain"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.base::sequence_manager::TimeDomain"*)*, i64 (%"class.base::sequence_manager::TimeDomain"*)** %29, i64 3
  %31 = load i64 (%"class.base::sequence_manager::TimeDomain"*)*, i64 (%"class.base::sequence_manager::TimeDomain"*)** %30, align 8
  %32 = tail call i64 %31(%"class.base::sequence_manager::TimeDomain"* %1) #11
  %33 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = sub nsw i64 %34, %32
  store i64 %35, i64* %27, align 8
  %36 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #11
  %37 = call %"class.base::Value"* @_ZN4base5Value12SetDoubleKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13, double %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %38

38:                                               ; preds = %2, %25
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"*, i8*, i64, i8*) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value12SetDoubleKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::Value"*, i8*, i64, double) local_unnamed_addr #4

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4base16sequence_manager8internal18AssociatedThreadIdC1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"*) unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE17MoveHoleUpAndFillIS3_EEmmT_(%"class.base::IntrusiveHeap.137"*, i64, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* byval(%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp") align 8) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = load i32, i32* %7, align 4
  br label %14

14:                                               ; preds = %6, %34
  %15 = phi i64 [ %1, %6 ], [ %17, %34 ]
  %16 = add i64 %15, -1
  %17 = lshr i64 %16, 1
  %18 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %8, align 8
  %19 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %18, i64 %17, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %10, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %18, i64 %17, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %12, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = icmp slt i32 %12, %24
  br i1 %27, label %34, label %36

28:                                               ; preds = %14
  %29 = icmp slt i64 %10, %20
  br i1 %29, label %34, label %36

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %18, i64 %17, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %13, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %30, %26, %28
  tail call void @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE8MoveHoleEmm(%"class.base::IntrusiveHeap.137"* %0, i64 %17, i64 %15)
  %35 = icmp eq i64 %17, 0
  br i1 %35, label %36, label %14

36:                                               ; preds = %34, %26, %28, %30, %3
  %37 = phi i64 [ 0, %3 ], [ %15, %30 ], [ %15, %28 ], [ %15, %26 ], [ 0, %34 ]
  %38 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2 to i8*
  %39 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %38, i64 24, i1 false)
  %40 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::IntrusiveHeap.137"* %0 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = sdiv exact i64 %45, 24
  %47 = icmp eq i64 %46, %37
  %48 = inttoptr i64 %42 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  br i1 %47, label %49, label %105

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %50, align 8
  %52 = icmp ugt %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %51, %48
  %53 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %51 to i64
  br i1 %52, label %54, label %58

54:                                               ; preds = %49
  %55 = inttoptr i64 %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %39, i64 24, i1 false) #11
  %56 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %48, i64 1
  %57 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %56 to i64
  store i64 %57, i64* %41, align 8
  br label %109

58:                                               ; preds = %49
  %59 = add nsw i64 %37, 1
  %60 = icmp ugt i64 %59, 768614336404564650
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = bitcast %"class.base::IntrusiveHeap.137"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #12
  unreachable

63:                                               ; preds = %58
  %64 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %50 to i64*
  %65 = sub i64 %53, %44
  %66 = sdiv exact i64 %65, 24
  %67 = icmp ult i64 %66, 384307168202282325
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = shl nsw i64 %66, 1
  %70 = icmp ult i64 %69, %59
  %71 = select i1 %70, i64 %59, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %68, %63
  %74 = phi i64 [ %71, %68 ], [ 768614336404564650, %63 ]
  %75 = mul i64 %74, 24
  %76 = tail call i8* @_Znwm(i64 %75) #10
  %77 = bitcast i8* %76 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  br label %78

78:                                               ; preds = %73, %68
  %79 = phi i64 [ %74, %73 ], [ 0, %68 ]
  %80 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %77, %73 ], [ null, %68 ]
  %81 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %80, i64 %37
  %82 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %80, i64 %79
  %83 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %82 to i64
  %84 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %39, i64 24, i1 false) #11
  %85 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %81, i64 1
  %86 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %85 to i64
  %87 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %87, align 8
  %89 = load i64, i64* %41, align 8
  %90 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %88 to i64
  %91 = sub i64 %89, %90
  %92 = sdiv exact i64 %91, -24
  %93 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %81, i64 %92
  %94 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %93 to i64
  %95 = icmp sgt i64 %91, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %78
  %97 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %93 to i8*
  %98 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %91, i1 false) #11
  %99 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %87, align 8
  br label %100

100:                                              ; preds = %96, %78
  %101 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %88, %78 ], [ %99, %96 ]
  store i64 %94, i64* %43, align 8
  store i64 %86, i64* %41, align 8
  store i64 %83, i64* %64, align 8
  %102 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %100
  %104 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %101 to i8*
  tail call void @_ZdlPv(i8* %104) #10
  br label %109

105:                                              ; preds = %36
  %106 = inttoptr i64 %44 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %107 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %106, i64 %37
  %108 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %39, i64 24, i1 false) #11
  br label %109

109:                                              ; preds = %103, %100, %54, %105
  %110 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %110, align 8
  %112 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %111, i64 %37, i32 1
  %113 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %113, i64 0, i32 6, i32 6, i32 0
  store i64 %37, i64* %114, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  ret i64 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE19MoveHoleDownAndFillINSA_11WithElementES3_EEmmT0_(%"class.base::IntrusiveHeap.137"*, i64, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* byval(%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp") align 8) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", align 8
  %5 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::IntrusiveHeap.137"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = shl i64 %1, 1
  %13 = or i64 %12, 1
  %14 = icmp ult i64 %13, %11
  br i1 %14, label %15, label %85

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2, i64 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %15, %71
  %24 = phi i64 [ %13, %15 ], [ %73, %71 ]
  %25 = phi i64 [ %1, %15 ], [ %55, %71 ]
  %26 = add nuw i64 %24, 1
  %27 = icmp ult i64 %26, %11
  %28 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %16, align 8
  br i1 %27, label %29, label %54

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %24, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %26, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, %31
  br i1 %34, label %35, label %49

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %26, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %24, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %26, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %24, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp sle i32 %43, %45
  br label %51

47:                                               ; preds = %35
  %48 = icmp slt i32 %37, %39
  br label %51

49:                                               ; preds = %29
  %50 = icmp slt i64 %33, %31
  br label %51

51:                                               ; preds = %41, %47, %49
  %52 = phi i1 [ %48, %47 ], [ %50, %49 ], [ %46, %41 ]
  %53 = select i1 %52, i64 %26, i64 %24
  br label %54

54:                                               ; preds = %23, %51
  %55 = phi i64 [ %53, %51 ], [ %24, %23 ]
  %56 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %55, i32 0, i32 0, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %55, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, %20
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = icmp slt i32 %61, %20
  br i1 %64, label %71, label %77

65:                                               ; preds = %54
  %66 = icmp slt i64 %57, %18
  br i1 %66, label %71, label %77

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28, i64 %55, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, %22
  br i1 %70, label %77, label %71

71:                                               ; preds = %67, %63, %65
  tail call void @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE8MoveHoleEmm(%"class.base::IntrusiveHeap.137"* %0, i64 %55, i64 %25)
  %72 = shl i64 %55, 1
  %73 = or i64 %72, 1
  %74 = icmp ult i64 %73, %11
  br i1 %74, label %23, label %75

75:                                               ; preds = %71
  %76 = load i64, i64* %8, align 8
  br label %79

77:                                               ; preds = %65, %63, %67
  %78 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %28 to i64
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i64 [ %76, %75 ], [ %78, %77 ]
  %81 = phi i64 [ %55, %75 ], [ %25, %77 ]
  %82 = load i64, i64* %6, align 8
  %83 = sub i64 %82, %80
  %84 = sdiv exact i64 %83, 24
  br label %85

85:                                               ; preds = %79, %3
  %86 = phi i64 [ %84, %79 ], [ %11, %3 ]
  %87 = phi i64 [ %82, %79 ], [ %7, %3 ]
  %88 = phi i64 [ %80, %79 ], [ %9, %3 ]
  %89 = phi i64 [ %81, %79 ], [ %1, %3 ]
  %90 = inttoptr i64 %87 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %91 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %2 to i8*
  %92 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 8 %91, i64 24, i1 false)
  %93 = icmp eq i64 %86, %89
  br i1 %93, label %94, label %152

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %95, align 8
  %97 = icmp ugt %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %96, %90
  %98 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %96 to i64
  br i1 %97, label %99, label %103

99:                                               ; preds = %94
  %100 = inttoptr i64 %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %92, i64 24, i1 false) #11
  %101 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %90, i64 1
  %102 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %101 to i64
  store i64 %102, i64* %6, align 8
  br label %156

103:                                              ; preds = %94
  %104 = sub i64 %87, %88
  %105 = sdiv exact i64 %104, 24
  %106 = add nsw i64 %105, 1
  %107 = icmp ugt i64 %106, 768614336404564650
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = bitcast %"class.base::IntrusiveHeap.137"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #12
  unreachable

110:                                              ; preds = %103
  %111 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %95 to i64*
  %112 = sub i64 %98, %88
  %113 = sdiv exact i64 %112, 24
  %114 = icmp ult i64 %113, 384307168202282325
  br i1 %114, label %115, label %120

115:                                              ; preds = %110
  %116 = shl nsw i64 %113, 1
  %117 = icmp ult i64 %116, %106
  %118 = select i1 %117, i64 %106, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %115, %110
  %121 = phi i64 [ %118, %115 ], [ 768614336404564650, %110 ]
  %122 = mul i64 %121, 24
  %123 = tail call i8* @_Znwm(i64 %122) #10
  %124 = bitcast i8* %123 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  br label %125

125:                                              ; preds = %120, %115
  %126 = phi i64 [ %121, %120 ], [ 0, %115 ]
  %127 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %124, %120 ], [ null, %115 ]
  %128 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %127, i64 %105
  %129 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %127, i64 %126
  %130 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %129 to i64
  %131 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %92, i64 24, i1 false) #11
  %132 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %128, i64 1
  %133 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %132 to i64
  %134 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %134, align 8
  %136 = load i64, i64* %6, align 8
  %137 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %135 to i64
  %138 = sub i64 %136, %137
  %139 = sdiv exact i64 %138, -24
  %140 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %128, i64 %139
  %141 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %140 to i64
  %142 = icmp sgt i64 %138, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %125
  %144 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %140 to i8*
  %145 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 %138, i1 false) #11
  %146 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %134, align 8
  br label %147

147:                                              ; preds = %143, %125
  %148 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %135, %125 ], [ %146, %143 ]
  store i64 %141, i64* %8, align 8
  store i64 %133, i64* %6, align 8
  store i64 %130, i64* %111, align 8
  %149 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %148, null
  br i1 %149, label %156, label %150

150:                                              ; preds = %147
  %151 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %148 to i8*
  tail call void @_ZdlPv(i8* %151) #10
  br label %156

152:                                              ; preds = %85
  %153 = inttoptr i64 %88 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %154 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %153, i64 %89
  %155 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* nonnull align 8 %92, i64 24, i1 false) #11
  br label %156

156:                                              ; preds = %150, %147, %99, %152
  %157 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %158 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %157, align 8
  %159 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %158, i64 %89, i32 1
  %160 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %159, align 8
  %161 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %160, i64 0, i32 6, i32 6, i32 0
  store i64 %89, i64* %161, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  ret i64 %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE8MoveHoleEmm(%"class.base::IntrusiveHeap.137"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::IntrusiveHeap.137"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %10, %2
  %12 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = inttoptr i64 %8 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %14 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %13, i64 %1
  %15 = inttoptr i64 %6 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  br i1 %11, label %16, label %73

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %17, align 8
  %19 = icmp ugt %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %18, %15
  %20 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %18 to i64
  br i1 %19, label %21, label %26

21:                                               ; preds = %16
  %22 = inttoptr i64 %6 to i8*
  %23 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #11
  %24 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %15, i64 1
  %25 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %24 to i64
  store i64 %25, i64* %5, align 8
  br label %77

26:                                               ; preds = %16
  %27 = add nsw i64 %2, 1
  %28 = icmp ugt i64 %27, 768614336404564650
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = bitcast %"class.base::IntrusiveHeap.137"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #12
  unreachable

31:                                               ; preds = %26
  %32 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %17 to i64*
  %33 = sub i64 %20, %8
  %34 = sdiv exact i64 %33, 24
  %35 = icmp ult i64 %34, 384307168202282325
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = shl nsw i64 %34, 1
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36, %31
  %42 = phi i64 [ %39, %36 ], [ 768614336404564650, %31 ]
  %43 = mul i64 %42, 24
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  br label %46

46:                                               ; preds = %41, %36
  %47 = phi i64 [ %42, %41 ], [ 0, %36 ]
  %48 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %45, %41 ], [ null, %36 ]
  %49 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %48, i64 %2
  %50 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %48, i64 %47
  %51 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %50 to i64
  %52 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %49 to i8*
  %53 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  %54 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %49, i64 1
  %55 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %54 to i64
  %56 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %12, align 8
  %57 = load i64, i64* %5, align 8
  %58 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %56 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, -24
  %61 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %49, i64 %60
  %62 = ptrtoint %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %61 to i64
  %63 = icmp sgt i64 %59, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %46
  %65 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %61 to i8*
  %66 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %59, i1 false) #11
  %67 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %12, align 8
  br label %68

68:                                               ; preds = %64, %46
  %69 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %56, %46 ], [ %67, %64 ]
  store i64 %62, i64* %7, align 8
  store i64 %55, i64* %5, align 8
  store i64 %51, i64* %32, align 8
  %70 = icmp eq %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #10
  br label %77

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %13, i64 %2
  %75 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %74 to i8*
  %76 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false)
  br label %77

77:                                               ; preds = %71, %68, %21, %73
  %78 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %12, align 8
  %79 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %78, i64 %2, i32 1
  %80 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %80, i64 0, i32 6, i32 6, i32 0
  store i64 %2, i64* %81, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE5eraseEm(%"class.base::IntrusiveHeap.137"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", align 8
  %4 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %4, align 8
  %6 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %5, i64 %1, i32 1
  %7 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %7, i64 0, i32 6, i32 6, i32 0
  store i64 -1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::IntrusiveHeap.137", %"class.base::IntrusiveHeap.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::IntrusiveHeap.137"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 24
  %16 = add nsw i64 %15, -1
  %17 = icmp eq i64 %16, %1
  %18 = inttoptr i64 %11 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  br i1 %17, label %76, label %19

19:                                               ; preds = %2
  %20 = inttoptr i64 %13 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %21 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %20, i64 %16, i32 1
  %22 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl", %"class.base::sequence_manager::internal::TaskQueueImpl"* %22, i64 0, i32 6, i32 6, i32 0
  store i64 -1, i64* %23, align 8
  %24 = load i64, i64* %10, align 8
  %25 = load i64, i64* %12, align 8
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 24
  %28 = add nsw i64 %27, -1
  %29 = inttoptr i64 %25 to %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*
  %30 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %29, i64 %28
  %31 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %30 to i8*
  %32 = bitcast %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %31, i64 24, i1 false)
  %33 = shl i64 %1, 1
  %34 = or i64 %33, 1
  %35 = icmp ult i64 %34, %28
  br i1 %35, label %36, label %72

36:                                               ; preds = %19, %67
  %37 = phi i64 [ %70, %67 ], [ %34, %19 ]
  %38 = phi i64 [ %68, %67 ], [ %1, %19 ]
  %39 = add nuw i64 %37, 1
  %40 = icmp ult i64 %39, %28
  br i1 %40, label %41, label %67

41:                                               ; preds = %36
  %42 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %4, align 8
  %43 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %42, i64 %37, i32 0, i32 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %42, i64 %39, i32 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %44
  br i1 %47, label %48, label %62

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %42, i64 %39, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %42, i64 %37, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %42, i64 %39, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %42, i64 %37, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp sle i32 %56, %58
  br label %64

60:                                               ; preds = %48
  %61 = icmp slt i32 %50, %52
  br label %64

62:                                               ; preds = %41
  %63 = icmp slt i64 %46, %44
  br label %64

64:                                               ; preds = %62, %60, %54
  %65 = phi i1 [ %61, %60 ], [ %63, %62 ], [ %59, %54 ]
  %66 = select i1 %65, i64 %39, i64 %37
  br label %67

67:                                               ; preds = %64, %36
  %68 = phi i64 [ %37, %36 ], [ %66, %64 ]
  tail call void @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE8MoveHoleEmm(%"class.base::IntrusiveHeap.137"* %0, i64 %68, i64 %38) #11
  %69 = shl i64 %68, 1
  %70 = or i64 %69, 1
  %71 = icmp ult i64 %70, %28
  br i1 %71, label %36, label %72

72:                                               ; preds = %67, %19
  %73 = phi i64 [ %1, %19 ], [ %68, %67 ]
  %74 = tail call i64 @_ZN4base13IntrusiveHeapINS_16sequence_manager10TimeDomain22ScheduledDelayedWakeUpENS_8internal17IntrusiveHeapImplIS3_E21GreaterUsingLessEqualENS_25DefaultHeapHandleAccessorIS3_EEE17MoveHoleUpAndFillIS3_EEmmT_(%"class.base::IntrusiveHeap.137"* %0, i64 %73, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* nonnull byval(%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp") align 8 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %75 = load %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %9, align 8
  br label %76

76:                                               ; preds = %2, %72
  %77 = phi %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* [ %18, %2 ], [ %75, %72 ]
  %78 = getelementptr inbounds %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp", %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %77, i64 -1
  store %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* %78, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"** %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16sequence_manager8internal13TaskQueueImpl11heap_handleEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16sequence_manager8internal13TaskQueueImpl11heap_handleEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
