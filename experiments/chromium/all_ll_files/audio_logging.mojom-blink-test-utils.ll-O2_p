; ModuleID = 'gen/media/mojo/mojom/audio_logging.mojom-blink-test-utils.cc'
source_filename = "gen/media/mojo/mojom/audio_logging.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::mojom::blink::AudioLogAsyncWaiter" = type { %"class.media::mojom::blink::AudioLog"* }
%"class.media::mojom::blink::AudioLog" = type { i32 (...)** }
%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter" = type { %"class.media::mojom::blink::AudioLogFactory"* }
%"class.media::mojom::blink::AudioLogFactory" = type { i32 (...)** }
%"class.media::mojom::blink::AudioLogInterceptorForTesting" = type { %"class.media::mojom::blink::AudioLog" }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, %"class.absl::optional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Point3F"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting" = type { %"class.media::mojom::blink::AudioLogFactory" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.10, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11" }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

$_ZN5media5mojom5blink8AudioLogD2Ev = comdat any

$_ZN5media5mojom5blink29AudioLogInterceptorForTestingD0Ev = comdat any

$_ZN5media5mojom5blink15AudioLogFactoryD2Ev = comdat any

$_ZN5media5mojom5blink36AudioLogFactoryInterceptorForTestingD0Ev = comdat any

@_ZTVN5media5mojom5blink29AudioLogInterceptorForTestingE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::mojom::blink::AudioLog"*)* @_ZN5media5mojom5blink8AudioLogD2Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting9OnCreatedERKNS_15AudioParametersERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting9OnStartedEv to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting9OnStoppedEv to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting8OnClosedEv to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting7OnErrorEv to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, double)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting11OnSetVolumeEd to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting24OnProcessingStateChangedERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5media5mojom5blink29AudioLogInterceptorForTesting12OnLogMessageERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5media5mojom5blink36AudioLogFactoryInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::mojom::blink::AudioLogFactory"*)* @_ZN5media5mojom5blink15AudioLogFactoryD2Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)* @_ZN5media5mojom5blink36AudioLogFactoryInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*, i32, i32, %"class.mojo::PendingReceiver"*)* @_ZN5media5mojom5blink36AudioLogFactoryInterceptorForTesting14CreateAudioLogENS0_17AudioLogComponentEiN4mojo15PendingReceiverINS1_8AudioLogEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5media5mojom5blink19AudioLogAsyncWaiterC1EPNS1_8AudioLogE = hidden unnamed_addr alias void (%"class.media::mojom::blink::AudioLogAsyncWaiter"*, %"class.media::mojom::blink::AudioLog"*), void (%"class.media::mojom::blink::AudioLogAsyncWaiter"*, %"class.media::mojom::blink::AudioLog"*)* @_ZN5media5mojom5blink19AudioLogAsyncWaiterC2EPNS1_8AudioLogE
@_ZN5media5mojom5blink19AudioLogAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::AudioLogAsyncWaiter"*), void (%"class.media::mojom::blink::AudioLogAsyncWaiter"*)* @_ZN5media5mojom5blink19AudioLogAsyncWaiterD2Ev
@_ZN5media5mojom5blink26AudioLogFactoryAsyncWaiterC1EPNS1_15AudioLogFactoryE = hidden unnamed_addr alias void (%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"*, %"class.media::mojom::blink::AudioLogFactory"*), void (%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"*, %"class.media::mojom::blink::AudioLogFactory"*)* @_ZN5media5mojom5blink26AudioLogFactoryAsyncWaiterC2EPNS1_15AudioLogFactoryE
@_ZN5media5mojom5blink26AudioLogFactoryAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"*), void (%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"*)* @_ZN5media5mojom5blink26AudioLogFactoryAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting9OnCreatedERKNS_15AudioParametersERKN3WTF6StringE(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, %"class.media::AudioParameters"* dereferenceable(64), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %5 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %5, i64 10
  %7 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.media::mojom::blink::AudioLog"* %7(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %9 = bitcast %"class.media::mojom::blink::AudioLog"* %8 to void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)***
  %10 = load void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)**, void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)*, void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)** %10, i64 2
  %12 = load void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)*, void (%"class.media::mojom::blink::AudioLog"*, %"class.media::AudioParameters"*, %"class.WTF::String"*)** %11, align 8
  tail call void %12(%"class.media::mojom::blink::AudioLog"* %8, %"class.media::AudioParameters"* dereferenceable(64) %1, %"class.WTF::String"* dereferenceable(8) %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting9OnStartedEv(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %3 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %3, i64 10
  %5 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.media::mojom::blink::AudioLog"* %5(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %7 = bitcast %"class.media::mojom::blink::AudioLog"* %6 to void (%"class.media::mojom::blink::AudioLog"*)***
  %8 = load void (%"class.media::mojom::blink::AudioLog"*)**, void (%"class.media::mojom::blink::AudioLog"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %8, i64 3
  %10 = load void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %9, align 8
  tail call void %10(%"class.media::mojom::blink::AudioLog"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting9OnStoppedEv(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %3 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %3, i64 10
  %5 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.media::mojom::blink::AudioLog"* %5(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %7 = bitcast %"class.media::mojom::blink::AudioLog"* %6 to void (%"class.media::mojom::blink::AudioLog"*)***
  %8 = load void (%"class.media::mojom::blink::AudioLog"*)**, void (%"class.media::mojom::blink::AudioLog"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %8, i64 4
  %10 = load void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %9, align 8
  tail call void %10(%"class.media::mojom::blink::AudioLog"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting8OnClosedEv(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %3 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %3, i64 10
  %5 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.media::mojom::blink::AudioLog"* %5(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %7 = bitcast %"class.media::mojom::blink::AudioLog"* %6 to void (%"class.media::mojom::blink::AudioLog"*)***
  %8 = load void (%"class.media::mojom::blink::AudioLog"*)**, void (%"class.media::mojom::blink::AudioLog"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %8, i64 5
  %10 = load void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %9, align 8
  tail call void %10(%"class.media::mojom::blink::AudioLog"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting7OnErrorEv(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %3 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %3, i64 10
  %5 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.media::mojom::blink::AudioLog"* %5(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %7 = bitcast %"class.media::mojom::blink::AudioLog"* %6 to void (%"class.media::mojom::blink::AudioLog"*)***
  %8 = load void (%"class.media::mojom::blink::AudioLog"*)**, void (%"class.media::mojom::blink::AudioLog"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %8, i64 6
  %10 = load void (%"class.media::mojom::blink::AudioLog"*)*, void (%"class.media::mojom::blink::AudioLog"*)** %9, align 8
  tail call void %10(%"class.media::mojom::blink::AudioLog"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting11OnSetVolumeEd(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, double) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %4 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, i64 10
  %6 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.media::mojom::blink::AudioLog"* %6(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.media::mojom::blink::AudioLog"* %7 to void (%"class.media::mojom::blink::AudioLog"*, double)***
  %9 = load void (%"class.media::mojom::blink::AudioLog"*, double)**, void (%"class.media::mojom::blink::AudioLog"*, double)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*, double)*, void (%"class.media::mojom::blink::AudioLog"*, double)** %9, i64 7
  %11 = load void (%"class.media::mojom::blink::AudioLog"*, double)*, void (%"class.media::mojom::blink::AudioLog"*, double)** %10, align 8
  tail call void %11(%"class.media::mojom::blink::AudioLog"* %7, double %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting24OnProcessingStateChangedERKN3WTF6StringE(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %4 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, i64 10
  %6 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.media::mojom::blink::AudioLog"* %6(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.media::mojom::blink::AudioLog"* %7 to void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)***
  %9 = load void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)**, void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)*, void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)** %9, i64 8
  %11 = load void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)*, void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.media::mojom::blink::AudioLog"* %7, %"class.WTF::String"* dereferenceable(8) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTesting12OnLogMessageERKN3WTF6StringE(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)***
  %4 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %4, i64 10
  %6 = load %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLog"* (%"class.media::mojom::blink::AudioLogInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.media::mojom::blink::AudioLog"* %6(%"class.media::mojom::blink::AudioLogInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.media::mojom::blink::AudioLog"* %7 to void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)***
  %9 = load void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)**, void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)*, void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)** %9, i64 9
  %11 = load void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)*, void (%"class.media::mojom::blink::AudioLog"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.media::mojom::blink::AudioLog"* %7, %"class.WTF::String"* dereferenceable(8) %1) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media5mojom5blink19AudioLogAsyncWaiterC2EPNS1_8AudioLogE(%"class.media::mojom::blink::AudioLogAsyncWaiter"* nocapture, %"class.media::mojom::blink::AudioLog"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::mojom::blink::AudioLogAsyncWaiter", %"class.media::mojom::blink::AudioLogAsyncWaiter"* %0, i64 0, i32 0
  store %"class.media::mojom::blink::AudioLog"* %1, %"class.media::mojom::blink::AudioLog"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media5mojom5blink19AudioLogAsyncWaiterD2Ev(%"class.media::mojom::blink::AudioLogAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom5blink36AudioLogFactoryInterceptorForTesting14CreateAudioLogENS0_17AudioLogComponentEiN4mojo15PendingReceiverINS1_8AudioLogEEE(%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*, i32, i32, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = bitcast %"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"* %0 to %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)***
  %7 = load %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)**, %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)** %7, i64 3
  %9 = load %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)*, %"class.media::mojom::blink::AudioLogFactory"* (%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.media::mojom::blink::AudioLogFactory"* %9(%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"* %0) #6
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %12) #6
  %13 = bitcast %"class.media::mojom::blink::AudioLogFactory"* %10 to void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)***
  %14 = load void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)**, void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)*, void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)** %14, i64 2
  %16 = load void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)*, void (%"class.media::mojom::blink::AudioLogFactory"*, i32, i32, %"class.mojo::PendingReceiver"*)** %15, align 8
  call void %16(%"class.media::mojom::blink::AudioLogFactory"* %10, i32 %1, i32 %2, %"class.mojo::PendingReceiver"* nonnull %5) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media5mojom5blink26AudioLogFactoryAsyncWaiterC2EPNS1_15AudioLogFactoryE(%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"* nocapture, %"class.media::mojom::blink::AudioLogFactory"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::mojom::blink::AudioLogFactoryAsyncWaiter", %"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"* %0, i64 0, i32 0
  store %"class.media::mojom::blink::AudioLogFactory"* %1, %"class.media::mojom::blink::AudioLogFactory"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media5mojom5blink26AudioLogFactoryAsyncWaiterD2Ev(%"class.media::mojom::blink::AudioLogFactoryAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink8AudioLogD2Ev(%"class.media::mojom::blink::AudioLog"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink29AudioLogInterceptorForTestingD0Ev(%"class.media::mojom::blink::AudioLogInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink15AudioLogFactoryD2Ev(%"class.media::mojom::blink::AudioLogFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom5blink36AudioLogFactoryInterceptorForTestingD0Ev(%"class.media::mojom::blink::AudioLogFactoryInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
