; ModuleID = '../../third_party/blink/renderer/core/css/style_sheet_contents.cc'
source_filename = "../../third_party/blink/renderer/core/css/style_sheet_contents.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.121", i32, [4 x i8], %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.273", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.291", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.298", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.237", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i64 }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist.168"* }
%"class.blink::Worklist.168" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::Worklist.175"* }
%"class.blink::Worklist.175" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::Worklist.182"* }
%"class.blink::Worklist.182" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::Worklist.189"* }
%"class.blink::Worklist.189" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist.196"* }
%"class.blink::Worklist.196" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist.203"* }
%"class.blink::Worklist.203" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::Worklist.210"* }
%"class.blink::Worklist.210" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.157" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.217", %"class.std::__1::__compressed_pair.224", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.231", [4 x i8] }>
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219", %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { i64 }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { float }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.240", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.249" }
%"class.WTF::Vector.249" = type { %"class.WTF::VectorBuffer.250" }
%"class.WTF::VectorBuffer.250" = type { %"class.WTF::VectorBufferBase.251" }
%"class.WTF::VectorBufferBase.251" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.279" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.168"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.175"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.182"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.189"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.196"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1045" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.297 }
%class.scoped_refptr.297 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.298" = type { %"struct.std::__1::__atomic_base.299" }
%"struct.std::__1::__atomic_base.299" = type { %"struct.std::__1::__cxx_atomic_impl.300" }
%"struct.std::__1::__cxx_atomic_impl.300" = type { %"struct.std::__1::__cxx_atomic_base_impl.301" }
%"struct.std::__1::__cxx_atomic_base_impl.301" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.522" }
%"struct.std::__1::atomic.522" = type { %"struct.std::__1::__atomic_base.523" }
%"struct.std::__1::__atomic_base.523" = type { %"struct.std::__1::__atomic_base.524" }
%"struct.std::__1::__atomic_base.524" = type { %"struct.std::__1::__cxx_atomic_impl.525" }
%"struct.std::__1::__cxx_atomic_impl.525" = type { %"struct.std::__1::__cxx_atomic_base_impl.526" }
%"struct.std::__1::__cxx_atomic_base_impl.526" = type { i32 }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.67", %"class.WTF::String", %"class.blink::HeapVector.69", %"class.blink::HeapVector.76", %"class.blink::HeapVector.87", %"class.WTF::HashMap.96", %"class.WTF::AtomicString", %"class.blink::WeakMember", i8, [7 x i8], %"class.blink::Member.102", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.309", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::HeapVector.69" = type { %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::Member.67"*, i32, i32 }
%"class.blink::HeapVector.76" = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::Member.82"*, i32, i32 }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::StyleRuleNamespace"* }
%"class.blink::StyleRuleNamespace" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.87" = type { %"class.WTF::Vector.90" }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::Member.93"*, i32, i32 }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::StyleRuleBase"* }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.100" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String", %"class.blink::Member.63" }
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.1215" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1052", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1084", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1175", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1191", %"class.blink::ResourceResponse", %class.scoped_refptr.1193, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.absl::optional.1052" = type { %"class.absl::optional_internal::optional_data.1053" }
%"class.absl::optional_internal::optional_data.1053" = type { %"class.absl::optional_internal::optional_data_base.1054" }
%"class.absl::optional_internal::optional_data_base.1054" = type { %"class.absl::optional_internal::optional_data_dtor_base.1055" }
%"class.absl::optional_internal::optional_data_dtor_base.1055" = type { i8, %union.anon.1056 }
%union.anon.1056 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1057", i8, %"class.absl::optional.1069", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.1057" = type { %"class.absl::optional_internal::optional_data.1058" }
%"class.absl::optional_internal::optional_data.1058" = type { %"class.absl::optional_internal::optional_data_base.1059" }
%"class.absl::optional_internal::optional_data_base.1059" = type { %"class.absl::optional_internal::optional_data_dtor_base.1060" }
%"class.absl::optional_internal::optional_data_dtor_base.1060" = type { i8, [7 x i8], %union.anon.1061 }
%union.anon.1061 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1064 }
%union.anon.1064 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.1069" = type { %"class.absl::optional_internal::optional_data.1070" }
%"class.absl::optional_internal::optional_data.1070" = type { %"class.absl::optional_internal::optional_data_base.1071" }
%"class.absl::optional_internal::optional_data_base.1071" = type { %"class.absl::optional_internal::optional_data_dtor_base.1072" }
%"class.absl::optional_internal::optional_data_dtor_base.1072" = type { i8, %union.anon.1073 }
%union.anon.1073 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1074", %"class.WTF::Vector.1079" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { i32*, i32, i32 }
%"class.WTF::Vector.1079" = type { %"class.WTF::VectorBuffer.1080" }
%"class.WTF::VectorBuffer.1080" = type { %"class.WTF::VectorBufferBase.1081" }
%"class.WTF::VectorBufferBase.1081" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1084" = type { %"class.WTF::VectorBuffer.1085" }
%"class.WTF::VectorBuffer.1085" = type { %"class.WTF::VectorBufferBase.1086" }
%"class.WTF::VectorBufferBase.1086" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1171" }
%"class.WTF::HashMap.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"struct.WTF::KeyValuePair.1174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1174" = type <{ %"class.blink::WeakMember.1279", i32, [4 x i8] }>
%"class.blink::WeakMember.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1237", [7 x i8], %"class.blink::Member.1238", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1237" = type { i8 }
%"class.blink::Member.1238" = type { %"class.blink::MemberBase.1239" }
%"class.blink::MemberBase.1239" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet.1175" = type { %"class.WTF::HashSet.1178" }
%"class.WTF::HashSet.1178" = type { %"class.WTF::HashTable.1179" }
%"class.WTF::HashTable.1179" = type <{ %"class.blink::WeakMember.1181"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1181" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.1182", i8, i8, %class.scoped_refptr.107, %class.scoped_refptr.1187, %class.scoped_refptr.1189 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.std::__1::pair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1186" = type opaque
%class.scoped_refptr.107 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.108", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.108" = type { %"class.base::RefCounted.109" }
%"class.base::RefCounted.109" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.112" }
%"class.blink::HeapHashMap.112" = type { %"class.WTF::HashMap.115" }
%"class.WTF::HashMap.115" = type { %"class.WTF::HashTable.116" }
%"class.WTF::HashTable.116" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type { %"class.blink::WeakMember.119", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.1187 = type { %"class.base::RefCountedData.1188"* }
%"class.base::RefCountedData.1188" = type opaque
%class.scoped_refptr.1189 = type { %"class.base::RefCountedData.1190"* }
%"class.base::RefCountedData.1190" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1139" }
%"class.base::time_internal::TimeBase.1139" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.551 }
%class.scoped_refptr.551 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.997, %class.scoped_refptr.997, %class.scoped_refptr.997, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1091, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1103", %"class.absl::optional.1108", %"class.absl::optional.1118", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1128", %"class.absl::optional.1118", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1118", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1128", %"class.absl::optional.1133", i8, %class.scoped_refptr.1138 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.992" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.992" = type { %"class.absl::optional_internal::optional_data.993" }
%"class.absl::optional_internal::optional_data.993" = type { %"class.absl::optional_internal::optional_data_base.994" }
%"class.absl::optional_internal::optional_data_base.994" = type { %"class.absl::optional_internal::optional_data_dtor_base.995" }
%"class.absl::optional_internal::optional_data_dtor_base.995" = type { i8, %union.anon.996 }
%union.anon.996 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.997 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.990", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.992", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.997 }
%"class.WTF::RefCounted.990" = type { %"class.base::RefCounted.991" }
%"class.base::RefCounted.991" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1087" }
%"class.WTF::HashMap.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ %"struct.WTF::KeyValuePair.100"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1091 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1092", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1101, i8, %"class.url::Origin" }
%"class.base::RefCounted.1092" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1093" }
%"class.std::__1::vector.1093" = type { %"class.std::__1::__vector_base.1094" }
%"class.std::__1::__vector_base.1094" = type { %"class.std::__1::unique_ptr.1095"*, %"class.std::__1::unique_ptr.1095"*, %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::unique_ptr.1095"* }
%class.scoped_refptr.1101 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1102", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.522" }
%"class.absl::optional.1103" = type { %"class.absl::optional_internal::optional_data.1104" }
%"class.absl::optional_internal::optional_data.1104" = type { %"class.absl::optional_internal::optional_data_base.1105" }
%"class.absl::optional_internal::optional_data_base.1105" = type { %"class.absl::optional_internal::optional_data_dtor_base.1106" }
%"class.absl::optional_internal::optional_data_dtor_base.1106" = type { i8, %union.anon.1107 }
%union.anon.1107 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1108" = type { %"class.absl::optional_internal::optional_data.1109" }
%"class.absl::optional_internal::optional_data.1109" = type { %"class.absl::optional_internal::optional_data_base.1110" }
%"class.absl::optional_internal::optional_data_base.1110" = type { %"class.absl::optional_internal::optional_data_dtor_base.1111" }
%"class.absl::optional_internal::optional_data_dtor_base.1111" = type { i8, %union.anon.1112 }
%union.anon.1112 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1113", %"class.WTF::Vector.1079", %"class.WTF::String" }
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { %class.scoped_refptr.997*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1123", %"class.absl::optional.1123" }
%"class.absl::optional.1123" = type { %"class.absl::optional_internal::optional_data.1124" }
%"class.absl::optional_internal::optional_data.1124" = type { %"class.absl::optional_internal::optional_data_base.1125" }
%"class.absl::optional_internal::optional_data_base.1125" = type { %"class.absl::optional_internal::optional_data_dtor_base.1126" }
%"class.absl::optional_internal::optional_data_dtor_base.1126" = type { i8, %union.anon.1127 }
%union.anon.1127 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1118" = type { %"class.absl::optional_internal::optional_data.1119" }
%"class.absl::optional_internal::optional_data.1119" = type { %"class.absl::optional_internal::optional_data_base.1120" }
%"class.absl::optional_internal::optional_data_base.1120" = type { %"class.absl::optional_internal::optional_data_dtor_base.1121" }
%"class.absl::optional_internal::optional_data_dtor_base.1121" = type { i8, %union.anon.1122 }
%union.anon.1122 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1128" = type { %"class.absl::optional_internal::optional_data.1129" }
%"class.absl::optional_internal::optional_data.1129" = type { %"class.absl::optional_internal::optional_data_base.1130" }
%"class.absl::optional_internal::optional_data_base.1130" = type { %"class.absl::optional_internal::optional_data_dtor_base.1131" }
%"class.absl::optional_internal::optional_data_dtor_base.1131" = type { i8, %union.anon.1132 }
%union.anon.1132 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1133" = type { %"class.absl::optional_internal::optional_data.1134" }
%"class.absl::optional_internal::optional_data.1134" = type { %"class.absl::optional_internal::optional_data_base.1135" }
%"class.absl::optional_internal::optional_data_base.1135" = type { %"class.absl::optional_internal::optional_data_dtor_base.1136" }
%"class.absl::optional_internal::optional_data_dtor_base.1136" = type { i8, %union.anon.1137 }
%union.anon.1137 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1138 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1271", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1271" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1272" }
%"class.std::__1::vector.1272" = type { %"class.std::__1::__vector_base.1273" }
%"class.std::__1::__vector_base.1273" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { i32* }
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1140", %class.scoped_refptr.1150, %class.scoped_refptr.1151, %"struct.blink::CacheControlHeader", %"class.absl::optional.1123", %"class.absl::optional.1152", %"class.absl::optional.1152", %"class.absl::optional.1152", i64, %"class.blink::KURL", %"class.WTF::Vector.1157", %"class.WTF::String", %"class.WTF::Vector.1079", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1128", %"class.WTF::Vector.1079", %"class.blink::KURL", %"class.absl::optional.1162" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1140" = type { %"class.absl::optional_internal::optional_data.1141" }
%"class.absl::optional_internal::optional_data.1141" = type { %"class.absl::optional_internal::optional_data_base.1142" }
%"class.absl::optional_internal::optional_data_base.1142" = type { %"class.absl::optional_internal::optional_data_dtor_base.1143" }
%"class.absl::optional_internal::optional_data_dtor_base.1143" = type { i8, %union.anon.1144 }
%union.anon.1144 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1079", %"class.WTF::String", i64, i64, %"class.WTF::Vector.344", %"class.WTF::Vector.1145" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1145" = type { %"class.WTF::VectorBuffer.1146" }
%"class.WTF::VectorBuffer.1146" = type { %"class.WTF::VectorBufferBase.1147" }
%"class.WTF::VectorBufferBase.1147" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1150 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1151 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1152" = type { %"class.absl::optional_internal::optional_data.1153" }
%"class.absl::optional_internal::optional_data.1153" = type { %"class.absl::optional_internal::optional_data_base.1154" }
%"class.absl::optional_internal::optional_data_base.1154" = type { %"class.absl::optional_internal::optional_data_dtor_base.1155" }
%"class.absl::optional_internal::optional_data_dtor_base.1155" = type { i8, %union.anon.1156 }
%union.anon.1156 = type { %"class.base::Time" }
%"class.WTF::Vector.1157" = type { %"class.WTF::VectorBuffer.1158" }
%"class.WTF::VectorBuffer.1158" = type { %"class.WTF::VectorBufferBase.1159" }
%"class.WTF::VectorBufferBase.1159" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1162" = type { %"class.absl::optional_internal::optional_data.1163" }
%"class.absl::optional_internal::optional_data.1163" = type { %"class.absl::optional_internal::optional_data_base.1164" }
%"class.absl::optional_internal::optional_data_base.1164" = type { %"class.absl::optional_internal::optional_data_dtor_base.1165" }
%"class.absl::optional_internal::optional_data_dtor_base.1165" = type { i8, %union.anon.1166 }
%union.anon.1166 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1193 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1194", i64, %"class.WTF::Vector.1196", %"class.WTF::Vector.1201" }
%"class.WTF::RefCounted.1194" = type { %"class.base::RefCounted.1195" }
%"class.base::RefCounted.1195" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1196" = type { %"class.WTF::VectorBuffer.1197" }
%"class.WTF::VectorBuffer.1197" = type { %"class.WTF::VectorBufferBase.1198" }
%"class.WTF::VectorBufferBase.1198" = type { i8*, i32, i32 }
%"class.WTF::Vector.1201" = type { %"class.WTF::VectorBuffer.1202" }
%"class.WTF::VectorBuffer.1202" = type { %"class.WTF::VectorBufferBase.1203" }
%"class.WTF::VectorBufferBase.1203" = type { %"class.std::__1::unique_ptr.1204"*, i32, i32 }
%"class.std::__1::unique_ptr.1204" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1207", %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.1218", i32, %"class.WTF::Vector.1196", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1224" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::unique_ptr.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::CSSParserContext"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"class.blink::WeakMember.308"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.308" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.487, %"class.WTF::Vector.378", %"class.WTF::Vector.378", %"class.blink::Member", %"class.blink::Member.488", %"class.blink::HeapHashSet.492", %"class.blink::Member.8", %"class.WTF::HashSet.369", %"class.WTF::TextPosition", %"class.blink::Member.499", %"class.blink::HeapVector.501", %"class.blink::Member.508" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%class.scoped_refptr.487 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.456", %"class.WTF::Vector.458" }
%"class.WTF::RefCounted.456" = type { %"class.base::RefCounted.457" }
%"class.base::RefCounted.457" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.458" = type { %"class.WTF::VectorBuffer.459" }
%"class.WTF::VectorBuffer.459" = type { %"class.WTF::VectorBufferBase.460" }
%"class.WTF::VectorBufferBase.460" = type { %"class.std::__1::unique_ptr.461"*, i32, i32 }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.464", %"class.WTF::String" }
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.490" }
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.492" = type { %"class.WTF::HashSet.495" }
%"class.WTF::HashSet.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"class.blink::WeakMember.498"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.498" = type { %"class.blink::MemberBase.1" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.518", %"class.WTF::Vector.518", i8, i32, %"class.blink::Member.529", %"class.blink::Member.531", %"class.blink::Member.533", %"class.blink::Member.535", %"class.blink::Member.537", %"class.blink::Member.539", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.541", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.547", %"class.blink::Member.549", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.552", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.567", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.576", double, double, i64, i64, %"class.blink::HeapHashSet.578", %"class.blink::HeapHashSet.585", i16, i8, %"class.blink::Member.592", %"class.blink::Member.594", %"class.blink::Member.764", %"class.blink::Member.766", %"class.blink::TextLinkColors", %"class.blink::Member.768", i8, [7 x i8], %"class.blink::HeapHashMap.770", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.777", %"class.blink::Member.782", %"class.blink::Member.784", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.786", %"class.blink::HeapVector.788", %"class.std::__1::unique_ptr.796", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.802", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.815", %"class.WTF::Vector.817", i8, i8, %"class.std::__1::unique_ptr.822", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.828", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.836", i8, i32, %"class.blink::Member.838", %"class.blink::Member.840", %"class.blink::Member.842", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.844", %"class.WTF::HashMap.846", %"class.blink::Member.851", %"class.blink::Member.853", %"class.blink::Member.855", %"class.blink::Member.857", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.859", i8, i32, %"class.blink::Member.866", %"class.blink::Member.868", i32, %"class.blink::Member.870", %"class.blink::Member.872", %"class.blink::Member.874", %"class.std::__1::unique_ptr.876", i64, %"class.std::__1::unique_ptr.882", i32, i32, %"class.blink::Member.888", %"class.blink::Member.890", %"class.blink::Member.892", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.894", %"class.WTF::Vector.896", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.901", %"class.blink::Member.908", %"class.std::__1::unique_ptr.910", %"class.blink::Member.916", i8, i8, %"class.WTF::String", %"class.blink::Member.918", i8, [7 x i8], %"class.blink::HeapHashMap.920", %"class.blink::HeapObserverSet", %"class.blink::Member.934", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.936", i32, i8, i8, %"class.blink::WeakMember.938", %"class.blink::Member.939" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.511" }
%"class.blink::HeapHashMap.511" = type { %"class.WTF::HashMap.514" }
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.521 }
%class.scoped_refptr.521 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.965", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1014", i32, i8, [3 x i8], %"class.blink::HeapVector.1016", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1024", %"class.blink::Member.1026", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1035", %"class.blink::Member.1041", %"class.blink::Member.1043", i8, [7 x i8] }>
%"class.blink::Supplementable.965" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.966" }
%"class.blink::HeapHashMap.966" = type { %"class.WTF::HashMap.969" }
%"class.WTF::HashMap.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.981" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.973" }
%"class.blink::HeapObserverSet.973" = type { i32, [4 x i8], %"class.blink::HeapHashSet.974" }
%"class.blink::HeapHashSet.974" = type { %"class.WTF::HashSet.977" }
%"class.WTF::HashSet.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"class.blink::WeakMember.980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.980" = type opaque
%"class.blink::Supplementable.981" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.982" }
%"class.blink::HeapHashMap.982" = type { %"class.WTF::HashMap.985" }
%"class.WTF::HashMap.985" = type { %"class.WTF::HashTable.986" }
%"class.WTF::HashTable.986" = type <{ %"struct.WTF::KeyValuePair.988"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.988" = type { i8*, %"class.blink::Member.1250" }
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1252" }
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.989, %"class.std::__1::unique_ptr.998", %"class.std::__1::unique_ptr.998", %"class.std::__1::unique_ptr.1004", %"class.std::__1::unique_ptr.1004", %"class.blink::Member.531", i32, [4 x i8], %"class.WTF::HashSet.1010", i32, i32 }
%class.scoped_refptr.989 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1016" = type { %"class.WTF::Vector.1019" }
%"class.WTF::Vector.1019" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { %"class.blink::Member.1022"*, i32, i32 }
%"class.blink::Member.1022" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1028", i32, i32 }
%"class.blink::HeapHashMap.1028" = type { %"class.WTF::HashMap.1031" }
%"class.WTF::HashMap.1031" = type { %"class.WTF::HashTable.1032" }
%"class.WTF::HashTable.1032" = type <{ %"struct.WTF::KeyValuePair.1034"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1034" = type opaque
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.107 }
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.569" }
%"class.blink::HeapHashMap.569" = type { %"class.WTF::HashMap.572" }
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.578" = type { %"class.WTF::HashSet.581" }
%"class.WTF::HashSet.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"class.blink::WeakMember.584"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.584" = type opaque
%"class.blink::HeapHashSet.585" = type { %"class.WTF::HashSet.588" }
%"class.WTF::HashSet.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"class.blink::WeakMember.591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.591" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.8", i32, i32, i32, %"class.blink::Member.61", %"class.blink::Member.598", %"class.blink::Member.625", %"class.blink::HeapHashMap.627", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.634", %"class.blink::HeapHashSet.634", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.640", %"class.blink::Member.654", %"class.blink::Member.684", %"class.blink::Member.686", %"class.blink::Member.692", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.703", %"class.blink::Member.709", %"class.blink::HeapHashMap.711", %"class.blink::HeapHashMap.718", %"class.std::__1::unique_ptr.725", i32, %"class.blink::HeapVector.731", %"class.blink::HeapVector.731", %"class.blink::HeapVector.610", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.739", %"class.blink::Member.746", %"class.blink::HeapHashMap.748", %class.scoped_refptr.755, %class.scoped_refptr.756, %"class.blink::Member.440", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.757", %"class.blink::Member.21" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.602", %"class.blink::HeapVector.610", i8 }>
%"class.blink::HeapVector.602" = type { %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"class.blink::Member.608"*, i32, i32 }
%"class.blink::Member.608" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.621", %"class.blink::Member.623", %"class.blink::Member.623", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.621" = type <{ %"class.blink::Member.623"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.623", %"class.blink::Member.623" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.627" = type { %"class.WTF::HashMap.630" }
%"class.WTF::HashMap.630" = type { %"class.WTF::HashTable.631" }
%"class.WTF::HashTable.631" = type <{ %"struct.WTF::KeyValuePair.633"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.633" = type opaque
%"class.blink::HeapHashSet.634" = type { %"class.WTF::HashSet.637" }
%"class.WTF::HashSet.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.644", %"class.blink::Member.646" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.650", %"class.blink::Member.652" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.954", %"class.blink::Member.646", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.954" = type { %"class.WTF::Vector.957" }
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959" }
%"class.WTF::VectorBufferBase.959" = type { %"class.blink::Member.652"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.961, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.522" }>
%class.sk_sp.961 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.962 }
%union.anon.962 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.8", %class.scoped_refptr.665, %"class.blink::SelectorFilter", %"class.blink::Member.625", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.658" }
%"class.blink::HeapHashMap.658" = type { %"class.WTF::HashMap.661" }
%"class.WTF::HashMap.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type opaque
%class.scoped_refptr.665 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.666", %"class.std::__1::unique_ptr.678" }
%"class.blink::HeapVector.666" = type { %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.21", %"class.WTF::Vector.672" }
%"class.WTF::Vector.672" = type { %"class.WTF::VectorBuffer.673" }
%"class.WTF::VectorBuffer.673" = type { %"class.WTF::VectorBufferBase.674", [16 x i8] }
%"class.WTF::VectorBufferBase.674" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.690", i8, [7 x i8] }>
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.309", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.356", %"class.WTF::HashMap.356", %"class.WTF::HashMap.356", %"class.WTF::HashMap.361", %class.scoped_refptr.366, %class.scoped_refptr.377, %class.scoped_refptr.376, %"class.WTF::Vector.378", %"class.WTF::Vector.378", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.356" = type { %"class.WTF::HashTable.357" }
%"class.WTF::HashTable.357" = type <{ %"struct.WTF::KeyValuePair.360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.360" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1254 }
%class.scoped_refptr.1254 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.367", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.373", %"union.blink::InvalidationSet::Backing.374", %"union.blink::InvalidationSet::Backing.375", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.367" = type { %"class.base::RefCounted.368" }
%"class.base::RefCounted.368" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.373" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.374" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.375" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%class.scoped_refptr.366 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.376, %class.scoped_refptr.376 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.367", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.373", %"union.blink::InvalidationSet::Backing.374", %"union.blink::InvalidationSet::Backing.375", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.377 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.376 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.696" }
%"class.blink::HeapHashMap.696" = type { %"class.WTF::HashMap.699" }
%"class.WTF::HashMap.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.WTF::KeyValuePair.702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.702" = type { %"class.blink::Member.6", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1261", %"class.WTF::Vector.1261" }
%"class.WTF::Vector.1261" = type { %"class.WTF::VectorBuffer.1262" }
%"class.WTF::VectorBuffer.1262" = type { %"class.WTF::VectorBufferBase.1263" }
%"class.WTF::VectorBufferBase.1263" = type { %class.scoped_refptr.1254*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.703" = type { %"class.WTF::HashSet.706" }
%"class.WTF::HashSet.706" = type { %"class.WTF::HashTable.707" }
%"class.WTF::HashTable.707" = type <{ %"class.blink::Member.21"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.711" = type { %"class.WTF::HashMap.714" }
%"class.WTF::HashMap.714" = type { %"class.WTF::HashTable.715" }
%"class.WTF::HashTable.715" = type <{ %"struct.WTF::KeyValuePair.717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.717" = type opaque
%"class.blink::HeapHashMap.718" = type { %"class.WTF::HashMap.721" }
%"class.WTF::HashMap.721" = type { %"class.WTF::HashTable.722" }
%"class.WTF::HashTable.722" = type <{ %"struct.WTF::KeyValuePair.724"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.724" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.731" = type { %"class.WTF::Vector.734" }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736" }
%"class.WTF::VectorBufferBase.736" = type { %"struct.std::__1::pair.737"*, i32, i32 }
%"struct.std::__1::pair.737" = type opaque
%"class.blink::HeapVector.610" = type { %"class.WTF::Vector.613" }
%"class.WTF::Vector.613" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { %"struct.std::__1::pair.616"*, i32, i32 }
%"struct.std::__1::pair.616" = type opaque
%"class.blink::HeapHashMap.739" = type { %"class.WTF::HashMap.742" }
%"class.WTF::HashMap.742" = type { %"class.WTF::HashTable.743" }
%"class.WTF::HashTable.743" = type <{ %"struct.WTF::KeyValuePair.745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.745" = type { %"class.WTF::AtomicString", %"class.blink::Member.405" }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.407", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.407" = type { %"class.WTF::Vector.410" }
%"class.WTF::Vector.410" = type { %"class.WTF::VectorBuffer.411" }
%"class.WTF::VectorBuffer.411" = type { %"class.WTF::VectorBufferBase.412" }
%"class.WTF::VectorBufferBase.412" = type { %"class.blink::Member.413"*, i32, i32 }
%"class.blink::Member.413" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.748" = type { %"class.WTF::HashMap.751" }
%"class.WTF::HashMap.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"struct.WTF::KeyValuePair.754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.754" = type opaque
%class.scoped_refptr.755 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.756 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.757" = type { %"class.WTF::HashSet.760" }
%"class.WTF::HashSet.760" = type { %"class.WTF::HashTable.761" }
%"class.WTF::HashTable.761" = type <{ %"class.blink::Member.763"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.763" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.770" = type { %"class.WTF::HashMap.773" }
%"class.WTF::HashMap.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type opaque
%"class.WTF::Vector.777" = type { %"class.WTF::VectorBuffer.778" }
%"class.WTF::VectorBuffer.778" = type { %"class.WTF::VectorBufferBase.779" }
%"class.WTF::VectorBufferBase.779" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.788" = type { %"class.WTF::Vector.791" }
%"class.WTF::Vector.791" = type { %"class.WTF::VectorBuffer.792" }
%"class.WTF::VectorBuffer.792" = type { %"class.WTF::VectorBufferBase.793" }
%"class.WTF::VectorBufferBase.793" = type { %"class.blink::Member.794"*, i32, i32 }
%"class.blink::Member.794" = type opaque
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.802" = type { %"class.WTF::HashSet.805" }
%"class.WTF::HashSet.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"class.blink::WeakMember.808"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.808" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.809", i32, [4 x i8] }>
%"class.WTF::Vector.809" = type { %"class.WTF::VectorBuffer.810" }
%"class.WTF::VectorBuffer.810" = type { %"class.WTF::VectorBufferBase.811" }
%"class.WTF::VectorBufferBase.811" = type { %"struct.std::__1::pair.812"*, i32, i32 }
%"struct.std::__1::pair.812" = type opaque
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819" }
%"class.WTF::VectorBufferBase.819" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.828" = type { %"class.WTF::Vector.831" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"class.blink::Member.834"*, i32, i32 }
%"class.blink::Member.834" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.844" = type { %"class.blink::MemberBase.845" }
%"class.blink::MemberBase.845" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.846" = type { %"class.WTF::HashTable.847" }
%"class.WTF::HashTable.847" = type <{ %"struct.WTF::KeyValuePair.850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.850" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.566", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.557, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.557 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.558" }>
%"class.base::RefCountedThreadSafe.558" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.559 }
%class.scoped_refptr.559 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.560", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.560" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.561" }
%"struct.std::__1::atomic.561" = type { %"struct.std::__1::__atomic_base.562" }
%"struct.std::__1::__atomic_base.562" = type { %"struct.std::__1::__atomic_base.563" }
%"struct.std::__1::__atomic_base.563" = type { %"struct.std::__1::__cxx_atomic_impl.564" }
%"struct.std::__1::__cxx_atomic_impl.564" = type { %"struct.std::__1::__cxx_atomic_base_impl.565" }
%"struct.std::__1::__cxx_atomic_base_impl.565" = type { i8 }
%"class.blink::WeakMember.566" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.859" = type { %"class.WTF::HashSet.862" }
%"class.WTF::HashSet.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"class.blink::Member.865"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.865" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.896" = type { %"class.WTF::VectorBuffer.897" }
%"class.WTF::VectorBuffer.897" = type { %"class.WTF::VectorBufferBase.898" }
%"class.WTF::VectorBufferBase.898" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.901" = type { %"class.WTF::HashMap.904" }
%"class.WTF::HashMap.904" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"struct.WTF::KeyValuePair.907"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.907" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.920" = type { %"class.WTF::HashMap.923" }
%"class.WTF::HashMap.923" = type { %"class.WTF::HashTable.924" }
%"class.WTF::HashTable.924" = type <{ %"struct.WTF::KeyValuePair.926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.926" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.927" }
%"class.blink::HeapHashSet.927" = type { %"class.WTF::HashSet.930" }
%"class.WTF::HashSet.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ %"class.blink::WeakMember.933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.933" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.943", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.950", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.943" = type { %"class.WTF::HashSet.946" }
%"class.WTF::HashSet.946" = type { %"class.WTF::HashTable.947" }
%"class.WTF::HashTable.947" = type <{ %"class.blink::Member.949"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.949" = type opaque
%"class.blink::HeapTaskRunnerTimer.950" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.951", { i64, i64 } }
%"class.blink::WeakMember.951" = type { %"class.blink::MemberBase.937" }
%"class.blink::WeakMember.938" = type { %"class.blink::MemberBase" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashSet.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.487, %"class.blink::Member.61", %"class.blink::Member.488" }
%"class.blink::HeapVector.501" = type { %"class.WTF::Vector.504" }
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506" }
%"class.WTF::VectorBufferBase.506" = type { %"class.blink::Member.488"*, i32, i32 }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.313", %"class.blink::HeapHashMap.313", %"class.blink::HeapHashMap.313", %"class.blink::HeapHashMap.313", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::HeapVector.320", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.383", %"class.blink::HeapVector.391", %"class.blink::HeapVector.399", %"class.blink::HeapVector.416", %"class.blink::HeapVector.424", %"class.blink::HeapVector.432", %"class.blink::HeapVector.445", %"class.WTF::Vector.452", i32, %"class.blink::Member.476" }
%"class.blink::HeapHashMap.313" = type { %"class.WTF::HashMap.316" }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.319" = type { %"class.WTF::AtomicString", %"class.blink::Member.1259" }
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::HeapVector.320"* }
%"class.blink::HeapVector.320" = type { %"class.WTF::Vector.323" }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %"class.blink::Member.326"*, i32, i32 }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.330", i64, [4 x i32] }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.30", %"class.blink::Member.351" }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.391" = type { %"class.WTF::Vector.394" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.blink::Member.397"*, i32, i32 }
%"class.blink::Member.397" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30" }
%"class.blink::HeapVector.399" = type { %"class.WTF::Vector.402" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::Member.405"*, i32, i32 }
%"class.blink::HeapVector.416" = type { %"class.WTF::Vector.419" }
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"class.blink::Member.422"*, i32, i32 }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.30" }
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", i32, [4 x i8] }>
%"class.blink::HeapVector.432" = type { %"class.WTF::Vector.435" }
%"class.WTF::Vector.435" = type { %"class.WTF::VectorBuffer.436" }
%"class.WTF::VectorBuffer.436" = type { %"class.WTF::VectorBufferBase.437" }
%"class.WTF::VectorBufferBase.437" = type { %"class.blink::Member.438"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440", %"class.blink::Member.440" }
%"class.blink::HeapVector.445" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.330", i32, i32 }
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.455, i8, [7 x i8] }>
%class.scoped_refptr.455 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.480", %"class.blink::HeapHashMap.480", %"class.blink::HeapHashMap.480", %"class.blink::HeapHashMap.480" }
%"class.blink::HeapHashMap.480" = type { %"class.WTF::HashMap.483" }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.486" = type opaque
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.107, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.302", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::Document"* }
%"class.blink::StyleRuleImport" = type { %"class.blink::StyleRuleBase", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.63", %"class.blink::Member.1233", %"class.WTF::String", %class.scoped_refptr.487, %"class.blink::Member.63", i8, i32 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::StyleRuleImport::ImportedStyleSheetClient"* }
%"class.blink::StyleRuleImport::ImportedStyleSheetClient" = type { %"class.blink::ResourceClient.base", %"class.blink::Member.67" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1237", [7 x i8], %"class.blink::Member.1238", i8 }>
%"class.blink::HeapVectorBacking.1335" = type { i8 }
%"class.blink::HeapVectorBacking.1343" = type { i8 }
%"class.blink::HeapVectorBacking.1355" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1376" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1376" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1363", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.1363" = type { %"class.std::__1::__vector_base.1364" }
%"class.std::__1::__vector_base.1364" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1365", i64, i64 }
%"class.std::__1::unique_ptr.1365" = type { %"class.std::__1::__compressed_pair.1366" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.blink::HeapVector.1241" = type { %"class.WTF::Vector.1244" }
%"class.WTF::Vector.1244" = type { %"class.WTF::VectorBuffer.1245" }
%"class.WTF::VectorBuffer.1245" = type { %"class.WTF::VectorBufferBase.1246" }
%"class.WTF::VectorBufferBase.1246" = type { %"class.blink::Member.1247"*, i32, i32 }
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.1392" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_10WeakMemberINS1_13CSSStyleSheetEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorINS1_6MemberIS4_EELj0EEEEEvRKT_RT0_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18StyleRuleNamespaceEE4CallIJRKN3WTF12AtomicStringES7_EEEPS1_DpOT_ = comdat any

$_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_17StyleRuleFontFaceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink10TraceTraitINS_15StyleRuleImportEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15StyleRuleImportEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleNamespaceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18StyleRuleNamespaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_7RuleSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_7RuleSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_7RuleSetEE7GetNameEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_13CSSStyleSheetEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_21CSSStyleSheetResourceEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_21CSSStyleSheetResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink18StyleSheetContents21ParseAuthorStyleSheetEPKNS_21CSSStyleSheetResourceEE28trace_event_unique_atomic328 = internal global i64 0, align 8
@.str = private unnamed_addr constant [24 x i8] c"blink,devtools.timeline\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"ParseAuthorStyleSheet\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink10http_names10kSourceMapE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names11kXSourceMapE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13StyleRuleBaseEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleRuleBase]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.12 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_17StyleRuleFontFaceEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [187 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::StyleRuleFontFace>, WTF::VectorTraits<blink::Member<const blink::StyleRuleFontFace> > >]\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15StyleRuleImportEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleImport>, WTF::VectorTraits<blink::Member<blink::StyleRuleImport> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18StyleRuleNamespaceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleNamespace>, WTF::VectorTraits<blink::Member<blink::StyleRuleNamespace> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRuleBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleBase>, WTF::VectorTraits<blink::Member<blink::StyleRuleBase> > >]\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleSheet>, WTF::VectorTraits<blink::Member<blink::CSSStyleSheet> > >]\00", align 1
@.str.19 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_13CSSStyleSheetEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [377 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::CSSStyleSheet>, blink::WeakMember<blink::CSSStyleSheet>, WTF::IdentityExtractor, WTF::MemberHash<blink::CSSStyleSheet>, WTF::HashTraits<blink::WeakMember<blink::CSSStyleSheet> >, WTF::HashTraits<blink::WeakMember<blink::CSSStyleSheet> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7RuleSetEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RuleSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_7RuleSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_7RuleSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE = hidden unnamed_addr alias void (%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"*, %"class.blink::StyleRuleImport"*), void (%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"*, %"class.blink::StyleRuleImport"*)* @_ZN5blink18StyleSheetContentsC2EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE
@_ZN5blink18StyleSheetContentsC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"*), void (%"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"*)* @_ZN5blink18StyleSheetContentsC2ERKS0_
@_ZN5blink18StyleSheetContentsD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleSheetContents"*), void (%"class.blink::StyleSheetContents"*)* @_ZN5blink18StyleSheetContentsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink18StyleSheetContents19SingleOwnerDocumentEPKS0_(%"class.blink::StyleSheetContents"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::StyleSheetContents"* %0, null
  br i1 %2, label %45, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %4, align 8
  %6 = icmp eq %"class.blink::StyleRuleImport"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %5, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %8, align 8
  %10 = icmp eq %"class.blink::StyleSheetContents"* %9, null
  br i1 %10, label %20, label %15

11:                                               ; preds = %15
  %12 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %18, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %12, align 8
  %14 = icmp eq %"class.blink::StyleSheetContents"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %7, %11
  %16 = phi %"class.blink::StyleSheetContents"* [ %13, %11 ], [ %9, %7 ]
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %17, align 8
  %19 = icmp eq %"class.blink::StyleRuleImport"* %18, null
  br i1 %19, label %20, label %11

20:                                               ; preds = %11, %15, %3, %7
  %21 = phi %"class.blink::StyleSheetContents"* [ %0, %3 ], [ %0, %7 ], [ %16, %15 ], [ %16, %11 ]
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %21, i64 0, i32 11, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %21, i64 0, i32 12, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %23
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %45

28:                                               ; preds = %20
  br i1 %6, label %42, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %5, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %30, align 8
  %32 = icmp eq %"class.blink::StyleSheetContents"* %31, null
  br i1 %32, label %42, label %37

33:                                               ; preds = %37
  %34 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %40, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %34, align 8
  %36 = icmp eq %"class.blink::StyleSheetContents"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %29, %33
  %38 = phi %"class.blink::StyleSheetContents"* [ %35, %33 ], [ %31, %29 ]
  %39 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %39, align 8
  %41 = icmp eq %"class.blink::StyleRuleImport"* %40, null
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %37, %28, %29
  %43 = phi %"class.blink::StyleSheetContents"* [ %0, %28 ], [ %0, %29 ], [ %38, %37 ], [ %38, %33 ]
  %44 = tail call %"class.blink::Document"* @_ZNK5blink18StyleSheetContents25ClientSingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* %43) #14
  br label %45

45:                                               ; preds = %20, %1, %42
  %46 = phi %"class.blink::Document"* [ %44, %42 ], [ null, %1 ], [ null, %20 ]
  ret %"class.blink::Document"* %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18StyleSheetContents18HasSingleOwnerNodeEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheetContents"* %7, null
  br i1 %8, label %18, label %13

9:                                                ; preds = %13
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %16, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  %12 = icmp eq %"class.blink::StyleSheetContents"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5, %9
  %14 = phi %"class.blink::StyleSheetContents"* [ %11, %9 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %15, align 8
  %17 = icmp eq %"class.blink::StyleRuleImport"* %16, null
  br i1 %17, label %18, label %9

18:                                               ; preds = %13, %9, %5, %1
  %19 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %0, %5 ], [ %14, %9 ], [ %14, %13 ]
  %20 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, %21
  %25 = icmp eq i32 %24, 1
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink18StyleSheetContents19SingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheetContents"* %7, null
  br i1 %8, label %18, label %13

9:                                                ; preds = %13
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %16, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  %12 = icmp eq %"class.blink::StyleSheetContents"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5, %9
  %14 = phi %"class.blink::StyleSheetContents"* [ %11, %9 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %15, align 8
  %17 = icmp eq %"class.blink::StyleRuleImport"* %16, null
  br i1 %17, label %18, label %9

18:                                               ; preds = %13, %9, %5, %1
  %19 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %0, %5 ], [ %14, %9 ], [ %14, %13 ]
  %20 = tail call %"class.blink::Document"* @_ZNK5blink18StyleSheetContents25ClientSingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* %19)
  ret %"class.blink::Document"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18StyleSheetContents20EstimatedSizeInBytesEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %6, %8
  %10 = tail call i32 @_ZN5blink9StyleRule18AverageSizeInBytesEv() #14
  %11 = mul i32 %9, %10
  %12 = add i32 %11, 192
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  br label %19

17:                                               ; preds = %31, %1
  %18 = phi i32 [ %12, %1 ], [ %32, %31 ]
  ret i32 %18

19:                                               ; preds = %15, %31
  %20 = phi i32 [ 0, %15 ], [ %33, %31 ]
  %21 = phi i32 [ %12, %15 ], [ %32, %31 ]
  %22 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %16, i32 %20) #14
  %23 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %24, i64 0, i32 6, i32 0, i32 0
  %26 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %25, align 8
  %27 = icmp eq %"class.blink::StyleSheetContents"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = tail call i32 @_ZNK5blink18StyleSheetContents20EstimatedSizeInBytesEv(%"class.blink::StyleSheetContents"* nonnull %26)
  %30 = add i32 %29, %21
  br label %31

31:                                               ; preds = %19, %28
  %32 = phi i32 [ %30, %28 ], [ %21, %19 ]
  %33 = add nuw i32 %20, 1
  %34 = load i32, i32* %2, align 4
  %35 = icmp ult i32 %33, %34
  br i1 %35, label %19, label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink18StyleSheetContents9RuleCountEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %6, %8
  ret i32 %9
}

declare i32 @_ZN5blink9StyleRule18AverageSizeInBytesEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContentsC2EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* nocapture, %"class.blink::CSSParserContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::StyleRuleImport"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::StyleRuleImport"* %3, %"class.blink::StyleRuleImport"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #14
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #14
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %4, %10, %25
  %28 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.69"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 68, i1 false)
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #14
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #14
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %27, %35, %50
  %53 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::CSSStyleSheetResource"* null, %"class.blink::CSSStyleSheetResource"** %53, align 8
  %54 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  store i8 65, i8* %54, align 8
  %55 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11
  %57 = bitcast %"class.blink::HeapHashSet"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 20, i1 false) #14
  %58 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12
  %59 = bitcast %"class.blink::HeapHashSet"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 20, i1 false) #14
  %60 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 13, i32 0, i32 0
  %61 = bitcast %"class.blink::RuleSet"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContentsC2ERKS0_(%"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"* dereferenceable(192)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::StyleRuleImport"* null, %"class.blink::StyleRuleImport"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #14
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::HeapVector.69", %"class.blink::HeapVector.69"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.67"* null, %"class.blink::Member.67"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %30, align 8
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %25
  %33 = zext i32 %28 to i64
  %34 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15StyleRuleImportEEEEEmm(i64 %33) #14
  %35 = lshr i64 %34, 3
  %36 = tail call %"class.blink::HeapVectorBacking.1335"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %35) #14
  %37 = ptrtoint %"class.blink::HeapVectorBacking.1335"* %36 to i64
  %38 = bitcast %"class.blink::HeapVector.69"* %26 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = trunc i64 %35 to i32
  store i32 %39, i32* %30, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.blink::HeapVectorBacking.1335", %"class.blink::HeapVectorBacking.1335"* %36, i64 0, i32 0
  br i1 %41, label %47, label %43

43:                                               ; preds = %32
  %44 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #14
  %45 = bitcast %"class.blink::HeapVector.69"* %26 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %25, %32, %43
  %48 = phi i64 [ %33, %32 ], [ %33, %43 ], [ 0, %25 ]
  %49 = phi i8* [ %42, %32 ], [ %46, %43 ], [ null, %25 ]
  %50 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store i32 %28, i32* %50, align 4
  %51 = shl nuw nsw i64 %48, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 %51, i1 false) #14
  %52 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 3, i32 0
  %54 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::HeapVector.76", %"class.blink::HeapVector.76"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.82"* null, %"class.blink::Member.82"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %57, align 8
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %47
  %60 = zext i32 %55 to i64
  %61 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleNamespaceEEEEEmm(i64 %60) #14
  %62 = lshr i64 %61, 3
  %63 = tail call %"class.blink::HeapVectorBacking.1343"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %62) #14
  %64 = ptrtoint %"class.blink::HeapVectorBacking.1343"* %63 to i64
  %65 = bitcast %"class.blink::HeapVector.76"* %52 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = trunc i64 %62 to i32
  store i32 %66, i32* %57, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.blink::HeapVectorBacking.1343", %"class.blink::HeapVectorBacking.1343"* %63, i64 0, i32 0
  br i1 %68, label %74, label %70

70:                                               ; preds = %59
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %69) #14
  %72 = bitcast %"class.blink::HeapVector.76"* %52 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %47, %59, %70
  %75 = phi i64 [ %60, %59 ], [ %60, %70 ], [ 0, %47 ]
  %76 = phi i8* [ %69, %59 ], [ %73, %70 ], [ null, %47 ]
  %77 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 %55, i32* %77, align 4
  %78 = shl nuw nsw i64 %75, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 %78, i1 false) #14
  %79 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4
  %80 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 4, i32 0
  %81 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.blink::HeapVector.87", %"class.blink::HeapVector.87"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.93"* null, %"class.blink::Member.93"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %84, align 8
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %101, label %86

86:                                               ; preds = %74
  %87 = zext i32 %82 to i64
  %88 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %87) #14
  %89 = lshr i64 %88, 3
  %90 = tail call %"class.blink::HeapVectorBacking.1355"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %89) #14
  %91 = ptrtoint %"class.blink::HeapVectorBacking.1355"* %90 to i64
  %92 = bitcast %"class.blink::HeapVector.87"* %79 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = trunc i64 %89 to i32
  store i32 %93, i32* %84, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.blink::HeapVectorBacking.1355", %"class.blink::HeapVectorBacking.1355"* %90, i64 0, i32 0
  br i1 %95, label %101, label %97

97:                                               ; preds = %86
  %98 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #14
  %99 = bitcast %"class.blink::HeapVector.87"* %79 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %74, %86, %97
  %102 = phi i64 [ %87, %86 ], [ %87, %97 ], [ 0, %74 ]
  %103 = phi i8* [ %96, %86 ], [ %100, %97 ], [ null, %74 ]
  %104 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  store i32 %82, i32* %104, align 4
  %105 = shl nuw nsw i64 %102, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 %105, i1 false) #14
  %106 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 5
  %107 = getelementptr inbounds %"class.WTF::HashMap.96", %"class.WTF::HashMap.96"* %106, i64 0, i32 0
  %108 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 5, i32 0, i32 2
  %109 = bitcast %"class.WTF::HashMap.96"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 20, i1 false) #14
  %110 = load i32, i32* %108, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %148, label %112

112:                                              ; preds = %101
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.97"* %107, i32 %110) #14
  %113 = load i32, i32* %108, align 4
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 5, i32 0, i32 0
  %116 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 5, i32 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %116, i64 %119
  br i1 %114, label %148, label %121

121:                                              ; preds = %112
  %122 = icmp eq i32 %118, 0
  br i1 %122, label %130, label %123

123:                                              ; preds = %121, %127
  %124 = phi %"struct.WTF::KeyValuePair.100"* [ %128, %127 ], [ %116, %121 ]
  %125 = bitcast %"struct.WTF::KeyValuePair.100"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  switch i64 %126, label %130 [
    i64 -1, label %127
    i64 0, label %127
  ]

127:                                              ; preds = %123, %123
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %124, i64 1
  %129 = icmp eq %"struct.WTF::KeyValuePair.100"* %128, %120
  br i1 %129, label %148, label %123

130:                                              ; preds = %123, %121
  %131 = phi %"struct.WTF::KeyValuePair.100"* [ %116, %121 ], [ %124, %123 ]
  %132 = icmp eq %"struct.WTF::KeyValuePair.100"* %131, %120
  br i1 %132, label %148, label %133

133:                                              ; preds = %130, %146
  %134 = phi %"struct.WTF::KeyValuePair.100"* [ %140, %146 ], [ %131, %130 ]
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %134, i64 0, i32 0
  %136 = tail call { %"struct.WTF::KeyValuePair.100"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.97"* %107, %"class.WTF::AtomicString"* dereferenceable(8) %135, %"struct.WTF::KeyValuePair.100"* dereferenceable(16) %134) #14
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %134, i64 1
  %138 = icmp eq %"struct.WTF::KeyValuePair.100"* %137, %120
  br i1 %138, label %148, label %139

139:                                              ; preds = %133, %143
  %140 = phi %"struct.WTF::KeyValuePair.100"* [ %144, %143 ], [ %137, %133 ]
  %141 = bitcast %"struct.WTF::KeyValuePair.100"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  switch i64 %142, label %146 [
    i64 -1, label %143
    i64 0, label %143
  ]

143:                                              ; preds = %139, %139
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %140, i64 1
  %145 = icmp eq %"struct.WTF::KeyValuePair.100"* %144, %120
  br i1 %145, label %148, label %139

146:                                              ; preds = %139
  %147 = icmp eq %"struct.WTF::KeyValuePair.100"* %140, %120
  br i1 %147, label %148, label %133

148:                                              ; preds = %127, %133, %146, %143, %101, %112, %130
  %149 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %150, %"class.WTF::StringImpl"** %151, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %152, label %170, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %170

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i33
  %162 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #14
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !2

167:                                              ; preds = %158
  tail call void @llvm.trap() #14
  unreachable

168:                                              ; preds = %158
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %159, align 4
  br label %170

170:                                              ; preds = %148, %153, %168
  %171 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::CSSStyleSheetResource"* null, %"class.blink::CSSStyleSheetResource"** %171, align 8
  %172 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %173 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 8
  %174 = load i8, i8* %173, align 8
  %175 = and i8 %174, 1
  %176 = load i8, i8* %172, align 8
  %177 = and i8 %176, -8
  %178 = or i8 %177, %175
  store i8 %178, i8* %172, align 8
  %179 = load i8, i8* %173, align 8
  %180 = and i8 %179, 8
  %181 = and i8 %178, -15
  %182 = or i8 %181, %180
  store i8 %182, i8* %172, align 8
  %183 = load i8, i8* %173, align 8
  %184 = and i8 %183, 16
  %185 = and i8 %182, -23
  %186 = or i8 %185, %184
  store i8 %186, i8* %172, align 8
  %187 = load i8, i8* %173, align 8
  %188 = and i8 %187, 32
  %189 = and i8 %186, 25
  %190 = or i8 %188, %189
  %191 = or i8 %190, 64
  store i8 %191, i8* %172, align 8
  %192 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 10
  %193 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %1, i64 0, i32 10
  %194 = bitcast %"class.blink::Member.102"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.blink::Member.102"* %192 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11
  %198 = bitcast %"class.blink::HeapHashSet"* %197 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 20, i1 false) #14
  %199 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12
  %200 = bitcast %"class.blink::HeapHashSet"* %199 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 20, i1 false) #14
  %201 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 13, i32 0, i32 0
  %202 = bitcast %"class.blink::RuleSet"** %201 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 17, i1 false)
  %203 = load i32, i32* %77, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %170
  %206 = getelementptr inbounds %"class.blink::HeapVector.76", %"class.blink::HeapVector.76"* %52, i64 0, i32 0
  br label %212

207:                                              ; preds = %228, %170
  %208 = load i32, i32* %104, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %232, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.blink::HeapVector.87", %"class.blink::HeapVector.87"* %79, i64 0, i32 0
  br label %233

212:                                              ; preds = %205, %228
  %213 = phi i32 [ 0, %205 ], [ %229, %228 ]
  %214 = tail call dereferenceable(8) %"class.blink::Member.82"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.79"* %53, i32 %213) #14
  %215 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %214, i64 0, i32 0, i32 0
  %216 = load %"class.blink::StyleRuleNamespace"*, %"class.blink::StyleRuleNamespace"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %216, i64 0, i32 1
  %218 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %216, i64 0, i32 2
  %219 = tail call %"class.blink::StyleRuleNamespace"* @_ZN5blink25MakeGarbageCollectedTraitINS_18StyleRuleNamespaceEE4CallIJRKN3WTF12AtomicStringES7_EEEPS1_DpOT_(%"class.WTF::AtomicString"* dereferenceable(8) %217, %"class.WTF::AtomicString"* dereferenceable(8) %218) #14
  %220 = tail call dereferenceable(8) %"class.blink::Member.82"* @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.79"* %206, i32 %213) #14
  %221 = ptrtoint %"class.blink::StyleRuleNamespace"* %219 to i64
  %222 = bitcast %"class.blink::Member.82"* %220 to i64*
  store atomic i64 %221, i64* %222 monotonic, align 8
  %223 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %212
  %226 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %219, i64 0, i32 0, i32 0
  %227 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %226) #14
  br label %228

228:                                              ; preds = %212, %225
  %229 = add nuw i32 %213, 1
  %230 = load i32, i32* %77, align 4
  %231 = icmp ult i32 %229, %230
  br i1 %231, label %212, label %207

232:                                              ; preds = %247, %207
  ret void

233:                                              ; preds = %210, %247
  %234 = phi i32 [ 0, %210 ], [ %248, %247 ]
  %235 = tail call dereferenceable(8) %"class.blink::Member.93"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %80, i32 %234) #14
  %236 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %235, i64 0, i32 0, i32 0
  %237 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %236, align 8
  %238 = tail call %"class.blink::StyleRuleBase"* @_ZNK5blink13StyleRuleBase4CopyEv(%"class.blink::StyleRuleBase"* %237) #14
  %239 = tail call dereferenceable(8) %"class.blink::Member.93"* @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %211, i32 %234) #14
  %240 = ptrtoint %"class.blink::StyleRuleBase"* %238 to i64
  %241 = bitcast %"class.blink::Member.93"* %239 to i64*
  store atomic i64 %240, i64* %241 monotonic, align 8
  %242 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %233
  %245 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %238, i64 0, i32 0
  %246 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %245) #14
  br label %247

247:                                              ; preds = %233, %244
  %248 = add nuw i32 %234, 1
  %249 = load i32, i32* %104, align 4
  %250 = icmp ult i32 %248, %249
  br i1 %250, label %233, label %232
}

declare %"class.blink::StyleRuleBase"* @_ZNK5blink13StyleRuleBase4CopyEv(%"class.blink::StyleRuleBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContentsD2Ev(%"class.blink::StyleSheetContents"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #14
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 5, i32 0, i32 0
  %37 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %36, align 8
  %38 = icmp eq %"struct.WTF::KeyValuePair.100"* %37, null
  br i1 %38, label %42, label %39, !prof !3

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.100"* nonnull %37, i32 %41) #14
  store %"struct.WTF::KeyValuePair.100"* null, %"struct.WTF::KeyValuePair.100"** %36, align 8
  br label %42

42:                                               ; preds = %35, %39
  %43 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #14
  br label %59

59:                                               ; preds = %42, %55, %58
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents33SetHasSyntacticallyValidCSSHeaderEb(%"class.blink::StyleSheetContents"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, -2
  %7 = or i8 %6, %3
  store i8 %7, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18StyleSheetContents22IsCacheableForResourceEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %9, %7 ]
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %4, align 8
  %6 = icmp eq %"class.blink::StyleRuleImport"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %5, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %8, align 8
  %10 = icmp eq %"class.blink::StyleSheetContents"* %9, null
  br i1 %10, label %11, label %2

11:                                               ; preds = %2, %7
  %12 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 11, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %20, align 8
  %22 = icmp eq %"class.blink::StyleRuleImport"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 6
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = and i8 %25, 1
  %30 = icmp ne i8 %29, 0
  br label %31

31:                                               ; preds = %19, %28, %23, %15, %11
  %32 = phi i1 [ false, %11 ], [ false, %15 ], [ false, %19 ], [ false, %23 ], [ %30, %28 ]
  ret i1 %32
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18StyleSheetContents13LoadCompletedEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #5 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %9, %7 ]
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %4, align 8
  %6 = icmp eq %"class.blink::StyleRuleImport"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %5, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %8, align 8
  %10 = icmp eq %"class.blink::StyleSheetContents"* %9, null
  br i1 %10, label %11, label %2

11:                                               ; preds = %2, %7
  %12 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 11, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18StyleSheetContents26IsCacheableForStyleElementEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = and i8 %7, 1
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %5, %10, %1
  %14 = phi i1 [ false, %1 ], [ false, %5 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents16ParserAppendRuleEPNS_13StyleRuleBaseE(%"class.blink::StyleSheetContents"*, %"class.blink::StyleRuleBase"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleBase"*, align 8
  %4 = alloca %"class.blink::StyleRuleImport"*, align 8
  %5 = alloca %"class.blink::StyleRuleNamespace"*, align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  store %"class.blink::StyleRuleBase"* %1, %"class.blink::StyleRuleBase"** %3, align 8
  %8 = bitcast %"class.blink::StyleRuleImport"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  store %"class.blink::StyleRuleImport"* inttoptr (i64 -6148914691236517206 to %"class.blink::StyleRuleImport"*), %"class.blink::StyleRuleImport"** %4, align 8
  %9 = icmp eq %"class.blink::StyleRuleBase"* %1, null
  %10 = ptrtoint %"class.blink::StyleRuleBase"* %1 to i64
  br i1 %9, label %86, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 0, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 2
  br i1 %14, label %15, label %83

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::StyleRuleImport"** %4 to %"class.blink::StyleRuleBase"**
  store %"class.blink::StyleRuleBase"* %1, %"class.blink::StyleRuleBase"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 32
  %18 = bitcast %"class.blink::StyleRuleBase"* %17 to %"class.blink::MediaQuerySet"**
  %19 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %18, align 8
  %20 = icmp eq %"class.blink::MediaQuerySet"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %23 = load i8, i8* %22, align 8
  %24 = or i8 %23, 32
  store i8 %24, i8* %22, align 8
  %25 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %25, align 8
  %27 = icmp eq %"class.blink::StyleRuleImport"* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %21, %33
  %29 = phi %"class.blink::StyleRuleImport"* [ %38, %33 ], [ %26, %21 ]
  %30 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %30, align 8
  %32 = icmp eq %"class.blink::StyleSheetContents"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %31, i64 0, i32 8
  %35 = load i8, i8* %34, align 8
  %36 = or i8 %35, 32
  store i8 %36, i8* %34, align 8
  %37 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %31, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %37, align 8
  %39 = icmp eq %"class.blink::StyleRuleImport"* %38, null
  br i1 %39, label %40, label %28

40:                                               ; preds = %33, %28, %21, %15
  %41 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %61, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %49, i64 %50
  %52 = bitcast %"class.blink::Member.67"* %51 to i64*
  store atomic i64 %10, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 0, i32 0
  %57 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %56) #14
  br label %58

58:                                               ; preds = %55, %47
  %59 = load i32, i32* %42, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %42, align 4
  br label %63

61:                                               ; preds = %40
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.72"* %41, %"class.blink::StyleRuleImport"** nonnull dereferenceable(8) %4) #14
  %62 = load i32, i32* %42, align 4
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i32 [ %60, %58 ], [ %62, %61 ]
  %65 = add i32 %64, -1
  %66 = call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %41, i32 %65) #14
  %67 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %68, i64 0, i32 2
  %70 = ptrtoint %"class.blink::StyleSheetContents"* %0 to i64
  %71 = bitcast %"class.blink::Member.63"* %69 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %63
  %75 = bitcast %"class.blink::StyleSheetContents"* %0 to i8*
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #14
  br label %77

77:                                               ; preds = %63, %74
  %78 = load i32, i32* %42, align 4
  %79 = add i32 %78, -1
  %80 = call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %41, i32 %79) #14
  %81 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %81, align 8
  call void @_ZN5blink15StyleRuleImport17RequestStyleSheetEv(%"class.blink::StyleRuleImport"* %82) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  br label %219

83:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %84 = bitcast %"class.blink::StyleRuleNamespace"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #14
  store %"class.blink::StyleRuleNamespace"* inttoptr (i64 -6148914691236517206 to %"class.blink::StyleRuleNamespace"*), %"class.blink::StyleRuleNamespace"** %5, align 8
  %85 = icmp eq i8 %13, 9
  br i1 %85, label %96, label %88

86:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %87 = bitcast %"class.blink::StyleRuleNamespace"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #14
  store %"class.blink::StyleRuleNamespace"* inttoptr (i64 -6148914691236517206 to %"class.blink::StyleRuleNamespace"*), %"class.blink::StyleRuleNamespace"** %5, align 8
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i8* [ %87, %86 ], [ %84, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #14
  %90 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0
  %91 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %218, label %204, !prof !2

96:                                               ; preds = %83
  %97 = bitcast %"class.blink::StyleRuleNamespace"** %5 to %"class.blink::StyleRuleBase"**
  store %"class.blink::StyleRuleBase"* %1, %"class.blink::StyleRuleBase"** %97, align 8
  %98 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #14
  %99 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 8
  %100 = bitcast %"class.blink::StyleRuleBase"* %99 to %"class.WTF::StringImpl"**
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  %103 = bitcast %"class.blink::StyleRuleBase"* %1 to %"class.blink::StyleRuleNamespace"*
  br i1 %102, label %122, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %122

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #14
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  tail call void @llvm.trap() #14
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  %121 = load %"class.blink::StyleRuleNamespace"*, %"class.blink::StyleRuleNamespace"** %5, align 8
  br label %122

122:                                              ; preds = %96, %104, %119
  %123 = phi %"class.blink::StyleRuleNamespace"* [ %103, %96 ], [ %103, %104 ], [ %121, %119 ]
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %124, align 8
  %125 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #14
  %126 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %123, i64 0, i32 2, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %146, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i33
  %138 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #14
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !2

143:                                              ; preds = %134
  tail call void @llvm.trap() #14
  unreachable

144:                                              ; preds = %134
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %135, align 4
  br label %146

146:                                              ; preds = %122, %129, %144
  %147 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %147, align 8
  call void @_ZN5blink18StyleSheetContents18ParserAddNamespaceERKN3WTF12AtomicStringES4_(%"class.blink::StyleSheetContents"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7)
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #14
  br label %163

163:                                              ; preds = %146, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #14
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #14
  br label %179

179:                                              ; preds = %163, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #14
  %180 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0
  %181 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %182, %184
  br i1 %185, label %202, label %186, !prof !2

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %180, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %187, align 8
  %189 = zext i32 %182 to i64
  %190 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %188, i64 %189
  %191 = bitcast %"class.blink::StyleRuleNamespace"** %5 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.blink::Member.82"* %190 to i64*
  store atomic i64 %192, i64* %193 monotonic, align 8
  %194 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %186
  %197 = inttoptr i64 %192 to i8*
  %198 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %197) #14
  br label %199

199:                                              ; preds = %196, %186
  %200 = load i32, i32* %181, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %181, align 4
  br label %203

202:                                              ; preds = %179
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.79"* %180, %"class.blink::StyleRuleNamespace"** nonnull dereferenceable(8) %5) #14
  br label %203

203:                                              ; preds = %199, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #14
  br label %219

204:                                              ; preds = %88
  %205 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %90, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %205, align 8
  %207 = zext i32 %92 to i64
  %208 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %206, i64 %207
  %209 = bitcast %"class.blink::Member.93"* %208 to i64*
  store atomic i64 %10, i64* %209 monotonic, align 8
  %210 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %215, label %212

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 0, i32 0
  %214 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %213) #14
  br label %215

215:                                              ; preds = %212, %204
  %216 = load i32, i32* %91, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %91, align 4
  br label %219

218:                                              ; preds = %88
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.90"* %90, %"class.blink::StyleRuleBase"** nonnull dereferenceable(8) %3) #14
  br label %219

219:                                              ; preds = %218, %215, %203, %77
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents18SetHasMediaQueriesEv(%"class.blink::StyleSheetContents"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8
  %4 = or i8 %3, 32
  store i8 %4, i8* %2, align 8
  %5 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %5, align 8
  %7 = icmp eq %"class.blink::StyleRuleImport"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %13
  %9 = phi %"class.blink::StyleRuleImport"* [ %18, %13 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  %12 = icmp eq %"class.blink::StyleSheetContents"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %11, i64 0, i32 8
  %15 = load i8, i8* %14, align 8
  %16 = or i8 %15, 32
  store i8 %16, i8* %14, align 8
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %11, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %17, align 8
  %19 = icmp eq %"class.blink::StyleRuleImport"* %18, null
  br i1 %19, label %20, label %8

20:                                               ; preds = %8, %13, %1
  ret void
}

declare void @_ZN5blink15StyleRuleImport17RequestStyleSheetEv(%"class.blink::StyleRuleImport"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents18ParserAddNamespaceERKN3WTF12AtomicStringES4_(%"class.blink::StyleSheetContents"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %7, label %48

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #14
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %7
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %96, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %96

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #14
  br label %96

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 5, i32 0
  %50 = tail call { %"struct.WTF::KeyValuePair.100"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.97"* %49, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #14
  %51 = extractvalue { %"struct.WTF::KeyValuePair.100"*, i8 } %50, 1
  %52 = and i8 %51, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %96

54:                                               ; preds = %48
  %55 = extractvalue { %"struct.WTF::KeyValuePair.100"*, i8 } %50, 0
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %55, i64 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #14
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %65
  tail call void @llvm.trap() #14
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %75, %60, %54
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = bitcast %"class.WTF::AtomicString"* %56 to i64*
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  store i64 %78, i64* %79, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #14
  br label %96

96:                                               ; preds = %95, %92, %77, %48, %47, %44, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::StyleSheetContents"* @_ZNK5blink18StyleSheetContents16ParentStyleSheetEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::StyleSheetContents"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::StyleSheetContents"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleBase"* @_ZNK5blink18StyleSheetContents6RuleAtEj(%"class.blink::StyleSheetContents"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  %8 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %7, i32 %1) #14
  %9 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %10, i64 0, i32 0
  br label %29

12:                                               ; preds = %2
  %13 = sub i32 %1, %4
  %14 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %13, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0
  %19 = tail call dereferenceable(8) %"class.blink::Member.82"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.79"* %18, i32 %13) #14
  %20 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::StyleRuleNamespace"*, %"class.blink::StyleRuleNamespace"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %21, i64 0, i32 0
  br label %29

23:                                               ; preds = %12
  %24 = sub i32 %13, %15
  %25 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0
  %26 = tail call dereferenceable(8) %"class.blink::Member.93"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %25, i32 %24) #14
  %27 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %27, align 8
  br label %29

29:                                               ; preds = %23, %17, %6
  %30 = phi %"class.blink::StyleRuleBase"* [ %11, %6 ], [ %22, %17 ], [ %28, %23 ]
  ret %"class.blink::StyleRuleBase"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents10ClearRulesEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %56

6:                                                ; preds = %56, %1
  %7 = phi i32 [ 0, %1 ], [ %64, %56 ]
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %6
  %12 = icmp eq i32 %7, 0
  %13 = bitcast %"class.WTF::Vector.72"* %2 to i8**
  br i1 %12, label %18, label %14

14:                                               ; preds = %11
  %15 = load i8*, i8** %13, align 8
  %16 = zext i32 %7 to i64
  %17 = shl nuw nsw i64 %16, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %15, i64 %17) #14
  store i32 0, i32* %3, align 4
  br label %18

18:                                               ; preds = %14, %11
  %19 = load i8*, i8** %13, align 8
  %20 = bitcast %"class.WTF::Vector.72"* %2 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store i32 0, i32* %8, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %19) #14
  br label %21

21:                                               ; preds = %6, %18
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0
  %23 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = bitcast %"class.WTF::Vector.79"* %22 to i8**
  br i1 %29, label %35, label %31

31:                                               ; preds = %26
  %32 = load i8*, i8** %30, align 8
  %33 = zext i32 %28 to i64
  %34 = shl nuw nsw i64 %33, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %32, i64 %34) #14
  store i32 0, i32* %27, align 4
  br label %35

35:                                               ; preds = %31, %26
  %36 = load i8*, i8** %30, align 8
  %37 = bitcast %"class.WTF::Vector.79"* %22 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %23, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %36) #14
  br label %38

38:                                               ; preds = %21, %35
  %39 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0
  %40 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  %47 = bitcast %"class.WTF::Vector.90"* %39 to i8**
  br i1 %46, label %52, label %48

48:                                               ; preds = %43
  %49 = load i8*, i8** %47, align 8
  %50 = zext i32 %45 to i64
  %51 = shl nuw nsw i64 %50, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %49, i64 %51) #14
  store i32 0, i32* %44, align 4
  br label %52

52:                                               ; preds = %48, %43
  %53 = load i8*, i8** %47, align 8
  %54 = bitcast %"class.WTF::Vector.90"* %39 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %53) #14
  br label %55

55:                                               ; preds = %38, %52
  ret void

56:                                               ; preds = %1, %56
  %57 = phi i32 [ %63, %56 ], [ 0, %1 ]
  %58 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %2, i32 %57) #14
  %59 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %60, i64 0, i32 2
  %62 = bitcast %"class.blink::Member.63"* %61 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  %63 = add nuw i32 %57, 1
  %64 = load i32, i32* %3, align 4
  %65 = icmp ult i32 %63, %64
  br i1 %65, label %56, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18StyleSheetContents17WrapperInsertRuleEPNS_13StyleRuleBaseEj(%"class.blink::StyleSheetContents"*, %"class.blink::StyleRuleBase"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleRuleBase"*, align 8
  %5 = alloca %"class.blink::StyleRuleImport"*, align 8
  %6 = alloca %"class.blink::StyleRuleNamespace"*, align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  store %"class.blink::StyleRuleBase"* %1, %"class.blink::StyleRuleBase"** %4, align 8
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %2
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %11, %2
  %15 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 0, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 2
  br i1 %14, label %18, label %70

18:                                               ; preds = %13
  br i1 %17, label %19, label %71

19:                                               ; preds = %18, %3
  %20 = bitcast %"class.blink::StyleRuleImport"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  store %"class.blink::StyleRuleImport"* inttoptr (i64 -6148914691236517206 to %"class.blink::StyleRuleImport"*), %"class.blink::StyleRuleImport"** %5, align 8
  %21 = icmp eq %"class.blink::StyleRuleBase"* %1, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 0, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 2
  br i1 %25, label %27, label %26

26:                                               ; preds = %22, %19
  store %"class.blink::StyleRuleImport"* null, %"class.blink::StyleRuleImport"** %5, align 8
  br label %68

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::StyleRuleImport"** %5 to %"class.blink::StyleRuleBase"**
  store %"class.blink::StyleRuleBase"* %1, %"class.blink::StyleRuleBase"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %1, i64 32
  %30 = bitcast %"class.blink::StyleRuleBase"* %29 to %"class.blink::MediaQuerySet"**
  %31 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %30, align 8
  %32 = icmp eq %"class.blink::MediaQuerySet"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %35 = load i8, i8* %34, align 8
  %36 = or i8 %35, 32
  store i8 %36, i8* %34, align 8
  %37 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %37, align 8
  %39 = icmp eq %"class.blink::StyleRuleImport"* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %33, %45
  %41 = phi %"class.blink::StyleRuleImport"* [ %50, %45 ], [ %38, %33 ]
  %42 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %42, align 8
  %44 = icmp eq %"class.blink::StyleSheetContents"* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %43, i64 0, i32 8
  %47 = load i8, i8* %46, align 8
  %48 = or i8 %47, 32
  store i8 %48, i8* %46, align 8
  %49 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %49, align 8
  %51 = icmp eq %"class.blink::StyleRuleImport"* %50, null
  br i1 %51, label %52, label %40

52:                                               ; preds = %45, %40, %33, %27
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.72"* %9, i32 %2, %"class.blink::StyleRuleImport"** nonnull dereferenceable(8) %5)
  %53 = call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %9, i32 %2) #14
  %54 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %55, i64 0, i32 2
  %57 = ptrtoint %"class.blink::StyleSheetContents"* %0 to i64
  %58 = bitcast %"class.blink::Member.63"* %56 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %52
  %62 = bitcast %"class.blink::StyleSheetContents"* %0 to i8*
  %63 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #14
  br label %64

64:                                               ; preds = %52, %61
  %65 = call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %9, i32 %2) #14
  %66 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %66, align 8
  call void @_ZN5blink15StyleRuleImport17RequestStyleSheetEv(%"class.blink::StyleRuleImport"* %67) #14
  br label %68

68:                                               ; preds = %26, %64
  %69 = phi i1 [ true, %64 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %181

70:                                               ; preds = %13
  br i1 %17, label %181, label %71

71:                                               ; preds = %18, %70
  %72 = sub i32 %2, %11
  %73 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0
  %74 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %72, %75
  br i1 %76, label %81, label %77

77:                                               ; preds = %71
  %78 = icmp eq i32 %72, %75
  %79 = icmp eq i8 %16, 9
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %177

81:                                               ; preds = %77, %71
  %82 = phi i8 [ 9, %77 ], [ %16, %71 ]
  %83 = bitcast %"class.blink::StyleRuleNamespace"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #14
  store %"class.blink::StyleRuleNamespace"* inttoptr (i64 -6148914691236517206 to %"class.blink::StyleRuleNamespace"*), %"class.blink::StyleRuleNamespace"** %6, align 8
  %84 = icmp ne %"class.blink::StyleRuleBase"* %1, null
  %85 = icmp eq i8 %82, 9
  %86 = and i1 %84, %85
  br i1 %86, label %88, label %87

87:                                               ; preds = %81
  store %"class.blink::StyleRuleNamespace"* null, %"class.blink::StyleRuleNamespace"** %6, align 8
  br label %175

88:                                               ; preds = %81
  %89 = bitcast %"class.blink::StyleRuleNamespace"** %6 to %"class.blink::StyleRuleBase"**
  store %"class.blink::StyleRuleBase"* %1, %"class.blink::StyleRuleBase"** %89, align 8
  %90 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %175

93:                                               ; preds = %88
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.79"* %73, i32 %72, %"class.blink::StyleRuleNamespace"** nonnull dereferenceable(8) %6)
  %94 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #14
  %95 = load %"class.blink::StyleRuleNamespace"*, %"class.blink::StyleRuleNamespace"** %6, align 8
  %96 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %95, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %117, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %117

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #14
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %104
  call void @llvm.trap() #14
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  %116 = load %"class.blink::StyleRuleNamespace"*, %"class.blink::StyleRuleNamespace"** %6, align 8
  br label %117

117:                                              ; preds = %93, %99, %114
  %118 = phi %"class.blink::StyleRuleNamespace"* [ %95, %93 ], [ %95, %99 ], [ %116, %114 ]
  %119 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %119, align 8
  %120 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #14
  %121 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %118, i64 0, i32 2, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %141, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i33
  %133 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #14
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !2

138:                                              ; preds = %129
  call void @llvm.trap() #14
  unreachable

139:                                              ; preds = %129
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %130, align 4
  br label %141

141:                                              ; preds = %117, %124, %139
  %142 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %142, align 8
  call void @_ZN5blink18StyleSheetContents18ParserAddNamespaceERKN3WTF12AtomicStringES4_(%"class.blink::StyleSheetContents"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8)
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #14
  br label %158

158:                                              ; preds = %141, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #14
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #14
  br label %174

174:                                              ; preds = %158, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  br label %175

175:                                              ; preds = %87, %88, %174
  %176 = phi i1 [ true, %174 ], [ false, %88 ], [ false, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #14
  br label %181

177:                                              ; preds = %77
  br i1 %79, label %181, label %178

178:                                              ; preds = %177
  %179 = sub i32 %72, %75
  %180 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.90"* %180, i32 %179, %"class.blink::StyleRuleBase"** nonnull dereferenceable(8) %4)
  br label %181

181:                                              ; preds = %177, %70, %178, %175, %68
  %182 = phi i1 [ %69, %68 ], [ %176, %175 ], [ true, %178 ], [ false, %70 ], [ false, %177 ]
  ret i1 %182
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.72"*, i32, %"class.blink::StyleRuleImport"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.72"* %0, i32 %35) #14
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.67"* %45, null
  %47 = icmp ne %"class.blink::Member.67"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !3

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.67"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.67"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.67"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.67"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.67"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.67"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.67"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.67"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.67"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.67"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.67"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.67"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #14
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::StyleRuleImport"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.67"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #14
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.79"*, i32, %"class.blink::StyleRuleNamespace"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.79"* %0, i32 %35) #14
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.82"* %45, null
  %47 = icmp ne %"class.blink::Member.82"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !3

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.82"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.82"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.82"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.82"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.82"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.82"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.82"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.82"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.82"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.82"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.82"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.82"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #14
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::StyleRuleNamespace"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.82"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #14
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.90"*, i32, %"class.blink::StyleRuleBase"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.90"* %0, i32 %35) #14
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.93"* %45, null
  %47 = icmp ne %"class.blink::Member.93"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !3

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.93"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.93"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.93"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.93"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.93"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.93"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.93"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.93"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.93"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.93"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.93"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.93"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #14
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::StyleRuleBase"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.93"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #14
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18StyleSheetContents17WrapperDeleteRuleEj(%"class.blink::StyleSheetContents"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %3, i32 %1) #14
  %9 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %10, i64 0, i32 2
  %12 = bitcast %"class.blink::Member.63"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.72"* %3, i32 %1)
  br label %58

13:                                               ; preds = %2
  %14 = sub i32 %1, %5
  %15 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %14, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %58

23:                                               ; preds = %19
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.79"* %15, i32 %14)
  br label %58

24:                                               ; preds = %13
  %25 = sub i32 %14, %17
  %26 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4, i32 0
  %27 = tail call dereferenceable(8) %"class.blink::Member.93"* @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %26, i32 %25) #14
  %28 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %29, i64 0, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 4
  br i1 %32, label %33, label %57

33:                                               ; preds = %24
  %34 = tail call dereferenceable(8) %"class.blink::Member.93"* @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %26, i32 %25) #14
  %35 = bitcast %"class.blink::Member.93"* %34 to %"class.blink::StyleRuleFontFace"**
  %36 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %37, align 8
  %39 = icmp eq %"class.blink::StyleRuleImport"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %38, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %41, align 8
  %43 = icmp eq %"class.blink::StyleSheetContents"* %42, null
  br i1 %43, label %53, label %48

44:                                               ; preds = %48
  %45 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %51, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %45, align 8
  %47 = icmp eq %"class.blink::StyleSheetContents"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %40, %44
  %49 = phi %"class.blink::StyleSheetContents"* [ %46, %44 ], [ %42, %40 ]
  %50 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %50, align 8
  %52 = icmp eq %"class.blink::StyleRuleImport"* %51, null
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %48, %33, %40
  %54 = phi %"class.blink::StyleSheetContents"* [ %0, %33 ], [ %0, %40 ], [ %49, %48 ], [ %49, %44 ]
  %55 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %54, i64 0, i32 11
  tail call fastcc void @_ZN5blinkL19RemoveFontFaceRulesERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEEPKNS_17StyleRuleFontFaceE(%"class.blink::HeapHashSet"* dereferenceable(24) %55, %"class.blink::StyleRuleFontFace"* %36) #14
  %56 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %54, i64 0, i32 12
  tail call fastcc void @_ZN5blinkL19RemoveFontFaceRulesERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEEPKNS_17StyleRuleFontFaceE(%"class.blink::HeapHashSet"* dereferenceable(24) %56, %"class.blink::StyleRuleFontFace"* %36) #14
  br label %57

57:                                               ; preds = %53, %24
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.90"* %26, i32 %25)
  br label %58

58:                                               ; preds = %19, %57, %23, %7
  %59 = phi i1 [ true, %7 ], [ true, %23 ], [ true, %57 ], [ false, %19 ]
  ret i1 %59
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.67"* %26, null
  %32 = icmp ne %"class.blink::Member.67"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !3

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.67"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.67"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.67"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.67"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.67"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !4

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.67"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.67"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.67"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.67"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.67"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.67"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 1
  %68 = bitcast %"class.blink::Member.67"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.67"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 2
  %73 = bitcast %"class.blink::Member.67"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.67"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 3
  %78 = bitcast %"class.blink::Member.67"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.67"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 4
  %83 = bitcast %"class.blink::Member.67"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.67"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 5
  %88 = bitcast %"class.blink::Member.67"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.67"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 6
  %93 = bitcast %"class.blink::Member.67"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.67"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 7
  %98 = bitcast %"class.blink::Member.67"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.67"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.67"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.67"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.67"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.67"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.67"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #14
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.67"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #14
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.79"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.82"* %26, null
  %32 = icmp ne %"class.blink::Member.82"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !3

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.82"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.82"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.82"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.82"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.82"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !6

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.82"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.82"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.82"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.82"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.82"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.82"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 1
  %68 = bitcast %"class.blink::Member.82"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.82"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 2
  %73 = bitcast %"class.blink::Member.82"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.82"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 3
  %78 = bitcast %"class.blink::Member.82"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.82"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 4
  %83 = bitcast %"class.blink::Member.82"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.82"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 5
  %88 = bitcast %"class.blink::Member.82"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.82"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 6
  %93 = bitcast %"class.blink::Member.82"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.82"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 7
  %98 = bitcast %"class.blink::Member.82"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.82"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.82"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.82"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.82"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.82"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.82"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #14
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.82"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #14
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents24NotifyRemoveFontFaceRuleEPKNS_17StyleRuleFontFaceE(%"class.blink::StyleSheetContents"* nocapture readonly, %"class.blink::StyleRuleFontFace"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %3, align 8
  %5 = icmp eq %"class.blink::StyleRuleImport"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  %9 = icmp eq %"class.blink::StyleSheetContents"* %8, null
  br i1 %9, label %19, label %14

10:                                               ; preds = %14
  %11 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %17, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %11, align 8
  %13 = icmp eq %"class.blink::StyleSheetContents"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6, %10
  %15 = phi %"class.blink::StyleSheetContents"* [ %12, %10 ], [ %8, %6 ]
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %16, align 8
  %18 = icmp eq %"class.blink::StyleRuleImport"* %17, null
  br i1 %18, label %19, label %10

19:                                               ; preds = %14, %10, %6, %2
  %20 = phi %"class.blink::StyleSheetContents"* [ %0, %2 ], [ %0, %6 ], [ %15, %10 ], [ %15, %14 ]
  %21 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 11
  tail call fastcc void @_ZN5blinkL19RemoveFontFaceRulesERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEEPKNS_17StyleRuleFontFaceE(%"class.blink::HeapHashSet"* dereferenceable(24) %21, %"class.blink::StyleRuleFontFace"* %1)
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 12
  tail call fastcc void @_ZN5blinkL19RemoveFontFaceRulesERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEEPKNS_17StyleRuleFontFaceE(%"class.blink::HeapHashSet"* dereferenceable(24) %22, %"class.blink::StyleRuleFontFace"* %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.90"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.93"* %26, null
  %32 = icmp ne %"class.blink::Member.93"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !3

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.93"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.93"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.93"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.93"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.93"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !7

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.93"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.93"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.93"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.93"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.93"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.93"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 1
  %68 = bitcast %"class.blink::Member.93"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.93"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 2
  %73 = bitcast %"class.blink::Member.93"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.93"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 3
  %78 = bitcast %"class.blink::Member.93"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.93"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 4
  %83 = bitcast %"class.blink::Member.93"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.93"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 5
  %88 = bitcast %"class.blink::Member.93"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.93"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 6
  %93 = bitcast %"class.blink::Member.93"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.93"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 7
  %98 = bitcast %"class.blink::Member.93"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.93"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.93"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.93"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.93"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.93"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.93"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #14
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.93"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #14
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18StyleSheetContents22NamespaceURIFromPrefixERKN3WTF12AtomicStringE(%"class.blink::StyleSheetContents"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.100"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = and i32 %15, %9
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %4, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %57, label %22

22:                                               ; preds = %6
  %23 = xor i32 %15, -1
  %24 = lshr i32 %14, 31
  %25 = add nsw i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %46, %22
  %37 = phi %"struct.WTF::KeyValuePair.100"* [ %18, %22 ], [ %51, %46 ]
  %38 = phi i64 [ %17, %22 ], [ %50, %46 ]
  %39 = phi i64 [ 0, %22 ], [ %48, %46 ]
  %40 = bitcast %"struct.WTF::KeyValuePair.100"* %37 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ne i8* %41, inttoptr (i64 -1 to i8*)
  %43 = bitcast i8* %41 to %"class.WTF::StringImpl"*
  %44 = icmp eq %"class.WTF::StringImpl"* %12, %43
  %45 = and i1 %42, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %36
  %47 = icmp eq i64 %39, 0
  %48 = select i1 %47, i64 %35, i64 %39
  %49 = add i64 %48, %38
  %50 = and i64 %49, %10
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %4, i64 %50
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %57, label %36

55:                                               ; preds = %36
  %56 = icmp eq %"struct.WTF::KeyValuePair.100"* %37, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %46, %55, %6, %2
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %37, i64 0, i32 1
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi %"class.WTF::AtomicString"* [ %60, %59 ], [ %58, %57 ]
  ret %"class.WTF::AtomicString"* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents21ParseAuthorStyleSheetEPKNS_21CSSStyleSheetResourceE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheetResource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.base::trace_event::TraceArguments", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = load atomic i64, i64* @_ZZN5blink18StyleSheetContents21ParseAuthorStyleSheetEPKNS_21CSSStyleSheetResourceEE28trace_event_unique_atomic328 monotonic, align 8
  %9 = inttoptr i64 %8 to i8*
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %14, !prof !2

11:                                               ; preds = %2
  %12 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)) #14
  %13 = ptrtoint i8* %12 to i64
  store atomic volatile i64 %13, i64* @_ZZN5blink18StyleSheetContents21ParseAuthorStyleSheetEPKNS_21CSSStyleSheetResourceEE28trace_event_unique_atomic328 monotonic, align 8
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i8* [ %12, %11 ], [ %9, %2 ]
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %85, label %19, !prof !3

19:                                               ; preds = %14
  %20 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %21 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %23 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false) #14
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 0
  store i8 9, i8* %25, align 1
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 0
  %28 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %29 = tail call i8* @_Znwm(i64 192) #15
  %30 = bitcast i8* %29 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %30, i64 4096, i64 4096) #14
  %31 = getelementptr inbounds i8, i8* %29, i64 80
  %32 = bitcast i8* %31 to %"class.protozero::ScatteredStreamWriter"*
  %33 = bitcast i8* %29 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %32, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %33) #14
  %34 = getelementptr inbounds i8, i8* %29, i64 120
  %35 = getelementptr inbounds i8, i8* %29, i64 168
  %36 = bitcast i8* %35 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %36) #14
  %37 = bitcast i8* %34 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %37, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %36) #14
  %38 = getelementptr inbounds i8, i8* %29, i64 24
  %39 = bitcast i8* %38 to i8**
  store i8* %31, i8** %39, align 8
  %40 = bitcast i8* %35 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %40, i64 1) #14
  %41 = bitcast i8* %35 to %"struct.std::__1::__list_node"**
  %42 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %42, i64 0, i32 1, i32 1
  store i32 0, i32* %43, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %37, %"class.protozero::ScatteredStreamWriter"* %32, %"class.protozero::MessageArena"* %36) #14
  %44 = bitcast %"union.base::trace_event::TraceValue"* %27 to i8**
  store i8* %29, i8** %44, align 8
  %45 = bitcast i8* %34 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::protos::pbzero::DebugAnnotation"* %45) #14
  %46 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %28, i64 16, i1 false) #14
  call void @_ZN5blink40inspector_parse_author_style_sheet_event4DataEN8perfetto11TracedValueEPKNS_21CSSStyleSheetResourceE(%"class.perfetto::TracedValue"* nonnull %3, %"class.blink::CSSStyleSheetResource"* %1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  %47 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %20, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %5, i32 0) #14
  %48 = load i8, i8* %24, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %84, label %50

50:                                               ; preds = %19, %79
  %51 = phi i64 [ %80, %79 ], [ 0, %19 ]
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 8
  br i1 %54, label %55, label %66

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %51
  %57 = bitcast %"union.base::trace_event::TraceValue"* %56 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %58 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %57, align 8
  %59 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %58, null
  br i1 %59, label %79, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %58 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %62 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %62, i64 1
  %64 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %63, align 8
  call void %64(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %58) #14
  %65 = load i8, i8* %52, align 1
  br label %66

66:                                               ; preds = %60, %50
  %67 = phi i8 [ %53, %50 ], [ %65, %60 ]
  %68 = icmp eq i8 %67, 9
  br i1 %68, label %69, label %79

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %51
  %71 = bitcast %"union.base::trace_event::TraceValue"* %70 to %"class.protozero::HeapBuffered"**
  %72 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %71, align 8
  %73 = icmp eq %"class.protozero::HeapBuffered"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %72, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %75) #14
  %76 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %72, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %76) #14
  %77 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %72, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %77) #14
  %78 = bitcast %"class.protozero::HeapBuffered"* %72 to i8*
  call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %74, %69, %66, %55
  %80 = add nuw nsw i64 %51, 1
  %81 = load i8, i8* %24, align 8
  %82 = zext i8 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %50, label %84

84:                                               ; preds = %79, %19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %85

85:                                               ; preds = %14, %84
  %86 = phi i8* [ null, %14 ], [ %15, %84 ]
  %87 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %14 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), %84 ]
  %88 = phi i64 [ -6148914691236517206, %14 ], [ %47, %84 ]
  %89 = getelementptr inbounds %"class.blink::CSSStyleSheetResource", %"class.blink::CSSStyleSheetResource"* %1, i64 0, i32 0, i32 0, i32 29
  %90 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 10, i32 0, i32 0
  %91 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %91, i64 0, i32 3
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %99

95:                                               ; preds = %85
  %96 = call zeroext i1 @_ZNK5blink16ResourceResponse16IsCorsSameOriginEv(%"class.blink::ResourceResponse"* %89) #14
  %97 = zext i1 %96 to i32
  %98 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %90, align 8
  br label %99

99:                                               ; preds = %95, %85
  %100 = phi %"class.blink::CSSParserContext"* [ %91, %85 ], [ %98, %95 ]
  %101 = phi i32 [ 0, %85 ], [ %97, %95 ]
  %102 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #14
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %104 = call %"class.WTF::StringImpl"* @_ZNK5blink21CSSStyleSheetResource9SheetTextEPKNS_16CSSParserContextENS0_13MIMETypeCheckE(%"class.blink::CSSStyleSheetResource"* %1, %"class.blink::CSSParserContext"* %100, i32 %101) #14
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %103, align 8
  %105 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names10kSourceMapE, align 8
  %106 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %89, %"class.WTF::AtomicString"* dereferenceable(8) %105) #14
  %107 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 14
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %106, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #14
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %116
  call void @llvm.trap() #14
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %126, %111, %99
  %129 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %130 = bitcast %"class.WTF::String"* %107 to i64*
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %107, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %129, i64* %130, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %149, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #14
  br label %147

147:                                              ; preds = %146, %143
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  br label %149

149:                                              ; preds = %147, %128
  %150 = phi %"class.WTF::StringImpl"* [ %148, %147 ], [ %109, %128 ]
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %156, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %196

156:                                              ; preds = %149, %152
  %157 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names11kXSourceMapE, align 8
  %158 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %89, %"class.WTF::AtomicString"* dereferenceable(8) %157) #14
  %159 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %179

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i33
  %171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #14
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %167
  call void @llvm.trap() #14
  unreachable

177:                                              ; preds = %167
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %179

179:                                              ; preds = %177, %162, %156
  %180 = ptrtoint %"class.WTF::StringImpl"* %160 to i64
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %180, i64* %130, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #14
  br label %196

196:                                              ; preds = %195, %192, %179, %152
  %197 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %90, align 8
  %198 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #14
  %199 = bitcast i8* %198 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_18StyleSheetContentsE(%"class.blink::CSSParserContext"* %199, %"class.blink::CSSParserContext"* %197, %"class.blink::StyleSheetContents"* %0) #14
  %200 = getelementptr inbounds i8, i8* %198, i64 -4
  %201 = bitcast i8* %200 to i16*
  %202 = load atomic i16, i16* %201 monotonic, align 2
  %203 = or i16 %202, 1
  store atomic i16 %203, i16* %201 release, align 2
  %204 = call i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"* %199, %"class.blink::StyleSheetContents"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 1, i1 zeroext true) #14
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %196
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #14
  br label %220

220:                                              ; preds = %196, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #14
  %221 = icmp eq i8* %86, null
  br i1 %221, label %226, label %222

222:                                              ; preds = %220
  %223 = load i8, i8* %86, align 1
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %222
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %86, i8* %87, i64 %88) #14
  br label %226

226:                                              ; preds = %220, %222, %225
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZNK5blink16ResourceResponse16IsCorsSameOriginEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink21CSSStyleSheetResource9SheetTextEPKNS_16CSSParserContextENS0_13MIMETypeCheckE(%"class.blink::CSSStyleSheetResource"*, %"class.blink::CSSParserContext"*, i32) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18StyleSheetContents11ParseStringERKN3WTF6StringEb(%"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %4, align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #14
  %7 = bitcast i8* %6 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_18StyleSheetContentsE(%"class.blink::CSSParserContext"* %7, %"class.blink::CSSParserContext"* %5, %"class.blink::StyleSheetContents"* %0) #14
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = tail call i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"* %7, %"class.blink::StyleSheetContents"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 0, i1 zeroext %2) #14
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18StyleSheetContents9IsLoadingEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  br label %10

7:                                                ; preds = %10
  %8 = load i32, i32* %2, align 4
  %9 = icmp ult i32 %16, %8
  br i1 %9, label %10, label %17

10:                                               ; preds = %5, %7
  %11 = phi i32 [ 0, %5 ], [ %16, %7 ]
  %12 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %6, i32 %11) #14
  %13 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink15StyleRuleImport9IsLoadingEv(%"class.blink::StyleRuleImport"* %14) #14
  %16 = add nuw i32 %11, 1
  br i1 %15, label %17, label %7

17:                                               ; preds = %10, %7, %1
  %18 = phi i1 [ false, %1 ], [ false, %7 ], [ true, %10 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK5blink15StyleRuleImport9IsLoadingEv(%"class.blink::StyleRuleImport"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::StyleSheetContents"* @_ZNK5blink18StyleSheetContents14RootStyleSheetEv(%"class.blink::StyleSheetContents"* readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheetContents"* %7, null
  br i1 %8, label %18, label %13

9:                                                ; preds = %13
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %16, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  %12 = icmp eq %"class.blink::StyleSheetContents"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5, %9
  %14 = phi %"class.blink::StyleSheetContents"* [ %11, %9 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %15, align 8
  %17 = icmp eq %"class.blink::StyleRuleImport"* %16, null
  br i1 %17, label %18, label %9

18:                                               ; preds = %13, %9, %5, %1
  %19 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %0, %5 ], [ %14, %9 ], [ %14, %13 ]
  ret %"class.blink::StyleSheetContents"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents11CheckLoadedEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.55", align 8
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  br label %11

8:                                                ; preds = %11
  %9 = load i32, i32* %3, align 4
  %10 = icmp ult i32 %17, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %8, %6
  %12 = phi i32 [ 0, %6 ], [ %17, %8 ]
  %13 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %7, i32 %12) #14
  %14 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink15StyleRuleImport9IsLoadingEv(%"class.blink::StyleRuleImport"* %15) #14
  %17 = add nuw i32 %12, 1
  br i1 %16, label %81, label %8

18:                                               ; preds = %8, %1
  %19 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %19, align 8
  %21 = icmp eq %"class.blink::StyleRuleImport"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %20, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %23, align 8
  %25 = icmp eq %"class.blink::StyleSheetContents"* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZN5blink18StyleSheetContents11CheckLoadedEv(%"class.blink::StyleSheetContents"* nonnull %24)
  br label %81

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %81, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11
  %33 = bitcast %"class.blink::HeapVector.55"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #14
  call void @_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_10WeakMemberINS1_13CSSStyleSheetEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorINS1_6MemberIS4_EELj0EEEEEvRKT_RT0_(%"class.blink::HeapHashSet"* dereferenceable(24) %32, %"class.blink::HeapVector.55"* nonnull dereferenceable(16) %2)
  %35 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %2, i64 0, i32 0
  %36 = load i32, i32* %34, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  br label %41

40:                                               ; preds = %77, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  br label %81

41:                                               ; preds = %38, %77
  %42 = phi i32 [ 0, %38 ], [ %78, %77 ]
  %43 = call dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"* nonnull %35, i32 %42) #14
  %44 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %45, i64 0, i32 4
  %47 = load i8, i8* %46, align 2, !range !8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %77

49:                                               ; preds = %41
  %50 = call dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"* nonnull %35, i32 %42) #14
  %51 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %52, i64 0, i32 14, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  %55 = icmp eq %"class.blink::Document"* %54, null
  br i1 %55, label %56, label %77

56:                                               ; preds = %49
  %57 = call dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"* nonnull %35, i32 %42) #14
  %58 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %59, i64 0, i32 11, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %77, label %63

63:                                               ; preds = %56
  %64 = call dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"* nonnull %35, i32 %42) #14
  %65 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %65, align 8
  %67 = call zeroext i1 @_ZN5blink13CSSStyleSheet11SheetLoadedEv(%"class.blink::CSSStyleSheet"* %66) #14
  br i1 %67, label %68, label %77

68:                                               ; preds = %63
  %69 = load i8, i8* %39, align 8
  %70 = lshr i8 %69, 1
  %71 = and i8 %70, 1
  %72 = zext i8 %71 to i32
  %73 = bitcast %"class.blink::Node"* %61 to void (%"class.blink::Node"*, i32)***
  %74 = load void (%"class.blink::Node"*, i32)**, void (%"class.blink::Node"*, i32)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Node"*, i32)*, void (%"class.blink::Node"*, i32)** %74, i64 47
  %76 = load void (%"class.blink::Node"*, i32)*, void (%"class.blink::Node"*, i32)** %75, align 8
  call void %76(%"class.blink::Node"* nonnull %61, i32 %72) #14
  br label %77

77:                                               ; preds = %49, %41, %68, %63, %56
  %78 = add nuw i32 %42, 1
  %79 = load i32, i32* %34, align 4
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %41, label %40

81:                                               ; preds = %11, %26, %40, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_10WeakMemberINS1_13CSSStyleSheetEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorINS1_6MemberIS4_EELj0EEEEEvRKT_RT0_(%"class.blink::HeapHashSet"* dereferenceable(24), %"class.blink::HeapVector.55"* dereferenceable(16)) local_unnamed_addr #7 comdat {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #14
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #14
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %20, %18
  br i1 %21, label %33, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.61"*, %"class.blink::Member.61"** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %24, i64 %25
  %28 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %24, i64 %26
  %29 = bitcast %"class.blink::Member.61"* %27 to i8*
  %30 = ptrtoint %"class.blink::Member.61"* %28 to i64
  %31 = ptrtoint %"class.blink::Member.61"* %27 to i64
  %32 = sub i64 %30, %31
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #14
  br label %58

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %35, %18
  br i1 %36, label %37, label %46

37:                                               ; preds = %33
  %38 = lshr i32 %35, 2
  %39 = add nuw i32 %35, 1
  %40 = add i32 %39, %38
  %41 = icmp ugt i32 %40, 4
  %42 = select i1 %41, i32 %40, i32 4
  %43 = icmp ugt i32 %42, %18
  %44 = select i1 %43, i32 %42, i32 %18
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.58"* %16, i32 %44) #14
  %45 = load i32, i32* %19, align 4
  br label %46

46:                                               ; preds = %37, %33
  %47 = phi i32 [ %45, %37 ], [ %20, %33 ]
  %48 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.61"*, %"class.blink::Member.61"** %48, align 8
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %49, i64 %50
  %52 = zext i32 %18 to i64
  %53 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %49, i64 %52
  %54 = bitcast %"class.blink::Member.61"* %51 to i8*
  %55 = ptrtoint %"class.blink::Member.61"* %53 to i64
  %56 = ptrtoint %"class.blink::Member.61"* %51 to i64
  %57 = sub i64 %55, %56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 %57, i1 false) #14
  br label %58

58:                                               ; preds = %22, %46
  store i32 %18, i32* %19, align 4
  %59 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %60 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %59, i64 0, i32 1
  %61 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %60) #14
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %58
  %64 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %60, i8* %64) #14
  br label %65

65:                                               ; preds = %58, %63
  %66 = phi i8* [ %64, %63 ], [ %61, %58 ]
  %67 = bitcast i8* %66 to %"class.blink::ThreadState"**
  %68 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 14
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = load i32, i32* %17, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %75, i64 %78
  br i1 %73, label %92, label %80

80:                                               ; preds = %65
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"class.blink::WeakMember.308"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"class.blink::WeakMember.308"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %83, i64 1
  %88 = icmp eq %"class.blink::WeakMember.308"* %87, %79
  br i1 %88, label %92, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"class.blink::WeakMember.308"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"class.blink::WeakMember.308"* %90, %79
  br i1 %91, label %92, label %93

92:                                               ; preds = %86, %105, %115, %112, %65, %89
  ret void

93:                                               ; preds = %89, %115
  %94 = phi i32 [ %116, %115 ], [ 0, %89 ]
  %95 = phi %"class.blink::WeakMember.308"* [ %109, %115 ], [ %90, %89 ]
  %96 = tail call dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"* %16, i32 %94) #14
  %97 = bitcast %"class.blink::WeakMember.308"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::Member.61"* %96 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %93
  %103 = inttoptr i64 %98 to i8*
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #14
  br label %105

105:                                              ; preds = %93, %102
  %106 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %95, i64 1
  %107 = icmp eq %"class.blink::WeakMember.308"* %106, %79
  br i1 %107, label %92, label %108

108:                                              ; preds = %105, %112
  %109 = phi %"class.blink::WeakMember.308"* [ %113, %112 ], [ %106, %105 ]
  %110 = bitcast %"class.blink::WeakMember.308"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %109, i64 1
  %114 = icmp eq %"class.blink::WeakMember.308"* %113, %79
  br i1 %114, label %92, label %108

115:                                              ; preds = %108
  %116 = add i32 %94, 1
  %117 = icmp eq %"class.blink::WeakMember.308"* %109, %79
  br i1 %117, label %92, label %93
}

declare zeroext i1 @_ZN5blink13CSSStyleSheet11SheetLoadedEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents17NotifyLoadedSheetEPKNS_21CSSStyleSheetResourceE(%"class.blink::StyleSheetContents"* nocapture, %"class.blink::CSSStyleSheetResource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSStyleSheetResource", %"class.blink::CSSStyleSheetResource"* %1, i64 0, i32 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = add i8 %4, -3
  %6 = icmp ult i8 %5, 2
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %9 = load i8, i8* %8, align 8
  %10 = shl nuw nsw i8 %7, 1
  %11 = or i8 %9, %10
  store i8 %11, i8* %8, align 8
  tail call void @_ZN5blink18StyleSheetContents12ClearRuleSetEv(%"class.blink::StyleSheetContents"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents12ClearRuleSetEv(%"class.blink::StyleSheetContents"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheetContents"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink18StyleSheetContents12ClearRuleSetEv(%"class.blink::StyleSheetContents"* nonnull %7)
  br label %10

10:                                               ; preds = %1, %5, %9
  %11 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 13, i32 0
  %12 = getelementptr inbounds %"class.blink::MemberBase.310", %"class.blink::MemberBase.310"* %11, i64 0, i32 0
  %13 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %12, align 8
  %14 = icmp eq %"class.blink::RuleSet"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::MemberBase.310"* %11 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11
  tail call fastcc void @_ZN5blinkL35SetNeedsActiveStyleUpdateForClientsERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEE(%"class.blink::HeapHashSet"* dereferenceable(24) %17)
  %18 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12
  tail call fastcc void @_ZN5blinkL35SetNeedsActiveStyleUpdateForClientsERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEE(%"class.blink::HeapHashSet"* dereferenceable(24) %18)
  br label %19

19:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents24StartLoadingDynamicSheetEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.55", align 8
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %3, align 8
  %5 = icmp eq %"class.blink::StyleRuleImport"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  %9 = icmp eq %"class.blink::StyleSheetContents"* %8, null
  br i1 %9, label %19, label %14

10:                                               ; preds = %14
  %11 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %17, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %11, align 8
  %13 = icmp eq %"class.blink::StyleSheetContents"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6, %10
  %15 = phi %"class.blink::StyleSheetContents"* [ %12, %10 ], [ %8, %6 ]
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %16, align 8
  %18 = icmp eq %"class.blink::StyleRuleImport"* %17, null
  br i1 %18, label %19, label %10

19:                                               ; preds = %14, %10, %6, %1
  %20 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %0, %6 ], [ %15, %10 ], [ %15, %14 ]
  %21 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 11, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 11, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %25, i64 %28
  br i1 %23, label %42, label %30

30:                                               ; preds = %19
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"class.blink::WeakMember.308"* [ %37, %36 ], [ %25, %30 ]
  %34 = bitcast %"class.blink::WeakMember.308"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %33, i64 1
  %38 = icmp eq %"class.blink::WeakMember.308"* %37, %29
  br i1 %38, label %42, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"class.blink::WeakMember.308"* [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"class.blink::WeakMember.308"* %40, %29
  br i1 %41, label %42, label %50

42:                                               ; preds = %36, %50, %63, %60, %19, %39
  %43 = bitcast %"class.blink::HeapVector.55"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #14
  %45 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %20, i64 0, i32 12
  call void @_ZN3WTF12CopyToVectorIN5blink11HeapHashSetINS1_10WeakMemberINS1_13CSSStyleSheetEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEENS1_10HeapVectorINS1_6MemberIS4_EELj0EEEEEvRKT_RT0_(%"class.blink::HeapHashSet"* dereferenceable(24) %45, %"class.blink::HeapVector.55"* nonnull dereferenceable(16) %2)
  %46 = load i32, i32* %44, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %65, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::HeapVector.55", %"class.blink::HeapVector.55"* %2, i64 0, i32 0
  br label %66

50:                                               ; preds = %39, %63
  %51 = phi %"class.blink::WeakMember.308"* [ %57, %63 ], [ %40, %39 ]
  %52 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %52, align 8
  tail call void @_ZN5blink13CSSStyleSheet24StartLoadingDynamicSheetEv(%"class.blink::CSSStyleSheet"* %53) #14
  %54 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %51, i64 1
  %55 = icmp eq %"class.blink::WeakMember.308"* %54, %29
  br i1 %55, label %42, label %56

56:                                               ; preds = %50, %60
  %57 = phi %"class.blink::WeakMember.308"* [ %61, %60 ], [ %54, %50 ]
  %58 = bitcast %"class.blink::WeakMember.308"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  switch i64 %59, label %63 [
    i64 -1, label %60
    i64 0, label %60
  ]

60:                                               ; preds = %56, %56
  %61 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %57, i64 1
  %62 = icmp eq %"class.blink::WeakMember.308"* %61, %29
  br i1 %62, label %42, label %56

63:                                               ; preds = %56
  %64 = icmp eq %"class.blink::WeakMember.308"* %57, %29
  br i1 %64, label %42, label %50

65:                                               ; preds = %66, %42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #14
  ret void

66:                                               ; preds = %48, %66
  %67 = phi i32 [ 0, %48 ], [ %71, %66 ]
  %68 = call dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"* nonnull %49, i32 %67) #14
  %69 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %69, align 8
  call void @_ZN5blink13CSSStyleSheet24StartLoadingDynamicSheetEv(%"class.blink::CSSStyleSheet"* %70) #14
  %71 = add nuw i32 %67, 1
  %72 = load i32, i32* %44, align 4
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %66, label %65
}

declare void @_ZN5blink13CSSStyleSheet24StartLoadingDynamicSheetEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink18StyleSheetContents15SingleOwnerNodeEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheetContents"* %7, null
  br i1 %8, label %18, label %13

9:                                                ; preds = %13
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %16, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  %12 = icmp eq %"class.blink::StyleSheetContents"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5, %9
  %14 = phi %"class.blink::StyleSheetContents"* [ %11, %9 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %15, align 8
  %17 = icmp eq %"class.blink::StyleRuleImport"* %16, null
  br i1 %17, label %18, label %9

18:                                               ; preds = %13, %9, %5, %1
  %19 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %0, %5 ], [ %14, %9 ], [ %14, %13 ]
  %20 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, %21
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %66

26:                                               ; preds = %18
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 0
  %30 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %28, %40
  %37 = phi %"class.blink::WeakMember.308"* [ %41, %40 ], [ %30, %28 ]
  %38 = bitcast %"class.blink::WeakMember.308"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %60 [
    i64 -1, label %40
    i64 0, label %40
  ]

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %37, i64 1
  %42 = icmp eq %"class.blink::WeakMember.308"* %41, %34
  br i1 %42, label %60, label %36

43:                                               ; preds = %26
  %44 = icmp eq i32 %23, 0
  %45 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 0
  %46 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %46, i64 %49
  br i1 %44, label %60, label %51

51:                                               ; preds = %43
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %51, %57
  %54 = phi %"class.blink::WeakMember.308"* [ %58, %57 ], [ %46, %51 ]
  %55 = bitcast %"class.blink::WeakMember.308"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %60 [
    i64 -1, label %57
    i64 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %54, i64 1
  %59 = icmp eq %"class.blink::WeakMember.308"* %58, %50
  br i1 %59, label %60, label %53

60:                                               ; preds = %40, %36, %57, %53, %51, %43, %28
  %61 = phi %"class.blink::WeakMember.308"* [ %30, %28 ], [ %50, %43 ], [ %46, %51 ], [ %54, %53 ], [ %50, %57 ], [ %37, %36 ], [ %34, %40 ]
  %62 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %63, i64 0, i32 11, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  br label %66

66:                                               ; preds = %60, %18
  %67 = phi %"class.blink::Node"* [ null, %18 ], [ %65, %60 ]
  ret %"class.blink::Node"* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink18StyleSheetContents25ClientSingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 64
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %57, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sub i32 0, %8
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %57, label %13

13:                                               ; preds = %6
  %14 = icmp eq i32 %8, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %17 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %15, %27
  %24 = phi %"class.blink::WeakMember.308"* [ %28, %27 ], [ %17, %15 ]
  %25 = bitcast %"class.blink::WeakMember.308"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  switch i64 %26, label %30 [
    i64 -1, label %27
    i64 0, label %27
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %24, i64 1
  %29 = icmp eq %"class.blink::WeakMember.308"* %28, %21
  br i1 %29, label %30, label %23

30:                                               ; preds = %27, %23, %15
  %31 = phi %"class.blink::WeakMember.308"* [ %17, %15 ], [ %21, %27 ], [ %24, %23 ]
  %32 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %32, align 8
  %34 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %33) #14
  br label %57

35:                                               ; preds = %13
  %36 = icmp eq i32 %10, 0
  %37 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %38 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %38, i64 %41
  br i1 %36, label %52, label %43

43:                                               ; preds = %35
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %43, %49
  %46 = phi %"class.blink::WeakMember.308"* [ %50, %49 ], [ %38, %43 ]
  %47 = bitcast %"class.blink::WeakMember.308"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %46, i64 1
  %51 = icmp eq %"class.blink::WeakMember.308"* %50, %42
  br i1 %51, label %52, label %45

52:                                               ; preds = %49, %45, %43, %35
  %53 = phi %"class.blink::WeakMember.308"* [ %42, %35 ], [ %38, %43 ], [ %42, %49 ], [ %46, %45 ]
  %54 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %54, align 8
  %56 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %55) #14
  br label %57

57:                                               ; preds = %52, %30, %6, %1
  %58 = phi %"class.blink::Document"* [ null, %1 ], [ %34, %30 ], [ %56, %52 ], [ null, %6 ]
  ret %"class.blink::Document"* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink18StyleSheetContents16AnyOwnerDocumentEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %2, align 8
  %4 = icmp eq %"class.blink::StyleRuleImport"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheetContents"* %7, null
  br i1 %8, label %18, label %13

9:                                                ; preds = %13
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %16, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  %12 = icmp eq %"class.blink::StyleSheetContents"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5, %9
  %14 = phi %"class.blink::StyleSheetContents"* [ %11, %9 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %15, align 8
  %17 = icmp eq %"class.blink::StyleRuleImport"* %16, null
  br i1 %17, label %18, label %9

18:                                               ; preds = %13, %9, %5, %1
  %19 = phi %"class.blink::StyleSheetContents"* [ %0, %1 ], [ %0, %5 ], [ %14, %9 ], [ %14, %13 ]
  %20 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 0, %21
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %65, label %26

26:                                               ; preds = %18
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %43, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 0
  %30 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 11, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %28, %40
  %37 = phi %"class.blink::WeakMember.308"* [ %41, %40 ], [ %30, %28 ]
  %38 = bitcast %"class.blink::WeakMember.308"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %60 [
    i64 -1, label %40
    i64 0, label %40
  ]

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %37, i64 1
  %42 = icmp eq %"class.blink::WeakMember.308"* %41, %34
  br i1 %42, label %60, label %36

43:                                               ; preds = %26
  %44 = icmp eq i32 %23, 0
  %45 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 0
  %46 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %19, i64 0, i32 12, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %46, i64 %49
  br i1 %44, label %60, label %51

51:                                               ; preds = %43
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %51, %57
  %54 = phi %"class.blink::WeakMember.308"* [ %58, %57 ], [ %46, %51 ]
  %55 = bitcast %"class.blink::WeakMember.308"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %60 [
    i64 -1, label %57
    i64 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %54, i64 1
  %59 = icmp eq %"class.blink::WeakMember.308"* %58, %50
  br i1 %59, label %60, label %53

60:                                               ; preds = %36, %40, %53, %57, %43, %51, %28
  %61 = phi %"class.blink::WeakMember.308"* [ %30, %28 ], [ %50, %43 ], [ %46, %51 ], [ %50, %57 ], [ %54, %53 ], [ %34, %40 ], [ %37, %36 ]
  %62 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %62, align 8
  %64 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %63) #14
  br label %65

65:                                               ; preds = %60, %18
  %66 = phi %"class.blink::Document"* [ null, %18 ], [ %64, %60 ]
  ret %"class.blink::Document"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink18StyleSheetContents22ClientAnyOwnerDocumentEv(%"class.blink::StyleSheetContents"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 0, %3
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %47, label %8

8:                                                ; preds = %1
  %9 = icmp eq i32 %3, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %10, %22
  %19 = phi %"class.blink::WeakMember.308"* [ %23, %22 ], [ %12, %10 ]
  %20 = bitcast %"class.blink::WeakMember.308"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %42 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %19, i64 1
  %24 = icmp eq %"class.blink::WeakMember.308"* %23, %16
  br i1 %24, label %42, label %18

25:                                               ; preds = %8
  %26 = icmp eq i32 %5, 0
  %27 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %28 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %28, i64 %31
  br i1 %26, label %42, label %33

33:                                               ; preds = %25
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %33, %39
  %36 = phi %"class.blink::WeakMember.308"* [ %40, %39 ], [ %28, %33 ]
  %37 = bitcast %"class.blink::WeakMember.308"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %36, i64 1
  %41 = icmp eq %"class.blink::WeakMember.308"* %40, %32
  br i1 %41, label %42, label %35

42:                                               ; preds = %22, %18, %39, %35, %33, %25, %10
  %43 = phi %"class.blink::WeakMember.308"* [ %12, %10 ], [ %32, %25 ], [ %28, %33 ], [ %36, %35 ], [ %32, %39 ], [ %19, %18 ], [ %16, %22 ]
  %44 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %44, align 8
  %46 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %45) #14
  br label %47

47:                                               ; preds = %42, %1
  %48 = phi %"class.blink::Document"* [ null, %1 ], [ %46, %42 ]
  ret %"class.blink::Document"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18StyleSheetContents31HasFailedOrCanceledSubresourcesEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4
  %3 = tail call fastcc zeroext i1 @_ZN5blinkL42ChildRulesHaveFailedOrCanceledSubresourcesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::HeapVector.87"* dereferenceable(16) %2)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL42ChildRulesHaveFailedOrCanceledSubresourcesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::HeapVector.87"* dereferenceable(16)) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::HeapVector.87", %"class.blink::HeapVector.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HeapVector.87", %"class.blink::HeapVector.87"* %0, i64 0, i32 0
  br label %7

7:                                                ; preds = %5, %26
  %8 = phi i32 [ 0, %5 ], [ %27, %26 ]
  %9 = tail call dereferenceable(8) %"class.blink::Member.93"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %6, i32 %8) #14
  %10 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 1
  switch i8 %13, label %26 [
    i8 1, label %14
    i8 4, label %17
    i8 10, label %22
    i8 3, label %22
  ]

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::StyleRuleBase"* %11 to %"class.blink::StyleRule"*
  %16 = tail call zeroext i1 @_ZNK5blink9StyleRule42PropertiesHaveFailedOrCanceledSubresourcesEv(%"class.blink::StyleRule"* %15) #14
  br i1 %16, label %30, label %26

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %11, i64 8
  %19 = bitcast %"class.blink::StyleRuleBase"* %18 to %"class.blink::CSSPropertyValueSet"**
  %20 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSPropertyValueSet"* %20) #14
  br i1 %21, label %30, label %26

22:                                               ; preds = %7, %7
  %23 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %11, i64 8
  %24 = bitcast %"class.blink::StyleRuleBase"* %23 to %"class.blink::HeapVector.87"*
  %25 = tail call fastcc zeroext i1 @_ZN5blinkL42ChildRulesHaveFailedOrCanceledSubresourcesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::HeapVector.87"* dereferenceable(16) %24)
  br i1 %25, label %30, label %26

26:                                               ; preds = %22, %17, %14, %7
  %27 = add nuw i32 %8, 1
  %28 = load i32, i32* %2, align 4
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %7, label %30

30:                                               ; preds = %14, %17, %22, %26, %1
  %31 = phi i1 [ false, %1 ], [ false, %26 ], [ true, %22 ], [ true, %17 ], [ true, %14 ]
  ret i1 %31
}

declare %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents14RegisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  store %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSStyleSheet"** %3, align 8
  %4 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %1) #14
  %5 = icmp eq %"class.blink::Document"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Document"* @_ZNK5blink18StyleSheetContents25ClientSingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* %0)
  %8 = icmp eq %"class.blink::Document"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %1) #14
  %11 = icmp eq %"class.blink::Document"* %10, %7
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, -65
  store i8 %15, i8* %13, align 8
  br label %16

16:                                               ; preds = %9, %6, %12
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0
  %18 = call { %"class.blink::WeakMember.308"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.306"* %17, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3) #14
  br label %19

19:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents16UnregisterClientEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0
  %4 = ptrtoint %"class.blink::CSSStyleSheet"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %5, align 8
  %7 = icmp eq %"class.blink::WeakMember.308"* %6, null
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %35, align 8
  %37 = icmp eq %"class.blink::CSSStyleSheet"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::CSSStyleSheet"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::CSSStyleSheet"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %63, align 8
  %65 = icmp eq %"class.blink::CSSStyleSheet"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::WeakMember.308"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::WeakMember.308"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::WeakMember.308"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %6, i64 %75
  %78 = icmp eq %"class.blink::WeakMember.308"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.306"* %80, %"class.blink::WeakMember.308"* %76) #14
  br label %81

81:                                               ; preds = %74, %79
  %82 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0
  %83 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %83, align 8
  %85 = icmp eq %"class.blink::WeakMember.308"* %84, null
  %86 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  br i1 %85, label %149, label %88

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  %90 = zext i32 %89 to i64
  %91 = shl i64 %4, 32
  %92 = xor i64 %91, -1
  %93 = add i64 %92, %4
  %94 = lshr i64 %93, 22
  %95 = xor i64 %94, %93
  %96 = shl i64 %95, 13
  %97 = xor i64 %96, -1
  %98 = add i64 %95, %97
  %99 = lshr i64 %98, 8
  %100 = xor i64 %99, %98
  %101 = mul i64 %100, 9
  %102 = lshr i64 %101, 15
  %103 = xor i64 %102, %101
  %104 = shl i64 %103, 27
  %105 = xor i64 %104, -1
  %106 = add i64 %103, %105
  %107 = lshr i64 %106, 31
  %108 = xor i64 %107, %106
  %109 = trunc i64 %108 to i32
  %110 = and i32 %89, %109
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %84, i64 %111
  %113 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %113, align 8
  %115 = icmp eq %"class.blink::CSSStyleSheet"* %114, %1
  br i1 %115, label %144, label %116

116:                                              ; preds = %88
  %117 = xor i32 %109, -1
  %118 = lshr i32 %109, 23
  %119 = add i32 %118, %117
  %120 = shl i32 %119, 12
  %121 = xor i32 %120, %119
  %122 = lshr i32 %121, 7
  %123 = xor i32 %122, %121
  %124 = shl i32 %123, 2
  %125 = xor i32 %124, %123
  %126 = lshr i32 %125, 20
  %127 = xor i32 %126, %125
  %128 = or i32 %127, 1
  %129 = zext i32 %128 to i64
  br label %130

130:                                              ; preds = %135, %116
  %131 = phi %"class.blink::CSSStyleSheet"* [ %114, %116 ], [ %142, %135 ]
  %132 = phi i64 [ %111, %116 ], [ %139, %135 ]
  %133 = phi i64 [ 0, %116 ], [ %137, %135 ]
  %134 = icmp eq %"class.blink::CSSStyleSheet"* %131, null
  br i1 %134, label %149, label %135

135:                                              ; preds = %130
  %136 = icmp eq i64 %133, 0
  %137 = select i1 %136, i64 %129, i64 %133
  %138 = add i64 %137, %132
  %139 = and i64 %138, %90
  %140 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %84, i64 %139
  %141 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %141, align 8
  %143 = icmp eq %"class.blink::CSSStyleSheet"* %142, %1
  br i1 %143, label %144, label %130

144:                                              ; preds = %135, %88
  %145 = phi %"class.blink::WeakMember.308"* [ %112, %88 ], [ %140, %135 ]
  %146 = icmp eq %"class.blink::WeakMember.308"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = zext i32 %87 to i64
  br label %152

149:                                              ; preds = %130, %144, %81
  %150 = zext i32 %87 to i64
  %151 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %84, i64 %150
  br label %152

152:                                              ; preds = %149, %147
  %153 = phi i64 [ %148, %147 ], [ %150, %149 ]
  %154 = phi %"class.blink::WeakMember.308"* [ %145, %147 ], [ %151, %149 ]
  %155 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %84, i64 %153
  %156 = icmp eq %"class.blink::WeakMember.308"* %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %82, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.306"* %158, %"class.blink::WeakMember.308"* %154) #14
  br label %159

159:                                              ; preds = %152, %157
  %160 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %1) #14
  %161 = icmp eq %"class.blink::Document"* %160, null
  br i1 %161, label %174, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %174

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 8
  %172 = load i8, i8* %171, align 8
  %173 = or i8 %172, 64
  store i8 %173, i8* %171, align 8
  br label %174

174:                                              ; preds = %159, %162, %166, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents19ClientLoadCompletedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  store %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSStyleSheet"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0
  %5 = ptrtoint %"class.blink::CSSStyleSheet"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %6, align 8
  %8 = icmp eq %"class.blink::WeakMember.308"* %7, null
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %72, label %11

11:                                               ; preds = %2
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %34
  %36 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %36, align 8
  %38 = icmp eq %"class.blink::CSSStyleSheet"* %37, %1
  br i1 %38, label %67, label %39

39:                                               ; preds = %11
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::CSSStyleSheet"* [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::CSSStyleSheet"* %54, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %62
  %64 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %64, align 8
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %65, %1
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %11
  %68 = phi %"class.blink::WeakMember.308"* [ %35, %11 ], [ %63, %58 ]
  %69 = icmp eq %"class.blink::WeakMember.308"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = zext i32 %10 to i64
  br label %75

72:                                               ; preds = %53, %67, %2
  %73 = zext i32 %10 to i64
  %74 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %73
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"class.blink::WeakMember.308"* [ %68, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %76
  %79 = icmp eq %"class.blink::WeakMember.308"* %78, %77
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.306"* %81, %"class.blink::WeakMember.308"* %77) #14
  br label %82

82:                                               ; preds = %75, %80
  %83 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %1) #14
  %84 = icmp eq %"class.blink::Document"* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0
  %87 = call { %"class.blink::WeakMember.308"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.306"* %86, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3) #14
  br label %88

88:                                               ; preds = %82, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents17ClientLoadStartedEPNS_13CSSStyleSheetE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  store %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSStyleSheet"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0
  %5 = ptrtoint %"class.blink::CSSStyleSheet"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %6, align 8
  %8 = icmp eq %"class.blink::WeakMember.308"* %7, null
  %9 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %72, label %11

11:                                               ; preds = %2
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %34
  %36 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %36, align 8
  %38 = icmp eq %"class.blink::CSSStyleSheet"* %37, %1
  br i1 %38, label %67, label %39

39:                                               ; preds = %11
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::CSSStyleSheet"* [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::CSSStyleSheet"* %54, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %62
  %64 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %64, align 8
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %65, %1
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %11
  %68 = phi %"class.blink::WeakMember.308"* [ %35, %11 ], [ %63, %58 ]
  %69 = icmp eq %"class.blink::WeakMember.308"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = zext i32 %10 to i64
  br label %75

72:                                               ; preds = %53, %67, %2
  %73 = zext i32 %10 to i64
  %74 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %73
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"class.blink::WeakMember.308"* [ %68, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %7, i64 %76
  %79 = icmp eq %"class.blink::WeakMember.308"* %78, %77
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.306"* %81, %"class.blink::WeakMember.308"* %77) #14
  br label %82

82:                                               ; preds = %75, %80
  %83 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11, i32 0, i32 0
  %84 = call { %"class.blink::WeakMember.308"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.306"* %83, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents25SetReferencedFromResourceEPNS_21CSSStyleSheetResourceE(%"class.blink::StyleSheetContents"* nocapture, %"class.blink::CSSStyleSheetResource"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 7
  %4 = ptrtoint %"class.blink::CSSStyleSheetResource"* %1 to i64
  %5 = bitcast %"class.blink::WeakMember"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSStyleSheetResource"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #14
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents27ClearReferencedFromResourceEv(%"class.blink::StyleSheetContents"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 7
  %3 = bitcast %"class.blink::WeakMember"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(560) %"class.blink::RuleSet"* @_ZN5blink18StyleSheetContents13EnsureRuleSetERKNS_19MediaQueryEvaluatorEj(%"class.blink::StyleSheetContents"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 13
  %5 = getelementptr inbounds %"class.blink::Member.309", %"class.blink::Member.309"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %5, align 8
  %7 = icmp eq %"class.blink::RuleSet"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZNK5blink7RuleSet26DidMediaQueryResultsChangeERKNS_19MediaQueryEvaluatorE(%"class.blink::RuleSet"* nonnull %6, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %1) #14
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = bitcast %"class.blink::Member.309"* %4 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  br label %15

12:                                               ; preds = %8
  %13 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %5, align 8
  %14 = icmp eq %"class.blink::RuleSet"* %13, null
  br i1 %14, label %15, label %41

15:                                               ; preds = %12, %10, %3
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSetEEEPhm(i64 560) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %16, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #14
  %18 = getelementptr inbounds i8, i8* %16, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #14
  %19 = getelementptr inbounds i8, i8* %16, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #14
  %20 = getelementptr inbounds i8, i8* %16, i64 96
  %21 = getelementptr inbounds i8, i8* %16, i64 240
  %22 = bitcast i8* %21 to %"class.blink::RuleFeatureSet"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 144, i1 false) #14
  tail call void @_ZN5blink14RuleFeatureSetC1Ev(%"class.blink::RuleFeatureSet"* %22) #14
  %23 = getelementptr inbounds i8, i8* %16, i64 416
  %24 = getelementptr inbounds i8, i8* %16, i64 552
  %25 = bitcast i8* %24 to %"class.blink::RuleSet::PendingRuleMaps"**
  store %"class.blink::RuleSet::PendingRuleMaps"* null, %"class.blink::RuleSet::PendingRuleMaps"** %25, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 132, i1 false) #14
  %26 = getelementptr inbounds i8, i8* %16, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = ptrtoint i8* %16 to i64
  %31 = bitcast %"class.blink::Member.309"* %4 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  %34 = bitcast i8* %16 to %"class.blink::RuleSet"*
  br i1 %33, label %38, label %35

35:                                               ; preds = %15
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #14
  %37 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %5, align 8
  br label %38

38:                                               ; preds = %15, %35
  %39 = phi %"class.blink::RuleSet"* [ %34, %15 ], [ %37, %35 ]
  tail call void @_ZN5blink7RuleSet17AddRulesFromSheetEPNS_18StyleSheetContentsERKNS_19MediaQueryEvaluatorEj(%"class.blink::RuleSet"* %39, %"class.blink::StyleSheetContents"* %0, %"class.blink::MediaQueryEvaluator"* dereferenceable(24) %1, i32 %2) #14
  %40 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %5, align 8
  br label %41

41:                                               ; preds = %12, %38
  %42 = phi %"class.blink::RuleSet"* [ %13, %12 ], [ %40, %38 ]
  ret %"class.blink::RuleSet"* %42
}

declare zeroext i1 @_ZNK5blink7RuleSet26DidMediaQueryResultsChangeERKNS_19MediaQueryEvaluatorE(%"class.blink::RuleSet"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN5blink7RuleSet17AddRulesFromSheetEPNS_18StyleSheetContentsERKNS_19MediaQueryEvaluatorEj(%"class.blink::RuleSet"*, %"class.blink::StyleSheetContents"*, %"class.blink::MediaQueryEvaluator"* dereferenceable(24), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL35SetNeedsActiveStyleUpdateForClientsERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEE(%"class.blink::HeapHashSet"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %6, i64 %9
  br i1 %4, label %23, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %17
  %14 = phi %"class.blink::WeakMember.308"* [ %18, %17 ], [ %6, %11 ]
  %15 = bitcast %"class.blink::WeakMember.308"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  switch i64 %16, label %20 [
    i64 -1, label %17
    i64 0, label %17
  ]

17:                                               ; preds = %13, %13
  %18 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %14, i64 1
  %19 = icmp eq %"class.blink::WeakMember.308"* %18, %10
  br i1 %19, label %23, label %13

20:                                               ; preds = %13, %11
  %21 = phi %"class.blink::WeakMember.308"* [ %6, %11 ], [ %14, %13 ]
  %22 = icmp eq %"class.blink::WeakMember.308"* %21, %10
  br i1 %22, label %23, label %24

23:                                               ; preds = %17, %45, %55, %52, %1, %20
  ret void

24:                                               ; preds = %20, %55
  %25 = phi %"class.blink::WeakMember.308"* [ %49, %55 ], [ %21, %20 ]
  %26 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  %28 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %27) #14
  %29 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  %30 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %29, i64 0, i32 11, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp ne %"class.blink::Document"* %28, null
  %33 = icmp ne %"class.blink::Node"* %31, null
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %45

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 256
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 59, i32 0, i32 0
  %42 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  tail call void @_ZN5blink11StyleEngine25SetNeedsActiveStyleUpdateERNS_9TreeScopeE(%"class.blink::StyleEngine"* %42, %"class.blink::TreeScope"* dereferenceable(104) %44) #14
  br label %45

45:                                               ; preds = %35, %24, %40
  %46 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %25, i64 1
  %47 = icmp eq %"class.blink::WeakMember.308"* %46, %10
  br i1 %47, label %23, label %48

48:                                               ; preds = %45, %52
  %49 = phi %"class.blink::WeakMember.308"* [ %53, %52 ], [ %46, %45 ]
  %50 = bitcast %"class.blink::WeakMember.308"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %49, i64 1
  %54 = icmp eq %"class.blink::WeakMember.308"* %53, %10
  br i1 %54, label %23, label %48

55:                                               ; preds = %48
  %56 = icmp eq %"class.blink::WeakMember.308"* %49, %10
  br i1 %56, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL19RemoveFontFaceRulesERNS_11HeapHashSetINS_10WeakMemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS2_EENS4_10HashTraitsIS3_EEEEPKNS_17StyleRuleFontFaceE(%"class.blink::HeapHashSet"* nocapture readonly dereferenceable(24), %"class.blink::StyleRuleFontFace"*) unnamed_addr #0 {
  %3 = alloca %"class.blink::HeapVector.1241", align 8
  %4 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %8, i64 %11
  br i1 %6, label %33, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"class.blink::WeakMember.308"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"class.blink::WeakMember.308"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %16, i64 1
  %21 = icmp eq %"class.blink::WeakMember.308"* %20, %12
  br i1 %21, label %33, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"class.blink::WeakMember.308"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"class.blink::WeakMember.308"* %23, %12
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::HeapVector.1241"* %3 to i8*
  %27 = ptrtoint %"class.blink::StyleRuleFontFace"* %1 to i64
  %28 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::HeapVector.1241"* %3 to i64*
  %31 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %1, i64 0, i32 0, i32 0
  br label %34

33:                                               ; preds = %19, %65, %75, %72, %2, %22
  ret void

34:                                               ; preds = %25, %75
  %35 = phi %"class.blink::WeakMember.308"* [ %23, %25 ], [ %69, %75 ]
  %36 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %37, i64 0, i32 11, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %65, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 59, i32 0, i32 0
  %47 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #14
  store %"class.blink::Member.1247"* null, %"class.blink::Member.1247"** %28, align 8
  store i32 0, i32* %29, align 8
  %48 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 1) #14
  %49 = ptrtoint %"class.blink::HeapVectorBacking"* %48 to i64
  store atomic i64 %49, i64* %30 monotonic, align 8
  store i32 1, i32* %29, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  %52 = bitcast %"class.blink::HeapVectorBacking"* %48 to %"class.blink::Member.1247"*
  br i1 %51, label %57, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %48, i64 0, i32 0
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #14
  %56 = load %"class.blink::Member.1247"*, %"class.blink::Member.1247"** %28, align 8
  br label %57

57:                                               ; preds = %53, %41
  %58 = phi %"class.blink::Member.1247"* [ %56, %53 ], [ %52, %41 ]
  store i32 1, i32* %31, align 4
  %59 = bitcast %"class.blink::Member.1247"* %58 to i64*
  store atomic i64 %27, i64* %59 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #14
  br label %64

64:                                               ; preds = %62, %57
  call void @_ZN5blink11StyleEngine19RemoveFontFaceRulesERKNS_10HeapVectorINS_6MemberIKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::StyleEngine"* %47, %"class.blink::HeapVector.1241"* nonnull dereferenceable(16) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  br label %65

65:                                               ; preds = %34, %64
  %66 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %35, i64 1
  %67 = icmp eq %"class.blink::WeakMember.308"* %66, %12
  br i1 %67, label %33, label %68

68:                                               ; preds = %65, %72
  %69 = phi %"class.blink::WeakMember.308"* [ %73, %72 ], [ %66, %65 ]
  %70 = bitcast %"class.blink::WeakMember.308"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  switch i64 %71, label %75 [
    i64 -1, label %72
    i64 0, label %72
  ]

72:                                               ; preds = %68, %68
  %73 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %69, i64 1
  %74 = icmp eq %"class.blink::WeakMember.308"* %73, %12
  br i1 %74, label %33, label %68

75:                                               ; preds = %68
  %76 = icmp eq %"class.blink::WeakMember.308"* %69, %12
  br i1 %76, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleSheetContents17FindFontFaceRulesERNS_10HeapVectorINS_6MemberIKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::StyleSheetContents"*, %"class.blink::HeapVector.1241"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %23, %2
  %8 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4
  tail call fastcc void @_ZN5blinkL26FindFontFaceRulesFromRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERNS0_INS1_IKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::HeapVector.87"* dereferenceable(16) %8, %"class.blink::HeapVector.1241"* dereferenceable(16) %1)
  ret void

9:                                                ; preds = %2, %23
  %10 = phi i32 [ %24, %23 ], [ 0, %2 ]
  %11 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %3, i32 %10) #14
  %12 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %14, align 8
  %16 = icmp eq %"class.blink::StyleSheetContents"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = tail call dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"* %3, i32 %10) #14
  %19 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::StyleRuleImport"*, %"class.blink::StyleRuleImport"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %20, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %21, align 8
  tail call void @_ZN5blink18StyleSheetContents17FindFontFaceRulesERNS_10HeapVectorINS_6MemberIKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::StyleSheetContents"* %22, %"class.blink::HeapVector.1241"* dereferenceable(16) %1)
  br label %23

23:                                               ; preds = %9, %17
  %24 = add nuw i32 %10, 1
  %25 = load i32, i32* %4, align 4
  %26 = icmp ult i32 %24, %25
  br i1 %26, label %9, label %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL26FindFontFaceRulesFromRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERNS0_INS1_IKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::HeapVector.87"* dereferenceable(16), %"class.blink::HeapVector.1241"* dereferenceable(16)) unnamed_addr #0 {
  %3 = alloca %"class.blink::StyleRuleFontFace"*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.87", %"class.blink::HeapVector.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapVector.87", %"class.blink::HeapVector.87"* %0, i64 0, i32 0
  %9 = bitcast %"class.blink::StyleRuleFontFace"** %3 to i8*
  %10 = bitcast %"class.blink::StyleRuleFontFace"** %3 to %"class.blink::StyleRuleBase"**
  %11 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HeapVector.1241", %"class.blink::HeapVector.1241"* %1, i64 0, i32 0
  br label %16

15:                                               ; preds = %52, %2
  ret void

16:                                               ; preds = %7, %52
  %17 = phi i32 [ 0, %7 ], [ %53, %52 ]
  %18 = call dereferenceable(8) %"class.blink::Member.93"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"* %8, i32 %17) #14
  %19 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  store %"class.blink::StyleRuleFontFace"* inttoptr (i64 -6148914691236517206 to %"class.blink::StyleRuleFontFace"*), %"class.blink::StyleRuleFontFace"** %3, align 8
  %21 = icmp eq %"class.blink::StyleRuleBase"* %20, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %20, i64 0, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 4
  br i1 %25, label %26, label %45

26:                                               ; preds = %22
  store %"class.blink::StyleRuleBase"* %20, %"class.blink::StyleRuleBase"** %10, align 8
  %27 = load i32, i32* %11, align 4
  %28 = load i32, i32* %12, align 8
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %44, label %30, !prof !2

30:                                               ; preds = %26
  %31 = ptrtoint %"class.blink::StyleRuleBase"* %20 to i64
  %32 = load %"class.blink::Member.1247"*, %"class.blink::Member.1247"** %13, align 8
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %"class.blink::Member.1247", %"class.blink::Member.1247"* %32, i64 %33
  %35 = bitcast %"class.blink::Member.1247"* %34 to i64*
  store atomic i64 %31, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %20, i64 0, i32 0
  %40 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #14
  br label %41

41:                                               ; preds = %38, %30
  %42 = load i32, i32* %11, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %11, align 4
  br label %52

44:                                               ; preds = %26
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1244"* %14, %"class.blink::StyleRuleFontFace"** nonnull dereferenceable(8) %3) #14
  br label %52

45:                                               ; preds = %22
  store %"class.blink::StyleRuleFontFace"* null, %"class.blink::StyleRuleFontFace"** %3, align 8
  %46 = load i8, i8* %23, align 1
  %47 = icmp eq i8 %46, 3
  br i1 %47, label %49, label %52

48:                                               ; preds = %16
  store %"class.blink::StyleRuleFontFace"* null, %"class.blink::StyleRuleFontFace"** %3, align 8
  br label %52

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %20, i64 8
  %51 = bitcast %"class.blink::StyleRuleBase"* %50 to %"class.blink::HeapVector.87"*
  call fastcc void @_ZN5blinkL26FindFontFaceRulesFromRulesERKNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEERNS0_INS1_IKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::HeapVector.87"* dereferenceable(16) %51, %"class.blink::HeapVector.1241"* dereferenceable(16) %1)
  br label %52

52:                                               ; preds = %45, %48, %44, %41, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %53 = add nuw i32 %17, 1
  %54 = load i32, i32* %4, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %16, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = alloca %"struct.blink::TraceDescriptor", align 8
  %5 = bitcast %"class.blink::StyleSheetContents"* %0 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to %"class.blink::StyleRuleImport"*
  %10 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, i64 5
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %13, align 8
  tail call void %14(%"class.blink::Visitor"* %1, i8* %10, i8* %10, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15StyleRuleImportEE5TraceEPNS_7VisitorEPKv) #14
  br label %15

15:                                               ; preds = %2, %8
  %16 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::HeapVector.69"* %16 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = icmp eq i64 %18, 0
  %20 = bitcast %"class.blink::HeapVector.69"* %16 to i8**
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %22 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, i64 11
  %24 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8** %20) #14
  br i1 %19, label %31, label %25

25:                                               ; preds = %15
  %26 = inttoptr i64 %18 to i8*
  %27 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, i64 5
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, align 8
  tail call void %30(%"class.blink::Visitor"* %1, i8* nonnull %26, i8* nonnull %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %31

31:                                               ; preds = %15, %25
  %32 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 3
  %33 = bitcast %"class.blink::HeapVector.76"* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  %36 = bitcast %"class.blink::HeapVector.76"* %32 to i8**
  %37 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %37, i64 11
  %39 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8** %36) #14
  br i1 %35, label %46, label %40

40:                                               ; preds = %31
  %41 = inttoptr i64 %34 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %46

46:                                               ; preds = %31, %40
  %47 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 4
  %48 = bitcast %"class.blink::HeapVector.87"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  %51 = bitcast %"class.blink::HeapVector.87"* %47 to i8**
  %52 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %52, i64 11
  %54 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8** %51) #14
  br i1 %50, label %61, label %55

55:                                               ; preds = %46
  %56 = inttoptr i64 %49 to i8*
  %57 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %1, i8* nonnull %56, i8* nonnull %56, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %61

61:                                               ; preds = %46, %55
  %62 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 11
  %63 = bitcast %"class.blink::HeapHashSet"* %62 to i8*
  %64 = bitcast %"class.blink::HeapHashSet"* %62 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = inttoptr i64 %65 to %"class.blink::WeakMember.308"*
  %67 = bitcast %"class.blink::HeapHashSet"* %62 to i8**
  %68 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %69 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %68, i64 11
  %70 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %69, align 8
  tail call void %70(%"class.blink::Visitor"* %1, i8** %67) #14
  %71 = inttoptr i64 %65 to i8*
  %72 = bitcast %"struct.blink::TraceDescriptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #14
  %73 = bitcast %"struct.blink::TraceDescriptor"* %4 to %"class.blink::WeakMember.308"**
  store %"class.blink::WeakMember.308"* %66, %"class.blink::WeakMember.308"** %73, align 8
  %74 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %4, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %74, align 8
  %75 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %76 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %76, i64 10
  %78 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %77, align 8
  tail call void %78(%"class.blink::Visitor"* %1, i8* %71, i8** %67, i8* %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %4, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_13CSSStyleSheetEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %63) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #14
  %79 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 12
  %80 = bitcast %"class.blink::HeapHashSet"* %79 to i8*
  %81 = bitcast %"class.blink::HeapHashSet"* %79 to i64*
  %82 = load atomic i64, i64* %81 monotonic, align 8
  %83 = inttoptr i64 %82 to %"class.blink::WeakMember.308"*
  %84 = bitcast %"class.blink::HeapHashSet"* %79 to i8**
  %85 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %21, align 8
  %86 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %85, i64 11
  %87 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %86, align 8
  tail call void %87(%"class.blink::Visitor"* %1, i8** %84) #14
  %88 = inttoptr i64 %82 to i8*
  %89 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #14
  %90 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"class.blink::WeakMember.308"**
  store %"class.blink::WeakMember.308"* %83, %"class.blink::WeakMember.308"** %90, align 8
  %91 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %91, align 8
  %92 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %75, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %92, i64 10
  %94 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* %88, i8** %84, i8* %88, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_13CSSStyleSheetEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %80) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #14
  %95 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 13
  %96 = bitcast %"class.blink::Member.309"* %95 to i64*
  %97 = load atomic i64, i64* %96 monotonic, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %61
  %100 = inttoptr i64 %97 to i8*
  %101 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, i64 5
  %104 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, align 8
  tail call void %104(%"class.blink::Visitor"* %1, i8* nonnull %100, i8* nonnull %100, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv) #14
  br label %105

105:                                              ; preds = %61, %99
  %106 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 7
  %107 = bitcast %"class.blink::WeakMember"* %106 to i64*
  %108 = load atomic i64, i64* %107 monotonic, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %105
  %111 = inttoptr i64 %108 to i8*
  %112 = bitcast %"class.blink::WeakMember"* %106 to i8*
  %113 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %114 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %114, i64 6
  %116 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %115, align 8
  tail call void %116(%"class.blink::Visitor"* %1, i8* nonnull %111, i8* %112, i8* %111, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSStyleSheetResourceEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_21CSSStyleSheetResourceEEEvRKNS_14LivenessBrokerEPKv) #14
  br label %117

117:                                              ; preds = %105, %110
  %118 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %0, i64 0, i32 10
  %119 = bitcast %"class.blink::Member.102"* %118 to i64*
  %120 = load atomic i64, i64* %119 monotonic, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %117
  %123 = inttoptr i64 %120 to %"class.blink::CSSParserContext"*
  %124 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %123, i64 0, i32 0, i32 0
  %125 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %126 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %126, i64 5
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, align 8
  tail call void %128(%"class.blink::Visitor"* %1, i8* %124, i8* %124, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv) #14
  br label %129

129:                                              ; preds = %117, %122
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.97"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #14
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #14
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.100"*
  %31 = call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.97"* %0, %"struct.WTF::KeyValuePair.100"* %30, i32 %17, %"struct.WTF::KeyValuePair.100"* null) #14
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.97"*, %"struct.WTF::KeyValuePair.100"*, i32, %"struct.WTF::KeyValuePair.100"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.97", align 8
  %6 = bitcast %"class.WTF::HashTable.97"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.97"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.100"* %1, %"struct.WTF::KeyValuePair.100"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.100"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.97"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.97"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.100"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.97"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.97"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.100"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.100"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.100"* nonnull %37, i32 %34) #14
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"struct.WTF::KeyValuePair.100"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.100"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.100"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.100"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.97"* nonnull %5, %"struct.WTF::KeyValuePair.100"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.100"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.100"* %53, %"struct.WTF::KeyValuePair.100"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.100"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.100"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.100"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.97"*, %"struct.WTF::KeyValuePair.100"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %4, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.100"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %2
  %22 = xor i32 %13, -1
  %23 = lshr i32 %12, 31
  %24 = add nsw i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %43

35:                                               ; preds = %55
  %36 = ptrtoint %"struct.WTF::KeyValuePair.100"* %61 to i64
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i64 [ %17, %2 ], [ %36, %35 ]
  %39 = phi %"struct.WTF::KeyValuePair.100"* [ null, %2 ], [ %56, %35 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair.100"* %39, null
  %41 = ptrtoint %"struct.WTF::KeyValuePair.100"* %39 to i64
  %42 = select i1 %40, i64 %38, i64 %41
  br label %66

43:                                               ; preds = %55, %21
  %44 = phi %"struct.WTF::KeyValuePair.100"* [ null, %21 ], [ %56, %55 ]
  %45 = phi i64 [ %17, %21 ], [ %62, %55 ]
  %46 = phi %"struct.WTF::KeyValuePair.100"* [ %16, %21 ], [ %61, %55 ]
  %47 = phi i64 [ %15, %21 ], [ %60, %55 ]
  %48 = phi i64 [ 0, %21 ], [ %58, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.100"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = icmp eq %"class.WTF::StringImpl"* %10, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52, %43
  %56 = phi %"struct.WTF::KeyValuePair.100"* [ %44, %52 ], [ %46, %43 ]
  %57 = icmp eq i64 %48, 0
  %58 = select i1 %57, i64 %34, i64 %48
  %59 = add i64 %58, %47
  %60 = and i64 %59, %8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %4, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair.100"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %35, label %43

66:                                               ; preds = %52, %37
  %67 = phi i64 [ %42, %37 ], [ %45, %52 ]
  %68 = inttoptr i64 %67 to %"struct.WTF::KeyValuePair.100"*
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #14
  br label %85

85:                                               ; preds = %84, %81, %66
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #14
  br label %102

102:                                              ; preds = %85, %98, %101
  %103 = bitcast %"struct.WTF::KeyValuePair.100"* %1 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %67 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %68, i64 0, i32 1
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %1, i64 0, i32 1
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.WTF::AtomicString"* %106 to i64*
  store i64 %110, i64* %111, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8
  ret %"struct.WTF::KeyValuePair.100"* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.100"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.100"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.100"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #14
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #14
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.100"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.97"*, %"class.WTF::AtomicString"* dereferenceable(8), %"struct.WTF::KeyValuePair.100"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.100"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.97"* %0, %"struct.WTF::KeyValuePair.100"* null)
  %9 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.100"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.100"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.100"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.100"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %86, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.100"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.100"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.100"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #14
  %66 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"struct.WTF::KeyValuePair.100"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = tail call dereferenceable(16) %"struct.WTF::KeyValuePair.100"* @_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.100"* %73, %"struct.WTF::KeyValuePair.100"* dereferenceable(16) %2) #14
  %75 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, %77
  %81 = shl i32 %80, 1
  %82 = load i32, i32* %12, align 8
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %72
  %85 = tail call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.97"* %0, %"struct.WTF::KeyValuePair.100"* %73)
  br label %86

86:                                               ; preds = %49, %72, %84
  %87 = phi i8 [ 1, %72 ], [ 1, %84 ], [ 0, %49 ]
  %88 = phi %"struct.WTF::KeyValuePair.100"* [ %73, %72 ], [ %85, %84 ], [ %42, %49 ]
  %89 = insertvalue { %"struct.WTF::KeyValuePair.100"*, i8 } undef, %"struct.WTF::KeyValuePair.100"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair.100"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair.100"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.97"*, %"struct.WTF::KeyValuePair.100"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.100"*
  %37 = call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.97"* %0, %"struct.WTF::KeyValuePair.100"* %36, i32 %32, %"struct.WTF::KeyValuePair.100"* %1) #14
  ret %"struct.WTF::KeyValuePair.100"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.100"* @_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #14
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #14
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair.100"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #14
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #14
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::AtomicString"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #14
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair.100"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StyleRuleNamespace"* @_ZN5blink25MakeGarbageCollectedTraitINS_18StyleRuleNamespaceEE4CallIJRKN3WTF12AtomicStringES7_EEEPS1_DpOT_(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #14
  %4 = bitcast i8* %3 to %"class.blink::StyleRuleNamespace"*
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #14
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #14
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #14
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %25, %29, %44
  tail call void @_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_(%"class.blink::StyleRuleNamespace"* %4, %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"* %27)
  %47 = getelementptr inbounds i8, i8* %3, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  ret %"class.blink::StyleRuleNamespace"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_(%"class.blink::StyleRuleNamespace"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 0, i32 0
  store i8 9, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #14
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #14
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  tail call void @llvm.trap() #14
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %51 = add i32 %45, -1
  store i32 %51, i32* %50, align 4
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %51, %49 ], [ %45, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #14
  br label %56

56:                                               ; preds = %24, %52, %55
  br i1 %6, label %70, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #14
  br label %70

70:                                               ; preds = %56, %66, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13StyleRuleBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleRuleBase"*
  tail call void @_ZN5blink13StyleRuleBase30FinalizeGarbageCollectedObjectEv(%"class.blink::StyleRuleBase"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink13StyleRuleBase30FinalizeGarbageCollectedObjectEv(%"class.blink::StyleRuleBase"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9StyleRule42PropertiesHaveFailedOrCanceledSubresourcesEv(%"class.blink::StyleRule"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #3

declare void @_ZN5blink11StyleEngine25SetNeedsActiveStyleUpdateERNS_9TreeScopeE(%"class.blink::StyleEngine"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #3

declare void @_ZN5blink11StyleEngine19RemoveFontFaceRulesERKNS_10HeapVectorINS_6MemberIKNS_17StyleRuleFontFaceEEELj0EEE(%"class.blink::StyleEngine"*, %"class.blink::HeapVector.1241"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_17StyleRuleFontFaceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_17StyleRuleFontFaceEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1247"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.1247", %"class.blink::Member.1247"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1247"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleFontFace"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv) #14
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1244"*, %"class.blink::StyleRuleFontFace"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1244"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1247"*, %"class.blink::Member.1247"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1247", %"class.blink::Member.1247"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleFontFace"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1247"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1244"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1247"*, %"class.blink::Member.1247"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1247"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_17StyleRuleFontFaceEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1244"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1247"*, %"class.blink::Member.1247"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1247"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1247"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1244"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1244"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1244"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1244"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_17StyleRuleFontFaceEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1247"*, %"class.blink::Member.1247"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1247"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1247"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1244"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.1244"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.1244"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1244", %"class.WTF::Vector.1244"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15StyleRuleImportEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.67"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %24, i64 %25
  ret %"class.blink::Member.67"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15StyleRuleImportEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1335"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1335"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1335"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15StyleRuleImportEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.67"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.67"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleImport"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15StyleRuleImportEE5TraceEPNS_7VisitorEPKv) #14
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleNamespaceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1343"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1343"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1343"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18StyleRuleNamespaceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.82"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.82"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleNamespace"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleRuleNamespaceEE5TraceEPNS_7VisitorEPKv) #14
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleRuleNamespaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1355"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1355"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1355"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRuleBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.93"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.93"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleBase"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv) #14
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.82"* @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.79"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %24, i64 %25
  ret %"class.blink::Member.82"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.82"* @_ZNK3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.79"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %24, i64 %25
  ret %"class.blink::Member.82"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.93"* @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %24, i64 %25
  ret %"class.blink::Member.93"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.93"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.90"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %24, i64 %25
  ret %"class.blink::Member.93"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.72"*, %"class.blink::StyleRuleImport"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.72"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleImport"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.67"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %8, align 8
  %10 = icmp eq %"class.blink::Member.67"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15StyleRuleImportEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1335"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1335"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1335", %"class.blink::HeapVectorBacking.1335"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %8, align 8
  %26 = icmp eq %"class.blink::Member.67"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.67"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.72"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.72"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15StyleRuleImportEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1335"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15StyleRuleImportEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1335"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1335"* %17, null
  %23 = icmp ne %"class.blink::Member.67"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.67"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.72"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1335", %"class.blink::HeapVectorBacking.1335"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.72"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.72"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1335", %"class.blink::HeapVectorBacking.1335"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.67"* @_ZN3WTF6VectorIN5blink6MemberINS1_15StyleRuleImportEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.72"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.67"*, %"class.blink::Member.67"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.67", %"class.blink::Member.67"* %24, i64 %25
  ret %"class.blink::Member.67"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.79"*, %"class.blink::StyleRuleNamespace"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.79"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleNamespace"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.82"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.79"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %8, align 8
  %10 = icmp eq %"class.blink::Member.82"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleNamespaceEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1343"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1343"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1343", %"class.blink::HeapVectorBacking.1343"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %8, align 8
  %26 = icmp eq %"class.blink::Member.82"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.82"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.79"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleNamespaceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.79"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.79"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleNamespaceEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1343"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleNamespaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1343"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.82"*, %"class.blink::Member.82"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1343"* %17, null
  %23 = icmp ne %"class.blink::Member.82"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.82"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.79"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1343", %"class.blink::HeapVectorBacking.1343"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.79"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1343", %"class.blink::HeapVectorBacking.1343"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.90"*, %"class.blink::StyleRuleBase"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.90"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.93", %"class.blink::Member.93"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleBase"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.93"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.90"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %8, align 8
  %10 = icmp eq %"class.blink::Member.93"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1355"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1355"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1355", %"class.blink::HeapVectorBacking.1355"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %8, align 8
  %26 = icmp eq %"class.blink::Member.93"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.93"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.90"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.90"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.90"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1355"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1355"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.93"*, %"class.blink::Member.93"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1355"* %17, null
  %23 = icmp ne %"class.blink::Member.93"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.93"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.90"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1355", %"class.blink::HeapVectorBacking.1355"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.90"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1355", %"class.blink::HeapVectorBacking.1355"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.100"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.97"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.100"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.97"* %0, %"struct.WTF::KeyValuePair.100"* null)
  %9 = load %"struct.WTF::KeyValuePair.100"*, %"struct.WTF::KeyValuePair.100"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.100"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.100"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.100"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.100"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %85, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.100"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.100"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.100"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #14
  %66 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"struct.WTF::KeyValuePair.100"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.100"* dereferenceable(16) %73, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %74 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.WTF::HashTable.97", %"class.WTF::HashTable.97"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, %76
  %80 = shl i32 %79, 1
  %81 = load i32, i32* %12, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %72
  %84 = tail call %"struct.WTF::KeyValuePair.100"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.97"* %0, %"struct.WTF::KeyValuePair.100"* %73)
  br label %85

85:                                               ; preds = %49, %72, %83
  %86 = phi i8 [ 1, %72 ], [ 1, %83 ], [ 0, %49 ]
  %87 = phi %"struct.WTF::KeyValuePair.100"* [ %73, %72 ], [ %84, %83 ], [ %42, %49 ]
  %88 = insertvalue { %"struct.WTF::KeyValuePair.100"*, i8 } undef, %"struct.WTF::KeyValuePair.100"* %87, 0
  %89 = insertvalue { %"struct.WTF::KeyValuePair.100"*, i8 } %88, i8 %86, 1
  ret { %"struct.WTF::KeyValuePair.100"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.100"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #14
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.100"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.100", %"struct.WTF::KeyValuePair.100"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #14
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #14
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #14
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #3

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #3

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #3

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !9

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !10

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !11

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #15
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #15, !noalias !12
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !12
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #15
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZN5blink40inspector_parse_author_style_sheet_event4DataEN8perfetto11TracedValueEPKNS_21CSSStyleSheetResourceE(%"class.perfetto::TracedValue"*, %"class.blink::CSSStyleSheetResource"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #10

declare void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_18StyleSheetContentsE(%"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #14
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #14
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #14
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #14
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #10

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.58"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.61"*, %"class.blink::Member.61"** %8, align 8
  %10 = icmp eq %"class.blink::Member.61"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1392"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1392"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1392", %"class.blink::HeapVectorBacking.1392"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.61"*, %"class.blink::Member.61"** %8, align 8
  %26 = icmp eq %"class.blink::Member.61"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.61"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.58"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.58"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.58"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1392"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1392"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.61"*, %"class.blink::Member.61"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1392"* %17, null
  %23 = icmp ne %"class.blink::Member.61"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.61"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.58"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1392", %"class.blink::HeapVectorBacking.1392"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.58"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1392", %"class.blink::HeapVectorBacking.1392"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1392"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1392"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1392"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.61"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.61"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.61"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.58"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.61"*, %"class.blink::Member.61"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.61", %"class.blink::Member.61"* %24, i64 %25
  ret %"class.blink::Member.61"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember.308"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.306"*, %"class.blink::CSSStyleSheet"** dereferenceable(8), %"class.blink::CSSStyleSheet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember.308"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.306"* %0, %"class.blink::WeakMember.308"* null)
  %9 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember.308"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSStyleSheet"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %40, align 8
  %42 = icmp eq %"class.blink::CSSStyleSheet"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSStyleSheet"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSStyleSheet"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember.308"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember.308"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSStyleSheet"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %59, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %67 = select i1 %66, %"class.blink::WeakMember.308"* %60, %"class.blink::WeakMember.308"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %73, align 8
  %75 = icmp eq %"class.blink::CSSStyleSheet"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember.308"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember.308"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #14
  %80 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember.308"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %89 = ptrtoint %"class.blink::CSSStyleSheet"* %88 to i64
  %90 = bitcast %"class.blink::WeakMember.308"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::CSSStyleSheet"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #14
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember.308"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #14
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.306"* %0, %"class.blink::WeakMember.308"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #14
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #14
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !8
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #14
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember.308"*
  %148 = tail call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.306"* %0, %"class.blink::WeakMember.308"* %147, i32 %144, %"class.blink::WeakMember.308"* %87) #14
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember.308"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember.308"*, i8 } undef, %"class.blink::WeakMember.308"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember.308"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember.308"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.306"*, %"class.blink::WeakMember.308"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #14
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %23, i8* %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.306"* %0, i32 %35, %"class.blink::WeakMember.308"* %1, i8* nonnull dereferenceable(1) %4) #14
  %37 = load i8, i8* %4, align 1, !range !8
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #14
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::WeakMember.308"*
  %44 = call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.306"* %0, %"class.blink::WeakMember.308"* %43, i32 %40, %"class.blink::WeakMember.308"* %1) #14
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::WeakMember.308"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::WeakMember.308"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.306"*, i32, %"class.blink::WeakMember.308"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 0
  %32 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %31, align 8
  %33 = icmp eq %"class.blink::WeakMember.308"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::WeakMember.308"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #14
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #14
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::WeakMember.308"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::WeakMember.308"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::WeakMember.308"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %58, i64 %54
  %60 = icmp eq %"class.blink::WeakMember.308"* %59, %2
  %61 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::WeakMember.308"* %61, %"class.blink::WeakMember.308"* %55
  %63 = bitcast %"class.blink::WeakMember.308"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::WeakMember.308"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::WeakMember.308"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.306"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #14
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::WeakMember.308"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.306"* %0, %"class.blink::WeakMember.308"* %42, i32 %1, %"class.blink::WeakMember.308"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::WeakMember.308"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %84, i64 %81
  %86 = icmp eq %"class.blink::WeakMember.308"* %85, %2
  %87 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::WeakMember.308"* %87, %"class.blink::WeakMember.308"* %82
  %89 = bitcast %"class.blink::WeakMember.308"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::WeakMember.308"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %96, i64 %95
  %98 = icmp eq %"class.blink::WeakMember.308"* %97, %2
  %99 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::WeakMember.308"* %99, %"class.blink::WeakMember.308"* %88
  %101 = bitcast %"class.blink::WeakMember.308"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::WeakMember.308"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::WeakMember.308"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::WeakMember.308"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.306"*, %"class.blink::WeakMember.308"*, i32, %"class.blink::WeakMember.308"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.306", align 8
  %6 = bitcast %"class.WTF::HashTable.306"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.306"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::WeakMember.308"* %1, %"class.blink::WeakMember.308"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"class.blink::WeakMember.308"* %1 to i64
  %17 = bitcast %"class.blink::WeakMember.308"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 0
  %20 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %19, align 8
  br label %48

21:                                               ; preds = %140
  %22 = bitcast %"class.WTF::HashTable.306"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"class.blink::WeakMember.308"* [ null, %15 ], [ %143, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #14
  %33 = load i32, i32* %12, align 8
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi i32 [ %27, %25 ], [ %33, %32 ]
  %36 = bitcast %"class.WTF::HashTable.306"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.WTF::HashTable.306"* %5 to i64*
  store atomic i64 %26, i64* %36 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %26 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #14
  br label %44

44:                                               ; preds = %34, %41
  store i32 %2, i32* %12, align 8
  store i64 %37, i64* %38, align 8
  store i32 %35, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.306"* nonnull %5)
  %45 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -2147483648
  store i32 %47, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"class.blink::WeakMember.308"* %29

48:                                               ; preds = %18, %140
  %49 = phi i32 [ %13, %18 ], [ %141, %140 ]
  %50 = phi %"class.blink::WeakMember.308"* [ %20, %18 ], [ %142, %140 ]
  %51 = phi %"class.blink::WeakMember.308"* [ null, %18 ], [ %143, %140 ]
  %52 = phi i32 [ 0, %18 ], [ %144, %140 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %50, i64 %53
  %55 = bitcast %"class.blink::WeakMember.308"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %57 [
    i64 -1, label %140
    i64 0, label %140
  ]

57:                                               ; preds = %48
  %58 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %7, align 8
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %56, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %56, %63
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %58, i64 %82
  %84 = ptrtoint %"class.blink::WeakMember.308"* %83 to i64
  %85 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %85, align 8
  %87 = icmp eq %"class.blink::CSSStyleSheet"* %86, null
  %88 = inttoptr i64 %56 to %"class.blink::CSSStyleSheet"*
  br i1 %87, label %106, label %89

89:                                               ; preds = %57
  %90 = xor i32 %80, -1
  %91 = lshr i32 %80, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"class.blink::WeakMember.308"* %126 to i64
  %105 = inttoptr i64 %121 to %"class.blink::WeakMember.308"*
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i64 [ %104, %103 ], [ %84, %57 ]
  %108 = phi %"class.blink::WeakMember.308"* [ %105, %103 ], [ null, %57 ]
  %109 = icmp eq %"class.blink::WeakMember.308"* %108, null
  %110 = ptrtoint %"class.blink::WeakMember.308"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi %"class.blink::CSSStyleSheet"* [ %86, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %84, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %82, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq %"class.blink::CSSStyleSheet"* %114, %88
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::CSSStyleSheet"* %114, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %61
  %126 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %58, i64 %125
  %127 = ptrtoint %"class.blink::WeakMember.308"* %126 to i64
  %128 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %126, i64 0, i32 0, i32 0
  %129 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %128, align 8
  %130 = icmp eq %"class.blink::CSSStyleSheet"* %129, null
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"class.blink::WeakMember.308"*
  %134 = inttoptr i64 %132 to i64*
  store i64 %56, i64* %134, align 8
  %135 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %19, align 8
  %136 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %135, i64 %53
  %137 = icmp eq %"class.blink::WeakMember.308"* %136, %3
  %138 = select i1 %137, %"class.blink::WeakMember.308"* %133, %"class.blink::WeakMember.308"* %51
  %139 = load i32, i32* %12, align 8
  br label %140

140:                                              ; preds = %48, %48, %131
  %141 = phi i32 [ %49, %48 ], [ %139, %131 ], [ %49, %48 ]
  %142 = phi %"class.blink::WeakMember.308"* [ %50, %48 ], [ %135, %131 ], [ %50, %48 ]
  %143 = phi %"class.blink::WeakMember.308"* [ %51, %48 ], [ %138, %131 ], [ %51, %48 ]
  %144 = add i32 %52, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %21, label %48
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.19, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([377 x i8], [377 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_13CSSStyleSheetEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.308"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #14
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %3, i64 %33
  %35 = bitcast %"class.blink::WeakMember.308"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #14
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.306"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 0
  %3 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %2, align 8
  %4 = icmp eq %"class.blink::WeakMember.308"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #14
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #14
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !8
  %23 = icmp ne i8 %22, 0
  %24 = icmp ne i32 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = zext i32 %7 to i64
  br label %28

28:                                               ; preds = %38, %26
  %29 = phi i64 [ 0, %26 ], [ %39, %38 ]
  %30 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %3, i64 %29
  %31 = bitcast %"class.blink::WeakMember.308"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %38
    i64 0, label %38
  ]

33:                                               ; preds = %28
  store atomic i64 -1, i64* %31 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #14
  br label %38

38:                                               ; preds = %36, %33, %28, %28
  %39 = add nuw nsw i64 %29, 1
  %40 = icmp eq i64 %39, %27
  br i1 %40, label %41, label %28

41:                                               ; preds = %38, %5, %17
  %42 = bitcast %"class.blink::WeakMember.308"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #14
  %43 = bitcast %"class.WTF::HashTable.306"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %6, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.306"*, %"class.blink::WeakMember.308"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::WeakMember.308"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #14
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  %12 = and i32 %11, 2147483647
  %13 = and i32 %10, -2147483648
  %14 = or i32 %12, %13
  store i32 %14, i32* %9, align 8
  %15 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 4
  %18 = mul i32 %17, 6
  %19 = getelementptr inbounds %"class.WTF::HashTable.306", %"class.WTF::HashTable.306"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ult i32 %18, %20
  %22 = icmp ugt i32 %20, 8
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %53

24:                                               ; preds = %8
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #14
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #14
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 16
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %53, label %42

42:                                               ; preds = %31, %38
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 13
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %42
  %47 = load i32, i32* %19, align 8
  %48 = lshr i32 %47, 1
  %49 = zext i32 %48 to i64
  %50 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %49) #14
  %51 = bitcast %"class.blink::HeapHashTableBacking"* %50 to %"class.blink::WeakMember.308"*
  %52 = tail call %"class.blink::WeakMember.308"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.306"* %0, %"class.blink::WeakMember.308"* %51, i32 %48, %"class.blink::WeakMember.308"* null) #14
  br label %53

53:                                               ; preds = %38, %8, %46, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7RuleSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RuleSet"*
  tail call void @_ZNK5blink7RuleSet5TraceEPNS_7VisitorE(%"class.blink::RuleSet"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_7RuleSetEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 528
  %3 = bitcast i8* %2 to %"class.blink::MediaQuerySetResult"**
  %4 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %3, align 8
  %5 = icmp eq %"class.blink::MediaQuerySetResult"* %4, null
  br i1 %5, label %63, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MediaQuerySetResult"* %4 to i8*
  %8 = getelementptr inbounds i8, i8* %0, i64 540
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %61, label %12, !prof !2

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %4, i64 %13
  br label %15

15:                                               ; preds = %55, %12
  %16 = phi %"class.blink::MediaQuerySetResult"* [ %56, %55 ], [ %4, %12 ]
  %17 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %17, align 8
  %19 = icmp eq %"class.blink::MediaQuerySet"* %18, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #14
  %22 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %55

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.458", %"class.WTF::Vector.458"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.461"*, %"class.std::__1::unique_ptr.461"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.461"* %28, null
  br i1 %29, label %53, label %30, !prof !3

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr.461"* %28 to i8*
  %32 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %51, label %35, !prof !2

35:                                               ; preds = %30
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %28, i64 %36
  br label %38

38:                                               ; preds = %45, %35
  %39 = phi %"class.std::__1::unique_ptr.461"* [ %46, %45 ], [ %28, %35 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %40, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %40, align 8
  %42 = icmp eq %"class.blink::MediaQuery"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %41) #14
  %44 = bitcast %"class.blink::MediaQuery"* %41 to i8*
  tail call void @free(i8* %44) #14
  br label %45

45:                                               ; preds = %43, %38
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.461"* %39, i64 1
  %47 = icmp eq %"class.std::__1::unique_ptr.461"* %46, %37
  br i1 %47, label %48, label %38

48:                                               ; preds = %45
  store i32 0, i32* %32, align 4
  %49 = bitcast %"class.WTF::Vector.458"* %26 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %30
  %52 = phi i8* [ %50, %48 ], [ %31, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #14
  br label %53

53:                                               ; preds = %51, %25
  %54 = bitcast %"class.blink::MediaQuerySet"* %18 to i8*
  tail call void @free(i8* %54) #14
  br label %55

55:                                               ; preds = %15, %20, %53
  %56 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %16, i64 1
  %57 = icmp eq %"class.blink::MediaQuerySetResult"* %56, %14
  br i1 %57, label %58, label %15

58:                                               ; preds = %55
  store i32 0, i32* %9, align 4
  %59 = bitcast i8* %2 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %6
  %62 = phi i8* [ %60, %58 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #14
  store %"class.blink::MediaQuerySetResult"* null, %"class.blink::MediaQuerySetResult"** %3, align 8
  br label %63

63:                                               ; preds = %1, %61
  %64 = getelementptr inbounds i8, i8* %0, i64 240
  %65 = bitcast i8* %64 to %"class.blink::RuleFeatureSet"*
  tail call void @_ZN5blink14RuleFeatureSetD1Ev(%"class.blink::RuleFeatureSet"* %65) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_7RuleSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink7RuleSet5TraceEPNS_7VisitorE(%"class.blink::RuleSet"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14RuleFeatureSetD1Ev(%"class.blink::RuleFeatureSet"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #10

declare void @_ZN5blink14RuleFeatureSetC1Ev(%"class.blink::RuleFeatureSet"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_13CSSStyleSheetEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.308"**
  %4 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %3, align 8
  %5 = icmp eq %"class.blink::WeakMember.308"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %4, i64 %10
  %12 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %11, i64 -1
  %13 = icmp ult %"class.blink::WeakMember.308"* %12, %4
  br i1 %13, label %61, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %57
  %20 = phi %"class.blink::WeakMember.308"* [ %12, %14 ], [ %58, %57 ]
  %21 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %21, align 8
  %23 = ptrtoint %"class.blink::CSSStyleSheet"* %22 to i64
  switch i64 %23, label %24 [
    i64 -1, label %57
    i64 0, label %57
  ]

24:                                               ; preds = %19
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #14
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #14
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = icmp eq %"class.blink::ThreadState"* %34, null
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %22, i64 -1, i32 19
  %38 = bitcast %"class.blink::Member.508"* %37 to %"class.blink::HeapObjectHeader"*
  %39 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %38, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 1
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::WeakMember.308"* %20 to i64*
  store atomic i64 -1, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #14
  br label %49

49:                                               ; preds = %43, %47
  %50 = load i32, i32* %16, align 8
  %51 = add i32 %50, 1
  %52 = and i32 %51, 2147483647
  %53 = and i32 %50, -2147483648
  %54 = or i32 %52, %53
  store i32 %54, i32* %16, align 8
  %55 = load i32, i32* %18, align 4
  %56 = add i32 %55, -1
  store i32 %56, i32* %18, align 4
  br label %57

57:                                               ; preds = %36, %19, %19, %31, %49
  %58 = getelementptr inbounds %"class.blink::WeakMember.308", %"class.blink::WeakMember.308"* %20, i64 -1
  %59 = load %"class.blink::WeakMember.308"*, %"class.blink::WeakMember.308"** %3, align 8
  %60 = icmp ult %"class.blink::WeakMember.308"* %58, %59
  br i1 %60, label %61, label %19

61:                                               ; preds = %57, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_21CSSStyleSheetResourceEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheetResource"**
  %4 = load %"class.blink::CSSStyleSheetResource"*, %"class.blink::CSSStyleSheetResource"** %3, align 8
  %5 = ptrtoint %"class.blink::CSSStyleSheetResource"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #14
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #14
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CSSStyleSheetResource", %"class.blink::CSSStyleSheetResource"* %4, i64 -1, i32 2
  %20 = bitcast %"class.blink::Member.63"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CSSStyleSheetResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheetResource"*
  tail call void @_ZNK5blink21CSSStyleSheetResource5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheetResource"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink21CSSStyleSheetResource5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheetResource"*, %"class.blink::Visitor"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = !{i8 0, i8 2}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !5}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
