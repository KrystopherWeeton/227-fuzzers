; ModuleID = '../../gpu/command_buffer/client/webgpu_cmd_helper.cc'
source_filename = "../../gpu/command_buffer/client/webgpu_cmd_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::webgpu::WebGPUCmdHelper" = type { %"class.gpu::CommandBufferHelper.base", [4 x i8] }
%"class.gpu::CommandBufferHelper.base" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32 }>
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"union.gpu::CommandBufferEntry" = type { %"struct.gpu::CommandHeader" }
%"struct.gpu::CommandHeader" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%"class.gpu::CommandBufferHelper" = type <{ i32 (...)**, %"class.gpu::CommandBuffer"*, i32, i32, %class.scoped_refptr, %"union.gpu::CommandBufferEntry"*, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, i32, i32, %"class.base::TimeTicks", i32, [4 x i8] }>

@_ZTVN3gpu6webgpu15WebGPUCmdHelperE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::webgpu::WebGPUCmdHelper"*)* @_ZN3gpu6webgpu15WebGPUCmdHelperD2Ev to i8*), i8* bitcast (void (%"class.gpu::webgpu::WebGPUCmdHelper"*)* @_ZN3gpu6webgpu15WebGPUCmdHelperD0Ev to i8*)] }, align 8

@_ZN3gpu6webgpu15WebGPUCmdHelperC1EPNS_13CommandBufferE = hidden unnamed_addr alias void (%"class.gpu::webgpu::WebGPUCmdHelper"*, %"class.gpu::CommandBuffer"*), void (%"class.gpu::webgpu::WebGPUCmdHelper"*, %"class.gpu::CommandBuffer"*)* @_ZN3gpu6webgpu15WebGPUCmdHelperC2EPNS_13CommandBufferE
@_ZN3gpu6webgpu15WebGPUCmdHelperD1Ev = hidden unnamed_addr alias void (%"class.gpu::webgpu::WebGPUCmdHelper"*), void (%"class.gpu::webgpu::WebGPUCmdHelper"*)* @_ZN3gpu6webgpu15WebGPUCmdHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6webgpu15WebGPUCmdHelperC2EPNS_13CommandBufferE(%"class.gpu::webgpu::WebGPUCmdHelper"*, %"class.gpu::CommandBuffer"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::webgpu::WebGPUCmdHelper"* %0 to %"class.gpu::CommandBufferHelper"*
  tail call void @_ZN3gpu19CommandBufferHelperC2EPNS_13CommandBufferE(%"class.gpu::CommandBufferHelper"* %3, %"class.gpu::CommandBuffer"* %1) #4
  %4 = getelementptr inbounds %"class.gpu::webgpu::WebGPUCmdHelper", %"class.gpu::webgpu::WebGPUCmdHelper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gpu6webgpu15WebGPUCmdHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN3gpu19CommandBufferHelperC2EPNS_13CommandBufferE(%"class.gpu::CommandBufferHelper"*, %"class.gpu::CommandBuffer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gpu19CommandBufferHelperD2Ev(%"class.gpu::CommandBufferHelper"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6webgpu15WebGPUCmdHelperD2Ev(%"class.gpu::webgpu::WebGPUCmdHelper"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::webgpu::WebGPUCmdHelper"* %0 to %"class.gpu::CommandBufferHelper"*
  tail call void @_ZN3gpu19CommandBufferHelperD2Ev(%"class.gpu::CommandBufferHelper"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6webgpu15WebGPUCmdHelperD0Ev(%"class.gpu::webgpu::WebGPUCmdHelper"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::webgpu::WebGPUCmdHelper"* %0 to %"class.gpu::CommandBufferHelper"*
  tail call void @_ZN3gpu19CommandBufferHelperD2Ev(%"class.gpu::CommandBufferHelper"* %2) #4
  %3 = bitcast %"class.gpu::webgpu::WebGPUCmdHelper"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
