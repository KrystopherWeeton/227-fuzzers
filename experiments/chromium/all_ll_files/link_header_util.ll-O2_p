; ModuleID = '../../components/link_header_util/link_header_util.cc'
source_filename = "../../components/link_header_util/link_header_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::pair" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::pair"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.link_header_util::(anonymous namespace)::ValueTokenizer" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.net::HttpUtil::NameValuePairsIterator" = type <{ %"class.net::HttpUtil::ValuesIterator", i8, [7 x i8], %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.net::HttpUtil::ValuesIterator" = type <{ %"class.base::StringTokenizerT", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", i8, [7 x i8] }>
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"struct.std::__1::pair.25" = type <{ %"class.std::__1::basic_string", %"struct.absl::nullopt_t", [7 x i8] }>
%"struct.absl::nullopt_t" = type { i8 }
%"struct.std::__1::pair.27" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_NS8_9nullopt_tEEEEEENSN_INS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S7_EEEEENSN_INS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16link_header_util15SplitLinkHeaderERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.link_header_util::(anonymous namespace)::ValueTokenizer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = bitcast %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.link_header_util::(anonymous namespace)::ValueTokenizer", %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.link_header_util::(anonymous namespace)::ValueTokenizer", %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.link_header_util::(anonymous namespace)::ValueTokenizer", %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3, i64 0, i32 2, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %20 = zext i8 %13 to i64
  %21 = select i1 %14, i8* %16, i8* %19
  %22 = select i1 %14, i64 %18, i64 %20
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  store i8* %21, i8** %8, align 8
  store i8* %21, i8** %9, align 8
  store i8* %23, i8** %10, align 8
  %24 = bitcast %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3 to i64*
  %25 = getelementptr inbounds %"class.link_header_util::(anonymous namespace)::ValueTokenizer", %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.link_header_util::(anonymous namespace)::ValueTokenizer", %"class.link_header_util::(anonymous namespace)::ValueTokenizer"* %3, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %26, i64 0, i32 0
  %28 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %29 = bitcast %"class.std::__1::vector"* %0 to i64*
  %30 = bitcast %"struct.std::__1::pair"** %5 to i64*
  br label %31

31:                                               ; preds = %81, %2
  %32 = phi i8* [ %21, %2 ], [ %82, %81 ]
  %33 = load i8*, i8** %10, align 8
  %34 = icmp eq i8* %32, %33
  br i1 %34, label %144, label %35

35:                                               ; preds = %31
  %36 = load i8, i8* %32, align 1
  %37 = icmp eq i8 %36, 44
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %39, i8** %9, align 8
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i8* [ %39, %38 ], [ %32, %35 ]
  %42 = ptrtoint i8* %41 to i64
  store i64 %42, i64* %24, align 8
  %43 = icmp eq i8* %33, %41
  br i1 %43, label %77, label %44

44:                                               ; preds = %40, %70
  %45 = phi i8* [ %75, %70 ], [ %41, %40 ]
  %46 = phi i8 [ %74, %70 ], [ 0, %40 ]
  %47 = phi i8 [ %73, %70 ], [ 0, %40 ]
  %48 = phi i8 [ %72, %70 ], [ 0, %40 ]
  %49 = phi i8 [ %71, %70 ], [ 0, %40 ]
  %50 = load i8, i8* %45, align 1
  %51 = and i8 %49, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %44
  %54 = and i8 %48, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %53
  %57 = and i8 %46, 1
  %58 = icmp ne i8 %57, 0
  %59 = icmp eq i8 %50, 92
  %60 = and i1 %58, %59
  br i1 %60, label %70, label %61

61:                                               ; preds = %56
  %62 = icmp eq i8 %50, %47
  %63 = select i1 %62, i8 0, i8 %49
  br label %70

64:                                               ; preds = %44
  switch i8 %50, label %70 [
    i8 44, label %77
    i8 34, label %65
    i8 60, label %65
  ]

65:                                               ; preds = %64, %64
  %66 = icmp eq i8 %50, 60
  %67 = select i1 %66, i8 62, i8 %50
  %68 = icmp ne i8 %50, 60
  %69 = zext i1 %68 to i8
  br label %70

70:                                               ; preds = %65, %64, %61, %56, %53
  %71 = phi i8 [ 1, %65 ], [ %49, %53 ], [ %49, %56 ], [ %63, %61 ], [ %49, %64 ]
  %72 = phi i8 [ %48, %65 ], [ 0, %53 ], [ 1, %56 ], [ %48, %61 ], [ %48, %64 ]
  %73 = phi i8 [ %67, %65 ], [ %47, %53 ], [ %47, %56 ], [ %47, %61 ], [ %47, %64 ]
  %74 = phi i8 [ %69, %65 ], [ %46, %53 ], [ %46, %56 ], [ %46, %61 ], [ %46, %64 ]
  %75 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %75, i8** %9, align 8
  %76 = icmp eq i8* %75, %33
  br i1 %76, label %77, label %44

77:                                               ; preds = %70, %64, %40
  call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter"* nonnull %25, %"class.std::__1::__wrap_iter"* %26) #11
  %78 = load i8*, i8** %8, align 8
  %79 = load i8*, i8** %27, align 8
  %80 = icmp eq i8* %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %77, %142
  %82 = phi i8* [ %78, %77 ], [ %143, %142 ]
  br label %31

83:                                               ; preds = %77
  %84 = ptrtoint i8* %78 to i64
  %85 = ptrtoint i8* %79 to i64
  %86 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %87 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %88 = icmp ult %"struct.std::__1::pair"* %86, %87
  %89 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  br i1 %88, label %90, label %96

90:                                               ; preds = %83
  %91 = bitcast %"struct.std::__1::pair"* %86 to i64*
  store i64 %84, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 0, i32 1
  %93 = bitcast %"class.std::__1::__wrap_iter"* %92 to i64*
  store i64 %85, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 1
  %95 = ptrtoint %"struct.std::__1::pair"* %94 to i64
  store i64 %95, i64* %28, align 8
  br label %142

96:                                               ; preds = %83
  %97 = ptrtoint %"struct.std::__1::pair"* %86 to i64
  %98 = load i64, i64* %29, align 8
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 4
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, 1152921504606846975
  br i1 %102, label %103, label %105

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #12
  unreachable

105:                                              ; preds = %96
  %106 = sub i64 %89, %98
  %107 = ashr exact i64 %106, 4
  %108 = icmp ult i64 %107, 576460752303423487
  br i1 %108, label %109, label %117

109:                                              ; preds = %105
  %110 = ashr exact i64 %106, 3
  %111 = icmp ult i64 %110, %101
  %112 = select i1 %111, i64 %101, i64 %110
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %109
  %115 = icmp ugt i64 %112, 1152921504606846975
  br i1 %115, label %116, label %117

116:                                              ; preds = %114
  call void @abort() #12
  unreachable

117:                                              ; preds = %114, %105
  %118 = phi i64 [ %112, %114 ], [ 1152921504606846975, %105 ]
  %119 = shl i64 %118, 4
  %120 = call i8* @_Znwm(i64 %119) #13
  %121 = bitcast i8* %120 to %"struct.std::__1::pair"*
  br label %122

122:                                              ; preds = %117, %109
  %123 = phi i64 [ %118, %117 ], [ 0, %109 ]
  %124 = phi i8* [ %120, %117 ], [ null, %109 ]
  %125 = phi %"struct.std::__1::pair"* [ %121, %117 ], [ null, %109 ]
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 %100
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 %123
  %128 = ptrtoint %"struct.std::__1::pair"* %127 to i64
  %129 = bitcast %"struct.std::__1::pair"* %126 to i64*
  store i64 %84, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 %100, i32 1
  %131 = bitcast %"class.std::__1::__wrap_iter"* %130 to i64*
  store i64 %85, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 1
  %133 = ptrtoint %"struct.std::__1::pair"* %132 to i64
  %134 = ptrtoint %"struct.std::__1::pair"* %125 to i64
  %135 = icmp sgt i64 %99, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %122
  %137 = inttoptr i64 %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %137, i64 %99, i1 false) #11
  br label %138

138:                                              ; preds = %136, %122
  store i64 %134, i64* %29, align 8
  store i64 %133, i64* %28, align 8
  store i64 %128, i64* %30, align 8
  %139 = icmp eq i64 %98, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = inttoptr i64 %98 to i8*
  call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %90, %138, %140
  %143 = load i8*, i8** %9, align 8
  br label %81

144:                                              ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16link_header_util20ParseLinkHeaderValueENSt3__111__wrap_iterIPKcEES4_PNS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_13unordered_mapISA_N4absl8optionalISA_EENS0_4hashISA_EENS0_8equal_toISA_EENS8_INS0_4pairIKSA_SF_EEEEEE(i8*, i8*, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::unordered_map"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::__wrap_iter", align 8
  %6 = alloca %"class.std::__1::__wrap_iter", align 8
  %7 = alloca %"class.std::__1::__wrap_iter", align 8
  %8 = alloca %"class.std::__1::__wrap_iter", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.net::HttpUtil::NameValuePairsIterator", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"struct.std::__1::pair.25", align 8
  %13 = alloca %"struct.std::__1::pair.27", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %5, i64 0, i32 0
  store i8* %0, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %6, i64 0, i32 0
  store i8* %1, i8** %16, align 8
  %17 = icmp eq i8* %0, %1
  br i1 %17, label %436, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.std::__1::__wrap_iter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %7, i64 0, i32 0
  store i8* null, i8** %20, align 8
  %21 = bitcast %"class.std::__1::__wrap_iter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %8, i64 0, i32 0
  store i8* null, i8** %22, align 8
  %23 = load i8, i8* %0, align 1
  %24 = icmp eq i8 %23, 60
  br i1 %24, label %25, label %434

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %0, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.std::__1::__wrap_iter"* %7 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq i8* %26, %1
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  store i8* %1, i8** %22, align 8
  br label %434

31:                                               ; preds = %25, %35
  %32 = phi i8* [ %36, %35 ], [ %26, %25 ]
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 62
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %32, i64 1
  %37 = icmp eq i8* %36, %1
  br i1 %37, label %38, label %31

38:                                               ; preds = %35
  store i8* %1, i8** %22, align 8
  br label %434

39:                                               ; preds = %31
  store i8* %32, i8** %22, align 8
  %40 = icmp eq i8* %32, %1
  br i1 %40, label %434, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %42, i8** %15, align 8
  call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter"* nonnull %7, %"class.std::__1::__wrap_iter"* nonnull %8) #11
  %43 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %44 = load i8*, i8** %20, align 8
  %45 = ptrtoint i8* %44 to i64
  %46 = load i8*, i8** %22, align 8
  %47 = ptrtoint i8* %46 to i64
  %48 = sub i64 %47, %45
  %49 = icmp ugt i64 %48, -17
  br i1 %49, label %50, label %52

50:                                               ; preds = %41
  %51 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %51) #12
  unreachable

52:                                               ; preds = %41
  %53 = icmp ult i64 %48, 23
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = trunc i64 %48 to i8
  %56 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 %55, i8* %57, align 1
  br label %66

58:                                               ; preds = %52
  %59 = add nuw i64 %48, 16
  %60 = and i64 %59, -16
  %61 = call i8* @_Znwm(i64 %60) #13
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = or i64 %60, -9223372036854775808
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %65, align 8
  br label %66

66:                                               ; preds = %58, %54
  %67 = phi i8* [ %43, %54 ], [ %61, %58 ]
  %68 = icmp eq i8* %44, %46
  br i1 %68, label %171, label %69

69:                                               ; preds = %66
  %70 = ptrtoint i8* %46 to i64
  %71 = sub i64 %70, %45
  %72 = icmp ult i64 %71, 32
  br i1 %72, label %161, label %73

73:                                               ; preds = %69
  %74 = ptrtoint i8* %46 to i64
  %75 = sub i64 %74, %45
  %76 = getelementptr i8, i8* %67, i64 %75
  %77 = icmp ult i8* %67, %46
  %78 = icmp ult i8* %44, %76
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %73
  %81 = and i64 %71, -32
  %82 = getelementptr i8, i8* %67, i64 %81
  %83 = getelementptr i8, i8* %44, i64 %81
  %84 = add i64 %81, -32
  %85 = lshr exact i64 %84, 5
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 96
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i8, i8* %67, i64 %92
  %95 = getelementptr i8, i8* %44, i64 %92
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !2
  %98 = getelementptr i8, i8* %95, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 1, !alias.scope !2
  %101 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %101, align 1, !alias.scope !5, !noalias !2
  %102 = getelementptr i8, i8* %94, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  store <16 x i8> %100, <16 x i8>* %103, align 1, !alias.scope !5, !noalias !2
  %104 = or i64 %92, 32
  %105 = getelementptr i8, i8* %67, i64 %104
  %106 = getelementptr i8, i8* %44, i64 %104
  %107 = bitcast i8* %106 to <16 x i8>*
  %108 = load <16 x i8>, <16 x i8>* %107, align 1, !alias.scope !2
  %109 = getelementptr i8, i8* %106, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !2
  %112 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %108, <16 x i8>* %112, align 1, !alias.scope !5, !noalias !2
  %113 = getelementptr i8, i8* %105, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %114, align 1, !alias.scope !5, !noalias !2
  %115 = or i64 %92, 64
  %116 = getelementptr i8, i8* %67, i64 %115
  %117 = getelementptr i8, i8* %44, i64 %115
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !2
  %120 = getelementptr i8, i8* %117, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1, !alias.scope !2
  %123 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %123, align 1, !alias.scope !5, !noalias !2
  %124 = getelementptr i8, i8* %116, i64 16
  %125 = bitcast i8* %124 to <16 x i8>*
  store <16 x i8> %122, <16 x i8>* %125, align 1, !alias.scope !5, !noalias !2
  %126 = or i64 %92, 96
  %127 = getelementptr i8, i8* %67, i64 %126
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = bitcast i8* %128 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 1, !alias.scope !2
  %131 = getelementptr i8, i8* %128, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1, !alias.scope !2
  %134 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %130, <16 x i8>* %134, align 1, !alias.scope !5, !noalias !2
  %135 = getelementptr i8, i8* %127, i64 16
  %136 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %133, <16 x i8>* %136, align 1, !alias.scope !5, !noalias !2
  %137 = add i64 %92, 128
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !7

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i8, i8* %67, i64 %144
  %147 = getelementptr i8, i8* %44, i64 %144
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !2
  %150 = getelementptr i8, i8* %147, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !2
  %153 = bitcast i8* %146 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %153, align 1, !alias.scope !5, !noalias !2
  %154 = getelementptr i8, i8* %146, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %155, align 1, !alias.scope !5, !noalias !2
  %156 = add i64 %144, 32
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !9

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %71, %81
  br i1 %160, label %171, label %161

161:                                              ; preds = %159, %73, %69
  %162 = phi i8* [ %67, %73 ], [ %67, %69 ], [ %82, %159 ]
  %163 = phi i8* [ %44, %73 ], [ %44, %69 ], [ %83, %159 ]
  br label %164

164:                                              ; preds = %161, %164
  %165 = phi i8* [ %169, %164 ], [ %162, %161 ]
  %166 = phi i8* [ %168, %164 ], [ %163, %161 ]
  %167 = load i8, i8* %166, align 1
  store i8 %167, i8* %165, align 1
  %168 = getelementptr inbounds i8, i8* %166, i64 1
  %169 = getelementptr inbounds i8, i8* %165, i64 1
  %170 = icmp eq i8* %168, %46
  br i1 %170, label %171, label %164, !llvm.loop !11

171:                                              ; preds = %164, %159, %66
  %172 = phi i8* [ %67, %66 ], [ %82, %159 ], [ %169, %164 ]
  store i8 0, i8* %172, align 1
  %173 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #13
  br label %180

180:                                              ; preds = %177, %171
  %181 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* nonnull align 8 %43, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter"* nonnull %5, %"class.std::__1::__wrap_iter"* nonnull %6) #11
  %182 = load i8*, i8** %15, align 8
  %183 = load i8*, i8** %16, align 8
  %184 = icmp eq i8* %182, %183
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = load i8, i8* %182, align 1
  %187 = icmp eq i8 %186, 59
  br i1 %187, label %188, label %434

188:                                              ; preds = %180, %185
  %189 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %189) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 192, i1 false)
  call void @_ZN3net8HttpUtil22NameValuePairsIteratorC1ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %10, i8* %182, i8* %183, i8 signext 59, i32 0, i32 0) #11
  %190 = call zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %10) #11
  br i1 %190, label %191, label %428

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 3, i32 0
  %193 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 4, i32 0
  %194 = bitcast i8** %193 to i64*
  %195 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %198 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 8
  %199 = bitcast %"struct.std::__1::pair.27"* %13 to i8*
  %200 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %201 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 7
  %202 = bitcast %"class.std::__1::basic_string"* %201 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  %204 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 5, i32 0
  %208 = bitcast i8** %207 to i64*
  %209 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 6, i32 0
  %210 = bitcast i8** %209 to i64*
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %13, i64 0, i32 0
  %219 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %13, i64 0, i32 1
  %220 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  %221 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %3, i64 0, i32 0
  %222 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = bitcast %"struct.std::__1::pair.27"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = bitcast %"struct.std::__1::pair.25"* %12 to i8*
  %229 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %12, i64 0, i32 0
  %230 = bitcast %"struct.std::__1::pair.25"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %234

234:                                              ; preds = %191, %426
  %235 = load i8*, i8** %192, align 8
  %236 = load i64, i64* %194, align 8
  %237 = ptrtoint i8* %235 to i64
  %238 = sub i64 %236, %237
  %239 = call zeroext i1 @_ZN3net8HttpUtil10IsParmNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %235, i64 %238) #11
  br i1 %239, label %240, label %432

240:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -86, i64 24, i1 false)
  %241 = load i8*, i8** %192, align 8
  %242 = load i64, i64* %194, align 8
  %243 = ptrtoint i8* %241 to i64
  %244 = sub i64 %242, %243
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i8* %241, i64 %244) #11
  %245 = load i8, i8* %198, align 8, !range !12
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %267

247:                                              ; preds = %240
  %248 = load i64, i64* %208, align 8
  %249 = load i64, i64* %210, align 8
  %250 = icmp eq i64 %249, %248
  %251 = inttoptr i64 %248 to i8*
  %252 = inttoptr i64 %249 to i8*
  br i1 %250, label %253, label %274

253:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %228) #11
  %254 = load i8, i8* %217, align 1, !noalias !13
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %257, label %256

256:                                              ; preds = %253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %228, i8* nonnull align 8 %195, i64 24, i1 false) #11
  br label %260

257:                                              ; preds = %253
  %258 = load i8*, i8** %196, align 8, !noalias !13
  %259 = load i64, i64* %197, align 8, !noalias !13
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %229, i8* %258, i64 %259) #11
  br label %260

260:                                              ; preds = %256, %257
  %261 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_NS8_9nullopt_tEEEEEENSN_INS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %221, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %229, %"struct.std::__1::pair.25"* nonnull dereferenceable(32) %12) #11
  %262 = load i8, i8* %231, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %260
  %265 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %265) #13
  br label %266

266:                                              ; preds = %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %228) #11
  br label %421

267:                                              ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %199) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  %268 = load i8, i8* %203, align 1, !noalias !16
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %200, i8* align 8 %204, i64 24, i1 false) #11
  br label %397

271:                                              ; preds = %267
  %272 = load i8*, i8** %205, align 8, !noalias !16
  %273 = load i64, i64* %206, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* %272, i64 %273) #11
  br label %397

274:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %199) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  %275 = sub i64 %249, %248
  %276 = icmp ugt i64 %275, -17
  br i1 %276, label %277, label %279

277:                                              ; preds = %274
  %278 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %278) #12
  unreachable

279:                                              ; preds = %274
  %280 = icmp ult i64 %275, 23
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = trunc i64 %275 to i8
  store i8 %282, i8* %215, align 1, !alias.scope !16
  br label %288

283:                                              ; preds = %279
  %284 = add nuw i64 %275, 16
  %285 = and i64 %284, -16
  %286 = call i8* @_Znwm(i64 %285) #13
  store i8* %286, i8** %211, align 8, !alias.scope !16
  %287 = or i64 %285, -9223372036854775808
  store i64 %287, i64* %212, align 8, !alias.scope !16
  store i64 %275, i64* %213, align 8, !alias.scope !16
  br label %288

288:                                              ; preds = %283, %281
  %289 = phi i8* [ %200, %281 ], [ %286, %283 ]
  %290 = icmp eq i8* %251, %252
  br i1 %290, label %395, label %291

291:                                              ; preds = %288
  %292 = sub i64 0, %248
  %293 = getelementptr i8, i8* %252, i64 %292
  %294 = ptrtoint i8* %293 to i64
  %295 = icmp ult i8* %293, inttoptr (i64 32 to i8*)
  br i1 %295, label %385, label %296

296:                                              ; preds = %291
  %297 = sub i64 0, %248
  %298 = getelementptr i8, i8* %252, i64 %297
  %299 = ptrtoint i8* %298 to i64
  %300 = getelementptr i8, i8* %289, i64 %299
  %301 = icmp ult i8* %289, %252
  %302 = icmp ugt i8* %300, %251
  %303 = and i1 %301, %302
  br i1 %303, label %385, label %304

304:                                              ; preds = %296
  %305 = and i64 %294, -32
  %306 = getelementptr i8, i8* %289, i64 %305
  %307 = getelementptr i8, i8* %251, i64 %305
  %308 = add i64 %305, -32
  %309 = lshr exact i64 %308, 5
  %310 = add nuw nsw i64 %309, 1
  %311 = and i64 %310, 3
  %312 = icmp ult i64 %308, 96
  br i1 %312, label %364, label %313

313:                                              ; preds = %304
  %314 = sub nsw i64 %310, %311
  br label %315

315:                                              ; preds = %315, %313
  %316 = phi i64 [ 0, %313 ], [ %361, %315 ]
  %317 = phi i64 [ %314, %313 ], [ %362, %315 ]
  %318 = getelementptr i8, i8* %289, i64 %316
  %319 = getelementptr i8, i8* %251, i64 %316
  %320 = bitcast i8* %319 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !19
  %322 = getelementptr i8, i8* %319, i64 16
  %323 = bitcast i8* %322 to <16 x i8>*
  %324 = load <16 x i8>, <16 x i8>* %323, align 1, !alias.scope !19
  %325 = bitcast i8* %318 to <16 x i8>*
  store <16 x i8> %321, <16 x i8>* %325, align 1, !alias.scope !22, !noalias !19
  %326 = getelementptr i8, i8* %318, i64 16
  %327 = bitcast i8* %326 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %327, align 1, !alias.scope !22, !noalias !19
  %328 = or i64 %316, 32
  %329 = getelementptr i8, i8* %289, i64 %328
  %330 = getelementptr i8, i8* %251, i64 %328
  %331 = bitcast i8* %330 to <16 x i8>*
  %332 = load <16 x i8>, <16 x i8>* %331, align 1, !alias.scope !19
  %333 = getelementptr i8, i8* %330, i64 16
  %334 = bitcast i8* %333 to <16 x i8>*
  %335 = load <16 x i8>, <16 x i8>* %334, align 1, !alias.scope !19
  %336 = bitcast i8* %329 to <16 x i8>*
  store <16 x i8> %332, <16 x i8>* %336, align 1, !alias.scope !22, !noalias !19
  %337 = getelementptr i8, i8* %329, i64 16
  %338 = bitcast i8* %337 to <16 x i8>*
  store <16 x i8> %335, <16 x i8>* %338, align 1, !alias.scope !22, !noalias !19
  %339 = or i64 %316, 64
  %340 = getelementptr i8, i8* %289, i64 %339
  %341 = getelementptr i8, i8* %251, i64 %339
  %342 = bitcast i8* %341 to <16 x i8>*
  %343 = load <16 x i8>, <16 x i8>* %342, align 1, !alias.scope !19
  %344 = getelementptr i8, i8* %341, i64 16
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !19
  %347 = bitcast i8* %340 to <16 x i8>*
  store <16 x i8> %343, <16 x i8>* %347, align 1, !alias.scope !22, !noalias !19
  %348 = getelementptr i8, i8* %340, i64 16
  %349 = bitcast i8* %348 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %349, align 1, !alias.scope !22, !noalias !19
  %350 = or i64 %316, 96
  %351 = getelementptr i8, i8* %289, i64 %350
  %352 = getelementptr i8, i8* %251, i64 %350
  %353 = bitcast i8* %352 to <16 x i8>*
  %354 = load <16 x i8>, <16 x i8>* %353, align 1, !alias.scope !19
  %355 = getelementptr i8, i8* %352, i64 16
  %356 = bitcast i8* %355 to <16 x i8>*
  %357 = load <16 x i8>, <16 x i8>* %356, align 1, !alias.scope !19
  %358 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %354, <16 x i8>* %358, align 1, !alias.scope !22, !noalias !19
  %359 = getelementptr i8, i8* %351, i64 16
  %360 = bitcast i8* %359 to <16 x i8>*
  store <16 x i8> %357, <16 x i8>* %360, align 1, !alias.scope !22, !noalias !19
  %361 = add i64 %316, 128
  %362 = add i64 %317, -4
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %315, !llvm.loop !24

364:                                              ; preds = %315, %304
  %365 = phi i64 [ 0, %304 ], [ %361, %315 ]
  %366 = icmp eq i64 %311, 0
  br i1 %366, label %383, label %367

367:                                              ; preds = %364, %367
  %368 = phi i64 [ %380, %367 ], [ %365, %364 ]
  %369 = phi i64 [ %381, %367 ], [ %311, %364 ]
  %370 = getelementptr i8, i8* %289, i64 %368
  %371 = getelementptr i8, i8* %251, i64 %368
  %372 = bitcast i8* %371 to <16 x i8>*
  %373 = load <16 x i8>, <16 x i8>* %372, align 1, !alias.scope !19
  %374 = getelementptr i8, i8* %371, i64 16
  %375 = bitcast i8* %374 to <16 x i8>*
  %376 = load <16 x i8>, <16 x i8>* %375, align 1, !alias.scope !19
  %377 = bitcast i8* %370 to <16 x i8>*
  store <16 x i8> %373, <16 x i8>* %377, align 1, !alias.scope !22, !noalias !19
  %378 = getelementptr i8, i8* %370, i64 16
  %379 = bitcast i8* %378 to <16 x i8>*
  store <16 x i8> %376, <16 x i8>* %379, align 1, !alias.scope !22, !noalias !19
  %380 = add i64 %368, 32
  %381 = add i64 %369, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %367, !llvm.loop !25

383:                                              ; preds = %367, %364
  %384 = icmp eq i64 %305, %294
  br i1 %384, label %395, label %385

385:                                              ; preds = %383, %296, %291
  %386 = phi i8* [ %289, %296 ], [ %289, %291 ], [ %306, %383 ]
  %387 = phi i8* [ %251, %296 ], [ %251, %291 ], [ %307, %383 ]
  br label %388

388:                                              ; preds = %385, %388
  %389 = phi i8* [ %393, %388 ], [ %386, %385 ]
  %390 = phi i8* [ %392, %388 ], [ %387, %385 ]
  %391 = load i8, i8* %390, align 1
  store i8 %391, i8* %389, align 1
  %392 = getelementptr inbounds i8, i8* %390, i64 1
  %393 = getelementptr inbounds i8, i8* %389, i64 1
  %394 = icmp eq i8* %392, %252
  br i1 %394, label %395, label %388, !llvm.loop !26

395:                                              ; preds = %388, %383, %288
  %396 = phi i8* [ %289, %288 ], [ %306, %383 ], [ %393, %388 ]
  store i8 0, i8* %396, align 1
  br label %397

397:                                              ; preds = %270, %271, %395
  %398 = load i8, i8* %217, align 1, !noalias !27
  %399 = icmp slt i8 %398, 0
  br i1 %399, label %401, label %400

400:                                              ; preds = %397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %199, i8* nonnull align 8 %195, i64 24, i1 false) #11
  br label %404

401:                                              ; preds = %397
  %402 = load i8*, i8** %196, align 8, !noalias !27
  %403 = load i64, i64* %197, align 8, !noalias !27
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %218, i8* %402, i64 %403) #11
  br label %404

404:                                              ; preds = %400, %401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* nonnull align 8 %200, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 24, i1 false) #11, !noalias !27
  %405 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S7_EEEEENSN_INS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %221, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %218, %"struct.std::__1::pair.27"* nonnull dereferenceable(48) %13) #11
  %406 = load i8, i8* %223, align 1
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %408, label %410

408:                                              ; preds = %404
  %409 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %409) #13
  br label %410

410:                                              ; preds = %408, %404
  %411 = load i8, i8* %226, align 1
  %412 = icmp slt i8 %411, 0
  br i1 %412, label %413, label %415

413:                                              ; preds = %410
  %414 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %414) #13
  br label %415

415:                                              ; preds = %410, %413
  %416 = load i8, i8* %215, align 1
  %417 = icmp slt i8 %416, 0
  br i1 %417, label %418, label %420

418:                                              ; preds = %415
  %419 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %419) #13
  br label %420

420:                                              ; preds = %415, %418
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %199) #11
  br label %421

421:                                              ; preds = %420, %266
  %422 = load i8, i8* %217, align 1
  %423 = icmp slt i8 %422, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %421
  %425 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %425) #13
  br label %426

426:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #11
  %427 = call zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %10) #11
  br i1 %427, label %234, label %428

428:                                              ; preds = %426, %188
  %429 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %10, i64 0, i32 1
  %430 = load i8, i8* %429, align 8, !range !12
  %431 = icmp ne i8 %430, 0
  br label %432

432:                                              ; preds = %234, %428
  %433 = phi i1 [ %431, %428 ], [ false, %234 ]
  call void @_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %189) #11
  br label %434

434:                                              ; preds = %30, %38, %39, %18, %185, %432
  %435 = phi i1 [ %433, %432 ], [ false, %185 ], [ false, %18 ], [ false, %39 ], [ false, %38 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %436

436:                                              ; preds = %4, %434
  %437 = phi i1 [ %435, %434 ], [ false, %4 ]
  ret i1 %437
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter"*, %"class.std::__1::__wrap_iter"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net8HttpUtil22NameValuePairsIteratorC1ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE(%"class.net::HttpUtil::NameValuePairsIterator"*, i8*, i8*, i8 signext, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil10IsParmNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev(%"class.net::HttpUtil::NameValuePairsIterator"*) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_NS8_9nullopt_tEEEEEENSN_INS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.25"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !30
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %200, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %200, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #11
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %200, label %96

96:                                               ; preds = %107, %87, %69, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %200, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 72) #13, !noalias !31
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"struct.std::__1::pair.25"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #11, !noalias !31
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #11, !noalias !31
  %117 = getelementptr inbounds i8, i8* %114, i64 40
  store i8 0, i8* %117, align 8, !noalias !31
  %118 = getelementptr inbounds i8, i8* %114, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #11, !noalias !31
  %119 = getelementptr inbounds i8, i8* %114, i64 8
  %120 = bitcast i8* %119 to i64*
  store i64 %18, i64* %120, align 8, !noalias !31
  %121 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %121, align 8, !noalias !31
  %122 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  %125 = uitofp i64 %124 to float
  %126 = uitofp i64 %20 to float
  %127 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %128 = load float, float* %127, align 4
  %129 = fmul float %128, %126
  %130 = fcmp olt float %129, %125
  %131 = or i1 %21, %130
  br i1 %131, label %132, label %155

132:                                              ; preds = %112
  %133 = shl i64 %20, 1
  %134 = icmp ult i64 %20, 3
  %135 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !30
  %136 = icmp ugt i64 %135, 1
  %137 = or i1 %134, %136
  %138 = zext i1 %137 to i64
  %139 = or i64 %133, %138
  %140 = fdiv float %125, %128
  %141 = call float @llvm.ceil.f32(float %140) #11
  %142 = fptoui float %141 to i64
  %143 = icmp ult i64 %139, %142
  %144 = select i1 %143, i64 %142, i64 %139
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %144)
  %145 = load i64, i64* %19, align 8
  %146 = call i64 @llvm.ctpop.i64(i64 %145) #11, !range !30
  %147 = icmp ugt i64 %146, 1
  br i1 %147, label %151, label %148

148:                                              ; preds = %132
  %149 = add i64 %145, -1
  %150 = and i64 %149, %18
  br label %155

151:                                              ; preds = %132
  %152 = icmp ult i64 %18, %145
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = urem i64 %18, %145
  br label %155

155:                                              ; preds = %153, %151, %148, %112
  %156 = phi i64 [ %20, %112 ], [ %145, %148 ], [ %145, %151 ], [ %145, %153 ]
  %157 = phi i64 [ %113, %112 ], [ %150, %148 ], [ %18, %151 ], [ %154, %153 ]
  %158 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %159, i64 %157
  %161 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base"* %161, null
  br i1 %162, label %163, label %189

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %165 = bitcast %"struct.std::__1::__hash_node_base"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %114 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %164 to i8**
  store i8* %114, i8** %168, align 8
  store %"struct.std::__1::__hash_node_base"* %164, %"struct.std::__1::__hash_node_base"** %160, align 8
  %169 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %121, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base"* %169, null
  br i1 %170, label %196, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %169, i64 1
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = call i64 @llvm.ctpop.i64(i64 %156) #11, !range !30
  %176 = icmp ugt i64 %175, 1
  br i1 %176, label %180, label %177

177:                                              ; preds = %171
  %178 = add i64 %156, -1
  %179 = and i64 %174, %178
  br label %184

180:                                              ; preds = %171
  %181 = icmp ult i64 %174, %156
  br i1 %181, label %184, label %182

182:                                              ; preds = %180
  %183 = urem i64 %174, %156
  br label %184

184:                                              ; preds = %177, %180, %182
  %185 = phi i64 [ %179, %177 ], [ %183, %182 ], [ %174, %180 ]
  %186 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %158, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %186, i64 %185
  %188 = bitcast %"struct.std::__1::__hash_node_base"** %187 to i8**
  br label %194

189:                                              ; preds = %155
  %190 = bitcast %"struct.std::__1::__hash_node_base"* %161 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast i8* %114 to i64*
  store i64 %191, i64* %192, align 8
  %193 = bitcast %"struct.std::__1::__hash_node_base"* %161 to i8**
  br label %194

194:                                              ; preds = %184, %189
  %195 = phi i8** [ %193, %189 ], [ %188, %184 ]
  store i8* %114, i8** %195, align 8
  br label %196

196:                                              ; preds = %194, %163
  %197 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %198 = load i64, i64* %122, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %122, align 8
  br label %200

200:                                              ; preds = %86, %92, %93, %100, %196
  %201 = phi i8 [ 1, %196 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %202 = phi %"struct.std::__1::__hash_node_base"* [ %197, %196 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %203 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %202, 0
  %204 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %203, i8 %201, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %204
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !30
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !30
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !30
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !34

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !30
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #11
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S7_EEEEENSN_INS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.27"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !30
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %202, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %202, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #11
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %202, label %96

96:                                               ; preds = %107, %87, %69, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %202, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 72) #13, !noalias !35
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"struct.std::__1::pair.27"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #11, !noalias !35
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #11, !noalias !35
  %117 = getelementptr inbounds %"struct.std::__1::pair.27", %"struct.std::__1::pair.27"* %2, i64 0, i32 1
  %118 = getelementptr inbounds i8, i8* %114, i64 40
  store i8 1, i8* %118, align 8, !noalias !35
  %119 = getelementptr inbounds i8, i8* %114, i64 48
  %120 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #11, !noalias !35
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #11, !noalias !35
  %121 = getelementptr inbounds i8, i8* %114, i64 8
  %122 = bitcast i8* %121 to i64*
  store i64 %18, i64* %122, align 8, !noalias !35
  %123 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %123, align 8, !noalias !35
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 1
  %127 = uitofp i64 %126 to float
  %128 = uitofp i64 %20 to float
  %129 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %130 = load float, float* %129, align 4
  %131 = fmul float %130, %128
  %132 = fcmp olt float %131, %127
  %133 = or i1 %21, %132
  br i1 %133, label %134, label %157

134:                                              ; preds = %112
  %135 = shl i64 %20, 1
  %136 = icmp ult i64 %20, 3
  %137 = call i64 @llvm.ctpop.i64(i64 %20) #11, !range !30
  %138 = icmp ugt i64 %137, 1
  %139 = or i1 %136, %138
  %140 = zext i1 %139 to i64
  %141 = or i64 %135, %140
  %142 = fdiv float %127, %130
  %143 = call float @llvm.ceil.f32(float %142) #11
  %144 = fptoui float %143 to i64
  %145 = icmp ult i64 %141, %144
  %146 = select i1 %145, i64 %144, i64 %141
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %146)
  %147 = load i64, i64* %19, align 8
  %148 = call i64 @llvm.ctpop.i64(i64 %147) #11, !range !30
  %149 = icmp ugt i64 %148, 1
  br i1 %149, label %153, label %150

150:                                              ; preds = %134
  %151 = add i64 %147, -1
  %152 = and i64 %151, %18
  br label %157

153:                                              ; preds = %134
  %154 = icmp ult i64 %18, %147
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = urem i64 %18, %147
  br label %157

157:                                              ; preds = %155, %153, %150, %112
  %158 = phi i64 [ %20, %112 ], [ %147, %150 ], [ %147, %153 ], [ %147, %155 ]
  %159 = phi i64 [ %113, %112 ], [ %152, %150 ], [ %18, %153 ], [ %156, %155 ]
  %160 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %161, i64 %159
  %163 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, align 8
  %164 = icmp eq %"struct.std::__1::__hash_node_base"* %163, null
  br i1 %164, label %165, label %191

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %167 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast i8* %114 to i64*
  store i64 %168, i64* %169, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i8**
  store i8* %114, i8** %170, align 8
  store %"struct.std::__1::__hash_node_base"* %166, %"struct.std::__1::__hash_node_base"** %162, align 8
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %123, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %198, label %173

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 1
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = call i64 @llvm.ctpop.i64(i64 %158) #11, !range !30
  %178 = icmp ugt i64 %177, 1
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = add i64 %158, -1
  %181 = and i64 %176, %180
  br label %186

182:                                              ; preds = %173
  %183 = icmp ult i64 %176, %158
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = urem i64 %176, %158
  br label %186

186:                                              ; preds = %179, %182, %184
  %187 = phi i64 [ %181, %179 ], [ %185, %184 ], [ %176, %182 ]
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %160, align 8
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %188, i64 %187
  %190 = bitcast %"struct.std::__1::__hash_node_base"** %189 to i8**
  br label %196

191:                                              ; preds = %157
  %192 = bitcast %"struct.std::__1::__hash_node_base"* %163 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast i8* %114 to i64*
  store i64 %193, i64* %194, align 8
  %195 = bitcast %"struct.std::__1::__hash_node_base"* %163 to i8**
  br label %196

196:                                              ; preds = %186, %191
  %197 = phi i8** [ %195, %191 ], [ %190, %186 ]
  store i8* %114, i8** %197, align 8
  br label %198

198:                                              ; preds = %196, %165
  %199 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %200 = load i64, i64* %124, align 8
  %201 = add i64 %200, 1
  store i64 %201, i64* %124, align 8
  br label %202

202:                                              ; preds = %86, %92, %93, %100, %198
  %203 = phi i8 [ 1, %198 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %204 = phi %"struct.std::__1::__hash_node_base"* [ %199, %198 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %205 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %204, 0
  %206 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %205, i8 %203, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %206
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN4absl9nullopt_tEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSD_IT0_E4typeEEEOSE_OSH_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN4absl9nullopt_tEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSD_IT0_E4typeEEEOSE_OSH_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK3net8HttpUtil22NameValuePairsIterator5valueEv: argument 0"}
!18 = distinct !{!18, !"_ZNK3net8HttpUtil22NameValuePairsIterator5valueEv"}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !8}
!25 = distinct !{!25, !10}
!26 = distinct !{!26, !8}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_"}
!30 = !{i64 0, i64 65}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashINS_4pairIS7_NS8_9nullopt_tEEEJEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_IST_EEEEEEmOT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashINS_4pairIS7_NS8_9nullopt_tEEEJEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_IST_EEEEEEmOT_DpOT0_"}
!34 = distinct !{!34, !10}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashINS_4pairIS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4absl8optionalIS7_EEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE21__construct_node_hashINS_4pairIS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS5_ISS_EEEEEEmOT_DpOT0_"}
