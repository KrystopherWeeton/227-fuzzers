; ModuleID = '../../third_party/libavif/src/src/alpha.c'
source_filename = "../../third_party/libavif/src/src/alpha.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.avifAlphaParams = type { i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i8*, i32, i32, i32 }
%struct.avifRGBImage = type { i32, i32, i32, i32, i32, i32, i32, i8*, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avifFillAlpha(%struct.avifAlphaParams* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp ugt i32 %3, 8
  %5 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 -1, %3
  %8 = xor i32 %7, -1
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call i32 @avifFullToLimitedY(i32 %3, i32 %8) #2
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i32 [ %11, %10 ], [ %8, %1 ]
  br i1 %4, label %14, label %56

14:                                               ; preds = %12
  %15 = trunc i32 %13 to i16
  %16 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %97, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %21 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %22 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %23 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %24 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %25 = load i32, i32* %23, align 8
  br label %26

26:                                               ; preds = %19, %41
  %27 = phi i32 [ %17, %19 ], [ %42, %41 ]
  %28 = phi i32 [ %25, %19 ], [ %43, %41 ]
  %29 = phi i32 [ 0, %19 ], [ %44, %41 ]
  %30 = icmp eq i32 %28, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = load i8*, i8** %20, align 8
  %33 = load i32, i32* %22, align 8
  %34 = mul i32 %33, %29
  %35 = load i32, i32* %21, align 4
  %36 = add i32 %34, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %32, i64 %37
  br label %46

39:                                               ; preds = %46
  %40 = load i32, i32* %16, align 4
  br label %41

41:                                               ; preds = %39, %26
  %42 = phi i32 [ %40, %39 ], [ %27, %26 ]
  %43 = phi i32 [ %54, %39 ], [ 0, %26 ]
  %44 = add nuw i32 %29, 1
  %45 = icmp ult i32 %44, %42
  br i1 %45, label %26, label %97

46:                                               ; preds = %31, %46
  %47 = phi i32 [ %53, %46 ], [ 0, %31 ]
  %48 = phi i8* [ %52, %46 ], [ %38, %31 ]
  %49 = bitcast i8* %48 to i16*
  store i16 %15, i16* %49, align 2
  %50 = load i32, i32* %24, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = add nuw i32 %47, 1
  %54 = load i32, i32* %23, align 8
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %46, label %39

56:                                               ; preds = %12
  %57 = trunc i32 %13 to i8
  %58 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %97, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %63 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %64 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %65 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %66 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %67 = load i32, i32* %65, align 8
  br label %68

68:                                               ; preds = %61, %83
  %69 = phi i32 [ %59, %61 ], [ %84, %83 ]
  %70 = phi i32 [ %67, %61 ], [ %85, %83 ]
  %71 = phi i32 [ 0, %61 ], [ %86, %83 ]
  %72 = icmp eq i32 %70, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %68
  %74 = load i8*, i8** %62, align 8
  %75 = load i32, i32* %64, align 8
  %76 = mul i32 %75, %71
  %77 = load i32, i32* %63, align 4
  %78 = add i32 %76, %77
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %74, i64 %79
  br label %88

81:                                               ; preds = %88
  %82 = load i32, i32* %58, align 4
  br label %83

83:                                               ; preds = %81, %68
  %84 = phi i32 [ %82, %81 ], [ %69, %68 ]
  %85 = phi i32 [ %95, %81 ], [ 0, %68 ]
  %86 = add nuw i32 %71, 1
  %87 = icmp ult i32 %86, %84
  br i1 %87, label %68, label %97

88:                                               ; preds = %73, %88
  %89 = phi i32 [ %94, %88 ], [ 0, %73 ]
  %90 = phi i8* [ %93, %88 ], [ %80, %73 ]
  store i8 %57, i8* %90, align 1
  %91 = load i32, i32* %66, align 8
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = add nuw i32 %89, 1
  %95 = load i32, i32* %65, align 8
  %96 = icmp ult i32 %94, %95
  br i1 %96, label %88, label %81

97:                                               ; preds = %83, %41, %14, %56
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avifReformatAlpha(%struct.avifAlphaParams* readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = shl nsw i32 -1, %3
  %5 = xor i32 %4, -1
  %6 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = shl nsw i32 -1, %7
  %9 = xor i32 %8, -1
  %10 = sitofp i32 %5 to float
  %11 = sitofp i32 %9 to float
  %12 = icmp eq i32 %3, %7
  %13 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %12, label %16, label %485

16:                                               ; preds = %1
  br i1 %15, label %17, label %131

17:                                               ; preds = %16
  %18 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %1324 [
    i32 1, label %20
    i32 0, label %255
  ]

20:                                               ; preds = %17
  %21 = icmp ugt i32 %3, 8
  %22 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %21, label %37, label %25

25:                                               ; preds = %20
  br i1 %24, label %26, label %1324

26:                                               ; preds = %25
  %27 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %28 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %29 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %30 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %31 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %32 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %33 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %34 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %35 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %36 = load i32, i32* %33, align 8
  br label %91

37:                                               ; preds = %20
  br i1 %24, label %38, label %1324

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %40 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %41 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %42 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %43 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %44 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %45 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %46 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %47 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %48 = load i32, i32* %45, align 8
  br label %49

49:                                               ; preds = %38, %70
  %50 = phi i32 [ %23, %38 ], [ %71, %70 ]
  %51 = phi i32 [ %48, %38 ], [ %72, %70 ]
  %52 = phi i32 [ 0, %38 ], [ %73, %70 ]
  %53 = load i8*, i8** %39, align 8
  %54 = load i32, i32* %40, align 4
  %55 = load i32, i32* %41, align 8
  %56 = mul i32 %55, %52
  %57 = add i32 %56, %54
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %53, i64 %58
  %60 = load i8*, i8** %42, align 8
  %61 = load i32, i32* %43, align 4
  %62 = load i32, i32* %44, align 8
  %63 = mul i32 %62, %52
  %64 = add i32 %63, %61
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = icmp eq i32 %51, 0
  br i1 %67, label %70, label %75

68:                                               ; preds = %75
  %69 = load i32, i32* %22, align 4
  br label %70

70:                                               ; preds = %68, %49
  %71 = phi i32 [ %69, %68 ], [ %50, %49 ]
  %72 = phi i32 [ %89, %68 ], [ 0, %49 ]
  %73 = add nuw i32 %52, 1
  %74 = icmp ult i32 %73, %71
  br i1 %74, label %49, label %1324

75:                                               ; preds = %49, %75
  %76 = phi i32 [ %88, %75 ], [ 0, %49 ]
  %77 = load i32, i32* %46, align 8
  %78 = mul i32 %77, %76
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %59, i64 %79
  %81 = bitcast i8* %80 to i16*
  %82 = load i16, i16* %81, align 2
  %83 = load i32, i32* %47, align 8
  %84 = mul i32 %83, %76
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %66, i64 %85
  %87 = bitcast i8* %86 to i16*
  store i16 %82, i16* %87, align 2
  %88 = add nuw i32 %76, 1
  %89 = load i32, i32* %45, align 8
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %75, label %68

91:                                               ; preds = %26, %112
  %92 = phi i32 [ %23, %26 ], [ %113, %112 ]
  %93 = phi i32 [ %36, %26 ], [ %114, %112 ]
  %94 = phi i32 [ 0, %26 ], [ %115, %112 ]
  %95 = load i8*, i8** %27, align 8
  %96 = load i32, i32* %28, align 4
  %97 = load i32, i32* %29, align 8
  %98 = mul i32 %97, %94
  %99 = add i32 %98, %96
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  %102 = load i8*, i8** %30, align 8
  %103 = load i32, i32* %31, align 4
  %104 = load i32, i32* %32, align 8
  %105 = mul i32 %104, %94
  %106 = add i32 %105, %103
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %102, i64 %107
  %109 = icmp eq i32 %93, 0
  br i1 %109, label %112, label %117

110:                                              ; preds = %117
  %111 = load i32, i32* %22, align 4
  br label %112

112:                                              ; preds = %110, %91
  %113 = phi i32 [ %111, %110 ], [ %92, %91 ]
  %114 = phi i32 [ %129, %110 ], [ 0, %91 ]
  %115 = add nuw i32 %94, 1
  %116 = icmp ult i32 %115, %113
  br i1 %116, label %91, label %1324

117:                                              ; preds = %91, %117
  %118 = phi i32 [ %128, %117 ], [ 0, %91 ]
  %119 = load i32, i32* %34, align 8
  %120 = mul i32 %119, %118
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %101, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = load i32, i32* %35, align 8
  %125 = mul i32 %124, %118
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %108, i64 %126
  store i8 %123, i8* %127, align 1
  %128 = add nuw i32 %118, 1
  %129 = load i32, i32* %33, align 8
  %130 = icmp ult i32 %128, %129
  br i1 %130, label %117, label %110

131:                                              ; preds = %16
  %132 = icmp eq i32 %14, 0
  br i1 %132, label %133, label %1324

133:                                              ; preds = %131
  %134 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 9
  %135 = load i32, i32* %134, align 8
  switch i32 %135, label %1324 [
    i32 1, label %136
    i32 0, label %374
  ]

136:                                              ; preds = %133
  %137 = icmp ugt i32 %3, 8
  %138 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %137, label %153, label %141

141:                                              ; preds = %136
  br i1 %140, label %142, label %1324

142:                                              ; preds = %141
  %143 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %144 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %145 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %146 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %147 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %148 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %149 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %150 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %151 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %152 = load i32, i32* %149, align 8
  br label %211

153:                                              ; preds = %136
  br i1 %140, label %154, label %1324

154:                                              ; preds = %153
  %155 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %156 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %157 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %158 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %159 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %160 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %161 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %162 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %163 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %164 = load i32, i32* %161, align 8
  br label %165

165:                                              ; preds = %154, %186
  %166 = phi i32 [ %139, %154 ], [ %187, %186 ]
  %167 = phi i32 [ %164, %154 ], [ %188, %186 ]
  %168 = phi i32 [ 0, %154 ], [ %189, %186 ]
  %169 = load i8*, i8** %155, align 8
  %170 = load i32, i32* %156, align 4
  %171 = load i32, i32* %157, align 8
  %172 = mul i32 %171, %168
  %173 = add i32 %172, %170
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %169, i64 %174
  %176 = load i8*, i8** %158, align 8
  %177 = load i32, i32* %159, align 4
  %178 = load i32, i32* %160, align 8
  %179 = mul i32 %178, %168
  %180 = add i32 %179, %177
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %176, i64 %181
  %183 = icmp eq i32 %167, 0
  br i1 %183, label %186, label %191

184:                                              ; preds = %191
  %185 = load i32, i32* %138, align 4
  br label %186

186:                                              ; preds = %184, %165
  %187 = phi i32 [ %185, %184 ], [ %166, %165 ]
  %188 = phi i32 [ %209, %184 ], [ 0, %165 ]
  %189 = add nuw i32 %168, 1
  %190 = icmp ult i32 %189, %187
  br i1 %190, label %165, label %1324

191:                                              ; preds = %165, %191
  %192 = phi i32 [ %208, %191 ], [ 0, %165 ]
  %193 = load i32, i32* %162, align 8
  %194 = mul i32 %193, %192
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %175, i64 %195
  %197 = bitcast i8* %196 to i16*
  %198 = load i16, i16* %197, align 2
  %199 = zext i16 %198 to i32
  %200 = load i32, i32* %2, align 8
  %201 = tail call i32 @avifLimitedToFullY(i32 %200, i32 %199) #2
  %202 = trunc i32 %201 to i16
  %203 = load i32, i32* %163, align 8
  %204 = mul i32 %203, %192
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %182, i64 %205
  %207 = bitcast i8* %206 to i16*
  store i16 %202, i16* %207, align 2
  %208 = add nuw i32 %192, 1
  %209 = load i32, i32* %161, align 8
  %210 = icmp ult i32 %208, %209
  br i1 %210, label %191, label %184

211:                                              ; preds = %142, %232
  %212 = phi i32 [ %139, %142 ], [ %233, %232 ]
  %213 = phi i32 [ %152, %142 ], [ %234, %232 ]
  %214 = phi i32 [ 0, %142 ], [ %235, %232 ]
  %215 = load i8*, i8** %143, align 8
  %216 = load i32, i32* %144, align 4
  %217 = load i32, i32* %145, align 8
  %218 = mul i32 %217, %214
  %219 = add i32 %218, %216
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %215, i64 %220
  %222 = load i8*, i8** %146, align 8
  %223 = load i32, i32* %147, align 4
  %224 = load i32, i32* %148, align 8
  %225 = mul i32 %224, %214
  %226 = add i32 %225, %223
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %222, i64 %227
  %229 = icmp eq i32 %213, 0
  br i1 %229, label %232, label %237

230:                                              ; preds = %237
  %231 = load i32, i32* %138, align 4
  br label %232

232:                                              ; preds = %230, %211
  %233 = phi i32 [ %231, %230 ], [ %212, %211 ]
  %234 = phi i32 [ %253, %230 ], [ 0, %211 ]
  %235 = add nuw i32 %214, 1
  %236 = icmp ult i32 %235, %233
  br i1 %236, label %211, label %1324

237:                                              ; preds = %211, %237
  %238 = phi i32 [ %252, %237 ], [ 0, %211 ]
  %239 = load i32, i32* %150, align 8
  %240 = mul i32 %239, %238
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %221, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = load i32, i32* %2, align 8
  %246 = tail call i32 @avifLimitedToFullY(i32 %245, i32 %244) #2
  %247 = trunc i32 %246 to i8
  %248 = load i32, i32* %151, align 8
  %249 = mul i32 %248, %238
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %228, i64 %250
  store i8 %247, i8* %251, align 1
  %252 = add nuw i32 %238, 1
  %253 = load i32, i32* %149, align 8
  %254 = icmp ult i32 %252, %253
  br i1 %254, label %237, label %230

255:                                              ; preds = %17
  %256 = icmp ugt i32 %3, 8
  %257 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %256, label %272, label %260

260:                                              ; preds = %255
  br i1 %259, label %261, label %1324

261:                                              ; preds = %260
  %262 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %263 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %264 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %265 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %266 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %267 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %268 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %269 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %270 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %271 = load i32, i32* %268, align 8
  br label %330

272:                                              ; preds = %255
  br i1 %259, label %273, label %1324

273:                                              ; preds = %272
  %274 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %275 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %276 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %277 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %278 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %279 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %280 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %281 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %282 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %283 = load i32, i32* %280, align 8
  br label %284

284:                                              ; preds = %273, %305
  %285 = phi i32 [ %258, %273 ], [ %306, %305 ]
  %286 = phi i32 [ %283, %273 ], [ %307, %305 ]
  %287 = phi i32 [ 0, %273 ], [ %308, %305 ]
  %288 = load i8*, i8** %274, align 8
  %289 = load i32, i32* %275, align 4
  %290 = load i32, i32* %276, align 8
  %291 = mul i32 %290, %287
  %292 = add i32 %291, %289
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i8, i8* %288, i64 %293
  %295 = load i8*, i8** %277, align 8
  %296 = load i32, i32* %278, align 4
  %297 = load i32, i32* %279, align 8
  %298 = mul i32 %297, %287
  %299 = add i32 %298, %296
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %295, i64 %300
  %302 = icmp eq i32 %286, 0
  br i1 %302, label %305, label %310

303:                                              ; preds = %310
  %304 = load i32, i32* %257, align 4
  br label %305

305:                                              ; preds = %303, %284
  %306 = phi i32 [ %304, %303 ], [ %285, %284 ]
  %307 = phi i32 [ %328, %303 ], [ 0, %284 ]
  %308 = add nuw i32 %287, 1
  %309 = icmp ult i32 %308, %306
  br i1 %309, label %284, label %1324

310:                                              ; preds = %284, %310
  %311 = phi i32 [ %327, %310 ], [ 0, %284 ]
  %312 = load i32, i32* %281, align 8
  %313 = mul i32 %312, %311
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds i8, i8* %294, i64 %314
  %316 = bitcast i8* %315 to i16*
  %317 = load i16, i16* %316, align 2
  %318 = zext i16 %317 to i32
  %319 = load i32, i32* %6, align 4
  %320 = tail call i32 @avifFullToLimitedY(i32 %319, i32 %318) #2
  %321 = trunc i32 %320 to i16
  %322 = load i32, i32* %282, align 8
  %323 = mul i32 %322, %311
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds i8, i8* %301, i64 %324
  %326 = bitcast i8* %325 to i16*
  store i16 %321, i16* %326, align 2
  %327 = add nuw i32 %311, 1
  %328 = load i32, i32* %280, align 8
  %329 = icmp ult i32 %327, %328
  br i1 %329, label %310, label %303

330:                                              ; preds = %261, %351
  %331 = phi i32 [ %258, %261 ], [ %352, %351 ]
  %332 = phi i32 [ %271, %261 ], [ %353, %351 ]
  %333 = phi i32 [ 0, %261 ], [ %354, %351 ]
  %334 = load i8*, i8** %262, align 8
  %335 = load i32, i32* %263, align 4
  %336 = load i32, i32* %264, align 8
  %337 = mul i32 %336, %333
  %338 = add i32 %337, %335
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds i8, i8* %334, i64 %339
  %341 = load i8*, i8** %265, align 8
  %342 = load i32, i32* %266, align 4
  %343 = load i32, i32* %267, align 8
  %344 = mul i32 %343, %333
  %345 = add i32 %344, %342
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds i8, i8* %341, i64 %346
  %348 = icmp eq i32 %332, 0
  br i1 %348, label %351, label %356

349:                                              ; preds = %356
  %350 = load i32, i32* %257, align 4
  br label %351

351:                                              ; preds = %349, %330
  %352 = phi i32 [ %350, %349 ], [ %331, %330 ]
  %353 = phi i32 [ %372, %349 ], [ 0, %330 ]
  %354 = add nuw i32 %333, 1
  %355 = icmp ult i32 %354, %352
  br i1 %355, label %330, label %1324

356:                                              ; preds = %330, %356
  %357 = phi i32 [ %371, %356 ], [ 0, %330 ]
  %358 = load i32, i32* %269, align 8
  %359 = mul i32 %358, %357
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds i8, i8* %340, i64 %360
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i32
  %364 = load i32, i32* %6, align 4
  %365 = tail call i32 @avifFullToLimitedY(i32 %364, i32 %363) #2
  %366 = trunc i32 %365 to i8
  %367 = load i32, i32* %270, align 8
  %368 = mul i32 %367, %357
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds i8, i8* %347, i64 %369
  store i8 %366, i8* %370, align 1
  %371 = add nuw i32 %357, 1
  %372 = load i32, i32* %268, align 8
  %373 = icmp ult i32 %371, %372
  br i1 %373, label %356, label %349

374:                                              ; preds = %133
  %375 = icmp ugt i32 %3, 8
  %376 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %377 = load i32, i32* %376, align 4
  %378 = icmp ne i32 %377, 0
  br i1 %375, label %391, label %379

379:                                              ; preds = %374
  br i1 %378, label %380, label %1324

380:                                              ; preds = %379
  %381 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %382 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %383 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %384 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %385 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %386 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %387 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %388 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %389 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %390 = load i32, i32* %387, align 8
  br label %445

391:                                              ; preds = %374
  br i1 %378, label %392, label %1324

392:                                              ; preds = %391
  %393 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %394 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %395 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %396 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %397 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %398 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %399 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %400 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %401 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %402 = load i32, i32* %399, align 8
  br label %403

403:                                              ; preds = %392, %424
  %404 = phi i32 [ %377, %392 ], [ %425, %424 ]
  %405 = phi i32 [ %402, %392 ], [ %426, %424 ]
  %406 = phi i32 [ 0, %392 ], [ %427, %424 ]
  %407 = load i8*, i8** %393, align 8
  %408 = load i32, i32* %394, align 4
  %409 = load i32, i32* %395, align 8
  %410 = mul i32 %409, %406
  %411 = add i32 %410, %408
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %407, i64 %412
  %414 = load i8*, i8** %396, align 8
  %415 = load i32, i32* %397, align 4
  %416 = load i32, i32* %398, align 8
  %417 = mul i32 %416, %406
  %418 = add i32 %417, %415
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %414, i64 %419
  %421 = icmp eq i32 %405, 0
  br i1 %421, label %424, label %429

422:                                              ; preds = %429
  %423 = load i32, i32* %376, align 4
  br label %424

424:                                              ; preds = %422, %403
  %425 = phi i32 [ %423, %422 ], [ %404, %403 ]
  %426 = phi i32 [ %443, %422 ], [ 0, %403 ]
  %427 = add nuw i32 %406, 1
  %428 = icmp ult i32 %427, %425
  br i1 %428, label %403, label %1324

429:                                              ; preds = %403, %429
  %430 = phi i32 [ %442, %429 ], [ 0, %403 ]
  %431 = load i32, i32* %400, align 8
  %432 = mul i32 %431, %430
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds i8, i8* %413, i64 %433
  %435 = bitcast i8* %434 to i16*
  %436 = load i16, i16* %435, align 2
  %437 = load i32, i32* %401, align 8
  %438 = mul i32 %437, %430
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds i8, i8* %420, i64 %439
  %441 = bitcast i8* %440 to i16*
  store i16 %436, i16* %441, align 2
  %442 = add nuw i32 %430, 1
  %443 = load i32, i32* %399, align 8
  %444 = icmp ult i32 %442, %443
  br i1 %444, label %429, label %422

445:                                              ; preds = %380, %466
  %446 = phi i32 [ %377, %380 ], [ %467, %466 ]
  %447 = phi i32 [ %390, %380 ], [ %468, %466 ]
  %448 = phi i32 [ 0, %380 ], [ %469, %466 ]
  %449 = load i8*, i8** %381, align 8
  %450 = load i32, i32* %382, align 4
  %451 = load i32, i32* %383, align 8
  %452 = mul i32 %451, %448
  %453 = add i32 %452, %450
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds i8, i8* %449, i64 %454
  %456 = load i8*, i8** %384, align 8
  %457 = load i32, i32* %385, align 4
  %458 = load i32, i32* %386, align 8
  %459 = mul i32 %458, %448
  %460 = add i32 %459, %457
  %461 = zext i32 %460 to i64
  %462 = getelementptr inbounds i8, i8* %456, i64 %461
  %463 = icmp eq i32 %447, 0
  br i1 %463, label %466, label %471

464:                                              ; preds = %471
  %465 = load i32, i32* %376, align 4
  br label %466

466:                                              ; preds = %464, %445
  %467 = phi i32 [ %465, %464 ], [ %446, %445 ]
  %468 = phi i32 [ %483, %464 ], [ 0, %445 ]
  %469 = add nuw i32 %448, 1
  %470 = icmp ult i32 %469, %467
  br i1 %470, label %445, label %1324

471:                                              ; preds = %445, %471
  %472 = phi i32 [ %482, %471 ], [ 0, %445 ]
  %473 = load i32, i32* %388, align 8
  %474 = mul i32 %473, %472
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds i8, i8* %455, i64 %475
  %477 = load i8, i8* %476, align 1
  %478 = load i32, i32* %389, align 8
  %479 = mul i32 %478, %472
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds i8, i8* %462, i64 %480
  store i8 %477, i8* %481, align 1
  %482 = add nuw i32 %472, 1
  %483 = load i32, i32* %387, align 8
  %484 = icmp ult i32 %482, %483
  br i1 %484, label %471, label %464

485:                                              ; preds = %1
  br i1 %15, label %486, label %689

486:                                              ; preds = %485
  %487 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 9
  %488 = load i32, i32* %487, align 8
  switch i32 %488, label %1324 [
    i32 1, label %489
    i32 0, label %903
  ]

489:                                              ; preds = %486
  %490 = icmp ugt i32 %3, 8
  br i1 %490, label %506, label %491

491:                                              ; preds = %489
  %492 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %493 = load i32, i32* %492, align 4
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %1324, label %495

495:                                              ; preds = %491
  %496 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %497 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %498 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %499 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %500 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %501 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %502 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %503 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %504 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %505 = load i32, i32* %502, align 8
  br label %638

506:                                              ; preds = %489
  %507 = icmp ugt i32 %7, 8
  %508 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %509 = load i32, i32* %508, align 4
  %510 = icmp ne i32 %509, 0
  br i1 %507, label %523, label %511

511:                                              ; preds = %506
  br i1 %510, label %512, label %1324

512:                                              ; preds = %511
  %513 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %514 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %515 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %516 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %517 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %518 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %519 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %520 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %521 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %522 = load i32, i32* %519, align 8
  br label %587

523:                                              ; preds = %506
  br i1 %510, label %524, label %1324

524:                                              ; preds = %523
  %525 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %526 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %527 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %528 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %529 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %530 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %531 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %532 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %533 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %534 = load i32, i32* %531, align 8
  br label %535

535:                                              ; preds = %524, %556
  %536 = phi i32 [ %509, %524 ], [ %557, %556 ]
  %537 = phi i32 [ %534, %524 ], [ %558, %556 ]
  %538 = phi i32 [ 0, %524 ], [ %559, %556 ]
  %539 = load i8*, i8** %525, align 8
  %540 = load i32, i32* %526, align 4
  %541 = load i32, i32* %527, align 8
  %542 = mul i32 %541, %538
  %543 = add i32 %542, %540
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds i8, i8* %539, i64 %544
  %546 = load i8*, i8** %528, align 8
  %547 = load i32, i32* %529, align 4
  %548 = load i32, i32* %530, align 8
  %549 = mul i32 %548, %538
  %550 = add i32 %549, %547
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds i8, i8* %546, i64 %551
  %553 = icmp eq i32 %537, 0
  br i1 %553, label %556, label %561

554:                                              ; preds = %561
  %555 = load i32, i32* %508, align 4
  br label %556

556:                                              ; preds = %554, %535
  %557 = phi i32 [ %555, %554 ], [ %536, %535 ]
  %558 = phi i32 [ %585, %554 ], [ 0, %535 ]
  %559 = add nuw i32 %538, 1
  %560 = icmp ult i32 %559, %557
  br i1 %560, label %535, label %1324

561:                                              ; preds = %535, %561
  %562 = phi i32 [ %584, %561 ], [ 0, %535 ]
  %563 = load i32, i32* %532, align 8
  %564 = mul i32 %563, %562
  %565 = zext i32 %564 to i64
  %566 = getelementptr inbounds i8, i8* %545, i64 %565
  %567 = bitcast i8* %566 to i16*
  %568 = load i16, i16* %567, align 2
  %569 = uitofp i16 %568 to float
  %570 = fdiv float %569, %10
  %571 = fmul float %570, %11
  %572 = fadd float %571, 5.000000e-01
  %573 = fptosi float %572 to i32
  %574 = icmp slt i32 %573, 0
  %575 = icmp slt i32 %9, %573
  %576 = select i1 %575, i32 %9, i32 %573
  %577 = select i1 %574, i32 0, i32 %576
  %578 = trunc i32 %577 to i16
  %579 = load i32, i32* %533, align 8
  %580 = mul i32 %579, %562
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds i8, i8* %552, i64 %581
  %583 = bitcast i8* %582 to i16*
  store i16 %578, i16* %583, align 2
  %584 = add nuw i32 %562, 1
  %585 = load i32, i32* %531, align 8
  %586 = icmp ult i32 %584, %585
  br i1 %586, label %561, label %554

587:                                              ; preds = %512, %608
  %588 = phi i32 [ %509, %512 ], [ %609, %608 ]
  %589 = phi i32 [ %522, %512 ], [ %610, %608 ]
  %590 = phi i32 [ 0, %512 ], [ %611, %608 ]
  %591 = load i8*, i8** %513, align 8
  %592 = load i32, i32* %514, align 4
  %593 = load i32, i32* %515, align 8
  %594 = mul i32 %593, %590
  %595 = add i32 %594, %592
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds i8, i8* %591, i64 %596
  %598 = load i8*, i8** %516, align 8
  %599 = load i32, i32* %517, align 4
  %600 = load i32, i32* %518, align 8
  %601 = mul i32 %600, %590
  %602 = add i32 %601, %599
  %603 = zext i32 %602 to i64
  %604 = getelementptr inbounds i8, i8* %598, i64 %603
  %605 = icmp eq i32 %589, 0
  br i1 %605, label %608, label %613

606:                                              ; preds = %613
  %607 = load i32, i32* %508, align 4
  br label %608

608:                                              ; preds = %606, %587
  %609 = phi i32 [ %607, %606 ], [ %588, %587 ]
  %610 = phi i32 [ %636, %606 ], [ 0, %587 ]
  %611 = add nuw i32 %590, 1
  %612 = icmp ult i32 %611, %609
  br i1 %612, label %587, label %1324

613:                                              ; preds = %587, %613
  %614 = phi i32 [ %635, %613 ], [ 0, %587 ]
  %615 = load i32, i32* %520, align 8
  %616 = mul i32 %615, %614
  %617 = zext i32 %616 to i64
  %618 = getelementptr inbounds i8, i8* %597, i64 %617
  %619 = bitcast i8* %618 to i16*
  %620 = load i16, i16* %619, align 2
  %621 = uitofp i16 %620 to float
  %622 = fdiv float %621, %10
  %623 = fmul float %622, %11
  %624 = fadd float %623, 5.000000e-01
  %625 = fptosi float %624 to i32
  %626 = icmp slt i32 %625, 0
  %627 = icmp slt i32 %9, %625
  %628 = select i1 %627, i32 %9, i32 %625
  %629 = select i1 %626, i32 0, i32 %628
  %630 = trunc i32 %629 to i8
  %631 = load i32, i32* %521, align 8
  %632 = mul i32 %631, %614
  %633 = zext i32 %632 to i64
  %634 = getelementptr inbounds i8, i8* %604, i64 %633
  store i8 %630, i8* %634, align 1
  %635 = add nuw i32 %614, 1
  %636 = load i32, i32* %519, align 8
  %637 = icmp ult i32 %635, %636
  br i1 %637, label %613, label %606

638:                                              ; preds = %495, %659
  %639 = phi i32 [ %493, %495 ], [ %660, %659 ]
  %640 = phi i32 [ %505, %495 ], [ %661, %659 ]
  %641 = phi i32 [ 0, %495 ], [ %662, %659 ]
  %642 = load i8*, i8** %496, align 8
  %643 = load i32, i32* %497, align 4
  %644 = load i32, i32* %498, align 8
  %645 = mul i32 %644, %641
  %646 = add i32 %645, %643
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds i8, i8* %642, i64 %647
  %649 = load i8*, i8** %499, align 8
  %650 = load i32, i32* %500, align 4
  %651 = load i32, i32* %501, align 8
  %652 = mul i32 %651, %641
  %653 = add i32 %652, %650
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds i8, i8* %649, i64 %654
  %656 = icmp eq i32 %640, 0
  br i1 %656, label %659, label %664

657:                                              ; preds = %664
  %658 = load i32, i32* %492, align 4
  br label %659

659:                                              ; preds = %657, %638
  %660 = phi i32 [ %658, %657 ], [ %639, %638 ]
  %661 = phi i32 [ %687, %657 ], [ 0, %638 ]
  %662 = add nuw i32 %641, 1
  %663 = icmp ult i32 %662, %660
  br i1 %663, label %638, label %1324

664:                                              ; preds = %638, %664
  %665 = phi i32 [ %686, %664 ], [ 0, %638 ]
  %666 = load i32, i32* %503, align 8
  %667 = mul i32 %666, %665
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds i8, i8* %648, i64 %668
  %670 = load i8, i8* %669, align 1
  %671 = uitofp i8 %670 to float
  %672 = fdiv float %671, %10
  %673 = fmul float %672, %11
  %674 = fadd float %673, 5.000000e-01
  %675 = fptosi float %674 to i32
  %676 = icmp slt i32 %675, 0
  %677 = icmp slt i32 %9, %675
  %678 = select i1 %677, i32 %9, i32 %675
  %679 = select i1 %676, i32 0, i32 %678
  %680 = trunc i32 %679 to i16
  %681 = load i32, i32* %504, align 8
  %682 = mul i32 %681, %665
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds i8, i8* %655, i64 %683
  %685 = bitcast i8* %684 to i16*
  store i16 %680, i16* %685, align 2
  %686 = add nuw i32 %665, 1
  %687 = load i32, i32* %502, align 8
  %688 = icmp ult i32 %686, %687
  br i1 %688, label %664, label %657

689:                                              ; preds = %485
  %690 = icmp eq i32 %14, 0
  br i1 %690, label %691, label %1324

691:                                              ; preds = %689
  %692 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 9
  %693 = load i32, i32* %692, align 8
  switch i32 %693, label %1324 [
    i32 1, label %694
    i32 0, label %1109
  ]

694:                                              ; preds = %691
  %695 = icmp ugt i32 %3, 8
  br i1 %695, label %711, label %696

696:                                              ; preds = %694
  %697 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %698 = load i32, i32* %697, align 4
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %1324, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %702 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %703 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %704 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %705 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %706 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %707 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %708 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %709 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %710 = load i32, i32* %707, align 8
  br label %849

711:                                              ; preds = %694
  %712 = icmp ugt i32 %7, 8
  %713 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %714 = load i32, i32* %713, align 4
  %715 = icmp ne i32 %714, 0
  br i1 %712, label %728, label %716

716:                                              ; preds = %711
  br i1 %715, label %717, label %1324

717:                                              ; preds = %716
  %718 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %719 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %720 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %721 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %722 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %723 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %724 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %725 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %726 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %727 = load i32, i32* %724, align 8
  br label %795

728:                                              ; preds = %711
  br i1 %715, label %729, label %1324

729:                                              ; preds = %728
  %730 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %731 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %732 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %733 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %734 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %735 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %736 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %737 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %738 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %739 = load i32, i32* %736, align 8
  br label %740

740:                                              ; preds = %729, %761
  %741 = phi i32 [ %714, %729 ], [ %762, %761 ]
  %742 = phi i32 [ %739, %729 ], [ %763, %761 ]
  %743 = phi i32 [ 0, %729 ], [ %764, %761 ]
  %744 = load i8*, i8** %730, align 8
  %745 = load i32, i32* %731, align 4
  %746 = load i32, i32* %732, align 8
  %747 = mul i32 %746, %743
  %748 = add i32 %747, %745
  %749 = zext i32 %748 to i64
  %750 = getelementptr inbounds i8, i8* %744, i64 %749
  %751 = load i8*, i8** %733, align 8
  %752 = load i32, i32* %734, align 4
  %753 = load i32, i32* %735, align 8
  %754 = mul i32 %753, %743
  %755 = add i32 %754, %752
  %756 = zext i32 %755 to i64
  %757 = getelementptr inbounds i8, i8* %751, i64 %756
  %758 = icmp eq i32 %742, 0
  br i1 %758, label %761, label %766

759:                                              ; preds = %766
  %760 = load i32, i32* %713, align 4
  br label %761

761:                                              ; preds = %759, %740
  %762 = phi i32 [ %760, %759 ], [ %741, %740 ]
  %763 = phi i32 [ %793, %759 ], [ 0, %740 ]
  %764 = add nuw i32 %743, 1
  %765 = icmp ult i32 %764, %762
  br i1 %765, label %740, label %1324

766:                                              ; preds = %740, %766
  %767 = phi i32 [ %792, %766 ], [ 0, %740 ]
  %768 = load i32, i32* %737, align 8
  %769 = mul i32 %768, %767
  %770 = zext i32 %769 to i64
  %771 = getelementptr inbounds i8, i8* %750, i64 %770
  %772 = bitcast i8* %771 to i16*
  %773 = load i16, i16* %772, align 2
  %774 = zext i16 %773 to i32
  %775 = load i32, i32* %2, align 8
  %776 = tail call i32 @avifLimitedToFullY(i32 %775, i32 %774) #2
  %777 = sitofp i32 %776 to float
  %778 = fdiv float %777, %10
  %779 = fmul float %778, %11
  %780 = fadd float %779, 5.000000e-01
  %781 = fptosi float %780 to i32
  %782 = icmp slt i32 %781, 0
  %783 = icmp slt i32 %9, %781
  %784 = select i1 %783, i32 %9, i32 %781
  %785 = select i1 %782, i32 0, i32 %784
  %786 = trunc i32 %785 to i16
  %787 = load i32, i32* %738, align 8
  %788 = mul i32 %787, %767
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds i8, i8* %757, i64 %789
  %791 = bitcast i8* %790 to i16*
  store i16 %786, i16* %791, align 2
  %792 = add nuw i32 %767, 1
  %793 = load i32, i32* %736, align 8
  %794 = icmp ult i32 %792, %793
  br i1 %794, label %766, label %759

795:                                              ; preds = %717, %816
  %796 = phi i32 [ %714, %717 ], [ %817, %816 ]
  %797 = phi i32 [ %727, %717 ], [ %818, %816 ]
  %798 = phi i32 [ 0, %717 ], [ %819, %816 ]
  %799 = load i8*, i8** %718, align 8
  %800 = load i32, i32* %719, align 4
  %801 = load i32, i32* %720, align 8
  %802 = mul i32 %801, %798
  %803 = add i32 %802, %800
  %804 = zext i32 %803 to i64
  %805 = getelementptr inbounds i8, i8* %799, i64 %804
  %806 = load i8*, i8** %721, align 8
  %807 = load i32, i32* %722, align 4
  %808 = load i32, i32* %723, align 8
  %809 = mul i32 %808, %798
  %810 = add i32 %809, %807
  %811 = zext i32 %810 to i64
  %812 = getelementptr inbounds i8, i8* %806, i64 %811
  %813 = icmp eq i32 %797, 0
  br i1 %813, label %816, label %821

814:                                              ; preds = %821
  %815 = load i32, i32* %713, align 4
  br label %816

816:                                              ; preds = %814, %795
  %817 = phi i32 [ %815, %814 ], [ %796, %795 ]
  %818 = phi i32 [ %847, %814 ], [ 0, %795 ]
  %819 = add nuw i32 %798, 1
  %820 = icmp ult i32 %819, %817
  br i1 %820, label %795, label %1324

821:                                              ; preds = %795, %821
  %822 = phi i32 [ %846, %821 ], [ 0, %795 ]
  %823 = load i32, i32* %725, align 8
  %824 = mul i32 %823, %822
  %825 = zext i32 %824 to i64
  %826 = getelementptr inbounds i8, i8* %805, i64 %825
  %827 = bitcast i8* %826 to i16*
  %828 = load i16, i16* %827, align 2
  %829 = zext i16 %828 to i32
  %830 = load i32, i32* %2, align 8
  %831 = tail call i32 @avifLimitedToFullY(i32 %830, i32 %829) #2
  %832 = sitofp i32 %831 to float
  %833 = fdiv float %832, %10
  %834 = fmul float %833, %11
  %835 = fadd float %834, 5.000000e-01
  %836 = fptosi float %835 to i32
  %837 = icmp slt i32 %836, 0
  %838 = icmp slt i32 %9, %836
  %839 = select i1 %838, i32 %9, i32 %836
  %840 = select i1 %837, i32 0, i32 %839
  %841 = trunc i32 %840 to i8
  %842 = load i32, i32* %726, align 8
  %843 = mul i32 %842, %822
  %844 = zext i32 %843 to i64
  %845 = getelementptr inbounds i8, i8* %812, i64 %844
  store i8 %841, i8* %845, align 1
  %846 = add nuw i32 %822, 1
  %847 = load i32, i32* %724, align 8
  %848 = icmp ult i32 %846, %847
  br i1 %848, label %821, label %814

849:                                              ; preds = %700, %870
  %850 = phi i32 [ %698, %700 ], [ %871, %870 ]
  %851 = phi i32 [ %710, %700 ], [ %872, %870 ]
  %852 = phi i32 [ 0, %700 ], [ %873, %870 ]
  %853 = load i8*, i8** %701, align 8
  %854 = load i32, i32* %702, align 4
  %855 = load i32, i32* %703, align 8
  %856 = mul i32 %855, %852
  %857 = add i32 %856, %854
  %858 = zext i32 %857 to i64
  %859 = getelementptr inbounds i8, i8* %853, i64 %858
  %860 = load i8*, i8** %704, align 8
  %861 = load i32, i32* %705, align 4
  %862 = load i32, i32* %706, align 8
  %863 = mul i32 %862, %852
  %864 = add i32 %863, %861
  %865 = zext i32 %864 to i64
  %866 = getelementptr inbounds i8, i8* %860, i64 %865
  %867 = icmp eq i32 %851, 0
  br i1 %867, label %870, label %875

868:                                              ; preds = %875
  %869 = load i32, i32* %697, align 4
  br label %870

870:                                              ; preds = %868, %849
  %871 = phi i32 [ %869, %868 ], [ %850, %849 ]
  %872 = phi i32 [ %901, %868 ], [ 0, %849 ]
  %873 = add nuw i32 %852, 1
  %874 = icmp ult i32 %873, %871
  br i1 %874, label %849, label %1324

875:                                              ; preds = %849, %875
  %876 = phi i32 [ %900, %875 ], [ 0, %849 ]
  %877 = load i32, i32* %708, align 8
  %878 = mul i32 %877, %876
  %879 = zext i32 %878 to i64
  %880 = getelementptr inbounds i8, i8* %859, i64 %879
  %881 = load i8, i8* %880, align 1
  %882 = zext i8 %881 to i32
  %883 = load i32, i32* %2, align 8
  %884 = tail call i32 @avifLimitedToFullY(i32 %883, i32 %882) #2
  %885 = sitofp i32 %884 to float
  %886 = fdiv float %885, %10
  %887 = fmul float %886, %11
  %888 = fadd float %887, 5.000000e-01
  %889 = fptosi float %888 to i32
  %890 = icmp slt i32 %889, 0
  %891 = icmp slt i32 %9, %889
  %892 = select i1 %891, i32 %9, i32 %889
  %893 = select i1 %890, i32 0, i32 %892
  %894 = trunc i32 %893 to i16
  %895 = load i32, i32* %709, align 8
  %896 = mul i32 %895, %876
  %897 = zext i32 %896 to i64
  %898 = getelementptr inbounds i8, i8* %866, i64 %897
  %899 = bitcast i8* %898 to i16*
  store i16 %894, i16* %899, align 2
  %900 = add nuw i32 %876, 1
  %901 = load i32, i32* %707, align 8
  %902 = icmp ult i32 %900, %901
  br i1 %902, label %875, label %868

903:                                              ; preds = %486
  %904 = icmp ugt i32 %3, 8
  br i1 %904, label %920, label %905

905:                                              ; preds = %903
  %906 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %907 = load i32, i32* %906, align 4
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %1324, label %909

909:                                              ; preds = %905
  %910 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %911 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %912 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %913 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %914 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %915 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %916 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %917 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %918 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %919 = load i32, i32* %916, align 8
  br label %1056

920:                                              ; preds = %903
  %921 = icmp ugt i32 %7, 8
  %922 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %923 = load i32, i32* %922, align 4
  %924 = icmp ne i32 %923, 0
  br i1 %921, label %937, label %925

925:                                              ; preds = %920
  br i1 %924, label %926, label %1324

926:                                              ; preds = %925
  %927 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %928 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %929 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %930 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %931 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %932 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %933 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %934 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %935 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %936 = load i32, i32* %933, align 8
  br label %1003

937:                                              ; preds = %920
  br i1 %924, label %938, label %1324

938:                                              ; preds = %937
  %939 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %940 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %941 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %942 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %943 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %944 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %945 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %946 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %947 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %948 = load i32, i32* %945, align 8
  br label %949

949:                                              ; preds = %938, %970
  %950 = phi i32 [ %923, %938 ], [ %971, %970 ]
  %951 = phi i32 [ %948, %938 ], [ %972, %970 ]
  %952 = phi i32 [ 0, %938 ], [ %973, %970 ]
  %953 = load i8*, i8** %939, align 8
  %954 = load i32, i32* %940, align 4
  %955 = load i32, i32* %941, align 8
  %956 = mul i32 %955, %952
  %957 = add i32 %956, %954
  %958 = zext i32 %957 to i64
  %959 = getelementptr inbounds i8, i8* %953, i64 %958
  %960 = load i8*, i8** %942, align 8
  %961 = load i32, i32* %943, align 4
  %962 = load i32, i32* %944, align 8
  %963 = mul i32 %962, %952
  %964 = add i32 %963, %961
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds i8, i8* %960, i64 %965
  %967 = icmp eq i32 %951, 0
  br i1 %967, label %970, label %975

968:                                              ; preds = %975
  %969 = load i32, i32* %922, align 4
  br label %970

970:                                              ; preds = %968, %949
  %971 = phi i32 [ %969, %968 ], [ %950, %949 ]
  %972 = phi i32 [ %1001, %968 ], [ 0, %949 ]
  %973 = add nuw i32 %952, 1
  %974 = icmp ult i32 %973, %971
  br i1 %974, label %949, label %1324

975:                                              ; preds = %949, %975
  %976 = phi i32 [ %1000, %975 ], [ 0, %949 ]
  %977 = load i32, i32* %946, align 8
  %978 = mul i32 %977, %976
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds i8, i8* %959, i64 %979
  %981 = bitcast i8* %980 to i16*
  %982 = load i16, i16* %981, align 2
  %983 = uitofp i16 %982 to float
  %984 = fdiv float %983, %10
  %985 = fmul float %984, %11
  %986 = fadd float %985, 5.000000e-01
  %987 = fptosi float %986 to i32
  %988 = icmp slt i32 %987, 0
  %989 = icmp slt i32 %9, %987
  %990 = select i1 %989, i32 %9, i32 %987
  %991 = select i1 %988, i32 0, i32 %990
  %992 = load i32, i32* %6, align 4
  %993 = tail call i32 @avifFullToLimitedY(i32 %992, i32 %991) #2
  %994 = trunc i32 %993 to i16
  %995 = load i32, i32* %947, align 8
  %996 = mul i32 %995, %976
  %997 = zext i32 %996 to i64
  %998 = getelementptr inbounds i8, i8* %966, i64 %997
  %999 = bitcast i8* %998 to i16*
  store i16 %994, i16* %999, align 2
  %1000 = add nuw i32 %976, 1
  %1001 = load i32, i32* %945, align 8
  %1002 = icmp ult i32 %1000, %1001
  br i1 %1002, label %975, label %968

1003:                                             ; preds = %926, %1024
  %1004 = phi i32 [ %923, %926 ], [ %1025, %1024 ]
  %1005 = phi i32 [ %936, %926 ], [ %1026, %1024 ]
  %1006 = phi i32 [ 0, %926 ], [ %1027, %1024 ]
  %1007 = load i8*, i8** %927, align 8
  %1008 = load i32, i32* %928, align 4
  %1009 = load i32, i32* %929, align 8
  %1010 = mul i32 %1009, %1006
  %1011 = add i32 %1010, %1008
  %1012 = zext i32 %1011 to i64
  %1013 = getelementptr inbounds i8, i8* %1007, i64 %1012
  %1014 = load i8*, i8** %930, align 8
  %1015 = load i32, i32* %931, align 4
  %1016 = load i32, i32* %932, align 8
  %1017 = mul i32 %1016, %1006
  %1018 = add i32 %1017, %1015
  %1019 = zext i32 %1018 to i64
  %1020 = getelementptr inbounds i8, i8* %1014, i64 %1019
  %1021 = icmp eq i32 %1005, 0
  br i1 %1021, label %1024, label %1029

1022:                                             ; preds = %1029
  %1023 = load i32, i32* %922, align 4
  br label %1024

1024:                                             ; preds = %1022, %1003
  %1025 = phi i32 [ %1023, %1022 ], [ %1004, %1003 ]
  %1026 = phi i32 [ %1054, %1022 ], [ 0, %1003 ]
  %1027 = add nuw i32 %1006, 1
  %1028 = icmp ult i32 %1027, %1025
  br i1 %1028, label %1003, label %1324

1029:                                             ; preds = %1003, %1029
  %1030 = phi i32 [ %1053, %1029 ], [ 0, %1003 ]
  %1031 = load i32, i32* %934, align 8
  %1032 = mul i32 %1031, %1030
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds i8, i8* %1013, i64 %1033
  %1035 = bitcast i8* %1034 to i16*
  %1036 = load i16, i16* %1035, align 2
  %1037 = uitofp i16 %1036 to float
  %1038 = fdiv float %1037, %10
  %1039 = fmul float %1038, %11
  %1040 = fadd float %1039, 5.000000e-01
  %1041 = fptosi float %1040 to i32
  %1042 = icmp slt i32 %1041, 0
  %1043 = icmp slt i32 %9, %1041
  %1044 = select i1 %1043, i32 %9, i32 %1041
  %1045 = select i1 %1042, i32 0, i32 %1044
  %1046 = load i32, i32* %6, align 4
  %1047 = tail call i32 @avifFullToLimitedY(i32 %1046, i32 %1045) #2
  %1048 = trunc i32 %1047 to i8
  %1049 = load i32, i32* %935, align 8
  %1050 = mul i32 %1049, %1030
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds i8, i8* %1020, i64 %1051
  store i8 %1048, i8* %1052, align 1
  %1053 = add nuw i32 %1030, 1
  %1054 = load i32, i32* %933, align 8
  %1055 = icmp ult i32 %1053, %1054
  br i1 %1055, label %1029, label %1022

1056:                                             ; preds = %909, %1077
  %1057 = phi i32 [ %907, %909 ], [ %1078, %1077 ]
  %1058 = phi i32 [ %919, %909 ], [ %1079, %1077 ]
  %1059 = phi i32 [ 0, %909 ], [ %1080, %1077 ]
  %1060 = load i8*, i8** %910, align 8
  %1061 = load i32, i32* %911, align 4
  %1062 = load i32, i32* %912, align 8
  %1063 = mul i32 %1062, %1059
  %1064 = add i32 %1063, %1061
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds i8, i8* %1060, i64 %1065
  %1067 = load i8*, i8** %913, align 8
  %1068 = load i32, i32* %914, align 4
  %1069 = load i32, i32* %915, align 8
  %1070 = mul i32 %1069, %1059
  %1071 = add i32 %1070, %1068
  %1072 = zext i32 %1071 to i64
  %1073 = getelementptr inbounds i8, i8* %1067, i64 %1072
  %1074 = icmp eq i32 %1058, 0
  br i1 %1074, label %1077, label %1082

1075:                                             ; preds = %1082
  %1076 = load i32, i32* %906, align 4
  br label %1077

1077:                                             ; preds = %1075, %1056
  %1078 = phi i32 [ %1076, %1075 ], [ %1057, %1056 ]
  %1079 = phi i32 [ %1107, %1075 ], [ 0, %1056 ]
  %1080 = add nuw i32 %1059, 1
  %1081 = icmp ult i32 %1080, %1078
  br i1 %1081, label %1056, label %1324

1082:                                             ; preds = %1056, %1082
  %1083 = phi i32 [ %1106, %1082 ], [ 0, %1056 ]
  %1084 = load i32, i32* %917, align 8
  %1085 = mul i32 %1084, %1083
  %1086 = zext i32 %1085 to i64
  %1087 = getelementptr inbounds i8, i8* %1066, i64 %1086
  %1088 = load i8, i8* %1087, align 1
  %1089 = uitofp i8 %1088 to float
  %1090 = fdiv float %1089, %10
  %1091 = fmul float %1090, %11
  %1092 = fadd float %1091, 5.000000e-01
  %1093 = fptosi float %1092 to i32
  %1094 = icmp slt i32 %1093, 0
  %1095 = icmp slt i32 %9, %1093
  %1096 = select i1 %1095, i32 %9, i32 %1093
  %1097 = select i1 %1094, i32 0, i32 %1096
  %1098 = load i32, i32* %6, align 4
  %1099 = tail call i32 @avifFullToLimitedY(i32 %1098, i32 %1097) #2
  %1100 = trunc i32 %1099 to i16
  %1101 = load i32, i32* %918, align 8
  %1102 = mul i32 %1101, %1083
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds i8, i8* %1073, i64 %1103
  %1105 = bitcast i8* %1104 to i16*
  store i16 %1100, i16* %1105, align 2
  %1106 = add nuw i32 %1083, 1
  %1107 = load i32, i32* %916, align 8
  %1108 = icmp ult i32 %1106, %1107
  br i1 %1108, label %1082, label %1075

1109:                                             ; preds = %691
  %1110 = icmp ugt i32 %3, 8
  br i1 %1110, label %1126, label %1111

1111:                                             ; preds = %1109
  %1112 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %1113 = load i32, i32* %1112, align 4
  %1114 = icmp eq i32 %1113, 0
  br i1 %1114, label %1324, label %1115

1115:                                             ; preds = %1111
  %1116 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %1117 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %1118 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %1119 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %1120 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %1121 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %1122 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %1123 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %1124 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %1125 = load i32, i32* %1122, align 8
  br label %1268

1126:                                             ; preds = %1109
  %1127 = icmp ugt i32 %7, 8
  %1128 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 1
  %1129 = load i32, i32* %1128, align 4
  %1130 = icmp ne i32 %1129, 0
  br i1 %1127, label %1143, label %1131

1131:                                             ; preds = %1126
  br i1 %1130, label %1132, label %1324

1132:                                             ; preds = %1131
  %1133 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %1134 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %1135 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %1136 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %1137 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %1138 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %1139 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %1140 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %1141 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %1142 = load i32, i32* %1139, align 8
  br label %1212

1143:                                             ; preds = %1126
  br i1 %1130, label %1144, label %1324

1144:                                             ; preds = %1143
  %1145 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 4
  %1146 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 6
  %1147 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 5
  %1148 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 10
  %1149 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 12
  %1150 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 11
  %1151 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 0
  %1152 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 7
  %1153 = getelementptr inbounds %struct.avifAlphaParams, %struct.avifAlphaParams* %0, i64 0, i32 13
  %1154 = load i32, i32* %1151, align 8
  br label %1155

1155:                                             ; preds = %1144, %1176
  %1156 = phi i32 [ %1129, %1144 ], [ %1177, %1176 ]
  %1157 = phi i32 [ %1154, %1144 ], [ %1178, %1176 ]
  %1158 = phi i32 [ 0, %1144 ], [ %1179, %1176 ]
  %1159 = load i8*, i8** %1145, align 8
  %1160 = load i32, i32* %1146, align 4
  %1161 = load i32, i32* %1147, align 8
  %1162 = mul i32 %1161, %1158
  %1163 = add i32 %1162, %1160
  %1164 = zext i32 %1163 to i64
  %1165 = getelementptr inbounds i8, i8* %1159, i64 %1164
  %1166 = load i8*, i8** %1148, align 8
  %1167 = load i32, i32* %1149, align 4
  %1168 = load i32, i32* %1150, align 8
  %1169 = mul i32 %1168, %1158
  %1170 = add i32 %1169, %1167
  %1171 = zext i32 %1170 to i64
  %1172 = getelementptr inbounds i8, i8* %1166, i64 %1171
  %1173 = icmp eq i32 %1157, 0
  br i1 %1173, label %1176, label %1181

1174:                                             ; preds = %1181
  %1175 = load i32, i32* %1128, align 4
  br label %1176

1176:                                             ; preds = %1174, %1155
  %1177 = phi i32 [ %1175, %1174 ], [ %1156, %1155 ]
  %1178 = phi i32 [ %1210, %1174 ], [ 0, %1155 ]
  %1179 = add nuw i32 %1158, 1
  %1180 = icmp ult i32 %1179, %1177
  br i1 %1180, label %1155, label %1324

1181:                                             ; preds = %1155, %1181
  %1182 = phi i32 [ %1209, %1181 ], [ 0, %1155 ]
  %1183 = load i32, i32* %1152, align 8
  %1184 = mul i32 %1183, %1182
  %1185 = zext i32 %1184 to i64
  %1186 = getelementptr inbounds i8, i8* %1165, i64 %1185
  %1187 = bitcast i8* %1186 to i16*
  %1188 = load i16, i16* %1187, align 2
  %1189 = zext i16 %1188 to i32
  %1190 = load i32, i32* %2, align 8
  %1191 = tail call i32 @avifLimitedToFullY(i32 %1190, i32 %1189) #2
  %1192 = sitofp i32 %1191 to float
  %1193 = fdiv float %1192, %10
  %1194 = fmul float %1193, %11
  %1195 = fadd float %1194, 5.000000e-01
  %1196 = fptosi float %1195 to i32
  %1197 = icmp slt i32 %1196, 0
  %1198 = icmp slt i32 %9, %1196
  %1199 = select i1 %1198, i32 %9, i32 %1196
  %1200 = select i1 %1197, i32 0, i32 %1199
  %1201 = load i32, i32* %6, align 4
  %1202 = tail call i32 @avifFullToLimitedY(i32 %1201, i32 %1200) #2
  %1203 = trunc i32 %1202 to i16
  %1204 = load i32, i32* %1153, align 8
  %1205 = mul i32 %1204, %1182
  %1206 = zext i32 %1205 to i64
  %1207 = getelementptr inbounds i8, i8* %1172, i64 %1206
  %1208 = bitcast i8* %1207 to i16*
  store i16 %1203, i16* %1208, align 2
  %1209 = add nuw i32 %1182, 1
  %1210 = load i32, i32* %1151, align 8
  %1211 = icmp ult i32 %1209, %1210
  br i1 %1211, label %1181, label %1174

1212:                                             ; preds = %1132, %1233
  %1213 = phi i32 [ %1129, %1132 ], [ %1234, %1233 ]
  %1214 = phi i32 [ %1142, %1132 ], [ %1235, %1233 ]
  %1215 = phi i32 [ 0, %1132 ], [ %1236, %1233 ]
  %1216 = load i8*, i8** %1133, align 8
  %1217 = load i32, i32* %1134, align 4
  %1218 = load i32, i32* %1135, align 8
  %1219 = mul i32 %1218, %1215
  %1220 = add i32 %1219, %1217
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds i8, i8* %1216, i64 %1221
  %1223 = load i8*, i8** %1136, align 8
  %1224 = load i32, i32* %1137, align 4
  %1225 = load i32, i32* %1138, align 8
  %1226 = mul i32 %1225, %1215
  %1227 = add i32 %1226, %1224
  %1228 = zext i32 %1227 to i64
  %1229 = getelementptr inbounds i8, i8* %1223, i64 %1228
  %1230 = icmp eq i32 %1214, 0
  br i1 %1230, label %1233, label %1238

1231:                                             ; preds = %1238
  %1232 = load i32, i32* %1128, align 4
  br label %1233

1233:                                             ; preds = %1231, %1212
  %1234 = phi i32 [ %1232, %1231 ], [ %1213, %1212 ]
  %1235 = phi i32 [ %1266, %1231 ], [ 0, %1212 ]
  %1236 = add nuw i32 %1215, 1
  %1237 = icmp ult i32 %1236, %1234
  br i1 %1237, label %1212, label %1324

1238:                                             ; preds = %1212, %1238
  %1239 = phi i32 [ %1265, %1238 ], [ 0, %1212 ]
  %1240 = load i32, i32* %1140, align 8
  %1241 = mul i32 %1240, %1239
  %1242 = zext i32 %1241 to i64
  %1243 = getelementptr inbounds i8, i8* %1222, i64 %1242
  %1244 = bitcast i8* %1243 to i16*
  %1245 = load i16, i16* %1244, align 2
  %1246 = zext i16 %1245 to i32
  %1247 = load i32, i32* %2, align 8
  %1248 = tail call i32 @avifLimitedToFullY(i32 %1247, i32 %1246) #2
  %1249 = sitofp i32 %1248 to float
  %1250 = fdiv float %1249, %10
  %1251 = fmul float %1250, %11
  %1252 = fadd float %1251, 5.000000e-01
  %1253 = fptosi float %1252 to i32
  %1254 = icmp slt i32 %1253, 0
  %1255 = icmp slt i32 %9, %1253
  %1256 = select i1 %1255, i32 %9, i32 %1253
  %1257 = select i1 %1254, i32 0, i32 %1256
  %1258 = load i32, i32* %6, align 4
  %1259 = tail call i32 @avifFullToLimitedY(i32 %1258, i32 %1257) #2
  %1260 = trunc i32 %1259 to i8
  %1261 = load i32, i32* %1141, align 8
  %1262 = mul i32 %1261, %1239
  %1263 = zext i32 %1262 to i64
  %1264 = getelementptr inbounds i8, i8* %1229, i64 %1263
  store i8 %1260, i8* %1264, align 1
  %1265 = add nuw i32 %1239, 1
  %1266 = load i32, i32* %1139, align 8
  %1267 = icmp ult i32 %1265, %1266
  br i1 %1267, label %1238, label %1231

1268:                                             ; preds = %1115, %1289
  %1269 = phi i32 [ %1113, %1115 ], [ %1290, %1289 ]
  %1270 = phi i32 [ %1125, %1115 ], [ %1291, %1289 ]
  %1271 = phi i32 [ 0, %1115 ], [ %1292, %1289 ]
  %1272 = load i8*, i8** %1116, align 8
  %1273 = load i32, i32* %1117, align 4
  %1274 = load i32, i32* %1118, align 8
  %1275 = mul i32 %1274, %1271
  %1276 = add i32 %1275, %1273
  %1277 = zext i32 %1276 to i64
  %1278 = getelementptr inbounds i8, i8* %1272, i64 %1277
  %1279 = load i8*, i8** %1119, align 8
  %1280 = load i32, i32* %1120, align 4
  %1281 = load i32, i32* %1121, align 8
  %1282 = mul i32 %1281, %1271
  %1283 = add i32 %1282, %1280
  %1284 = zext i32 %1283 to i64
  %1285 = getelementptr inbounds i8, i8* %1279, i64 %1284
  %1286 = icmp eq i32 %1270, 0
  br i1 %1286, label %1289, label %1294

1287:                                             ; preds = %1294
  %1288 = load i32, i32* %1112, align 4
  br label %1289

1289:                                             ; preds = %1287, %1268
  %1290 = phi i32 [ %1288, %1287 ], [ %1269, %1268 ]
  %1291 = phi i32 [ %1322, %1287 ], [ 0, %1268 ]
  %1292 = add nuw i32 %1271, 1
  %1293 = icmp ult i32 %1292, %1290
  br i1 %1293, label %1268, label %1324

1294:                                             ; preds = %1268, %1294
  %1295 = phi i32 [ %1321, %1294 ], [ 0, %1268 ]
  %1296 = load i32, i32* %1123, align 8
  %1297 = mul i32 %1296, %1295
  %1298 = zext i32 %1297 to i64
  %1299 = getelementptr inbounds i8, i8* %1278, i64 %1298
  %1300 = load i8, i8* %1299, align 1
  %1301 = zext i8 %1300 to i32
  %1302 = load i32, i32* %2, align 8
  %1303 = tail call i32 @avifLimitedToFullY(i32 %1302, i32 %1301) #2
  %1304 = sitofp i32 %1303 to float
  %1305 = fdiv float %1304, %10
  %1306 = fmul float %1305, %11
  %1307 = fadd float %1306, 5.000000e-01
  %1308 = fptosi float %1307 to i32
  %1309 = icmp slt i32 %1308, 0
  %1310 = icmp slt i32 %9, %1308
  %1311 = select i1 %1310, i32 %9, i32 %1308
  %1312 = select i1 %1309, i32 0, i32 %1311
  %1313 = load i32, i32* %6, align 4
  %1314 = tail call i32 @avifFullToLimitedY(i32 %1313, i32 %1312) #2
  %1315 = trunc i32 %1314 to i16
  %1316 = load i32, i32* %1124, align 8
  %1317 = mul i32 %1316, %1295
  %1318 = zext i32 %1317 to i64
  %1319 = getelementptr inbounds i8, i8* %1285, i64 %1318
  %1320 = bitcast i8* %1319 to i16*
  store i16 %1315, i16* %1320, align 2
  %1321 = add nuw i32 %1295, 1
  %1322 = load i32, i32* %1122, align 8
  %1323 = icmp ult i32 %1321, %1322
  br i1 %1323, label %1294, label %1287

1324:                                             ; preds = %1289, %1233, %1176, %870, %816, %761, %1077, %1024, %970, %659, %608, %556, %466, %424, %232, %186, %351, %305, %112, %70, %691, %486, %133, %17, %491, %905, %696, %1111, %1131, %1143, %716, %728, %925, %937, %511, %523, %379, %391, %141, %153, %260, %272, %25, %37, %689, %131
  ret i32 1
}

declare i32 @avifLimitedToFullY(i32, i32) local_unnamed_addr #1

declare i32 @avifFullToLimitedY(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avifRGBImagePremultiplyAlpha(%struct.avifRGBImage*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %299, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %299, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @avifRGBFormatHasAlpha(i32 %11) #2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %299, label %14

14:                                               ; preds = %9
  %15 = tail call i32 @avifRGBImagePremultiplyAlphaLibYUV(%struct.avifRGBImage* %0) #2
  %16 = icmp eq i32 %15, 25
  br i1 %16, label %17, label %299

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = shl nsw i32 -1, %19
  %21 = xor i32 %20, -1
  %22 = uitofp i32 %21 to float
  %23 = icmp ugt i32 %19, 8
  %24 = load i32, i32* %10, align 4
  br i1 %23, label %25, label %168

25:                                               ; preds = %17
  switch i32 %24, label %33 [
    i32 4, label %26
    i32 1, label %26
  ]

26:                                               ; preds = %25, %25
  %27 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %299, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  br label %40

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %299, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  br label %104

40:                                               ; preds = %30, %52
  %41 = phi i32 [ %28, %30 ], [ %53, %52 ]
  %42 = phi i32 [ %32, %30 ], [ %54, %52 ]
  %43 = phi i32 [ 0, %30 ], [ %55, %52 ]
  %44 = load i8*, i8** %2, align 8
  %45 = load i32, i32* %6, align 8
  %46 = mul i32 %45, %43
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = icmp eq i32 %42, 0
  br i1 %49, label %52, label %57

50:                                               ; preds = %99
  %51 = load i32, i32* %27, align 4
  br label %52

52:                                               ; preds = %50, %40
  %53 = phi i32 [ %51, %50 ], [ %41, %40 ]
  %54 = phi i32 [ %101, %50 ], [ 0, %40 ]
  %55 = add nuw i32 %43, 1
  %56 = icmp ult i32 %55, %53
  br i1 %56, label %40, label %299

57:                                               ; preds = %40, %99
  %58 = phi i64 [ %100, %99 ], [ 0, %40 ]
  %59 = shl i64 %58, 3
  %60 = and i64 %59, 4294967288
  %61 = getelementptr inbounds i8, i8* %48, i64 %60
  %62 = bitcast i8* %61 to i16*
  %63 = getelementptr inbounds i8, i8* %61, i64 6
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = icmp ult i32 %66, %21
  br i1 %67, label %68, label %99

68:                                               ; preds = %57
  %69 = icmp eq i16 %65, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %68
  store i16 0, i16* %62, align 2
  %71 = getelementptr inbounds i8, i8* %61, i64 2
  %72 = bitcast i8* %71 to i16*
  store i16 0, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %61, i64 4
  %74 = bitcast i8* %73 to i16*
  store i16 0, i16* %74, align 2
  br label %99

75:                                               ; preds = %68
  %76 = load i16, i16* %62, align 2
  %77 = uitofp i16 %76 to float
  %78 = uitofp i16 %65 to float
  %79 = fmul float %78, %77
  %80 = fdiv float %79, %22
  %81 = tail call float @avifRoundf(float %80) #2
  %82 = fptoui float %81 to i16
  store i16 %82, i16* %62, align 2
  %83 = getelementptr inbounds i8, i8* %61, i64 2
  %84 = bitcast i8* %83 to i16*
  %85 = load i16, i16* %84, align 2
  %86 = uitofp i16 %85 to float
  %87 = fmul float %78, %86
  %88 = fdiv float %87, %22
  %89 = tail call float @avifRoundf(float %88) #2
  %90 = fptoui float %89 to i16
  store i16 %90, i16* %84, align 2
  %91 = getelementptr inbounds i8, i8* %61, i64 4
  %92 = bitcast i8* %91 to i16*
  %93 = load i16, i16* %92, align 2
  %94 = uitofp i16 %93 to float
  %95 = fmul float %78, %94
  %96 = fdiv float %95, %22
  %97 = tail call float @avifRoundf(float %96) #2
  %98 = fptoui float %97 to i16
  store i16 %98, i16* %92, align 2
  br label %99

99:                                               ; preds = %75, %70, %57
  %100 = add nuw nsw i64 %58, 1
  %101 = load i32, i32* %31, align 8
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %57, label %50

104:                                              ; preds = %37, %116
  %105 = phi i32 [ %35, %37 ], [ %117, %116 ]
  %106 = phi i32 [ %39, %37 ], [ %118, %116 ]
  %107 = phi i32 [ 0, %37 ], [ %119, %116 ]
  %108 = load i8*, i8** %2, align 8
  %109 = load i32, i32* %6, align 8
  %110 = mul i32 %109, %107
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %108, i64 %111
  %113 = icmp eq i32 %106, 0
  br i1 %113, label %116, label %121

114:                                              ; preds = %163
  %115 = load i32, i32* %34, align 4
  br label %116

116:                                              ; preds = %114, %104
  %117 = phi i32 [ %115, %114 ], [ %105, %104 ]
  %118 = phi i32 [ %165, %114 ], [ 0, %104 ]
  %119 = add nuw i32 %107, 1
  %120 = icmp ult i32 %119, %117
  br i1 %120, label %104, label %299

121:                                              ; preds = %104, %163
  %122 = phi i64 [ %164, %163 ], [ 0, %104 ]
  %123 = shl i64 %122, 3
  %124 = and i64 %123, 4294967288
  %125 = getelementptr inbounds i8, i8* %112, i64 %124
  %126 = bitcast i8* %125 to i16*
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = icmp ult i32 %128, %21
  br i1 %129, label %130, label %163

130:                                              ; preds = %121
  %131 = icmp eq i16 %127, 0
  %132 = getelementptr inbounds i8, i8* %125, i64 2
  %133 = bitcast i8* %132 to i16*
  br i1 %131, label %134, label %139

134:                                              ; preds = %130
  store i16 0, i16* %133, align 2
  %135 = getelementptr inbounds i8, i8* %125, i64 4
  %136 = bitcast i8* %135 to i16*
  store i16 0, i16* %136, align 2
  %137 = getelementptr inbounds i8, i8* %125, i64 6
  %138 = bitcast i8* %137 to i16*
  store i16 0, i16* %138, align 2
  br label %163

139:                                              ; preds = %130
  %140 = load i16, i16* %133, align 2
  %141 = uitofp i16 %140 to float
  %142 = uitofp i16 %127 to float
  %143 = fmul float %142, %141
  %144 = fdiv float %143, %22
  %145 = tail call float @avifRoundf(float %144) #2
  %146 = fptoui float %145 to i16
  store i16 %146, i16* %133, align 2
  %147 = getelementptr inbounds i8, i8* %125, i64 4
  %148 = bitcast i8* %147 to i16*
  %149 = load i16, i16* %148, align 2
  %150 = uitofp i16 %149 to float
  %151 = fmul float %142, %150
  %152 = fdiv float %151, %22
  %153 = tail call float @avifRoundf(float %152) #2
  %154 = fptoui float %153 to i16
  store i16 %154, i16* %148, align 2
  %155 = getelementptr inbounds i8, i8* %125, i64 6
  %156 = bitcast i8* %155 to i16*
  %157 = load i16, i16* %156, align 2
  %158 = uitofp i16 %157 to float
  %159 = fmul float %142, %158
  %160 = fdiv float %159, %22
  %161 = tail call float @avifRoundf(float %160) #2
  %162 = fptoui float %161 to i16
  store i16 %162, i16* %156, align 2
  br label %163

163:                                              ; preds = %139, %134, %121
  %164 = add nuw nsw i64 %122, 1
  %165 = load i32, i32* %38, align 8
  %166 = zext i32 %165 to i64
  %167 = icmp ult i64 %164, %166
  br i1 %167, label %121, label %114

168:                                              ; preds = %17
  switch i32 %24, label %176 [
    i32 4, label %169
    i32 1, label %169
  ]

169:                                              ; preds = %168, %168
  %170 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %299, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %175 = load i32, i32* %174, align 8
  br label %183

176:                                              ; preds = %168
  %177 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %299, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  br label %241

183:                                              ; preds = %173, %195
  %184 = phi i32 [ %171, %173 ], [ %196, %195 ]
  %185 = phi i32 [ %175, %173 ], [ %197, %195 ]
  %186 = phi i32 [ 0, %173 ], [ %198, %195 ]
  %187 = load i8*, i8** %2, align 8
  %188 = load i32, i32* %6, align 8
  %189 = mul i32 %188, %186
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %187, i64 %190
  %192 = icmp eq i32 %185, 0
  br i1 %192, label %195, label %200

193:                                              ; preds = %236
  %194 = load i32, i32* %170, align 4
  br label %195

195:                                              ; preds = %193, %183
  %196 = phi i32 [ %194, %193 ], [ %184, %183 ]
  %197 = phi i32 [ %238, %193 ], [ 0, %183 ]
  %198 = add nuw i32 %186, 1
  %199 = icmp ult i32 %198, %196
  br i1 %199, label %183, label %299

200:                                              ; preds = %183, %236
  %201 = phi i64 [ %237, %236 ], [ 0, %183 ]
  %202 = shl i64 %201, 2
  %203 = and i64 %202, 4294967292
  %204 = getelementptr inbounds i8, i8* %191, i64 %203
  %205 = getelementptr inbounds i8, i8* %204, i64 3
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = icmp eq i32 %207, %21
  br i1 %208, label %236, label %209

209:                                              ; preds = %200
  %210 = icmp eq i8 %206, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %209
  store i8 0, i8* %204, align 1
  %212 = getelementptr inbounds i8, i8* %204, i64 1
  store i8 0, i8* %212, align 1
  %213 = getelementptr inbounds i8, i8* %204, i64 2
  store i8 0, i8* %213, align 1
  br label %236

214:                                              ; preds = %209
  %215 = load i8, i8* %204, align 1
  %216 = uitofp i8 %215 to float
  %217 = uitofp i8 %206 to float
  %218 = fmul float %217, %216
  %219 = fdiv float %218, %22
  %220 = tail call float @avifRoundf(float %219) #2
  %221 = fptoui float %220 to i8
  store i8 %221, i8* %204, align 1
  %222 = getelementptr inbounds i8, i8* %204, i64 1
  %223 = load i8, i8* %222, align 1
  %224 = uitofp i8 %223 to float
  %225 = fmul float %217, %224
  %226 = fdiv float %225, %22
  %227 = tail call float @avifRoundf(float %226) #2
  %228 = fptoui float %227 to i8
  store i8 %228, i8* %222, align 1
  %229 = getelementptr inbounds i8, i8* %204, i64 2
  %230 = load i8, i8* %229, align 1
  %231 = uitofp i8 %230 to float
  %232 = fmul float %217, %231
  %233 = fdiv float %232, %22
  %234 = tail call float @avifRoundf(float %233) #2
  %235 = fptoui float %234 to i8
  store i8 %235, i8* %229, align 1
  br label %236

236:                                              ; preds = %214, %211, %200
  %237 = add nuw nsw i64 %201, 1
  %238 = load i32, i32* %174, align 8
  %239 = zext i32 %238 to i64
  %240 = icmp ult i64 %237, %239
  br i1 %240, label %200, label %193

241:                                              ; preds = %180, %253
  %242 = phi i32 [ %178, %180 ], [ %254, %253 ]
  %243 = phi i32 [ %182, %180 ], [ %255, %253 ]
  %244 = phi i32 [ 0, %180 ], [ %256, %253 ]
  %245 = load i8*, i8** %2, align 8
  %246 = load i32, i32* %6, align 8
  %247 = mul i32 %246, %244
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %245, i64 %248
  %250 = icmp eq i32 %243, 0
  br i1 %250, label %253, label %258

251:                                              ; preds = %294
  %252 = load i32, i32* %177, align 4
  br label %253

253:                                              ; preds = %251, %241
  %254 = phi i32 [ %252, %251 ], [ %242, %241 ]
  %255 = phi i32 [ %296, %251 ], [ 0, %241 ]
  %256 = add nuw i32 %244, 1
  %257 = icmp ult i32 %256, %254
  br i1 %257, label %241, label %299

258:                                              ; preds = %241, %294
  %259 = phi i64 [ %295, %294 ], [ 0, %241 ]
  %260 = shl i64 %259, 2
  %261 = and i64 %260, 4294967292
  %262 = getelementptr inbounds i8, i8* %249, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i32
  %265 = icmp eq i32 %264, %21
  br i1 %265, label %294, label %266

266:                                              ; preds = %258
  %267 = icmp eq i8 %263, 0
  %268 = getelementptr inbounds i8, i8* %262, i64 1
  br i1 %267, label %269, label %272

269:                                              ; preds = %266
  store i8 0, i8* %268, align 1
  %270 = getelementptr inbounds i8, i8* %262, i64 2
  store i8 0, i8* %270, align 1
  %271 = getelementptr inbounds i8, i8* %262, i64 3
  store i8 0, i8* %271, align 1
  br label %294

272:                                              ; preds = %266
  %273 = load i8, i8* %268, align 1
  %274 = uitofp i8 %273 to float
  %275 = uitofp i8 %263 to float
  %276 = fmul float %275, %274
  %277 = fdiv float %276, %22
  %278 = tail call float @avifRoundf(float %277) #2
  %279 = fptoui float %278 to i8
  store i8 %279, i8* %268, align 1
  %280 = getelementptr inbounds i8, i8* %262, i64 2
  %281 = load i8, i8* %280, align 1
  %282 = uitofp i8 %281 to float
  %283 = fmul float %275, %282
  %284 = fdiv float %283, %22
  %285 = tail call float @avifRoundf(float %284) #2
  %286 = fptoui float %285 to i8
  store i8 %286, i8* %280, align 1
  %287 = getelementptr inbounds i8, i8* %262, i64 3
  %288 = load i8, i8* %287, align 1
  %289 = uitofp i8 %288 to float
  %290 = fmul float %275, %289
  %291 = fdiv float %290, %22
  %292 = tail call float @avifRoundf(float %291) #2
  %293 = fptoui float %292 to i8
  store i8 %293, i8* %287, align 1
  br label %294

294:                                              ; preds = %272, %269, %258
  %295 = add nuw nsw i64 %259, 1
  %296 = load i32, i32* %181, align 8
  %297 = zext i32 %296 to i64
  %298 = icmp ult i64 %295, %297
  br i1 %298, label %258, label %251

299:                                              ; preds = %195, %253, %52, %116, %33, %26, %176, %169, %14, %9, %1, %5
  %300 = phi i32 [ 5, %5 ], [ 5, %1 ], [ 24, %9 ], [ %15, %14 ], [ 0, %33 ], [ 0, %26 ], [ 0, %176 ], [ 0, %169 ], [ 0, %116 ], [ 0, %52 ], [ 0, %253 ], [ 0, %195 ]
  ret i32 %300
}

declare i32 @avifRGBFormatHasAlpha(i32) local_unnamed_addr #1

declare i32 @avifRGBImagePremultiplyAlphaLibYUV(%struct.avifRGBImage*) local_unnamed_addr #1

declare float @avifRoundf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avifRGBImageUnpremultiplyAlpha(%struct.avifRGBImage*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %323, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %323, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @avifRGBFormatHasAlpha(i32 %11) #2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %323, label %14

14:                                               ; preds = %9
  %15 = tail call i32 @avifRGBImageUnpremultiplyAlphaLibYUV(%struct.avifRGBImage* %0) #2
  %16 = icmp eq i32 %15, 25
  br i1 %16, label %17, label %323

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = shl nsw i32 -1, %19
  %21 = xor i32 %20, -1
  %22 = uitofp i32 %21 to float
  %23 = icmp ugt i32 %19, 8
  %24 = load i32, i32* %10, align 4
  br i1 %23, label %25, label %180

25:                                               ; preds = %17
  switch i32 %24, label %33 [
    i32 4, label %26
    i32 1, label %26
  ]

26:                                               ; preds = %25, %25
  %27 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %323, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  br label %40

33:                                               ; preds = %25
  %34 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %323, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  br label %110

40:                                               ; preds = %30, %52
  %41 = phi i32 [ %28, %30 ], [ %53, %52 ]
  %42 = phi i32 [ %32, %30 ], [ %54, %52 ]
  %43 = phi i32 [ 0, %30 ], [ %55, %52 ]
  %44 = load i8*, i8** %2, align 8
  %45 = load i32, i32* %6, align 8
  %46 = mul i32 %45, %43
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = icmp eq i32 %42, 0
  br i1 %49, label %52, label %57

50:                                               ; preds = %105
  %51 = load i32, i32* %27, align 4
  br label %52

52:                                               ; preds = %50, %40
  %53 = phi i32 [ %51, %50 ], [ %41, %40 ]
  %54 = phi i32 [ %107, %50 ], [ 0, %40 ]
  %55 = add nuw i32 %43, 1
  %56 = icmp ult i32 %55, %53
  br i1 %56, label %40, label %323

57:                                               ; preds = %40, %105
  %58 = phi i64 [ %106, %105 ], [ 0, %40 ]
  %59 = shl i64 %58, 3
  %60 = and i64 %59, 4294967288
  %61 = getelementptr inbounds i8, i8* %48, i64 %60
  %62 = bitcast i8* %61 to i16*
  %63 = getelementptr inbounds i8, i8* %61, i64 6
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = icmp ult i32 %66, %21
  br i1 %67, label %68, label %105

68:                                               ; preds = %57
  %69 = icmp eq i16 %65, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %68
  store i16 0, i16* %62, align 2
  %71 = getelementptr inbounds i8, i8* %61, i64 2
  %72 = bitcast i8* %71 to i16*
  store i16 0, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %61, i64 4
  %74 = bitcast i8* %73 to i16*
  store i16 0, i16* %74, align 2
  br label %105

75:                                               ; preds = %68
  %76 = load i16, i16* %62, align 2
  %77 = uitofp i16 %76 to float
  %78 = fmul float %22, %77
  %79 = uitofp i16 %65 to float
  %80 = fdiv float %78, %79
  %81 = tail call float @avifRoundf(float %80) #2
  %82 = getelementptr inbounds i8, i8* %61, i64 2
  %83 = bitcast i8* %82 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = uitofp i16 %84 to float
  %86 = fmul float %22, %85
  %87 = fdiv float %86, %79
  %88 = tail call float @avifRoundf(float %87) #2
  %89 = getelementptr inbounds i8, i8* %61, i64 4
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = uitofp i16 %91 to float
  %93 = fmul float %22, %92
  %94 = fdiv float %93, %79
  %95 = tail call float @avifRoundf(float %94) #2
  %96 = fcmp olt float %81, %22
  %97 = select i1 %96, float %81, float %22
  %98 = fptoui float %97 to i16
  store i16 %98, i16* %62, align 2
  %99 = fcmp olt float %88, %22
  %100 = select i1 %99, float %88, float %22
  %101 = fptoui float %100 to i16
  store i16 %101, i16* %83, align 2
  %102 = fcmp olt float %95, %22
  %103 = select i1 %102, float %95, float %22
  %104 = fptoui float %103 to i16
  store i16 %104, i16* %90, align 2
  br label %105

105:                                              ; preds = %75, %70, %57
  %106 = add nuw nsw i64 %58, 1
  %107 = load i32, i32* %31, align 8
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %57, label %50

110:                                              ; preds = %37, %122
  %111 = phi i32 [ %35, %37 ], [ %123, %122 ]
  %112 = phi i32 [ %39, %37 ], [ %124, %122 ]
  %113 = phi i32 [ 0, %37 ], [ %125, %122 ]
  %114 = load i8*, i8** %2, align 8
  %115 = load i32, i32* %6, align 8
  %116 = mul i32 %115, %113
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %114, i64 %117
  %119 = icmp eq i32 %112, 0
  br i1 %119, label %122, label %127

120:                                              ; preds = %175
  %121 = load i32, i32* %34, align 4
  br label %122

122:                                              ; preds = %120, %110
  %123 = phi i32 [ %121, %120 ], [ %111, %110 ]
  %124 = phi i32 [ %177, %120 ], [ 0, %110 ]
  %125 = add nuw i32 %113, 1
  %126 = icmp ult i32 %125, %123
  br i1 %126, label %110, label %323

127:                                              ; preds = %110, %175
  %128 = phi i64 [ %176, %175 ], [ 0, %110 ]
  %129 = shl i64 %128, 3
  %130 = and i64 %129, 4294967288
  %131 = getelementptr inbounds i8, i8* %118, i64 %130
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = icmp ult i32 %134, %21
  br i1 %135, label %136, label %175

136:                                              ; preds = %127
  %137 = icmp eq i16 %133, 0
  %138 = getelementptr inbounds i8, i8* %131, i64 2
  %139 = bitcast i8* %138 to i16*
  br i1 %137, label %140, label %145

140:                                              ; preds = %136
  store i16 0, i16* %139, align 2
  %141 = getelementptr inbounds i8, i8* %131, i64 4
  %142 = bitcast i8* %141 to i16*
  store i16 0, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %131, i64 6
  %144 = bitcast i8* %143 to i16*
  store i16 0, i16* %144, align 2
  br label %175

145:                                              ; preds = %136
  %146 = load i16, i16* %139, align 2
  %147 = uitofp i16 %146 to float
  %148 = fmul float %22, %147
  %149 = uitofp i16 %133 to float
  %150 = fdiv float %148, %149
  %151 = tail call float @avifRoundf(float %150) #2
  %152 = getelementptr inbounds i8, i8* %131, i64 4
  %153 = bitcast i8* %152 to i16*
  %154 = load i16, i16* %153, align 2
  %155 = uitofp i16 %154 to float
  %156 = fmul float %22, %155
  %157 = fdiv float %156, %149
  %158 = tail call float @avifRoundf(float %157) #2
  %159 = getelementptr inbounds i8, i8* %131, i64 6
  %160 = bitcast i8* %159 to i16*
  %161 = load i16, i16* %160, align 2
  %162 = uitofp i16 %161 to float
  %163 = fmul float %22, %162
  %164 = fdiv float %163, %149
  %165 = tail call float @avifRoundf(float %164) #2
  %166 = fcmp olt float %151, %22
  %167 = select i1 %166, float %151, float %22
  %168 = fptoui float %167 to i16
  store i16 %168, i16* %139, align 2
  %169 = fcmp olt float %158, %22
  %170 = select i1 %169, float %158, float %22
  %171 = fptoui float %170 to i16
  store i16 %171, i16* %153, align 2
  %172 = fcmp olt float %165, %22
  %173 = select i1 %172, float %165, float %22
  %174 = fptoui float %173 to i16
  store i16 %174, i16* %160, align 2
  br label %175

175:                                              ; preds = %145, %140, %127
  %176 = add nuw nsw i64 %128, 1
  %177 = load i32, i32* %38, align 8
  %178 = zext i32 %177 to i64
  %179 = icmp ult i64 %176, %178
  br i1 %179, label %127, label %120

180:                                              ; preds = %17
  switch i32 %24, label %188 [
    i32 4, label %181
    i32 1, label %181
  ]

181:                                              ; preds = %180, %180
  %182 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %323, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %187 = load i32, i32* %186, align 8
  br label %195

188:                                              ; preds = %180
  %189 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %323, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.avifRGBImage, %struct.avifRGBImage* %0, i64 0, i32 0
  %194 = load i32, i32* %193, align 8
  br label %259

195:                                              ; preds = %185, %207
  %196 = phi i32 [ %183, %185 ], [ %208, %207 ]
  %197 = phi i32 [ %187, %185 ], [ %209, %207 ]
  %198 = phi i32 [ 0, %185 ], [ %210, %207 ]
  %199 = load i8*, i8** %2, align 8
  %200 = load i32, i32* %6, align 8
  %201 = mul i32 %200, %198
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %199, i64 %202
  %204 = icmp eq i32 %197, 0
  br i1 %204, label %207, label %212

205:                                              ; preds = %254
  %206 = load i32, i32* %182, align 4
  br label %207

207:                                              ; preds = %205, %195
  %208 = phi i32 [ %206, %205 ], [ %196, %195 ]
  %209 = phi i32 [ %256, %205 ], [ 0, %195 ]
  %210 = add nuw i32 %198, 1
  %211 = icmp ult i32 %210, %208
  br i1 %211, label %195, label %323

212:                                              ; preds = %195, %254
  %213 = phi i64 [ %255, %254 ], [ 0, %195 ]
  %214 = shl i64 %213, 2
  %215 = and i64 %214, 4294967292
  %216 = getelementptr inbounds i8, i8* %203, i64 %215
  %217 = getelementptr inbounds i8, i8* %216, i64 3
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = icmp eq i32 %219, %21
  br i1 %220, label %254, label %221

221:                                              ; preds = %212
  %222 = icmp eq i8 %218, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %221
  store i8 0, i8* %216, align 1
  %224 = getelementptr inbounds i8, i8* %216, i64 1
  store i8 0, i8* %224, align 1
  %225 = getelementptr inbounds i8, i8* %216, i64 2
  store i8 0, i8* %225, align 1
  br label %254

226:                                              ; preds = %221
  %227 = load i8, i8* %216, align 1
  %228 = uitofp i8 %227 to float
  %229 = fmul float %22, %228
  %230 = uitofp i8 %218 to float
  %231 = fdiv float %229, %230
  %232 = tail call float @avifRoundf(float %231) #2
  %233 = getelementptr inbounds i8, i8* %216, i64 1
  %234 = load i8, i8* %233, align 1
  %235 = uitofp i8 %234 to float
  %236 = fmul float %22, %235
  %237 = fdiv float %236, %230
  %238 = tail call float @avifRoundf(float %237) #2
  %239 = getelementptr inbounds i8, i8* %216, i64 2
  %240 = load i8, i8* %239, align 1
  %241 = uitofp i8 %240 to float
  %242 = fmul float %22, %241
  %243 = fdiv float %242, %230
  %244 = tail call float @avifRoundf(float %243) #2
  %245 = fcmp olt float %232, %22
  %246 = select i1 %245, float %232, float %22
  %247 = fptoui float %246 to i8
  store i8 %247, i8* %216, align 1
  %248 = fcmp olt float %238, %22
  %249 = select i1 %248, float %238, float %22
  %250 = fptoui float %249 to i8
  store i8 %250, i8* %233, align 1
  %251 = fcmp olt float %244, %22
  %252 = select i1 %251, float %244, float %22
  %253 = fptoui float %252 to i8
  store i8 %253, i8* %239, align 1
  br label %254

254:                                              ; preds = %226, %223, %212
  %255 = add nuw nsw i64 %213, 1
  %256 = load i32, i32* %186, align 8
  %257 = zext i32 %256 to i64
  %258 = icmp ult i64 %255, %257
  br i1 %258, label %212, label %205

259:                                              ; preds = %192, %271
  %260 = phi i32 [ %190, %192 ], [ %272, %271 ]
  %261 = phi i32 [ %194, %192 ], [ %273, %271 ]
  %262 = phi i32 [ 0, %192 ], [ %274, %271 ]
  %263 = load i8*, i8** %2, align 8
  %264 = load i32, i32* %6, align 8
  %265 = mul i32 %264, %262
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds i8, i8* %263, i64 %266
  %268 = icmp eq i32 %261, 0
  br i1 %268, label %271, label %276

269:                                              ; preds = %318
  %270 = load i32, i32* %189, align 4
  br label %271

271:                                              ; preds = %269, %259
  %272 = phi i32 [ %270, %269 ], [ %260, %259 ]
  %273 = phi i32 [ %320, %269 ], [ 0, %259 ]
  %274 = add nuw i32 %262, 1
  %275 = icmp ult i32 %274, %272
  br i1 %275, label %259, label %323

276:                                              ; preds = %259, %318
  %277 = phi i64 [ %319, %318 ], [ 0, %259 ]
  %278 = shl i64 %277, 2
  %279 = and i64 %278, 4294967292
  %280 = getelementptr inbounds i8, i8* %267, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = icmp eq i32 %282, %21
  br i1 %283, label %318, label %284

284:                                              ; preds = %276
  %285 = icmp eq i8 %281, 0
  %286 = getelementptr inbounds i8, i8* %280, i64 1
  br i1 %285, label %287, label %290

287:                                              ; preds = %284
  store i8 0, i8* %286, align 1
  %288 = getelementptr inbounds i8, i8* %280, i64 2
  store i8 0, i8* %288, align 1
  %289 = getelementptr inbounds i8, i8* %280, i64 3
  store i8 0, i8* %289, align 1
  br label %318

290:                                              ; preds = %284
  %291 = load i8, i8* %286, align 1
  %292 = uitofp i8 %291 to float
  %293 = fmul float %22, %292
  %294 = uitofp i8 %281 to float
  %295 = fdiv float %293, %294
  %296 = tail call float @avifRoundf(float %295) #2
  %297 = getelementptr inbounds i8, i8* %280, i64 2
  %298 = load i8, i8* %297, align 1
  %299 = uitofp i8 %298 to float
  %300 = fmul float %22, %299
  %301 = fdiv float %300, %294
  %302 = tail call float @avifRoundf(float %301) #2
  %303 = getelementptr inbounds i8, i8* %280, i64 3
  %304 = load i8, i8* %303, align 1
  %305 = uitofp i8 %304 to float
  %306 = fmul float %22, %305
  %307 = fdiv float %306, %294
  %308 = tail call float @avifRoundf(float %307) #2
  %309 = fcmp olt float %296, %22
  %310 = select i1 %309, float %296, float %22
  %311 = fptoui float %310 to i8
  store i8 %311, i8* %286, align 1
  %312 = fcmp olt float %302, %22
  %313 = select i1 %312, float %302, float %22
  %314 = fptoui float %313 to i8
  store i8 %314, i8* %297, align 1
  %315 = fcmp olt float %308, %22
  %316 = select i1 %315, float %308, float %22
  %317 = fptoui float %316 to i8
  store i8 %317, i8* %303, align 1
  br label %318

318:                                              ; preds = %290, %287, %276
  %319 = add nuw nsw i64 %277, 1
  %320 = load i32, i32* %193, align 8
  %321 = zext i32 %320 to i64
  %322 = icmp ult i64 %319, %321
  br i1 %322, label %276, label %269

323:                                              ; preds = %207, %271, %52, %122, %33, %26, %188, %181, %14, %9, %1, %5
  %324 = phi i32 [ 5, %5 ], [ 5, %1 ], [ 5, %9 ], [ %15, %14 ], [ 0, %33 ], [ 0, %26 ], [ 0, %188 ], [ 0, %181 ], [ 0, %122 ], [ 0, %52 ], [ 0, %271 ], [ 0, %207 ]
  ret i32 %324
}

declare i32 @avifRGBImageUnpremultiplyAlphaLibYUV(%struct.avifRGBImage*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
