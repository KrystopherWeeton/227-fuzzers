; ModuleID = '../../third_party/blink/renderer/core/page/drag_data.cc'
source_filename = "../../third_party/blink/renderer/core/page/drag_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::DragData" = type <{ %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::DataObject"*, i32, [4 x i8] }>
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::DataObject" = type { %"class.blink::Supplementable", %"class.blink::HeapVector", %"class.blink::HeapHashSet", i32, %"class.WTF::String" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.7" }
%"class.WTF::HashTable.7" = type <{ %"class.blink::Member.9"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.9" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.18", %"class.blink::Member.18" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.18", %"class.blink::Member.19", %"class.blink::Member.18", %"class.blink::Member.18", %"class.blink::Member.21" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.25", %"class.blink::Member.27", %"class.blink::Member.19", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.70", %"class.blink::Member.72", %"class.blink::Member.74", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.79", %"class.blink::HeapVector.81" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.123", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.131", %"class.WTF::Vector.131", i8, i32, %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.152", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.154", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.160", %"class.blink::Member.162", %"class.blink::Member.87", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.165", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.63", %"class.blink::Member.44", %"class.blink::Member.375", %"class.blink::Member.44", %"class.blink::Member.44", %"class.blink::Member.44", %"class.blink::UserActionElementSet", %"class.blink::Member.384", double, double, i64, i64, %"class.blink::HeapHashSet.386", %"class.blink::HeapHashSet.393", i16, i8, %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::TextLinkColors", %"class.blink::Member.408", i8, [7 x i8], %"class.blink::HeapHashMap.410", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.44", %"class.WTF::Vector.417", %"class.blink::Member.422", %"class.blink::Member.424", i8, %"class.blink::Member.44", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.426", %"class.blink::HeapVector.428", %"class.std::__1::unique_ptr.436", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.442", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.455", %"class.WTF::Vector.457", i8, i8, %"class.std::__1::unique_ptr.462", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.63", %"class.blink::HeapVector.468", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.476", i8, i32, %"class.blink::Member.478", %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.484", %"class.WTF::HashMap.486", %"class.blink::Member.491", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.499", i8, i32, %"class.blink::Member.506", %"class.blink::Member.508", i32, %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.514", %"class.std::__1::unique_ptr.516", i64, %"class.std::__1::unique_ptr.522", i32, i32, %"class.blink::Member.528", %"class.blink::Member.530", %"class.blink::Member.532", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.534", %"class.WTF::Vector.536", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.541", %"class.blink::Member.548", %"class.std::__1::unique_ptr.550", %"class.blink::Member.556", i8, i8, %"class.WTF::String", %"class.blink::Member.558", i8, [7 x i8], %"class.blink::HeapHashMap.560", %"class.blink::HeapObserverSet", %"class.blink::Member.574", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.576", i32, i8, i8, %"class.blink::WeakMember.578", %"class.blink::Member.579" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.123" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.124" }
%"class.blink::HeapHashMap.124" = type { %"class.WTF::HashMap.127" }
%"class.WTF::HashMap.127" = type { %"class.WTF::HashTable.128" }
%"class.WTF::HashTable.128" = type <{ %"struct.WTF::KeyValuePair.130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.130" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.135" }
%"struct.std::__1::atomic.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__cxx_atomic_impl.138" }
%"struct.std::__1::__cxx_atomic_impl.138" = type { %"struct.std::__1::__cxx_atomic_base_impl.139" }
%"struct.std::__1::__cxx_atomic_base_impl.139" = type { i32 }
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.597", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.665", i32, i8, [3 x i8], %"class.blink::HeapVector.667", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.675", %"class.blink::Member.677", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.686", %"class.blink::Member.809", %"class.blink::Member.811", i8, [7 x i8] }>
%"class.blink::Supplementable.597" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.598" }
%"class.blink::HeapHashMap.598" = type { %"class.WTF::HashMap.601" }
%"class.WTF::HashMap.601" = type { %"class.WTF::HashTable.602" }
%"class.WTF::HashTable.602" = type <{ %"struct.WTF::KeyValuePair.604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.604" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.613" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.605" }
%"class.blink::HeapObserverSet.605" = type { i32, [4 x i8], %"class.blink::HeapHashSet.606" }
%"class.blink::HeapHashSet.606" = type { %"class.WTF::HashSet.609" }
%"class.WTF::HashSet.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"class.blink::WeakMember.612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.612" = type opaque
%"class.blink::Supplementable.613" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.614" }
%"class.blink::HeapHashMap.614" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type { i8*, %"class.blink::Member.1260" }
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1262" }
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.621, %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.655", %"class.std::__1::unique_ptr.655", %"class.blink::Member.144", i32, [4 x i8], %"class.WTF::HashSet.661", i32, i32 }
%class.scoped_refptr.621 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.622", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.624 }
%"class.WTF::RefCounted.622" = type { %"class.base::RefCounted.623" }
%"class.base::RefCounted.623" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.624 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.642", %"class.std::__1::map.651"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.630 }
%union.anon.630 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { i64 }
%"class.std::__1::map.642" = type { %"class.std::__1::__tree.643" }
%"class.std::__1::__tree.643" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.644", %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.651" = type opaque
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.667" = type { %"class.WTF::Vector.670" }
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"class.blink::Member.673"*, i32, i32 }
%"class.blink::Member.673" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.679", i32, i32 }
%"class.blink::HeapHashMap.679" = type { %"class.WTF::HashMap.682" }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.685" = type opaque
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.689" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.692" }
%"class.WTF::Vector.692" = type { %"class.WTF::VectorBuffer.693" }
%"class.WTF::VectorBuffer.693" = type { %"class.WTF::VectorBufferBase.694" }
%"class.WTF::VectorBufferBase.694" = type { %"class.mojo::StructPtr.695"*, i32, i32 }
%"class.mojo::StructPtr.695" = type { %"class.std::__1::unique_ptr.696" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.699", %"class.WTF::HashMap.706", %"class.WTF::HashMap.711", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.11", i32, %"class.mojo::StructPtr.716", %"class.WTF::Vector.11" }
%"class.mojo::StructPtr.699" = type { %"class.std::__1::unique_ptr.700" }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.706" = type { %"class.WTF::HashTable.707" }
%"class.WTF::HashTable.707" = type <{ %"struct.WTF::KeyValuePair.710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.710" = type opaque
%"class.WTF::HashMap.711" = type { %"class.WTF::HashTable.712" }
%"class.WTF::HashTable.712" = type <{ %"struct.WTF::KeyValuePair.715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.715" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.716" = type { %"class.std::__1::unique_ptr.717" }
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.11", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.800" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.731", i32 }>
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.734", %"class.absl::optional.735", %"class.absl::optional.740", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.753", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.775", %"class.std::__1::map.786", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.795", i8, %class.scoped_refptr.745, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.796" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.734" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.735" = type { %"class.absl::optional_internal::optional_data.736" }
%"class.absl::optional_internal::optional_data.736" = type { %"class.absl::optional_internal::optional_data_base.737" }
%"class.absl::optional_internal::optional_data_base.737" = type { %"class.absl::optional_internal::optional_data_dtor_base.738" }
%"class.absl::optional_internal::optional_data_dtor_base.738" = type { i8, %union.anon.739 }
%union.anon.739 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.740" = type { %"class.absl::optional_internal::optional_data.741" }
%"class.absl::optional_internal::optional_data.741" = type { %"class.absl::optional_internal::optional_data_base.742" }
%"class.absl::optional_internal::optional_data_base.742" = type { %"class.absl::optional_internal::optional_data_dtor_base.743" }
%"class.absl::optional_internal::optional_data_dtor_base.743" = type { i8, %union.anon.744 }
%union.anon.744 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.745, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.746" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.746" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.367 }
%class.scoped_refptr.367 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.368", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.368" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.369" }
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__cxx_atomic_impl.372" }
%"struct.std::__1::__cxx_atomic_impl.372" = type { %"struct.std::__1::__cxx_atomic_base_impl.373" }
%"struct.std::__1::__cxx_atomic_base_impl.373" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.751 }
%class.scoped_refptr.751 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.813", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.745, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.813" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.752 }
%class.scoped_refptr.752 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.756", %class.scoped_refptr.757 }
%"class.base::RepeatingCallback.756" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.757 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.758", [4 x i8] }>
%"class.base::RefCountedThreadSafe.758" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.762", %"class.std::__1::unique_ptr.768", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.774" }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.774" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.775" = type { %"class.std::__1::__tree.776" }
%"class.std::__1::__tree.776" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.786" = type { %"class.std::__1::__tree.787" }
%"class.std::__1::__tree.787" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.788", %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.base::OnceCallback.795" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.745 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.366" }>
%"class.base::RefCountedThreadSafe.366" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.796" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.89", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.91, %"class.WTF::Vector.92", %"class.WTF::Vector.92", %"class.blink::Member.18", %"class.blink::Member.97", %"class.blink::HeapHashSet.101", %"class.blink::Member.27", %"class.WTF::HashSet.107", %"class.WTF::TextPosition", %"class.blink::Member.111", %"class.blink::HeapVector.113", %"class.blink::Member.120" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.91 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.92" = type { %"class.WTF::VectorBuffer.93" }
%"class.WTF::VectorBuffer.93" = type { %"class.WTF::VectorBufferBase.94" }
%"class.WTF::VectorBufferBase.94" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.99" }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.101" = type { %"class.WTF::HashSet.104" }
%"class.WTF::HashSet.104" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.20" }
%"class.WTF::HashSet.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.113" = type { %"class.WTF::Vector.116" }
%"class.WTF::Vector.116" = type { %"class.WTF::VectorBuffer.117" }
%"class.WTF::VectorBuffer.117" = type { %"class.WTF::VectorBufferBase.118" }
%"class.WTF::VectorBufferBase.118" = type { %"class.blink::Member.97"*, i32, i32 }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.169", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.169" = type { %"class.base::RefCounted.170" }
%"class.base::RefCounted.170" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.173" }
%"class.blink::HeapHashMap.173" = type { %"class.WTF::HashMap.176" }
%"class.WTF::HashMap.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type { %"class.blink::WeakMember.180", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.182", i32, [4 x i8], %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.318", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.359", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.298", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__cxx_atomic_impl.221" }
%"struct.std::__1::__cxx_atomic_impl.221" = type { %"struct.std::__1::__cxx_atomic_base_impl.222" }
%"struct.std::__1::__cxx_atomic_base_impl.222" = type { i64 }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist.257"* }
%"class.blink::Worklist.257" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist.264"* }
%"class.blink::Worklist.264" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::Worklist.271"* }
%"class.blink::Worklist.271" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { float }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.301", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.310" }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327" }
%"class.WTF::VectorBufferBase.327" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.340" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.236"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.243"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.250"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.257"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.592" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.359" = type { %"struct.std::__1::__atomic_base.360" }
%"struct.std::__1::__atomic_base.360" = type { %"struct.std::__1::__cxx_atomic_impl.361" }
%"struct.std::__1::__cxx_atomic_impl.361" = type { %"struct.std::__1::__cxx_atomic_base_impl.362" }
%"struct.std::__1::__cxx_atomic_base_impl.362" = type { i8 }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.27", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.18", %"class.blink::Member.18", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.377" }
%"class.blink::HeapHashMap.377" = type { %"class.WTF::HashMap.380" }
%"class.WTF::HashMap.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ %"struct.WTF::KeyValuePair.383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.383" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.386" = type { %"class.WTF::HashSet.389" }
%"class.WTF::HashSet.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"class.blink::WeakMember.392"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.392" = type opaque
%"class.blink::HeapHashSet.393" = type { %"class.WTF::HashSet.396" }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"class.blink::WeakMember.399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.399" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.19", %"class.blink::HeapVector.81" }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.410" = type { %"class.WTF::HashMap.413" }
%"class.WTF::HashMap.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"struct.WTF::KeyValuePair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.416" = type opaque
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.47" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.46 }
%class.scoped_refptr.46 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.51", %"class.blink::Member.53", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.51" = type { %"class.WTF::SingleThreadedBitField.52" }
%"class.WTF::SingleThreadedBitField.52" = type { i32 }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.56", %"class.WTF::AtomicString", %"class.WTF::Vector.58" }
%"class.WTF::RefCounted.56" = type { %"class.base::RefCounted.57" }
%"class.base::RefCounted.57" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60", [32 x i8] }
%"class.WTF::VectorBufferBase.60" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.428" = type { %"class.WTF::Vector.431" }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.blink::Member.434"*, i32, i32 }
%"class.blink::Member.434" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.442" = type { %"class.WTF::HashSet.445" }
%"class.WTF::HashSet.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"class.blink::WeakMember.448"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.448" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.449", i32, [4 x i8] }>
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"struct.std::__1::pair.452"*, i32, i32 }
%"struct.std::__1::pair.452" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.457" = type { %"class.WTF::VectorBuffer.458" }
%"class.WTF::VectorBuffer.458" = type { %"class.WTF::VectorBufferBase.459" }
%"class.WTF::VectorBufferBase.459" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.63" = type { %"class.WTF::Vector.66" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::HeapVector.468" = type { %"class.WTF::Vector.471" }
%"class.WTF::Vector.471" = type { %"class.WTF::VectorBuffer.472" }
%"class.WTF::VectorBuffer.472" = type { %"class.WTF::VectorBufferBase.473" }
%"class.WTF::VectorBufferBase.473" = type { %"class.blink::Member.474"*, i32, i32 }
%"class.blink::Member.474" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.27" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"struct.WTF::KeyValuePair.490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.490" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.374", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.365, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.365 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.374" = type { %"class.blink::MemberBase.28" }
%"class.blink::HeapHashSet.499" = type { %"class.WTF::HashSet.502" }
%"class.WTF::HashSet.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"class.blink::Member.505"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.505" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538" }
%"class.WTF::VectorBufferBase.538" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.541" = type { %"class.WTF::HashMap.544" }
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.560" = type { %"class.WTF::HashMap.563" }
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.566" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.567" }
%"class.blink::HeapHashSet.567" = type { %"class.WTF::HashSet.570" }
%"class.WTF::HashSet.570" = type { %"class.WTF::HashTable.571" }
%"class.WTF::HashTable.571" = type <{ %"class.blink::WeakMember.573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.573" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.27", %"class.blink::HeapHashSet.583", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.590", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::Member.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.589" = type opaque
%"class.blink::HeapTaskRunnerTimer.590" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.591", { i64, i64 } }
%"class.blink::WeakMember.591" = type { %"class.blink::MemberBase.577" }
%"class.blink::WeakMember.578" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.33" }
%"class.blink::HeapHashMap.33" = type { %"class.WTF::HashMap.36" }
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.39"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.39" = type { %"class.WTF::AtomicString", %"class.blink::Member.40" }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.44", i32, %"class.blink::HeapVector.63" }
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.76" }
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::HeapHashMap.78"* }
%"class.blink::HeapHashMap.78" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.81" = type { %"class.WTF::Vector.84" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.blink::Member.87"*, i32, i32 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.857", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.865", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.879", %"class.blink::FrameLoader", %"class.blink::Member.900", %"class.blink::Member.44", %"class.blink::Member.902", %"class.blink::Member.904", %"class.blink::Member.906", %"class.blink::Member.908", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.910", %class.scoped_refptr.912, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", %"class.blink::Member.925", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.929", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.935", %"class.std::__1::unique_ptr.936", %"class.absl::optional.845", i32, [4 x i8], %"class.std::__1::unique_ptr.942", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.950", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.955", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.960", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.963", %"class.blink::Member.965", %"class.blink::Member.967", %"class.blink::Member.969", %"class.mojo::StructPtr.972", %"class.blink::Member.981", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.983", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.818", %"class.blink::Member.820", %"class.blink::Member.822", i8, i32, i8, i32, %"class.blink::Member.824", %"class.blink::Member.826", %"class.blink::FrameLifecycle", %"class.blink::Member.816", %"class.blink::Member.816", %"class.blink::Member.816", %"class.blink::Member.816", %"class.blink::Member.816", %"class.blink::Member.816", %"class.blink::Member.828", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.838", i8, %"class.base::UnguessableToken", %"class.absl::optional.840", %"class.absl::optional.845", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.816", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::Frame"* }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.816", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.830" }
%"class.std::__1::vector.830" = type { %"class.std::__1::__vector_base.831" }
%"class.std::__1::__vector_base.831" = type { %"struct.std::__1::pair.832"*, %"struct.std::__1::pair.832"*, %"class.std::__1::__compressed_pair.833" }
%"struct.std::__1::pair.832" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"struct.std::__1::pair.832"* }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.840" = type { %"class.absl::optional_internal::optional_data.841" }
%"class.absl::optional_internal::optional_data.841" = type { %"class.absl::optional_internal::optional_data_base.842" }
%"class.absl::optional_internal::optional_data_base.842" = type { %"class.absl::optional_internal::optional_data_dtor_base.843" }
%"class.absl::optional_internal::optional_data_dtor_base.843" = type { i8, %union.anon.844 }
%union.anon.844 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.850" }
%"class.blink::HeapHashSet.850" = type { %"class.WTF::HashSet.853" }
%"class.WTF::HashSet.853" = type { %"class.WTF::HashTable.854" }
%"class.WTF::HashTable.854" = type <{ %"class.blink::WeakMember.856"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.856" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.857" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.858" }
%"class.blink::HeapHashMap.858" = type { %"class.WTF::HashMap.861" }
%"class.WTF::HashMap.861" = type { %"class.WTF::HashTable.862" }
%"class.WTF::HashTable.862" = type <{ %"struct.WTF::KeyValuePair.864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.864" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.868", %"class.base::WeakPtrFactory.873" }
%"class.WTF::HashMap.868" = type { %"class.WTF::HashTable.869" }
%"class.WTF::HashTable.869" = type <{ %"struct.WTF::KeyValuePair.872"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.872" = type opaque
%"class.base::WeakPtrFactory.873" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.877" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1266" }
%"class.blink::WeakMember.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1268", i64, %"class.std::__1::map.1269", i8*, i64, %"class.base::WeakPtrFactory.1278" }
%"class.base::RepeatingCallback.1268" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1269" = type { %"class.std::__1::__tree.1270" }
%"class.std::__1::__tree.1270" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1271", %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.base::WeakPtrFactory.1278" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.879" = type { %"class.WTF::HashSet.882" }
%"class.WTF::HashSet.882" = type { %"class.WTF::HashTable.883" }
%"class.WTF::HashTable.883" = type <{ %"class.blink::WeakMember.885"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.885" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.828", %"class.blink::Member.886", %"class.blink::Member.888", %"class.std::__1::unique_ptr.890", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.896" }
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.990", %"class.blink::Member.828", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.995", i8, i32, %"class.blink::Color", %"class.absl::optional.997", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1002", %"class.blink::Member.1004", %"class.blink::Member.1004", %"class.std::__1::unique_ptr.1007", i32, [4 x i8], %"class.WTF::HashSet.1010", %"class.blink::Member.1017", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1019", %"class.blink::HeapHashSet.1026", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1034", i8, %"class.blink::Member.1040", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1052", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1066", i8, %"class.std::__1::unique_ptr.1072", %"class.std::__1::unique_ptr.1189", %"class.WTF::Vector.1195", i32, %class.scoped_refptr.1200, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1201", %"class.blink::Member.1203", %"class.blink::Member.1205", %"class.blink::HeapHashSet.1207", %"class.blink::HeapHashSet.1214", %"class.std::__1::unique_ptr.1221", %"class.std::__1::unique_ptr.1228", %"class.WTF::Vector.131" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %class.scoped_refptr.994*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.994 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.995" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.996", { i64, i64 } }
%"class.blink::WeakMember.996" = type { %"class.blink::MemberBase.901" }
%"class.absl::optional.997" = type { %"class.absl::optional_internal::optional_data.998" }
%"class.absl::optional_internal::optional_data.998" = type { %"class.absl::optional_internal::optional_data_base.999" }
%"class.absl::optional_internal::optional_data_base.999" = type { %"class.absl::optional_internal::optional_data_dtor_base.1000" }
%"class.absl::optional_internal::optional_data_dtor_base.1000" = type { i8, %union.anon.1001 }
%union.anon.1001 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::HeapHashSet.1006"* }
%"class.blink::HeapHashSet.1006" = type opaque
%"class.std::__1::unique_ptr.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"class.WTF::HashSet.1010"* }
%"class.WTF::HashSet.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1019" = type { %"class.WTF::HashSet.1022" }
%"class.WTF::HashSet.1022" = type { %"class.WTF::HashTable.1023" }
%"class.WTF::HashTable.1023" = type <{ %"class.blink::Member.1025"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1025" = type opaque
%"class.blink::HeapHashSet.1026" = type { %"class.WTF::HashSet.1029" }
%"class.WTF::HashSet.1029" = type { %"class.WTF::HashTable.1030" }
%"class.WTF::HashTable.1030" = type <{ %"class.blink::Member.1032"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1044", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"struct.WTF::KeyValuePair.1047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1047" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1048", i32, i32 }
%"class.WTF::Vector.1048" = type { %"class.WTF::VectorBuffer.1049" }
%"class.WTF::VectorBuffer.1049" = type { %"class.WTF::VectorBufferBase.1050" }
%"class.WTF::VectorBufferBase.1050" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1052" = type { %"class.WTF::LinkedHashSet.1055" }
%"class.WTF::LinkedHashSet.1055" = type { %"class.WTF::HashMap.1056", %"class.WTF::VectorBackedLinkedList.1060" }
%"class.WTF::HashMap.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"struct.WTF::KeyValuePair.1059"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1059" = type opaque
%"class.WTF::VectorBackedLinkedList.1060" = type { %"class.WTF::Vector.1061", i32, i32 }
%"class.WTF::Vector.1061" = type { %"class.WTF::VectorBuffer.1062" }
%"class.WTF::VectorBuffer.1062" = type { %"class.WTF::VectorBufferBase.1063" }
%"class.WTF::VectorBufferBase.1063" = type { %"class.WTF::VectorBackedLinkedListNode.1064"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1064" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1075, %class.scoped_refptr.1075, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1166", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1171", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1075 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1076", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1083" }
%"class.WTF::RefCounted.1076" = type { %"class.base::RefCounted.1077" }
%"class.base::RefCounted.1077" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1078", i32, [4 x i8] }>
%"class.WTF::Vector.1078" = type { %"class.WTF::VectorBuffer.1079" }
%"class.WTF::VectorBuffer.1079" = type { %"class.WTF::VectorBufferBase.1080" }
%"class.WTF::VectorBufferBase.1080" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1083" = type { %"class.WTF::VectorBuffer.1084" }
%"class.WTF::VectorBuffer.1084" = type { %"class.WTF::VectorBufferBase.1085" }
%"class.WTF::VectorBufferBase.1085" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1089", %"class.std::__1::unique_ptr.1138", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1086, %class.scoped_refptr.1087, %class.scoped_refptr.1088 }
%class.scoped_refptr.1086 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1102", i8, i8, %class.scoped_refptr.1086, i32, i32 }
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1087 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1257" }
%"class.blink::PaintPropertyNode.1257" = type { %"class.WTF::RefCounted.1258", i8, i8, %class.scoped_refptr.1087, i32, i32 }
%"class.WTF::RefCounted.1258" = type { %"class.base::RefCounted.1259" }
%"class.base::RefCounted.1259" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1088 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1254" }
%"class.blink::PaintPropertyNode.1254" = type { %"class.WTF::RefCounted.1255", i8, i8, %class.scoped_refptr.1088, i32, i32 }
%"class.WTF::RefCounted.1255" = type { %"class.base::RefCounted.1256" }
%"class.base::RefCounted.1256" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1092", %"class.WTF::Vector.1097", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1092" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.1094" }
%"class.WTF::VectorBufferBase.1094" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1097" = type { %"class.WTF::VectorBuffer.1098" }
%"class.WTF::VectorBuffer.1098" = type { %"class.WTF::VectorBufferBase.1099" }
%"class.WTF::VectorBufferBase.1099" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1117" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1110, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1111", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1104" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1110 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1239", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1239" = type { %"class.WTF::RefCounted.1240", i8, i8, %class.scoped_refptr.1110, i32, i32 }
%"class.WTF::RefCounted.1240" = type { %"class.base::RefCounted.1241" }
%"class.base::RefCounted.1241" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1242" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1242" = type { %"class.absl::optional_internal::optional_data.1243" }
%"class.absl::optional_internal::optional_data.1243" = type { %"class.absl::optional_internal::optional_data_base.1244" }
%"class.absl::optional_internal::optional_data_base.1244" = type { %"class.absl::optional_internal::optional_data_dtor_base.1245" }
%"class.absl::optional_internal::optional_data_dtor_base.1245" = type { i8, %union.anon.1246 }
%union.anon.1246 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1247", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1247" = type { %"class.std::__1::__vector_base.1248" }
%"class.std::__1::__vector_base.1248" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1249" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1120", %"class.std::__1::unique_ptr.1126", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1141", %"class.absl::optional.1141" }
%"class.absl::optional.1141" = type { %"class.absl::optional_internal::optional_data.1142" }
%"class.absl::optional_internal::optional_data.1142" = type { %"class.absl::optional_internal::optional_data_base.1143" }
%"class.absl::optional_internal::optional_data_base.1143" = type { %"class.absl::optional_internal::optional_data_dtor_base.1144" }
%"class.absl::optional_internal::optional_data_dtor_base.1144" = type { i8, [3 x i8], %union.anon.1145 }
%union.anon.1145 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1083"*, %"class.absl::optional.1151", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1151" = type { %"class.absl::optional_internal::optional_data.1152" }
%"class.absl::optional_internal::optional_data.1152" = type { %"class.absl::optional_internal::optional_data_base.1153" }
%"class.absl::optional_internal::optional_data_base.1153" = type { %"class.absl::optional_internal::optional_data_dtor_base.1154" }
%"class.absl::optional_internal::optional_data_dtor_base.1154" = type { i8, %union.anon.1155 }
%union.anon.1155 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1156", %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1156" = type { %"class.WTF::VectorBuffer.1157" }
%"class.WTF::VectorBuffer.1157" = type { %"class.WTF::VectorBufferBase.1158", [128 x i8] }
%"class.WTF::VectorBufferBase.1158" = type { i32*, i32, i32 }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163", [128 x i8] }
%"class.WTF::VectorBufferBase.1163" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1166" = type { %"class.WTF::VectorBuffer.1167" }
%"class.WTF::VectorBuffer.1167" = type { %"class.WTF::VectorBufferBase.1168" }
%"class.WTF::VectorBufferBase.1168" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"struct.WTF::KeyValuePair.1175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1175" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1176", %"class.WTF::Vector.1181" }
%"class.WTF::HashMap.1176" = type { %"class.WTF::HashTable.1177" }
%"class.WTF::HashTable.1177" = type <{ %"struct.WTF::KeyValuePair.1180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1180" = type opaque
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1195" = type { %"class.WTF::VectorBuffer.1196" }
%"class.WTF::VectorBuffer.1196" = type { %"class.WTF::VectorBufferBase.1197" }
%"class.WTF::VectorBufferBase.1197" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1200 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1206" }
%"class.blink::MemberBase.1206" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1207" = type { %"class.WTF::HashSet.1210" }
%"class.WTF::HashSet.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"class.blink::WeakMember.1213"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1213" = type opaque
%"class.blink::HeapHashSet.1214" = type { %"class.WTF::HashSet.1217" }
%"class.WTF::HashSet.1217" = type { %"class.WTF::HashTable.1218" }
%"class.WTF::HashTable.1218" = type <{ %"class.blink::WeakMember.1220"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1220" = type opaque
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1224" }
%"class.base::time_internal::TimeBase.1224" = type { i64 }
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1231", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1231" = type { %"class.absl::optional_internal::optional_data.1232" }
%"class.absl::optional_internal::optional_data.1232" = type { %"class.absl::optional_internal::optional_data_base.1233" }
%"class.absl::optional_internal::optional_data_base.1233" = type { %"class.absl::optional_internal::optional_data_dtor_base.1234" }
%"class.absl::optional_internal::optional_data_dtor_base.1234" = type { i8, %union.anon.1235 }
%union.anon.1235 = type { %"class.base::Time" }
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.912 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.927" }
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1373" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1281, %"class.std::__1::unique_ptr.731", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.745, i32 }>
%class.scoped_refptr.1281 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.745, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1339", %"class.absl::optional.1344", %"class.absl::optional.1298", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1364", i8, [7 x i8], %class.scoped_refptr.745, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.758" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.745, %"class.std::__1::unique_ptr.1282", %"class.absl::optional.1292", %"struct.std::__1::atomic.359", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1298", %"class.std::__1::unique_ptr.1303", i8, i64, %class.scoped_refptr.1336, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1338" }
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.745, i8, %"class.mojo::ScopedHandleBase.1285", %class.scoped_refptr.1286, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1287", i8*, %"class.base::WeakPtrFactory.1288" }
%"class.mojo::ScopedHandleBase.1285" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1286 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1287" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1288" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1292" = type { %"class.absl::optional_internal::optional_data.1293" }
%"class.absl::optional_internal::optional_data.1293" = type { %"class.absl::optional_internal::optional_data_base.1294" }
%"class.absl::optional_internal::optional_data_base.1294" = type { %"class.absl::optional_internal::optional_data_dtor_base.1295" }
%"class.absl::optional_internal::optional_data_dtor_base.1295" = type { i8, %union.anon.1296 }
%union.anon.1296 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1297", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1297" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1306", i8, i64, %class.scoped_refptr.1307, %class.scoped_refptr.1332 }
%"class.base::RepeatingCallback.1306" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1307 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1308", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1310", %"class.std::__1::map.1321", i8, [7 x i8] }>
%"class.base::RefCounted.1308" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1309 }
%class.scoped_refptr.1309 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1310" = type { %"class.std::__1::__tree.1311" }
%"class.std::__1::__tree.1311" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1312", %"class.std::__1::__compressed_pair.1316" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.1321" = type { %"class.std::__1::__tree.1322" }
%"class.std::__1::__tree.1322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1323", %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%class.scoped_refptr.1332 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1336 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1337 }
%class.scoped_refptr.1337 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1338" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1339" = type { %"class.absl::optional_internal::optional_data.1340" }
%"class.absl::optional_internal::optional_data.1340" = type { %"class.absl::optional_internal::optional_data_base.1341" }
%"class.absl::optional_internal::optional_data_base.1341" = type { %"class.absl::optional_internal::optional_data_dtor_base.1342" }
%"class.absl::optional_internal::optional_data_dtor_base.1342" = type { i8, %union.anon.1343 }
%union.anon.1343 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1344" = type { %"class.absl::optional_internal::optional_data.1345" }
%"class.absl::optional_internal::optional_data.1345" = type { %"class.absl::optional_internal::optional_data_base.1346" }
%"class.absl::optional_internal::optional_data_base.1346" = type { %"class.absl::optional_internal::optional_data_dtor_base.1347" }
%"class.absl::optional_internal::optional_data_dtor_base.1347" = type { i8, [7 x i8], %union.anon.1348 }
%union.anon.1348 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1298" = type { %"class.absl::optional_internal::optional_data.1299" }
%"class.absl::optional_internal::optional_data.1299" = type { %"class.absl::optional_internal::optional_data_base.1300" }
%"class.absl::optional_internal::optional_data_base.1300" = type { %"class.absl::optional_internal::optional_data_dtor_base.1301" }
%"class.absl::optional_internal::optional_data_dtor_base.1301" = type { i8, %union.anon.1302 }
%union.anon.1302 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1349 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1349 = type { %"class.std::__1::map.1352" }
%"class.std::__1::map.1352" = type { %"class.std::__1::__tree.1353" }
%"class.std::__1::__tree.1353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1354", %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1363"*, i64 }
%"class.std::__1::unique_ptr.1363" = type opaque
%"class.std::__1::map.1364" = type { %"class.std::__1::__tree.1365" }
%"class.std::__1::__tree.1365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1366", %"class.std::__1::__compressed_pair.1370" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1373" = type { %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.935" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.845" = type { %"class.absl::optional_internal::optional_data.846" }
%"class.absl::optional_internal::optional_data.846" = type { %"class.absl::optional_internal::optional_data_base.847" }
%"class.absl::optional_internal::optional_data_base.847" = type { %"class.absl::optional_internal::optional_data_dtor_base.848" }
%"class.absl::optional_internal::optional_data_dtor_base.848" = type { i8, %union.anon.849 }
%union.anon.849 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.948" }
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1381" }
%"class.mojo::AssociatedRemote.1381" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1382" }
%"class.mojo::internal::AssociatedInterfacePtrState.1382" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1383" }
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.950" = type { %"class.blink::Member.951" }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1391" }
%"class.mojo::AssociatedRemote.1391" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1392" }
%"class.mojo::internal::AssociatedInterfacePtrState.1392" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1393" }
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.953" }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.828", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1401" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.731" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1401" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.955" = type { %"class.blink::Member.956" }
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1404", %"class.blink::Member.828", %"class.mojo::AssociatedReceiver.1405" }
%"class.blink::ThreadState::PrefinalizerRegistration.1404" = type { i8 }
%"class.mojo::AssociatedReceiver.1405" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1406" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1406" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.958" }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1409", %"class.blink::Member.828", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1409" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1281, %"class.std::__1::unique_ptr.731", %"class.base::WeakPtrFactory.1410" }
%"class.base::WeakPtrFactory.1410" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.960" = type { %"class.blink::Member.961" }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1413", %"class.blink::Member.828", %"class.mojo::AssociatedReceiver.1414" }
%"class.blink::ThreadState::PrefinalizerRegistration.1413" = type { i8 }
%"class.mojo::AssociatedReceiver.1414" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1415" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1415" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::HeapHashMap.971"* }
%"class.blink::HeapHashMap.971" = type opaque
%"class.mojo::StructPtr.972" = type { %"class.std::__1::unique_ptr.973" }
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.976", %"class.mojo::InlinedStructPtr.977" }
%"class.mojo::InlinedStructPtr.976" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.977" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.983" = type { %"class.absl::optional_internal::optional_data.984" }
%"class.absl::optional_internal::optional_data.984" = type { %"class.absl::optional_internal::optional_data_base.985" }
%"class.absl::optional_internal::optional_data_base.985" = type { %"class.absl::optional_internal::optional_data_dtor_base.986" }
%"class.absl::optional_internal::optional_data_dtor_base.986" = type { i8, %union.anon.987 }
%union.anon.987 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@_ZN5blink17kMimeTypeTextHTMLE = external constant [0 x i8], align 1
@_ZN5blink20kMimeTypeTextURIListE = external constant [0 x i8], align 1
@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink8DragDataC1EPNS_10DataObjectERKNS_10FloatPointES5_NS_18DragOperationsMaskE = hidden unnamed_addr alias void (%"class.blink::DragData"*, %"class.blink::DataObject"*, %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"*, i32), void (%"class.blink::DragData"*, %"class.blink::DataObject"*, %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"*, i32)* @_ZN5blink8DragDataC2EPNS_10DataObjectERKNS_10FloatPointES5_NS_18DragOperationsMaskE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8DragDataC2EPNS_10DataObjectERKNS_10FloatPointES5_NS_18DragOperationsMaskE(%"class.blink::DragData"* nocapture, %"class.blink::DataObject"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.blink::FloatPoint"* %2 to i64*
  %7 = bitcast %"class.blink::DragData"* %0 to i64*
  %8 = load i64, i64* %6, align 4
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 1
  %10 = bitcast %"class.blink::FloatPoint"* %3 to i64*
  %11 = bitcast %"class.blink::FloatPoint"* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  store %"class.blink::DataObject"* %1, %"class.blink::DataObject"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 3
  store i32 %4, i32* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8DragData12ContainsHTMLEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::Vector.11", align 8
  %5 = bitcast %"class.WTF::Vector.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %7 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %6, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* nonnull sret %4, %"class.blink::DataObject"* %7) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %56, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.WTF::StringView"* %2 to i8*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  %20 = bitcast %"class.WTF::StringView"* %2 to i64*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = bitcast %"class.WTF::StringView"* %3 to i64*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %26

26:                                               ; preds = %46, %15
  %27 = phi %"class.WTF::String"* [ %9, %15 ], [ %47, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  store i8* null, i8** %18, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %32, i64* %20, align 8
  br label %37

33:                                               ; preds = %26
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %17, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %19, align 8
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi i32 [ %35, %33 ], [ 0, %31 ]
  store i32 %38, i32* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %39 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #11
  %40 = icmp ult i64 %39, 4294967296
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %37
  %43 = trunc i64 %39 to i32
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %44, i64* %23, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i8** %24, align 8
  store i32 %43, i32* %25, align 8
  %45 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %48 = icmp ult %"class.WTF::String"* %47, %13
  br i1 %48, label %26, label %56

49:                                               ; preds = %42
  %50 = ptrtoint %"class.WTF::String"* %27 to i64
  %51 = ptrtoint %"class.WTF::String"* %9 to i64
  %52 = sub i64 %50, %51
  %53 = lshr exact i64 %52, 3
  %54 = trunc i64 %53 to i32
  %55 = icmp ne i32 %54, -1
  br label %56

56:                                               ; preds = %46, %1, %49
  %57 = phi i1 [ %55, %49 ], [ false, %1 ], [ false, %46 ]
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %59 = icmp eq %"class.WTF::String"* %58, null
  br i1 %59, label %93, label %60, !prof !2

60:                                               ; preds = %56
  %61 = bitcast %"class.WTF::String"* %58 to i8*
  %62 = load i32, i32* %10, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64, !prof !3

64:                                               ; preds = %60
  %65 = zext i32 %62 to i64
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 %65
  br label %67

67:                                               ; preds = %85, %64
  %68 = phi %"class.WTF::String"* [ %86, %85 ], [ %58, %64 ]
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #10
  br label %85

85:                                               ; preds = %84, %81, %67
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 1
  %87 = icmp eq %"class.WTF::String"* %86, %66
  br i1 %87, label %88, label %67

88:                                               ; preds = %85
  store i32 0, i32* %10, align 4
  %89 = bitcast %"class.WTF::Vector.11"* %4 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %88, %60
  %92 = phi i8* [ %90, %88 ], [ %61, %60 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  br label %93

93:                                               ; preds = %56, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* sret, %"class.blink::DataObject"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8DragData11ContainsURLENS0_24FilenameConversionPolicyE(%"class.blink::DragData"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::Vector.11", align 8
  %6 = bitcast %"class.WTF::Vector.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %8 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %7, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* nonnull sret %5, %"class.blink::DataObject"* %8) #10
  %9 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %5, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %57, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  %21 = bitcast %"class.WTF::StringView"* %3 to i64*
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %23 = bitcast %"class.WTF::StringView"* %4 to i8*
  %24 = bitcast %"class.WTF::StringView"* %4 to i64*
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %27

27:                                               ; preds = %47, %16
  %28 = phi %"class.WTF::String"* [ %10, %16 ], [ %48, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  store i8* null, i8** %19, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %33, i64* %21, align 8
  br label %38

34:                                               ; preds = %27
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %18, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %20, align 8
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i32 [ %36, %34 ], [ 0, %32 ]
  store i32 %39, i32* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %40 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #11
  %41 = icmp ult i64 %40, 4294967296
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38
  call void @llvm.trap() #10
  unreachable

43:                                               ; preds = %38
  %44 = trunc i64 %40 to i32
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %45, i64* %24, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i8** %25, align 8
  store i32 %44, i32* %26, align 8
  %46 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 1
  %49 = icmp ult %"class.WTF::String"* %48, %14
  br i1 %49, label %27, label %57

50:                                               ; preds = %43
  %51 = ptrtoint %"class.WTF::String"* %28 to i64
  %52 = ptrtoint %"class.WTF::String"* %10 to i64
  %53 = sub i64 %51, %52
  %54 = lshr exact i64 %53, 3
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %62

57:                                               ; preds = %47, %50, %2
  %58 = icmp eq i32 %1, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %57
  %60 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %7, align 8
  %61 = call zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"* %60) #10
  br label %62

62:                                               ; preds = %50, %57, %59
  %63 = phi i1 [ true, %50 ], [ false, %57 ], [ %61, %59 ]
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %99, label %66, !prof !2

66:                                               ; preds = %62
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = load i32, i32* %11, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %97, label %70, !prof !3

70:                                               ; preds = %66
  %71 = zext i32 %68 to i64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %71
  br label %73

73:                                               ; preds = %91, %70
  %74 = phi %"class.WTF::String"* [ %92, %91 ], [ %64, %70 ]
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %90, %87, %73
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 1
  %93 = icmp eq %"class.WTF::String"* %92, %72
  br i1 %93, label %94, label %73

94:                                               ; preds = %91
  store i32 0, i32* %11, align 4
  %95 = bitcast %"class.WTF::Vector.11"* %5 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %66
  %98 = phi i8* [ %96, %94 ], [ %67, %66 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %98) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %9, align 8
  br label %99

99:                                               ; preds = %62, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret i1 %63
}

declare zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8DragData5AsURLENS0_24FilenameConversionPolicyEPN3WTF6StringE(%"class.blink::DragData"* nocapture readonly, i32, %"class.WTF::String"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::Vector.11", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::Vector.11", align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::Vector.11"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %13 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* nonnull sret %7, %"class.blink::DataObject"* %13) #10
  %14 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %7, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.WTF::StringView"* %4 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %28 = bitcast %"class.WTF::StringView"* %5 to i8*
  %29 = bitcast %"class.WTF::StringView"* %5 to i64*
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %32

32:                                               ; preds = %52, %21
  %33 = phi %"class.WTF::String"* [ %15, %21 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  store i8* null, i8** %24, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %38, i64* %26, align 8
  br label %43

39:                                               ; preds = %32
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %23, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %25, align 8
  br label %43

43:                                               ; preds = %39, %37
  %44 = phi i32 [ %41, %39 ], [ 0, %37 ]
  store i32 %44, i32* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %45 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #11
  %46 = icmp ult i64 %45, 4294967296
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %43
  call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %43
  %49 = trunc i64 %45 to i32
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %50, i64* %29, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i8** %30, align 8
  store i32 %49, i32* %31, align 8
  %51 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 1
  %54 = icmp ult %"class.WTF::String"* %53, %19
  br i1 %54, label %32, label %62

55:                                               ; preds = %48
  %56 = ptrtoint %"class.WTF::String"* %33 to i64
  %57 = ptrtoint %"class.WTF::String"* %15 to i64
  %58 = sub i64 %56, %57
  %59 = lshr exact i64 %58, 3
  %60 = trunc i64 %59 to i32
  %61 = icmp ne i32 %60, -1
  br label %62

62:                                               ; preds = %52, %3, %55
  %63 = phi i1 [ %61, %55 ], [ false, %3 ], [ false, %52 ]
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %99, label %66, !prof !2

66:                                               ; preds = %62
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = load i32, i32* %16, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %97, label %70, !prof !3

70:                                               ; preds = %66
  %71 = zext i32 %68 to i64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %71
  br label %73

73:                                               ; preds = %91, %70
  %74 = phi %"class.WTF::String"* [ %92, %91 ], [ %64, %70 ]
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %90, %87, %73
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 1
  %93 = icmp eq %"class.WTF::String"* %92, %72
  br i1 %93, label %94, label %73

94:                                               ; preds = %91
  store i32 0, i32* %16, align 4
  %95 = bitcast %"class.WTF::Vector.11"* %7 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %66
  %98 = phi i8* [ %96, %94 ], [ %67, %66 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %98) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %99

99:                                               ; preds = %62, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  br i1 %63, label %100, label %102

100:                                              ; preds = %99
  %101 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  call void @_ZNK5blink10DataObject11UrlAndTitleERN3WTF6StringEPS2_(%"class.blink::DataObject"* %101, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* %2) #10
  br label %189

102:                                              ; preds = %99
  %103 = icmp eq i32 %1, 1
  br i1 %103, label %104, label %189

104:                                              ; preds = %102
  %105 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  %106 = call zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"* %105) #10
  br i1 %106, label %107, label %189

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %108) #10
  %109 = bitcast %"class.WTF::Vector.11"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #10
  %110 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  call void @_ZNK5blink10DataObject9FilenamesEv(%"class.WTF::Vector.11"* nonnull sret %9, %"class.blink::DataObject"* %110) #10
  %111 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.11"* nonnull %9, i32 0) #10
  call void @_ZN5blink13FilePathToURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %8, %"class.WTF::String"* dereferenceable(8) %111) #10
  %112 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i33
  %124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #10
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !3

129:                                              ; preds = %120
  call void @llvm.trap() #10
  unreachable

130:                                              ; preds = %120
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %121, align 4
  br label %132

132:                                              ; preds = %130, %115, %107
  %133 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %134 = bitcast %"class.WTF::String"* %6 to i64*
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %133, i64* %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #10
  br label %150

150:                                              ; preds = %132, %146, %149
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #10
  %151 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %9, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::String"*, %"class.WTF::String"** %151, align 8
  %153 = icmp eq %"class.WTF::String"* %152, null
  br i1 %153, label %188, label %154, !prof !2

154:                                              ; preds = %150
  %155 = bitcast %"class.WTF::String"* %152 to i8*
  %156 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %9, i64 0, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %186, label %159, !prof !3

159:                                              ; preds = %154
  %160 = zext i32 %157 to i64
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 %160
  br label %162

162:                                              ; preds = %180, %159
  %163 = phi %"class.WTF::String"* [ %181, %180 ], [ %152, %159 ]
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #10
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 1
  %182 = icmp eq %"class.WTF::String"* %181, %161
  br i1 %182, label %183, label %162

183:                                              ; preds = %180
  store i32 0, i32* %156, align 4
  %184 = bitcast %"class.WTF::Vector.11"* %9 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %154
  %187 = phi i8* [ %185, %183 ], [ %155, %154 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %151, align 8
  br label %188

188:                                              ; preds = %150, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %108) #10
  br label %189

189:                                              ; preds = %100, %188, %104, %102
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %190
}

declare void @_ZNK5blink10DataObject11UrlAndTitleERN3WTF6StringEPS2_(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8DragData13ContainsFilesEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %3 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"* %3) #10
  ret i1 %4
}

declare void @_ZN5blink13FilePathToURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK5blink10DataObject9FilenamesEv(%"class.WTF::Vector.11"* sret, %"class.blink::DataObject"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink8DragData12GetModifiersEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %3 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8DragData11AsFilePathsERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::DragData"* nocapture readonly, %"class.WTF::Vector.11"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::Vector.11", align 8
  %4 = bitcast %"class.WTF::Vector.11"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %6 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %5, align 8
  call void @_ZNK5blink10DataObject9FilenamesEv(%"class.WTF::Vector.11"* nonnull sret %3, %"class.blink::DataObject"* %6) #10
  %7 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %3, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %1, i64 0, i32 0, i32 0, i32 0
  br label %52

14:                                               ; preds = %95, %2
  %15 = phi i32 [ 0, %2 ], [ %97, %95 ]
  %16 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = icmp eq %"class.WTF::String"* %17, null
  br i1 %18, label %51, label %19, !prof !2

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::String"* %17 to i8*
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %49, label %22, !prof !3

22:                                               ; preds = %19
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 %23
  br label %25

25:                                               ; preds = %43, %22
  %26 = phi %"class.WTF::String"* [ %44, %43 ], [ %17, %22 ]
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %42, %39, %25
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 1
  %45 = icmp eq %"class.WTF::String"* %44, %24
  br i1 %45, label %46, label %25

46:                                               ; preds = %43
  store i32 0, i32* %7, align 4
  %47 = bitcast %"class.WTF::Vector.11"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %19
  %50 = phi i8* [ %48, %46 ], [ %20, %19 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %51

51:                                               ; preds = %14, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret void

52:                                               ; preds = %10, %95
  %53 = phi i32 [ 0, %10 ], [ %96, %95 ]
  %54 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.11"* nonnull %3, i32 %53) #10
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %95, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %95, label %62

62:                                               ; preds = %58
  %63 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.11"* nonnull %3, i32 %53) #10
  %64 = load i32, i32* %11, align 4
  %65 = load i32, i32* %12, align 8
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %94, label %67, !prof !3

67:                                               ; preds = %62
  %68 = load %"class.WTF::String"*, %"class.WTF::String"** %13, align 8
  %69 = zext i32 %64 to i64
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 %69, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #10
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  call void @llvm.trap() #10
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %67
  %92 = load i32, i32* %11, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %11, align 4
  br label %95

94:                                               ; preds = %62
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.11"* %1, %"class.WTF::String"* dereferenceable(8) %63) #10
  br label %95

95:                                               ; preds = %52, %94, %91, %58
  %96 = add nuw i32 %53, 1
  %97 = load i32, i32* %7, align 4
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %52, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8DragData13NumberOfFilesEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::Vector.11", align 8
  %3 = bitcast %"class.WTF::Vector.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %5 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %4, align 8
  call void @_ZNK5blink10DataObject9FilenamesEv(%"class.WTF::Vector.11"* nonnull sret %2, %"class.blink::DataObject"* %5) #10
  %6 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %2, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %10 = icmp eq %"class.WTF::String"* %9, null
  br i1 %10, label %43, label %11, !prof !2

11:                                               ; preds = %1
  %12 = bitcast %"class.WTF::String"* %9 to i8*
  %13 = icmp eq i32 %7, 0
  br i1 %13, label %41, label %14, !prof !3

14:                                               ; preds = %11
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 %15
  br label %17

17:                                               ; preds = %35, %14
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %9, %14 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %16
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 0, i32* %6, align 4
  %39 = bitcast %"class.WTF::Vector.11"* %2 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %11
  %42 = phi i8* [ %40, %38 ], [ %12, %11 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  br label %43

43:                                               ; preds = %1, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8DragData17ContainsPlainTextEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::Vector.11", align 8
  %5 = bitcast %"class.WTF::Vector.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %7 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %6, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* nonnull sret %4, %"class.blink::DataObject"* %7) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %56, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.WTF::StringView"* %2 to i8*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  %20 = bitcast %"class.WTF::StringView"* %2 to i64*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = bitcast %"class.WTF::StringView"* %3 to i64*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %26

26:                                               ; preds = %46, %15
  %27 = phi %"class.WTF::String"* [ %9, %15 ], [ %47, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  store i8* null, i8** %18, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %32, i64* %20, align 8
  br label %37

33:                                               ; preds = %26
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %17, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %19, align 8
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi i32 [ %35, %33 ], [ 0, %31 ]
  store i32 %38, i32* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %39 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #11
  %40 = icmp ult i64 %39, 4294967296
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %37
  %43 = trunc i64 %39 to i32
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %44, i64* %23, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %24, align 8
  store i32 %43, i32* %25, align 8
  %45 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %48 = icmp ult %"class.WTF::String"* %47, %13
  br i1 %48, label %26, label %56

49:                                               ; preds = %42
  %50 = ptrtoint %"class.WTF::String"* %27 to i64
  %51 = ptrtoint %"class.WTF::String"* %9 to i64
  %52 = sub i64 %50, %51
  %53 = lshr exact i64 %52, 3
  %54 = trunc i64 %53 to i32
  %55 = icmp ne i32 %54, -1
  br label %56

56:                                               ; preds = %46, %1, %49
  %57 = phi i1 [ %55, %49 ], [ false, %1 ], [ false, %46 ]
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %59 = icmp eq %"class.WTF::String"* %58, null
  br i1 %59, label %93, label %60, !prof !2

60:                                               ; preds = %56
  %61 = bitcast %"class.WTF::String"* %58 to i8*
  %62 = load i32, i32* %10, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64, !prof !3

64:                                               ; preds = %60
  %65 = zext i32 %62 to i64
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 %65
  br label %67

67:                                               ; preds = %85, %64
  %68 = phi %"class.WTF::String"* [ %86, %85 ], [ %58, %64 ]
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #10
  br label %85

85:                                               ; preds = %84, %81, %67
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 1
  %87 = icmp eq %"class.WTF::String"* %86, %66
  br i1 %87, label %88, label %67

88:                                               ; preds = %85
  store i32 0, i32* %10, align 4
  %89 = bitcast %"class.WTF::Vector.11"* %4 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %88, %60
  %92 = phi i8* [ %90, %88 ], [ %61, %60 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  br label %93

93:                                               ; preds = %56, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8DragData11AsPlainTextEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %4 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i64 %6) #10
  %7 = call %"class.WTF::StringImpl"* @_ZNK5blink10DataObject7GetDataERKN3WTF6StringE(%"class.blink::DataObject"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %2) #10
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #10
  br label %24

24:                                               ; preds = %1, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret %"class.WTF::StringImpl"* %7
}

declare %"class.WTF::StringImpl"* @_ZNK5blink10DataObject7GetDataERKN3WTF6StringE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8DragData15CanSmartReplaceEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::Vector.11", align 8
  %7 = alloca %"class.WTF::Vector.11", align 8
  %8 = bitcast %"class.WTF::Vector.11"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %10 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %9, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* nonnull sret %6, %"class.blink::DataObject"* %10) #10
  %11 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %6, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %148, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  %23 = bitcast %"class.WTF::StringView"* %4 to i64*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %5 to i8*
  %26 = bitcast %"class.WTF::StringView"* %5 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %29

29:                                               ; preds = %49, %18
  %30 = phi %"class.WTF::String"* [ %12, %18 ], [ %50, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i8* null, i8** %21, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %35, i64* %23, align 8
  br label %40

36:                                               ; preds = %29
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %20, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %22, align 8
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi i32 [ %38, %36 ], [ 0, %34 ]
  store i32 %41, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %42 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #11
  %43 = icmp ult i64 %42, 4294967296
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %40
  %46 = trunc i64 %42 to i32
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %47, i64* %26, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %27, align 8
  store i32 %46, i32* %28, align 8
  %48 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 1
  %51 = icmp ult %"class.WTF::String"* %50, %16
  br i1 %51, label %29, label %148

52:                                               ; preds = %45
  %53 = ptrtoint %"class.WTF::String"* %30 to i64
  %54 = ptrtoint %"class.WTF::String"* %12 to i64
  %55 = sub i64 %53, %54
  %56 = lshr exact i64 %55, 3
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %148, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.WTF::Vector.11"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #10
  %61 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %9, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.11"* nonnull sret %7, %"class.blink::DataObject"* %61) #10
  %62 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %7, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %7, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %110, label %69

69:                                               ; preds = %59
  %70 = bitcast %"class.WTF::StringView"* %2 to i8*
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %73 = bitcast i8** %72 to %"class.WTF::StringImpl"**
  %74 = bitcast %"class.WTF::StringView"* %2 to i64*
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %76 = bitcast %"class.WTF::StringView"* %3 to i8*
  %77 = bitcast %"class.WTF::StringView"* %3 to i64*
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %80

80:                                               ; preds = %100, %69
  %81 = phi %"class.WTF::String"* [ %63, %69 ], [ %101, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  store i8* null, i8** %72, align 8
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %86, i64* %74, align 8
  br label %91

87:                                               ; preds = %80
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %71, align 8
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %73, align 8
  br label %91

91:                                               ; preds = %87, %85
  %92 = phi i32 [ %89, %87 ], [ 0, %85 ]
  store i32 %92, i32* %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #10
  %93 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #11
  %94 = icmp ult i64 %93, 4294967296
  br i1 %94, label %96, label %95, !prof !2

95:                                               ; preds = %91
  call void @llvm.trap() #10
  unreachable

96:                                               ; preds = %91
  %97 = trunc i64 %93 to i32
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %98, i64* %77, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i8** %78, align 8
  store i32 %97, i32* %79, align 8
  %99 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 1
  %102 = icmp ult %"class.WTF::String"* %101, %67
  br i1 %102, label %80, label %110

103:                                              ; preds = %96
  %104 = ptrtoint %"class.WTF::String"* %81 to i64
  %105 = ptrtoint %"class.WTF::String"* %63 to i64
  %106 = sub i64 %104, %105
  %107 = lshr exact i64 %106, 3
  %108 = trunc i64 %107 to i32
  %109 = icmp eq i32 %108, -1
  br label %110

110:                                              ; preds = %100, %59, %103
  %111 = phi i1 [ %109, %103 ], [ true, %59 ], [ true, %100 ]
  %112 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8
  %113 = icmp eq %"class.WTF::String"* %112, null
  br i1 %113, label %147, label %114, !prof !2

114:                                              ; preds = %110
  %115 = bitcast %"class.WTF::String"* %112 to i8*
  %116 = load i32, i32* %64, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %145, label %118, !prof !3

118:                                              ; preds = %114
  %119 = zext i32 %116 to i64
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 %119
  br label %121

121:                                              ; preds = %139, %118
  %122 = phi %"class.WTF::String"* [ %140, %139 ], [ %112, %118 ]
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #10
  br label %139

139:                                              ; preds = %138, %135, %121
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 1
  %141 = icmp eq %"class.WTF::String"* %140, %120
  br i1 %141, label %142, label %121

142:                                              ; preds = %139
  store i32 0, i32* %64, align 4
  %143 = bitcast %"class.WTF::Vector.11"* %7 to i8**
  %144 = load i8*, i8** %143, align 8
  br label %145

145:                                              ; preds = %142, %114
  %146 = phi i8* [ %144, %142 ], [ %115, %114 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %146) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %62, align 8
  br label %147

147:                                              ; preds = %110, %145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #10
  br label %148

148:                                              ; preds = %49, %52, %1, %147
  %149 = phi i1 [ %111, %147 ], [ false, %52 ], [ false, %1 ], [ false, %49 ]
  %150 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %151 = icmp eq %"class.WTF::String"* %150, null
  br i1 %151, label %185, label %152, !prof !2

152:                                              ; preds = %148
  %153 = bitcast %"class.WTF::String"* %150 to i8*
  %154 = load i32, i32* %13, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %183, label %156, !prof !3

156:                                              ; preds = %152
  %157 = zext i32 %154 to i64
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %150, i64 %157
  br label %159

159:                                              ; preds = %177, %156
  %160 = phi %"class.WTF::String"* [ %178, %177 ], [ %150, %156 ]
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #10
  br label %177

177:                                              ; preds = %176, %173, %159
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %160, i64 1
  %179 = icmp eq %"class.WTF::String"* %178, %158
  br i1 %179, label %180, label %159

180:                                              ; preds = %177
  store i32 0, i32* %13, align 4
  %181 = bitcast %"class.WTF::Vector.11"* %6 to i8**
  %182 = load i8*, i8** %181, align 8
  br label %183

183:                                              ; preds = %180, %152
  %184 = phi i8* [ %182, %180 ], [ %153, %152 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %184) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %11, align 8
  br label %185

185:                                              ; preds = %148, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret i1 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8DragData25ContainsCompatibleContentEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink8DragData17ContainsPlainTextEv(%"class.blink::DragData"* %0)
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZNK5blink8DragData11ContainsURLENS0_24FilenameConversionPolicyE(%"class.blink::DragData"* %0, i32 1)
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZNK5blink8DragData12ContainsHTMLEv(%"class.blink::DragData"* %0)
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %9 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"* %9) #10
  br label %11

11:                                               ; preds = %7, %5, %3, %1
  %12 = phi i1 [ true, %5 ], [ true, %3 ], [ true, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZNK5blink8DragData10AsFragmentEPNS_10LocalFrameE(%"class.blink::DragData"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %6 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"* %6) #10
  %8 = tail call zeroext i1 @_ZNK5blink8DragData12ContainsHTMLEv(%"class.blink::DragData"* %0)
  br i1 %8, label %9, label %34

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #10
  %13 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %5, align 8
  call void @_ZNK5blink10DataObject14HtmlAndBaseURLERN3WTF6StringERNS_4KURLE(%"class.blink::DataObject"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #10
  %14 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #10
  %15 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 4
  %16 = call %"class.blink::DocumentFragment"* @_ZN5blink24CreateFragmentFromMarkupERNS_8DocumentERKN3WTF6StringES5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848) %14, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %15, i32 0) #10
  %17 = icmp eq %"class.blink::DocumentFragment"* %16, null
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #10
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %9, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br i1 %17, label %34, label %35

34:                                               ; preds = %33, %2
  br label %35

35:                                               ; preds = %33, %34
  %36 = phi %"class.blink::DocumentFragment"* [ null, %34 ], [ %16, %33 ]
  ret %"class.blink::DocumentFragment"* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK5blink10DataObject14HtmlAndBaseURLERN3WTF6StringERNS_4KURLE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare %"class.blink::DocumentFragment"* @_ZN5blink24CreateFragmentFromMarkupERNS_8DocumentERKN3WTF6StringES5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #3

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8DragData19DroppedFileSystemIdEv(%"class.blink::DragData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DragData", %"class.blink::DragData"* %0, i64 0, i32 2
  %3 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %3, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.11"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.11"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.11"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.11", %"class.WTF::Vector.11"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.11"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.11"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
